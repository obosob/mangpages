.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Mike Haardt
.\"             n' Copyright (C) 1993,1994 Ian Jackson.
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Yo ass may distribute it under tha termz of tha GNU General
.\" Public License. Well shiiiit, it comes wit NO WARRANTY.
.\" %%%LICENSE_END
.\"
.TH MKDIR 2 2013-01-27 "Linux" "Linux Programmerz Manual"
.SH NAME
mkdir \- create a gangbangin' finger-lickin' directory
.SH SYNOPSIS
.nf
.B #include <sys/stat.h>
.B #include <sys/types.h>
.\" .B #include <unistd.h>
.sp
.BI "int mkdir(const char *" pathname ", mode_t " mode );
.fi
.SH DESCRIPTION
.BR mkdir ()
attempts ta create a gangbangin' finger-lickin' directory named
.IR pathname .

Da argument
.I mode
specifies tha permissions ta use.
It be modified by tha process's
.I umask
in tha usual way: tha permissionz of tha pimped directory are
.RI ( mode " & ~" umask " & 0777)."
Other mode bitz of tha pimped directory depend on tha operatin system.
For Linux, peep below.

Da newly pimped directory is ghon be owned by tha effectizzle user ID of the
process.
If tha directory containin tha file has tha set-group-ID
bit set, or if tha file system is mounted wit BSD crew semantics
.RI ( "mount -o bsdgroups"
or, synonymously
.IR "mount -o grpid" ),
the freshly smoked up directory will inherit tha crew ballershizzle from its parent;
otherwise it is ghon be owned by tha effectizzle crew ID of tha process.

If tha parent directory has tha set-group-ID bit set then so will the
newly pimped directory.
.SH RETURN VALUE
.BR mkdir ()
returns zero on success, or \-1 if a error occurred (in which case,
.I errno
is set appropriately).
.SH ERRORS
.TP
.B EACCES
Da parent directory do not allow write permission ta tha process,
or one of tha directories in
.I pathname
did not allow search permission.
(See also
.BR path_resolution (7).)
.TP
.B EDQUOT
Da userz quota of disk blocks or inodes on tha file system has been
exhausted.
.TP
.B EEXIST
.I pathname
already exists (not necessarily as a gangbangin' finger-lickin' directory).
This includes tha case where
.I pathname
is a symbolic link, danglin or not.
.TP
.B EFAULT
.IR pathname " points outside yo' accessible address space."
.TP
.B ELOOP
Too nuff symbolic links was encountered up in resolving
.IR pathname .
.TP
.B EMLINK
Da number of links ta tha parent directory would exceed
.BR LINK_MAX .
.TP
.B ENAMETOOLONG
.IR pathname " was too long."
.TP
.B ENOENT
A directory component in
.I pathname
does not exist or be a thugged-out danglin symbolic link.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOSPC
Da thang containing
.I pathname
has no room fo' tha freshly smoked up directory.
.TP
.B ENOSPC
Da freshly smoked up directory cannot be pimped cuz tha userz disk quota is
exhausted.
.TP
.B ENOTDIR
A component used as a gangbangin' finger-lickin' directory in
.I pathname
is not, up in fact, a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da file system containing
.I pathname
does not support tha creation of directories.
.TP
.B EROFS
.I pathname
refers ta a gangbangin' file on a read-only file system.
.SH CONFORMING TO
SVr4, BSD, POSIX.1-2001.
.\" SVr4 documents additionizzle EIO, EMULTIHOP
.SH NOTES
Under Linux apart from tha permission bits, only the
.B S_ISVTX
mode bit is honored.
That is, under Linux tha pimped directory straight-up gets mode
.RI ( mode " & ~" umask " & 01777)."
See also
.BR stat (2).
.PP
There is nuff infelicitizzles up in tha protocol underlyin NFS.
Some of these affect
.BR mkdir ().
.SH SEE ALSO
.BR mkdir (1),
.BR chmod (2),
.BR chown (2),
.BR mkdirat (2),
.BR mknod (2),
.BR mount (2),
.BR rmdir (2),
.BR stat (2),
.BR umask (2),
.BR unlink (2),
.BR path_resolution (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
