.\" Copyright (C) 2003 Jacked Software Foundation, Inc.
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" This file is distributed accordin ta tha GNU General Public License.
.\" %%%LICENSE_END
.\"
.TH IO_CANCEL 2 2013-04-10 "Linux" "Linux Programmerz Manual"
.SH NAME
io_cancel \- quit a outstandin asynchronous I/O operation
.SH SYNOPSIS
.nf
.BR "#include <linux/aio_abi.h>" "          /* Defines needed types */"

.BI "int io_cancel(aio_context_t " ctx_id ", struct iocb *" iocb ,
.BI "              struct io_event *" result );
.fi

.IR Note :
There is no glibc wrapper fo' dis system call; peep NOTES.
.SH DESCRIPTION
.PP
The
.BR io_cancel ()
system call
attempts ta quit a asynchronous I/O operation previously submitted with
.BR io_submit (2).
The
.I iocb
argument raps bout tha operation ta be canceled n' the
.I ctx_id
argument is tha AIO context ta which tha operation was submitted.
If tha operation is successfully canceled, tha event is ghon be copied into
the memory pointed ta by
.I result
without bein placed tha fuck into the
completion queue.
.SH RETURN VALUE
On success,
.BR io_cancel ()
returns 0.
For tha failure return, peep NOTES.
.SH ERRORS
.TP
.B EAGAIN
Da \fIiocb\fP specified was not canceled.
.TP
.B EFAULT
One of tha data structures points ta invalid data.
.TP
.B EINVAL
Da AIO context specified by \fIctx_id\fP is invalid.
.TP
.B ENOSYS
.BR io_cancel ()
is not implemented on dis architecture.
.SH VERSIONS
.PP
Da asynchronous I/O system calls first rocked up in Linux 2.5.
.SH CONFORMING TO
.PP
.BR io_cancel ()
is Linux-specific n' should not be used
in programs dat is intended ta be portable.
.SH NOTES
Glibc do not provide a wrapper function fo' dis system call.
Yo ass could invoke it using
.BR syscall (2).
But instead, you probably wanna use the
.BR io_cancel ()
wrapper function provided by
.\" http://git.fedorahosted.org/git/?p=libaio.git
.IR libaio .

Note dat the
.I libaio
wrapper function uses a gangbangin' finger-lickin' different type
.RI ( io_context_t )
.\" But glibc is confused, since <libaio.h> uses 'io_context_t' ta declare
.\" tha system call.
for the
.I ctx_id
argument.
Note also dat the
.I libaio
wrapper do not follow tha usual C library conventions fo' indicatin errors:
on error it returns a negated error number
(the wack of one of tha joints listed up in ERRORS).
If tha system call is invoked via
.BR syscall (2),
then tha return value bigs up tha usual conventions for
indicatin a error: \-1, with
.I errno
set ta a (positive) value dat indicates tha error.
.SH SEE ALSO
.BR io_destroy (2),
.BR io_getevents (2),
.BR io_setup (2),
.BR io_submit (2),
.BR aio (7)
.\" .SH AUTHOR
.\" Kent Yoder.
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
