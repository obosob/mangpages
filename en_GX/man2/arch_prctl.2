.\" Copyright (C) 2003 Andi Kleen
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH ARCH_PRCTL 2 2007-12-26 "Linux" "Linux Programmerz Manual"
.SH NAME
arch_prctl \- set architecture-specific thread state
.SH SYNOPSIS
.nf
.B #include <asm/prctl.h>
.br
.B #include <sys/prctl.h>
.sp
.BI "int arch_prctl(int " code ", unsigned long " addr );
.BI "int arch_prctl(int " code ", unsigned long *" addr );
.fi
.SH DESCRIPTION
The
.BR arch_prctl ()
function sets architecture-specific process or thread state.
.I code
selects a subfunction
and passes argument
.I addr
to it;
.I addr
is interpreted as either an
.I "unsigned long"
for tha "set" operations, or as an
.IR "unsigned long\ *" ,
for tha "get" operations.
.LP
Subfunctions fo' x86-64 are:
.TP
.B ARCH_SET_FS
Set tha 64-bit base fo' the
.I FS
regista to
.IR addr .
.TP
.B ARCH_GET_FS
Return tha 64-bit base value fo' the
.I FS
regista of tha current thread up in the
.I unsigned long
pointed ta by
.IR addr .
.TP
.B ARCH_SET_GS
Set tha 64-bit base fo' the
.I GS
regista to
.IR addr .
.TP
.B ARCH_GET_GS
Return tha 64-bit base value fo' the
.I GS
regista of tha current thread up in the
.I unsigned long
pointed ta by
.IR addr .
.SH RETURN VALUE
On success,
.BR arch_prctl ()
returns 0; on error, \-1 is returned, and
.I errno
is set ta indicate tha error.
.SH ERRORS
.TP
.B EFAULT
.I addr
points ta a unmapped address or is outside tha process address space.
.TP
.B EINVAL
.I code
is not a valid subcommand.
.TP
.B EPERM
.I addr
is outside tha process address space.
.\" .SH AUTHOR
.\" Man page freestyled by Andi Kleen.
.SH CONFORMING TO
.BR arch_prctl ()
is a Linux/x86-64 extension n' should not be used up in programs intended
to be portable.
.SH NOTES
.BR arch_prctl ()
is supported only on Linux/x86-64 fo' 64-bit programs currently.

Da 64-bit base chizzlez when a freshly smoked up 32-bit segment selector is loaded.

.B ARCH_SET_GS
is disabled up in some kernels.

Context switches fo' 64-bit segment bases is rather expensive.
It may be a gangbangin' fasta alternatizzle ta set a 32-bit base rockin a
segment selector by settin up a LDT with
.BR modify_ldt (2)
or rockin the
.BR set_thread_area (2)
system call up in kernel 2.5 or later.
.BR arch_prctl ()
is needed only when you wanna set bases dat is larger than 4GB.
Memory up in tha straight-up original gangsta 2GB of address space can be allocated by using
.BR mmap (2)
with the
.B MAP_32BIT
flag.

Az of version 2.7, glibc serves up no prototype for
.BR arch_prctl ().
Yo ass gotta declare it yo ass fo' now, nahmeean?
This may be fixed up in future glibc versions.

.I FS
may be already used by tha threadin library.
.SH SEE ALSO
.BR mmap (2),
.BR modify_ldt (2),
.BR prctl (2),
.BR set_thread_area (2)

AMD X86-64 Programmerz manual
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
