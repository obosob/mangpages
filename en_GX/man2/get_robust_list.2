.\" Copyright (C) 2006 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Ivana Varekova <varekova@redhat.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" FIXME Somethang could be added ta dis page (or exit(2))
.\"       bout exit_robust_list processing
.\"
.TH GET_ROBUST_LIST 2 2012-07-13 Linux "Linux System Calls"
.SH NAME
get_robust_list, set_robust_list \- get/set list of robust futexes
.SH SYNOPSIS
.nf
.B #include <linux/futex.h>
.B #include <syscall.h>
.sp
.BI "long get_robust_list(int " pid ", struct robust_list_head **" head_ptr ,
.BI "			  size_t *" len_ptr );
.BI "long set_robust_list(struct robust_list_head *" head ", size_t " len );
.fi

.IR Note :
There is no glibc wrappers fo' these system calls; peep NOTES.
.SH DESCRIPTION
Da robust futex implementation need ta maintain per-thread listz of robust
futexes which is unlocked when tha thread exits.
These lists is managed up in user space; tha kernel is notified bout only
the location of tha head of tha list.

The
.BR get_robust_list ()
system call returns tha head of tha robust futex list of tha thread
whose thread ID is specified in
.IR pid .
If
.I pid
is 0,
the head of tha list fo' tha callin thread is returned.
Da list head is stored up in tha location pointed ta by
.IR head_ptr .
Da size of tha object pointed ta by
.I **head_ptr
is stored in
.IR len_ptr .

The
.BR set_robust_list ()
system call requests tha kernel ta record tha head of tha list of
robust futexes owned by tha callin thread.
The
.I head
argument is tha list head ta record.
The
.I len
argument should be
.IR sizeof(*head) .
.SH RETURN VALUE
The
.BR set_robust_list ()
and
.BR get_robust_list ()
system calls return zero when tha operation is successful,
an error code otherwise.
.SH ERRORS
The
.BR set_robust_list ()
system call can fail wit tha followin error:
.TP
.B EINVAL
.I len
does not match tha size of structure
.B struct robust_list_head
expected by kernel.
.PP
The
.BR get_robust_list ()
system call can fail wit tha followin errors:
.TP
.B EPERM
Da callin process aint gots permission ta peep tha robust futex list of
the thread wit tha thread ID
.IR pid ,
and aint gots the
.BR CAP_SYS_PTRACE
capability.
.TP
.B ESRCH
No thread wit tha thread ID
.I pid
could be found.
.TP
.B EFAULT
Da head of tha robust futex list can't be stored all up in tha location
.IR head .
.SH VERSIONS
These system calls was added up in Linux 2.6.17.
No library support is provided; use
.BR syscall (2).
.SH NOTES
These system calls is not needed by aiiight applications.
No support fo' dem is provided up in glibc.
In tha unlikely event dat you wanna call dem directly, use
.BR syscall (2).

A thread can have only one robust futex list;
therefore applications dat wish
to use dis functionalitizzle should use tha robust mutexes provided by glibc.
.SH SEE ALSO
.BR futex (2)
.\" .BR pthread_mutexattr_setrobust_np (3)

.IR Documentation/robust-futexes.txt
and
.IR Documentation/robust-futex-ABI.txt
in tha Linux kernel source tree
.\" http://lwn.net/Articles/172149/
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
