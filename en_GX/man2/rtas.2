.\" Copyright (C) 2004 IBM Corporation
.\" This file is distributed accordin ta tha GNU General Public License.
.\" See tha file COPYING up in tha top level source directory fo' details.
.\"
.\" This page documents tha differences between tha low-level kernel system call intercourse .\" n' dat made available ta applications by glibc.  Portable applications should always .\" use tha straight-up legit library intercourse.
.\"
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "RTAS" 2 
.SH NAME
rtas \- Allows userspace ta booty-call RTAS (Run Time Abstraction Skillz)
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 17
int\ \fBppc_rtas\fR\ (struct rtas_args\ \fI*uargs\fR);
.ad
.hy

.SH "DESCRIPTION"
\fBppc_rtas\fR enablez userspace manipulation of tha RunTime Abstraction Skillz (RTAS). RTAS serves up fo' a portable method of access n' settin system shiznit. I aint talkin' bout chicken n' gravy biatch. For example, you could gather shiznit on various system sensors n' set poweron joints, n' you can put dat on yo' toast. RTAS be accessed via tha /proc entry called "rtas". Manipulations on RTAS is implemented via command line arguments on /proc/rtas. 
Da joints fo' \fIuargs\fR vary pimped outly. 
For mo' shiznit, peep tha \fIview/arch/ppcKconfig\fR file.

.SH "RETURN VALUE"

.PP
\fBrtas\fR returns 0 on success; otherwise it returns one of tha errors listed up in tha "Errors" section.

.SH "ERRORS"

.TP
-EPERM
User aint gots CAP_SYS_ADMIN capabilities.

.TP
-EFAULT
Problem copyin \fIuargs\fR joints to/from user space.

.TP
-EINVAL
Either number of \fIuargs\fR passed up in too big-ass or size of \fIuargs\fR array too large.

.SH AUTHOR
Niki Rahimi. 
