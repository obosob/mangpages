.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Mike Haardt, Ian Jackson.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified 1993-07-24 by Rik Faith
.\" Modified 1996-04-26 by Nick Duffek <nsd@bbc.com>
.\" Modified 1996-11-06 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1997-01-31 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2004-06-23 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH SYMLINK 2 2013-01-27 "Linux" "Linux Programmerz Manual"
.SH NAME
symlink \- cook up a freshly smoked up name fo' a gangbangin' file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int symlink(const char *" oldpath ", const char *" newpath );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR symlink ():
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED || _POSIX_C_SOURCE\ >=\ 200112L
.RE
.ad b
.SH DESCRIPTION
.BR symlink ()
creates a symbolic link named
.I newpath
which gotz nuff tha string
.IR oldpath .

Symbolic links is interpreted at run time as if tha contentz of the
link had been substituted tha fuck into tha path bein followed ta find a gangbangin' file or
directory.

Symbolic links may contain
.I ..
path components, which (if used all up in tha start of tha link) refer ta the
parent directoriez of dat up in which tha link resides.

A symbolic link (also known as a soft link) may point ta a existing
file or ta a nonexistent one; tha latta case is known as a thugged-out dangling
link.

Da permissionz of a symbolic link is irrelevant; tha ballershizzle is
ignored when followin tha link yo, but is checked when removal or
renamin of tha link be axed n' tha link is up in a gangbangin' finger-lickin' directory with
the sticky bit
.RB ( S_ISVTX )
set.

If
.I newpath
exists it will
.I not
be overwritten.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EACCES
Write access ta tha directory containing
.I newpath
is denied, or one of tha directories up in tha path prefix of
.I newpath
did not allow search permission.
(See also
.BR path_resolution (7).)
.TP
.B EDQUOT
Da userz quota of resources on tha file system has been exhausted.
Da resources could be inodes or disk blocks, dependin on tha file
system implementation.
.TP
.B EEXIST
.I newpath
already exists.
.TP
.B EFAULT
.IR oldpath " or " newpath " points outside yo' accessible address space."
.TP
.B EIO
An I/O error occurred.
.TP
.B ELOOP
Too nuff symbolic links was encountered up in resolving
.IR newpath .
.TP
.B ENAMETOOLONG
.IR oldpath " or " newpath " was too long."
.TP
.B ENOENT
A directory component in
.I newpath
does not exist or be a thugged-out danglin symbolic link, or
.I oldpath
is tha empty string.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOSPC
Da thang containin tha file has no room fo' tha freshly smoked up directory
entry.
.TP
.B ENOTDIR
A component used as a gangbangin' finger-lickin' directory in
.I newpath
is not, up in fact, a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da file system containing
.I newpath
does not support tha creation of symbolic links.
.TP
.B EROFS
.I newpath
is on a read-only file system.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
.\" SVr4 documents additionizzle error codes EDQUOT n' ENOSYS.
.\" See
.\" .BR open (2)
.\" re multiple filez wit tha same name, n' NFS.
.SH NOTES
No checkin of
.I oldpath
is done.

Deletin tha name referred ta by a symlink will straight-up delete the
file (unless it also has other hard links).
If dis behavior aint desired, use
.BR link (2).
.SH SEE ALSO
.BR ln (1),
.BR lchown (2),
.BR link (2),
.BR lstat (2),
.BR open (2),
.BR readlink (2),
.BR rename (2),
.BR symlinkat (2),
.BR unlink (2),
.BR path_resolution (7),
.BR symlink (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
