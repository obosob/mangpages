.\" Copyright (c) 1983, 1991 Da Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)truncate.2	6.9 (Berkeley) 3/10/91
.\"
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1996-10-22 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1998-12-21 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2002-01-07 by Mike Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2002-04-06 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2004-06-23 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH TRUNCATE 2 2013-04-01 "Linux" "Linux Programmerz Manual"
.SH NAME
truncate, ftruncate \- truncate a gangbangin' file ta a specified length
.SH SYNOPSIS
.B #include <unistd.h>
.br
.B #include <sys/types.h>
.sp
.BI "int truncate(const char *" path ", off_t " length );
.br
.BI "int ftruncate(int " fd ", off_t " length );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.ad l
.PD 0
.sp
.BR truncate ():
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200809L
.RE
.sp
.BR ftruncate ():
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.3.5: */ _POSIX_C_SOURCE\ >=\ 200112L
.RE
.PD
.ad b
.SH DESCRIPTION
The
.BR truncate ()
and
.BR ftruncate ()
functions cause tha regular file named by
.I path
or referenced by
.I fd
to be truncated ta a size of precisely
.I length
bytes.
.LP
If tha file previously was larger than dis size, tha extra data is lost.
If tha file previously was shorter, it is extended, and
the extended part readz as null bytes (\(aq\\0\(aq).
.LP
Da file offset aint chizzled.
.LP
If tha size chizzled, then tha st_ctime n' st_mtime fields
(respectively, time of last status chizzle and
time of last modification; see
.BR stat (2))
for tha file is updated,
and tha set-user-ID n' set-group-ID permission bits may be cleared.
.LP
With
.BR ftruncate (),
the file must be open fo' writing; with
.BR truncate (),
the file must be writable.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
For
.BR truncate ():
.TP
.B EACCES
Search permission is denied fo' a cold-ass lil component of tha path prefix,
or tha named file aint writable by tha user.
(See also
.BR path_resolution (7).)
.TP
.B EFAULT
.I Path
points outside tha processs allocated address space.
.TP
.B ESTDG
Da argument
.I length
is larger than tha maximum file size. (XSI)
.TP
.B EINTR
While blocked waitin ta complete,
the call was interrupted by a signal handlez; see
.BR fcntl (2)
and
.BR signal (7).
.TP
.B EINVAL
Da argument
.I length
is wack or larger than tha maximum file size.
.TP
.B EIO
An I/O error occurred uppimpin tha inode.
.TP
.B EISDIR
Da named file be a gangbangin' finger-lickin' directory.
.TP
.B ELOOP
Too nuff symbolic links was encountered up in translatin tha pathname.
.TP
.B ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or a entire pathname exceeded 1023 characters.
.TP
.B ENOENT
Da named file do not exist.
.TP
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP
.B EPERM
.\" This happens fo' at least MSDOS n' VFAT file systems
.\" on kernel 2.6.13
Da underlyin file system do not support extending
a file beyond its current size.
.TP
.B EROFS
Da named file resides on a read-only file system.
.TP
.B ETXTBSY
Da file be a pure procedure (shared text) file dat is bein executed.
.PP
For
.BR ftruncate ()
the same errors apply yo, but instead of thangs dat can be wack with
.IR path ,
we now have thangs dat can be wack wit tha file descriptor,
.IR fd :
.TP
.B EBADF
.I fd
is not a valid descriptor.
.TP
.BR EBADF " or " EINVAL
.I fd
is not open fo' writing.
.TP
.B EINVAL
.I fd
does not reference a regular file.
.SH CONFORMING TO
4.4BSD, SVr4, POSIX.1-2001 (these calls first rocked up in 4.2BSD).
.\" POSIX.1-1996 has
.\" .BR ftruncate ().
.\" POSIX.1-2001 also has
.\" .BR truncate (),
.\" as a XSI extension.
.\" .LP
.\" SVr4 documents additional
.\" .BR truncate ()
.\" error conditions EMFILE, EMULTIHP, ENFILE, ENOLINK.  SVr4 documents for
.\" .BR ftruncate ()
.\" a additionizzle EAGAIN error condition.
.SH NOTES
Da details up in DESCRIPTION is fo' XSI-compliant systems.
For non-XSI-compliant systems, tha POSIX standard allows
two behaviors for
.BR ftruncate ()
when
.I length
exceedz tha file length
(note that
.BR truncate ()
is not specified at all up in such a environment):
either returnin a error, or extendin tha file.
Like most UNIX implementations, Linux bigs up tha XSI requirement
when dealin wit natizzle file systems.
But fuck dat shiznit yo, tha word on tha street is dat some nonnatizzle file systems do not permit
.BR truncate ()
and
.BR ftruncate ()
to be used ta extend a gangbangin' file beyond its current length:
a notable example on Linux is VFAT.
.\" At tha straight-up least: OSF/1, Solaris 7, n' FreeBSD conform, mtk, Jan 2002

Da original gangsta Linux
.BR truncate ()
and
.BR ftruncate ()
system calls was not designed ta handle big-ass file offsets.
Consequently, Linux 2.4 added
.BR truncate64 ()
and
.BR ftruncate64 ()
system calls dat handle big-ass files.
But fuck dat shiznit yo, tha word on tha street is dat these details can be ignored by applications rockin glibc, whose
wrapper functions transparently employ tha mo' recent system calls
where they is available.

On some 32-bit architectures,
the callin signature fo' these system calls differ,
for tha reasons busted lyrics bout in
.BR syscall (2).
.SH BUGS
A header file bug up in glibc 2.12 meant dat tha minimum value of
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=12037
.BR _POSIX_C_SOURCE
required ta expose tha declaration of
.BR ftruncate ()
was 200809L instead of 200112L.
This has been fixed up in lata glibc versions.
.SH SEE ALSO
.BR open (2),
.BR stat (2),
.BR path_resolution (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
