.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Ian Jackson.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1996-09-08 by Arnt Gulbrandsen <agulbra@troll.no>
.\" Modified 1997-01-31 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2001-05-17 by aeb
.\" Modified 2004-06-23 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH UNLINK 2 2011-09-15 "Linux" "Linux Programmerz Manual"
.SH NAME
unlink \- delete a name n' possibly tha file it refers to
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int unlink(const char *" pathname );
.SH DESCRIPTION
.BR unlink ()
deletes a name from tha file system.
If dat name was the
last link ta a gangbangin' file n' no processes have tha file open tha file is
deleted n' tha space dat shiznit was rockin is made available fo' reuse.

If tha name was tha last link ta a gangbangin' file but any processes still have
the file open tha file will remain up in existence until tha last file
descriptor referrin ta it is closed.

If tha name referred ta a symbolic link tha link is removed.

If tha name referred ta a socket, fifo or thang tha name fo' it is
removed but processes which have tha object open may continue ta use
it.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EACCES
Write access ta tha directory containing
.I pathname
is not allowed fo' tha processs effectizzle UID, or one of the
directories in
.I pathname
did not allow search permission.
(See also
.BR path_resolution (7).)
.TP
.BR EBUSY
Da file
.I pathname
cannot be unlinked cuz it is bein used by tha system
or another process;
for example, it aint nuthin but a mount point
or tha NFS client software pimped it ta represent an
actizzle but otherwise nameless inode ("NFS wack-ass renamed").
.TP
.B EFAULT
.I pathname
points outside yo' accessible address space.
.TP
.B EIO
An I/O error occurred.
.TP
.B EISDIR
.I pathname
refers ta a gangbangin' finger-lickin' directory.
(This is tha non-POSIX value returned by Linux since 2.1.132.)
.TP
.B ELOOP
Too nuff symbolic links was encountered up in translating
.IR pathname .
.TP
.B ENAMETOOLONG
.IR pathname " was too long."
.TP
.B ENOENT
A component in
.I pathname
does not exist or be a thugged-out danglin symbolic link, or
.I pathname
is empty.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOTDIR
A component used as a gangbangin' finger-lickin' directory in
.I pathname
is not, up in fact, a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da system do not allow unlinkin of directories,
or unlinkin of directories requires privileges dat the
callin process don't have.
(This is tha POSIX prescribed error return;
as noted above, Linux returns
.B EISDIR
for dis case.)
.TP
.BR EPERM " (Linux only)"
Da file system do not allow unlinkin of files.
.TP
.BR EPERM " or " EACCES
Da directory containing
.I pathname
has tha sticky bit
.RB ( S_ISVTX )
set n' tha processs effectizzle UID is neither tha UID of tha file to
be deleted nor dat of tha directory containin it, and
the process aint privileged (Linux: aint gots the
.B CAP_FOWNER
capability).
.TP
.B EROFS
.I pathname
refers ta a gangbangin' file on a read-only file system.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
.\" SVr4 documents additionizzle error
.\" conditions EINTR, EMULTIHOP, ETXTBSY, ENOLINK.
.SH BUGS
Infelicitizzles up in tha protocol underlyin NFS can cause tha unexpected
disappearizzle of filez which is still bein used.
.SH SEE ALSO
.BR rm (1),
.BR chmod (2),
.BR link (2),
.BR mknod (2),
.BR open (2),
.BR rename (2),
.BR rmdir (2),
.BR unlinkat (2),
.BR mkfifo (3),
.BR remove (3),
.BR path_resolution (7),
.BR symlink (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
