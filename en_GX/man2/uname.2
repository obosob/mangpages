.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" 2007-07-05 mtk: Added details on underlyin system call intercourses
.\"
.TH UNAME 2 2008-12-03 "Linux" "Linux Programmerz Manual"
.SH NAME
uname \- git name n' shiznit bout current kernel
.SH SYNOPSIS
.B #include <sys/utsname.h>
.sp
.BI "int uname(struct utsname *" buf );
.SH DESCRIPTION
.BR uname ()
returns system shiznit up in tha structure pointed ta by
.IR buf .
The
.I utsname
struct is defined in
.IR <sys/utsname.h> :
.in +4n
.nf

struct utsname {
    char sysname[];    /* Operatin system name (e.g., "Linux") */
    char nodename[];   /* Name within "some implementation-defined
                          network" */
    char release[];    /* Operatin system release (e.g., "2.6.28") */
    char version[];    /* Operatin system version */
    char machine[];    /* Hardware identifier */
#ifdef _GNU_SOURCE
    char domainname[]; /* NIS or YP domain name */
#endif
};

.fi
.in
Da length of tha arrays up in a
.I struct utsname
is unspecified (see NOTES);
the fieldz is terminated by a null byte (\(aq\\0\(aq).
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EFAULT
.I buf
is not valid.
.SH CONFORMING TO
SVr4, POSIX.1-2001.
There is no
.BR uname ()
call up in 4.3BSD.
.PP
The
.I domainname
member (the NIS or YP domain name) be a GNU extension.
.SH NOTES
This be a system call, n' tha operatin system presumably knows
its name, release n' version.
It also knows what tha fuck hardware it runs on.
So, four of tha fieldz of tha struct is meaningful.
On tha other hand, tha field
.I nodename
is meaningless:
it gives tha name of tha present machine up in some undefined
network yo, but typically machines is up in mo' than one network
and have nuff muthafuckin names.
Mo'over, tha kernel has no way of knowing
about such thangs, so it has ta be holla'd at what tha fuck ta answer here.
Da same holdz fo' tha additional
.I domainname
field.
.LP
To dis end Linux uses tha system calls
.BR sethostname (2)
and
.BR setdomainname (2).
Note dat there is no standard dat say dat tha hostname set by
.BR sethostname (2)
is tha same ol' dirty strang as the
.I nodename
field of tha struct returned by
.BR uname ()
(indeed, some systems allow a 256-byte hostname n' a 8-byte nodename),
but dis is legit on Linux.
Da same holdz for
.BR setdomainname (2)
and the
.I domainname
field.
.LP
Da length of tha fieldz up in tha struct varies.
Some operatin systems
or libraries bust a hardcoded 9 or 33 or 65 or 257.
Other systems use
.B SYS_NMLN
or
.B _SYS_NMLN
or
.B UTSLEN
or
.BR _UTSNAME_LENGTH .
Clearly, it aint nuthin but a funky-ass bad
idea ta use any of these constants; just use sizeof(...).
Often 257 is chosen up in order ta have room fo' a internizzle hostname.
.LP
Part of tha utsname shiznit be also accessible via
.IR /proc/sys/kernel/ { ostype ,
.IR hostname ,
.IR osrelease ,
.IR version ,
.IR domainname }.
.SS Underlyin kernel intercourse
.LP
Over time, increases up in tha size of the
.I utsname
structure have hustled ta three successive versions of
.BR uname ():
.IR sys_olduname ()
(slot
.IR __NR_oldolduname ),
.IR sys_uname ()
(slot
.IR __NR_olduname ),
and
.IR sys_newuname ()
(slot
.IR __NR_uname) .
Da first one
.\" That was back before Linux 1.0
used length 9 fo' all fields;
the second
.\" That was also back before Linux 1.0
used 65;
the third also uses 65 but addz the
.I domainname
field.
Da glibc
.BR uname ()
wrapper function hides these details from applications,
invokin da most thugged-out recent version of tha system call provided by tha kernel.
.SH SEE ALSO
.BR uname (1),
.BR getdomainname (2),
.BR gethostname (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
