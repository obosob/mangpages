.\" Copyright (C) 1997 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified, 2003-05-26, Mike Kerrisk, <mtk.manpages@gmail.com>
.TH SETRESUID 2 2010-11-22 "Linux" "Linux Programmerz Manual"
.SH NAME
setresuid, setresgid \- set real, effectizzle n' saved user or crew ID
.SH SYNOPSIS
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.br
.B #include <unistd.h>
.sp
.BI "int setresuid(uid_t " ruid ", uid_t " euid ", uid_t " suid );
.br
.BI "int setresgid(gid_t " rgid ", gid_t " egid ", gid_t " sgid );
.SH DESCRIPTION
.BR setresuid ()
sets tha real user ID, tha effectizzle user ID, n' the
saved set-user-ID of tha callin process.

Unprivileged user processes
may chizzle tha real UID,
effectizzle UID, n' saved set-user-ID, each ta one of:
the current real UID, tha current effectizzle UID or the
current saved set-user-ID.

Privileged processes (on Linux, dem havin tha \fBCAP_SETUID\fP capability)
may set tha real UID, effectizzle UID, and
saved set-user-ID ta arbitrary joints.

If one of tha arguments equals \-1, tha correspondin value aint chizzled.

Regardless of what tha fuck chizzlez is made ta tha real UID, effectizzle UID,
and saved set-user-ID, tha file system UID be always set ta tha same
value as tha (possibly new) effectizzle UID.

All Out analogously,
.BR setresgid ()
sets tha real GID, effectizzle GID, n' saved set-group-ID
of tha callin process (and always modifies tha file system GID
to be tha same as tha effectizzle GID),
with tha same restrictions fo' unprivileged processes.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EAGAIN
.I uid
does not match tha current UID n' dis call would
brin dat user ID over its
.B RLIMIT_NPROC
resource limit.
.TP
.B EPERM
Da callin process aint privileged (did not have tha \fBCAP_SETUID\fP
capability) n' tried ta chizzle tha IDs ta joints dat is not permitted.
.SH VERSIONS
These calls is available under Linux since Linux 2.1.44.
.SH CONFORMING TO
These calls is nonstandard;
they also step tha fuck up on HP-UX n' a shitload of tha BSDs.
.SH NOTES
Under HP-UX n' FreeBSD, tha prototype is found in
.IR <unistd.h> .
Under Linux tha prototype is provided by glibc since version 2.3.2.

Da original gangsta Linux
.BR setresuid ()
and
.BR setresgid ()
system calls supported only 16-bit user n' crew IDs.
Subsequently, Linux 2.4 added
.BR setresuid32 ()
and
.BR setresgid32 (),
supportin 32-bit IDs.
Da glibc
.BR setresuid ()
and
.BR setresgid ()
wrapper functions transparently deal wit tha variations across kernel versions.
.SH SEE ALSO
.BR getresuid (2),
.BR getuid (2),
.BR setfsgid (2),
.BR setfsuid (2),
.BR setreuid (2),
.BR setuid (2),
.BR capabilitizzles (7),
.BR credentials (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
