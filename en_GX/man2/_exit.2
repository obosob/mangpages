.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Mike Haardt, Ian Jackson.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Wed Jul 21 23:02:38 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 2001-11-17, aeb
.\"
.TH _EXIT 2 2010-09-20 "Linux" "Linux Programmerz Manual"
.SH NAME
_exit, _Exit \- terminizzle tha callin process
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "void _exit(int " status );
.sp
.B #include <stdlib.h>
.sp
.BI "void _Exit(int " status );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR _Exit ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.SH DESCRIPTION
Da function
.BR _exit ()
terminates tha callin process "immediately".
Any open file descriptors
belongin ta tha process is closed; any lil pimpz of tha process are
inherited by process 1,
.IR init ,
and tha processs parent is busted a
.B SIGCHLD
signal.
.LP
Da value
.I status
is moonwalked back ta tha parent process as tha processs exit status, and
can be collected rockin one of the
.BR wait (2)
family of calls.
.LP
Da function
.BR _Exit ()
is equivalent to
.BR _exit ().
.SH RETURN VALUE
These functions do not return.
.SH CONFORMING TO
SVr4, POSIX.1-2001, 4.3BSD.
Da function
.BR _Exit ()
was introduced by C99.
.SH NOTES
For a gangbangin' finger-lickin' rap on tha effectz of a exit, tha transmission of
exit status, zombie processes, signals sent, n' so on, see
.BR exit (3).
.LP
Da function
.BR _exit ()
is like
.BR exit (3),
but do not call any
functions registered with
.BR atexit (3)
or
.BR on_exit (3).
Whether it flushes
standard I/O buffers n' removes temporary filez pimped with
.BR tmpfile (3)
is implementation-dependent.
On tha other hand,
.BR _exit ()
does close open file descriptors, n' dis may cause a unknown delay,
waitin fo' pendin output ta finish.
If tha delay is undesired,
it may be useful ta booty-call functions like
.BR tcflush (3)
before calling
.BR _exit ().
Whether any pendin I/O is canceled, n' which pendin I/O may be
canceled upon
.BR _exit (),
is implementation-dependent.

In glibc up ta version 2.3, the
.BR _exit ()
wrapper function invoked tha kernel system call of tha same name.
Since glibc 2.3, tha wrapper function invokes
.BR exit_group (2),
in order ta terminizzle all of tha threadz up in a process.
.SH SEE ALSO
.BR execve (2),
.BR exit_group (2),
.BR fork (2),
.BR bust a cap up in (2),
.BR wait (2),
.BR wait4 (2),
.BR waitpid (2),
.BR atexit (3),
.BR exit (3),
.BR on_exit (3),
.BR termios (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
