.\" Copyright (C) 2000 by Werner Almesberger
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" May be distributed under GPL
.\" %%%LICENSE_END
.\"
.\" Written 2000-02-23 by Werner Almesberger
.\" Modified 2004-06-17 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH PIVOT_ROOT 2 2012-07-13 "Linux" "Linux Programmerz Manual"
.SH NAME
pivot_root \- chizzle tha root file system
.SH SYNOPSIS
.BI "int pivot_root(const char *" new_root ", const char *" put_old );

.IR Note :
There is no glibc wrapper fo' dis system call; peep NOTES.
.SH DESCRIPTION
.BR pivot_root ()
moves tha root file system of tha callin process ta the
directory \fIput_old\fP n' make \fInew_root\fP tha freshly smoked up root file system
of tha callin process.
.\"
.\" The
.\" .B CAP_SYS_ADMIN
.\" capabilitizzle is required.

Da typical use of
.BR pivot_root ()
is durin system startup, when the
system mounts a temporary root file system (e.g., a \fBinitrd\fP), then
mounts tha real root file system, n' eventually turns tha latta into
the current root of all relevant processes or threads.

.BR pivot_root ()
may or may not chizzle tha current root n' tha current
workin directory of any processes or threadz which use tha old
root directory.
Da calla of
.BR pivot_root ()
must ensure dat processes wit root or current hustlin directory
at tha oldschool root operate erectly up in either case.
An easy as fuck  way ta ensure dis is ta chizzle their
root n' current hustlin directory ta \fInew_root\fP before invoking
.BR pivot_root ().

Da paragraph above is intentionally vague cuz tha implementation
of
.BR pivot_root ()
may chizzle up in tha future.
At tha time of writing,
.BR pivot_root ()
changes root n' current hustlin directory of each process or
thread ta \fInew_root\fP if they point ta tha oldschool root directory.
This
is necessary up in order ta prevent kernel threadz from keepin tha old
root directory busy wit they root n' current hustlin directory,
even if they never access
the file system up in any way.
In tha future, there may be a mechanizzle for
kernel threadz ta explicitly relinquish any access ta tha file system,
such dat dis fairly intrusive mechanizzle can be removed from
.BR pivot_root ().

Note dat dis also applies ta tha callin process:
.BR pivot_root ()
may
or may not affect its current hustlin directory.
It be therefore recommended ta call
\fBchdir("/")\fP immediately after
.BR pivot_root ().

Da followin restrictions apply ta \fInew_root\fP n' \fIput_old\fP:
.IP \- 3
They must be directories.
.IP \- 3
\fInew_root\fP n' \fIput_old\fP must not be on tha same file system as
the current root.
.IP \- 3
\fIput_old\fP must be underneath \fInew_root\fP, dat is, addin a nonzero
number of \fI/..\fP ta tha strang pointed ta by \fIput_old\fP must yield
the same directory as \fInew_root\fP.
.IP \- 3
No other file system may be mounted on \fIput_old\fP.
.PP
See also
.BR pivot_root (8)
for additionizzle usage examples.

If tha current root aint a mount point (e.g., after
.BR chroot (2)
or
.BR pivot_root (),
see also below), not tha oldschool root directory yo, but the
mount point of dat file system is mounted on \fIput_old\fP.

\fInew_root\fP do not gotta be a mount point.
In dis case,
\fI/proc/mounts\fP will show tha mount point of tha file system containing
\fInew_root\fP as root (\fI/\fP).
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
\fIerrno\fP is set appropriately.
.SH ERRORS
.BR pivot_root ()
may return (in \fIerrno\fP) any of tha errors returned by
.BR stat (2).
Additionally, it may return:
.TP
.B EBUSY
\fInew_root\fP or \fIput_old\fP is on tha current root file system,
or a gangbangin' file system be already mounted on \fIput_old\fP.
.TP
.B EINVAL
\fIput_old\fP aint underneath \fInew_root\fP.
.TP
.B ENOTDIR
\fInew_root\fP or \fIput_old\fP aint a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da callin process aint gots the
.B CAP_SYS_ADMIN
capability.
.SH VERSIONS
.BR pivot_root ()
was introduced up in Linux 2.3.41.
.SH CONFORMING TO
.BR pivot_root ()
is Linux-specific n' hence aint portable.
.SH NOTES
Glibc do not provide a wrapper fo' dis system call; call it using
.BR syscall (2).
.SH BUGS
.BR pivot_root ()
should not gotta chizzle root n' current hustlin directory of all other
processes up in tha system.

Some of tha mo' obscure uses of
.BR pivot_root ()
may quickly lead to
insanity.
.SH SEE ALSO
.BR chdir (2),
.BR chroot (2),
.BR stat (2),
.BR initrd (4),
.BR pivot_root (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
