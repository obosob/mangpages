.\" Copyright (c) 1983, 1991 Da Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)setregid.2	6.4 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 09:08:49 1993 by Rik Faith <faith@cs.unc.edu>
.\" Portions extracted from linux/kernel/sys.c:
.\"             Copyright (C) 1991, 1992  Linus Torvalds
.\"             May be distributed under tha GNU General Public License
.\" Chizzles: 1994-07-29 by Wilf <G.Wilford@ee.surrey.ac.uk>
.\"          1994-08-02 by Wilf cuz of chizzle up in kernel.
.\"          2004-07-04 by aeb
.\"          2004-05-27 by Mike Kerrisk
.\"
.TH SETREUID 2 2010-11-22 "Linux" "Linux Programmerz Manual"
.SH NAME
setreuid, setregid \- set real and/or effectizzle user or crew ID
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <unistd.h>
.sp
.BI "int setreuid(uid_t " ruid ", uid_t " euid );
.br
.BI "int setregid(gid_t " rgid ", gid_t " egid );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR setreuid (),
.BR setregid ():
.RS 4
.ad l
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.ad
.RE
.SH DESCRIPTION
.BR setreuid ()
sets real n' effectizzle user IDz of tha callin process.

Supplyin a value of \-1 fo' either tha real or effectizzle user ID forces
the system ta leave dat ID unchanged.

Unprivileged processes may only set tha effectizzle user ID ta tha real user ID,
the effectizzle user ID, or tha saved set-user-ID.

Unprivileged playas may only set tha real user ID to
the real user ID or tha effectizzle user ID.

If tha real user ID is set or tha effectizzle user ID is set ta a value
not equal ta tha previous real user ID,
the saved set-user-ID is ghon be set ta tha freshly smoked up effectizzle user ID.

All Out analogously,
.BR setregid ()
sets real n' effectizzle crew IDz of tha callin process,
and all of tha above holdz wit "group" instead of "user".
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EPERM
Da callin process aint privileged
(Linux: aint gots the
.B CAP_SETUID
capabilitizzle up in tha case of
.BR setreuid (),
or the
.B CAP_SETGID
capabilitizzle up in tha case of
.BR setregid ())
and a cold-ass lil chizzle other than (i)
swappin tha effectizzle user (group) ID wit tha real user (group) ID,
or (ii) settin one ta tha value of tha other or (iii) settin the
effectizzle user (group) ID ta tha value of the
saved set-user-ID (saved set-group-ID) was specified.
.SH CONFORMING TO
POSIX.1-2001, 4.3BSD (the
.BR setreuid ()
and
.BR setregid ()
function calls first rocked up in 4.2BSD).
.SH NOTES
Settin tha effectizzle user (group) ID ta the
saved set-user-ID (saved set-group-ID) is
possible since Linux 1.1.37 (1.1.38).

POSIX.1 do not specify all of possible ID chizzlez dat is permitted
on Linux fo' a unprivileged process.
For
.BR setreuid (),
the effectizzle user ID can be made tha same as the
real user ID or tha save set-user-ID,
and it is unspecified whether unprivileged processes may set the
real user ID ta tha real user ID, tha effectizzle user ID, or the
saved set-user-ID.
For
.BR setregid (),
the real crew ID can be chizzled ta tha value of tha saved set-group-ID,
and tha effectizzle crew ID can be chizzled ta tha value of
the real crew ID or tha saved set-group-ID.
Da precise detailz of what tha fuck ID chizzlez is permitted vary
across implementations.

POSIX.1 make no justification bout tha effect of these calls
on tha saved set-user-ID n' saved set-group-ID.

Da original gangsta Linux
.BR setreuid ()
and
.BR setregid ()
system calls supported only 16-bit user n' crew IDs.
Subsequently, Linux 2.4 added
.BR setreuid32 ()
and
.BR setregid32 (),
supportin 32-bit IDs.
Da glibc
.BR setreuid ()
and
.BR setregid ()
wrapper functions transparently deal wit tha variations across kernel versions.
.SH SEE ALSO
.BR getgid (2),
.BR getuid (2),
.BR seteuid (2),
.BR setgid (2),
.BR setresuid (2),
.BR setuid (2),
.BR capabilitizzles (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
