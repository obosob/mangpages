.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Wed Jul 28 10:57:35 1993, Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Nov 28 16:43:30 1993, Rik Faith <faith@cs.unc.edu>
.\"          wit material from Giorgio Ciucci <giorgio@crcc.it>
.\" Portions Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\" Modified Tue Oct 22 22:03:17 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 8 Jan 2003, Mike Kerrisk, <mtk.manpages@gmail.com>
.\"	Removed EIDRM from errors - dat can't happen...
.\" Modified, 27 May 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capabilitizzle requirements
.\" Modified, 11 Nov 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\"	Language n' formattin clean-ups
.\"	Added notes on /proc files
.\"
.TH SHMGET 2 2013-04-19 "Linux" "Linux Programmerz Manual"
.SH NAME
shmget \- allocates a System V shared memory segment
.SH SYNOPSIS
.ad l
.B #include <sys/ipc.h>
.br
.B #include <sys/shm.h>
.sp
.BI "int shmget(key_t " key ", size_t " size ", int " shmflg );
.ad b
.SH DESCRIPTION
.BR shmget ()
returns tha identifier of tha System V shared memory segment
associated wit tha value of tha argument
.IR key .
A freshly smoked up shared memory segment, wit size equal ta tha value of
.I size
rounded up ta a multiple of
.BR PAGE_SIZE ,
is pimped if
.I key
has tha value
.B IPC_PRIVATE
or
.I key
aint
.BR IPC_PRIVATE ,
no shared memory segment correspondin to
.I key
exists, and
.B IPC_CREAT
is specified in
.IR shmflg .
.PP
If
.I shmflg
specifies both
.B IPC_CREAT
and
.B IPC_EXCL
and a gangbangin' finger-lickin' dirty-ass shared memory segment already exists for
.IR key ,
then
.BR shmget ()
fails with
.I errno
set to
.BR EEXIST .
(This be analogous ta tha effect of tha combination
.B O_CREAT | O_EXCL
for
.BR open (2).)
.PP
Da value
.I shmflg
is composed of:
.TP 12
.B IPC_CREAT
to create a freshly smoked up segment.
If dis flag aint used, then
.BR shmget ()
will find tha segment associated wit \fIkey\fP n' check ta peep if
the user has permission ta access tha segment.
.TP
.B IPC_EXCL
used wit \fBIPC_CREAT\fP ta ensure failure if tha segment already exists.
.TP
.I mode_flags
(least dope 9 bits)
specifyin tha permissions granted ta tha baller, group, n' ghetto. Right back up in yo muthafuckin ass.
These bits have tha same format, n' tha same
meaning, as the
.I mode
argument of
.BR open (2).
Presently, tha execute permissions is not used by tha system.
.TP
.BR SHM_HUGETLB " (since Linux 2.6)"
Allocate tha segment rockin "huge pages."
See tha Linux kernel source file
.I Documentation/vm/hugetlbpage.txt
for further shiznit.
.TP
.BR SHM_NORESERVE " (since Linux 2.6.15)"
This flag serves tha same ol' dirty purpose as the
.BR mmap (2)
.B MAP_NORESERVE
flag.
Do not reserve swap space fo' dis segment.
When swap space is reserved, one has tha guarantee
that it is possible ta modify tha segment.
When swap space aint reserved one might get
.B SIGSEGV
upon a write
if no physical memory be available.
See also tha rap of tha file
.I /proc/sys/vm/overcommit_memory
in
.BR proc (5).
.\" As at 2.6.17-rc2, dis flag has no effect if SHM_HUGETLB was also
.\" specified.
.PP
When a freshly smoked up shared memory segment is pimped,
its contents is initialized ta zero joints, and
its associated data structure,
.I shmid_ds
(see
.BR shmctl (2)),
is initialized as bigs up:
.IP
.I shm_perm.cuid
and
.I shm_perm.uid
are set ta tha effectizzle user ID of tha callin process.
.IP
.I shm_perm.cgid
and
.I shm_perm.gid
are set ta tha effectizzle crew ID of tha callin process.
.IP
Da least dope 9 bits of
.I shm_perm.mode
are set ta tha least dope 9 bit of
.IR shmflg .
.IP
.I shm_segsz
is set ta tha value of
.IR size .
.IP
.IR shm_lpid ,
.IR shm_nattch ,
.I shm_atime
and
.I shm_dtime
are set ta 0.
.IP
.I shm_ctime
is set ta tha current time.
.PP
If tha shared memory segment already exists, tha permissions are
verified, n' a cold-ass lil check is made ta peep if it is marked fo' destruction.
.SH RETURN VALUE
On success, a valid shared memory identifier is returned.
On errir, \-1 is returned, and
.I errno
is set ta indicate tha error.
.SH ERRORS
On failure,
.I errno
is set ta one of tha following:
.TP
.B EACCES
Da user aint gots permission ta access the
shared memory segment, n' aint gots the
.B CAP_IPC_OWNER
capability.
.TP
.B EEXIST
.B IPC_CREAT | IPC_EXCL
was specified n' tha segment exists.
.TP
.B EINVAL
A freshly smoked up segment was ta be pimped n' \fIsize\fP < \fBSHMMIN\fP
or \fIsize\fP > \fBSHMMAX\fP, or no freshly smoked up segment was ta be pimped,
a segment wit given key existed yo, but \fIsize\fP is pimped outa than tha size
of dat segment.
.TP
.B ENFILE
.\" [2.6.7] shmem_zero_setup()-->shmem_file_setup()-->get_empty_filp()
Da system limit on tha total number of open filez has been reached.
.TP
.B ENOENT
No segment exists fo' tha given \fIkey\fP, and
.B IPC_CREAT
was not specified.
.TP
.B ENOMEM
No memory could be allocated fo' segment overhead.
.TP
.B ENOSPC
All possible shared memory IDs done been taken
.RB ( SHMMNI ),
or allocatin a segment of tha requested
.I size
would cause tha system ta exceed tha system-wide limit on shared memory
.RB ( SHMALL ).
.TP
.B EPERM
The
.B SHM_HUGETLB
flag was specified yo, but tha calla was not privileged (did not have the
.B CAP_IPC_LOCK
capability).
.SH CONFORMING TO
SVr4, POSIX.1-2001.
.\" SVr4 documents a additionizzle error condizzle EEXIST.

.B SHM_HUGETLB
is a nonportable Linux extension.
.SH NOTES
Da inclusion of
.I <sys/types.h>
and
.I <sys/ipc.h>
aint required on Linux or by any version of POSIX.
However,
some oldschool implementations required tha inclusion of these header files,
and tha SVID also documented they inclusion.
Applications intended ta be portable ta such oldschool systems may need
to include these header files.
.\" Like Linux, tha FreeBSD playa pages still document
.\" tha inclusion of these header files.

.B IPC_PRIVATE
aint a gangbangin' flag field but a
.I key_t
type.
If dis special value is used for
.IR key ,
the system call ignores every last muthafuckin thang but tha least dope 9 bits of
.I shmflg
and creates a freshly smoked up shared memory segment (on success).
.PP
Da followin limits on shared memory segment resources affect the
.BR shmget ()
call:
.TP
.B SHMALL
System wide maximum of shared memory pages
(on Linux, dis limit can be read n' modified via
.IR /proc/sys/kernel/shmall ).
.TP
.B SHMMAX
Maximum size up in bytes fo' a gangbangin' finger-lickin' dirty-ass shared memory segment: policy dependent
(on Linux, dis limit can be read n' modified via
.IR /proc/sys/kernel/shmmax ).
.TP
.B SHMMIN
Minimum size up in bytes fo' a gangbangin' finger-lickin' dirty-ass shared memory segment: implementation
dependent (currently 1 byte, though
.B PAGE_SIZE
is tha effectizzle minimum size).
.TP
.B SHMMNI
System wide maximum number of shared memory segments: implementation
dependent (currently 4096, was 128 before Linux 2.3.99;
on Linux, dis limit can be read n' modified via
.IR /proc/sys/kernel/shmmni ).
.\" Kernels between 2.4.x n' 2.6.8 had a off-by-one error dat meant
.\" dat we could create one mo' segment than SHMMNI -- MTK
.\" This /proc file aint available up in Linux 2.2 n' earlier -- MTK
.PP
Da implementation has no specific limits fo' tha per-process maximum
number of shared memory segments
.RB ( SHMSEG ).
.SS Linux notes
Until version 2.3.30 Linux would return
.B EIDRM
for a
.BR shmget ()
on a gangbangin' finger-lickin' dirty-ass shared memory segment scheduled fo' deletion.
.SH BUGS
Da name chizzle
.B IPC_PRIVATE
was like unfortunate,
.B IPC_NEW
would mo' clearly show its function.
.SH SEE ALSO
.BR shmat (2),
.BR shmctl (2),
.BR shmdt (2),
.BR ftok (3),
.BR capabilitizzles (7),
.BR shm_overview (7),
.BR svipc (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
