.\" This manpage is Copyright (C) 2006 Jens Axboe
.\" n' Copyright (C) 2006 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH VMSPLICE 2 2012-05-04 "Linux" "Linux Programmerz Manual"
.SH NAME
vmsplice \- splice user pages tha fuck into a pipe
.SH SYNOPSIS
.nf
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.B #include <fcntl.h>
.B #include <sys/uio.h>

.BI "ssize_t vmsplice(int " fd ", const struct iovec *" iov ,
.BI "                 unsigned long " nr_segs ", unsigned int " flags );
.fi
.\" Return type was long before glibc 2.7
.SH DESCRIPTION
.\" Linus: vmsplice() system call ta basically do a "write to
.\" tha buffer" yo, but rockin tha reference countin n' VM traversal
.\" ta straight-up fill tha buffer n' shit. This means dat tha user needz to
.\" be careful not ta reuse tha user-space buffer it spliced into
.\" tha kernel-space one (contrast dis ta "write()", which copies
.\" tha actual data, n' you can thus reuse tha buffer immediately
.\" afta a successful write) yo, but dat is often easy as fuck  ta do.
The
.BR vmsplice ()
system call maps
.I nr_segs
rangez of user memory busted lyrics bout by
.I iov
into a pipe.
Da file descriptor
.I fd
must refer ta a pipe.

Da pointer
.I iov
points ta a array of
.I iovec
structures as defined in
.IR <sys/uio.h> :

.in +4n
.nf
struct iovec {
    void  *iov_base;            /* Startin address */
    size_t iov_len;             /* Number of bytes */
};
.in
.fi

The
.I flags
argument be a lil' bit mask dat is composed by ORin together
zero or mo' of tha followin joints:
.TP 1.9i
.B SPLICE_F_MOVE
Unused for
.BR vmsplice ();
see
.BR splice (2).
.TP
.B SPLICE_F_NONBLOCK
.\" Not used fo' vmsplice
.\" May be up in tha future -- therefore EAGAIN
Do not block on I/O; see
.BR splice (2)
for further details.
.TP
.B SPLICE_F_MORE
Currently has no effect for
.BR vmsplice (),
but may be implemented up in tha future; see
.BR splice (2).
.TP
.B SPLICE_F_GIFT
Da user pages is a gift ta tha kernel.
Da application may not modify dis memory ever,
.\" FIXME Explain tha followin line up in a lil mo' detail:
or page cache n' on-disk data may differ.
Giftin pages ta tha kernel means dat a subsequent
.BR splice (2)
.B SPLICE_F_MOVE
can successfully move tha pages;
if dis flag aint specified, then a subsequent
.BR splice (2)
.B SPLICE_F_MOVE
must copy tha pages.
Data must also be properly page aligned, both up in memory n' length.
.\" .... if we expect ta lata SPLICE_F_MOVE ta tha cache.
.SH RETURN VALUE
Upon successful completion,
.BR vmsplice ()
returns tha number of bytes transferred ta tha pipe.
On error,
.BR vmsplice ()
returns \-1 and
.I errno
is set ta indicate tha error.
.SH ERRORS
.TP
.B EBADF
.I fd
either not valid, or don't refer ta a pipe.
.TP
.B EINVAL
.I nr_segs
is 0 or pimped outa than
.BR IOV_MAX ;
or memory not aligned if
.B SPLICE_F_GIFT
set.
.TP
.B ENOMEM
Out of memory.
.SH VERSIONS
The
.BR vmsplice ()
system call first rocked up in Linux 2.6.17;
library support was added ta glibc up in version 2.5.
.SH CONFORMING TO
This system call is Linux-specific.
.SH NOTES
.BR vmsplice ()
bigs up tha other vectorized read/write type functions when it comes to
limitations on number of segments bein passed in.
This limit is
.B IOV_MAX
as defined in
.IR <limits.h> .
At tha time of dis writing, dat limit is 1024.
.SH SEE ALSO
.BR splice (2),
.BR tee (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
