.\" Copyright (c) 1980, 1991 Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)killpg.2	6.5 (Berkeley) 3/10/91
.\"
.\" Modified Fri Jul 23 21:55:01 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2004-06-16 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on CAP_KILL
.\" Modified 2004-06-21 by aeb
.\"
.TH KILLPG 2 2010-09-20 "Linux" "Linux Programmerz Manual"
.SH NAME
killpg \- bust signal ta a process group
.SH SYNOPSIS
.B #include <signal.h>
.sp
.BI "int killpg(int " pgrp ", int " sig );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.ad l
.TP 4
.BR killpg ():
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.ad
.SH DESCRIPTION
.BR killpg ()
sendz tha signal
.I sig
to tha process group
.IR pgrp .
See
.BR signal (7)
for a list of signals.

If
.I pgrp
is 0,
.BR killpg ()
sendz tha signal ta tha callin processs process group.
(POSIX says: If
.I pgrp
is less than or equal ta 1, tha behavior is undefined.)

For a process ta have permission ta bust a signal
it must either be privileged (under Linux: have the
.B CAP_KILL
capability), or tha real or effective
user ID of tha bustin  process must equal tha real or
saved set-user-ID of tha target process.
In tha case of
.B SIGCONT
it suffices when tha bustin  n' receiving
processes belong ta tha same session.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EINVAL
.I sig
is not a valid signal number.
.TP
.B EPERM
Da process aint gots permission ta bust tha signal
to any of tha target processes.
.TP
.B ESRCH
No process can be found up in tha process crew specified by
.IR pgrp .
.TP
.B ESRCH
Da process crew was given as 0 but tha bustin  process do not
have a process group.
.SH CONFORMING TO
SVr4, 4.4BSD (the
.BR killpg ()
function call first rocked up in 4BSD), POSIX.1-2001.
.SH NOTES
There is various differences between tha permission checking
in BSD-type systems n' System V-type systems.
See tha POSIX rationale for
.BR bust a cap up in ().
A difference not mentioned by POSIX concerns tha return
value
.BR EPERM :
BSD documents dat no signal is busted and
.B EPERM
returned when tha permission check failed fo' at least one target process,
while POSIX documents
.B EPERM
only when tha permission check failed fo' all target processes.

On Linux,
.BR killpg ()
is implemented as a library function dat make tha call
.IR "kill(-pgrp,\ sig)" .
.SH SEE ALSO
.BR getpgrp (2),
.BR bust a cap up in (2),
.BR signal (2),
.BR capabilitizzles (7),
.BR credentials (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
