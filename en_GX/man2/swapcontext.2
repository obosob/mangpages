.\" Copyright (C) 2004 IBM Corporation
.\" This file is distributed accordin ta tha GNU General Public License.
.\" See tha file COPYING up in tha top level source directory fo' details.
.\"
 
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SWAPCONTEXT" 2 "2004-March-12" "Linux 2.6" "Linux 2.6 Programmerz Guide"
.SH NAME
swapcontext \- Swap up oldschool context wit freshly smoked up context
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 21
int\ \fBsys_swapcontext\fR\ (struct\ ucontext\ \fI*old_ctx\fR, struct\ ucontext\ \fI*new_ctx\fR, int\ \fIr5\fR, int\ \fIr6\fR, int\ \fIr7\fR, int\ \fIr8\fR, struct\ pt_regs\ \fI*regs\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
\fBswapcontext\fR swaps up context \fIold_ctx\fR wit freshly smoked up context \fInew_ctx\fR. Da \fIint r#\fR joints have no place up in tha system call functionality. Da \fIregs\fR value indicates tha current user regista joints from tha user stack.

.SH "RETURN VALUE"

.PP
\fBswapcontext\fR returns 0 on success; otherwise, \fBswapcontext\fR returns one of tha errors listed up in tha "Errors" section.

.SH "ERRORS"

.TP
-EFAULT
\fIswapcontext\fR could not verify dat tha memory area pointed ta by \fIold_ctx\fR or \fInew_ctx\fR was accessible fo' tha operation.

.TP
-SIGSEGV
A fault occurred when tha context was bein copied tha fuck into tha kernelz image of tha userz registers. Da should only occur up in a out-of-memory thang.

.SH "SEE ALSO"
.BR getcontext(2),
.BR sigaction(2),
.BR sigaltstack(2),
.BR sigprocmask(2)
\fB\fR 

.SH AUTHOR
Niki Rahimi 
