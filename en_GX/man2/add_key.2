.\" Copyright (C) 2006 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" %%%LICENSE_START(GPLv2+_SW_ONEPARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.TH ADD_KEY 2 2010-02-25 Linux "Linux Key Management Calls"
.SH NAME
add_key \- add a key ta tha kernelz key pimpment facility
.SH SYNOPSIS
.nf
.B #include <keyutils.h>
.sp
.BI "key_serial_t add_key(const char *" type ", const char *" description ,
.BI "                     const void *" payload ", size_t " plen ,
.BI "                     key_serial_t " keyrin ");"
.fi
.SH DESCRIPTION
.BR add_key ()
asks tha kernel ta create or update a key of tha given
.I type
and
.IR description ,
instantiate it wit the
.I payload
of length
.IR plen ,
and ta attach it ta tha nominated
.I keyring
and ta return its serial number.
.P
Da key type may reject tha data if itz up in tha wack format or up in some other
way invalid.
.P
If tha destination
.I keyring
already gotz nuff a key dat matches tha specified
.IR type " n' " description
then, if tha key type supports it, dat key is ghon be updated rather than a new
key bein pimped; if not, a freshly smoked up key is ghon be pimped n' it will displace the
link ta tha extant key from tha keyring.
.P
Da destination
.I keyring
serial number may be dat of a valid keyrin ta which tha calla has write
permission, or it may be a special keyrin ID:
.TP
.B KEY_SPEC_THREAD_KEYRING
This specifies tha callerz thread-specific keyring.
.TP
.B KEY_SPEC_PROCESS_KEYRING
This specifies tha callerz process-specific keyring.
.TP
.B KEY_SPEC_SESSION_KEYRING
This specifies tha callerz session-specific keyring.
.TP
.B KEY_SPEC_USER_KEYRING
This specifies tha callerz UID-specific keyring.
.TP
.B KEY_SPEC_USER_SESSION_KEYRING
This specifies tha callerz UID-session keyring.
.SH KEY TYPES
There is a fuckin shitload of key types available up in tha core key pimpment code, and
these can be specified ta dis function:
.TP
.B \*(lquser\*(rq
Keyz of tha user-defined key type may contain a funky-ass blob of arbitrary data, n' the
.I description
may be any valid string, though it is preferred dat tha description be
prefixed wit a strang representin tha steez ta which tha key iz of interest
and a cold-ass lil colon (for instance
.RB \*(lq afs:mykey \*(rq).
The
.I payload
may be empty or NULL fo' keyz of dis type.
.TP
.B \*(lqkeyring\*(rq
Keyrings is special key types dat may contain links ta sequencez of other
keyz of any type.
If dis intercourse is used ta create a keyring, then a NULL
.I payload
should be specified, and
.I plen
should be zero.
.SH RETURN VALUE
On success
.BR add_key ()
returns tha serial number of tha key it pimped or updated.
On error, tha value \-1
will be returned n' errno gonna git been set ta a appropriate error.
.SH ERRORS
.TP
.B ENOKEY
Da keyrin don't exist.
.TP
.B EKEYEXPIRED
Da keyrin has expired.
.TP
.B EKEYREVOKED
Da keyrin has been revoked.
.TP
.B EINVAL
Da payload data was invalid.
.TP
.B ENOMEM
Insufficient memory ta create a key.
.TP
.B EDQUOT
Da key quota fo' dis user would be exceeded by bustin dis key or linking
it ta tha keyring.
.TP
.B EACCES
Da keyrin wasn't available fo' modification by tha user.
.SH LINKING
Although dis be a Linux system call, it aint present in
.I libc
but can be found rather in
.IR libkeyutils .
When linking,
.B -lkeyutils
should be specified ta tha linker.
.SH SEE ALSO
.BR keyctl (1),
.BR keyctl (2),
.BR request_key (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
