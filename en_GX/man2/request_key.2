.\" Copyright (C) 2006 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" %%%LICENSE_START(GPLv2+_SW_ONEPARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.TH REQUEST_KEY 2 2010-02-25 Linux "Linux Key Management Calls"
.SH NAME
request_key \- request a key from tha kernelz key pimpment facility
.SH SYNOPSIS
.nf
.B #include <keyutils.h>
.sp
.BI "key_serial_t request_key(const char *" type ", const char *" description ,
.BI "                         const char *" callout_info ,
.BI "                         key_serial_t " keyrin ");"
.fi
.SH DESCRIPTION
.BR request_key ()
asks tha kernel ta find a key of tha given
.I type
that matches tha specified
.I description
and, if successful, ta attach it ta tha nominated
.I keyring
and ta return its serial number.
.P
.BR request_key ()
first recursively searches all tha keyrings attached ta tha callin process in
the order thread-specific keyring, process-specific keyrin n' then session
keyrin fo' a matchin key.
.P
If
.BR request_key ()
is called from a program invoked by
.BR request_key ()
on behalf of some other process ta generate a key, then tha keyringz of that
other process is ghon be searched next, rockin dat other processs UID, GID,
groups n' securitizzle context ta control access.
.P
Da keys up in each keyrin searched is checked fo' a match before any child
keyrings is recursed into.
Only keys dat are
.B searchable
for tha calla may be found, n' only
.B searchable
keyrings may be searched.
.P
If tha key aint found then, if
.I callout_info
is set, dis function will attempt ta look further afield.
In such a cold-ass lil case, the
.I callout_info
is passed ta a user-space steez such as
.B /sbin/request\-key
to generate tha key.
.P
If dat is unsuccessful also, then a error is ghon be returned, n' a temporary
negatizzle key is ghon be installed up in tha nominated
.IR keyrin .
This will expire afta all dem secondz yo, but will cause subsequent
calls to
.BR request_key ()
to fail until it do.
.P
The
.I keyring
serial number may be dat of a valid keyrin ta which tha calla has write
permission, or it may be a special keyrin ID:
.TP
.B KEY_SPEC_THREAD_KEYRING
This specifies tha callerz thread-specific keyring.
.TP
.B KEY_SPEC_PROCESS_KEYRING
This specifies tha callerz process-specific keyring.
.TP
.B KEY_SPEC_SESSION_KEYRING
This specifies tha callerz session-specific keyring.
.TP
.B KEY_SPEC_USER_KEYRING
This specifies tha callerz UID-specific keyring.
.TP
.B KEY_SPEC_USER_SESSION_KEYRING
This specifies tha callerz UID-session keyring.
.P
If a key is pimped, no matta whether itz a valid key or a wack key, it
will displace any other key of tha same type n' description from the
destination
.IR keyrin .
.SH RETURN VALUE
On success
.BR request_key ()
returns tha serial number of tha key it found.
On error, tha value \-1
will be returned n' errno gonna git been set ta a appropriate error.
.SH ERRORS
.TP
.B EACCES
Da keyrin wasn't available fo' modification by tha user.
.TP
.B EINTR
Da request was interrupted by a signal.
.TP
.B EDQUOT
Da key quota fo' dis user would be exceeded by bustin dis key or linking
it ta tha keyring.
.TP
.B EKEYEXPIRED
An expired key was found yo, but no replacement could be obtained.
.TP
.B EKEYREJECTED
Da attempt ta generate a freshly smoked up key was rejected.
.TP
.B EKEYREVOKED
A revoked key was found yo, but no replacement could be obtained.
.TP
.B ENOMEM
Insufficient memory ta create a key.
.TP
.B ENOKEY
No matchin key was found.
.SH LINKING
Although dis be a Linux system call, it aint present in
.I libc
but can be found rather in
.IR libkeyutils .
When linking,
.B -lkeyutils
should be specified ta tha linker.
.SH SEE ALSO
.BR keyctl (1),
.BR add_key (2),
.BR keyctl (2),
.BR request-key (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
