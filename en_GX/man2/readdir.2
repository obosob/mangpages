.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Mike Chastain <mec@duracef.shout.net>:
.\"   In 1.3.X, returns only one entry each time; return value is different.
.\" Modified 2004-12-01, mtk, fixed headaz listed up in SYNOPSIS
.\"
.TH READDIR 2  2013-06-21 "Linux" "Linux Programmerz Manual"
.SH NAME
readdir \- read directory entry
.SH SYNOPSIS
.nf
.sp
.BI "int readdir(unsigned int " fd ", struct old_linux_dirent *" dirp ","
.BI "            unsigned int " count );
.fi

.IR Note :
There is no glibc wrapper fo' dis system call; peep NOTES.
.SH DESCRIPTION
This aint tha function yo ass is interested in.
Look at
.BR readdir (3)
for tha POSIX conformin C library intercourse.
This page documents tha bare kernel system call intercourse,
which is superseded by
.BR getdents (2).
.PP
.BR readdir ()
readz one
.I old_linux_dirent
structure from tha directory
referred ta by tha file descriptor
.I fd
into tha buffer pointed ta by
.IR dirp .
Da argument
.I count
is ignored; at most one
.I old_linux_dirent
structure is read.
.PP
The
.I old_linux_dirent
structure is declared as bigs up:
.PP
.in +4n
.nf
struct old_linux_dirent {
    long  d_ino;              /* inode number */
    off_t d_off;              /* offset ta dis \fIold_linux_dirent\fP */
    unsigned short d_reclen;  /* length of dis \fId_name\fP */
    char  d_name[NAME_MAX+1]; /* filename (null-terminated) */
}
.fi
.in
.PP
.I d_ino
is a inode number.
.I d_off
is tha distizzle from tha start of tha directory ta this
.IR old_linux_dirent .
.I d_reclen
is tha size of
.IR d_name ,
not countin tha terminatin null byte (\(aq\\0\(aq).
.I d_name
is a null-terminated filename.
.SH RETURN VALUE
On success, 1 is returned.
On end of directory, 0 is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EBADF
Invalid file descriptor
.IR fd .
.TP
.B EFAULT
Argument points outside tha callin processs address space.
.TP
.B EINVAL
Result buffer is too small.
.TP
.B ENOENT
No such directory.
.TP
.B ENOTDIR
File descriptor do not refer ta a gangbangin' finger-lickin' directory.
.SH CONFORMING TO
This system call is Linux-specific.
.SH NOTES
Glibc do not provide a wrapper fo' dis system call; call it using
.BR syscall (2).
Yo ass will need ta define the
.I old_linux_dirent
structure yo ass.
But fuck dat shiznit yo, tha word on tha street is dat probably you should use
.BR readdir (3)
instead.

This system call do not exist on x86-64.
.SH SEE ALSO
.BR getdents (2),
.BR readdir (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
