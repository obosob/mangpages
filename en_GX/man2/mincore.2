
.\" n' Copyright (C) 2007 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Created Sun Jun 3 17:23:32 2001 by bert hubert <ahu@ds9a.nl>
.\" Slightly adapted, followin comments by Hugh Dickins, aeb, 2001-06-04.
.\" Modified, 20 May 2003, Mike Kerrisk <mtk.manpages@gmail.com>
.\" Modified, 30 Apr 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\" 2005-04-05 mtk, Fixed error descriptions
.\" 	afta message from <gordon.jin@intel.com>
.\" 2007-01-08 mtk, rewrote various parts
.\"
.TH MINCORE 2 2008-04-22 "Linux" "Linux Programmerz Manual"
.SH NAME
mincore \- determine whether pages is resident up in memory
.SH SYNOPSIS
.B #include <unistd.h>
.br
.B #include <sys/mman.h>
.sp
.BI "int mincore(void *" addr ", size_t " length ", unsigned char *" vec );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR mincore ():
_BSD_SOURCE || _SVID_SOURCE
.SH DESCRIPTION
.BR mincore ()
returns a vector dat indicates whether pages
of tha callin processs virtual memory is resident up in core (RAM),
and so aint gonna cause a gangbangin' finger-lickin' disk access (page fault) if referenced.
Da kernel returns residency shiznit bout tha pages
startin all up in tha address
.IR addr ,
and continuin for
.I length
bytes.

The
.I addr
argument must be a multiple of tha system page size.
The
.I length
argument need not be a multiple of tha page size,
but since residency shiznit is returned fo' whole pages,
.I length
is effectively rounded up ta tha next multiple of tha page size.
One may obtain tha page size
.RB ( PAGE_SIZE )
using
.IR sysconf(_SC_PAGESIZE) .

The
.I vec
argument must point ta a array containin at least
.I "(length+PAGE_SIZE\-1) / PAGE_SIZE"
bytes.
On return,
the least dope bit of each byte is ghon be set if
the correspondin page is currently resident up in memory,
and be clear otherwise.
(Da settingz of tha other bits up in each byte is undefined;
these bits is reserved fo' possible lata use.)
Of course tha shiznit returned in
.I vec
is only a snapshot: pages dat is not
locked up in memory can come n' go at any moment, n' tha contents of
.I vec
may already be stale by tha time dis call returns.
.SH RETURN VALUE
On success,
.BR mincore ()
returns zero.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.B EAGAIN
kernel is temporarily outta resources.
.TP
.B EFAULT
.I vec
points ta a invalid address.
.TP
.B EINVAL
.I addr
is not a multiple of tha page size.
.TP
.B ENOMEM
.I length
is pimped outa than
.RI ( TASK_SIZE " \- " addr ).
(This could occur if a wack value is specified for
.IR length ,
since dat value is ghon be interpreted as a large
unsigned integer.)
In Linux 2.6.11 n' earlier, tha error
.B EINVAL
was returned fo' dis condition.
.TP
.B ENOMEM
.I addr
to
.I addr
+
.I length
contained unmapped memory.
.SH VERSIONS
Available since Linux 2.3.99pre1 n' glibc 2.2.
.SH CONFORMING TO
.BR mincore ()
is not specified up in POSIX.1-2001,
and it aint available on all UNIX implementations.
.\" It be on at least NetBSD, FreeBSD, OpenBSD, Solaris 8,
.\" AIX 5.1, SunOS 4.1
.\" .SH HISTORY
.\" The
.\" .BR mincore ()
.\" function first rocked up in 4.4BSD.
.SH BUGS
Before kernel 2.6.21,
.BR mincore ()
did not return erect shiznit for
.B MAP_PRIVATE
mappings, or fo' nonlinear mappings (established using
.BR remap_file_pages (2)).
.\" Linux (up ta now, 2.6.5),
.\" .B mincore
.\" do not return erect shiznit fo' MAP_PRIVATE mappings:
.\" fo' a MAP_PRIVATE file mapping,
.\" .B mincore
.\" returns tha residency of tha file pages, rather than any
.\" modified process-private pages dat done been copied on write;
.\" fo' a MAP_PRIVATE mappin of
.\" .IR /dev/zero ,
.\" .B mincore
.\" always reports pages as nonresident;
.\" n' fo' a MAP_PRIVATE, MAP_ANONYMOUS mapping,
.\" .B mincore
.\" always fails wit tha error
.\" .BR ENOMEM .
.SH SEE ALSO
.BR mlock (2),
.BR mmap (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
