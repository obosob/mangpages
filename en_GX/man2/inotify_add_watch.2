.\" Copyright (C) 2005 Robert Love
.\" n' Copyright, 2006 Mike Kerrisk
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" 2005-07-19 Robert Ludd <rlove@rlove.org> - initial version
.\" 2006-02-07 mtk, various chizzles
.\"
.TH INOTIFY_ADD_WATCH 2 2010-10-20 "Linux" "Linux Programmerz Manual"
.SH NAME
inotify_add_watch \- add a peep ta a initialized inotify instance
.SH SYNOPSIS
.B #include <sys/inotify.h>
.sp
.BI "int inotify_add_watch(int " fd ", const char *" pathname ", uint32_t " mask );
.SH DESCRIPTION
.BR inotify_add_watch ()
addz a freshly smoked up peep it, or modifies a existin watch,
for tha file whose location is specified in
.IR pathname ;
the calla must have read permission fo' dis file.
The
.I fd
argument be a gangbangin' file descriptor referrin ta the
inotify instizzle whose peep list is ta be modified.
Da events ta be monitored for
.I pathname
are specified up in the
.I mask
bit-mask argument.
See
.BR inotify (7)
for a thugged-out description of tha bits dat can be set in
.IR mask .

A successful call to
.BR inotify_add_watch ()
returns tha unique peep descriptor associated with
.I pathname
for dis inotify instance.
If
.I pathname
was not previously bein peeped by dis inotify instance,
then tha peep descriptor is newly allocated.
If
.I pathname
was already bein peeped it, then tha descriptor
for tha existin peep is returned.

Da peep descriptor is returned by later
.BR read (2)s
from tha inotify file descriptor.
These readz fetch
.I inotify_event
structures (see
.BR inotify (7))
indicatin file system events;
the peep descriptor inside dis structure identifies
the object fo' which tha event occurred.
.SH RETURN VALUE
On success,
.BR inotify_add_watch ()
returns a nonnegatizzle peep descriptor.
On error \-1 is returned and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EACCES
Read access ta tha given file aint permitted.
.TP
.B EBADF
Da given file descriptor aint valid.
.TP
.B EFAULT
.I pathname
points outside of tha processs accessible address space.
.TP
.B EINVAL
Da given event mask gotz nuff no valid events; or
.I fd
is not a inotify file descriptor.
.TP
.B ENOENT
A directory component in
.I pathname
does not exist or be a thugged-out danglin symbolic link.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOSPC
Da user limit on tha total number of inotify watches was reached or the
kernel failed ta allocate a needed resource.
.SH VERSIONS
Inotify was merged tha fuck into tha 2.6.13 Linux kernel.
.SH CONFORMING TO
This system call is Linux-specific.
.SH SEE ALSO
.BR inotify_init (2),
.BR inotify_rm_watch (2),
.BR inotify (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
