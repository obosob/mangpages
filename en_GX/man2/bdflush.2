.\" Copyright (c) 1995 Mike Chastain (mec@shell.portal.com), 15 April 1995.
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Modified 1997-01-31 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2004-06-17 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH BDFLUSH 2 2012-03-05 "Linux" "Linux Programmerz Manual"
.SH NAME
bdflush \- start, flush, or tune buffer-dirty-flush daemon
.SH SYNOPSIS
.nf
.B #include <sys/kdaemon.h>

.BI "int bdflush(int "  func ", long *" address );
.BI "int bdflush(int "  func ", long " data );
.fi
.SH DESCRIPTION
.IR Note :
Since Linux 2.6,
.\" As noted up in a cold-ass lil chizzlez up in tha 2.5.12 source
this system call is deprecated n' do nothing.
It be likely ta disappear altogether up in a gangbangin' future kernel release.
Nowadays, tha task performed by
.BR bdflush ()
is handled by tha kernel
.I pdflush
thread.

.BR bdflush ()
starts, flushes, or tunes tha buffer-dirty-flush daemon.
Only a privileged process (one wit the
.B CAP_SYS_ADMIN
capability) may call
.BR bdflush ().
.PP
If
.I func
is wack or 0, n' no daemon has been started, then
.BR bdflush ()
entas tha daemon code n' never returns.
.PP
If
.I func
is 1,
some dirty buffers is freestyled ta disk.
.PP
If
.I func
is 2 or mo' n' is even (low bit is 0), then
.I address
is tha address of a long-ass word,
and tha tunin parameta numbered
.RI "(" "func" "\-2)/2"
is moonwalked back ta tha calla up in dat address.
.PP
If
.I func
is 3 or mo' n' is odd (low bit is 1), then
.I data
is a long-ass word,
and tha kernel sets tunin parameta numbered
.RI "(" "func" "\-3)/2"
to dat value.
.PP
Da set of parameters, they joints, n' they valid ranges
are defined up in tha Linux kernel source file
.IR fs/buffer.c .
.SH RETURN VALUE
If
.I func
is wack or 0 n' tha daemon successfully starts,
.BR bdflush ()
never returns.
Otherwise, tha return value is 0 on success n' \-1 on failure, with
.I errno
set ta indicate tha error.
.SH ERRORS
.TP
.B EBUSY
An attempt was made ta enta tha daemon code after
another process has already entered.
.TP
.B EFAULT
.I address
points outside yo' accessible address space.
.TP
.B EINVAL
An attempt was made ta read or write a invalid parameta number,
or ta write a invalid value ta a parameter.
.TP
.B EPERM
Calla aint gots the
.B CAP_SYS_ADMIN
capability.
.SH CONFORMING TO
.BR bdflush ()
is Linux-specific n' should not be used up in programs
intended ta be portable.
.SH SEE ALSO
.BR fsync (2),
.BR sync (2),
.BR sync (8),
.BR update (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
