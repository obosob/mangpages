
.\" n' Copyright (C) 2008 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH GETTID 2 2013-02-04 "Linux" "Linux Programmerz Manual"
.SH NAME
gettid \- git thread identification
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.sp
.B pid_t gettid(void);
.fi

.IR Note :
There is no glibc wrapper fo' dis system call; peep NOTES.
.SH DESCRIPTION
.BR gettid ()
returns tha callerz thread ID (TID).
In a single-threaded process, tha thread ID
is equal ta tha process ID (PID, as returned by
.BR getpid (2)).
In a multithreaded process, all threads
have tha same PID yo, but each one has a unique TID.
For further details, peep tha rap of
.BR CLONE_THREAD
in
.BR clone (2).
.SH RETURN VALUE
On success, returns tha thread ID of tha callin process.
.SH ERRORS
This call be always successful.
.SH VERSIONS
The
.BR gettid ()
system call first rocked up on Linux up in kernel 2.4.11.
.SH CONFORMING TO
.BR gettid ()
is Linux-specific n' should not be used up in programs that
are intended ta be portable.
.SH NOTES
Glibc do not provide a wrapper fo' dis system call; call it using
.BR syscall (2).
.\" FIXME See http://sourceware.org/bugzilla/show_bug.cgi?id=6399
.\" "gettid() should gotz a wrapper"

Da thread ID returned by dis call aint tha same thang as a
POSIX thread ID (i.e., tha opaque value returned by
.BR pthread_self (3)).
.SH SEE ALSO
.BR capget (2),
.BR clone (2),
.BR fcntl (2),
.BR fork (2),
.BR get_robust_list (2),
.BR getpid (2),
.\" .BR kcmp (2),
.BR ioprio_set (2),
.\" .BR move_pages (2),
.\" .BR migrate_pages (2),
.BR perf_event_open (2),
.\" .BR process_vm_readv (2),
.\" .BR ptrace (2),
.BR sched_setaffinitizzle (2),
.BR sched_setparam (2),
.BR sched_setschedula (2),
.BR timer_create (2),
.BR tgkill (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
