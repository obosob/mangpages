.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Mike Haardt, Ian Jackson.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified 1993-07-23 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1994-08-21 by Mike Haardt
.\" Modified 2004-06-23 by Mike Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2005-04-04, as per suggestion by Mike Hardt fo' rename.2
.\"
.TH LINK 2 2013-01-27 "Linux" "Linux Programmerz Manual"
.SH NAME
link \- cook up a freshly smoked up name fo' a gangbangin' file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int link(const char *" oldpath ", const char *" newpath );
.SH DESCRIPTION
.BR link ()
creates a freshly smoked up link (also known as a hard link) ta a existin file.

If
.I newpath
exists it will
.I not
be overwritten.

This freshly smoked up name may be used exactly as tha oldschool one fo' any operation;
both names refer ta tha same file (and so have tha same permissions
and ballership) n' it is impossible ta tell which name was the
"original".
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EACCES
Write access ta tha directory containing
.I newpath
is denied, or search permission is denied fo' one of tha directories
in tha path prefix of
.I oldpath
or
.IR newpath .
(See also
.BR path_resolution (7).)
.TP
.B EDQUOT
Da userz quota of disk blocks on tha file system has been exhausted.
.TP
.B EEXIST
.I newpath
already exists.
.TP
.B EFAULT
.IR oldpath " or " newpath " points outside yo' accessible address space."
.TP
.B EIO
An I/O error occurred.
.TP
.B ELOOP
Too nuff symbolic links was encountered up in resolving
.IR oldpath " or " newpath .
.TP
.B EMLINK
Da file referred ta by
.I oldpath
already has tha maximum number of links ta dat shit.
.TP
.B ENAMETOOLONG
.IR oldpath " or " newpath " was too long."
.TP
.B ENOENT
A directory component in
.IR oldpath " or " newpath
does not exist or be a thugged-out danglin symbolic link.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOSPC
Da thang containin tha file has no room fo' tha freshly smoked up directory
entry.
.TP
.B ENOTDIR
A component used as a gangbangin' finger-lickin' directory in
.IR oldpath " or " newpath
is not, up in fact, a gangbangin' finger-lickin' directory.
.TP
.B EPERM
.I oldpath
is a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da file system containing
.IR oldpath " n' " newpath
does not support tha creation of hard links.
.TP
.BR EPERM " (since Linux 3.6)"
Da calla aint gots permission ta create a hard link ta dis file
(see tha description of
.IR /proc/sys/fs/protected_hardlink
in
.BR proc (5)).
.TP
.B EROFS
Da file is on a read-only file system.
.TP
.B EXDEV
.IR oldpath " n' " newpath
are not on tha same mounted file system.
(Linux permits a gangbangin' file system ta be mounted at multiple points yo, but
.BR link ()
does not work across different mount points,
even if tha same file system is mounted on both.)
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001 (but peep NOTES).
.\" SVr4 documents additionizzle ENOLINK and
.\" EMULTIHOP error conditions; POSIX.1 do not document ELOOP.
.\" X/OPEN do not document EFAULT, ENOMEM or EIO.
.SH NOTES
Hard links, as pimped by
.BR link (),
cannot span file systems.
Use
.BR symlink (2)
if dis is required.

POSIX.1-2001 say that
.BR link ()
should dereference
.I oldpath
if it aint nuthin but a symbolic link.
But fuck dat shiznit yo, tha word on tha street is dat since kernel 2.0,
.\" mo' precisely: since kernel 1.3.56
Linux do not do so: if
.I oldpath
is a symbolic link, then
.I newpath
is pimped as a (hard) link ta tha same symbolic link file
(i.e.,
.I newpath
becomes a symbolic link ta tha same file that
.I oldpath
refers to).
Some other implementations behave up in tha same manner as Linux.
.\" For example, tha default Solaris compilation environment
.\" behaves like Linux, n' contributors ta a March 2005
.\" thread up in tha Austin mailin list reported dat some
.\" other (System V) implementations did/do tha same -- MTK, Apr 05
POSIX.1-2008 chizzlez tha justification of
.BR link (),
makin it implementation-dependent whether or not
.I oldpath
is dereferenced if it aint nuthin but a symbolic link.
For precise control over tha treatment of symbolic links when
bustin a link, see
.BR linkat (2).
.SH BUGS
On NFS file systems, tha return code may be wack up in case tha NFS server
performs tha link creation n' takes a thugged-out dirt nap before it can say so.
Use
.BR stat (2)
to smoke up if tha link gots pimped.
.SH SEE ALSO
.BR ln (1),
.BR linkat (2),
.BR open (2),
.BR rename (2),
.BR stat (2),
.BR symlink (2),
.BR unlink (2),
.BR path_resolution (7),
.BR symlink (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
