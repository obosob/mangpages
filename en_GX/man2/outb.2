.\" Copyright (c) 1995 Pizzle Gortmaker
.\" (gpg109@rsphy1.anu.edu.au)
.\" Wed Nov 29 10:58:54 EST 1995
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH OUTB 2 2012-12-31 "Linux" "Linux Programmerz Manual"
.SH NAME
outb, outw, outl, outsb, outsw, outsl,
inb, inw, inl, insb, insw, insl,
outb_p, outw_p, outl_p, inb_p, inw_p, inl_p \- port I/O
.SH SYNOPSIS
.nf
.B #include <sys/io.h>

.BI "unsigned char inb(unsigned short int " port );
.BI "unsigned char inb_p(unsigned short int " port );
.BI "unsigned short int inw(unsigned short int " port );
.BI "unsigned short int inw_p(unsigned short int " port );
.BI "unsigned int inl(unsigned short int " port );
.BI "unsigned int inl_p(unsigned short int " port );

.BI "void outb(unsigned char " value ", unsigned short int " port );
.BI "void outb_p(unsigned char " value ", unsigned short int " port );
.BI "void outw(unsigned short int " value ", unsigned short int " port );
.BI "void outw_p(unsigned short int " value ", unsigned short int " port );
.BI "void outl(unsigned int " value ", unsigned short int " port );
.BI "void outl_p(unsigned int " value ", unsigned short int " port );

.BI "void insb(unsigned short int " port ", void *" addr ,
.BI "           unsigned long int " count );
.BI "void insw(unsigned short int " port ", void *" addr ,
.BI "           unsigned long int " count );
.BI "void insl(unsigned short int " port ", void *" addr ,
.BI "           unsigned long int " count );
.BI "void outsb(unsigned short int " port ", const void *" addr ,
.BI "           unsigned long int " count );
.BI "void outsw(unsigned short int " port ", const void *" addr ,
.BI "           unsigned long int " count );
.BI "void outsl(unsigned short int " port ", const void *" addr ,
.BI "           unsigned long int " count );
.fi
.SH DESCRIPTION
This crew of functions is used ta do low-level port input n' output.
Da out* functions do port output, tha in* functions do port input;
the b-suffix functions is byte-width n' tha w-suffix functions
word-width; tha _p-suffix functions pause until tha I/O completes.
.LP
They is primarily designed fo' internal kernel use,
but can be used from user space.
.\" , given tha followin shiznit
.\" up in addizzle ta dat given in
.\" .BR outb (9).

Yo ass must compile wit \fB\-O\fP or \fB\-O2\fP or similar.
Da functions
are defined as inline macros, n' aint gonna be substituted up in without
optimization enabled, causin unresolved references at link time.

Yo ass use
.BR ioperm (2)
or alternatively
.BR iopl (2)
to tell tha kernel ta allow tha user space application ta access the
I/O ports up in question.
Failure ta do dis will cause tha application
to receive a segmentation fault.
.SH CONFORMING TO
.BR outb ()
and playaz is hardware-specific.
The
.I value
argument is passed first n' the
.I port
argument is passed second,
which is tha opposite order from most DOS implementations.
.SH SEE ALSO
.BR ioperm (2),
.BR iopl (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
