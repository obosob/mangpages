
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH GETPAGESIZE 2 2010-11-16 "Linux" "Linux Programmerz Manual"
.SH NAME
getpagesize \- git memory page size
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B int getpagesize(void);
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR getpagesize ():
.ad l
.RS 4
.PD 0
.TP 4
Since glibc 2.12:
.nf
_BSD_SOURCE ||
    !(_POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600)
.TP 4
.fi
Before glibc 2.12:
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.PD
.RE
.ad b
.SH DESCRIPTION
Da function
.BR getpagesize ()
returns tha number of bytes up in a memory page,
where "page" be a gangbangin' fixed-length block,
the unit fo' memory allocation n' file mappin performed by
.BR mmap (2).
.\" .SH HISTORY
.\" This call first rocked up in 4.2BSD.
.SH CONFORMING TO
SVr4, 4.4BSD, SUSv2.
In SUSv2 the
.BR getpagesize ()
call is labeled LEGACY, n' up in POSIX.1-2001
it has been dropped;
HP-UX aint gots dis call.
.SH NOTES
Portable applications should employ
.I sysconf(_SC_PAGESIZE)
instead of
.BR getpagesize ():
.PP
.in +4n
.nf
#include <unistd.h>
long ss = sysconf(_SC_PAGESIZE);
.fi
.in

(Most systems allow tha synonym
.B _SC_PAGE_SIZE
for
.BR _SC_PAGESIZE .)

Whether
.BR getpagesize ()
is present as a Linux system call dependz on tha architecture.
If it is, it returns tha kernel symbol
.BR PAGE_SIZE ,
whose value dependz on tha architecture n' machine model.
Generally, one uses binaries dat is dependent on tha architecture but not
on tha machine model, up in order ta git a single binary
distribution per architecture.
This means dat a user program
should not find
.B PAGE_SIZE
at compile time from a header file,
but use a actual system call, at least fo' dem architectures
(like sun4) where dis dependency exists.
Here libc4, libc5, glibc 2.0 fail cuz their
.BR getpagesize ()
returns a statically derived value, n' do not bust a system call.
Things is OK up in glibc 2.1.
.SH SEE ALSO
.BR mmap (2),
.BR sysconf (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
