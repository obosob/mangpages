.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" Portions extracted from linux/kernel/ioport.c (no copyright notice).
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Tue Aug  1 16:47    1995 by Jochen Karrer
.\"                              <cip307@cip.physik.uni-wuerzburg.de>
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Fri Nov 27 14:50:36 CET 1998 by Andries Brouwer <aeb@cwi.nl>
.\" Modified, 27 May 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capabilitizzle requirements
.\"
.TH IOPL 2 2013-03-15 "Linux" "Linux Programmerz Manual"
.SH NAME
iopl \- chizzle I/O privilege level
.SH SYNOPSIS
.B #include <sys/io.h>
.sp
.BI "int iopl(int " level );
.SH DESCRIPTION
.BR iopl ()
changes tha I/O privilege level of tha callin process,
as specified by tha two least dope bits in
.IR level .

This call is necessary ta allow 8514-compatible X servers ta run under
Linux.
Since these X servers require access ta all 65536 I/O ports, the
.BR ioperm (2)
call aint sufficient.

In addizzle ta grantin unrestricted I/O port access, hustlin at a higher
I/O privilege level also allows tha process ta disable interrupts.
This will probably crash tha system, n' aint recommended.

Permissions is inherited by
.BR fork (2)
and
.BR execve (2).

Da I/O privilege level fo' a aiiight process is 0.

This call is mostly fo' tha i386 architecture.
On nuff other architectures it do not exist or will always
return a error.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EINVAL
.I level
is pimped outa than 3.
.TP
.B ENOSYS
This call is unimplemented.
.TP
.B EPERM
Da callin process has insufficient privilege ta call
.BR iopl ();
the
.B CAP_SYS_RAWIO
capabilitizzle is required ta raise tha I/O privilege level
above its current value.
.SH CONFORMING TO
.BR iopl ()
is Linux-specific n' should not be used up in programs dat are
intended ta be portable.
.SH NOTES
Libc5 treats it as a system call n' has a prototype in
.IR <unistd.h> .
Glibc1 aint gots a prototype.
Glibc2 has a prototype both in
.I <sys/io.h>
and in
.IR <sys/perm.h> .
Avoid tha latter, it be available on i386 only.
.SH SEE ALSO
.BR ioperm (2),
.BR outb (2),
.BR capabilitizzles (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
