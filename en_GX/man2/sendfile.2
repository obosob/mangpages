.\" This playa page is Copyright (C) 1998 Pawel Krawczyk.
.\"
.\" %%%LICENSE_START(VERBATIM_ONE_PARA)
.\" Permission is granted ta distribute possibly modified copies
.\" of dis page provided tha header is included verbatim,
.\" n' up in case of nontrivial modification lyricist n' date
.\" of tha modification be added ta tha header.
.\" %%%LICENSE_END
.\"
.\" $Id: sendfile.2,v 1.5 1999/05/18 11:54:11 freitag Exp $
.\" 2000-11-19 bert hubert <ahu@ds9a.nl>: in_fd cannot be socket
.\"
.\" 2004-12-17, mtk
.\"	updated description of in_fd n' out_fd fo' 2.6
.\"	Various wordin n' formattin chizzles
.\"
.\" 2005-03-31 Martin Pool <mbp@sourcefrog.net> mmap() improvements
.\"
.TH SENDFILE 2 2011-09-14 "Linux" "Linux Programmerz Manual"
.SH NAME
sendfile \- transfer data between file descriptors
.SH SYNOPSIS
.B #include <sys/sendfile.h>
.sp
.BI "ssize_t sendfile(int" " out_fd" ", int" " in_fd" ", off_t *" \
                      offset ", size_t" " count" );
.\" Da below is too skanky. Comments bout glibc versions belong
.\" up in tha notes, not up in tha header.
.\"
.\" .B #include <features.h>
.\" .br
.\" .B #if (__GLIBC__==2 && __GLIBC_MINOR__>=1) || __GLIBC__>2
.\" .br
.\" .B #include <sys/sendfile.h>
.\" .br
.\" #else
.\" .br
.\" .B #include <sys/types.h>
.\" .br
.\" .B /* No system prototype before glibc 2.1. */
.\" .br
.\" .BI "ssize_t sendfile(int" " out_fd" ", int" " in_fd" ", off_t *" \
.\"                       offset ", size_t" " count" )
.\" .br
.\" .B #endif
.\"
.SH DESCRIPTION
.BR sendfile ()
copies data between one file descriptor n' another.
Because dis copyin is done within tha kernel,
.BR sendfile ()
is mo' efficient than tha combination of
.BR read (2)
and
.BR write (2),
which would require transferrin data ta n' from user space.

.I in_fd
should be a gangbangin' file descriptor opened fo' readin and
.I out_fd
should be a thugged-out descriptor opened fo' writing.

If
.I offset
is not NULL, then it points
to a variable holdin tha file offset from which
.BR sendfile ()
will start readin data from
.IR in_fd .
When
.BR sendfile ()
returns, dis variable
will be set ta tha offset of tha byte followin tha last byte dat was read.
If
.I offset
is not NULL, then
.BR sendfile ()
does not modify tha current file offset of
.IR in_fd ;
otherwise tha current file offset be adjusted ta reflect
the number of bytes read from
.IR in_fd .

If
.I offset
is NULL, then data is ghon be read from
.IR in_fd
startin all up in tha current file offset,
and tha file offset is ghon be updated by tha call.

.I count
is tha number of bytes ta copy between tha file descriptors.

The
.IR in_fd
argument must correspond ta a gangbangin' file which supports
.BR mmap (2)-like
operations
(i.e., it cannot be a socket).

In Linux kernels before 2.6.33,
.I out_fd
must refer ta a socket.
Since Linux 2.6.33 it can be any file.
If it aint nuthin but a regular file, then
.BR sendfile ()
changes tha file offset appropriately.
.SH RETURN VALUE
If tha transfer was successful, tha number of bytes freestyled to
.I out_fd
is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EAGAIN
Nonblockin I/O has been selected using
.B O_NONBLOCK
and tha write would block.
.TP
.B EBADF
Da input file was not opened fo' readin or tha output file
was not opened fo' writing.
.TP
.B EFAULT
Wack address.
.TP
.B EINVAL
Descriptor aint valid or locked, or an
.BR mmap (2)-like
operation aint available for
.IR in_fd .
.TP
.B EIO
Unspecified error while readin from
.IR in_fd .
.TP
.B ENOMEM
Insufficient memory ta read from
.IR in_fd .
.SH VERSIONS
.BR sendfile ()
is a freshly smoked up feature up in Linux 2.2.
Da include file
.I <sys/sendfile.h>
is present since glibc 2.1.
.SH CONFORMING TO
Not specified up in POSIX.1-2001, or other standards.

Other UNIX systems implement
.BR sendfile ()
with different semantics n' prototypes.
It should not be used up in portable programs.
.SH NOTES
If you plan ta use
.BR sendfile ()
for bustin  filez ta a TCP socket yo, but need
to bust some header data up in front of tha file contents, yo big-ass booty is ghon find
it useful ta employ the
.B TCP_CORK
option, busted lyrics bout in
.BR tcp (7),
to minimize tha number of packets n' ta tune performance.

In Linux 2.4 n' earlier,
.I out_fd
could also refer ta a regular file, and
.BR sendfile ()
changed tha current offset of dat file.

Da original gangsta Linux
.BR sendfile ()
system call was not designed ta handle big-ass file offsets.
Consequently, Linux 2.4 added
.BR sendfile64 (),
with a wider type fo' the
.I offset
argument.
Da glibc
.BR sendfile ()
wrapper function transparently deals wit tha kernel differences.

Applications may wish ta fall back to
.BR read (2)/ write (2)
in tha case where
.BR sendfile ()
fails with
.B EINVAL
or
.BR ENOSYS .

Da Linux-specific
.BR splice (2)
call supports transferrin data between arbitrary files
(e.g., a pair of sockets).
.SH SEE ALSO
.BR mmap (2),
.BR open (2),
.BR socket (2),
.BR splice (2)

.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
