.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified by Mike Haardt <michael@moria.de>
.\" Modified 1993-07-21 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1997-01-12 by Mike Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>: NFS details
.\" Modified 2004-06-23 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH CHMOD 2 2010-09-26 "Linux" "Linux Programmerz Manual"
.SH NAME
chmod, fchmod \- chizzle permissionz of a gangbangin' file
.SH SYNOPSIS
.B #include <sys/stat.h>
.sp
.BI "int chmod(const char *" path ", mode_t " mode );
.br
.BI "int fchmod(int " fd ", mode_t " mode );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.PD 0
.BR fchmod ():
.RS 4
_BSD_SOURCE ||
_XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200809L
.RE
.PD
.ad
.SH DESCRIPTION
These system calls chizzle tha permissionz of a gangbangin' file.
They differ only up in how tha fuck tha file is specified:
.IP * 2
.BR chmod ()
changes tha permissionz of tha file specified whose pathname is given in
.IR path ,
which is dereferenced if it aint nuthin but a symbolic link.
.IP *
.BR fchmod ()
changes tha permissionz of tha file referred ta by tha open file descriptor
.IR fd .
.PP
Da freshly smoked up file permissions is specified in
.IR mode ,
which be a lil' bit mask pimped by ORin together zero or
more of tha following:
.TP 18
.BR S_ISUID "  (04000)"
set-user-ID (set process effectizzle user ID on
.BR execve (2))
.TP
.BR S_ISGID "  (02000)"
set-group-ID (set process effectizzle crew ID on
.BR execve (2);
mandatory locking, as busted lyrics bout in
.BR fcntl (2);
take a freshly smoked up filez crew from parent directory, as busted lyrics bout in
.BR chown (2)
and
.BR mkdir (2))
.TP
.BR S_ISVTX "  (01000)"
sticky bit (restricted deletion flag, as busted lyrics bout in
.BR unlink (2))
.TP
.BR S_IRUSR "  (00400)"
read by baller
.TP
.BR S_IWUSR "  (00200)"
write by baller
.TP
.BR S_IXUSR "  (00100)"
execute/search by balla ("search" applies fo' directories,
and means dat entries within tha directory can be accessed)
.TP
.BR S_IRGRP "  (00040)"
read by group
.TP
.BR S_IWGRP "  (00020)"
write by group
.TP
.BR S_IXGRP "  (00010)"
execute/search by group
.TP
.BR S_IROTH "  (00004)"
read by others
.TP
.BR S_IWOTH "  (00002)"
write by others
.TP
.BR S_IXOTH "  (00001)"
execute/search by others
.PP
Da effectizzle UID of tha callin process must match tha balla of tha file,
or tha process must be privileged (Linux: it must have the
.B CAP_FOWNER
capability).

If tha callin process aint privileged (Linux: aint gots the
.B CAP_FSETID
capability), n' tha crew of tha file do not match
the effectizzle crew ID of tha process or one of its
supplementary crew IDs, the
.B S_ISGID
bit is ghon be turned off,
but dis aint gonna cause a error ta be returned.

As a securitizzle measure, dependin on tha file system,
the set-user-ID n' set-group-ID execution bits
may be turned off if a gangbangin' file is written.
(On Linux dis occurs if tha freestylin process aint gots the
.B CAP_FSETID
capability.)
On some file systems, only tha superuser can set tha sticky bit,
which may gotz a special meaning.
For tha sticky bit, n' fo' set-user-ID n' set-group-ID bits on
directories, see
.BR stat (2).

On NFS file systems, restrictin tha permissions will immediately influence
already open files, cuz tha access control is done on tha server yo, but
open filez is maintained by tha client.
Widenin tha permissions may be
delayed fo' other clients if attribute cachin is enabled on em.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
Dependin on tha file system, other errors can be returned.
Da mo' general errors for
.BR chmod ()
are listed below:
.TP
.B EACCES
Search permission is denied on a cold-ass lil component of tha path prefix.
(See also
.BR path_resolution (7).)
.TP
.B EFAULT
.I path
points outside yo' accessible address space.
.TP
.B EIO
An I/O error occurred.
.TP
.B ELOOP
Too nuff symbolic links was encountered up in resolving
.IR path .
.TP
.B ENAMETOOLONG
.I path
is too long.
.TP
.B ENOENT
Da file do not exist.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP
.B EPERM
Da effectizzle UID do not match tha balla of tha file,
and tha process aint privileged (Linux: it aint gots the
.B CAP_FOWNER
capability).
.TP
.B EROFS
Da named file resides on a read-only file system.
.PP
Da general errors for
.BR fchmod ()
are listed below:
.TP
.B EBADF
Da file descriptor
.I fd
is not valid.
.TP
.B EIO
See above.
.TP
.B EPERM
See above.
.TP
.B EROFS
See above.
.SH CONFORMING TO
4.4BSD, SVr4, POSIX.1-2001.
.SH SEE ALSO
.BR chown (2),
.BR execve (2),
.BR fchmodat (2),
.BR open (2),
.BR stat (2),
.BR path_resolution (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
