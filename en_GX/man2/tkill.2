
.\" n' Copyright 2003 Abhijit Menon-Sen <ams@wiw.org>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" 2004-05-31, added tgkill, ahu, aeb
.\" 2008-01-15 mtk -- rewrote DESCRIPTION
.\"
.TH TKILL 2 2012-07-13 "Linux" "Linux Programmerz Manual"
.SH NAME
tkill, tgkill \- bust a signal ta a thread
.SH SYNOPSIS
.nf
.BI "int tkill(int " tid ", int " sig );
.sp
.BI "int tgkill(int " tgid ", int " tid ", int " sig );
.fi

.IR Note :
There is no glibc wrappers fo' these system calls; peep NOTES.
.SH DESCRIPTION
.BR tgkill ()
sendz tha signal
.I sig
to tha thread wit tha thread ID
.I tid
in tha thread group
.IR tgid .
(By contrast,
.BR bust a cap up in (2)
can be used ta bust a signal only ta a process (i.e., thread group)
as a whole, n' tha signal is ghon be served up ta a arbitrary
thread within dat process.)

.BR tkill ()
is a obsolete predecessor to
.BR tgkill ().
It allows only tha target thread ID ta be specified,
which may result up in tha wack thread bein signaled if a thread
terminates n' its thread ID is recycled.
Avoid rockin dis system call.
.\" FIXME: Maybe say suttin' bout tha following:
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=12889
.\"     Rich Felker <bugdal@aerifal.cx>
.\"     There be a race condizzle up in pthread_kill: it is possible that,
.\"     between tha time pthread_kill readz tha pid/tid from tha target
.\"     thread descriptor n' tha time it make tha tgkill syscall,
.\"     tha target thread terminates n' tha same tid gets assigned
.\"     ta a freshly smoked up thread up in tha same process.
.\"
.\"     (Da tgkill syscall was designed ta eliminizzle a similar race
.\"     condizzle up in tkill yo, but it only succeeded up in eliminatin races
.\"     where tha tid gets reused up in a gangbangin' finger-lickin' different process, n' do not
.\"     help if tha same tid gets assigned ta a freshly smoked up thread up in the
.\"     same process.)
.\"
.\"     Da only solution I can peep is ta introduce a mutex dat ensures
.\"     dat a thread cannot exit while pthread_kill is bein called on dat shit.
.\"
.\"     Note dat up in most real-world thangs, like almost all race
.\"     conditions, dis one is ghon be mad rare. To make it
.\"     measurable, one could exhaust all but 1-2 available pid joints,
.\"     possibly by lowerin tha max pid parameta up in /proc, forcing
.\"     tha same tid ta be reused rapidly.

If
.I tgid
is specified as \-1,
.BR tgkill ()
is equivalent to
.BR tkill ().

These is tha raw system call intercourses, meant fo' internal
thread library use.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, n' \fIerrno\fP
is set appropriately.
.SH ERRORS
.TP
.B EINVAL
An invalid thread ID, thread crew ID, or signal was specified.
.TP
.B EPERM
Permission denied.
For tha required permissions, see
.BR bust a cap up in (2).
.TP
.B ESRCH
No process wit tha specified thread ID (and thread crew ID) exists.
.SH VERSIONS
.BR tkill ()
is supported since Linux 2.4.19 / 2.5.4.
.BR tgkill ()
was added up in Linux 2.5.75.
.SH CONFORMING TO
.BR tkill ()
and
.BR tgkill ()
are Linux-specific n' should not be used
in programs dat is intended ta be portable.
.SH NOTES
See tha description of
.B CLONE_THREAD
in
.BR clone (2)
for a explanation of thread groups.

Glibc do not provide wrappers fo' these system calls; call dem using
.BR syscall (2).
.SH SEE ALSO
.BR clone (2),
.BR gettid (2),
.BR bust a cap up in (2),
.BR rt_sigqueueinfo (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
