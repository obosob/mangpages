.\" Copyright (c) 1983, 1991 Da Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     $Id: getsockopt.2,v 1.1 1999/05/24 14:57:04 freitag Exp $
.\"
.\" Modified Sat Jul 24 16:19:32 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Apr 22 02:29:06 1996 by Martin Schulze (joey@infodrom.north.de)
.\" Modified Tue Aug 27 10:52:51 1996 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Thu Jan 23 13:29:34 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Sun Mar 28 21:26:46 1999 by Andries Brouwer (aeb@cwi.nl)
.\" Modified 1999 by Andi Kleen <ak@muc.de>.
.\"     Removed most shiznit cuz it is up in socket.7 now, nahmeean?
.\"
.TH GETSOCKOPT 2 2008-12-03 "Linux" "Linux Programmerz Manual"
.SH NAME
getsockopt, setsockopt \- git n' set options on sockets
.SH SYNOPSIS
.nf
.BR "#include <sys/types.h>" "          /* See NOTES */"
.br
.B #include <sys/socket.h>
.sp
.BI "int getsockopt(int " sockfd ", int " level ", int " optname ,
.BI "               void *" optval ", socklen_t *" optlen );
.BI "int setsockopt(int " sockfd ", int " level ", int " optname ,
.BI "               const void *" optval ", socklen_t " optlen );
.fi
.SH DESCRIPTION
.BR getsockopt ()
and
.BR setsockopt ()
manipulate options fo' tha socket referred ta by tha file descriptor
.IR sockfd .
Options may exist at multiple
protocol levels; they is always present all up in tha uppermost
socket level.

When manipulatin socket options, tha level at which the
option resides n' tha name of tha option must be specified.
To manipulate options all up in tha sockets API level,
.I level
is specified as
.BR SOL_SOCKET .
To manipulate options at any
other level tha protocol number of tha appropriate protocol
controllin tha option is supplied.
For example,
to indicate dat a option is ta be interpreted by the
.B TCP
protocol,
.I level
should be set ta tha protocol number of
.BR TCP ;
see
.BR getprotoent (3).

Da arguments
.I optval
and
.I optlen
are used ta access option joints for
.BR setsockopt ().
For
.BR getsockopt ()
they identify a funky-ass buffer up in which tha value fo' the
axed option(s) is ta be returned.
For
.BR getsockopt (),
.I optlen
is a value-result argument, initially containin the
size of tha buffer pointed ta by
.IR optval ,
and modified on return ta indicate tha actual size of
the value returned.
If no option value is ta be supplied or returned,
.I optval
may be NULL.

.I Optname
and any specified options is passed uninterpreted ta tha appropriate
protocol module fo' interpretation.
Da include file
.I <sys/socket.h>
gotz nuff definitions fo' socket level options, busted lyrics bout below.
Options at
other protocol levels vary up in format n' name; consult tha appropriate
entries up in section 4 of tha manual.

Most socket-level options utilize an
.I int
argument for
.IR optval .
For
.BR setsockopt (),
the argument should be nonzero ta enable a funky-ass boolean option, or zero if the
option is ta be disabled.
.PP
For a thugged-out description of tha available socket options see
.BR socket (7)
and tha appropriate protocol playa pages.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP 10
.B EBADF
Da argument
.I sockfd
is not a valid descriptor.
.TP
.B EFAULT
Da address pointed ta by
.I optval
is not up in a valid part of tha process address space.
For
.BR getsockopt (),
this error may also be returned if
.I optlen
is not up in a valid part of tha process address space.
.TP
.B EINVAL
.I optlen
invalid in
.BR setsockopt ().
In some cases dis error can also occur fo' a invalid value in
.IR optval
(e.g., fo' the
.B IP_ADD_MEMBERSHIP
option busted lyrics bout in
.BR ip (7)).
.TP
.B ENOPROTOOPT
Da option is unknown all up in tha level indicated.
.TP
.B ENOTSOCK
Da argument
.I sockfd
is a gangbangin' file, not a socket.
.SH CONFORMING TO
SVr4, 4.4BSD (these system calls first rocked up in 4.2BSD),
POSIX.1-2001.
.\" SVr4 documents additionizzle ENOMEM n' ENOSR error codes yo, but do
.\" not document the
.\" .BR SO_SNDLOWAT ", " SO_RCVLOWAT ", " SO_SNDTIMEO ", " SO_RCVTIMEO
.\" options
.SH NOTES
POSIX.1-2001 do not require tha inclusion of
.IR <sys/types.h> ,
and dis header file aint required on Linux.
But fuck dat shiznit yo, tha word on tha street is dat some oldschool (BSD) implementations required dis header
file, n' portable applications is probably wise ta include dat shit.

The
.I optlen
argument of
.BR getsockopt ()
and
.BR setsockopt ()
is up in realitizzle an
.I "int [*]"
(and dis is what tha fuck 4.x BSD n' libc4 n' libc5 have).
Some POSIX mad drama resulted up in tha present
.IR socklen_t ,
also used by glibc.
See also
.BR accept (2).
.SH BUGS
Several of tha socket options should be handled at lower levelz of the
system.
.SH SEE ALSO
.BR ioctl (2),
.BR socket (2),
.BR getprotoent (3),
.BR protocols (5),
.BR socket (7),
.BR tcp (7),
.BR unix (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
