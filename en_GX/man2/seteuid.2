.\" Copyright (C) 2001 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" [should straight-up be seteuid.3]
.\" Modified, 27 May 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capabilitizzle requirements
.\"
.TH SETEUID 2 2012-07-02 "Linux" "Linux Programmerz Manual"
.SH NAME
seteuid, setegid \- set effectizzle user or crew ID
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <unistd.h>
.sp
.BI "int seteuid(uid_t " euid );
.br
.BI "int setegid(gid_t " egid );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR seteuid (),
.BR setegid ():
.RS 4
_BSD_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600
.RE
.ad
.SH DESCRIPTION
.BR seteuid ()
sets tha effectizzle user ID of tha callin process.
Unprivileged user processes may only set tha effectizzle user ID ta the
real user ID, tha effectizzle user ID or tha saved set-user-ID.

Precisely tha same holdz for
.BR setegid ()
with "group" instead of "user".
.\" When
.\" .I euid
.\" equals \-1, not a god damn thang is chizzled.
.\" (This be a artifact of tha implementation up in glibc of seteuid()
.\" rockin setresuid(2).)
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.\" .TP
.\" .B EINVAL
.TP
.B EPERM
Da callin process aint privileged (Linux: aint gots the
.B CAP_SETUID
capabilitizzle up in tha case of
.BR seteuid (),
or the
.B CAP_SETGID
capabilitizzle up in tha case of
.BR setegid ())
and
.I euid
(respectively,
.IR egid )
is not tha real user (group) ID, tha effectizzle user (group) ID,
or tha saved set-user-ID (saved set-group-ID).
.SH CONFORMING TO
4.3BSD, POSIX.1-2001.
.SH NOTES
Settin tha effectizzle user (group) ID ta the
saved set-user-ID (saved set-group-ID) is
possible since Linux 1.1.37 (1.1.38).
On a arbitrary system one should check
.BR _POSIX_SAVED_IDS .
.LP
Under libc4, libc5 n' glibc 2.0
.BI seteuid( euid )
is equivalent to
.BI setreuid(\-1, " euid" )
and hence may chizzle tha saved set-user-ID.
Under glibc 2.1 n' lata it is equivalent to
.BI setresuid(\-1, " euid" ", \-1)"
and hence do not chizzle tha saved set-user-ID.
Analogous remarks hold for
.BR setegid (),
with tha difference dat tha chizzle up in implementation from
.BI setregid(\-1, " egid" )
to
.BI setresgid(\-1, " egid" ", \-1)"
occurred up in glibc 2.2 or 2.3 (dependein on tha hardware architecture).

Accordin ta POSIX.1,
.BR seteuid ()
.RB ( setegid ())
need not permit
.I euid
.RI ( egid )
to be tha same value as tha current effectizzle user (group) ID,
and some implementations do not permit all dis bullshit.
.SH SEE ALSO
.BR geteuid (2),
.BR setresuid (2),
.BR setreuid (2),
.BR setuid (2),
.BR capabilitizzles (7),
.BR credentials (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
