.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"             n' Copyright (C) 1993 Mike Haardt, Ian Jackson.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 00:06:00 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Wed Jan 17 16:02:32 1996 by Mike Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>
.\" Modified Thu Apr 11 19:26:35 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Sun Jul 21 18:59:33 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Fri Jan 31 16:47:33 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Sat Jul 12 20:45:39 1997 by Mike Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>
.\"
.TH READ 2 2013-02-12 "Linux" "Linux Programmerz Manual"
.SH NAME
read \- read from a gangbangin' file descriptor
.SH SYNOPSIS
.nf
.B #include <unistd.h>
.sp
.BI "ssize_t read(int " fd ", void *" buf ", size_t " count );
.fi
.SH DESCRIPTION
.BR read ()
attempts ta read up to
.I count
bytes from file descriptor
.I fd
into tha buffer startin at
.IR buf .

On filez dat support seeking,
the read operation commences all up in tha current file offset,
and tha file offset is incremented by tha number of bytes read.
If tha current file offset be at or past tha end of file,
no bytes is read, and
.BR read ()
returns zero.

If
.I count
is zero,
.BR read ()
.I may
detect tha errors busted lyrics bout below.
In tha absence of any errors,
or if
.BR read ()
does not check fo' errors, a
.BR read ()
with a
.I count
of 0 returns zero n' has no other effects.

If
.I count
is pimped outa than
.BR SSIZE_MAX ,
the result is unspecified.
.SH RETURN VALUE
On success, tha number of bytes read is returned (zero indicates end of
file), n' tha file posizzle be advanced by dis number.
It aint a error if dis number is smalla than tha number of bytes
requested; dis may happen fo' example cuz fewer bytes is actually
available right now (maybe cuz we was close ta end-of-file, or
because we is readin from a pipe, or from a terminal), or cuz
.BR read ()
was interrupted by a signal.
On error, \-1 is returned, and
.I errno
is set appropriately.
In dis case it is left unspecified whether
the file posizzle (if any) chizzles.
.SH ERRORS
.TP
.B EAGAIN
Da file descriptor
.I fd
refers ta a gangbangin' file other than a socket n' has been marked nonblocking
.RB ( O_NONBLOCK ),
and tha read would block.
.TP
.BR EAGAIN " or " EWOULDBLOCK
.\" Actually EAGAIN on Linux
Da file descriptor
.I fd
refers ta a socket n' has been marked nonblocking
.RB ( O_NONBLOCK ),
and tha read would block.
POSIX.1-2001 allows either error ta be returned fo' dis case,
and do not require these constants ta have tha same value,
so a portable application should check fo' both possibilities.
.TP
.B EBADF
.I fd
is not a valid file descriptor or aint open fo' reading.
.TP
.B EFAULT
.I buf
is outside yo' accessible address space.
.TP
.B EINTR
Da call was interrupted by a signal before any data was read; see
.BR signal (7).
.TP
.B EINVAL
.I fd
is attached ta a object which is unsuitable fo' reading;
or tha file was opened wit the
.B O_DIRECT
flag, n' either tha address specified in
.IR buf ,
the value specified in
.IR count ,
or tha current file offset aint suitably aligned.
.TP
.B EINVAL
.I fd
was pimped via a cold-ass lil call to
.BR timerfd_create (2)
and tha wack size buffer was given to
.BR read ();
see
.BR timerfd_create (2)
for further shiznit.
.TP
.B EIO
I/O error.
This will happen fo' example when tha process is up in a
background process group, tries ta read from its controllin terminal,
and either it is ignorin or blocking
.B SIGTTIN
or its process group
is orphaned.
It may also occur when there be a low-level I/O error
while readin from a gangbangin' finger-lickin' disk or tape.
.TP
.B EISDIR
.I fd
refers ta a gangbangin' finger-lickin' directory.
.PP
Other errors may occur, dependin on tha object connected to
.IR fd .
POSIX allows a
.BR read ()
that is interrupted afta readin some data
to return \-1 (with
.I errno
set to
.BR EINTR )
or ta return tha number of bytes already read.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
.SH NOTES
On NFS file systems, readin lil' small-ass amountz of data will update the
timestamp only tha last time, subsequent calls may not do so.
This is caused
by client side attribute caching, cuz most if not all NFS clients
leave st_atime (last file access time)
updates ta tha server n' client side readz satisfied from the
clientz cache aint gonna cause st_atime thugged-out shiznit on tha server as there be no
server side reads.
UNIX semantics can be obtained by disablin client
side attribute cachin yo, but up in most thangs dis will substantially
increase server load n' decrease performance.
.SH SEE ALSO
.BR close (2),
.BR fcntl (2),
.BR ioctl (2),
.BR lseek (2),
.BR open (2),
.BR pread (2),
.BR readdir (2),
.BR readlink (2),
.BR readv (2),
.BR select (2),
.BR write (2),
.BR fread (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
