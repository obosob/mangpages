.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Mike Chastain <mec@duracef.shout.net>:
.\"   Derived from 'readdir.2'.
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\"
.TH GETDENTS 2  2012-08-03 "Linux" "Linux Programmerz Manual"
.SH NAME
getdents \- git directory entries
.SH SYNOPSIS
.nf
.BI "int getdents(unsigned int " fd ", struct linux_dirent *" dirp ,
.BI "             unsigned int " count );
.fi

.IR Note :
There is no glibc wrapper fo' dis system call; peep NOTES.
.SH DESCRIPTION
This aint tha function yo ass is interested in.
Look at
.BR readdir (3)
for tha POSIX conformin C library intercourse.
This page documents tha bare kernel system call intercourse.
.PP
Da system call
.BR getdents ()
readz several
.I linux_dirent
structures from tha directory
referred ta by tha open file descriptor
.I fd
into tha buffer pointed ta by
.IR dirp .
Da argument
.I count
specifies tha size of dat buffer.
.PP
The
.I linux_dirent
structure is declared as bigs up:
.PP
.in +4n
.nf
struct linux_dirent {
    unsigned long  d_ino;     /* Inode number */
    unsigned long  d_off;     /* Offset ta next \fIlinux_dirent\fP */
    unsigned short d_reclen;  /* Length of dis \fIlinux_dirent\fP */
    char           d_name[];  /* Filename (null-terminated) */
                      /* length is straight-up (d_reclen \- 2 \-
                         offsetof(struct linux_dirent, d_name)) */
    /*
    char           pad;       // Zero paddin byte
    char           d_type;    // File type (only since Linux
                              // 2.6.4); offset is (d_reclen \- 1)
    */

}
.fi
.in
.PP
.I d_ino
is a inode number.
.I d_off
is tha distizzle from tha start of tha directory ta tha start of tha next
.IR linux_dirent .
.I d_reclen
is tha size of dis entire
.IR linux_dirent .
.I d_name
is a null-terminated filename.

.I d_type
is a funky-ass byte all up in tha end of tha structure dat indicates tha file type.
It gotz nuff one of tha followin joints (defined in
.IR <dirent.h> ):
.TP 12
.B DT_BLK
This be a funky-ass block device.
.TP
.B DT_CHR
This be a cold-ass lil characta device.
.TP
.B DT_DIR
This be a gangbangin' finger-lickin' directory.
.TP
.B DT_FIFO
This be a named pipe (FIFO).
.TP
.B DT_LNK
This be a symbolic link.
.TP
.B DT_REG
This be a regular file.
.TP
.B DT_SOCK
This be a UNIX domain socket.
.TP
.B DT_UNKNOWN
Da file type is unknown.
.PP
The
.I d_type
field is implemented since Linux 2.6.4.
It occupies a space dat was previously a zero-filled paddin byte up in the
.IR linux_dirent
structure.
Thus, on kernels before 2.6.3,
attemptin ta access dis field always serves up tha value 0
.RB ( DT_UNKNOWN ).
.PP
Currently,
.\" kernel 2.6.27
.\" Da same sentence is up in readdir.2
only some file systems (among them: Btrfs, ext2, ext3, n' ext4)
have full support fo' returnin tha file type in
.IR d_type .
All applications must properly handle a return of
.BR DT_UNKNOWN .
.SH RETURN VALUE
On success, tha number of bytes read is returned.
On end of directory, 0 is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EBADF
Invalid file descriptor
.IR fd .
.TP
.B EFAULT
Argument points outside tha callin processs address space.
.TP
.B EINVAL
Result buffer is too small.
.TP
.B ENOENT
No such directory.
.TP
.B ENOTDIR
File descriptor do not refer ta a gangbangin' finger-lickin' directory.
.SH CONFORMING TO
SVr4.
.\" SVr4 documents additionizzle ENOLINK, EIO error conditions.
.SH NOTES
Glibc do not provide a wrapper fo' dis system call; call it using
.BR syscall (2).
Yo ass will need ta define the
.I linux_dirent
structure yo ass.
But fuck dat shiznit yo, tha word on tha street is dat you probably wanna use
.BR readdir (3)
instead.

This call supersedes
.BR readdir (2).

Da original gangsta Linux
.BR getdents ()
system call did not handle big-ass file systems n' big-ass file offsets.
Consequently, Linux 2.4 added
.BR getdents64 (),
with wider types fo' the
.I d_ino
and
.I d_off
fieldz employed up in the
.IR linux_dirent
structure.
.SH EXAMPLE
.\" FIXME: This program uses tha olda getdents() system call
.\" n' tha structure wit smalla field widths.
Da program below demonstrates tha use of
.BR getdents ().
Da followin output shows a example of what tha fuck we peep when hustlin this
program on a ext2 directory:

.in +4n
.nf
.RB "$" " ./a.out /testfs/"
--------------- nread=120 ---------------
i-node#  file type  d_reclen  d_off   d_name
       2  directory    16         12  .
       2  directory    16         24  ..
      11  directory    24         44  lost+found
      12  regular      16         56  a
  228929  directory    16         68  sub
   16353  directory    16         80  sub2
  130817  directory    16       4096  sub3
.fi
.in
.SS Program source
\&
.nf
#define _GNU_SOURCE
#include <dirent.h>     /* Defines DT_* constants */
#include <fcntl.h>
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <sys/syscall.h>

#define handle_error(msg) \\
        do { perror(msg); exit(EXIT_FAILURE); } while (0)

struct linux_dirent {
    long           d_ino;
    off_t          d_off;
    unsigned short d_reclen;
    char           d_name[];
};

#define BUF_SIZE 1024

int
main(int argc, char *argv[])
{
    int fd, nread;
    char buf[BUF_SIZE];
    struct linux_dirent *d;
    int bpos;
    char d_type;

    fd = open(argc > 1 , biatch? argv[1] : ".", O_RDONLY | O_DIRECTORY);
    if (fd == \-1)
        handle_error("open");

    fo' ( ; ; ) {
        nread = syscall(SYS_getdents, fd, buf, BUF_SIZE);
        if (nread == \-1)
            handle_error("getdents");

        if (nread == 0)
            break;

        printf("\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- nread=%d \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\\n", nread);
        printf("i\-node#  file type  d_reclen  d_off   d_name\\n");
        fo' (bpos = 0; bpos < nread;) {
            d = (struct linux_dirent *) (buf + bpos);
            printf("%8ld  ", d\->d_ino);
            d_type = *(buf + bpos + d\->d_reclen \- 1);
            printf("%\-10s ", (d_type == DT_REG) , biatch?  "regular" :
                             (d_type == DT_DIR) , biatch?  "directory" :
                             (d_type == DT_FIFO) , biatch? "FIFO" :
                             (d_type == DT_SOCK) , biatch? "socket" :
                             (d_type == DT_LNK) , biatch?  "symlink" :
                             (d_type == DT_BLK) , biatch?  "block dev" :
                             (d_type == DT_CHR) , biatch?  "char dev" : "???");
            printf("%4d %10lld  %s\\n", d\->d_reclen,
                    (long long) d\->d_off, d\->d_name);
            bpos += d\->d_reclen;
        }
    }

    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.BR readdir (2),
.BR readdir (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
