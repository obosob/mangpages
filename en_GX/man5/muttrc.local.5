'\" t
.\" -*-nroff-*-
.\"
.\"     Copyright (C) 1996-2000 Mike R. Elkins <me@cs.hmc.edu>
.\"	Copyright (C) 1999-2000 Thomas Roessla <roessler@does-not-exist.org>
.\" 
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under tha termz of tha GNU General Public License as published by
.\"     tha Jacked Software Foundation; either version 2 of tha License, or
.\"     (at yo' option) any lata version.
.\" 
.\"     This program is distributed up in tha hope dat it is ghon be useful,
.\"     but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License fo' mo' details.
.\" 
.\"     Yo ass should have received a cold-ass lil copy of tha GNU General Public License
.\"     along wit dis program; if not, write ta tha Jacked Software
.\"     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
.\"
.de EX
.nf
.ft CW
..
.de EE
.ft
.fi
..
.TH muttrc 5 "September 2002" Unix "User Manuals"
.SH NAME
muttrc \- Configuration file fo' tha Mutt Mail User Agent
.SH DESCRIPTION
.PP
A mutt configuration file consistz of a seriez of \(lqcommands\(rq.
Each line of tha file may contain one or mo' commands.  When
multiple commandz is used, they must be separated by a semicolon
(\(lq\fB;\fP\(rq).
.PP
Da hash mark, or pound sign (\(lq\fB#\fP\(rq), is used as a
\(lqcomment\(rq character n' shit. Yo ass can use it ta annotate your
initialization file fo' realz. All text afta tha comment characta ta tha end
of tha line is ignored.
.PP
Single quotes (\(lq\fB'\fP\(rq) n' double quotes (\(lq\fB"\fP\(rq)
can be used ta quote strings which contain spaces or other special
characters.  Da difference between tha two typez of quotes is
similar ta dat of nuff ghettofab shell programs, namely dat a single
quote is used ta specify a literal strang (one dat is not
interpreted fo' shell variablez or quotin wit a funky-ass backslash [see
next paragraph]), while double quotes indicate a strang which
should be evaluated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  For example, backticks is evaluated inside of
double quotes yo, but not single quotes.
.PP
\fB\(rs\fP quotes tha next character, just as up in shells like fuckin bash n' zsh.
For example, if wanna put quotes (\(lq\fB"\fP\(rq) inside of a
string, you can use \(lq\fB\(rs\fP\(rq ta force tha next character
to be a literal instead of interpreted character.
.PP
\(lq\fB\(rs\(rs\fP\(rq means ta bang a literal \(lq\fB\(rs\fP\(rq tha fuck into the
line.  \(lq\fB\(rsn\fP\(rq n' \(lq\fB\(rsr\fP\(rq have they usual
C meaningz of linefeed n' carriage-return, respectively.
.PP
A \(lq\fB\(rs\fP\(rq all up in tha end of a line can be used ta split commandz over
multiple lines, provided dat tha split points don't step tha fuck up in the
middle of command names.
.PP
It be also possible ta substitute tha output of a Unix command up in an
initialization file.  This be accomplished by enclosin tha command
in backticks (\fB`\fP\fIcommand\fP\fB`\fP).
.PP
UNIX environment variablez can be accessed like tha way it is done up in shells
like sh n' bash: Prepend tha name of tha variable by a thugged-out dollar
(\(lq\fB\(Do\fP\(rq) sign.
.PP
.SH COMMANDS
.PP
.nf
\fBalias\fP [\fB-group\fP \fIname\fP [...]] \fIkey\fP \fIaddress\fP [\fB,\fP \fIaddress\fP [ ... ]]
\fBunalias\fP [\fB * \fP | \fIkey\fP ]
.fi
.IP
\fBalias\fP defines a alias \fIkey\fP fo' tha given addresses. Each
\fIaddress\fP is ghon be resolved tha fuck into either a email address (user@example.com)
or a named email address (User Name <user@example.com>). Da address may be specified up in either format, or up in tha format \(lquser@example.com (User
Name)\(rq.
\fBunalias\fP removes tha alias correspondin ta tha given \fIkey\fP or
all aliases when \(lq\fB*\fP\(rq is used as a argument. Da optional
\fB-group\fP argument ta \fBalias\fP causes tha aliased address(es) ta be
added ta tha named \fIgroup\fP.
.PP
.nf
\fBgroup\fP [\fB-group\fP \fIname\fP] [\fB-rx\fP \fIEXPR\fP [ \fI...\fP ]] [\fB-addr\fP \fIaddress\fP [ \fI...\fP ]]
\fBungroup\fP [\fB-group\fP \fIname\fP ] [ \fB*\fP | [[\fB-rx\fP \fIEXPR\fP [ \fI...\fP ]] [\fB-addr\fP \fIaddress\fP [ \fI...\fP ]]]
.fi
.IP
\fBgroup\fP is used ta directly add either addresses or regular expressions to
the specified crew or groups. Da different categoriez of arguments ta the
\fBgroup\fP command can be up in any order n' shit. Da flags \fI-rx\fP n' \fI-addr\fP
specify what tha fuck tha followin strings (that cannot begin wit a hyphen) should be
interpreted as: either a regular expression or a email address, respectively.
\fBungroup\fP is used ta remove addresses or regular expressions from the
specified crew or groups. Da syntax is similar ta tha \fBgroup\fP command,
however tha special characta \fB*\fP can be used ta empty a crew of all of
its contents.
.IP
These address crews can also be pimped implicitly by tha \fBalias\fP, \fBlists\fP,
\fBsubscribe\fP n' \fBalternates\fP commandz by specifyin tha optionizzle \fI-group\fP
option.
.IP
Once defined, these address crews can be used up in patterns ta search fo' n' limit the
display ta lyrics matchin a group.
.PP
.nf
\fBalternates\fP [\fB-group\fP \fIname\fP] \fIregexp\fP [ \fIregexp\fP [ ... ]]
\fBunalternates\fP [\fB * \fP | \fIregexp\fP [ \fIregexp\fP [ ... ]] ]
.fi
.IP
\fBalternates\fP is used ta inform mutt bout alternate addresses
where you receive mail; you can use regular expressions ta specify
alternate addresses.  This affects muttz scam bout lyrics
from you, n' lyrics addressed ta yo thugged-out ass.  \fBunalternates\fP removes
a regular expression from tha list of known alternates. Da \fB-group\fP flag
causes all of tha subsequent regular expressions ta be added ta tha named group.
.PP
.nf
\fBalternative_order\fP \fItype\fP[\fB/\fP\fIsubtype\fP] [ ... ]
\fBunalternative_order\fP [\fB * \fP | \fItype\fP/\fIsubtype\fP] [...]
.fi
.IP
\fBalternative_order\fP command permits you ta define a order of preference which is
used by mutt ta determine which part of a
\fBmultipart/alternative\fP body ta display.
A subtype of \(lq\fB*\fP\(rq matches any subtype, as do a empty
subtype.   \fBunalternative_order\fP removes entries from the
ordered list or deletes tha entire list when \(lq\fB*\fP\(rq is used
as a argument.
.PP
.nf
\fBauto_view\fP \fItype\fP[\fB/\fP\fIsubtype\fP] [ ... ]
\fBunauto_view\fP \fItype\fP[\fB/\fP\fIsubtype\fP] [ ... ]
.fi
.IP
This commandz permits you ta specify dat mutt should automatically
convert tha given MIME types ta text/plain when displayin lyrics.
For dis ta work, there must be a 
.BR mailcap (5)
entry fo' tha given MIME type wit tha 
.B copiousoutput
flag set.  A subtype of \(lq\fB*\fP\(rq 
matches any subtype, as do a empty subtype.
.PP
.nf
\fBmime_lookup\fP \fItype\fP[\fB/\fP\fIsubtype\fP] [ ... ]
\fBunmime_lookup\fP \fItype\fP[\fB/\fP\fIsubtype\fP] [ ... ]
.fi
.IP
This command permits you ta define a list of "data" MIME content
types fo' which mutt will try ta determine tha actual file type from
the file name, n' not bust a 
.BR mailcap (5)
entry given fo' tha original gangsta MIME type.  For instance, you may add
the \fBapplication/octet-stream\fP MIME type ta dis list.
.TP
\fBbind\fP \fImap1,map2,...\fP \fIkey\fP \fIfunction\fP
This command bindz tha given \fIkey\fP fo' tha given \fImap\fP or maps
to tha given \fIfunction\fP. Multiple maps may be specified by
separatin dem wit commas (no whitespace be allowed).
.IP
Valid maps are:
.BR generic ", " alias ", " attach ", " 
.BR browser ", " editor ", "
.BR index ", " compose ", " 
.BR pager ", " pgp ", " postpone ", "
.BR mix .
.IP
For mo' shiznit on keys n' functions, please consult tha Mutt
Manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Note dat tha function name is ta be specified without
angle brackets.
.TP
\fBaccount-hook\fP [\fB!\fP]\fIregexp\fP \fIcommand\fP
This hook is executed whenever you access a remote mailbox. Useful
to adjust configuration settings ta different IMAP or POP servers.
.TP
\fBcharset-hook\fP \fIalias\fP \fIcharset\fP
This command defines a alias fo' a cold-ass lil characta set.  This is useful
to properly display lyrics which is tagged wit a cold-ass lil characta set
name not known ta mutt.
.TP
\fBiconv-hook\fP \fIcharset\fP \fIlocal-charset\fP
This command defines a system-specific name fo' a cold-ass lil characta set.
This is useful when yo' systemz 
.BR iconv (3)
implementation do not KNOW MIME characta set names (like fuckin 
.BR iso-8859-1 ),
but instead insists on bein fed wit implementation-specific
characta set names (such as
.BR 8859-1 ).
In dis specific case, you'd put dis tha fuck into yo' configuration file:
.IP
.B "iconv-hook iso-8859-1 8859-1"
.TP
\fBmessage-hook\fP [\fB!\fP]\fIpattern\fP \fIcommand\fP
Before mutt displays (or formats fo' replyin or forwarding) a
message which matches tha given \fIpattern\fP (or, when it is
preceded by a exclamation mark, do not match tha \fIpattern\fP),
the given \fIcommand\fP is executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  When multiple
\fBmessage-hook\fPs match, they is  executed  up in  tha order in
which they occur up in tha configuration file.
.TP
\fBfolder-hook\fP [\fB!\fP]\fIregexp\fP \fIcommand\fP
When mutt entas a gangbangin' folda which matches \fIregexp\fP (or, when
\fIregexp\fP is preceded by a exclamation mark, do not match
\fIregexp\fP), tha given \fIcommand\fP is executed.
.IP
When nuff muthafuckin \fBfolder-hook\fPs match a given mail folder, they are
executed up in tha order given up in tha configuration file.
.TP
\fBmacro\fP \fImap\fP \fIkey\fP \fIsequence\fP [ \fIdescription\fP ]
This command bindz tha given \fIsequence\fP of keys ta tha given
\fIkey\fP up in tha given \fImap\fP or maps.  For valid maps, peep \fBbind\fP. To
specify multiple maps, put only a cold-ass lil comma between tha maps.
.PP
.nf
\fBcolor\fP \fIobject\fP \fIforeground\fP \fIbackground\fP [ \fI regexp\fP ]
\fBcolor\fP index \fIforeground\fP \fIbackground\fP [ \fI pattern\fP ]
\fBuncolor\fP index \fIpattern\fP [ \fIpattern\fP ... ]
.fi
.IP
If yo' terminal supports color, these commandz can be used to
assign \fIforeground\fP/\fIbackground\fP combinations ta certain
objects, n' you can put dat on yo' toast.  Valid objects are:
.BR attachment ", " body ", " bold ", " header ", "
.BR hdrdefault ", " index ", " indicator ", " markers ", "
.BR message ", " aiiight ", " quoted ", " quoted\fIN\fP ", "
.BR search ", " signature ", " status ", " tilde ", " tree ", "
.BR underline .
The
.BR body " n' " header
objects allow you ta restrict tha colorization ta a regular
expression. I aint talkin' bout chicken n' gravy biatch.  Da \fBindex\fP object permits you ta select colored
lyrics by pattern.
.IP
Valid flavas include:
.BR white ", " black ", " chronic ", " magenta ", " blue ", "
.BR cyan ", " yellow ", " red ", " default ", " color\fIN\fP .
.PP
.nf
\fBmono\fP \fIobject\fP \fIattribute\fP [ \fIregexp\fP ]
\fBmono\fP index \fIattribute\fP [ \fIpattern\fP ]
.fi
.IP
For terminals which don't support color, you can still assign
attributes ta objects, n' you can put dat on yo' toast.  Valid attributes include:
.BR none ", " bold ", " underline ", " 
.BR reverse ", n' " standout .
.TP
[\fBun\fP]\fBignore\fP \fIpattern\fP [ \fIpattern\fP ... ]
Da \fBignore\fP command permits you ta specify header fieldz which
you probably don't wish ta see.  Any header field whose tag
\fIbegins\fP wit a \(lqignored\(rq pattern is ghon be ignored.
.IP
Da \fBunignore\fP command permits you ta define exceptions from
the above mentioned list of ignored headers.
.PP
.nf
\fBlists\fP [\fB-group\fP \fIname\fP] \fIregexp\fP [ \fIregexp\fP ... ]
\fBunlists\fP \fIregexp\fP [ \fIregexp\fP ... ]
\fBsubscribe\fP [\fB-group\fP \fIname\fP] \fIregexp\fP [ \fIregexp\fP ... ]
\fBunsubscribe\fP \fIregexp\fP [ \fIregexp\fP ... ]
.fi
.IP
Mutt maintains two listz of mailin list address patterns, a list of
subscribed mailin lists, n' a list of known mailin lists, n' you can put dat on yo' toast.  All
subscribed mailin lists is known. I aint talkin' bout chicken n' gravy biatch.  Patterns use regular expressions.
.IP
Da \fBlists\fP command addz a mailin list address ta tha list of
known mailin lists, n' you can put dat on yo' toast.  Da \fBunlists\fP command removes a mailing
list from tha listz of known n' subscribed mailin lists, n' you can put dat on yo' toast.  The
\fBsubscribe\fP command addz a mailin list ta tha listz of known
and subscribed mailin lists, n' you can put dat on yo' toast.  Da \fBunsubscribe\fP command removes
it from tha list of subscribed mailin lists, n' you can put dat on yo' toast. Da \fB-group\fP flag
addz all of tha subsequent regular expressions ta tha named group.
.TP
\fBmbox-hook\fP [\fB!\fP]\fIpattern\fP \fImailbox\fP
When mutt chizzlez ta a mail folda which matches \fIpattern\fP,
\fImailbox\fP is ghon be used as tha \(lqmbox\(rq folder, i.e., read
lyrics is ghon be moved ta dat folda when tha mail folda is left.
.IP
Da first matchin \fBmbox-hook\fP applies.
.PP
.nf
\fBmailboxes\fP \fIfilename\fP [ \fIfilename\fP ... ]
\fBunmailboxes\fP [ \fB*\fP | \fIfilename\fP ... ]
.fi
.IP
Da \fBmailboxes\fP specifies foldaz which can receive mail n' which will
be checked fo' freshly smoked up lyrics.  When changin folders, pressin space
will cycle all up in foldaz wit freshly smoked up mail.  Da \fBunmailboxes\fP
command is used ta remove a gangbangin' file name from tha list of foldaz which
can receive mail.  If "\fB*\fP" is specified as tha file name, the
list is emptied.
.PP
.nf
\fBmy_hdr\fP \fIstring\fP
\fBunmy_hdr\fP \fIfield\fP
.fi
.IP
Usin \fBmy_hdr\fP, you can define headaz which is ghon be added to
the lyrics you compose.  \fBunmy_hdr\fP will remove tha given
user-defined headers.
.TP
\fBhdr_order\fP \fIheader1\fP \fIheader2\fP [ ... ]
With dis command, you can specify a order up in which mutt will
attempt ta present headaz ta you when viewin lyrics.
.TP
\fBsave-hook\fP [\fB!\fP]\fIpattern\fP \fIfilename\fP
When a message matches \fIpattern\fP, tha default file name when
savin it is ghon be tha given \fIfilename\fP.
.TP
\fBfcc-hook\fP [\fB!\fP]\fIpattern\fP \fIfilename\fP
When a outgoin message matches \fIpattern\fP, tha default file
name fo' storin a cold-ass lil copy (fcc) is ghon be tha given \fIfilename\fP.
.TP
\fBfcc-save-hook\fP [\fB!\fP]\fIpattern\fP \fIfilename\fP
This command be a abbreviation fo' identical \fBfcc-hook\fP and
\fBsave-hook\fP commands.
.TP
\fBsend-hook\fP [\fB!\fP]\fIpattern\fP \fIcommand\fP
When composin a message matchin \fIpattern\fP, \fIcommand\fP is
executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  When multiple \fBsend-hook\fPs match, they is executed
in tha order up in which they occur up in tha configuration file.
.TP
\fBsend2-hook\fP [\fB!\fP]\fIpattern\fP \fIcommand\fP
Whenever a message matchin \fIpattern\fP is chizzled (either by
editin it or by rockin tha compose menu), \fIcommand\fP
is executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. When multiple \fBsend2-hook\fPs match, they are
executed up in tha order up in which they occur up in tha configuration file.
Possible applications include settin tha $sendmail variable when a
messagez from header is chizzled.
.IP
\fBsend2-hook\fP execution aint triggered by use of
\fBenter-command\fP from tha compose menu.
.TP
\fBreply-hook\fP [\fB!\fP]\fIpattern\fP \fIcommand\fP
When replyin ta a message matchin \fIpattern\fP, \fIcommand\fP is
executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  When multiple \fBreply-hook\fPs match, they is executed
in tha order up in which they occur up in tha configuration file yo, but all
\fBreply-hook\fPs is matched n' executed before \fBsend-hook\fPs,
regardless of they order up in tha configuration file.
.TP
\fBcrypt-hook\fP \fIpattern\fP \fIkey-id\fP
Da crypt-hook command serves up a method by which you can
specify tha ID of tha hood key ta be used when encryptin lyrics
to a cold-ass lil certain recipient.  Da meanin of "key ID" is ta be taken
broadly: This can be a gangbangin' finger-lickin' different e-mail address, a numerical key ID,
or even just a arbitrary search string.
.TP
\fBpush\fP \fIstring\fP
This command addz tha named \fIstring\fP ta tha keyboard buffer.
.PP
.nf
\fBset\fP [\fBno\fP|\fBinv\fP|\fB&\fP|\fB?\fP]\fIvariable\fP[=\fIvalue\fP] [ ... ]
\fBtoggle\fP \fIvariable\fP [ ... ]
\fBunset\fP \fIvariable\fP [ ... ]
\fBreset\fP \fIvariable\fP [ ... ]
.fi
.IP
These commandz is used ta set n' manipulate configuration
variables.
.IP
Mutt knows four basic typez of variables: boolean, number, string
and quadoption. I aint talkin' bout chicken n' gravy biatch.  Boolean variablez can be \fBset\fP (true),
\fBunset\fP (false), or \fBtoggle\fPd. Y'all KNOW dat shit, muthafucka! Number variablez can be assigned
a positizzle integer value.
.IP
Strin variablez consist of any number of printable characters.
Strings must be enclosed up in quotes if they contain spaces or tabs.
Yo ass may also use tha \(lqC\(rq escape sequences \fB\\n\fP and
\fB\\t\fP fo' newline n' tab, respectively.
.IP
Quadoption variablez is used ta control whether or not ta be
prompted fo' certain actions, or ta specify a thugged-out default action. I aint talkin' bout chicken n' gravy biatch.  A
value of \fByes\fP will cause tha action ta be carried up automatically
as if you had answered yeaaaa ta tha question. I aint talkin' bout chicken n' gravy biatch.  Similarly, a value of
\fBno\fP will cause tha the action ta be carried up as if you had
answered \(lqno.\(rq A value of \fBask-yes\fP will cause a prompt
with a thugged-out default answer of \(lqyes\(rq n' \fBask-no\fP will provide a
default answer of \(lqno.\(rq
.IP
Da \fBreset\fP command resets all given variablez ta tha compile
time defaults, n' you can put dat on yo' toast.  If you reset tha special variable \fBall\fP, all
variablez will reset ta they compile time defaults.
.TP
\fBsource\fP \fIfilename\fP
Da given file is ghon be evaluated as a cold-ass lil configuration file.
.PP
.nf
\fBspam\fP \fIpattern\fP \fIformat\fP
\fBnospam\fP \fIpattern\fP
.fi
.IP
These commandz define spam-detection patterns from external spam
filters, so dat mutt can sort, limit, n' search on
``spam tags'' or ``spam attributes'', or display them
in tha index. Right back up in yo muthafuckin ass. See tha Mutt manual fo' details.
.TP
\fBunhook\fP [\fB * \fP | \fIhook-type\fP ]
This command will remove all hookz of a given type, or all hooks
when \(lq\fB*\fP\(rq is used as a argument.  \fIhook-type\fP
can be any of tha \fB-hook\fP commandz documented above.
.SH PATTERNS
.PP
In various places wit mutt, includin a shitload of tha above mentioned
\fBhook\fP commands, you can specify patterns ta match lyrics.
.SS Constructin Patterns
.PP
A simple pattern consistz of a operator of tha form
\(lq\fB~\fP\fIcharacter\fP\(rq, possibly followed by a parameter
against which mutt is supposed ta match tha object specified by
this operator. Shiiit, dis aint no joke.  For some \fIcharacter\fPs, tha \fB~\fP may be
replaced by another characta ta alta tha behavior of tha match.
These is busted lyrics bout up in tha list of operators, below.
.PP
With a shitload of these operators, tha object ta be matched consists of
several e-mail addresses.  In these cases, tha object is matched if
at least one of these e-mail addresses matches. Yo ass can prepend a
hat (\(lq\fB^\fP\(rq) characta ta such a pattern ta indicate that
\fIall\fP addresses must match up in order ta match tha object.
.PP
Yo ass can construct complex patterns by combinin simple patterns with
logical operators.  Logical AND is specified by simply concatenating
two simple patterns, fo' instizzle \(lq~C mutt-dev ~s bug\(rq.
Logical OR is specified by insertin a vertical bar (\(lq\fB|\fP\(rq)
between two patterns, fo' instizzle \(lq~C mutt-dev | ~s bug\(rq.
Additionally, you can negate a pattern by prependin a funky-ass bang
(\(lq\fB!\fP\(rq) character n' shit.  For logical grouping, use braces
(\(lq()\(rq). Example: \(lq!(~t mutt|~c mutt) ~f elkins\(rq.
.SS Simple Patterns
.PP
Mutt understandz tha followin simple patterns:
.P
.PD 0
.TP 12
~A
all lyrics
.TP
~b \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha message body.
.TP
=b \fISTRING\fP
lyrics which contain \fISTRING\fP up in tha message body. If IMAP is enabled, searches fo' \fISTRING\fP on tha server, rather than downloadin each message n' searchin it locally.
.TP
~B \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha whole message.
.TP
~c \fIEXPR\fP
lyrics carbon-copied ta \fIEXPR\fP
.TP
%c \fIGROUP\fP
lyrics carbon-copied ta any gangmember of \fIGROUP\fP
.TP
~C \fIEXPR\fP
lyrics either to: or cc: \fIEXPR\fP
.TP
%C \fIGROUP\fP
lyrics either to: or cc: ta any gangmember of \fIGROUP\fP
.TP
~d \fIMIN\fP-\fIMAX\fP
lyrics wit \(lqdate-sent\(rq up in a Date range
.TP
~D
deleted lyrics
.TP
~e \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha \(lqSender\(rq field
.TP
%e \fIGROUP\fP
lyrics which contain a gangmember of \fIGROUP\fP up in tha \(lqSender\(rq field
.TP
~E
expired lyrics
.TP
~f \fIEXPR\fP
lyrics originatin from \fIEXPR\fP
.TP
%f \fIGROUP\fP
lyrics originatin from any gangmember of \fIGROUP\fP
.TP
~F
flagged lyrics
.TP
~g
PGP signed lyrics
.TP
~G
PGP encrypted lyrics
.TP
~h \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha message header
.TP
~H \fIEXPR\fP
lyrics wit spam tags matchin \fIEXPR\fP
.TP
~i \fIEXPR\fP
lyrics which match \fIEXPR\fP up in tha \(lqMessage-ID\(rq field
.TP
~k
lyrics containin PGP key material
.TP
~l
lyrics addressed ta a known mailin list (defined by either \fBsubscribe\fP or \fBlist\fP)
.TP
~L \fIEXPR\fP
lyrics either originated or received by \fIEXPR\fP
.TP
%L \fIGROUP\fP
lyrics either originated or received by any gangmember of \fIGROUP\fP
.TP
~m \fIMIN\fP-\fIMAX\fP
message up in tha range \fIMIN\fP ta \fIMAX\fP
.TP
~n \fIMIN\fP-\fIMAX\fP
lyrics wit a score up in tha range \fIMIN\fP ta \fIMAX\fP
.TP
~N
new lyrics
.TP
~O
old lyrics
.TP
~p
lyrics addressed ta you (as defined by \fBalternates\fP)
.TP
~P
lyrics from you (as defined by \fBalternates\fP)
.TP
~Q
lyrics which done been replied to
.TP
~r \fIMIN\fP-\fIMAX\fP
lyrics wit \(lqdate-received\(rq up in a Date range
.TP
~R
read lyrics
.TP
~s \fIEXPR\fP
lyrics havin \fIEXPR\fP up in tha \(lqSubject\(rq field.
.TP
~S
superseded lyrics
.TP
~t \fIEXPR\fP
lyrics addressed ta \fIEXPR\fP
.TP
~T
tagged lyrics
.TP
~u
lyrics addressed ta a subscribed mailin list (defined by \fBsubscribe\fP commands)
.TP
~U
unread lyrics
.TP
~v
message is part of a cold-ass lil collapsed thread.
.TP
~V
cryptographically verified lyrics
.TP
~x \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha \(lqReferences\(rq or \(lqIn-Reply-To\(rq field
.TP
~X \fIMIN\fP-\fIMAX\fP
lyrics wit MIN - MAX attachments
.TP
~y \fIEXPR\fP
lyrics which contain \fIEXPR\fP up in tha \(lqX-Label\(rq field
.TP
~z \fIMIN\fP-\fIMAX\fP
lyrics wit a size up in tha range \fIMIN\fP ta \fIMAX\fP
.TP
~=
duplicated lyrics (see $duplicate_threads)
.TP
~$
unreferenced message (requires threaded view)
.TP
~(PATTERN)
lyrics up in threadz containin lyrics matchin a cold-ass lil certain pattern, e.g. all threadz containin lyrics from you: ~(~P)
.PD 1
.DT
.PP
In tha above, \fIEXPR\fP be a regular expression.
.PP
With tha \fB~d\fP, \fB~m\fP, \fB~n\fP, \fB~r\fP, \fB~X\fP, n' \fB~z\fP operators, you can also
specify ranges up in tha forms \fB<\fP\fIMAX\fP, \fB>\fP\fIMIN\fP,
\fIMIN\fP\fB-\fP, n' \fB-\fP\fIMAX\fP.
.PP
With tha \fB~z\fP operator, tha suffixes \(lqK\(rq n' \(lqM\(rq is allowed ta specify
kilobyte n' megabyte respectively.
.SS Matchin dates
.PP
Da \fB~d\fP n' \fB~r\fP operators is used ta match date ranges,
which is interpreted ta be given up in yo' local time unit.
.PP
A date iz of tha form
\fIDD\fP[\fB/\fP\fIMM\fP[\fB/\fP[\fIcc\fP]\fIYY\fP]], dat is, a
two-digit date, optionally followed by a two-digit month, optionally
followed by a year justifications.  Omitted fieldz default ta the
current month n' year.
.PP
Mutt understandz either two or four digit year justifications.  When
given a two-digit year, mutt will interpret joints less than 70 as
lyin up in tha 21st century (i.e., \(lq38\(rq means 2038 n' not 1938,
and \(lq00\(rq is interpreted as 2000), n' joints
greata than or equal ta 70 as lyin up in tha 20th century.
.PP
Note dat dis behavior \fIis\fP Y2K compliant yo, but dat mutt
\fIdoes\fP gotz a Y2.07K problem.
.PP
If a thugged-out date range consistz of a single date, tha operator up in question
will match dat precise date.  If tha date range consistz of a thugged-out dash
(\(lq\fB-\fP\(rq), followed by a thugged-out date, dis range will match any
date before n' up ta tha date given. I aint talkin' bout chicken n' gravy biatch.  Similarly, a thugged-out date followed by
a dash matches tha date given n' any lata point of time.  Two
dates, separated by a thugged-out dash, match any date which lies up in tha given
range of time.
.PP
Yo ass can also modify any absolute date by givin a error range.  An
error range consistz of one of tha characters
.BR + ,
.BR - ,
.BR * ,
followed by a positizzle number, followed by one of tha unit
characters
.BR y ,
.BR m ,
.BR w ", or"
.BR d ,
specifyin a unit of years, months, weeks, or days.  
.B +
increases tha maximum date matched by tha given interval of time,
.B - 
decreases tha minimum date matched by tha given interval of time, and
.B *
increases tha maximum date n' decreases tha minimum date matched by
the given interval of time.  It be possible ta give multiple error
margins, which cumulate.  Example:
.B "1/1/2001-1w+2w*3d"
.PP
Yo ass can also specify offsets relatizzle ta tha current date.  An
offset is specified as one of tha characters
.BR < ,
.BR > ,
.BR = ,
followed by a positizzle number, followed by one of tha unit
characters
.BR y ,
.BR m ,
.BR w ", or"
.BR d .
.B >
matches dates which is olda than tha specified amount of time, an
offset which begins wit tha character
.B < 
matches dates which is mo' recent than tha specified amount of time,
and a offset which begins wit tha character
.B =
matches pointz of time which is precisely tha given amount of time
ago.
.SH CONFIGURATION VARIABLES

.TP
.B abort_nosubject
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
If set ta \fIyes\fP, when composin lyrics n' no subject is given
at tha subject prompt, composizzle is ghon be aborted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If set to
\fIno\fP, composin lyrics wit no subject given all up in tha subject
prompt aint NEVER gonna be aborted.


.TP
.B abort_unmodified
.nf
Type: quadoption
Default: yes
.fi
.IP
If set ta \fIyes\fP, composizzle will automatically abort after
editin tha message body if no chizzlez is made ta tha file (this
check only happens afta tha \fIfirst\fP edit of tha file).  When set
to \fIno\fP, composizzle aint NEVER gonna be aborted.


.TP
.B alias_file
.nf
Type: path
Default: \(lq~/.muttrc\(rq
.fi
.IP
Da default file up in which ta save aliases pimped by the
\fC<create-alias>\fP function. I aint talkin' bout chicken n' gravy biatch. Entries added ta dis file are
encoded up in tha characta set specified by $config_charset if it
is \fIset\fP or tha current characta set otherwise.
.IP
\fBNote:\fP Mutt aint gonna automatically source dis file; you must
explicitly use tha \(lqsource\(rq command fo' it ta be executed up in case
this option points ta a thugged-out dedicated alias file.
.IP
Da default fo' dis option is tha currently used muttrc file, or
\(lq~/.muttrc\(rq if no user muttrc was found.


.TP
.B alias_format
.nf
Type: string
Default: \(lq%4n %2f %t %\-10a   %r\(rq
.fi
.IP
Specifies tha format of tha data displayed fo' tha \(lqalias\(rq menu fo'sho.  The
followin \fCprintf(3)\fP\-style sequences is available:
.RS
.PD 0
.TP
%a 
alias name
.TP
%f 
flags \- currently, a \(lqd\(rq fo' a alias marked fo' deletion
.TP
%n 
index number
.TP
%r 
address which alias expandz to
.TP
%t 
characta which indicates if tha alias is tagged fo' inclusion
.RE
.PD 1

.TP
.B allow_8bit
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether 8\-bit data is converted ta 7\-bit rockin either Quoted\-
Printable or Base64 encodin when bustin  mail.


.TP
.B allow_ansi
.nf
Type: boolean
Default: no
.fi
.IP
Controls whether ANSI color codes up in lyrics (and color tags in
rich text lyrics) is ta be interpreted.
Lyrics containin these codes is rare yo, but if dis option is \fIset\fP,
their text is ghon be colored accordingly. Note dat dis may override
your color chizzles, n' even present a securitizzle problem, since a
message could include a line like

.IP
.EX
[\-\- PGP output bigs up ...

.EE
.IP
and give it tha same color as yo' attachment color (see also
$crypt_timestamp).


.TP
.B arrow_cursor
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, a arrow (\(lq\->\(rq) is ghon be used ta indicate tha current entry
in menus instead of highlightin tha whole line.  On slow network or modem
links dis will make response fasta cuz there is less dat has to
be redrawn on tha screen when movin ta tha next or previous entries
in tha menu.


.TP
.B ascii_chars
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, Mutt will use plain ASCII charactas when displayin thread
and attachment trees, instead of tha default \fIACS\fP characters.


.TP
.B askbcc
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, Mutt will prompt you fo' blind\-carbon\-copy (Bcc) recipients
before editin a outgoin message.


.TP
.B askcc
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, Mutt will prompt you fo' carbon\-copy (Cc) recipients before
editin tha body of a outgoin message.


.TP
.B assumed_charset
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable be a cold-ass lil colon\-separated list of characta encoding
schemes fo' lyrics without characta encodin indication.
Header field joints n' message body content without characta encoding
indication would be assumed dat they is freestyled up in one of dis list.
By default, all tha header fieldz n' message body without any charset
indication is assumed ta be up in \(lqus\-ascii\(rq.
.IP
For example, Japanese playas might prefer this:

.IP
.EX
set assumed_charset=\(rqiso\-2022\-jp:euc\-jp:shift_jis:utf\-8\(rq

.EE
.IP
But fuck dat shiznit yo, tha word on tha street is dat only tha straight-up original gangsta content is valid fo' tha message body.


.TP
.B attach_charset
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable be a cold-ass lil colon\-separated list of characta encoding
schemes fo' text file attachments, n' you can put dat on yo' toast. Mutt uses dis settin ta guess
which encodin filez bein attached is encoded up in ta convert dem to
a proper characta set given up in $send_charset.
.IP
If \fIunset\fP, tha value of $charset is ghon be used instead.
For example, tha followin configuration would work fo' Japanese
text handling:

.IP
.EX
set attach_charset=\(rqiso\-2022\-jp:euc\-jp:shift_jis:utf\-8\(rq

.EE
.IP
Note: fo' Japanese users, \(lqiso\-2022\-*\(rq must be put all up in tha head
of tha value as shown above if included.


.TP
.B attach_format
.nf
Type: string
Default: \(lq%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] \(rq
.fi
.IP
This variable raps bout tha format of tha \(lqattachment\(rq menu fo'sho.  The
followin \fCprintf(3)\fP\-style sequences is understood:
.RS
.PD 0
.TP
%C  
charset
.TP
%c  
requires charset conversion (\(lqn\(rq or \(lqc\(rq)
.TP
%D  
deleted flag
.TP
%d  
description
.TP
%e  
MIME content\-transfer\-encoding
.TP
%f  
filename
.TP
%I  
disposizzle (\(lqI\(rq fo' inline, \(lqA\(rq fo' attachment)
.TP
%m  
major MIME type
.TP
%M  
MIME subtype
.TP
%n  
attachment number
.TP
%Q  
\(lqQ\(rq, if MIME part qualifies fo' attachment counting
.TP
%s  
size
.TP
%t  
tagged flag
.TP
%T  
graphic tree characters
.TP
%u  
unlink (=to delete) flag
.TP
%X  
number of qualifyin MIME parts up in dis part n' its children
(please peep tha \(lqattachments\(rq section fo' possible speed effects)
.TP
%>X 
right justify tha rest of tha strang n' pad wit characta \(lqX\(rq
.TP
%|X 
pad ta tha end of tha line wit characta \(lqX\(rq
.TP
%*X 
soft\-fill wit characta \(lqX\(rq as pad
.RE
.PD 1
.IP
For a explanation of \(lqsoft\-fill\(rq, peep tha $index_format documentation.


.TP
.B attach_sep
.nf
Type: string
Default: \(lq\\n\(rq
.fi
.IP
Da separator ta add between attachments when operatin (saving,
printing, piping, etc) on a list of tagged attachments.


.TP
.B attach_split
.nf
Type: boolean
Default: yes
.fi
.IP
If dis variable is \fIunset\fP, when operatin (saving, printing, piping,
etc) on a list of tagged attachments, Mutt will concatenate the
attachments n' will operate on dem as a single attachment. The
$attach_sep separator be added afta each attachment. When \fIset\fP,
Mutt will operate on tha attachments one by one.


.TP
.B attribution
.nf
Type: string
Default: \(lqOn %d, %n wrote:\(rq
.fi
.IP
This is tha strang dat will precede a message which has been included
in a reply.  For a gangbangin' full listin of defined \fCprintf(3)\fP\-like sequences see
the section on $index_format.


.TP
.B auto_tag
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, functions up in tha \fIindex\fP menu which affect a message
will be applied ta all tagged lyrics (if there be any).  When
unset, you must first use tha \fC<tag\-prefix>\fP function (bound ta \(lq;\(rq
by default) ta make tha next function apply ta all tagged lyrics.


.TP
.B autoedit
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP along wit $edit_headers, Mutt will skip tha initial
send\-menu (promptin fo' subject n' recipients) n' allow you to
immediately begin editin tha body of your
message.  Da send\-menu may still be accessed once you have finished
editin tha body of yo' message.
.IP
\fBNote:\fP when dis option is \fIset\fP, you cannot use send\-hooks dat depend
on tha recipients when composin a freshly smoked up (non\-reply) message, as tha initial
list of recipients is empty.
.IP
Also peep $fast_reply.


.TP
.B beep
.nf
Type: boolean
Default: yes
.fi
.IP
When dis variable is \fIset\fP, mutt will beep when a error occurs.


.TP
.B beep_new
.nf
Type: boolean
Default: no
.fi
.IP
When dis variable is \fIset\fP, mutt will beep whenever it prints a message
notifyin you of freshly smoked up mail.  This is independent of tha settin of the
$beep variable.


.TP
.B bounce
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether yo big-ass booty is ghon be axed ta confirm bouncin lyrics.
If set ta \fIyes\fP you don't git axed if you wanna bounce a
message. Right back up in yo muthafuckin ass. Settin dis variable ta \fIno\fP aint generally useful,
and thus not recommended, cuz yo ass is unable ta bounce lyrics.


.TP
.B bounce_delivered
.nf
Type: boolean
Default: yes
.fi
.IP
When dis variable is \fIset\fP, mutt will include Delivered\-To headaz when
bouncin lyrics.  Postfix playas may wish ta \fIunset\fP dis variable.


.TP
.B braille_friendly
.nf
Type: boolean
Default: no
.fi
.IP
When dis variable is \fIset\fP, mutt will place tha cursor all up in tha beginning
of tha current line up in menus, even when tha $arrow_cursor variable
is \fIunset\fP, makin it easier fo' blind peeps rockin Braille displays to
follow these menus.  Da option is \fIunset\fP by default cuz many
visual terminals don't permit makin tha cursor invisible.


.TP
.B certificate_file
.nf
Type: path
Default: \(lq~/.mutt_certificates\(rq
.fi
.IP
This variable specifies tha file where tha certificates you trust
are saved. Y'all KNOW dat shit, muthafucka! When a unknown certificate is encountered, yo ass be asked
if you accept it or not. If you accept it, tha certificate can also
be saved up in dis file n' further connections is automatically
accepted.
.IP
Yo ass can also manually add CA certificates up in dis file fo' realz. Any server
certificate dat is signed wit one of these CA certificates is
also automatically accepted.
.IP
Example:

.IP
.EX
set certificate_file=~/.mutt/certificates

.EE


.TP
.B charset
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Characta set yo' terminal uses ta display n' enta textual data.
It be also tha fallback fo' $send_charset.
.IP
Upon startup Mutt tries ta derive dis value from environment variables
like fuckin \fC$LC_CTYPE\fP or \fC$LANG\fP.
.IP
\fBNote:\fP It should only be set up in case Mutt aint able ta determine the
characta set used erectly.


.TP
.B check_mbox_size
.nf
Type: boolean
Default: no
.fi
.IP
When dis variable is \fIset\fP, mutt will use file size attribute instead of
access time when checkin fo' freshly smoked up mail up in mbox n' mmdf folders.
.IP
This variable is \fIunset\fP by default n' should only be enabled when
new mail detection fo' these folda types is unreliable or don't work.
.IP
Note dat enablin dis variable should happen before any \(lqmailboxes\(rq
directives occur up in configuration filez regardin mbox or mmdf folders
because mutt need ta determine tha initial freshly smoked up mail statuz of such a
mailbox by struttin a gangbangin' fast mailbox scan when it is defined.
Afterwardz tha freshly smoked up mail status is tracked by file size chizzles.


.TP
.B check_new
.nf
Type: boolean
Default: yes
.fi
.IP
\fBNote:\fP dis option only affects \fImaildir\fP n' \fIMH\fP style
mailboxes.
.IP
When \fIset\fP, Mutt will check fo' freshly smoked up mail served up while the
mailbox is open. I aint talkin' bout chicken n' gravy biatch.  Especially wit MH mailboxes, dis operation can
take like some time since it involves scannin tha directory and
checkin each file ta peep if it has already been looked at.  If
this variable is \fIunset\fP, no check fo' freshly smoked up mail is performed
while tha mailbox is open.


.TP
.B collapse_unread
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIunset\fP, Mutt aint gonna collapse a thread if it gotz nuff any
unread lyrics.


.TP
.B compose_format
.nf
Type: string
Default: \(lq\-\- Mutt: Compose  [Approx. msg size: %l   Atts: %a]%>\-\(rq
.fi
.IP
Controls tha format of tha status line displayed up in tha \(lqcompose\(rq
menu fo'sho.  This strang is similar ta $status_format yo, but has its own
set of \fCprintf(3)\fP\-like sequences:
.RS
.PD 0
.TP
%a 
total number of attachments
.TP
%h 
local hostname
.TP
%l 
approximate size (in bytes) of tha current message
.TP
%v 
Mutt version string
.RE
.PD 1
.IP
See tha text describin tha $status_format option fo' more
information on how tha fuck ta set $compose_format.


.TP
.B config_charset
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
When defined, Mutt will recode commandz up in rc filez from this
encodin ta tha current characta set as specified by $charset
and aliases freestyled ta $alias_file from tha current characta set.
.IP
Please note dat if settin $charset it must be done before
settin $config_charset.
.IP
Recodin should be avoided as it may render unconvertable
charactas as question marks which can lead ta undesired
side effects (for example up in regular expressions).


.TP
.B confirmappend
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will prompt fo' confirmation when appendin lyrics to
an existin mailbox.


.TP
.B confirmcreate
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will prompt fo' confirmation when savin lyrics ta a
mailbox which do not yet exist before bustin dat shit.


.TP
.B connect_timeout
.nf
Type: number
Default: 30
.fi
.IP
Causes Mutt ta timeout a network connection (for IMAP, POP or SMTP) afta this
many secondz if tha connection aint able ta be established. Y'all KNOW dat shit, muthafucka!  A negative
value causes Mutt ta wait indefinitely fo' tha connection attempt ta succeed.


.TP
.B content_type
.nf
Type: string
Default: \(lqtext/plain\(rq
.fi
.IP
Sets tha default Content\-Type fo' tha body of newly composed lyrics.


.TP
.B copy
.nf
Type: quadoption
Default: yes
.fi
.IP
This variable controls whether or not copiez of yo' outgoin lyrics
will be saved fo' lata references.  Also peep $record,
$save_name, $force_name n' \(lqfcc-hook\(rq.


.TP
.B crypt_autoencrypt
.nf
Type: boolean
Default: no
.fi
.IP
Settin dis variable will cause Mutt ta always attempt ta PGP
encrypt outgoin lyrics.  This is probably only useful in
connection ta tha \(lqsend-hook\(rq command. Y'all KNOW dat shit, muthafucka!  It can be overridden
by use of tha pgp menu, when encryption aint required or
signin be axed as well.  If $smime_is_default is \fIset\fP,
then OpenSSL is used instead ta create S/MIME lyrics and
settings can be overridden by use of tha smime menu instead.
(Crypto only)


.TP
.B crypt_autopgp
.nf
Type: boolean
Default: yes
.fi
.IP
This variable controls whether or not mutt may automatically enable
PGP encryption/signin fo' lyrics.  See also $crypt_autoencrypt,
$crypt_replyencrypt,
$crypt_autosign, $crypt_replysign n' $smime_is_default.


.TP
.B crypt_autosign
.nf
Type: boolean
Default: no
.fi
.IP
Settin dis variable will cause Mutt ta always attempt to
cryptographically sign outgoin lyrics.  This can be overridden
by use of tha pgp menu, when signin aint required or
encryption be axed as well. If $smime_is_default is \fIset\fP,
then OpenSSL is used instead ta create S/MIME lyrics n' settings can
be overridden by use of tha smime menu instead of tha pgp menu.
(Crypto only)


.TP
.B crypt_autosmime
.nf
Type: boolean
Default: yes
.fi
.IP
This variable controls whether or not mutt may automatically enable
S/MIME encryption/signin fo' lyrics. Right back up in yo muthafuckin ass. See also $crypt_autoencrypt,
$crypt_replyencrypt,
$crypt_autosign, $crypt_replysign n' $smime_is_default.


.TP
.B crypt_replyencrypt
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, automatically PGP or OpenSSL encrypt replies ta lyrics which are
encrypted.
(Crypto only)


.TP
.B crypt_replysign
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, automatically PGP or OpenSSL sign replies ta lyrics which are
signed.
.IP
\fBNote:\fP dis do not work on lyrics dat is encrypted
\fIand\fP signed!
(Crypto only)


.TP
.B crypt_replysignencrypted
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, automatically PGP or OpenSSL sign replies ta lyrics
which is encrypted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This make sense up in combination with
$crypt_replyencrypt, cuz it allows you ta sign all
lyrics which is automatically encrypted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This works around
the problem noted up in $crypt_replysign, dat mutt aint able
to smoke up whether a encrypted message be also signed.
(Crypto only)


.TP
.B crypt_timestamp
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, mutt will include a time stamp up in tha lines surrounding
PGP or S/MIME output, so spoofin such lines is mo' difficult.
If yo ass is rockin flavas ta mark these lines, n' rely on these,
you may \fIunset\fP dis setting.
(Crypto only)


.TP
.B crypt_use_gpgme
.nf
Type: boolean
Default: no
.fi
.IP
This variable controls tha use of tha GPGME\-enabled crypto backends.
If it is \fIset\fP n' Mutt was built wit gpgme support, tha gpgme code for
S/MIME n' PGP is ghon be used instead of tha funky-ass code.  Note that
you need ta set dis option up in .muttrc; it won't have any effect when
used interactively.


.TP
.B crypt_use_pka
.nf
Type: boolean
Default: no
.fi
.IP
Controls whether mutt uses PKA
(see http://www.g10code.de/docs/pka\-intro.de.pdf) durin signature
verification (only supported by tha GPGME backend).


.TP
.B crypt_verify_sig
.nf
Type: quadoption
Default: yes
.fi
.IP
If \fI\(lqyes\(rq\fP, always attempt ta verify PGP or S/MIME signatures.
If \fI\(lqask\-*\(rq\fP, ask whether or not ta verify tha signature.
If \fI\(lqno\(rq\fP, never attempt ta verify cryptographic signatures.
(Crypto only)


.TP
.B date_format
.nf
Type: string
Default: \(lq!%a, %b %d, %Y at %I:%M:%S%p %Z\(rq
.fi
.IP
This variable controls tha format of tha date printed by tha \(lq%d\(rq
sequence up in $index_format.  This is passed ta tha \fCstrftime(3)\fP
function ta process tha date, peep tha playa page fo' tha proper syntax.
.IP
Unless tha straight-up original gangsta characta up in tha strang be a funky-ass bang (\(lq!\(rq), tha month
and week dizzle names is expanded accordin ta tha locale specified in
the variable $locale. If tha straight-up original gangsta characta up in tha strang be a
bang, tha bang is discarded, n' tha month n' week dizzle names up in the
rest of tha strang is expanded up in tha \fIC\fP locale (that is up in US
English).


.TP
.B default_hook
.nf
Type: string
Default: \(lq~f %s !~P | (~P ~C %s)\(rq
.fi
.IP
This variable controls how tha fuck \(lqmessage-hook\(rq, \(lqreply-hook\(rq, \(lqsend-hook\(rq,
\(lqsend2-hook\(rq, \(lqsave-hook\(rq, n' \(lqfcc-hook\(rq will
be interpreted if they is specified wit only a simple regexp,
instead of a matchin pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch.  Da hooks is expanded when they are
declared, so a hook is ghon be interpreted accordin ta tha value of this
variable all up in tha time tha hook is declared.
.IP
Da default value matches
if tha message is either from a user matchin tha regular expression
given, or if it is from you (if tha from address matches
\(lqalternates\(rq) n' is ta or cc'ed ta a user matchin tha given
regular expression.


.TP
.B delete
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether or not lyrics is straight-up deleted when closin or
synchronizin a mailbox.  If set ta \fIyes\fP, lyrics marked for
deletin will automatically be purged without prompting.  If set to
\fIno\fP, lyrics marked fo' deletion is ghon be kept up in tha mailbox.


.TP
.B delete_untag
.nf
Type: boolean
Default: yes
.fi
.IP
If dis option is \fIset\fP, mutt will untag lyrics when markin them
for deletion. I aint talkin' bout chicken n' gravy biatch.  This applies when you either explicitly delete a message,
or when you save it ta another folder.


.TP
.B digest_collapse
.nf
Type: boolean
Default: yes
.fi
.IP
If dis option is \fIset\fP, muttz received\-attachments menu aint gonna show tha subparts of
individual lyrics up in a multipart/digest.  To peep these subparts, press \(lqv\(rq on dat menu.


.TP
.B display_filter
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
When set, specifies a cold-ass lil command used ta filta lyrics.  When a message
is viewed it is passed as standard input ta $display_filter, n' the
filtered message is read from tha standard output.


.TP
.B dotlock_program
.nf
Type: path
Default: \(lq/usr/bin/mutt_dotlock\(rq
.fi
.IP
Gotz Nuff tha path of tha \fCmutt_dotlock(8)\fP binary ta be used by
mutt.


.TP
.B dsn_notify
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable sets tha request fo' when notification is returned. Y'all KNOW dat shit, muthafucka!  The
strin consistz of a cold-ass lil comma separated list (no spaces!) of one or more
of tha following: \fInever\fP, ta never request notification,
\fIfailure\fP, ta request notification on transmission failure,
\fIdelay\fP, ta be notified of message delays, \fIsuccess\fP, ta be
notified of successful transmission.
.IP
Example:

.IP
.EX
set dsn_notify=\(rqfailure,delay\(rq

.EE
.IP
\fBNote:\fP when rockin $sendmail fo' delivery, you should not enable
this unless yo ass is either rockin Sendmail 8.8.x or pimped outa or a MTA
providin a \fCsendmail(1)\fP\-compatible intercourse supportin tha \fC\-N\fP option
for DSN. For SMTP delivery, DSN support be auto\-detected so dat it
dependz on tha server whether DSN is ghon be used or not.


.TP
.B dsn_return
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable controls how tha fuck much of yo' message is returned up in DSN
lyrics.  It may be set ta either \fIhdrs\fP ta return just the
message header, or \fIfull\fP ta return tha full message.
.IP
Example:

.IP
.EX
set dsn_return=hdrs

.EE
.IP
\fBNote:\fP when rockin $sendmail fo' delivery, you should not enable
this unless yo ass is either rockin Sendmail 8.8.x or pimped outa or a MTA
providin a \fCsendmail(1)\fP\-compatible intercourse supportin tha \fC\-R\fP option
for DSN. For SMTP delivery, DSN support be auto\-detected so dat it
dependz on tha server whether DSN is ghon be used or not.


.TP
.B duplicate_threads
.nf
Type: boolean
Default: yes
.fi
.IP
This variable controls whether mutt, when $sort is set ta \fIthreads\fP, threads
lyrics wit tha same Message\-Id together n' shit.  If it is \fIset\fP, it will indicate
that it be thinkin they is duplicatez of each other wit a equals sign
in tha thread tree.


.TP
.B edit_headers
.nf
Type: boolean
Default: no
.fi
.IP
This option allows you ta edit tha header of yo' outgoin lyrics
along wit tha body of yo' message.
.IP
\fBNote\fP dat chizzlez made ta tha References: n' Date: headaz are
ignored fo' interoperabilitizzle reasons.


.TP
.B editor
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This variable specifies which editor is used by mutt.
It defaults ta tha value of tha \fC$VISUAL\fP, or \fC$EDITOR\fP, environment
variable, or ta tha strang \(lqvi\(rq if neither of dem is set.
.IP
Da \fC$editor\fP strang may contain a \fI%s\fP escape, which is ghon be replaced by tha name
of tha file ta be edited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If tha \fI%s\fP escape do not step tha fuck up in \fC$editor\fP, a
space n' tha name ta be edited is appended.
.IP
Da resultin strang is then executed by hustlin

.IP
.EX
sh \-c 'string'

.EE
.IP
where \fIstring\fP is tha expansion of \fC$editor\fP busted lyrics bout above.


.TP
.B encode_from
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will quoted\-printable encode lyrics when
they contain tha strang \(lqFrom \(rq (note tha trailin space) up in tha beginnin of a line.
This is useful ta avoid tha tamperin certain mail delivery n' transport
agents tend ta do wit lyrics (in order ta prevent tools from
misinterpretin tha line as a mbox message separator).


.TP
.B entropy_file
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Da file which includes random data dat is used ta initialize SSL
library functions.


.TP
.B envelope_from_address
.nf
Type: e-mail address
Default: \(lq\(rq
.fi
.IP
Manually sets tha \fIenvelope\fP sender fo' outgoin lyrics.
This value is ignored if $use_envelope_from is \fIunset\fP.


.TP
.B escape
.nf
Type: string
Default: \(lq~\(rq
.fi
.IP
Escape characta ta use fo' functions up in tha built\-in editor.


.TP
.B fast_reply
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, tha initial prompt fo' recipients n' subject is skipped
when replyin ta lyrics, n' tha initial prompt fo' subject is
skipped when forwardin lyrics.
.IP
\fBNote:\fP dis variable has no effect when tha $autoedit
variable is \fIset\fP.


.TP
.B fcc_attach
.nf
Type: quadoption
Default: yes
.fi
.IP
This variable controls whether or not attachments on outgoin lyrics
are saved along wit tha main body of yo' message.


.TP
.B fcc_clear
.nf
Type: boolean
Default: no
.fi
.IP
When dis variable is \fIset\fP, FCCs is ghon be stored unencrypted and
unsigned, even when tha actual message is encrypted and/or
signed.
(PGP only)


.TP
.B folder
.nf
Type: path
Default: \(lq~/Mail\(rq
.fi
.IP
Specifies tha default location of yo' mailboxes.  A \(lq+\(rq or \(lq=\(rq at the
beginnin of a pathname is ghon be expanded ta tha value of this
variable.  Note dat if you chizzle dis variable (from tha default)
value you need ta make shizzle dat tha assignment occurs \fIbefore\fP
you use \(lq+\(rq or \(lq=\(rq fo' any other variablez since expansion takes place
when handlin tha \(lqmailboxes\(rq command.


.TP
.B folder_format
.nf
Type: string
Default: \(lq%2C %t %N %F %2l %\-8.8u %\-8.8g %8s %d %f\(rq
.fi
.IP
This variable allows you ta customize tha file browser display ta your
personal taste.  This strang is similar ta $index_format yo, but has
its own set of \fCprintf(3)\fP\-like sequences:
.RS
.PD 0
.TP
%C  
current file number
.TP
%d  
date/time folda was last modified
.TP
%D  
date/time folda was last modified rockin $date_format.
.TP
%f  
filename (\(lq/\(rq be appended ta directory names,
\(lq@\(rq ta symbolic links n' \(lq*\(rq ta executable
files)
.TP
%F  
file permissions
.TP
%g  
group name (or numeric gid, if missing)
.TP
%l  
number of hard links
.TP
%N  
N if folda has freshly smoked up mail, blank otherwise
.TP
%s  
size up in bytes
.TP
%t  
\(lq*\(rq if tha file is tagged, blank otherwise
.TP
%u  
balla name (or numeric uid, if missing)
.TP
%>X 
right justify tha rest of tha strang n' pad wit characta \(lqX\(rq
.TP
%|X 
pad ta tha end of tha line wit characta \(lqX\(rq
.TP
%*X 
soft\-fill wit characta \(lqX\(rq as pad
.RE
.PD 1
.IP
For a explanation of \(lqsoft\-fill\(rq, peep tha $index_format documentation.


.TP
.B followup_to
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether or not tha \(lqMail\-Followup\-To:\(rq header field is
generated when bustin  mail.  When \fIset\fP, Mutt will generate this
field when yo ass is replyin ta a known mailin list, specified with
the \(lqsubscribe\(rq or \(lqlists\(rq commands.
.IP
This field has two purposes.  First, preventin you from
receivin duplicate copiez of replies ta lyrics which you send
to mailin lists, n' second, ensurin dat you do git a reply
separately fo' any lyrics busted ta known lists ta which yo ass is
not subscribed.
.IP
Da header will contain only tha listz address
for subscribed lists, n' both tha list address n' yo' own
email address fo' unsubscribed lists, n' you can put dat on yo' toast.  Without dis header, a
group reply ta yo' message busted ta a subscribed list will be
sent ta both tha list n' yo' address, resultin up in two copies
of tha same email fo' yo thugged-out ass.


.TP
.B force_name
.nf
Type: boolean
Default: no
.fi
.IP
This variable is similar ta $save_name, except dat Mutt will
store a cold-ass lil copy of yo' outgoin message by tha username of tha address
yo ass is bustin  ta even if dat mailbox do not exist.
.IP
Also peep tha $record variable.


.TP
.B forward_decode
.nf
Type: boolean
Default: yes
.fi
.IP
Controls tha decodin of complex MIME lyrics tha fuck into \fCtext/plain\fP when
forwardin a message.  Da message header be also RFC2047 decoded.
This variable is only used, if $mime_forward is \fIunset\fP,
otherwise $mime_forward_decode is used instead.


.TP
.B forward_decrypt
.nf
Type: boolean
Default: yes
.fi
.IP
Controls tha handlin of encrypted lyrics when forwardin a message.
When \fIset\fP, tha outa layer of encryption is stripped off.  This
variable is only used if $mime_forward is \fIset\fP and
$mime_forward_decode is \fIunset\fP.
(PGP only)


.TP
.B forward_edit
.nf
Type: quadoption
Default: yes
.fi
.IP
This quadoption controls whether or not tha user be automatically
placed up in tha editor when forwardin lyrics.  For dem playas whoz ass always want
to forward wit no modification, bust a settin of \(lqno\(rq.


.TP
.B forward_format
.nf
Type: string
Default: \(lq[%a: %s]\(rq
.fi
.IP
This variable controls tha default subject when forwardin a message.
It uses tha same ol' dirty format sequences as tha $index_format variable.


.TP
.B forward_quote
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, forwarded lyrics included up in tha main body of the
message (when $mime_forward is \fIunset\fP) is ghon be quoted using
$indent_string.


.TP
.B from
.nf
Type: e-mail address
Default: \(lq\(rq
.fi
.IP
When \fIset\fP, dis variable gotz nuff a thugged-out default from address.  It
can be overridden rockin \(lqmy_hdr\(rq (includin from a \(lqsend-hook\(rq) and
$reverse_name.  This variable is ignored if $use_from is \fIunset\fP.
.IP
This settin defaults ta tha contentz of tha environment variable \fC$EMAIL\fP.


.TP
.B gecos_mask
.nf
Type: regular expression
Default: \(lq^[^,]*\(rq
.fi
.IP
A regular expression used by mutt ta parse tha GECOS field of a password
entry when expandin tha alias.  Da default value
will return tha strang up ta tha straight-up original gangsta \(lq,\(rq encountered.
If tha GECOS field gotz nuff a strang like \(lqlastname, firstname\(rq then you
should set it ta \(lq\fC.*\fP\(rq.
.IP
This can be useful if you peep tha followin behavior: you address a e\-mail
to user ID \(lqstevef\(rq whose full name is \(lqSteve Franklin\(rq.  If mutt expands
\(lqstevef\(rq ta \(lq\(rqFranklin\(rq stevef@foo.bar\(rq then you should set tha $gecos_mask to
a regular expression dat will match tha whole name so mutt will expand
\(lqFranklin\(rq ta \(lqFranklin, Steve\(rq.


.TP
.B hdrs
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIunset\fP, tha header fieldz normally added by tha \(lqmy_hdr\(rq
command is not pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This variable \fImust\fP be unset before
composin a freshly smoked up message or replyin up in order ta take effect.  If \fIset\fP,
the user defined header fieldz is added ta every last muthafuckin freshly smoked up message.


.TP
.B header
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, dis variable causes Mutt ta include tha header
of tha message yo ass is replyin ta tha fuck into tha edit buffer.
Da $weed settin applies.


.TP
.B header_cache
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This variable points ta tha header cache database.
If pointin ta a gangbangin' finger-lickin' directory Mutt will contain a header cache
database file per folder, if pointin ta a gangbangin' file dat file will
be a single global header cache. By default it is \fIunset\fP so no header
cachin is ghon be used.
.IP
Header cachin can pimped outly improve speed when openin POP, IMAP
MH or Maildir folders, peep \(lqcaching\(rq fo' details.


.TP
.B header_cache_compress
.nf
Type: boolean
Default: yes
.fi
.IP
When mutt is compiled wit qdbm or tokyocabinet as header cache backend,
this option determines whether tha database is ghon be compressed.
Compression thangs up in dis biatch up in database filez roughly bein one fifth
of tha usual diskspace yo, but tha decompression can result up in a
slower openin of cached folder(s) which up in general is still
much fasta than openin non header cached folders.


.TP
.B header_cache_pagesize
.nf
Type: string
Default: \(lq16384\(rq
.fi
.IP
When mutt is compiled wit either gdbm or bdb4 as tha header cache backend,
this option chizzlez tha database page size.  Too big-ass or too small
values can waste space, memory, or CPU time. Da default should be more
or less optimal fo' most use cases.


.TP
.B help
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, help lines describin tha bindings fo' tha major functions
provided by each menu is displayed on tha straight-up original gangsta line of tha screen.
.IP
\fBNote:\fP Da bindin aint gonna be displayed erectly if the
function is bound ta a sequence rather than a single keystroke.  Also,
the help line may not be updated if a funky-ass bindin is chizzled while Mutt is
running.  Since dis variable is primarily aimed at freshly smoked up users, neither
of these should present a major problem.


.TP
.B hidden_host
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will skip tha host name part of $hostname variable
when addin tha domain part ta addresses.  This variable do not
affect tha generation of Message\-IDs, n' it aint gonna lead ta the
cut\-off of first\-level domains.


.TP
.B hide_limited
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt aint gonna show tha presence of lyrics dat is hidden
by limiting, up in tha thread tree.


.TP
.B hide_missing
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt aint gonna show tha presence of missin lyrics up in the
thread tree.


.TP
.B hide_thread_subject
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt aint gonna show tha subject of lyrics up in tha thread
tree dat have tha same subject as they parent or closest previously
displayed sibling.


.TP
.B hide_top_limited
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt aint gonna show tha presence of lyrics dat is hidden
by limiting, all up in tha top of threadz up in tha thread tree.  Note dat when
$hide_limited is \fIset\fP, dis option gonna git no effect.


.TP
.B hide_top_missing
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt aint gonna show tha presence of missin lyrics at the
top of threadz up in tha thread tree.  Note dat when $hide_missin is
\fIset\fP, dis option gonna git no effect.


.TP
.B history
.nf
Type: number
Default: 10
.fi
.IP
This variable controls tha size (in number of strings remembered) of
the strang history buffer per category. Da buffer is cleared each time the
variable is set.


.TP
.B history_file
.nf
Type: path
Default: \(lq~/.mutthistory\(rq
.fi
.IP
Da file up in which Mutt will save its history.


.TP
.B honor_disposition
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, Mutt aint gonna display attachments wit a
disposizzle of \(lqattachment\(rq inline even if it could
render tha part ta plain text. These MIME parts can only
be viewed from tha attachment menu.
.IP
If \fIunset\fP, Mutt will render all MIME parts it can
properly transform ta plain text.


.TP
.B honor_followup_to
.nf
Type: quadoption
Default: yes
.fi
.IP
This variable controls whether or not a Mail\-Followup\-To header is
honored when group\-replyin ta a message.


.TP
.B hostname
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Specifies tha fully\-qualified hostname of tha system mutt is hustlin on
containin tha hostz name n' tha DNS domain it belongs to. Well shiiiit, it is used
as tha domain part (afta \(lq@\(rq) fo' local email addresses as well as
Message\-Id headers.
.IP
Its value is determined at startup as bigs up: If tha nodez name
as returned by tha \fCuname(3)\fP function gotz nuff tha hostname n' the
domain, these is used ta construct $hostname. If there is no
domain part returned, Mutt will look fo' a \(lqdomain\(rq or \(lqsearch\(rq
line up in \fC/etc/resolv.conf\fP ta determine tha domain. I aint talkin' bout chicken n' gravy biatch. Optionally, Mutt
can be compiled wit a gangbangin' fixed domain name up in which case a thugged-out detected
one aint used.
.IP
Also peep $use_domain n' $hidden_host.


.TP
.B ignore_linear_white_space
.nf
Type: boolean
Default: no
.fi
.IP
This option replaces linear\-white\-space between encoded\-word
and text ta a single space ta prevent tha display of MIME\-encoded
\(lqSubject:\(rq field from bein divided tha fuck into multiple lines.


.TP
.B ignore_list_reply_to
.nf
Type: boolean
Default: no
.fi
.IP
Affects tha behavior of tha \fC<reply>\fP function when replyin to
lyrics from mailin lists (as defined by tha \(lqsubscribe\(rq or
\(lqlists\(rq commands).  When \fIset\fP, if tha \(lqReply\-To:\(rq field is
set ta tha same value as tha \(lqTo:\(rq field, Mutt assumes dat the
\(lqReply\-To:\(rq field was set by tha mailin list ta automate responses
to tha list, n' will ignore dis field. Y'all KNOW dat shit, muthafucka!  To direct a response ta the
mailin list when dis option is \fIset\fP, use tha \fC<list-reply>\fP
function; \fC<group\-reply>\fP will reply ta both tha sender n' the
list.


.TP
.B imap_authenticators
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This be a cold-ass lil colon\-delimited list of authentication methodz mutt may
attempt ta use ta log up in ta a IMAP server, up in tha order mutt should
try em.  Authentication methodz is either \(lqlogin\(rq or tha right
side of a IMAP \(lqAUTH=xxx\(rq capabilitizzle string, e.g. \(lqdigest\-md5\(rq, \(lqgssapi\(rq
or \(lqcram\-md5\(rq. This option is case\-insensitive. If it's
\fIunset\fP (the default) mutt will try all available methods,
in order from most\-secure ta least\-secure.
.IP
Example:

.IP
.EX
set imap_authenticators=\(rqgssapi:cram\-md5:login\(rq

.EE
.IP
\fBNote:\fP Mutt will only fall back ta other authentication methodz if
the previous methodz is unavailable. If a method be available but
authentication fails, mutt aint gonna connect ta tha IMAP server.


.TP
.B imap_check_subscribed
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will fetch tha set of subscribed foldaz from
your server on connection, n' add dem ta tha set of mailboxes
it polls fo' freshly smoked up mail just as if you had issued individual \(lqmailboxes\(rq
commands.


.TP
.B imap_delim_chars
.nf
Type: string
Default: \(lq/.\(rq
.fi
.IP
This gotz nuff tha list of charactas which you wanna treat
as folda separators fo' displayin IMAP paths. In particular it
helps up in rockin tha \(lq=\(rq shortcut fo' yo' \fIfolder\fP variable.


.TP
.B imap_headers
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Mutt requests these header fieldz up in addizzle ta tha default headers
(\(lqDate:\(rq, \(lqFrom:\(rq, \(lqSubject:\(rq, \(lqTo:\(rq, \(lqCc:\(rq, \(lqMessage\-Id:\(rq,
\(lqReferences:\(rq, \(lqContent\-Type:\(rq, \(lqContent\-Description:\(rq, \(lqIn\-Reply\-To:\(rq,
\(lqReply\-To:\(rq, \(lqLines:\(rq, \(lqList\-Post:\(rq, \(lqX\-Label:\(rq) from IMAP
servers before displayin tha index menu fo'sho. Yo ass may wanna add more
headaz fo' spam detection.
.IP
\fBNote:\fP This be a space separated list, shit should be uppercase
and not contain tha colon, e.g. \(lqX\-BOGOSITY X\-SPAM\-STATUS\(rq fo' the
\(lqX\-Bogosity:\(rq n' \(lqX\-Spam\-Status:\(rq header fields.


.TP
.B imap_idle
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will attempt ta use tha IMAP IDLE extension
to check fo' freshly smoked up mail up in tha current mailbox. Right back up in yo muthafuckin ass. Some servers
(dovecot was tha inspiration fo' dis option) react badly
to muttz implementation. I aint talkin' bout chicken n' gravy biatch. If yo' connection seems ta freeze
up periodically, try unsettin all dis bullshit.


.TP
.B imap_keepkickin it
.nf
Type: number
Default: 300
.fi
.IP
This variable specifies tha maximum amount of time up in secondz dat mutt
will wait before pollin open IMAP connections, ta prevent tha server
from closin dem before mutt has finished wit em. Da default is
well within tha RFC\-specified minimum amount of time (30 minutes) before
a server be allowed ta do dis yo, but up in practice tha RFC do get
violated every last muthafuckin now n' then. I aint talkin' bout chicken n' gravy biatch. Reduce dis number if you find yo ass
gettin disconnected from yo' IMAP server cuz of inactivity.


.TP
.B imap_list_subscribed
.nf
Type: boolean
Default: no
.fi
.IP
This variable configures whether IMAP folda browsin will look for
only subscribed foldaz or all folders.  This can be toggled up in the
IMAP browser wit tha \fC<toggle\-subscribed>\fP function.


.TP
.B imap_login
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Yo crazy-ass login name on tha IMAP server.
.IP
This variable defaults ta tha value of $imap_user.


.TP
.B imap_pass
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Specifies tha password fo' yo' IMAP account.  If \fIunset\fP, Mutt will
prompt you fo' yo' password when you invoke tha \fC<imap\-fetch\-mail>\fP function
or try ta open a IMAP folder.
.IP
\fBWarning\fP: you should only use dis option when yo ass is on a
fairly secure machine, cuz tha superuser can read yo' muttrc even
if yo ass is tha only one whoz ass can read tha file.


.TP
.B imap_passive
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt aint gonna open freshly smoked up IMAP connections ta check fo' new
mail.  Mutt will only check fo' freshly smoked up mail over existin IMAP
connections.  This is useful if you don't wanna be prompted to
user/password pairs on mutt invocation, or if openin tha connection
is slow.


.TP
.B imap_peek
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt will avoid implicitly markin yo' mail as read whenever
you fetch a message from tha server n' shit. This is generally a phat thang,
but can make closin a IMAP folda somewhat slower n' shit. This option
exists ta appease speed freaks.


.TP
.B imap_pipeline_depth
.nf
Type: number
Default: 15
.fi
.IP
Controls tha number of IMAP commandz dat may be queued up before they
are busted ta tha server n' shiznit fo' realz. A deeper pipeline reduces tha amount of time
mutt must wait fo' tha server, n' can make IMAP servers feel much
more responsive. But not all servers erectly handle pipelined commands,
so if you have problems you might wanna try settin dis variable ta 0.
.IP
\fBNote:\fP Chizzlez ta dis variable have no effect on open connections.


.TP
.B imap_servernoise
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt will display warnin lyrics from tha IMAP
server as error lyrics. Right back up in yo muthafuckin ass. Since these lyrics is often
harmless, or generated cuz of configuration problems on the
server which is outta tha users' hands, you may wish ta suppress
them at some point.


.TP
.B imap_user
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Da name of tha user whose mail you intend ta access on tha IMAP
server.
.IP
This variable defaults ta yo' user name on tha local machine.


.TP
.B implicit_autoview
.nf
Type: boolean
Default: no
.fi
.IP
If set ta \(lqyes\(rq, mutt will look fo' a mailcap entry wit the
\(lq\fCcopiousoutput\fP\(rq flag set fo' \fIevery\fP MIME attachment it don't have
an internal viewer defined for. Shiiit, dis aint no joke.  If such a entry is found, mutt will
use tha viewer defined up in dat entry ta convert tha body part ta text
form.


.TP
.B include
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether or not a cold-ass lil copy of tha message(s) yo ass is replyin to
is included up in yo' reply.


.TP
.B include_onlyfirst
.nf
Type: boolean
Default: no
.fi
.IP
Controls whether or not Mutt includes only tha straight-up original gangsta attachment
of tha message yo ass is replying.


.TP
.B indent_string
.nf
Type: string
Default: \(lq> \(rq
.fi
.IP
Specifies tha strang ta prepend ta each line of text quoted up in a
message ta which yo ass is replying.  Yo ass is straight fuckin encouraged not to
change dis value, as it tendz ta agitate tha mo' fanatical netizens.
.IP
Da value of dis option is ignored if $text_flowed is set, too cuz
the quotin mechanizzle is strictly defined fo' format=flowed.
.IP
This option be a gangbangin' format string, please peep tha description of
$index_format fo' supported \fCprintf(3)\fP\-style sequences.


.TP
.B index_format
.nf
Type: string
Default: \(lq%4C %Z %{%b %d} %\-15.15L (%?l?%4l&%4c?) %s\(rq
.fi
.IP
This variable allows you ta customize tha message index display to
your underground taste.
.IP
\(lqFormat strings\(rq is similar ta tha strings used up in tha C
function \fCprintf(3)\fP ta format output (see tha playa page fo' mo' details).
Da followin sequences is defined up in Mutt:
.RS
.PD 0
.TP
%a 
address of tha author
.TP
%A 
reply\-to address (if present; otherwise: address of author)
.TP
%b 
filename of tha original gangsta message folda (think mailbox)
.TP
%B 
the list ta which tha letta was sent, or else tha folda name (%b).
.TP
%c 
number of charactas (bytes) up in tha message
.TP
%C 
current message number
.TP
%d 
date n' time of tha message up in tha format specified by
$date_format converted ta senderz time unit
.TP
%D 
date n' time of tha message up in tha format specified by
$date_format converted ta tha local time unit
.TP
%e 
current message number up in thread
.TP
%E 
number of lyrics up in current thread
.TP
%f 
sender (address + real name), either From: or Return\-Path:
.TP
%F 
lyricist name, or recipient name if tha message is from you
.TP
%H 
spam attribute(s) of dis message
.TP
%i 
message\-id of tha current message
.TP
%l 
number of lines up in tha message (does not work wit maildir,
mh, n' possibly IMAP folders)
.TP
%L 
If a address up in tha \(lqTo:\(rq or \(lqCc:\(rq header field matches a address
defined by tha playas \(lqsubscribe\(rq command, dis displays
\(rqTo <list\-name>\(rq, otherwise tha same as %F.
.TP
%m 
total number of message up in tha mailbox
.TP
%M 
number of hidden lyrics if tha thread is collapsed.
.TP
%N 
message score
.TP
%n 
authorz real name (or address if missing)
.TP
%O 
original gangsta save folda where mutt would formerly have
stashed tha message: list name or recipient name
if not busted ta a list
.TP
%P 
progress indicator fo' tha built\-in pager (how much of tha file has been displayed)
.TP
%s 
subject of tha message
.TP
%S 
statuz of tha message (\(lqN\(rq/\(lqD\(rq/\(lqd\(rq/\(lq!\(rq/\(lqr\(rq/*)
.TP
%t 
\(lqTo:\(rq field (recipients)
.TP
%T 
the appropriate characta from tha $to_chars string
.TP
%u 
user (login) name of tha author
.TP
%v 
first name of tha lyricist, or tha recipient if tha message is from you
.TP
%X 
number of attachments
(please peep tha \(lqattachments\(rq section fo' possible speed effects)
.TP
%y 
\(lqX\-Label:\(rq field, if present
.TP
%Y 
\(lqX\-Label:\(rq field, if present, n' \fI(1)\fP not at part of a thread tree,
\fI(2)\fP all up in tha top of a thread, or \fI(3)\fP \(lqX\-Label:\(rq is different from
precedin messagez \(lqX\-Label:\(rq.
.TP
%Z 
message status flags
.TP
%{fmt} 
the date n' time of tha message is converted ta sender's
time unit, n' \(lqfmt\(rq is expanded by tha library function
\fCstrftime(3)\fP; a leadin bang disablez locales
.TP
%[fmt] 
the date n' time of tha message is converted ta tha local
time unit, n' \(lqfmt\(rq is expanded by tha library function
\fCstrftime(3)\fP; a leadin bang disablez locales
.TP
%(fmt) 
the local date n' time when tha message was received.
\(lqfmt\(rq is expanded by tha library function \fCstrftime(3)\fP;
a leadin bang disablez locales
.TP
%<fmt> 
the current local time. \(lqfmt\(rq is expanded by tha library
function \fCstrftime(3)\fP; a leadin bang disablez locales.
.TP
%>X    
right justify tha rest of tha strang n' pad wit characta \(lqX\(rq
.TP
%|X    
pad ta tha end of tha line wit characta \(lqX\(rq
.TP
%*X    
soft\-fill wit characta \(lqX\(rq as pad
.RE
.PD 1
.IP
\(lqSoft\-fill\(rq deserves some explanation: Normal right\-justification
will print every last muthafuckin thang ta tha left of tha \(lq%>\(rq, displayin paddin and
whatever lies ta tha right only if there be a room. By contrast,
soft\-fill gives prioritizzle ta tha right\-hand side, guaranteein space
to display it n' showin paddin only if there be a still room. If
necessary, soft\-fill will smoke text leftwardz ta make room for
rightward text.
.IP
Note dat these expandos is supported in
\(lqsave-hook\(rq, \(lqfcc-hook\(rq n' \(lqfcc-save-hook\(rq, like a muthafucka.


.TP
.B ispell
.nf
Type: path
Default: \(lq/usr/bin/hunspell\(rq
.fi
.IP
How tha fuck ta invoke ispell (GNUz spell\-checkin software).


.TP
.B keep_flagged
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, read lyrics marked as flagged aint gonna be moved
from yo' spool mailbox ta yo' $mbox mailbox, or as a result of
a \(lqmbox-hook\(rq command.


.TP
.B locale
.nf
Type: string
Default: \(lqC\(rq
.fi
.IP
Da locale used by \fCstrftime(3)\fP ta format dates. Legal joints are
the strings yo' system accepts fo' tha locale environment variable \fC$LC_TIME\fP.


.TP
.B mail_check
.nf
Type: number
Default: 5
.fi
.IP
This variable configures how tha fuck often (in seconds) mutt should look for
new mail fo' realz. Also peep tha $timeout variable.


.TP
.B mail_check_recent
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will only notify you bout freshly smoked up mail dat has been received
since tha last time you opened tha mailbox.  When \fIunset\fP, Mutt will notify you
if any freshly smoked up mail exists up in tha mailbox, regardless of whether you have hit up it
recently.
.IP
When \fI$mark_old\fP is set, Mutt do not consider tha mailbox ta contain new
mail if only oldschool lyrics exist.


.TP
.B mailcap_path
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable specifies which filez ta consult when attemptin to
display MIME bodies not directly supported by Mutt.


.TP
.B mailcap_sanitize
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, mutt will restrict possible charactas up in mailcap % expandos
to a well\-defined set of safe characters.  This is tha safe setting,
but we is not shizzle it don't break some mo' advanced MIME stuff.
.IP
\fBDON'T CHANGE THIS SETTING UNLESS YOU ARE REALLY SURE WHAT YOU ARE
DOING!\fP


.TP
.B maildir_header_cache_verify
.nf
Type: boolean
Default: yes
.fi
.IP
Peep fo' Maildir unaware programs other than mutt havin modified maildir
filez when tha header cache is up in use.  This incurs one \fCstat(2)\fP per
message every last muthafuckin time tha folda is opened (which can be straight-up slow fo' NFS
folders).


.TP
.B maildir_trash
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, lyrics marked as deleted is ghon be saved wit tha maildir
trashed flag instead of unlinked. Y'all KNOW dat shit, muthafucka!  \fBNote:\fP dis only applies
to maildir\-style mailboxes.  Settin it gonna git no effect on other
mailbox types.


.TP
.B mark_old
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether or not mutt marks \fInew\fP \fBunread\fP
lyrics as \fIold\fP if you exit a mailbox without readin em.
With dis option \fIset\fP, tha next time you start mutt, tha lyrics
will show up wit a \(lqO\(rq next ta dem up in tha index menu,
indicatin dat they is old.


.TP
.B markers
.nf
Type: boolean
Default: yes
.fi
.IP
Controls tha display of wrapped lines up in tha internal pager n' shit. If set, a
\(lq+\(rq marker is displayed all up in tha beginnin of wrapped lines.
.IP
Also peep tha $smart_wrap variable.


.TP
.B mask
.nf
Type: regular expression
Default: \(lq!^\\.[^.]\(rq
.fi
.IP
A regular expression used up in tha file browser, optionally preceded by
the \fInot\fP operator \(lq!\(rq.  Only filez whose names match dis mask
will be shown. I aint talkin' bout chicken n' gravy biatch. Da match be always case\-sensitive.


.TP
.B mbox
.nf
Type: path
Default: \(lq~/mbox\(rq
.fi
.IP
This specifies tha folda tha fuck into which read mail up in yo' $spoolfile
folda is ghon be appended.
.IP
Also peep tha $move variable.


.TP
.B mbox_type
.nf
Type: folda magic
Default: mbox
.fi
.IP
Da default mailbox type used when bustin freshly smoked up folders. May be any of
\(lqmbox\(rq, \(lqMMDF\(rq, \(lqMH\(rq n' \(lqMaildir\(rq. This is overridden by the
\fC\-m\fP command\-line option.


.TP
.B menu_context
.nf
Type: number
Default: 0
.fi
.IP
This variable controls tha number of linez of context dat is given
when scrollin all up in menus. (Similar ta $pager_context.)


.TP
.B menu_move_off
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIunset\fP, tha bottom entry of menus aint NEVER gonna scroll up past
the bottom of tha screen, unless there be less entries than lines.
When \fIset\fP, tha bottom entry may move off tha bottom.


.TP
.B menu_scroll
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, menus is ghon be scrolled up or down one line when you
attempt ta move across a screen boundary.  If \fIunset\fP, tha screen
is cleared n' tha next or previous page of tha menu is displayed
(useful fo' slow links ta avoid nuff redraws).


.TP
.B message_cache_clean
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, mutt will clean up obsolete entries from tha message cache when
the mailbox is synchronized. Y'all KNOW dat shit, muthafucka! Yo ass probably only wanna set it
every once up in a while, since it can be a lil slow
(especially fo' big-ass folders).


.TP
.B message_cachedir
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Set dis ta a gangbangin' finger-lickin' directory n' mutt will cache copiez of lyrics from
your IMAP n' POP servers here, so peek-a-boo, clear tha way, I be comin' thru fo'sho. Yo ass is free ta remove entries at any
time.
.IP
When settin dis variable ta a gangbangin' finger-lickin' directory, mutt need ta fetch every
remote message only once n' can big-ass up regular expression searches
as fast as fo' local folders.
.IP
Also peep tha $message_cache_clean variable.


.TP
.B message_format
.nf
Type: string
Default: \(lq%s\(rq
.fi
.IP
This is tha strang displayed up in tha \(lqattachment\(rq menu for
attachmentz of type \fCmessage/rfc822\fP.  For a gangbangin' full listin of defined
\fCprintf(3)\fP\-like sequences peep tha section on $index_format.


.TP
.B meta_key
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, forces Mutt ta interpret keystrokes wit tha high bit (bit 8)
set as if tha user had pressed tha Esc key n' whatever key remains
afta havin tha high bit removed. Y'all KNOW dat shit, muthafucka!  For example, if tha key pressed
has a ASCII value of \fC0xf8\fP, then dis is treated as if tha user had
pressed Esc then \(lqx\(rq.  This is cuz tha result of removin the
high bit from \fC0xf8\fP is \fC0x78\fP, which is tha ASCII character
\(lqx\(rq.


.TP
.B metoo
.nf
Type: boolean
Default: no
.fi
.IP
If \fIunset\fP, Mutt will remove yo' address (see tha \(lqalternates\(rq
command) from tha list of recipients when replyin ta a message.


.TP
.B mh_purge
.nf
Type: boolean
Default: no
.fi
.IP
When \fIunset\fP, mutt will mimic mhz behavior n' rename deleted lyrics
to \fI,<old file name>\fP up in mh foldaz instead of straight-up deleting
them. This leaves tha message on disk but make programs readin tha folder
ignore dat shit. If tha variable is \fIset\fP, tha message filez will simply be
deleted.
.IP
This option is similar ta $maildir_trash fo' Maildir folders.


.TP
.B mh_seq_flagged
.nf
Type: string
Default: \(lqflagged\(rq
.fi
.IP
Da name of tha MH sequence used fo' flagged lyrics.


.TP
.B mh_seq_replied
.nf
Type: string
Default: \(lqreplied\(rq
.fi
.IP
Da name of tha MH sequence used ta tag replied lyrics.


.TP
.B mh_seq_unseen
.nf
Type: string
Default: \(lqunseen\(rq
.fi
.IP
Da name of tha MH sequence used fo' unseen lyrics.


.TP
.B mime_forward
.nf
Type: quadoption
Default: no
.fi
.IP
When \fIset\fP, tha message yo ass is forwardin is ghon be attached as a
separate \fCmessage/rfc822\fP MIME part instead of included up in tha main body of the
message.  This is useful fo' forwardin MIME lyrics so tha receiver
can properly view tha message as dat shiznit was served up ta yo thugged-out ass. If you like
to switch between MIME n' not MIME from mail ta mail, set this
variable ta \(lqask\-no\(rq or \(lqask\-yes\(rq.
.IP
Also peep $forward_decode n' $mime_forward_decode.


.TP
.B mime_forward_decode
.nf
Type: boolean
Default: no
.fi
.IP
Controls tha decodin of complex MIME lyrics tha fuck into \fCtext/plain\fP when
forwardin a message while $mime_forward is \fIset\fP. Otherwise
$forward_decode is used instead.


.TP
.B mime_forward_rest
.nf
Type: quadoption
Default: yes
.fi
.IP
When forwardin multiple attachmentz of a MIME message from tha attachment
menu, attachments which cannot be decoded up in a reasonable manner will
be attached ta tha newly composed message if dis option is \fIset\fP.


.TP
.B mix_entry_format
.nf
Type: string
Default: \(lq%4n %c %\-16s %a\(rq
.fi
.IP
This variable raps bout tha format of a remaila line on tha mixmaster
chain selection screen. I aint talkin' bout chicken n' gravy biatch.  Da followin \fCprintf(3)\fP\-like sequences are
supported:
.RS
.PD 0
.TP
%n 
Da hustlin number on tha menu.
.TP
%c 
Remaila capabilities.
.TP
%s 
Da remailerz short name.
.TP
%a 
Da remailerz e\-mail address.
.RE
.PD 1

.TP
.B mixmaster
.nf
Type: path
Default: \(lqmixmaster\(rq
.fi
.IP
This variable gotz nuff tha path ta tha Mixmasta binary on your
system.  It be used wit various setz of parametas ta gather the
list of known remailers, n' ta finally bust a message all up in the
mixmasta chain.


.TP
.B move
.nf
Type: quadoption
Default: no
.fi
.IP
Controls whether or not Mutt will move read lyrics
from yo' spool mailbox ta yo' $mbox mailbox, or as a result of
a \(lqmbox-hook\(rq command.


.TP
.B narrow_tree
.nf
Type: boolean
Default: no
.fi
.IP
This variable, when \fIset\fP, make tha thread tree narrower, allowing
deeper threadz ta fit on tha screen.


.TP
.B net_inc
.nf
Type: number
Default: 10
.fi
.IP
Operations dat expect ta transfer a big-ass amount of data over the
network will update they progress every last muthafuckin $net_inc kilobytes.
If set ta 0, no progress lyrics is ghon be displayed.
.IP
See also $read_inc, $write_inc n' $net_inc.


.TP
.B pager
.nf
Type: path
Default: \(lqbuiltin\(rq
.fi
.IP
This variable specifies which pager you wanna use ta view
lyrics. Da value \(lqbuiltin\(rq means ta use tha built\-in pager, otherwise this
variable should specify tha pathname of tha external pager you would
like ta use.
.IP
Usin a external pager may have some disadvantages: Additional
keystrokes is necessary cuz you can't call mutt functions
directly from tha pager, n' screen resizes cause lines longer than
the screen width ta be badly formatted up in tha help menu.


.TP
.B pager_context
.nf
Type: number
Default: 0
.fi
.IP
This variable controls tha number of linez of context dat is given
when displayin tha next or previous page up in tha internal pager n' shit.  By
default, Mutt will display tha line afta tha last one on tha screen
at tha top of tha next page (0 linez of context).
.IP
This variable also specifies tha amount of context given fo' search
results, n' you can put dat on yo' toast. If positive, dis nuff lines is ghon be given before a match,
if 0, tha match is ghon be top\-aligned.


.TP
.B pager_format
.nf
Type: string
Default: \(lq\-%Z\- %C/%m: %\-20.20n   %s%*  \-\- (%P)\(rq
.fi
.IP
This variable controls tha format of tha one\-line message \(lqstatus\(rq
displayed before each message up in either tha internal or a external
pager n' shit.  Da valid sequences is listed up in tha $index_format
section.


.TP
.B pager_index_lines
.nf
Type: number
Default: 0
.fi
.IP
Determines tha number of linez of a mini\-index which is shown when in
the pager n' shit.  Da current message, unless near tha top or bottom of the
folder, is ghon be roughly one third of tha way down dis mini\-index,
givin tha reader tha context of all dem lyrics before n' afta the
message.  This is useful, fo' example, ta determine how tha fuck nuff lyrics
remain ta be read up in tha current thread. Y'all KNOW dat shit, muthafucka!  One of tha lines is reserved
for tha status bar from tha index, so a settin of 6
will only show 5 linez of tha actual index.  A value of 0 thangs up in dis biatch in
no index bein shown. I aint talkin' bout chicken n' gravy biatch.  If tha number of lyrics up in tha current folder
is less than $pager_index_lines, then tha index will only use as
many lines as it needs.


.TP
.B pager_stop
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, tha internal\-pager will \fBnot\fP move ta tha next message
when yo ass be all up in tha end of a message n' invoke tha \fC<next\-page>\fP
function.


.TP
.B pgp_auto_decode
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, mutt will automatically attempt ta decrypt traditionizzle PGP
lyrics whenever tha user performs a operation which ordinarily would
result up in tha contentz of tha message bein operated on. I aint talkin' bout chicken n' gravy biatch.  For example,
if tha user displays a pgp\-traditionizzle message which has not been manually
checked wit tha \fC<check-traditional-pgp>\fP function, mutt will automatically
check tha message fo' traditionizzle pgp.


.TP
.B pgp_autoinline
.nf
Type: boolean
Default: no
.fi
.IP
This option controls whether Mutt generates old\-style inline
(traditional) PGP encrypted or signed lyrics under certain
circumstances.  This can be overridden by use of tha pgp menu,
when inline aint required.
.IP
Note dat Mutt might automatically use PGP/MIME fo' lyrics
which consist of mo' than a single MIME part.  Mutt can be
configured ta ask before bustin  PGP/MIME lyrics when inline
(traditional) would not work.
.IP
Also peep tha $pgp_mime_auto variable.
.IP
Also note dat rockin tha old\-style PGP message format is \fBstrongly\fP
\fBdeprecated\fP.
(PGP only)


.TP
.B pgp_check_exit
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, mutt will check tha exit code of tha PGP subprocess when
signin or encrypting.  A non\-zero exit code means dat the
subprocess failed.
(PGP only)


.TP
.B pgp_clearsign_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This format is used ta create a old\-style \(lqclearsigned\(rq PGP
message.  Note dat tha use of dis format is \fBstrongly\fP
\fBdeprecated\fP.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_decode_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This format strings specifies a cold-ass lil command which is used ta decode
application/pgp attachments.
.IP
Da PGP command formats have they own set of \fCprintf(3)\fP\-like sequences:
.RS
.PD 0
.TP
%p 
Expandz ta PGPPASSFD=0 when a pass phrase is needed, ta a empty
strin otherwise. Note: This may be used wit a %? construct.
.TP
%f 
Expandz ta tha name of a gangbangin' file containin a message.
.TP
%s 
Expandz ta tha name of a gangbangin' file containin tha signature part
           of a \fCmultipart/signed\fP attachment when verifyin dat shit.
.TP
%a 
Da value of $pgp_sign_as.
.TP
%r 
One or mo' key IDs.
.RE
.PD 1
.IP
For examplez on how tha fuck ta configure these formats fo' tha various versions
of PGP which is floatin around, peep tha pgp n' gpg sample configuration filez in
the \fCsamples/\fP subdirectory which has been installed on yo' system
alongside tha documentation.
(PGP only)


.TP
.B pgp_decrypt_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta decrypt a PGP encrypted message.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_encrypt_only_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta encrypt a funky-ass body part without signin dat shit.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_encrypt_sign_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta both sign n' encrypt a funky-ass body part.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_entry_format
.nf
Type: string
Default: \(lq%4n %t%f %4l/0x%k %\-4a %2c %u\(rq
.fi
.IP
This variable allows you ta customize tha PGP key selection menu to
your underground taste. This strang is similar ta $index_format yo, but
has its own set of \fCprintf(3)\fP\-like sequences:
.RS
.PD 0
.TP
%n     
number
.TP
%k     
key id
.TP
%u     
user id
.TP
%a     
algorithm
.TP
%l     
key length
.TP
%f     
flags
.TP
%c     
capabilities
.TP
%t     
trust/validitizzle of tha key\-uid association
.TP
%[<s>] 
date of tha key where <s> be a \fCstrftime(3)\fP expression
.RE
.PD 1
.IP
(PGP only)


.TP
.B pgp_export_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta export a hood key from tha user's
key ring.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_getkeys_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is invoked whenever Mutt need ta fetch tha hood key associated with
an email address.  Of tha sequences supported by $pgp_decode_command, %r is
the only \fCprintf(3)\fP\-like sequence used wit dis format.  Note that
in dis case, %r expandz ta tha email address, not tha hood key ID (the key ID is
unknown, which is why Mutt is invokin dis command).
(PGP only)


.TP
.B pgp_good_sign
.nf
Type: regular expression
Default: \(lq\(rq
.fi
.IP
If you assign a text ta dis variable, then a PGP signature is only
considered verified if tha output from $pgp_verify_command gotz nuff
the text. Use dis variable if tha exit code from tha command is 0
even fo' wack signatures.
(PGP only)


.TP
.B pgp_ignore_subkeys
.nf
Type: boolean
Default: yes
.fi
.IP
Settin dis variable will cause Mutt ta ignore OpenPGP subkeys. Instead,
the principal key will inherit tha subkeys' capabilities. Put ya muthafuckin choppers up if ya feel dis!  \fIUnset\fP this
if you wanna play bangin-ass key selection games.
(PGP only)


.TP
.B pgp_import_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta import a key from a message into
the userz hood key ring.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_list_pubring_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta list tha hood key ringz contents, n' you can put dat on yo' toast.  The
output format must be analogous ta tha one used by

.IP
.EX
gpg \-\-list\-keys \-\-with\-colons

.EE
.IP
This format be also generated by tha \fCpgpring\fP utilitizzle which comes
with mutt.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_list_secring_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta list tha secret key ringz contents, n' you can put dat on yo' toast.  The
output format must be analogous ta tha one used by:

.IP
.EX
gpg \-\-list\-keys \-\-with\-colons

.EE
.IP
This format be also generated by tha \fCpgpring\fP utilitizzle which comes
with mutt.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_long_ids
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, use 64 bit PGP key IDs, if \fIunset\fP use tha aiiight 32 bit key IDs.
(PGP only)


.TP
.B pgp_mime_auto
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
This option controls whether Mutt will prompt you for
automatically bustin  a (signed/encrypted) message using
PGP/MIME when inline (traditional) fails (for any reason).
.IP
Also note dat rockin tha old\-style PGP message format is \fBstrongly\fP
\fBdeprecated\fP.
(PGP only)


.TP
.B pgp_replyinline
.nf
Type: boolean
Default: no
.fi
.IP
Settin dis variable will cause Mutt ta always attempt to
create a inline (traditional) message when replyin ta a
message which is PGP encrypted/signed inline.  This can be
overridden by use of tha pgp menu, when inline is not
required. Y'all KNOW dat shit, muthafucka!  This option do not automatically detect if the
(replied\-to) message is inline; instead it relies on Mutt
internals fo' previously checked/flagged lyrics.
.IP
Note dat Mutt might automatically use PGP/MIME fo' lyrics
which consist of mo' than a single MIME part.  Mutt can be
configured ta ask before bustin  PGP/MIME lyrics when inline
(traditional) would not work.
.IP
Also peep tha $pgp_mime_auto variable.
.IP
Also note dat rockin tha old\-style PGP message format is \fBstrongly\fP
\fBdeprecated\fP.
(PGP only)


.TP
.B pgp_retainable_sigs
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, signed n' encrypted lyrics will consist of nested
\fCmultipart/signed\fP n' \fCmultipart/encrypted\fP body parts.
.IP
This is useful fo' applications like encrypted n' signed mailing
lists, where tha outa layer (\fCmultipart/encrypted\fP) can be easily
removed, while tha inner \fCmultipart/signed\fP part is retained.
(PGP only)


.TP
.B pgp_show_unusable
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, mutt will display non\-usable keys on tha PGP key selection
menu fo'sho.  This includes keys which done been revoked, have expired, or
have been marked as \(lqdisabled\(rq by tha user.
(PGP only)


.TP
.B pgp_sign_as
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
If you have mo' than one key pair, dis option allows you ta specify
which of yo' private keys ta use.  It be recommended dat you use the
keyid form ta specify yo' key (e.g. \fC0x00112233\fP).
(PGP only)


.TP
.B pgp_sign_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta create tha detached PGP signature fo' a
\fCmultipart/signed\fP PGP/MIME body part.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_sort_keys
.nf
Type: sort order
Default: address
.fi
.IP
Specifies how tha fuck tha entries up in tha pgp menu is sorted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. The
followin is legal joints:
.RS
.PD 0
.TP
address 
sort alphabetically by user id
.TP
keyid   
sort alphabetically by key id
.TP
date    
sort by key creation date
.TP
trust   
sort by tha trust of tha key
.RE
.PD 1
.IP
If you prefer reverse order of tha above joints, prefix it with
\(lqreverse\-\(rq.
(PGP only)


.TP
.B pgp_strict_enc
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, Mutt will automatically encode PGP/MIME signed lyrics as
quoted\-printable.  Please note dat unsettin dis variable may
lead ta problems wit non\-verifyable PGP signatures, so only chizzle
this if you know what tha fuck yo ass is bustin.
(PGP only)


.TP
.B pgp_timeout
.nf
Type: number
Default: 300
.fi
.IP
Da number of secondz afta which a cold-ass lil cached passphrase will expire if
not used.
(PGP only)


.TP
.B pgp_use_gpg_agent
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, mutt will bust a possibly\-runnin \fCgpg\-agent(1)\fP process.
(PGP only)


.TP
.B pgp_verify_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta verify PGP signatures.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pgp_verify_key_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta verify key shiznit from tha key selection
menu.
.IP
This be a gangbangin' format string, peep tha $pgp_decode_command command for
possible \fCprintf(3)\fP\-like sequences.
(PGP only)


.TP
.B pipe_decode
.nf
Type: boolean
Default: no
.fi
.IP
Used up in connection wit tha \fC<pipe\-message>\fP command. Y'all KNOW dat shit, muthafucka!  When \fIunset\fP,
Mutt will pipe tha lyrics without any preprocessing. When \fIset\fP, Mutt
will chronic headaz n' will attempt ta decode tha lyrics
first.


.TP
.B pipe_sep
.nf
Type: string
Default: \(lq\\n\(rq
.fi
.IP
Da separator ta add between lyrics when pipin a list of tagged
lyrics ta a external Unix command.


.TP
.B pipe_split
.nf
Type: boolean
Default: no
.fi
.IP
Used up in connection wit tha \fC<pipe\-message>\fP function following
\fC<tag\-prefix>\fP.  If dis variable is \fIunset\fP, when pipin a list of
tagged lyrics Mutt will concatenate tha lyrics n' will pipe them
all concatenated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  When \fIset\fP, Mutt will pipe tha lyrics one by one.
In both cases tha lyrics is piped up in tha current sorted order,
and tha $pipe_sep separator be added afta each message.


.TP
.B pop_auth_try_all
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, Mutt will try all available authentication methods.
When \fIunset\fP, Mutt will only fall back ta other authentication
methodz if tha previous methodz is unavailable. If a method is
available but authentication fails, Mutt aint gonna connect ta tha POP server.


.TP
.B pop_authenticators
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This be a cold-ass lil colon\-delimited list of authentication methodz mutt may
attempt ta use ta log up in ta a POP server, up in tha order mutt should
try em.  Authentication methodz is either \(lquser\(rq, \(lqapop\(rq or any
SASL mechanism, e.g. \(lqdigest\-md5\(rq, \(lqgssapi\(rq or \(lqcram\-md5\(rq.
This option is case\-insensitive. If dis option is \fIunset\fP
(the default) mutt will try all available methods, up in order from
most\-secure ta least\-secure.
.IP
Example:

.IP
.EX
set pop_authenticators=\(rqdigest\-md5:apop:user\(rq

.EE


.TP
.B pop_checkinterval
.nf
Type: number
Default: 60
.fi
.IP
This variable configures how tha fuck often (in seconds) mutt should look for
new mail up in tha currently selected mailbox if it aint nuthin but a POP mailbox.


.TP
.B pop_delete
.nf
Type: quadoption
Default: ask\-no
.fi
.IP
If \fIset\fP, Mutt will delete successfully downloaded lyrics from tha POP
server when rockin tha \fC<fetch-mail>\fP function. I aint talkin' bout chicken n' gravy biatch.  When \fIunset\fP, Mutt will
downlizzle lyrics but also leave dem on tha POP server.


.TP
.B pop_host
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Da name of yo' POP server fo' tha \fC<fetch-mail>\fP function. I aint talkin' bout chicken n' gravy biatch.  You
can also specify a alternatizzle port, username n' password, i.e.:

.IP
.EX
[pop[s]://][username[:password]@]popserver[:port]

.EE
.IP
where \(lq[...]\(rq denotes a optionizzle part.


.TP
.B pop_last
.nf
Type: boolean
Default: no
.fi
.IP
If dis variable is \fIset\fP, mutt will try ta use tha \(lq\fCLAST\fP\(rq POP command
for retrievin only unread lyrics from tha POP server when using
the \fC<fetch-mail>\fP function.


.TP
.B pop_pass
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Specifies tha password fo' yo' POP account.  If \fIunset\fP, Mutt will
prompt you fo' yo' password when you open a POP mailbox.
.IP
\fBWarning\fP: you should only use dis option when yo ass is on a
fairly secure machine, cuz tha superuser can read yo' muttrc
even if yo ass is tha only one whoz ass can read tha file.


.TP
.B pop_reconnect
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether or not Mutt will try ta reconnect ta tha POP server if
the connection is lost.


.TP
.B pop_user
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Yo crazy-ass login name on tha POP server.
.IP
This variable defaults ta yo' user name on tha local machine.


.TP
.B post_indent_string
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Similar ta tha $attribution variable, Mutt will append this
strin afta tha inclusion of a message which is bein replied to.


.TP
.B postpone
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether or not lyrics is saved up in tha $postponed
mailbox when you elect not ta bust immediately.
.IP
Also peep tha $recall variable.


.TP
.B postponed
.nf
Type: path
Default: \(lq~/postponed\(rq
.fi
.IP
Mutt allows you ta indefinitely \(lqpostpone bustin  a message\(rq which
yo ass is editing.  When you chizzle ta postpone a message, Mutt saves it
in tha mailbox specified by dis variable.
.IP
Also peep tha $postpone variable.


.TP
.B preconnect
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
If \fIset\fP, a gangbangin' finger-lickin' dirty-ass shell command ta be executed if mutt fails ta establish
a connection ta tha server n' shit. This is useful fo' settin up secure
connections, e.g. wit \fCssh(1)\fP. If tha command returns a  nonzero
status, mutt gives up openin tha server n' shit. Example:

.IP
.EX
set preconnect=\(rqssh \-f \-q \-L 1234:mailhost.net:143 mailhost.net \\
sleep 20 < /dev/null > /dev/null\(rq

.EE
.IP
Mailbox \(lqfoo\(rq on \(lqmailhost.net\(rq can now be reached
as \(lq{localhost:1234}foo\(rq.
.IP
Note: For dis example ta work, you must be able ta log up in ta the
remote machine without havin ta enta a password.


.TP
.B print
.nf
Type: quadoption
Default: ask\-no
.fi
.IP
Controls whether or not Mutt straight-up prints lyrics.
This is set ta \(lqask\-no\(rq by default, cuz some people
accidentally hit \(lqp\(rq often.


.TP
.B print_command
.nf
Type: path
Default: \(lqlpr\(rq
.fi
.IP
This specifies tha command pipe dat should be used ta print lyrics.


.TP
.B print_decode
.nf
Type: boolean
Default: yes
.fi
.IP
Used up in connection wit tha \fC<print\-message>\fP command. Y'all KNOW dat shit, muthafucka!  If this
option is \fIset\fP, tha message is decoded before it is passed ta the
external command specified by $print_command. Y'all KNOW dat shit, muthafucka!  If dis option
is \fIunset\fP, no processin is ghon be applied ta tha message when
printin dat shit.  Da latta settin may be useful if yo ass is using
some advanced printa filta which be able ta properly format
e\-mail lyrics fo' printing.


.TP
.B print_split
.nf
Type: boolean
Default: no
.fi
.IP
Used up in connection wit tha \fC<print\-message>\fP command. Y'all KNOW dat shit, muthafucka!  If dis option
is \fIset\fP, tha command specified by $print_command is executed once for
each message which is ta be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If dis option is \fIunset\fP,
the command specified by $print_command is executed only once, and
all tha lyrics is concatenated, wit a gangbangin' form feed as tha message
separator.
.IP
Those whoz ass use tha \fCenscript\fP(1) programz mail\-printin mode will
most likely wanna \fIset\fP dis option.


.TP
.B prompt_after
.nf
Type: boolean
Default: yes
.fi
.IP
If you use a \fIexternal\fP $pager, settin dis variable will
cause Mutt ta prompt you fo' a cold-ass lil command when tha pager exits rather
than returnin ta tha index menu fo'sho.  If \fIunset\fP, Mutt will return ta the
index menu when tha external pager exits.


.TP
.B query_command
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This specifies tha command Mutt will use ta make external address
queries. Put ya muthafuckin choppers up if ya feel dis!  Da strang may contain a \(lq%s\(rq, which is ghon be substituted
with tha query strang tha user types.  Mutt will add quotes round the
strin substituted fo' \(lq%s\(rq automatically accordin ta shell quoting
rules, so you should avoid addin yo' own. I aint talkin' bout chicken n' gravy biatch.  If no \(lq%s\(rq is found in
the string, Mutt will append tha userz query ta tha end of tha string.
See \(lqquery\(rq fo' mo' shiznit.


.TP
.B query_format
.nf
Type: string
Default: \(lq%4c %t %\-25.25a %\-25.25n %?e?(%e)?\(rq
.fi
.IP
This variable raps bout tha format of tha \(lqquery\(rq menu fo'sho. The
followin \fCprintf(3)\fP\-style sequences is understood:
.RS
.PD 0
.TP
%a  
destination address
.TP
%c  
current entry number
.TP
%e  
extra shiznit *
.TP
%n  
destination name
.TP
%t  
\(lq*\(rq if current entry is tagged, a space otherwise
.TP
%>X 
right justify tha rest of tha strang n' pad wit \(lqX\(rq
.TP
%|X 
pad ta tha end of tha line wit \(lqX\(rq
.TP
%*X 
soft\-fill wit characta \(lqX\(rq as pad
.RE
.PD 1
.IP
For a explanation of \(lqsoft\-fill\(rq, peep tha $index_format documentation.
.IP
* = can be optionally printed if nonzero, peep tha $status_format documentation.


.TP
.B quit
.nf
Type: quadoption
Default: yes
.fi
.IP
This variable controls whether \(lqquit\(rq n' \(lqexit\(rq straight-up quit
from mutt.  If dis option is \fIset\fP, they do quit, if it is \fIunset\fP, they
have no effect, n' if it is set ta \fIask\-yes\fP or \fIask\-no\fP, yo ass is
prompted fo' confirmation when you try ta quit.


.TP
.B quote_regexp
.nf
Type: regular expression
Default: \(lq^([ \\t]*[|>:}#])+\(rq
.fi
.IP
A regular expression used up in tha internal pager ta determine quoted
sectionz of text up in tha body of a message. Quoted text may be filtered
out rockin tha \fC<toggle\-quoted>\fP command, or colored accordin ta the
\(lqcolor quoted\(rq crew of directives.
.IP
Higher levelz of quotin may be colored differently (\(lqcolor quoted1\(rq,
\(lqcolor quoted2\(rq, etc.). Da quotin level is determined by removing
the last characta from tha matched text n' recursively reapplying
the regular expression until it fails ta produce a match.
.IP
Match detection may be overridden by tha $smileys regular expression.


.TP
.B read_inc
.nf
Type: number
Default: 10
.fi
.IP
If set ta a value pimped outa than 0, Mutt will display which message it
is currently on when readin a mailbox or when struttin search actions
like fuckin search n' limit. Da message is printed after
this nuff lyrics done been read or searched (e.g., if set ta 25, Mutt will
print a message when it be at message 25, n' then again n' again n' again when it gets
to message 50).  This variable is meant ta indicate progress when
readin or searchin big-ass mailboxes which may take some time.
When set ta 0, only a single message will step tha fuck up before tha reading
the mailbox.
.IP
Also peep tha $write_inc, $net_inc n' $time_inc variablez n' the
\(lqtuning\(rq section of tha manual fo' performizzle considerations.


.TP
.B read_only
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, all foldaz is opened up in read\-only mode.


.TP
.B realname
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This variable specifies what tha fuck \(lqreal\(rq or \(lqpersonal\(rq name should be used
when bustin  lyrics.
.IP
By default, dis is tha GECOS field from \fC/etc/passwd\fP.  Note dat this
variable will \fInot\fP be used when tha user has set a real name
in tha $from variable.


.TP
.B recall
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
Controls whether or not Mutt recalls postponed lyrics
when composin a freshly smoked up message.
.IP
\fISetting\fP dis variable ta aint generally useful, n' thus not
recommended.
.IP
Also peep $postponed variable.


.TP
.B record
.nf
Type: path
Default: \(lq~/sent\(rq
.fi
.IP
This specifies tha file tha fuck into which yo' outgoin lyrics should be
appended. Y'all KNOW dat shit, muthafucka!  (This is meant as tha primary method fo' savin a cold-ass lil copy of
your lyrics yo, but another way ta do dis is rockin tha \(lqmy_hdr\(rq
command ta create a \(lqBcc:\(rq field wit yo' email address up in dat shit.)
.IP
Da value of \fI$record\fP is overridden by tha $force_name and
$save_name variables, n' tha \(lqfcc-hook\(rq command.


.TP
.B reflow_text
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will reformat paragraphs up in text/plain
parts marked format=flowed. Y'all KNOW dat shit, muthafucka!  If \fIunset\fP, Mutt will display paragraphs
unaltered from how tha fuck they step tha fuck up in tha message body.  See RFC3676 for
details on tha \fIformat=flowed\fP format.
.IP
Also peep $reflow_wrap, n' $wrap.


.TP
.B reflow_wrap
.nf
Type: number
Default: 78
.fi
.IP
This variable controls tha maximum paragraph width when reformattin text/plain
parts when $reflow_text is \fIset\fP.  When tha value is 0, paragraphs will
be wrapped all up in tha terminalz right margin. I aint talkin' bout chicken n' gravy biatch.  A positizzle value sets the
paragraph width relatizzle ta tha left margin. I aint talkin' bout chicken n' gravy biatch.  A wack value set the
paragraph width relatizzle ta tha right margin.
.IP
Also peep $wrap.


.TP
.B reply_regexp
.nf
Type: regular expression
Default: \(lq^(re([\\[0\-9\\]+])*|aw):[ \\t]*\(rq
.fi
.IP
A regular expression used ta recognize reply lyrics when threading
and replying. Da default value correspondz ta tha Gangsta \(rqRe:\(rq and
the German \(rqAw:\(rq.


.TP
.B reply_self
.nf
Type: boolean
Default: no
.fi
.IP
If \fIunset\fP n' yo ass is replyin ta a message busted by you, Mutt will
assume dat you wanna reply ta tha recipientz of dat message rather
than ta yo ass.
.IP
Also peep tha \(lqalternates\(rq command.


.TP
.B reply_to
.nf
Type: quadoption
Default: ask\-yes
.fi
.IP
If \fIset\fP, when replyin ta a message, Mutt will use tha address listed
in tha Reply\-to: header as tha recipient of tha reply.  If \fIunset\fP,
it will use tha address up in tha From: header field instead. Y'all KNOW dat shit, muthafucka!  This
option is useful fo' readin a mailin list dat sets tha Reply\-To:
header field ta tha list address n' you wanna bust a private
message ta tha lyricist of a message.


.TP
.B resolve
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, tha cursor is ghon be automatically advanced ta tha next
(possibly undeleted) message whenever a cold-ass lil command dat modifies the
current message is executed.


.TP
.B reverse_alias
.nf
Type: boolean
Default: no
.fi
.IP
This variable controls whether or not Mutt will display tha \(lqpersonal\(rq
name from yo' aliases up in tha index menu if it findz a alias that
matches tha messagez sender n' shit.  For example, if you have tha following
alias:

.IP
.EX
alias juser abd30425@somewhere.net (Joe User)

.EE
.IP
and then you receive mail which gotz nuff tha followin header:

.IP
.EX
From: abd30425@somewhere.net

.EE
.IP
It would be displayed up in tha index menu as \(lqJoe User\(rq instead of
\(lqabd30425@somewhere.net.\(rq  This is useful when tha personz e\-mail
address aint human bumpin'.


.TP
.B reverse_name
.nf
Type: boolean
Default: no
.fi
.IP
It may sometimes arrive dat you receive mail ta a cold-ass lil certain machine,
move tha lyrics ta another machine, n' reply ta some tha lyrics
from there, so peek-a-boo, clear tha way, I be comin' thru fo'sho.  If dis variable is \fIset\fP, tha default \fIFrom:\fP line of
the reply lyrics is built rockin tha address where you received the
lyrics yo ass is replyin ta \fBif\fP dat address matches your
\(lqalternates\(rq.  If tha variable is \fIunset\fP, or tha address dat would be
used don't match yo' \(lqalternates\(rq, tha \fIFrom:\fP line will use
your address on tha current machine.
.IP
Also peep tha \(lqalternates\(rq command.


.TP
.B reverse_realname
.nf
Type: boolean
Default: yes
.fi
.IP
This variable fine\-tunes tha behavior of tha $reverse_name feature.
When it is \fIset\fP, mutt will use tha address from incomin lyrics as\-is,
possibly includin eventual real names.  When it is \fIunset\fP, mutt will
override any such real names wit tha settin of tha $realname variable.


.TP
.B rfc2047_parameters
.nf
Type: boolean
Default: no
.fi
.IP
When dis variable is \fIset\fP, Mutt will decode RFC2047\-encoded MIME
parameters. Yo ass wanna set dis variable when mutt suggests you
to save attachments ta filez named like:

.IP
.EX
=?iso\-8859\-1?Q?file=5F=E4=5F991116=2Ezip?=

.EE
.IP
When dis variable is \fIset\fP interactively, tha chizzle won't be
actizzle until you chizzle folders.
.IP
Note dat dis use of RFC2047z encodin is explicitly
prohibited by tha standard yo, but nevertheless encountered up in the
wild.
.IP
Also note dat settin dis parameta will \fInot\fP have tha effect
that mutt \fIgenerates\fP dis kind of encoding.  Instead, mutt will
unconditionally use tha encodin specified up in RFC2231.


.TP
.B save_address
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, mutt will take tha senderz full address when choosin a
default folda fo' savin a mail. If $save_name or $force_name
is \fIset\fP too, tha selection of tha Fcc folda is ghon be chizzled as well.


.TP
.B save_empty
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIunset\fP, mailboxes which contain no saved lyrics is ghon be removed
when closed (the exception is $spoolfile which is never removed).
If \fIset\fP, mailboxes is never removed.
.IP
\fBNote:\fP This only applies ta mbox n' MMDF folders, Mutt do not
delete MH n' Maildir directories.


.TP
.B save_history
.nf
Type: number
Default: 0
.fi
.IP
This variable controls tha size of tha history (per category) saved up in the
$history_file file.


.TP
.B save_name
.nf
Type: boolean
Default: no
.fi
.IP
This variable controls how tha fuck copiez of outgoin lyrics is saved.
When \fIset\fP, a cold-ass lil check is made ta peep if a mailbox specified by the
recipient address exists (this is done by searchin fo' a mailbox in
the $folda directory wit tha \fIusername\fP part of the
recipient address).  If tha mailbox exists, tha outgoin message will
be saved ta dat mailbox, otherwise tha message is saved ta the
$record mailbox.
.IP
Also peep tha $force_name variable.


.TP
.B score
.nf
Type: boolean
Default: yes
.fi
.IP
When dis variable is \fIunset\fP, scorin is turned off.  This can
be useful ta selectively disable scorin fo' certain foldaz when the
$score_threshold_delete variable n' related is used.


.TP
.B score_threshold_delete
.nf
Type: number
Default: \-1
.fi
.IP
Lyrics which done been assigned a score equal ta or lower than tha value
of dis variable is automatically marked fo' deletion by mutt.  Since
mutt scores is always pimped outa than or equal ta zero, tha default setting
of dis variable aint NEVER gonna mark a message fo' deletion.


.TP
.B score_threshold_flag
.nf
Type: number
Default: 9999
.fi
.IP
Lyrics which done been assigned a score pimped outa than or equal ta this
variablez value is automatically marked \(rqflagged\(rq.


.TP
.B score_threshold_read
.nf
Type: number
Default: \-1
.fi
.IP
Lyrics which done been assigned a score equal ta or lower than tha value
of dis variable is automatically marked as read by mutt.  Since
mutt scores is always pimped outa than or equal ta zero, tha default setting
of dis variable aint NEVER gonna mark a message read.


.TP
.B search_context
.nf
Type: number
Default: 0
.fi
.IP
For tha pager, dis variable specifies tha number of lines shown
before search thangs up in dis biatch. By default, search thangs up in dis biatch is ghon be top\-aligned.


.TP
.B send_charset
.nf
Type: string
Default: \(lqus\-ascii:iso\-8859\-1:utf\-8\(rq
.fi
.IP
A colon\-delimited list of characta sets fo' outgoin lyrics. Mutt will use the
first characta set tha fuck into which tha text can be converted exactly.
If yo' $charset aint \(lqiso\-8859\-1\(rq n' recipients may not
understand \(lqUTF\-8\(rq, it be advisable ta include up in tha list an
appropriate widely used standard characta set (such as
\(lqiso\-8859\-2\(rq, \(lqkoi8\-r\(rq or \(lqiso\-2022\-jp\(rq) either instead of or after
\(lqiso\-8859\-1\(rq.
.IP
In case tha text cannot be converted tha fuck into one of these exactly,
mutt uses $charset as a gangbangin' fallback.


.TP
.B sendmail
.nf
Type: path
Default: \(lq/usr/sbin/sendmail \-oem \-oi\(rq
.fi
.IP
Specifies tha program n' arguments used ta serve up mail busted by Mutt.
Mutt expects dat tha specified program interprets additional
arguments as recipient addresses.


.TP
.B sendmail_wait
.nf
Type: number
Default: 0
.fi
.IP
Specifies tha number of secondz ta wait fo' tha $sendmail process
to finish before givin up n' puttin delivery up in tha background.
.IP
Mutt interprets tha value of dis variable as bigs up:
.RS
.PD 0
.TP
>0 
number of secondz ta wait fo' sendmail ta finish before continuing
.TP
0  
wait forever fo' sendmail ta finish
.TP
<0 
always put sendmail up in tha background without waiting
.RE
.PD 1
.IP
Note dat if you specify a value other than 0, tha output of tha child
process is ghon be put up in a temporary file.  If there is some error, you
will be informed as ta where ta find tha output.


.TP
.B shell
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Command ta use when spawnin a subshell.  By default, tha userz login
shell from \fC/etc/passwd\fP is used.


.TP
.B sig_dashes
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP, a line containin \(lq\-\- \(rq (note tha trailin space) is ghon be banged before your
$signature.  It be \fBstrongly\fP recommended dat you not \fIunset\fP
this variable unless yo' signature gotz nuff just yo' name.  The
reason fo' dis is cuz nuff software packages use \(lq\-\- \\n\(rq to
detect yo' signature.  For example, Mutt has tha mobilitizzle ta highlight
the signature up in a gangbangin' finger-lickin' different color up in tha built\-in pager.


.TP
.B sig_on_top
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, tha signature is ghon be included before any quoted or forwarded
text.  It be \fBstrongly\fP recommended dat you do not set dis variable
unless you straight-up know what tha fuck yo ass is bustin, n' is prepared ta take
some heat from netiquette guardians.


.TP
.B signature
.nf
Type: path
Default: \(lq~/.signature\(rq
.fi
.IP
Specifies tha filename of yo' signature, which be appended ta all
outgoin lyrics.   If tha filename endz wit a pipe (\(lq|\(rq), it is
assumed dat filename be a gangbangin' finger-lickin' dirty-ass shell command n' input should be read from
its standard output.


.TP
.B simple_search
.nf
Type: string
Default: \(lq~f %s | ~s %s\(rq
.fi
.IP
Specifies how tha fuck Mutt should expand a simple search tha fuck into a real search
pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch.  A simple search is one dat do not contain any of tha \(lq~\(rq pattern
operators.  See \(lqpatterns\(rq fo' mo' shiznit on search patterns.
.IP
For example, if you simply type \(lqjoe\(rq at a search or limit prompt, Mutt
will automatically expand it ta tha value specified by dis variable by
replacin \(lq%s\(rq wit tha supplied string.
For tha default value, \(lqjoe\(rq would be expanded to: \(lq~f joe | ~s joe\(rq.


.TP
.B chill_time
.nf
Type: number
Default: 1
.fi
.IP
Specifies time, up in seconds, ta pause while displayin certain shiznital
lyrics, while movin from folda ta folda n' afta expunging
lyrics from tha current folda n' shit.  Da default is ta pause one second, so
a value of zero fo' dis option suppresses tha pause.


.TP
.B smart_wrap
.nf
Type: boolean
Default: yes
.fi
.IP
Controls tha display of lines longer than tha screen width up in the
internal pager n' shit. If \fIset\fP, long lines is wrapped at a word boundary.  If
\fIunset\fP, lines is simply wrapped all up in tha screen edge fo' realz. Also peep the
$markers variable.


.TP
.B smileys
.nf
Type: regular expression
Default: \(lq(>From )|(:[\-^]?[][)(><}{|/DP])\(rq
.fi
.IP
Da \fIpager\fP uses dis variable ta catch some common false
positivez of $quote_regexp, most notably smileys n' not consider
a line quoted text if it also matches $smileys. This mostly
happens all up in tha beginnin of a line.


.TP
.B smime_ask_cert_label
.nf
Type: boolean
Default: yes
.fi
.IP
This flag controls whether you wanna be axed ta enta a label
for a cold-ass lil certificate bout ta be added ta tha database or not. Well shiiiit, it is
\fIset\fP by default.
(S/MIME only)


.TP
.B smime_ca_location
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This variable gotz nuff tha name of either a gangbangin' finger-lickin' directory, or a gangbangin' file which
gotz nuff trusted certificates fo' use wit OpenSSL.
(S/MIME only)


.TP
.B smime_certificates
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Since fo' S/MIME there is no pubring/secrin as wit PGP, mutt has ta handle
storage n' retrieval of keys by itself. This is straight-up basic right
now, n' keys n' certificates is stored up in two different
directories, both named as tha hash\-value retrieved from
OpenSSL. There be a index file which gotz nuff mailbox\-address
keyid pairs, n' which can be manually edited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This option points to
the location of tha certificates.
(S/MIME only)


.TP
.B smime_decrypt_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This format strang specifies a cold-ass lil command which is used ta decrypt
\fCapplication/x\-pkcs7\-mime\fP attachments.
.IP
Da OpenSSL command formats have they own set of \fCprintf(3)\fP\-like sequences
similar ta PGP's:
.RS
.PD 0
.TP
%f 
Expandz ta tha name of a gangbangin' file containin a message.
.TP
%s 
Expandz ta tha name of a gangbangin' file containin tha signature part
           of a \fCmultipart/signed\fP attachment when verifyin dat shit.
.TP
%k 
Da key\-pair specified wit $smime_default_key
.TP
%c 
One or mo' certificate IDs.
.TP
%a 
Da algorithm used fo' encryption.
.TP
%C 
CA location:  Dependin on whether $smime_ca_location
           points ta a gangbangin' finger-lickin' directory or file, dis expandz to
           \(lq\-CApath $smime_ca_location\(rq or \(lq\-CAfile $smime_ca_location\(rq.
.RE
.PD 1
.IP
For examplez on how tha fuck ta configure these formats, peep tha \fCsmime.rc\fP in
the \fCsamples/\fP subdirectory which has been installed on yo' system
alongside tha documentation.
(S/MIME only)


.TP
.B smime_decrypt_use_default_key
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP (default) dis  drops some lyrics ta mutt ta use tha default key fo' decryption. I aint talkin' bout chicken n' gravy biatch. Otherwise,
if managin multiple certificate\-key\-pairs, mutt will try ta use tha mailbox\-address
to determine tha key ta use. Well shiiiit, it will ask you ta supply a key, if it can't find one.
(S/MIME only)


.TP
.B smime_default_key
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This is tha default key\-pair ta use fo' signing. This must be set ta the
keyid (the hash\-value dat OpenSSL generates) ta work properly
(S/MIME only)


.TP
.B smime_encrypt_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta create encrypted S/MIME lyrics.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_encrypt_with
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This sets tha algorithm dat should be used fo' encryption.
Valid chizzlez is \(lqdes\(rq, \(lqdes3\(rq, \(lqrc2\-40\(rq, \(lqrc2\-64\(rq, \(lqrc2\-128\(rq.
If \fIunset\fP, \(lq3des\(rq (TripleDES) is used.
(S/MIME only)


.TP
.B smime_get_cert_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta extract X509 certificates from a PKCS7 structure.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_get_cert_email_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta extract tha mail address(es) used fo' storing
X509 certificates, n' fo' verification purposes (to check whether the
certificate was issued fo' tha senderz mailbox).
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_get_signer_cert_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta extract only tha signers X509 certificate from a S/MIME
signature, so dat tha certificatez balla may git compared ta the
emailz \(lqFrom:\(rq field.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_import_cert_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta import a cold-ass lil certificate via smime_keys.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_is_default
.nf
Type: boolean
Default: no
.fi
.IP
Da default behavior of mutt is ta use PGP on all auto\-sign/encryption
operations. To override n' ta use OpenSSL instead dis must be \fIset\fP.
But fuck dat shiznit yo, tha word on tha street is dat dis has no effect while replying, since mutt will automatically
select tha same application dat was used ta sign/encrypt tha original
message.  (Note dat dis variable can be overridden by unsettin $crypt_autosmime.)
(S/MIME only)


.TP
.B smime_keys
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Since fo' S/MIME there is no pubring/secrin as wit PGP, mutt has ta handle
storage n' retrieval of keys/certs by itself. This is straight-up basic up in dis biatch,
and stores keys n' certificates up in two different directories, both
named as tha hash\-value retrieved from OpenSSL. There be a index file
which gotz nuff mailbox\-address keyid pair, n' which can be manually
edited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This option points ta tha location of tha private keys.
(S/MIME only)


.TP
.B smime_pk7out_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta extract PKCS7 structurez of S/MIME signatures,
in order ta extract tha hood X509 certificate(s).
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_sign_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta pimped S/MIME signaturez of type
\fCmultipart/signed\fP, which can be read by all mail clients.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_sign_opaque_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta pimped S/MIME signaturez of type
\fCapplication/x\-pkcs7\-signature\fP, which can only be handled by mail
clients supportin tha S/MIME extension.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_timeout
.nf
Type: number
Default: 300
.fi
.IP
Da number of secondz afta which a cold-ass lil cached passphrase will expire if
not used.
(S/MIME only)


.TP
.B smime_verify_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta verify S/MIME signaturez of type \fCmultipart/signed\fP.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smime_verify_opaque_command
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This command is used ta verify S/MIME signaturez of type
\fCapplication/x\-pkcs7\-mime\fP.
.IP
This be a gangbangin' format string, peep tha $smime_decrypt_command command for
possible \fCprintf(3)\fP\-like sequences.
(S/MIME only)


.TP
.B smtp_authenticators
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
This be a cold-ass lil colon\-delimited list of authentication methodz mutt may
attempt ta use ta log up in ta a SMTP server, up in tha order mutt should
try em.  Authentication methodz is any SASL mechanism, e.g.
\(lqdigest\-md5\(rq, \(lqgssapi\(rq or \(lqcram\-md5\(rq.
This option is case\-insensitive. If it is \(lqunset\(rq
(the default) mutt will try all available methods, up in order from
most\-secure ta least\-secure.
.IP
Example:

.IP
.EX
set smtp_authenticators=\(rqdigest\-md5:cram\-md5\(rq

.EE


.TP
.B smtp_pass
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Specifies tha password fo' yo' SMTP account.  If \fIunset\fP, Mutt will
prompt you fo' yo' password when you first bust mail via SMTP.
See $smtp_url ta configure mutt ta bust mail via SMTP.
.IP
\fBWarning\fP: you should only use dis option when yo ass is on a
fairly secure machine, cuz tha superuser can read yo' muttrc even
if yo ass is tha only one whoz ass can read tha file.


.TP
.B smtp_url
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Defines tha SMTP smarthost where busted lyrics should relayed for
delivery. This should take tha form of a SMTP URL, e.g.:

.IP
.EX
smtp[s]://[user[:pass]@]host[:port]

.EE
.IP
where \(lq[...]\(rq denotes a optionizzle part.
Settin dis variable overrides tha value of tha $sendmail
variable.


.TP
.B sort
.nf
Type: sort order
Default: date
.fi
.IP
Specifies how tha fuck ta sort lyrics up in tha \(lqindex\(rq menu fo'sho.  Valid joints
are:
.RS
.PD 0
.TP
\(hy date or date\-sent
.TP
\(hy date\-received
.TP
\(hy from
.TP
\(hy mailbox\-order (unsorted)
.TP
\(hy score
.TP
\(hy size
.TP
\(hy spam
.TP
\(hy subject
.TP
\(hy threads
.TP
\(hy to
.RE
.PD 1
.IP
Yo ass may optionally use tha \(lqreverse\-\(rq prefix ta specify reverse sorting
order (example: \(lq\fCset sort=reverse\-date\-sent\fP\(rq).


.TP
.B sort_alias
.nf
Type: sort order
Default: alias
.fi
.IP
Specifies how tha fuck tha entries up in tha \(lqalias\(rq menu is sorted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  The
followin is legal joints:
.RS
.PD 0
.TP
\(hy address (sort alphabetically by email address)
.TP
\(hy alias (sort alphabetically by alias name)
.TP
\(hy unsorted (leave up in order specified up in .muttrc)
.RE
.PD 1

.TP
.B sort_aux
.nf
Type: sort order
Default: date
.fi
.IP
When sortin by threads, dis variable controls how tha fuck threadz is sorted
in relation ta other threads, n' how tha fuck tha branchez of tha thread trees
are sorted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This can be set ta any value dat $sort can, except
\(lqthreads\(rq (in dat case, mutt will just use \(lqdate\-sent\(rq).  Yo ass can also
specify tha \(lqlast\-\(rq prefix up in addizzle ta tha \(lqreverse\-\(rq prefix yo, but \(lqlast\-\(rq
must come afta \(lqreverse\-\(rq.  Da \(lqlast\-\(rq prefix causes lyrics ta be
sorted against its siblings by which has tha last descendant, using
the rest of $sort_aux as a ordering.  For instance,

.IP
.EX
set sort_aux=last\-date\-received

.EE
.IP
would mean dat if a freshly smoked up message is received up in a
thread, dat thread becomes tha last one displayed (or tha first, if
you have \(lq\fCset sort=reverse\-threads\fP\(rq.)
.IP
Note: For reversed $sort
order $sort_aux is reversed again n' again n' again (which aint tha right thang ta do,
but kept ta not break any existin configuration setting).


.TP
.B sort_browser
.nf
Type: sort order
Default: alpha
.fi
.IP
Specifies how tha fuck ta sort entries up in tha file browser n' shit.  By default, the
entries is sorted alphabetically.  Valid joints:
.RS
.PD 0
.TP
\(hy alpha (alphabetically)
.TP
\(hy date
.TP
\(hy size
.TP
\(hy unsorted
.RE
.PD 1
.IP
Yo ass may optionally use tha \(lqreverse\-\(rq prefix ta specify reverse sorting
order (example: \(lq\fCset sort_browser=reverse\-date\fP\(rq).


.TP
.B sort_re
.nf
Type: boolean
Default: yes
.fi
.IP
This variable is only useful when sortin by threadz with
$strict_threadz \fIunset\fP.  In dat case, it chizzlez tha heuristic
mutt uses ta thread lyrics by subject.  With $sort_re \fIset\fP, mutt will
only attach a message as tha lil pimp of another message by subject if
the subject of tha lil pimp message starts wit a substrin matchin the
settin of $reply_regexp.  With $sort_re \fIunset\fP, mutt will attach
the message whether or not dis is tha case, as long as the
non\-$reply_regexp partz of both lyrics is identical.


.TP
.B spam_separator
.nf
Type: string
Default: \(lq,\(rq
.fi
.IP
This variable controls what tha fuck happens when multiple spam headers
are matched: if \fIunset\fP, each successive header will overwrite any
previous matches value fo' tha spam label. If \fIset\fP, each successive
match will append ta tha previous, rockin dis variablez value as a
separator.


.TP
.B spoolfile
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
If yo' spool mailbox is up in a non\-default place where Mutt cannot find
it, you can specify its location wit dis variable.  Mutt will
initially set dis variable ta tha value of tha environment
variable \fC$MAIL\fP or \fC$MAILDIR\fP if either is defined.


.TP
.B ssl_ca_certificates_file
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This variable specifies a gangbangin' file containin trusted CA certificates.
Any server certificate dat is signed wit one of these CA
certificates be also automatically accepted.
.IP
Example:

.IP
.EX
set ssl_ca_certificates_file=/etc/ssl/certs/ca\-certificates.crt

.EE


.TP
.B ssl_client_cert
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Da file containin a cold-ass lil client certificate n' its associated private
key.


.TP
.B ssl_force_tls
.nf
Type: boolean
Default: no
.fi
.IP
If dis variable is \fIset\fP, Mutt will require dat all connections
to remote servers be encrypted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Furthermore it will attempt to
negotiate TLS even if tha server do not advertise tha capability,
since it would otherwise gotta abort tha connection anyway. This
option supersedes $ssl_starttls.


.TP
.B ssl_min_dh_prime_bits
.nf
Type: number
Default: 0
.fi
.IP
This variable specifies tha minimum aaight prime size (in bits)
for use up in any Diffie\-Hellman key exchange fo' realz. A value of 0 will use
the default from tha GNUTLS library.


.TP
.B ssl_starttls
.nf
Type: quadoption
Default: yes
.fi
.IP
If \fIset\fP (the default), mutt will attempt ta use \fCSTARTTLS\fP on servers
advertisin tha capability. When \fIunset\fP, mutt aint gonna attempt to
use \fCSTARTTLS\fP regardless of tha serverz capabilities.


.TP
.B ssl_use_sslv2
.nf
Type: boolean
Default: no
.fi
.IP
This variable specifies whether ta attempt ta use SSLv2 up in the
SSL authentication process.


.TP
.B ssl_use_sslv3
.nf
Type: boolean
Default: yes
.fi
.IP
This variable specifies whether ta attempt ta use SSLv3 up in the
SSL authentication process.


.TP
.B ssl_use_tlsv1
.nf
Type: boolean
Default: yes
.fi
.IP
This variable specifies whether ta attempt ta use TLSv1.0 up in the
SSL authentication process.


.TP
.B ssl_use_tlsv1_1
.nf
Type: boolean
Default: yes
.fi
.IP
This variable specifies whether ta attempt ta use TLSv1.1 up in the
SSL authentication process.


.TP
.B ssl_use_tlsv1_2
.nf
Type: boolean
Default: yes
.fi
.IP
This variable specifies whether ta attempt ta use TLSv1.2 up in the
SSL authentication process.


.TP
.B ssl_usesystemcerts
.nf
Type: boolean
Default: yes
.fi
.IP
If set ta \fIyes\fP, mutt will use CA certificates up in the
system\-wide certificate store when checkin if a server certificate
is signed by a trusted CA.


.TP
.B ssl_verify_dates
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP (the default), mutt aint gonna automatically accept a server
certificate dat is either not yet valid or already expired. Y'all KNOW dat shit, muthafucka! Yo ass should
only unset dis fo' particular known hosts, rockin the
\fC<account-hook>\fP function.


.TP
.B ssl_verify_host
.nf
Type: boolean
Default: yes
.fi
.IP
If \fIset\fP (the default), mutt aint gonna automatically accept a server
certificate whose host name do not match tha host used up in yo' folder
URL. Yo ass should only unset dis fo' particular known hosts, using
the \fC<account-hook>\fP function.


.TP
.B status_chars
.nf
Type: string
Default: \(lq\-*%A\(rq
.fi
.IP
Controls tha charactas used by tha \(lq%r\(rq indicator in
$status_format. Da first characta is used when tha mailbox is
unchanged. Y'all KNOW dat shit, muthafucka! Da second is used when tha mailbox has been chizzled, and
it need ta be resynchronized. Y'all KNOW dat shit, muthafucka! Da third is used if tha mailbox is in
read\-only mode, or if tha mailbox aint gonna be freestyled when exiting
that mailbox (Yo ass can toggle whether ta write chizzlez ta a mailbox
with tha \fC<toggle\-write>\fP operation, bound by default ta \(lq%\(rq). Da fourth
is used ta indicate dat tha current folda has been opened up in attach\-
message mode (Certain operations like composin a freshly smoked up mail, replying,
forwarding, etc. is not permitted up in dis mode).


.TP
.B status_format
.nf
Type: string
Default: \(lq\-%r\-Mutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]\-\-\-(%s/%S)\-%>\-(%P)\-\-\-\(rq
.fi
.IP
Controls tha format of tha status line displayed up in tha \(lqindex\(rq
menu fo'sho.  This strang is similar ta $index_format yo, but has its own
set of \fCprintf(3)\fP\-like sequences:
.RS
.PD 0
.TP
%b  
number of mailboxes wit freshly smoked up mail *
.TP
%d  
number of deleted lyrics *
.TP
%f  
the full pathname of tha current mailbox
.TP
%F  
number of flagged lyrics *
.TP
%h  
local hostname
.TP
%l  
size (in bytes) of tha current mailbox *
.TP
%L  
size (in bytes) of tha lyrics shown
(i.e., which match tha current limit) *
.TP
%m  
the number of lyrics up in tha mailbox *
.TP
%M  
the number of lyrics shown (i.e., which match tha current limit) *
.TP
%n  
number of freshly smoked up lyrics up in tha mailbox *
.TP
%o  
number of oldschool unread lyrics *
.TP
%p  
number of postponed lyrics *
.TP
%P  
percentage of tha way all up in tha index
.TP
%r  
modified/read\-only/won't\-write/attach\-message indicator,
accordin ta $status_chars
.TP
%s  
current sortin mode ($sort)
.TP
%S  
current aux sortin method ($sort_aux)
.TP
%t  
number of tagged lyrics *
.TP
%u  
number of unread lyrics *
.TP
%v  
Mutt version string
.TP
%V  
currently actizzle limit pattern, if any *
.TP
%>X 
right justify tha rest of tha strang n' pad wit \(lqX\(rq
.TP
%|X 
pad ta tha end of tha line wit \(lqX\(rq
.TP
%*X 
soft\-fill wit characta \(lqX\(rq as pad
.RE
.PD 1
.IP
For a explanation of \(lqsoft\-fill\(rq, peep tha $index_format documentation.
.IP
* = can be optionally printed if nonzero
.IP
Some of tha above sequences can be used ta optionally print a string
if they value is nonzero.  For example, you may only wanna peep the
number of flagged lyrics if such lyrics exist, since zero is not
particularly meaningful naaahhmean?  To optionally print a strang based upon one
of tha above sequences, tha followin construct is used:
.IP
\fC%?<sequence_char>?<optional_string>?\fP
.IP
where \fIsequence_char\fP be a cold-ass lil characta from tha table above, and
\fIoptional_string\fP is tha strang you wanna printed if
\fIsequence_char\fP is nonzero.  \fIoptional_string\fP \fBmay\fP contain
other sequences as well as aiiight text yo, but you may \fBnot\fP nest
optionizzle strings.
.IP
Here be a example illustratin how tha fuck ta optionally print tha number of
new lyrics up in a mailbox:
.IP
\fC%?n?%n freshly smoked up lyrics.?\fP
.IP
Yo ass can also switch between two strings rockin tha followin construct:
.IP
\fC%?<sequence_char>?<if_string>&<else_string>?\fP
.IP
If tha value of \fIsequence_char\fP is non\-zero, \fIif_string\fP will
be expanded, otherwise \fIelse_string\fP is ghon be expanded.
.IP
Yo ass can force tha result of any \fCprintf(3)\fP\-like sequence ta be lowercase
by prefixin tha sequence characta wit a underscore (\(lq_\(rq) sign.
For example, if you wanna display tha local hostname up in lowercase,
you would use: \(lq\fC%_h\fP\(rq.
.IP
If you prefix tha sequence characta wit a cold-ass lil colon (\(lq:\(rq) character, mutt
will replace any dots up in tha expansion by underscores. This might be helpful
with IMAP foldaz dat don't like dots up in folda names.


.TP
.B status_on_top
.nf
Type: boolean
Default: no
.fi
.IP
Settin dis variable causes tha \(lqstatus bar\(rq ta be displayed on
the first line of tha screen rather than near tha bottom. If $help
is \fIset\fP, too it'll be placed all up in tha bottom.


.TP
.B strict_threads
.nf
Type: boolean
Default: no
.fi
.IP
If \fIset\fP, threadin will only make use of tha \(lqIn\-Reply\-To\(rq and
\(lqReferences:\(rq fieldz when you $sort by message threads.  By
default, lyrics wit tha same subject is grouped together in
\(lqpseudo threads.\(rq. This may not always be desirable, like fuckin up in a
personal mailbox where you might have nuff muthafuckin unrelated lyrics with
the subjects like \(lqhi\(rq which will git grouped together n' shit. Right back up in yo muthafuckin ass. See also
$sort_re fo' a less drastic way of controllin this
behavior.


.TP
.B suspend
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIunset\fP, mutt won't stop when tha user presses tha terminal's
\fIsusp\fP key, probably \(lq^Z\(rq. This is useful if you run mutt
inside a xterm rockin a cold-ass lil command like \(lq\fCxterm \-e mutt\fP\(rq.


.TP
.B text_flowed
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will generate \(lqformat=flowed\(rq bodies wit a cold-ass lil content type
of \(lq\fCtext/plain; format=flowed\fP\(rq.
This format is easier ta handle fo' some mailin software, n' generally
just be lookin like ordinary text.  To straight-up make use of dis format's
features, you gonna need support up in yo' editor.
.IP
Note dat $indent_strin is ignored when dis option is \fIset\fP.


.TP
.B thorough_search
.nf
Type: boolean
Default: yes
.fi
.IP
Affects tha \fC~b\fP n' \fC~h\fP search operations busted lyrics bout in
section \(lqpatterns\(rq.  If \fIset\fP, tha headaz n' body/attachments of
lyrics ta be searched is decoded before searching. If \fIunset\fP,
lyrics is searched as they step tha fuck up in tha folder.
.IP
Users searchin attachments or fo' non\-ASCII charactas should \fIset\fP
this value cuz decodin also includes MIME parsing/decodin n' possible
characta set conversions. Otherwise mutt will attempt ta match against the
raw message received (for example quoted\-printable encoded or wit encoded
headers) which may lead ta incorrect search thangs up in dis biatch.


.TP
.B thread_received
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt uses tha date received rather than tha date sent
to thread lyrics by subject.


.TP
.B tilde
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, tha internal\-pager will pad blank lines ta tha bottom of the
screen wit a tilde (\(lq~\(rq).


.TP
.B time_inc
.nf
Type: number
Default: 0
.fi
.IP
Along wit $read_inc, $write_inc, n' $net_inc, this
variable controls tha frequency wit which progress thugged-out shiznit are
displayed. Y'all KNOW dat shit, muthafucka! Well shiiiit, it suppresses thugged-out shiznit less than $time_inc milliseconds
apart. This can improve throughput on systems wit slow terminals,
or when hustlin mutt on a remote system.
.IP
Also peep tha \(lqtuning\(rq section of tha manual fo' performizzle considerations.


.TP
.B timeout
.nf
Type: number
Default: 600
.fi
.IP
When Mutt is waitin fo' user input either idlin up in menus or
in a interactizzle prompt, Mutt would block until input is
present. Dependin on tha context, dis would prevent certain
operations from working, like checkin fo' freshly smoked up mail or keeping
an IMAP connection kickin it.
.IP
This variable controls how tha fuck nuff secondz Mutt will at most wait
until it aborts waitin fo' input, performs these operations and
continues ta wait fo' input.
.IP
A value of zero or less will cause Mutt ta never time out.


.TP
.B tmpdir
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
This variable allows you ta specify where Mutt will place its
temporary filez needed fo' displayin n' composin lyrics.  If
this variable aint set, tha environment variable \fC$TMPDIR\fP is
used. Y'all KNOW dat shit, muthafucka!  If \fC$TMPDIR\fP aint set then \(lq\fC/tmp\fP\(rq is used.


.TP
.B to_chars
.nf
Type: string
Default: \(lq +TCFL\(rq
.fi
.IP
Controls tha characta used ta indicate mail addressed ta yo thugged-out ass.  The
first characta is tha one used when tha mail is \fInot\fP addressed ta your
address.  Da second is used when yo ass is tha only
recipient of tha message.  Da third is when yo' address
appears up in tha \(lqTo:\(rq header field yo, but yo ass is not tha only recipient of
the message.  Da fourth characta is used when your
address is specified up in tha \(lqCc:\(rq header field yo, but yo ass is not tha only
recipient.  Da fifth characta is used ta indicate mail dat was sent
by \fIyou\fP.  Da sixth characta is used ta indicate when a mail
was busted ta a mailing\-list you subscribe to.


.TP
.B tunnel
.nf
Type: string
Default: \(lq\(rq
.fi
.IP
Settin dis variable will cause mutt ta open a pipe ta a cold-ass lil command
instead of a raw socket. Yo ass may be able ta use dis ta set up
preauthenticated connections ta yo' IMAP/POP3/SMTP server n' shit. Example:

.IP
.EX
set tunnel=\(rqssh \-q mailhost.net /usr/local/libexec/imapd\(rq

.EE
.IP
Note: For dis example ta work you must be able ta log up in ta tha remote
machine without havin ta enta a password.
.IP
When set, Mutt uses tha tunnel fo' all remote connections.
Please peep \(lqaccount-hook\(rq up in tha manual fo' how tha fuck ta use different
tunnel commandz per connection.


.TP
.B uncollapse_jump
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, Mutt will jump ta tha next unread message, if any,
when tha current thread is \fIun\fPcollapsed.


.TP
.B use_8bitmime
.nf
Type: boolean
Default: no
.fi
.IP
\fBWarning:\fP do not set dis variable unless yo ass is rockin a version
of sendmail which supports tha \fC\-B8BITMIME\fP flag (like fuckin sendmail
8.8.x) or you may not be able ta bust mail.
.IP
When \fIset\fP, Mutt will invoke $sendmail wit tha \fC\-B8BITMIME\fP
flag when bustin  8\-bit lyrics ta enable ESMTP negotiation.


.TP
.B use_domain
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will qualify all local addresses (ones without the
\(lq@host\(rq portion) wit tha value of $hostname.  If \fIunset\fP, no
addresses is ghon be qualified.


.TP
.B use_envelope_from
.nf
Type: boolean
Default: no
.fi
.IP
When \fIset\fP, mutt will set tha \fIenvelope\fP sender of tha message.
If $envelope_from_address is \fIset\fP, it is ghon be used as tha sender
address. If \fIunset\fP, mutt will attempt ta derive tha sender from the
\(lqFrom:\(rq header.
.IP
Note dat dis shiznit is passed ta sendmail command rockin the
\fC\-f\fP command line switch. Therefore settin dis option aint useful
if tha $sendmail variable already gotz nuff \fC\-f\fP or if the
executable pointed ta by $sendmail don't support tha \fC\-f\fP switch.


.TP
.B use_from
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will generate tha \(lqFrom:\(rq header field when
sendin lyrics.  If \fIunset\fP, no \(lqFrom:\(rq header field will be
generated unless tha user explicitly sets one rockin tha \(lqmy_hdr\(rq
command.


.TP
.B use_idn
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will show you internationistic domain names decoded.
Note: Yo ass can use IDNs fo' addresses even if dis is \fIunset\fP.
This variable only affects decoding.


.TP
.B use_ipv6
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, Mutt will look fo' IPv6 addressez of hosts it tries to
contact.  If dis option is \fIunset\fP, Mutt will restrict itself ta IPv4 addresses.
Normally, tha default should work.


.TP
.B user_agent
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt will add a \(lqUser\-Agent:\(rq header ta outgoing
lyrics, indicatin which version of mutt was used fo' composing
them.


.TP
.B visual
.nf
Type: path
Default: \(lq\(rq
.fi
.IP
Specifies tha visual editor ta invoke when tha \(lq\fC~v\fP\(rq command is
given up in tha built\-in editor.


.TP
.B wait_key
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether Mutt will ask you ta press a key afta a external command
has been invoked by these functions: \fC<shell\-escape>\fP,
\fC<pipe\-message>\fP, \fC<pipe\-entry>\fP, \fC<print\-message>\fP,
and \fC<print\-entry>\fP commands.
.IP
It be also used when viewin attachments wit \(lqauto_view\(rq, provided
that tha correspondin mailcap entry has a \fIneedsterminal\fP flag,
and tha external program is interactive.
.IP
When \fIset\fP, Mutt will always ask fo' a key. When \fIunset\fP, Mutt will wait
for a key only if tha external command returned a non\-zero status.


.TP
.B weed
.nf
Type: boolean
Default: yes
.fi
.IP
When \fIset\fP, mutt will chronic headaz when displaying, forwarding,
printing, or replyin ta lyrics.


.TP
.B wrap
.nf
Type: number
Default: 0
.fi
.IP
When set ta a positizzle value, mutt will wrap text at $wrap characters.
When set ta a wack value, mutt will wrap text so dat there be $wrap
charactaz of empty space on tha right side of tha terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Right back up in yo muthafuckin ass. Settin it
to zero make mutt wrap all up in tha terminal width.
.IP
Also peep $reflow_wrap.


.TP
.B wrap_headers
.nf
Type: number
Default: 78
.fi
.IP
This option specifies tha number of charactas ta use fo' wrapping
an outgoin messagez headaz fo' realz. Allowed joints is between 78 n' 998
inclusive.
.IP
\fBNote:\fP This option probably shouldn't be chizzled. Y'all KNOW dat shit, muthafucka! RFC5233
recommendz a line length of 78 (the default), so \fBplease only chizzle
this settin when you know what tha fuck you bustin\fP.


.TP
.B wrap_search
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether searches wrap round tha end.
.IP
When \fIset\fP, searches will wrap round tha straight-up original gangsta (or last) item. When
\fIunset\fP, incremenstrual searches aint gonna wrap.


.TP
.B wrapmargin
.nf
Type: number
Default: 0
.fi
.IP
(DEPRECATED) Equivalent ta settin $wrap wit a wack value.


.TP
.B write_bcc
.nf
Type: boolean
Default: yes
.fi
.IP
Controls whether mutt writes up tha \(lqBcc:\(rq header when preparing
lyrics ta be sent.  Exim playas may wish ta unset all dis bullshit. If mutt
is set ta serve up directly via SMTP (see $smtp_url), this
option do nothing: mutt aint NEVER gonna write up tha \(lqBcc:\(rq header
in dis case.


.TP
.B write_inc
.nf
Type: number
Default: 10
.fi
.IP
When freestylin a mailbox, a message is ghon be printed every
$write_inc lyrics ta indicate progress.  If set ta 0, only a
single message is ghon be displayed before freestylin a mailbox.
.IP
Also peep tha $read_inc, $net_inc n' $time_inc variablez n' the
\(lqtuning\(rq section of tha manual fo' performizzle considerations.


.\" -*-nroff-*-
.SH SEE ALSO
.PP
.BR iconv (1),
.BR iconv (3),
.BR mailcap (5),
.BR maildir (5),
.BR mbox (5),
.BR mutt (1),
.BR printf (3),
.BR regex (7),
.BR strftime (3)
.PP
Da Mutt Manual
.PP
Da Mutt home page: http://www.mutt.org/
.SH AUTHOR
.PP
Mike Elkins, n' others.  Use <mutt-dev@mutt.org> ta contact
the pimpers.
