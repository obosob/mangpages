.\" Copyright (c) 1980, 1989, 1991 Da Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fstab.5	6.5 (Berkeley) 5/10/91
.\"
.\" Modified Sat Mar  6 20:45:03 1993, faith@cs.unc.edu, fo' Linux
.\" Sat Oct  9 10:07:10 1993: converted ta playa format by faith@cs.unc.edu
.\" Sat Nov 20 20:47:38 1993: hpfs documentation added
.\" Sat Nov 27 20:23:32 1993: Updated authorshizzle shiznit
.\" Wed Jul 26 00:00:00 1995: Updated some nfs stuff, joey@infodrom.north.de
.\" Tue Apr  2 00:38:28 1996: added info bout "noauto", "user", etc.
.\" Tue Jun 15 20:02:18 1999: added LABEL n' UUID
.\" Sat Jul 14 2001: Mike K. Johnston <johnsonm@redhat.com> added -O
.\"
.TH FSTAB 5 "August 2010" "util-linux" "File Formats"
.SH NAME
fstab \- static shiznit bout tha filesystems
.SH SYNOPSIS
.B /etc/fstab
.SH DESCRIPTION
Da file
.B fstab
gotz nuff descriptizzle shiznit bout tha various file systems.
.B fstab
is only read by programs, n' not written; it is tha duty of tha system
administrator ta properly create n' maintain dis file.  Each filesystem
is busted lyrics bout on a separate line; fieldz on each line is separated by tabs or
spaces.  Lines startin wit '#' is comments, blank lines is ignored. Y'all KNOW dat shit, muthafucka! The
order of recordz in
.B fstab
is blingin cuz
.BR fsck (8),
.BR mount (8),
and
.BR umount (8)
sequentially iterate through
.B fstab
fuckin wit they thang.

.B Da first field
.RI ( fs_spec ).
.RS
This field raps bout tha block special thang or
remote filesystem ta be mounted.
.LP
For ordinary mounts it will hold (a link to) a funky-ass block special
device node (as pimped by
.BR mknod (8))
for tha thang ta be mounted, like `/dev/cdrom' or `/dev/sdb7'.
For NFS mounts one gonna git <host>:<dir>, e.g., `knuth.aeb.nl:/'.
For procfs, use `proc'.
.LP
Instead of givin tha thang explicitly, one may indicate
the filesystem dat is ta be mounted by its UUID or
LABEL (cf.
.BR e2label (8)
or
.BR xfs_admin (8)),
writin LABEL=<label> or UUID=<uuid>,
e.g., `LABEL=Boot' or `UUID=3e6be9de\%-8139\%-11d1\%-9106\%-a43f08d823a6'.

It aint nuthin but also possible ta use PARTUUID= n' PARTLABEL=. These partitions identifiers
are supported fo' example fo' GUID Partizzle Table (GPT).

See
.BR mount (8),
.BR blkid (8)
or
.BR lsblk (8)
for mo' details bout devices identifiers.

.LP
Note that
.BR mount (8)
uses UUIDs as strings. Da strang representation of tha UUID should be based on
lower case characters.
.RE

.B Da second field
.RI ( fs_file ).
.RS
This field raps bout tha mount point fo' tha filesystem.  For swap partitions, this
field should be specified as `none'. If tha name of tha mount point
gotz nuff spaces these can be escaped as `\\040'.
.RE

.B Da third field
.RI ( fs_vfstype ).
.RS
This field raps bout tha type of tha filesystem.  Linux supports lots
of filesystem types, such as
.IR adfs ,
.IR affs ,
.IR autofs ,
.IR coda ,
.IR coherent ,
.IR cramfs ,
.IR devpts ,
.IR efs ,
.IR ext2 ,
.IR ext3 ,
.IR hfs ,
.IR hpfs ,
.IR iso9660 ,
.IR jfs ,
.IR minix ,
.IR msdos ,
.IR ncpfs ,
.IR nfs ,
.IR ntfs ,
.IR proc ,
.IR qnx4 ,
.IR reiserfs ,
.IR romfs ,
.IR smbfs ,
.IR sysv ,
.IR tmpfs ,
.IR udf ,
.IR ufs ,
.IR umsdos ,
.IR vfat ,
.IR xenix ,
.IR xfs ,
and possibly others. For mo' details, see
.BR mount (8).

For tha filesystems currently supported by tha hustlin kernel, see
.IR /proc/filesystems .

An entry
.I swap
denotes a gangbangin' file or partizzle ta be used
for swapping, cf.\&
.BR swapon (8).
An entry
.I none
is useful fo' bind or move mounts.

.BR mount (8)
and
.BR umount (8)
support filesystem
.IR subtypes .
Da subtype is defined by '.subtype' suffix.  For
example 'fuse.sshfs'. It aint nuthin but recommended ta use subtype notation rather than add
any prefix ta tha straight-up original gangsta fstab field (for example 'sshfs#example.com' is
deprecated).
.RE

.B Da fourth field
.RI ( fs_mntops ).
.RS
This field raps bout tha mount options associated wit tha filesystem.

It be formatted as a cold-ass lil comma separated list of options.  It gotz nuff at least
the type of mount plus any additionizzle options appropriate ta tha filesystem
type. For documentation on tha available mount options, see
.BR mount (8).
For documentation on tha available swap options, see
.BR swapon (8).

Basic file system independent options are:
.TP
.B defaults
use default options: rw, suid, dev, exec, auto, nouser, n' async.
.TP
.B noauto
do not mount when "mount -a" is given (e.g., at boot time)
.TP
.B user
allow a user ta mount
.TP
.B baller
allow thang balla ta mount
.TP
.B comment
or
.B x-<name>
for use by fstab-maintainin programs
.TP
.B nofail
do not report errors fo' dis thang if it do not exist.
.RE

.B Da fifth field
.RI ( fs_freq ).
.RS
This field is used fo' these filesystems by the
.BR dump (8)
command ta determine which filesystems need ta be dumped. Y'all KNOW dat shit, muthafucka!  If tha fifth
field aint present, a value of zero is returned and
.B dump
will assume dat tha filesystem do not need ta be dumped.
.RE

.B Da sixth field
.RI ( fs_passno ).
.RS
This field is used by the
.BR fsck (8)
program ta determine tha order up in which filesystem checks is done at
reboot time.  Da root filesystem should be specified wit a
.I fs_passno
of 1, n' other filesystems should have a
.I fs_passno
of 2.  Filesystems within a thugged-out drive is ghon be checked sequentially yo, but
filesystems on different drives is ghon be checked all up in tha same time ta utilize
parallelizzle available up in tha hardware.  If tha sixth field aint present
or zero, a value of zero is returned and
.B fsck
will assume dat tha filesystem do not need ta be checked.
.RE

.SH NOTES
Da proper way ta read recordz from
.B fstab
is ta use tha routines
.BR getmntent (3)
or
.BR libmount .

Da keyword
.B ignore
as filesystem type (3rd field) aint mo' supported by tha pure
libmount based mount utilitizzle (since util-linux v2.22).

.SH FILES
.IR /etc/fstab ,
.I <fstab.h>
.SH "SEE ALSO"
.BR findmnt (8),
.BR mount (8),
.BR swapon (8),
.BR fs (5),
.BR getmntent (3)
.SH HISTORY
Da ancestor of this
.B fstab
file format rocked up in 4.0BSD.
.\" But without comment convention, n' options n' vfs_type.
.\" Instead there was a type rw/ro/rq/sw/xx, where xx is tha present 'ignore'.
.SH AVAILABILITY
This playa page is part of tha util-linux package n' be available from
ftp://ftp.kernel.org/pub/linux/utils/util-linux/.
