.lf 1 stdin
.TH LDAP.CONF 5 "2014/01/26" "OpenLDAP 2.4.39"
.\" $OpenLDAP$
.\" Copyright 1998-2014 Da OpenLDAP Foundation All Rights Reserved.
.\" Copyin restrictions apply.  See COPYRIGHT/LICENSE.
.SH NAME
ldap.conf, .ldaprc \- LDAP configuration file/environment variables
.SH SYNOPSIS
/etc/openldap/ldap.conf, ldaprc, .ldaprc, $LDAP<option-name>
.SH DESCRIPTION
If tha environment variable \fBLDAPNOINIT\fP is defined, all
defaultin is disabled.
.LP
The
.I ldap.conf
configuration file is used ta set system-wide defaults ta be applied when
running
.I ldap
clients.
.LP
Users may create a optionizzle configuration file,
.I ldaprc
or
.IR .ldaprc ,
in they home directory which is ghon be used ta override tha system-wide
defaults file.
Da file
.I ldaprc
in tha current hustlin directory be also used.
.LP
.LP
Additionizzle configuration filez can be specified using
the \fBLDAPCONF\fP n' \fBLDAPRC\fP environment variables.
\fBLDAPCONF\fP may be set ta tha path of a cold-ass lil configuration file.  This
path can be absolute or relatizzle ta tha current hustlin directory.
Da \fBLDAPRC\fP, if defined, should be tha basename of a gangbangin' file
in tha current hustlin directory or up in tha userz home directory.
.LP
Environmenstrual variablez may also be used ta augment tha file based defaults.
Da name of tha variable is tha option name wit a added prefix of \fBLDAP\fP.
For example, ta define \fBBASE\fP via tha environment, set tha variable
\fBLDAPBASE\fP ta tha desired value.
.LP
Some options is user-only.  Such options is ignored if present
in the
.I ldap.conf
(or file specified by
.BR LDAPCONF ).
.LP
Thus tha followin filez n' variablez is read, up in order:
.nf
    variable     $LDAPNOINIT, n' if dat aint set:
    system file  /etc/openldap/ldap.conf,
    user filez   $HOME/ldaprc,  $HOME/.ldaprc,  ./ldaprc,
    system file  $LDAPCONF,
    user filez   $HOME/$LDAPRC, $HOME/.$LDAPRC, ./$LDAPRC,
    variablez    $LDAP<uppercase option name>.
.fi
Settings late up in tha list override earlier ones.
.SH SYNTAX
Da configuration options is case-insensitive;
their value, on a cold-ass lil case by case basis, may be case-sensitive.
.LP
Blank lines is ignored.
.br
Lines beginnin wit a hash mark (`#') is comments, n' ignored.
.LP
Valid lines is made of a optionz name (a sequence of non-blanks,
conventionally freestyled up in uppercase, although not required), 
followed by a value.
Da value starts wit tha straight-up original gangsta non-blank characta afta 
the optionz name, n' terminates all up in tha end of tha line, 
or all up in tha last sequence of blanks before tha end of tha line.
Da tokenization of tha value, if any, is delegated ta tha handlez(s)
for dat option, if any.  Quotin joints dat contain blanks 
may be incorrect, as tha quotes would become part of tha value.
For example,

.nf
	# Wrong - erroneous quotes:
	URI     "ldap:// ldaps://"

	# Right - space-separated list of URIs, without quotes:
	URI     ldap:// ldaps://

	# Right - DN syntax needz quotin fo' Example, Inc:
	BASE    ou=IT staff,o="Example, Inc",c=US
	# or:
	BASE    ou=IT staff,o=Example2C Inc,c=US

	# Wrong - comment on same line as option:
	DEREF   never           # Never follow aliases
.fi
.LP
A line cannot be longer than LINE_MAX, which should be mo' than 2000 bytes
on all platforms.
There is no mechanizzle ta split a long-ass line on multiple lines, either for
beautification or ta overcome tha above limit.
.SH OPTIONS
Da different configuration options are:
.TP
.B URI <ldap[si]://[name[:port]] ...>
Specifies tha URI(s) of a LDAP server(s) ta which the
.I LDAP 
library should connect.  Da URI scheme may be any of
.BR ldap ,
.B ldaps 
or
.BR ldapi ,
which refer ta LDAP over TCP, LDAP over SSL (TLS) n' LDAP
over IPC (UNIX domain sockets), respectively.
Each serverz name can be specified as a
domain-style name or a IP address literal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Optionally, the
serverz name can followed by a ':' n' tha port number tha LDAP
server is listenin on. I aint talkin' bout chicken n' gravy biatch.  If no port number is provided, tha default
port fo' tha scheme is used (389 fo' ldap://, 636 fo' ldaps://).
For LDAP over IPC,
.B name 
is tha name of tha socket, n' no
.B port
is required, nor allowed; note dat directory separators must be 
URL-encoded, like any other charactas dat is special ta URLs; 
so tha socket

	/usr/local/var/ldapi

must be specified as

	ldapi://%2Fusr%2Flocal%2Fvar%2Fldapi

A space separated list of URIs may be provided.
.TP
.B BASE <base>
Specifies tha default base DN ta use when struttin ldap operations.
Da base must be specified as a Distinguished Name up in LDAP format.
.TP
.B BINDDN <dn>
Specifies tha default bind DN ta use when struttin ldap operations.
Da bind DN must be specified as a Distinguished Name up in LDAP format.
.B This be a user-only option.
.TP
.B DEREF <when>
Specifies how tha fuck alias dereferencin is done when struttin a search. The
.B <when>
can be specified as one of tha followin keywords:
.RS
.TP
.B never
Aliases is never dereferenced. Y'all KNOW dat shit, muthafucka! This is tha default.
.TP
.B searching
Aliases is dereferenced up in subordinatez of tha base object yo, but
not up in locatin tha base object of tha search.
.TP
.B finding
Aliases is only dereferenced when locatin tha base object of tha search.
.TP
.B always
Aliases is dereferenced both up in searchin n' up in locatin tha base object
of tha search.
.RE
.TP
.TP
.B HOST <name[:port] ...>
Specifies tha name(s) of a LDAP server(s) ta which the
.I LDAP 
library should connect.  Each serverz name can be specified as a
domain-style name or a IP address n' optionally followed by a ':' and
the port number tha ldap server is listenin on. I aint talkin' bout chicken n' gravy biatch.  A space separated
list of hosts may be provided.
.B HOST
is deprecated up in favor of
.BR URI .
.TP
.B NETWORK_TIMEOUT <integer>
Specifies tha timeout (in seconds) afta which tha poll(2)/select(2)
followin a cold-ass lil connect(2) returns up in case of no activity.
.TP
.B PORT <port>
Specifies tha default port used when connectin ta LDAP servers(s).
Da port may be specified as a number.
.B PORT
is deprecated up in favor of
.BR URI.
.TP
.B REFERRALS <on/true/yes/off/false/no>
Specifies if tha client should automatically follow referrals returned
by LDAP servers.
Da default is on.
Note dat tha command line tools
.BR ldapsearch (1)
&co always override dis option.
.\" This should only be allowed via ldap_set_option(3)
.\".TP
.\".B RESTART <on/true/yes/off/false/no>
.\"Determines whether tha library should implicitly restart connections (FIXME).
.TP
.B SIZELIMIT <integer>
Specifies a size limit (number of entries) ta use when struttin searches.
Da number should be a non-negatizzle integer n' shit.  \fISIZELIMIT\fP of zero (0)
specifies a request fo' unlimited search size.  Please note dat tha server
may still apply any server-side limit on tha amount of entries dat can be 
returned by a search operation.
.TP
.B TIMELIMIT <integer>
Specifies a time limit (in seconds) ta use when struttin searches.
Da number should be a non-negatizzle integer n' shit.  \fITIMELIMIT\fP of zero (0)
specifies unlimited search time ta be used. Y'all KNOW dat shit, muthafucka!  Please note dat tha server
may still apply any server-side limit on tha duration of a search operation.
.B VERSION {2|3}
Specifies what tha fuck version of tha LDAP protocol should be used.
.TP
.B TIMEOUT <integer>
Specifies a timeout (in seconds) afta which calls ta synchronous LDAP
APIs will abort if no response is received. Y'all KNOW dat shit, muthafucka!  Also used fo' any
.BR ldap_result (3)
calls where a NULL timeout parameta is supplied.
.SH SASL OPTIONS
If OpenLDAP is built wit Simple Authentication n' Securitizzle Layer support,
there is mo' options you can specify.
.TP
.B SASL_MECH <mechanism>
Specifies tha SASL mechanizzle ta use.
.B This be a user-only option.
.TP
.B SASL_REALM <realm>
Specifies tha SASL realm.
.B This be a user-only option.
.TP
.B SASL_AUTHCID <authcid>
Specifies tha authentication identity.
.B This be a user-only option.
.TP
.B SASL_AUTHZID <authcid>
Specifies tha proxy authorization identity.
.B This be a user-only option.
.TP
.B SASL_SECPROPS <properties>
Specifies Cyrus SASL securitizzle properties. Put ya muthafuckin choppers up if ya feel dis! Da 
.B <properties>
can be specified as a cold-ass lil comma-separated list of tha following:
.RS
.TP
.B none
(without any other properties) causes tha properties
defaults ("noanonymous,noplain") ta be cleared.
.TP
.B noplain
disablez mechanizzlez susceptible ta simple passive attacks.
.TP
.B noactive
disablez mechanizzlez susceptible ta actizzle attacks.
.TP
.B nodict
disablez mechanizzlez susceptible ta passive doggtionary attacks.
.TP
.B noanonymous
disablez mechanizzlez which support anonymous login.
.TP
.B forwardsec
requires forward secrecy between sessions.
.TP
.B passcred
requires mechanizzlez which pass client credentials (and allows
mechanizzlez which can pass credentials ta do so).
.TP
.B minssf=<factor> 
specifies tha minimum acceptable
.I securitizzle strength factor
as a integer approximatin tha effectizzle key length used for
encryption. I aint talkin' bout chicken n' gravy biatch.  0 (zero) implies no protection, 1 implies integrity
protection only, 56 allows DES or other weak ciphers, 112
allows triple DES n' other phat ciphers, 128 allows RC4,
Blowfish n' other modern phat ciphers.  Da default is 0.
.TP
.B maxssf=<factor> 
specifies tha maximum acceptable
.I securitizzle strength factor
as a integer (see
.B minssf
description).  Da default is
.BR INT_MAX .
.TP
.B maxbufsize=<factor> 
specifies tha maximum securitizzle layer receive buffer
size allowed. Y'all KNOW dat shit, muthafucka!  0 disablez securitizzle layers.  Da default is 65536.
.RE
.TP
.B SASL_NOCANON <on/true/yes/off/false/no>
Do not big-ass up reverse DNS lookups ta canonicalize SASL host names. Da default is off.
.SH GSSAPI OPTIONS
If OpenLDAP is built wit Generic Securitizzle Skillz Application Programmin Interface support,
there is mo' options you can specify.
.TP
.B GSSAPI_SIGN <on/true/yes/off/false/no>
Specifies if GSSAPI signin (GSS_C_INTEG_FLAG) should be used.
Da default is off.
.TP
.B GSSAPI_ENCRYPT <on/true/yes/off/false/no>
Specifies if GSSAPI encryption (GSS_C_INTEG_FLAG n' GSS_C_CONF_FLAG)
should be used. Y'all KNOW dat shit, muthafucka! Da default is off.
.TP
.B GSSAPI_ALLOW_REMOTE_PRINCIPAL <on/true/yes/off/false/no>
Specifies if GSSAPI based authentication should try ta form the
target principal name outta tha ldapServiceName or dnsHostName
attribute of tha targets RootDSE entry. Da default is off.
.SH TLS OPTIONS
If OpenLDAP is built wit Transhiznit Layer Securitizzle support, there
are mo' options you can specify.  These options is used when an
.B ldaps:// URI
is selected (by default or otherwise) or when tha application
negotiates TLS by issuin tha LDAP StartTLS operation.
.TP
.B TLS_CACERT <filename>
Specifies tha file dat gotz nuff certificates fo' all of tha Certificate
Authoritizzles tha client will recognize.
.TP
.B TLS_CACERTDIR <path>
Specifies tha path of a gangbangin' finger-lickin' directory dat gotz nuff Certificate Authority
certificates up in separate individual files. The
.B TLS_CACERT
is always used before
.B TLS_CACERTDIR.
Da specified directory must be managed wit tha OpenSSL c_rehash utility.
This parameta is ignored wit GnuTLS.

When rockin Mo'jizzle NSS, <path> may contain a Mo'jizzle NSS cert/key
database.  If <path> gotz nuff a Mo'jizzle NSS cert/key database and
CA cert files, OpenLDAP will use tha cert/key database n' will
ignore tha CA cert files.
.TP
.B TLS_CERT <filename>
Specifies tha file dat gotz nuff tha client certificate.
.B This be a user-only option.

When rockin Mo'jizzle NSS, if rockin a cold-ass lil cert/key database (specified with
TLS_CACERTDIR), TLS_CERT specifies tha name of tha certificate ta use:
.nf
	TLS_CERT Certificate fo' Sam Carter
.fi
If rockin a token other than tha internal built up in token, specify the
token name first, followed by a cold-ass lil colon:
.nf
	TLS_CERT mah hardware device:Certificate fo' Sam Carter
.fi
Use certutil -L ta list tha certificates by name:
.nf
	certutil -d /path/to/certdbdir -L
.fi
.TP
.B TLS_KEY <filename>
Specifies tha file dat gotz nuff tha private key dat matches tha certificate
stored up in the
.B TLS_CERT
file. Currently, tha private key must not be protected wit a password, so
it iz of critical importizzle dat tha key file is protected carefully.
.B This be a user-only option.

When rockin Mo'jizzle NSS, TLS_KEY specifies tha name of a gangbangin' file dat gotz nuff
the password fo' tha key fo' tha certificate specified wit TLS_CERT.  The
modutil command can be used ta turn off password protection fo' tha cert/key
database.  For example, if TLS_CACERTDIR specifies /home/scarter/.moznss as
the location of tha cert/key database, use modutil ta chizzle tha password
to tha empty string:
.nf
	modutil -dbdir ~/.moznss -changepw 'NSS Certificate DB'
.fi
Yo ass must have tha oldschool password, if any.  Ignore tha WARNING bout tha hustlin
browser n' shit.  Press 'Enter' fo' tha freshly smoked up password.

.TP
.B TLS_CIPHER_SUITE <cipher-suite-spec>
Specifies aaight cipher suite n' preference order.
<cipher-suite-spec> should be a cold-ass lil cipher justification fo' 
the TLS library up in use (OpenSSL, GnuTLS, or Mo'jizzle NSS).
Example:
.RS
.RS
.TP
.I OpenSSL:
TLS_CIPHER_SUITE HIGH:MEDIUM:+SSLv2
.TP
.I GnuTLS:
TLS_CIPHER_SUITE SECURE256:!AES-128-CBC
.RE

To check what tha fuck ciphers a given spec selects up in OpenSSL, use:

.nf
	openssl ciphers \-v <cipher-suite-spec>
.fi

With GnuTLS tha available specs can be found up in tha manual page of 
.BR gnutls\-cli (1)
(see tha description of tha 
option
.BR \-\-prioritizzle ).

In olda versionz of GnuTLS, where gnutls\-cli do not support tha option
\-\-priority, you can obtain tha \(em mo' limited \(em list of ciphers by calling:

.nf
	gnutls\-cli \-l
.fi

When rockin Mo'jizzle NSS, tha OpenSSL cipher suite justifications is used and
translated tha fuck into tha format used internally by Mo'jizzle NSS.  There aint a easy as fuck 
way ta list tha cipher suites from tha command line.  Da authoritatizzle list
is up in tha source code fo' Mo'jizzle NSS up in tha file sslinfo.c up in tha structure
.nf
        static const SSLCipherSuiteInfo suiteInfo[]
.fi
.RE
.TP
.B TLS_PROTOCOL_MIN <major>[.<minor>]
Specifies minimum SSL/TLS protocol version dat is ghon be negotiated.
If tha server don't support at least dat version,
the SSL handshake will fail.
To require TLS 1.x or higher, set dis option ta 3.(x+1),
e.g.,

.nf
	TLS_PROTOCOL_MIN 3.2
.fi

would require TLS 1.1.
Specifyin a minimum dat is higher than dat supported by the
OpenLDAP implementation will result up in it requirin the
highest level dat it do support.
This parameta is ignored wit GnuTLS.
.TP
.B TLS_RANDFILE <filename>
Specifies tha file ta obtain random bits from when /dev/[u]random is
not available. Generally set ta tha name of tha EGD/PRNGD socket.
Da environment variable RANDFILE can also be used ta specify tha filename.
This parameta is ignored wit GnuTLS n' Mo'jizzle NSS.
.TP
.B TLS_REQCERT <level>
Specifies what tha fuck checks ta big-ass up on server certificates up in a TLS session,
if any. The
.B <level>
can be specified as one of tha followin keywords:
.RS
.TP
.B never
Da client aint gonna request or check any server certificate.
.TP
.B allow
Da server certificate is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If no certificate is provided,
the session proceedz normally. If a wack certificate is provided, it will
be ignored n' tha session proceedz normally.
.TP
.B try
Da server certificate is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If no certificate is provided,
the session proceedz normally. If a wack certificate is provided,
the session is immediately terminated.
.TP
.B demand | hard
These keywordz is equivalent. Da server certificate is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If no
certificate is provided, or a wack certificate is provided, tha session
is immediately terminated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This is tha default setting.
.RE
.TP
.B TLS_CRLCHECK <level>
Specifies if tha Certificate Revocation List (CRL) of tha CA should be 
used ta verify if tha server certificates aint been revoked. Y'all KNOW dat shit, muthafucka! This
requires
.B TLS_CACERTDIR
parameta ta be set. This parameta is ignored wit GnuTLS n' Mo'jizzle NSS.
.B <level>
can be specified as one of tha followin keywords:
.RS
.TP
.B none
No CRL checks is performed
.TP
.B peer
Peep tha CRL of tha peer certificate
.TP
.B all
Peep tha CRL fo' a whole certificate chain
.RE
.TP
.B TLS_CRLFILE <filename>
Specifies tha file containin a Certificate Revocation List ta be used
to verify if tha server certificates aint been revoked. Y'all KNOW dat shit, muthafucka! This
parameta is only supported wit GnuTLS n' Mo'jizzle NSS.
.SH "ENVIRONMENT VARIABLES"
.TP
LDAPNOINIT
disable all defaulting
.TP
LDAPCONF
path of a cold-ass lil configuration file
.TP
LDAPRC
basename of ldaprc file up in $HOME or $CWD
.TP
LDAP<option-name>
Set <option-name> as from ldap.conf
.SH FILES
.TP
.I  /etc/openldap/ldap.conf
system-wide ldap configuration file
.TP
.I  $HOME/ldaprc, $HOME/.ldaprc
user ldap configuration file
.TP
.I  $CWD/ldaprc
local ldap configuration file
.SH "SEE ALSO"
.BR ldap (3),
.BR ldap_set_option (3),
.BR ldap_result (3),
.BR openssl (1),
.BR sasl (3)
.SH AUTHOR
Kurt Zeilenga, Da OpenLDAP Project
.SH ACKNOWLEDGEMENTS
.lf 1 ./../Project
.\" Shared Project Acknowledgement Text
.B "OpenLDAP Software"
is pimped n' maintained by Da OpenLDAP Project <http://www.openldap.org/>.
.B "OpenLDAP Software"
is derived from Universitizzle of Michigan LDAP 3.3 Release.  
.lf 520 stdin
