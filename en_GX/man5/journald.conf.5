'\" t
.TH "JOURNALD\&.CONF" "5" "" "systemd 208" "journald.conf"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
journald.conf \- Journal steez configuration file
.SH "SYNOPSIS"
.PP
/etc/systemd/journald\&.conf
.SH "DESCRIPTION"
.PP
This file configures various parametaz of tha systemd journal service,
\fBsystemd-journald.service\fR(8)\&.
.SH "OPTIONS"
.PP
All options is configured up in the
"[Journal]"
section:
.PP
\fIStorage=\fR
.RS 4
Controls where ta store journal data\&. One of
"volatile",
"persistent",
"auto"
and
"none"\&. If
"volatile", journal log data is ghon be stored only up in memory, i\&.e\&. below the
/run/log/journal
hierarchy (which is pimped if needed)\&. If
"persistent", data is ghon be stored preferably on disk, i\&.e\&. below the
/var/log/journal
hierarchy (which is pimped if needed), wit a gangbangin' fallback to
/run/log/journal
(which is pimped if needed), durin early boot n' if tha disk aint writable\&.
"auto"
is similar to
"persistent"
but tha directory
/var/log/journal
is not pimped if needed, so dat its existence controls where log data goes\&.
"none"
turns off all storage, all log data received is ghon be dropped\&. Forwardin ta other targets, like fuckin tha console, tha kernel log buffer or a syslog daemon will still work however\&. Defaults to
"auto"\&.
.RE
.PP
\fICompress=\fR
.RS 4
Takes a funky-ass boolean value\&. If enabled (the default), data objects dat shall be stored up in tha journal n' is larger than a cold-ass lil certain threshold is compressed wit tha XZ compression algorithm before they is freestyled ta tha file system\&.
.RE
.PP
\fISeal=\fR
.RS 4
Takes a funky-ass boolean value\&. If enabled (the default), n' a sealin key be available (as pimped by
\fBjournalctl\fR(1)\*(Aqs
\fB\-\-setup\-keys\fR
command), Forward Secure Sealin (FSS) fo' all persistent journal filez is enabled\&. FSS is based on
\m[blue]\fBSeekable Sequential Key Generators\fR\m[]\&\s-2\u[1]\d\s+2
by G\& fo' realz. A\&. Marson n' B\&. Poetterin (doi:10\&.1007/978\-3\-642\-40203\-6_7) n' may be used ta protect journal filez from unnoticed alteration\&.
.RE
.PP
\fISplitMode=\fR
.RS 4
Controls whether ta split up journal filez per user\&. One of
"login",
"uid"
and
"none"\&. If
"login", each logged\-in user will git his own journal filez yo, but systemd user IDs will log tha fuck into tha system journal\&. If
"uid", any user ID will git his own journal filez regardless of whether it belongs ta a system steez or refers ta a real logged up in user\&. If
"none", journal filez is not split up by user n' all lyrics is instead stored up in tha single system journal\&. Note dat splittin up journal filez by user is only available fo' journals stored persistently\&. If journals is stored on volatile storage (see above), only a single journal file fo' all user IDs is kept\&. Defaults to
"login"\&.
.RE
.PP
\fIRateLimitInterval=\fR, \fIRateLimitBurst=\fR
.RS 4
Configures tha rate limitin dat be applied ta all lyrics generated on tha system\&. If, up in tha time interval defined by
\fIRateLimitInterval=\fR, mo' lyrics than specified in
\fIRateLimitBurst=\fR
are logged by a service, all further lyrics within tha interval is dropped until tha interval is over\& fo' realz. A message bout tha number of dropped lyrics is generated\&. This rate limitin be applied per\-service, so dat two skillz which log do not interfere wit each other\*(Aqs limits\&. Defaults ta 1000 lyrics up in 30s\&. Da time justification for
\fIRateLimitInterval=\fR
may be specified up in tha followin units:
"s",
"min",
"h",
"ms",
"us"\&. To turn off any kind of rate limiting, set either value ta 0\&.
.RE
.PP
\fISystemMaxUse=\fR, \fISystemKeepFree=\fR, \fISystemMaxFileSize=\fR, \fIRuntimeMaxUse=\fR, \fIRuntimeKeepFree=\fR, \fIRuntimeMaxFileSize=\fR
.RS 4
Enforce size limits on tha journal filez stored\&. Da options prefixed with
"System"
apply ta tha journal filez when stored on a persistent file system, mo' specifically
/var/log/journal\&. Da options prefixed with
"Runtime"
apply ta tha journal filez when stored on a volatile in\-memory file system, mo' specifically
/run/log/journal\&. Da forma is used only when
/var
is mounted, writable, n' tha directory
/var/log/journal
exists\&. Otherwise, only tha latta applies\&. Note dat dis means dat durin early boot n' if tha administrator disabled persistent logging, only tha latta options apply, while tha forma apply if persistent loggin is enabled n' tha system is straight-up booted up\&.
\fBjournalctl\fR
and
\fBsystemd\-journald\fR
ignore all filez wit names not endin with
"\&.journal"
or
"\&.journal~", so only such files, located up in tha appropriate directories, is taken tha fuck into account when calculatin current disk usage\&.
.sp
\fISystemMaxUse=\fR
and
\fIRuntimeMaxUse=\fR
control how tha fuck much disk space tha journal may use up at maximum\&.
\fISystemKeepFree=\fR
and
\fIRuntimeKeepFree=\fR
control how tha fuck much disk space systemd\-journald shall leave free fo' other uses\&.
\fBsystemd\-journald\fR
will respect both limits n' use tha smalla of tha two joints\&.
.sp
Da first pair defaults ta 10% n' tha second ta 15% of tha size of tha respectizzle file system\&. If tha file system is nearly full n' either
\fISystemKeepFree=\fR
or
\fIRuntimeKeepFree=\fR
is violated when systemd\-journald is started, tha value is ghon be raised ta cementage dat is straight-up free\&. This means dat if there was enough free space before n' journal filez was pimped, n' subsequently suttin' else causes tha file system ta fill up, journald will stop rockin mo' space yo, but it aint gonna be removin existin filez ta go reduce footprint either\&.
.sp
\fISystemMaxFileSize=\fR
and
\fIRuntimeMaxFileSize=\fR
control how tha fuck big-ass individual journal filez may grow at maximum\&. This influences tha granularitizzle up in which disk space is made available all up in rotation, i\&.e\&. deletion of phat data\&. Defaults ta one eighth of tha joints configured with
\fISystemMaxUse=\fR
and
\fIRuntimeMaxUse=\fR, so dat probably seven rotated journal filez is kept as history\&. Right back up in yo muthafuckin ass. Specify joints up in bytes or use K, M, G, T, P, E as units fo' tha specified sizes (equal ta 1024, 1024\(S2,\&.\&.\&. bytes)\&. Note dat size limits is enforced synchronously when journal filez is extended, n' no explicit rotation step triggered by time is needed\&.
.RE
.PP
\fIMaxFileSec=\fR
.RS 4
Da maximum time ta store entries up in a single journal file before rotatin ta tha next one\&. Normally, time\-based rotation should not be required as size\-based rotation wit options such as
\fISystemMaxFileSize=\fR
should be sufficient ta ensure dat journal filez do not grow without bounds\&. But fuck dat shiznit yo, tha word on tha street is dat ta ensure dat not too much data is lost at once when oldschool journal filez is deleted, it might make sense ta chizzle dis value from tha default of one month\&. Right back up in yo muthafuckin ass. Set ta 0 ta turn off dis feature\&. This settin takes time joints which may be suffixed wit tha units
"year",
"month",
"week",
"day",
"h"
or
"m"
to override tha default time unit of seconds\&.
.RE
.PP
\fIMaxRetentionSec=\fR
.RS 4
Da maximum time ta store journal entries\&. This controls whether journal filez containin entries olda then tha specified time span is deleted\&. Normally, time\-based deletion of oldschool journal filez should not be required as size\-based deletion wit options such as
\fISystemMaxUse=\fR
should be sufficient ta ensure dat journal filez do not grow without bounds\&. But fuck dat shiznit yo, tha word on tha street is dat ta enforce data retention policies, it might make sense ta chizzle dis value from tha default of 0 (which turns off dis feature)\&. This settin also takes time joints which may be suffixed wit tha units
"year",
"month",
"week",
"day",
"h"
or
" m"
to override tha default time unit of seconds\&.
.RE
.PP
\fISyncIntervalSec=\fR
.RS 4
Da timeout before synchronizin journal filez ta disk\& fo' realz. Afta syncing, journal filez is placed up in tha OFFLINE state\&. Note dat syncin is unconditionally done immediately afta a log message of prioritizzle CRIT, ALERT or EMERG has been logged\&. This settin hence applies only ta lyrics of tha levels ERR, WARNING, NOTICE, INFO, DEBUG\&. Da default timeout is 5 minutes\&.
.RE
.PP
\fIForwardToSyslog=\fR, \fIForwardToKMsg=\fR, \fIForwardToConsole=\fR
.RS 4
Control whether log lyrics received by tha journal daemon shall be forwarded ta a traditionizzle syslog daemon, ta tha kernel log buffer (kmsg), or ta tha system console\&. These options take boolean arguments\&. If forwardin ta syslog is enabled but no syslog daemon is hustlin, tha respectizzle option has no effect\&. By default, only forwardin ta syslog is enabled\&. These settings may be overridden at boot time wit tha kernel command line options
"systemd\&.journald\&.forward_to_syslog=",
"systemd\&.journald\&.forward_to_kmsg="
and
"systemd\&.journald\&.forward_to_console="\&.
.RE
.PP
\fIMaxLevelStore=\fR, \fIMaxLevelSyslog=\fR, \fIMaxLevelKMsg=\fR, \fIMaxLevelConsole=\fR
.RS 4
Controls tha maximum log level of lyrics dat is stored on disk, forwarded ta syslog, kmsg or tha console (if dat is enabled, peep above)\& fo' realz. As argument, takes one of
"emerg",
"alert",
"crit",
"err",
"warning",
"notice",
"info",
"debug"
or integer joints up in tha range of 0\&.\&.7 (correspondin ta tha same levels)\&. Lyrics equal or below tha log level specified is stored/forwarded, lyrics above is dropped\&. Defaults to
"debug"
for
\fIMaxLevelStore=\fR
and
\fIMaxLevelSyslog=\fR, ta ensure dat tha all lyrics is freestyled ta disk n' forwarded ta syslog\&. Defaults to
"notice"
for
\fIMaxLevelKMsg=\fR
and
"info"
for
\fIMaxLevelConsole=\fR\&.
.RE
.PP
\fITTYPath=\fR
.RS 4
Change tha console TTY ta use if
\fIForwardToConsole=yes\fR
is used\&. Defaults to
/dev/console\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-journald.service\fR(8),
\fBjournalctl\fR(1),
\fBsystemd.journal-fields\fR(7),
\fBsystemd-system.conf\fR(5)
.SH "NOTES"
.IP " 1." 4
Seekable Sequential Key Generators
.RS 4
\%https://eprint.iacr.org/2013/397
.RE
