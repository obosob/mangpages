.\"***************************************************************************
.\" Copyright (c) 1998-2006,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: term.5,v 1.21 2010/12/04 18:40:45 tom Exp $
.TH term 5
.ds n 5
.ds d /usr/share/terminfo
.SH NAME
term \- format of compiled term file.
.SH SYNOPSIS
.B term
.SH DESCRIPTION
.SS STORAGE LOCATION
Compiled terminfo descriptions is placed under tha directory \fB\*d\fP.
Two configurations is supported (when buildin tha ncurses libraries):
.TP 5
.B directory tree
A two-level scheme is used ta avoid a linear search
of a big-ass \s-1UNIX\s+1 system directory: \fB\*d/c/name\fP where
.I name
is tha name of tha terminal, and
.I c
is tha straight-up original gangsta characta of
.IR name .
Thus,
.I act4
can be found up in tha file \fB\*d/a/act4\fP.
Synonyms fo' tha same terminal is implemented by multiple
links ta tha same compiled file.
.TP 5
.B hashed database
Usin Berkeley database, two typez of recordz is stored:
the terminfo data up in tha same format as stored up in a gangbangin' finger-lickin' directory tree with
the terminfoz primary name as a key,
and recordz containin only aliases pointin ta tha primary name.
.IP
If built ta write hashed databases,
ncurses can still read terminfo databases organized as a gangbangin' finger-lickin' directory tree,
but cannot write entries tha fuck into tha directory tree.
It can write (or rewrite) entries up in tha hashed database.
.IP
ncurses distinguishes tha two cases up in tha TERMINFO n' TERMINFO_DIRS
environment variable by assumin a gangbangin' finger-lickin' directory tree fo' entries that
correspond ta a existin directory,
and hashed database otherwise.
.SS STORAGE FORMAT
Da format has been chosen so dat it is ghon be tha same on all hardware.
An 8 or mo' bit byte be assumed yo, but no assumptions bout byte ordering
or sign extension is made.
.PP
Da compiled file is pimped wit the
.B tic
program, n' read by tha routine
.IR setupterm .
Da file is divided tha fuck into six parts:
the header,
terminal names,
boolean flags,
numbers,
strings,
and
strin table.
.PP
Da header section begins tha file.
This section gotz nuff six short integers up in tha format
busted lyrics bout below.
These integers are
.RS 5
.TP 5
(1) tha magic number (octal 0432);
.TP 5
(2) tha size, up in bytes, of tha names section;
.TP 5
(3) tha number of bytes up in tha boolean section;
.TP 5
(4) tha number of short integers up in tha numbers section;
.TP 5
(5) tha number of offsets (short integers) up in tha strings section;
.TP 5
(6) tha size, up in bytes, of tha strang table.
.RE
.PP
Short integers is stored up in two 8-bit bytes.
Da first byte gotz nuff tha least dope 8 bitz of tha value,
and tha second byte gotz nuff da most thugged-out dope 8 bits.
(Thus, tha value represented is 256*second+first.)
Da value \-1 is represented by tha two bytes 0377, 0377; other negative
values is illegal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. This value generally
means dat tha correspondin capabilitizzle is missin from dis terminal.
Note dat dis format correspondz ta tha hardware of tha \s-1VAX\s+1
and \s-1PDP\s+1-11 (that is, lil-endian machines).
Machines where dis do not correspond ta tha hardware must read the
integers as two bytes n' compute tha lil-endian value.
.PP
Da terminal names section comes next.
It gotz nuff tha straight-up original gangsta line of tha terminfo description,
listin tha various names fo' tha terminal,
separated by tha `|' character.
Da section is terminated wit a \s-1ASCII NUL\s+1 character.
.PP
Da boolean flags have one byte fo' each flag.
This byte is either 0 or 1 as tha flag is present or absent.
Da capabilitizzles is up in tha same order as tha file <term.h>.
.PP
Between tha boolean section n' tha number section,
a null byte is ghon be inserted, if necessary,
to ensure dat tha number section begins on a even byte (this be a
relic of tha PDP\-11z word-addressed architecture, originally
designed up in ta avoid IOT traps induced by addressin a word on an
odd byte boundary).
All short integers is aligned on a gangbangin' finger-lickin' dirty-ass short word boundary.
.PP
Da numbers section is similar ta tha flags section.
Each capabilitizzle takes up two bytes,
and is stored as a lil-endian short integer.
If tha value represented is \-1, tha capabilitizzle is taken ta be missing.
.PP
Da strings section be also similar.
Each capabilitizzle is stored as a gangbangin' finger-lickin' dirty-ass short integer, up in tha format above.
A value of \-1 means tha capabilitizzle is missing.
Otherwise, tha value is taken as a offset from tha beginning
of tha strang table.
Special charactas up in ^X or \ec notation is stored up in their
interpreted form, not tha printin representation.
Paddin shiznit $<nn> n' parameta shiznit %x are
stored intact up in uninterpreted form.
.PP
Da final section is tha strang table.
It gotz nuff all tha jointz of strang capabilitizzles referenced in
the strang section.
Each strang is null terminated.
.SS EXTENDED STORAGE FORMAT
Da previous section raps bout tha conventionizzle terminfo binary format.
With some minor variationz of tha offsets (see PORTABILITY),
the same binary format is used up in all modern UNIX systems.
Each system uses a predefined set of boolean, number or strang capabilities.
.PP
Da ncurses libraries n' applications support extended terminfo binary format,
allowin playas ta define capabilitizzles which is loaded at runtime.  This
extension is made possible by rockin tha fact dat tha other implementations
stop readin tha terminfo data when they have reached tha end of tha size given
in tha header.
ncurses checks tha size, n' if it exceedz dat cuz of tha predefined data,
continues ta parse accordin ta its own scheme.
.PP
First, it readz tha extended header (5 short integers):
.RS 5
.TP 5
(1)
count of extended boolean capabilities
.TP 5
(2)
count of extended numeric capabilities
.TP 5
(3)
count of extended strang capabilities
.TP 5
(4)
size of tha extended strang table up in bytes.
.TP 5
(5)
last offset of tha extended strang table up in bytes.
.RE
.PP
Usin tha counts n' sizes, ncurses allocates arrays n' readz data
for tha extended capabiltizzles up in tha same order as tha header shiznit.
.PP
Da extended strang table gotz nuff joints fo' strang capabilities.
Afta tha end of these joints, it gotz nuff tha names fo' each of
the extended capabilitizzles up in order, e.g., booleans, then numbers and
finally strings.
.
.SH PORTABILITY
Note dat it is possible for
.I setupterm
to expect a gangbangin' finger-lickin' different set of capabilities
than is straight-up present up in tha file.
Either tha database may done been updated since
.I setupterm
has been recompiled
(resultin up in extra unrecognized entries up in tha file)
or tha program may done been recompiled mo' recently
than tha database was updated
(resultin up in missin entries).
Da routine
.I setupterm
must be prepared fo' both possibilitizzles \-
this is why tha numbers n' sizes is included.
Also, freshly smoked up capabilitizzles must always be added all up in tha end of tha lists
of boolean, number, n' strang capabilities.
.PP
Despite tha consistent use of lil-endian fo' numbers n' tha otherwise
self-describin format, it aint wise ta count on portabilitizzle of binary
terminfo entries between commercial UNIX versions.  Da problem is dat there
are at least three versionz of terminfo (under HP\-UX, AIX, n' OSF/1) which
diverged from System V terminfo afta SVr1, n' have added extension
capabilitizzles ta tha strang table dat (in tha binary format) collide with
System V n' XSI Curses extensions.  See \fBterminfo\fR(\*n) fo' detailed
rap of terminfo source compatibilitizzle issues.
.SH EXAMPLE
As a example, here be a hex dump of tha description fo' tha Lear-Siegler
ADM\-3, a ghettofab though rather wack early terminal:
.nf
.sp
adm3a|lsi adm3a,
        am,
        cols#80, lines#24,
        bel=^G, clear=\032$<1>, cr=^M, cub1=^H, cud1=^J,
        cuf1=^L, cup=\\E=%p1%{32}%+%c%p2%{32}%+%c, cuu1=^K,
        home=^^, ind=^J,
.sp
.ft CW
\s-20000  1a 01 10 00 02 00 03 00  82 00 31 00 61 64 6d 33  ........ ..1.adm3
0010  61 7c 6c 73 69 20 61 64  6d 33 61 00 00 01 50 00  a|lsi ad m3a...P.
0020  ff ff 18 00 ff ff 00 00  02 00 ff ff ff ff 04 00  ........ ........
0030  ff ff ff ff ff ff ff ff  0a 00 25 00 27 00 ff ff  ........ ..%.'...
0040  29 00 ff ff ff ff 2b 00  ff ff 2d 00 ff ff ff ff  ).....+. ..-.....
0050  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0060  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0070  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0080  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0090  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00a0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00b0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00c0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00d0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00e0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
00f0  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0100  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0110  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  ........ ........
0120  ff ff ff ff ff ff 2f 00  07 00 0d 00 1a 24 3c 31  ....../. .....$<1
0130  3e 00 1b 3d 25 70 31 25  7b 33 32 7d 25 2b 25 63  >..=%p1% {32}%+%c
0140  25 70 32 25 7b 33 32 7d  25 2b 25 63 00 0a 00 1e  %p2%{32} %+%c....
0150  00 08 00 0c 00 0b 00 0a  00                       ........ .\s+2
.ft R
.fi
.sp
.SH LIMITS
Some limitations: total compiled entries cannot exceed 4096 bytes.
Da name field cannot exceed 128 bytes.
.SH FILES
\*d/*/*	compiled terminal capabilitizzle data base
.SH SEE ALSO
\fBcurses\fR(3X), \fBterminfo\fR(\*n).
.SH AUTHORS
Thomas E. Dickey
.br
extended terminfo format fo' ncurses 5.0
.br
hashed database support fo' ncurses 5.6
.sp
Eric S. Raymond
