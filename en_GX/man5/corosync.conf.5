.\"/*
.\" * Copyright (c) 2005 MontaVista Software, Inc.
.\" * Copyright (c) 2006-2012 Red Hat, Inc.
.\" *
.\" * All muthafuckin rights reserved.
.\" *
.\" * Author: Steven Dake (sdake@redhat.com)
.\" *
.\" * This software licensed under BSD license, tha text of which bigs up:
.\" *
.\" * Redistribution n' use up in source n' binary forms, wit or without
.\" * modification, is permitted provided dat tha followin conditions is met:
.\" *
.\" * - Redistributionz of source code must retain tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer.
.\" * - Redistributions up in binary form must reproduce tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer up in tha documentation
.\" *   and/or other shiznit provided wit tha distribution.
.\" * - Neither tha name of tha MontaVista Software, Inc. nor tha namez of its
.\" *   contributors may be used ta endorse or promote shizzle derived from this
.\" *   software without specific prior freestyled permission.
.\" *
.\" * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
.\" * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" * THE POSSIBILITY OF SUCH DAMAGE.
.\" */
.TH COROSYNC_CONF 5 2012-10-10 "corosync Man Page" "Corosync Clusta Engine Programmerz Manual"
.SH NAME
corosync.conf - corosync executizzle configuration file

.SH SYNOPSIS
/etc/corosync/corosync.conf

.SH DESCRIPTION
Da corosync.conf instructs tha corosync executizzle bout various parameters
needed ta control tha corosync executive.  Empty lines n' lines startin with
# characta is ignored. Y'all KNOW dat shit, muthafucka!  Da configuration file consistz of bracketed top level
directives.  Da possible directizzle chizzlez are:

.TP
totem { }
This top level directizzle gotz nuff configuration options fo' tha totem protocol.
.TP
loggin { }
This top level directizzle gotz nuff configuration options fo' logging.
.TP
quorum { }
This top level directizzle gotz nuff configuration options fo' quorum.
.TP
nodelist { }
This top level directizzle gotz nuff configuration options fo' nodes up in cluster.
.TP
qb { }
This top level directizzle gotz nuff configuration options related ta libqb.

.PP
.PP
Within the
.B totem
directive, a intercourse directizzle is required. Y'all KNOW dat shit, muthafucka!  There be also one configuration
option which is required:
.PP
.PP
Within the
.B intercourse
sub-directizzle of totem there be four parametas which is required. Y'all KNOW dat shit, muthafucka!  There is
one parameta which is optional.

.TP
ringnumber
This specifies tha rang number fo' tha intercourse.  When rockin tha redundant
rin protocol, each intercourse should specify separate rang numbers ta uniquely
identify ta tha membershizzle protocol which intercourse ta use fo' which redundant
ring. Da ringnumber must start at 0.

.TP
bindnetaddr
This specifies tha network address tha corosync executizzle should bind
to.

bindnetaddr should be a IP address configured on tha system, or a network
address.

For example, if tha local intercourse is 192.168.5.92 wit netmask
255.255.255.0, you should set bindnetaddr ta 192.168.5.92 or 192.168.5.0.
If tha local intercourse is 192.168.5.92 wit netmask 255.255.255.192,
set bindnetaddr ta 192.168.5.92 or 192.168.5.64, n' so forth.

This may also be a IPV6 address, up in which case IPV6 networkin is ghon be used.
In dis case, tha exact address must be specified n' there is no automatic
selection of tha network intercourse within a specific subnet as wit IPv4.

If IPv6 networkin is used, tha nodeid field up in nodelist must be specified.

.TP
broadcast
This is optionizzle n' can be set ta yes.  If it is set ta fo'sho, tha broadcast
address is ghon be used fo' communication. I aint talkin' bout chicken n' gravy biatch.  If dis option is set, mcastaddr
should not be set.

.TP
mcastaddr
This is tha multicast address used by corosync executive.  Da default
should work fo' most networks yo, but tha network administrator should be queried
on some multicast address ta use.  Avoid 224.x.x.x cuz dis be a "config"
multicast address.

This may also be a IPV6 multicast address, up in which case IPV6 networking
will be used. Y'all KNOW dat shit, muthafucka!  If IPv6 networkin is used, tha nodeid field up in nodelist must
be specified.

It aint nuthin but not needed ta use dis option if cluster_name option is used. Y'all KNOW dat shit, muthafucka! If both options
are used, mcastaddr has higher priority.

.TP
mcastport
This specifies tha UDP port number n' shit.  It be possible ta use tha same multicast
address on a network wit tha corosync skillz configured fo' different
UDP ports.
Please note corosync uses two UDP ports mcastport (for mcast receives) n' 
mcastport - 1 (for mcast sends).
If you have multiple clustas on tha same network rockin tha same mcastaddr 
please configure tha mcastports wit a gap.

.TP
ttl
This specifies tha Time To Live (TTL). If you run yo' clusta on a routed
network then tha default of "1" is ghon be too small. This option provides
a way ta increase dis up ta 255. Da valid range is 0..255.
Note dat dis is only valid on multicast transhiznit types.

.PP
.PP
Within the
.B totem
directive, there be seven configuration optionz of which one is required,
five is optional, n' one is required when IPV6 is configured up in tha intercourse
subdirective.  Da required directizzle controls tha version of tha totem
configuration. I aint talkin' bout chicken n' gravy biatch.  Da optionizzle option unless rockin IPV6 directizzle controls
identification of tha processor. Shiiit, dis aint no joke.  Da optionizzle options control secrecy and
authentication, tha redundant rang mode of operation n' maximum network MTU
field.

.TP
version
This specifies tha version of tha configuration file.  Currently tha only
valid version fo' dis directizzle is 2.

.PP
clear_node_high_bit
This configuration option is optionizzle n' is only relevant when no nodeid is
specified. Y'all KNOW dat shit, muthafucka!  Some corosync clients require a signed 32 bit nodeid dat is pimped outer
than zero however by default corosync uses all 32 bitz of tha IPv4 address space
when generatin a nodeid. Y'all KNOW dat shit, muthafucka!  Set dis option ta yeaaaa ta force tha high bit ta be
zero n' therefor ensure tha nodeid be a positizzle signed 32 bit integer.

WARNING: Da clustas behavior is undefined if dis option is enabled on only
a subset of tha clusta (for example durin a rollin upgrade).

.TP
crypto_hash
This specifies which HMAC authentication should be used ta authenticate all
lyrics. Valid joints is none (no authentication), md5, sha1, sha256,
sha384 n' sha512.

Da default is sha1.

.TP
crypto_cipher
This specifies which cipher should be used ta encrypt all lyrics.
Valid joints is none (no encryption), aes256, aes192, aes128 n' 3des.
Enablin crypto_cipher, requires also enablin of crypto_hash.

Da default be aes256.

.TP
secauth
This specifies dat HMAC/SHA1 authentication should be used ta authenticate
all lyrics.  It further specifies dat all data should be encrypted wit the
nss library n' aes256 encryption algorithm ta protect data from eavesdropping.

Enablin dis option addz a encryption header ta every last muthafuckin message busted by totem which
reduces total throughput fo' realz. Also encryption n' authentication consume extra CPU
cyclez up in corosync.

Da default is on.

WARNING: This parameta is deprecated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. It aint nuthin but recomended ta use combination of
crypto_cipher n' crypto_hash.

.TP
rrp_mode
This specifies tha mode of redundant ring, which may be none, active, or
passive.  Actizzle replication offers slightly lower latency from transmit
to delivery up in faulty network environments but wit less performance.
Passive replication may nearly double tha speed of tha totem protocol
if tha protocol don't become cpu bound. Y'all KNOW dat shit, muthafucka!  Da final option is none, in
which case only one network intercourse is ghon be used ta operate tha totem
protocol.

If only one intercourse directizzle is specified, none be automatically chosen.
If multiple intercourse directives is specified, only actizzle or passive may
be chosen.

Da maximum number of intercourse directives dat be allowed fo' either 
modes (actizzle or passive) is 2.

.TP
netmtu
This specifies tha network maximum transmit unit.  To set dis value beyond
1500, tha regular frame MTU, requires ethernet devices dat support large, or
also called jumbo, frames.  If any thang up in tha network don't support large
frames, tha protocol aint gonna operate properly.  Da hosts must also have their
mtu size set from 1500 ta whatever frame size is specified here.

Please note while some NICs or switches claim big-ass frame support, they support
9000 MTU as tha maximum frame size includin tha IP header n' shit.  Settin tha netmtu
and host MTUs ta 9000 will cause totem ta use tha full 9000 bytez of tha frame.
Then Linux will add a 18 byte header movin tha full frame size ta 9018.  As a
result some hardware aint gonna operate properly wit dis size of data.  A netmtu
of 8982 seems ta work fo' tha few big-ass frame devices dat done been tested.
Some manufacturers claim big-ass frame support when up in fact they support frame
sizez of 4500 bytes.

When bustin  multicast traffic, if tha network frequently reconfigures, chances are
that some thang up in tha network don't support big-ass frames.

Choose hardware carefully if intendin ta use big-ass frame support.

Da default is 1500.

.TP
transport
This directizzle controls tha transhiznit mechanizzle used. Y'all KNOW dat shit, muthafucka!  If tha intercourse to
which corosync is bindin be a RDMA intercourse like fuckin RoCEE or Infiniband, the
"iba" parameta may be specified. Y'all KNOW dat shit, muthafucka!  To avoid tha use of multicast entirely, a
unicast transhiznit parameta "udpu" can be specified. Y'all KNOW dat shit, muthafucka!  This requires specifying
the list of thugz up in nodelist directive, dat could potentially make up
the membershizzle before deployment.

Da default is udp.  Da transhiznit type can also be set ta udpu or iba.

.TP
cluster_name
This specifies tha name of clusta n' itz used fo' automatic generating
of multicast address.

.TP
config_version
This specifies version of config file. This is converted ta unsigned 64-bit int.
By default itz 0. Option is used ta prevent joinin oldschool nodes wit not
up-to-date configuration. I aint talkin' bout chicken n' gravy biatch. If value aint 0, n' node is goin fo' last time
(only fo' last time, join afta split don't follow dis rules)
from single-node membershizzle ta multiple nodes membership, other nodes
config_versions is collected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If current node config_version is not
equal ta highest of collected versions, corosync is terminated.

.TP
ip_version
Specifies version of IP ta use fo' communication. I aint talkin' bout chicken n' gravy biatch. Value can be one of
ipv4 or ipv6. Default (if unspecified) is ipv4.


Within the
.B totem
directive, there be nuff muthafuckin configuration options which is used ta control
the operation of tha protocol.  It be generally not recommended ta chizzle any
of these joints without proper guidizzle n' sufficient testing.  Some networks
may require larger joints if sufferin from frequent reconfigurations.  Some
applications may require fasta failure detection times which can be  bigged up 
by reducin tha token timeout.

.TP
token
This timeout specifies up in millisecondz until a token loss is declared afta not
receivin a token. I aint talkin' bout chicken n' gravy biatch.  This is tha time dropped detectin a gangbangin' failure of a processor
in tha current configuration. I aint talkin' bout chicken n' gravy biatch.  Reformin a freshly smoked up configuration takes bout 50
millisecondz up in addizzle ta dis timeout.

Da default is 1000 milliseconds.

.TP
token_coefficient
This value is used only when
.B nodelist
section is specified n' gotz nuff at least 3 nodes. If so, real token timeout
is then computed as token + (number_of_nodes - 2) * token_coefficient.
This allows clusta ta scale without manually changin token timeout
every time freshly smoked up node be added. Y'all KNOW dat shit, muthafucka! This value can be set ta 0 resulting
in effectizzle removal of dis feature.

Da default is 650 milliseconds.

.TP
token_retransmit
This timeout specifies up in millisecondz afta how tha fuck long before receivin a token
the token is retransmitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This is ghon be automatically calculated if token
is modified. Y'all KNOW dat shit, muthafucka!  It aint recommended ta alta dis value without guidizzle from
the corosync hood.

Da default is 238 milliseconds.

.TP
hold
This timeout specifies up in millisecondz how tha fuck long tha token should be held by
the representatizzle when tha protocol is under low utilization. I aint talkin' bout chicken n' gravy biatch.   It be not
recommended ta alta dis value without guidizzle from tha corosync hood.

Da default is 180 milliseconds.

.TP
token_retransmits_before_loss_const
This value identifies how tha fuck nuff token retransmits should be attempted before
formin a freshly smoked up configuration. I aint talkin' bout chicken n' gravy biatch.  If dis value is set, retransmit n' hold will
be automatically calculated from retransmits_before_loss n' token.

Da default is 4 retransmissions.

.TP
join
This timeout specifies up in millisecondz how tha fuck long ta wait fo' join lyrics in
the membershizzle protocol.

Da default is 50 milliseconds.

.TP
send_join
This timeout specifies up in millisecondz a upper range between 0 n' send_join
to wait before bustin  a join message.  For configurations wit less then
32 nodes, dis parameta aint necessary.  For larger rings, dis parameter
is necessary ta ensure tha NIC aint overflowed wit join lyrics on
formation of a freshly smoked up ring.  A reasonable value fo' big-ass rings (128 nodes) would
be 80msec.  Other timer joints must also chizzle if dis value is chizzled. Y'all KNOW dat shit, muthafucka!  Seek
advice from tha corosync mailin list if tryin ta run larger configurations.

Da default is 0 milliseconds.

.TP
consensus
This timeout specifies up in millisecondz how tha fuck long ta wait fo' consensus ta be
 bigged up  before startin a freshly smoked up round of membershizzle configuration. I aint talkin' bout chicken n' gravy biatch.  Da minimum
value fo' consensus must be 1.2 * token. I aint talkin' bout chicken n' gravy biatch.  This value is ghon be automatically
calculated at 1.2 * token if tha user don't specify a cold-ass lil consensus value.

For two node clusters, a cold-ass lil consensus larger then tha join timeout but less then
token is safe.  For three node or larger clusters, consensus should be larger
then token. I aint talkin' bout chicken n' gravy biatch.  There be a increasin risk of odd membershizzle chizzles, which stil
guarantee virtual synchrony,  as node count grows if consensus is less than
token.

Da default is 1200 milliseconds.

.TP
merge
This timeout specifies up in millisecondz how tha fuck long ta wait before checkin for
a partizzle when no multicast traffic is bein sent.  If multicast traffic
is bein sent, tha merge detection happens automatically as a gangbangin' function of
the protocol.

Da default is 200 milliseconds.

.TP
downcheck
This timeout specifies up in millisecondz how tha fuck long ta wait before checking
that a network intercourse is back up afta it has been downed.

Da default is 1000 millseconds.

.TP
fail_recv_const
This constant specifies how tha fuck nuff rotationz of tha token without receivin any
of tha lyrics when lyrics should be received may occur before a new
configuration is formed.

Da default is 2500 failures ta receive a message.

.TP
seqno_unchanged_const
This constant specifies how tha fuck nuff rotationz of tha token without any multicast
traffic should occur before tha hold timer is started.

Da default is 30 rotations.

.TP
heartbeat_failures_allowed
[HeartBeatin mechanism]
Configures tha optionizzle HeartBeatin mechanizzle fo' fasta failure detection. I aint talkin' bout chicken n' gravy biatch. Keep in
mind dat engagin dis mechanizzle up in lossy networks could cause faulty loss declaration
as tha mechanizzle relies on tha network fo' heartbeating.

So as a rule of thumb use dis mechanizzle if you require improved failure up in low to
medium utilized networks.

This constant specifies tha number of heartbeat failures tha system should tolerate
before declarin heartbeat failure e.g 3 fo' realz. Also if dis value aint set or is 0 then the
heartbeat mechanizzle aint engaged up in tha system n' token rotation is tha method
of failure detection

Da default is 0 (disabled).

.TP
max_network_delay
[HeartBeatin mechanism]
This constant specifies up in millisecondz tha approximate delay dat yo' network takes
to transhiznit one packet from one machine ta another n' shit. This value is ta be set by system
engineers n' please dont chizzle if not shizzle as dis effects tha failure detection
mechanizzle rockin heartbeat.

Da default is 50 milliseconds.

.TP
window_size
This constant specifies tha maximum number of lyrics dat may be busted on one
token rotation. I aint talkin' bout chicken n' gravy biatch.  If all processors big-ass up equally well, dis value could be
pimpin' (300), which would introduce higher latency from origination ta delivery
for straight-up big-ass rings.  To reduce latency up in big-ass rings(16+), tha defaults are
a safe compromise.  If 1 or mo' slow processor(s) is present among fast
processors, window_size should be no larger then 256000 / netmtu ta avoid
overflow of tha kernel receive buffers.  Da user is notified of dis by
the display of a retransmit list up in tha notification logs.  There is no loss
of data yo, but performizzle is reduced when these errors occur.

Da default is 50 lyrics.

.TP
max_lyrics
This constant specifies tha maximum number of lyrics dat may be busted by one
processor on receipt of tha token. I aint talkin' bout chicken n' gravy biatch.  Da max_lyrics parameta is limited to
256000 / netmtu ta prevent overflow of tha kernel transmit buffers.

Da default is 17 lyrics.

.TP
miss_count_const
This constant defines tha maximum number of times on receipt of a token
a message is checked fo' retransmission before a retransmission occurs.  This
parameta is useful ta modify fo' switches dat delay multicast packets
compared ta unicast packets, n' you can put dat on yo' toast.  Da default settin works well fo' nearly all
modern switches.

Da default is 5 lyrics.

.TP
rrp_problem_count_timeout
This specifies tha time up in millisecondz ta wait before decrementin the
problem count by 1 fo' a particular rang ta ensure a link aint marked
faulty fo' transient network failures.

Da default is 2000 milliseconds.

.TP
rrp_problem_count_threshold
This specifies tha number of times a problem is detected wit a link before
settin tha link faulty.  Once a link is set faulty, no mo' data is
transmitted upon dat shit.  Also, tha problem counta is no longer decremented when
the problem count timeout expires.

A problem is detected whenever all tokens from tha proceedin processor have
not been received within tha rrp_token_expired_timeout.  The
rrp_problem_count_threshold * rrp_token_expired_timeout should be atleast 50
millisecondz less then tha token timeout, or a cold-ass lil complete reconfiguration
may occur.

Da default is 10 problem counts.

.TP
rrp_problem_count_mcast_threshold
This specifies tha number of times a problem is detected wit multicast before
settin tha link faulty fo' passive rrp mode. This variable is unused up in active
rrp mode.

Da default is 10 times rrp_problem_count_threshold.

.TP
rrp_token_expired_timeout
This specifies tha time up in millisecondz ta increment tha problem counta for
the redundant rang protocol afta not havin received a token from all rings
for a particular processor.

This value will automatically be calculated from tha token timeout and
problem_count_threshold but may be overridden. I aint talkin' bout chicken n' gravy biatch.  It aint recommended to
override dis value without guidizzle from tha corosync hood.

Da default is 47 milliseconds.

.TP
rrp_autorecovery_check_timeout
This specifies tha time up in millisecondz ta check if tha failed rang can be
auto-recovered.

Da default is 1000 milliseconds.

.PP
Within the
.B logging
directive, there be nuff muthafuckin configuration options which is all optional.

.PP
Da followin 3 options is valid only fo' tha top level loggin directive:

.TP
timestamp
This specifies dat a timestamp is placed on all log lyrics.

Da default is off.

.TP
fileline
This specifies dat file n' line should be printed.

Da default is off.

.TP
function_name
This specifies dat tha code function name should be printed.

Da default is off.

.PP
Da followin options is valid both fo' top level loggin directive
and they can be overriden up in logger_subsys entries.

.TP
to_stderr
.TP
to_logfile
.TP
to_syslog
These specify tha destination of loggin output fo' realz. Any combination of
these options may be specified. Y'all KNOW dat shit, muthafucka! Valid options are
.B yes
and
.B no.

Da default is syslog n' stderr.

Please note, if yo ass is rockin to_logfile n' wanna rotate tha file, use logrotate(8)
with tha option 
.B
copytruncate.
eg.
.ne 18
.RS
.nf
.ft CW
/var/log/corosync.log {
	missingok
	compress
	notifempty
	daily
	rotate 7
	copytruncate
}
.ft
.fi
.RE

.TP
logfile
If the
.B to_logfile
directizzle is set to
.B yes
, dis option specifies tha pathname of tha log file.

No default.

.TP
logfile_priority
This specifies tha logfile prioritizzle fo' dis particular subsystem. Ignored if debug is on.
Possible joints are: alert, crit, debug (same as debug = on), emerg, err, info, notice, warning.

Da default is: info.

.TP
syslog_facility
This specifies tha syslog facilitizzle type dat is ghon be used fo' any lyrics
sent ta syslog. options is daemon, local0, local1, local2, local3, local4,
local5, local6 & local7.

Da default is daemon.

.TP
syslog_priority
This specifies tha syslog level fo' dis particular subsystem. Ignored if debug is on.
Possible joints are: alert, crit, debug (same as debug = on), emerg, err, info, notice, warning.

Da default is: info.

.TP
debug
This specifies whether debug output is logged fo' dis particular logger n' shiznit fo' realz. Also can contain
value trace, what tha fuck is highest level of debug shiznits.

Da default is off.

.PP
Within the
.B logging
directive, logger_subsys directives is optional.

.PP
Within the
.B logger_subsys
sub-directive, all of tha above loggin configuration options is valid and
can be used ta override tha default settings.
Da subsys entry, busted lyrics bout below, is mandatory ta identify tha subsystem.

.TP
subsys
This specifies tha subsystem identitizzle (name) fo' which loggin is specified. Y'all KNOW dat shit, muthafucka! This is the
name used by a steez up in tha log_init () call. E.g. 'CPG'. This directizzle is
required.

.PP
Within the
.B quorum
directizzle it is possible ta specify tha quorum algorithm ta use wit the

.TP
provider
directizzle fo' realz. At tha time of freestylin only corosync_votequorum is supported.
See votequorum(5) fo' configuration options.

.PP
Within the
.B nodelist
directizzle it is possible ta specify specific shiznits bout nodes up in clusta n' shit. Directive
can contain only
.B node
sub-directive, which specifies every last muthafuckin node dat should be a gangmember of tha membership, n' where
non-default options is needed. Y'all KNOW dat shit, muthafucka! Every node must have at least ring0_addr field filled.

For UDPU, every last muthafuckin node dat should be a gangmember of tha membershizzle must be specified.

Possible options are:
.TP
ringX_addr
This specifies ip address of one of tha nodes. X is rang number.

.TP
nodeid
This configuration option is optionizzle when rockin IPv4 n' required when using
IPv6.  This be a 32 bit value specifyin tha node identifier served up ta the
clusta membershizzle service.  If dis aint specified wit IPv4, tha node id
will be determined from tha 32 bit IP address tha system ta which tha system
is bound wit rang identifier of 0.  Da node identifier value of zero is
reserved n' should not be used.

.PP
Within the
.B qb
directizzle it is possible ta specify options fo' libqb.

Possible option is:
.TP
ipc_type
This specifies type of IPC ta use. Can be one of natizzle (default), shm n' socket.
Natizzle means one of shm or socket, dependin on what tha fuck is supported by OS. On systems
with support fo' both, SHM is selected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. SHM is generally fasta yo, but need ta allocate
rin buffer file up in /dev/shm.

.SH "FILES"
.TP
/etc/corosync/corosync.conf
Da corosync executizzle configuration file.

.SH "SEE ALSO"
.BR corosync_overview (8),
.BR votequorum (5),
.BR logrotate (8)
.PP
