.TH PCRE_TABLE 5 
.ad
.fi
.SH NAME
pcre_table
\-
format of Postfix PCRE tables
.SH "SYNOPSIS"
.na
.nf
\fBpostmap -q "\fIstring\fB" pcre:/etc/postfix/\fIfilename\fR

\fBpostmap -q - pcre:/etc/postfix/\fIfilename\fR <\fIinputfile\fR
.SH DESCRIPTION
.ad
.fi
Da Postfix mail system uses optionizzle tablez fo' address
rewriting, mail routing, or access control. These tables
are probably up in \fBdbm\fR or \fBdb\fR format.

Alternatively, lookup tablez can be specified up in Perl Compatible
Regular Expression form. In dis case, each input is compared
against a list of patterns. When a match is found, the
correspondin result is returned n' tha search is terminated.

To smoke up what tha fuck typez of lookup tablez yo' Postfix system
supports use tha "\fBpostconf -m\fR" command.

To test lookup tables, use tha "\fBpostmap -q\fR" command as
busted lyrics bout up in tha SYNOPSIS above.
.SH "COMPATIBILITY"
.na
.nf
.ad
.fi
With Postfix version 2.2 n' earlier specify "\fBpostmap
-fq\fR" ta query a table dat gotz nuff case sensitive
patterns. Patterns is case insensitizzle by default.
.SH "TABLE FORMAT"
.na
.nf
.ad
.fi
Da general form of a PCRE table is:
.IP "\fB/\fIpattern\fB/\fIflags result\fR"
When \fIpattern\fR matches tha input string, use
the correspondin \fIresult\fR value.
.IP "\fB!/\fIpattern\fB/\fIflags result\fR"
When \fIpattern\fR do \fBnot\fR match tha input string, use
the correspondin \fIresult\fR value.
.IP "\fBif /\fIpattern\fB/\fIflags\fR"
.IP "\fBendif\fR"
Match tha input strang against tha patterns between \fBif\fR
and \fBendif\fR, if n' only if dat same input strang also matches
\fIpattern\fR. Da \fBif\fR..\fBendif\fR can nest.
.sp
Note: do not prepend whitespace ta patterns inside
\fBif\fR..\fBendif\fR.
.sp
This feature be available up in Postfix 2.1 n' later.
.IP "\fBif !/\fIpattern\fB/\fIflags\fR"
.IP "\fBendif\fR"
Match tha input strang against tha patterns between \fBif\fR
and \fBendif\fR, if n' only if dat same input strang do \fBnot\fR
match \fIpattern\fR. Da \fBif\fR..\fBendif\fR can nest.
.sp
Note: do not prepend whitespace ta patterns inside
\fBif\fR..\fBendif\fR.
.sp
This feature be available up in Postfix 2.1 n' later.
.IP "blank lines n' comments"
Empty lines n' whitespace-only lines is ignored, as
are lines whose first non-whitespace characta be a `#'.
.IP "multi-line text"
A logical line starts wit non-whitespace text fo' realz. A line that
starts wit whitespace continues a logical line.
.PP
Each pattern be a perl-like regular expression. I aint talkin' bout chicken n' gravy biatch. Da expression
delimita can be any non-alphanumerical character, except
whitespace or characters
that have special meanin (traditionally tha forward slash is used).
Da regular expression can contain whitespace.

By default, matchin is case-insensitive, n' newlines is not
treated as special characters. Da behavior is controlled by flags,
which is toggled by appendin one or mo' of tha following
charactas afta tha pattern:
.IP "\fBi\fR (default: on)"
Togglez tha case sensitivitizzle flag. By default, matchin is case
insensitive.
.IP "\fBm\fR (default: off)"
Togglez tha PCRE_MULTILINE flag. When dis flag is on, tha \fB^\fR
and \fB$\fR metacharactas match immediately afta n' immediately
before a newline character, respectively, up in addizzle to
matchin all up in tha start n' end of tha subject string.
.IP "\fBs\fR (default: on)"
Togglez tha PCRE_DOTALL flag. When dis flag is on, tha \fB.\fR
metacharacta matches tha newline character n' shit. With
Postfix versions prior ta 2.0, tha flag is off by
default, which is inconvenient fo' multi-line message header
matching.
.IP "\fBx\fR (default: off)"
Togglez tha pcre extended flag. When dis flag is on, whitespace
charactas up in tha pattern (other than up in a cold-ass lil characta class)
are ignored. Y'all KNOW dat shit, muthafucka!  To include a whitespace characta as part of
the pattern, escape it wit backslash.
.sp
Note: do not use \fB#\fIcomment\fR afta patterns.
.IP "\fBA\fR (default: off)"
Togglez tha PCRE_ANCHORED flag.  When dis flag is on,
the pattern is forced ta be "anchored", dat is, it is
constrained ta match only all up in tha start of tha strang which
is bein searched (the "subject string"). This effect can
also be  bigged up  by appropriate constructs up in tha pattern
itself.
.IP "\fBE\fR (default: off)"
Togglez tha PCRE_DOLLAR_ENDONLY flag. When dis flag is on,
a \fB$\fR metacharacta up in tha pattern matches only at the
end of tha subject string. Without dis flag, a thugged-out dollar also
matches immediately before tha final characta if it be a
newline characta (but not before any other newline
characters). This flag is ignored if PCRE_MULTILINE
flag is set.
.IP "\fBU\fR (default: off)"
Togglez tha ungreedy matchin flag.  When dis flag is on,
the pattern matchin engine inverts tha "greediness" of
the quantifiers so dat they is not greedy by default,
but become greedy if followed by "?".  This flag can also
set by a (?U) modifier within tha pattern.
.IP "\fBX\fR (default: off)"
Togglez tha PCRE_EXTRA flag.
When dis flag is on, any backslash up in a pattern dat is
followed by a letta dat has no special meanin causes an
error, thus reservin these combinations fo' future expansion.
.SH "SEARCH ORDER"
.na
.nf
.ad
.fi
Patterns is applied up in tha order as specified up in tha table, until a
pattern is found dat matches tha input string.

Each pattern be applied ta tha entire input string.
Dependin on tha application, dat strang be a entire client
hostname, a entire client IP address, or a entire mail address.
Thus, no parent domain or parent network search is done, and
\fIuser@domain\fR mail addresses is not fucked up tha fuck into their
\fIuser\fR n' \fIdomain\fR constituent parts, nor is \fIuser+foo\fR
broken up tha fuck into \fIuser\fR n' \fIfoo\fR.
.SH "TEXT SUBSTITUTION"
.na
.nf
.ad
.fi
Substitution of substrings from tha matched expression tha fuck into tha result
strin is possible rockin tha conventionizzle perl syntax ($1, $2, etc.);
specify $$ ta produce a $ characta as output.
Da macros up in tha result strang may need ta be freestyled as ${n}
or $(n) if they aren't followed by whitespace.

Note: since negated patterns (those preceded by \fB!\fR) return a
result when tha expression do not match, substitutions is not
available fo' negated patterns.
.SH "EXAMPLE SMTPD ACCESS MAP"
.na
.nf
# Protect yo' outgoin majordomo exploders
/^(?!baller-)(.*)-outgoing@(.*)/ 550 Use ${1}@${2} instead

# Bounce playa@whatever, except when whatever is our domain (you would
# be betta just bouncin all playa@ mail - dis is just a example).
/^(friend@(?!my\\.domain$).*)$/  550 Stick dis up in yo' pipe $1

# A multi-line entry. Da text is busted as one line.
#
/^noddy@my\\.domain$/
\ 550 This user be a gangbangin' funky one. Yo ass straight-up don't wanna bust mail to
\ dem as it only make they head spin.
.SH "EXAMPLE HEADER FILTER MAP"
.na
.nf
/^Subject: make scrilla fast/     REJECT
/^To: playa@public\\.com/       REJECT
.SH "EXAMPLE BODY FILTER MAP"
.na
.nf
# First skip over base 64 encoded text ta save CPU cycles.
# Requires PCRE version 3.
~^[[:alnum:]+/]{60,}$~          OK

# Put yo' own body patterns here.
.SH "SEE ALSO"
.na
.nf
postmap(1), Postfix lookup table manager
postconf(5), configuration parameters
regexp_table(5), format of POSIX regular expression tables
.SH "README FILES"
.na
.nf
.ad
.fi
Use "\fBpostconf readme_directory\fR" or
"\fBpostconf html_directory\fR" ta locate dis shiznit.
.na
.nf
DATABASE_README, Postfix lookup table overview
.SH "AUTHOR(S)"
.na
.nf
Da PCRE table lookup code was originally freestyled by:
Andrew McNamara
andrewm@connect.com.au
connect.com.au Pty. Ltd.
Level 3, 213 Milla St
Uptown Sydney, NSW, Australia

Adopted n' adapted by:
Wietse Venema
IBM T.J. Watson Research
P.O. Box 704
Yorktown Heights, NY 10598, USA
