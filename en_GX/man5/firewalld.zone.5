'\" t
.\"     Title: firewalld.zone
.\"    Author: Thomas Woerner <twoerner@redhat.com>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 
.\"    Manual: firewalld.zone
.\"    Source: firewalld 0.3.13
.\"  Language: Gangsta
.\"
.TH "FIREWALLD\&.ZONE" "5" "" "firewalld 0.3.13" "firewalld.zone"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
firewalld.zone \- firewalld unit configuration files
.SH "SYNOPSIS"
.PP
.nf
\fI/etc/firewalld/zones/zone\&.xml\fR
\fI/usr/lib/firewalld/zones/zone\&.xml\fR
      
.fi
.sp
.SH "DESCRIPTION"
.PP
A firewalld unit configuration file gotz nuff tha shiznit fo' a unit\&. These is tha unit description, skillz, ports, icmp\-blocks, masquerade, forward\-ports n' rich language rulez up in a XML file format\&. Da file name has ta be
\fIzone_name\fR\&.xml where length of
\fIzone_name\fR
is currently limited ta 17 chars\&.
.PP
This is tha structure of a unit configuration file:
.sp
.if n \{\
.RS 4
.\}
.nf
<?xml version="1\&.0" encoding="utf\-8"?>
<zone [version="\fIversionstring\fR"] [target="\fIACCEPT\fR|\fI%%REJECT%%\fR|\fIDROP\fR"]>
  [ <short>\fIshort description\fR</short> ]
  [ <description>\fIdescription\fR</description> ]
  [ <interface name="\fIstring\fR"/> ]
  [ <source address="\fIaddress\fR[/\fImask\fR]"/> ]
  [ <service name="\fIstring\fR"/> ]
  [ <port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR"/> ]
  [ <icmp\-block name="\fIstring\fR"/> ]
  [ <masquerade/> ]
  [ <forward\-port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR" [to\-port="\fIportid\fR[\-\fIportid\fR]"] [to\-addr="\fIipv4address\fR"]/> ]
  [
    <rule [family="\fIipv4\fR|\fIipv6\fR"]>
    [ <source address="\fIaddress\fR[/\fImask\fR]" [invert="\fITrue\fR"]/> ]
    [ <destination address="\fIaddress\fR[/\fImask\fR]" [invert="\fITrue\fR"]/> ]
    [
      <service name="\fIstring\fR"/> |
      <port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR"/> |
      <protocol value="\fIprotocol\fR"/> |
      <icmp\-block name="\fIicmptype\fR"/> |
      <masquerade/> |
      <forward\-port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR" [to\-port="\fIportid\fR[\-\fIportid\fR]"] [to\-addr="\fIaddress\fR"]/>
    ]
    [ <log [prefix="\fIprefixtext\fR"] [level="\fIemerg\fR|\fIalert\fR|\fIcrit\fR|\fIerr\fR|\fIwarn\fR|\fInotice\fR|\fIinfo\fR|\fIdebug\fR"]> [<limit value="\fIrate\fR/\fIduration\fR"/>] </log> ]
    [ <audit> [<limit value="\fIrate\fR/\fIduration\fR"/>] </audit> ]
    [
      <accept> [<limit value="\fIrate\fR/\fIduration\fR"/>] </accept> |
      <reject [type="\fIrejecttype\fR"]> [<limit value="\fIrate\fR/\fIduration\fR"/>] </reject> |
      <drop> [<limit value="\fIrate\fR/\fIduration\fR"/>] </drop>
    ]
    </rule>
  ]
</zone>
      
.fi
.if n \{\
.RE
.\}
.PP
Da config can contain these tags n' attributes\&. Right back up in yo muthafuckin ass. Some of dem is mandatory, others optional\&.
.SS "zone"
.PP
Da mandatory unit start n' end tag defines tha unit\&. This tag can only be used once up in a unit configuration file\&. There is optionizzle attributes fo' units:
.PP
version="\fIstring\fR"
.RS 4
To give tha unit a version\&.
.RE
.PP
target="\fIACCEPT\fR|\fI%%REJECT%%\fR|\fIDROP\fR"
.RS 4
Can be used ta accept, reject or drop every last muthafuckin packet dat don\*(Aqt match any rule (port, service, etc\&.)\&. The
\fIACCEPT\fR
target is used in
\fItrusted\fR
zone ta accept every last muthafuckin packet not matchin any rule\&. The
\fI%%REJECT%%\fR
target is used in
\fIblock\fR
zone ta reject (with default firewalld reject type) every last muthafuckin packet not matchin any rule\&. The
\fIDROP\fR
target is used in
\fIdrop\fR
zone ta drop every last muthafuckin packet not matchin any rule\&. If tha target aint specified, every last muthafuckin packet not matchin any rule is ghon be rejected\&.
.RE
.SS "short"
.PP
Is a optionizzle start n' end tag n' is used ta give a unit a mo' readable name\&.
.SS "description"
.PP
Is a optionizzle start n' end tag ta git a thugged-out description fo' a unit\&.
.SS "interface"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times\&. Well shiiiit, it can be used ta bind a intercourse ta a unit\&. Yo ass don\*(Aqt need dis fo' NetworkManager\-managed intercourses, cuz NetworkManager bindz intercourses ta units automatically\&. Right back up in yo muthafuckin ass. See also \*(AqHow tha fuck ta set or chizzle a unit fo' a cold-ass lil connection?\*(Aq in
\fBfirewalld.zones\fR(5)\&. Yo ass can use it as a gangbangin' fallback mechanizzle fo' intercourses dat can\*(Aqt be managed via NetworkManager\& fo' realz. An intercourse entry has exactly one attribute:
.PP
name="\fIstring\fR"
.RS 4
Da name of tha intercourse ta be bound ta tha unit\&.
.RE
.SS "source"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times\&. Well shiiiit, it can be used ta bind a source address or source address range ta a unit\& fo' realz. A source entry has exactly one attribute:
.PP
address="\fIaddress\fR[/\fImask\fR]"
.RS 4
Da source ta be bound ta tha unit\&. Da source is either a IP address or a network IP address wit a mask fo' IPv4 or IPv6\&. Da network crew (IPv4/IPv6) is ghon be automatically discovered\&. For IPv4, tha mask can be a network mask or a plain number\&. For IPv6 tha mask be a plain number\&. Da use of host names aint supported\&.
.RE
.SS "service"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times ta have mo' than one steez entry enabled\& fo' realz. A steez entry has exactly one attribute:
.PP
name="\fIstring\fR"
.RS 4
Da name of tha steez ta be enabled\&. To git a list of valid steez names
\fBfirewall\-cmd \-\-list=skillz\fR
can be used\&.
.RE
.SS "port"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times ta have mo' than one port entry\& fo' realz. All attributez of a port entry is mandatory:
.PP
port="\fIportid\fR[\-\fIportid\fR]"
.RS 4
Da port can either be a single port number
\fIportid\fR
or a port range
\fIportid\fR\-\fIportid\fR\&.
.RE
.PP
protocol="\fItcp\fR|\fIudp\fR"
.RS 4
Da protocol can either be
\fItcp\fR
or
\fIudp\fR\&.
.RE
.SS "icmp\-block"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times ta have mo' than one icmp\-block entry\&. Each icmp\-block tag has exactly one mandatory attribute:
.PP
name="\fIstring\fR"
.RS 4
Da name of tha Internizzle Control Message Protocol (ICMP) type ta be blocked\&. To git a list of valid ICMP types
\fBfirewall\-cmd \-\-list=icmptypes\fR
can be used\&.
.RE
.SS "masquerade"
.PP
Is a optionizzle empty\-element tag\&. Well shiiiit, it can be used only once up in a unit configuration n' aint usable fo' IPv6\&. If it\*(Aqs present masqueradin is enabled fo' tha unit\&. If you wanna enable masquerading, you should enable it up in tha unit bound ta tha external intercourse\&.
.SS "forward\-port"
.PP
Is a optionizzle empty\-element tag n' can be used nuff muthafuckin times ta have mo' than one port or packet forward entry\&. This is fo' IPv4 only\&. Use rich language rulez fo' IPv6\&. There is mandatory n' also optionizzle attributes fo' forward ports:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBMandatory attributes:\fR
.RS 4
.PP
Da local port n' protocol ta be forwarded\&.
.PP
port="\fIportid\fR[\-\fIportid\fR]"
.RS 4
Da port can either be a single port number
\fIportid\fR
or a port range
\fIportid\fR\-\fIportid\fR\&.
.RE
.PP
protocol="\fItcp\fR|\fIudp\fR"
.RS 4
Da protocol can either be
\fItcp\fR
or
\fIudp\fR\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBOptionizzle attributes:\fR
.RS 4
.PP
Da destination of tha forward\&. For local forwardin add
\fBto\-port\fR
only\&. For remote forwardin add
\fBto\-addr\fR
and use
\fBto\-port\fR
optionally if tha destination port on tha destination machine should be different\&.
.PP
to\-port="\fIportid\fR[\-\fIportid\fR]"
.RS 4
Da destination port or port range ta forward to\&. If omitted, tha value of tha port= attribute is ghon be used altogether wit tha to\-addr attribute\&.
.RE
.PP
to\-addr="\fIaddress\fR"
.RS 4
Da destination IPv4 IP address\&.
.RE
.RE
.SS "rule"
.PP
Is a optionizzle element tag n' can be used nuff muthafuckin times ta have mo' than one rich language rule entry\&.
.PP
Da general rule structure:
.sp
.if n \{\
.RS 4
.\}
.nf
<rule [family="\fIipv4\fR|\fIipv6\fR"]>
  [ <source address="\fIaddress\fR[/\fImask\fR]" [invert="\fITrue\fR"]/> ]
  [ <destination address="\fIaddress\fR[/\fImask\fR]" [invert="\fITrue\fR"]/> ]
  [
    <service name="\fIstring\fR"/> |
    <port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR"/> |
    <protocol value="\fIprotocol\fR"/> |
    <icmp\-block name="\fIicmptype\fR"/> |
    <masquerade/> |
    <forward\-port port="\fIportid\fR[\-\fIportid\fR]" protocol="\fItcp\fR|\fIudp\fR" [to\-port="\fIportid\fR[\-\fIportid\fR]"] [to\-addr="\fIaddress\fR"]/>
  ]
  [ <log [prefix="\fIprefixtext\fR"] [level="\fIemerg\fR|\fIalert\fR|\fIcrit\fR|\fIerr\fR|\fIwarn\fR|\fInotice\fR|\fIinfo\fR|\fIdebug\fR"]/> [<limit value="\fIrate\fR/\fIduration\fR"/>] </log> ]
  [ <audit> [<limit value="\fIrate\fR/\fIduration\fR"/>] </audit> ]
  [
    <accept> [<limit value="\fIrate\fR/\fIduration\fR"/>] </accept> |
    <reject [type="\fIrejecttype\fR"]> [<limit value="\fIrate\fR/\fIduration\fR"/>] </reject> |
    <drop> [<limit value="\fIrate\fR/\fIduration\fR"/>] </drop>
  ]

</rule>
      
.fi
.if n \{\
.RE
.\}
.PP
Rule structure fo' source black or white listing:
.sp
.if n \{\
.RS 4
.\}
.nf
<rule [family="\fIipv4\fR|\fIipv6\fR"]>
  <source address="\fIaddress\fR[/\fImask\fR]" [invert="\fITrue\fR"]/>
  [ <log [prefix="\fIprefixtext\fR"] [level="\fIemerg\fR|\fIalert\fR|\fIcrit\fR|\fIerr\fR|\fIwarn\fR|\fInotice\fR|\fIinfo\fR|\fIdebug\fR"]/> [<limit value="\fIrate\fR/\fIduration\fR"/>] </log> ]
  [ <audit> [<limit value="\fIrate\fR/\fIduration\fR"/>] </audit> ]
  <accept> [<limit value="\fIrate\fR/\fIduration\fR"/>] </accept> |
  <reject [type="\fIrejecttype\fR"]> [<limit value="\fIrate\fR/\fIduration\fR"/>] </reject> |
  <drop> [<limit value="\fIrate\fR/\fIduration\fR"/>] </drop>
</rule>
      
.fi
.if n \{\
.RE
.\}
.PP
For a gangbangin' full description on rich language rules, please gotz a peep
\fBfirewalld.richlanguage\fR(5)\&.
.SH "SEE ALSO"
\fBfirewall-applet\fR(1), \fBfirewalld\fR(1), \fBfirewall-cmd\fR(1), \fBfirewall-config\fR(1), \fBfirewalld.conf\fR(5), \fBfirewalld.direct\fR(5), \fBfirewalld.icmptype\fR(5), \fBfirewalld.lockdown-whitelist\fR(5), \fBfirewall-offline-cmd\fR(1), \fBfirewalld.richlanguage\fR(5), \fBfirewalld.service\fR(5), \fBfirewalld.zone\fR(5), \fBfirewalld.zones\fR(5)
.SH "NOTES"
.PP
firewalld home page:
.RS 4
\m[blue]\fB\%http://www.firewalld.org\fR\m[]
.RE
.PP
Mo' documentation wit examples:
.RS 4
\m[blue]\fB\%http://fedoraproject.org/wiki/FirewallD\fR\m[]
.RE
.SH "AUTHORS"
.PP
\fBThomas Woerner\fR <\&twoerner@redhat\&.com\&>
.RS 4
Developer
.RE
.PP
\fBJiri Popelka\fR <\&jpopelka@redhat\&.com\&>
.RS 4
Developer
.RE
