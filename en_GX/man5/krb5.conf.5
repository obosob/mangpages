.\" Man page generated from reStructuredText.
.
.TH "KRB5.CONF" "5" " " "1.11.5" "MIT Kerberos"
.SH NAME
krb5.conf \- Kerberos configuration file
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Da krb5.conf file gotz nuff Kerberos configuration shiznit,
includin tha locationz of KDCs n' admin servers fo' tha Kerberos
realmz of interest, defaults fo' tha current realm n' fo' Kerberos
applications, n' mappingz of hostnames onto Kerberos realms.
Normally, you should install yo' krb5.conf file up in tha directory
\fB/etc\fP\&.  Yo ass can override tha default location by settin the
environment variable \fBKRB5_CONFIG\fP\&.
.SH STRUCTURE
.sp
Da krb5.conf file is set up in tha steez of a Windows INI file.
Sections is headed by tha section name, up in square brackets, n' you can put dat on yo' toast.  Each
section may contain zero or mo' relations, of tha form:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
foo = bar
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B or
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
fubar = {
    foo = bar
    baz = quux
}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Placin a \(aq*\(aq all up in tha end of a line indicates dat dis is tha \fIfinal\fP
value fo' tha tag.  This means dat neither tha remainder of this
configuration file nor any other configuration file is ghon be checked
for any other joints fo' dis tag.
.INDENT 0.0
.TP
.B For example, if you have tha followin lines:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
foo = bar*
foo = baz
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
then tha second value of \fBfoo\fP (\fBbaz\fP) would never be read.
.sp
Da krb5.conf file can include other filez rockin either of the
followin directives all up in tha beginnin of a line:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
include FILENAME
includedir DIRNAME
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fIFILENAME\fP or \fIDIRNAME\fP should be a absolute path. Da named file or
directory must exist n' be readable.  Includin a gangbangin' finger-lickin' directory includes
all filez within tha directory whose names consist solely of
alphanumeric characters, dashes, or underscores.  Included profile
filez is syntactically independent of they muthafathas, so each included
file must begin wit a section header.
.sp
Da krb5.conf file can specify dat configuration should be obtained
from a loadable module, rather than tha file itself, rockin the
followin directizzle all up in tha beginnin of a line before any section
headers:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
module MODULEPATH:RESIDUAL
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fIMODULEPATH\fP may be relatizzle ta tha library path of tha krb5
installation, or it may be a absolute path.  \fIRESIDUAL\fP is provided
to tha module at initialization time.  If krb5.conf uses a module
directive, \fIkdc.conf(5)\fP should also use one if it exists.
.SH SECTIONS
.sp
Da krb5.conf file may contain tha followin sections:
.TS
center;
|l|l|.
_
T{
\fI\%[libdefaults]\fP
T}	T{
Settings used by tha Kerberos V5 library
T}
_
T{
\fI\%[realms]\fP
T}	T{
Realm\-specific contact shiznit n' settings
T}
_
T{
\fI\%[domain_realm]\fP
T}	T{
Maps server hostnames ta Kerberos realms
T}
_
T{
\fI\%[capaths]\fP
T}	T{
Authentication paths fo' non\-hierarchical cross\-realm
T}
_
T{
\fI\%[appdefaults]\fP
T}	T{
Settings used by some Kerberos V5 applications
T}
_
T{
\fI\%[plugins]\fP
T}	T{
Controls plugin module registration
T}
_
.TE
.sp
Additionally, krb5.conf may include any of tha relations busted lyrics bout in
\fIkdc.conf(5)\fP yo, but it aint a recommended practice.
.SS [libdefaults]
.sp
Da libdefaults section may contain any of tha followin relations:
.INDENT 0.0
.TP
.B \fBallow_weak_crypto\fP
If dis flag is set ta false, then weak encryption types (as noted
in \fIEncryption_types\fP up in \fIkdc.conf(5)\fP) is ghon be filtered
out of tha lists \fBdefault_tgs_enctypes\fP,
\fBdefault_tkt_enctypes\fP, n' \fBpermitted_enctypes\fP\&.  Da default
value fo' dis tag is false, which may cause authentication
failures up in existin Kerberos infrastructures dat do not support
strong crypto.  Users up in affected environments should set dis tag
to legit until they infrastructure adopts stronger ciphers.
.TP
.B \fBap_req_checksum_type\fP
An integer which specifies tha type of AP\-REQ checksum ta use in
authenticators.  This variable should be unset so tha appropriate
checksum fo' tha encryption key up in use is ghon be used. Y'all KNOW dat shit, muthafucka!  This can be
set if backward compatibilitizzle requires a specific checksum type.
See tha \fBkdc_req_checksum_type\fP configuration option fo' the
possible joints n' they meanings.
.TP
.B \fBcanonicalize\fP
If dis flag is set ta true, initial ticket requests ta tha KDC
will request canonicalization of tha client principal name, and
answers wit different client principals than tha requested
principal is ghon be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da default value is false.
.TP
.B \fBccache_type\fP
This parameta determines tha format of credential cache types
created by \fIkinit(1)\fP or other programs.  Da default value
is 4, which represents da most thugged-out current format.  Smalla joints
can be used fo' compatibilitizzle wit straight-up oldschool implementations of
Kerberos which interact wit credential caches on tha same host.
.TP
.B \fBclockskew\fP
Sets tha maximum allowable amount of clockskew up in secondz dat the
library will tolerate before assumin dat a Kerberos message is
invalid. Y'all KNOW dat shit, muthafucka!  Da default value is 300 seconds, or five minutes.
.TP
.B \fBdefault_ccache_name\fP
This relation specifies tha name of tha default credential cache.
Da default is \fBFILE:/tmp/krb5cc_%{uid}\fP\&.  This relation is subject ta parameter
expansion (see below).
.TP
.B \fBdefault_client_keytab_name\fP
This relation specifies tha name of tha default keytab for
obtainin client credentials.  Da default is \fBFILE:/var/kerberos/krb5/user/%{euid}/client.keytab\fP\&.  This
relation is subject ta parameta expansion (see below).
.TP
.B \fBdefault_keytab_name\fP
This relation specifies tha default keytab name ta be used by
application servers like fuckin sshd. Y'all KNOW dat shit, muthafucka!  Da default is \fBFILE:/etc/krb5.keytab\fP\&.  This
relation is subject ta parameta expansion (see below).
.TP
.B \fBdefault_realm\fP
Identifies tha default Kerberos realm fo' tha client.  Set its
value ta yo' Kerberos realm.  If dis value aint set, then a
realm must be specified wit every last muthafuckin Kerberos principal when
invokin programs like fuckin \fIkinit(1)\fP\&.
.TP
.B \fBdefault_tgs_enctypes\fP
Identifies tha supported list of session key encryption types that
the client should request when bustin a TGS\-REQ, up in order of
preference from highest ta lowest.  Da list may be delimited with
commas or whitespace.  See \fIEncryption_types\fP in
\fIkdc.conf(5)\fP fo' a list of tha accepted joints fo' dis tag.
Da default value is \fBaes256\-cts\-hmac\-sha1\-96 aes128\-cts\-hmac\-sha1\-96 des3\-cbc\-sha1 arcfour\-hmac\-md5 camellia256\-cts\-cmac camellia128\-cts\-cmac des\-cbc\-crc des\-cbc\-md5 des\-cbc\-md4\fP yo, but single\-DES encryption types
will be implicitly removed from dis list if tha value of
\fBallow_weak_crypto\fP is false.
.sp
Do not set dis unless required fo' specific backward
compatibilitizzle purposes; stale jointz of dis settin can prevent
clients from takin advantage of freshly smoked up stronger enctypes when the
libraries is upgraded.
.TP
.B \fBdefault_tkt_enctypes\fP
Identifies tha supported list of session key encryption types that
the client should request when bustin a AS\-REQ, up in order of
preference from highest ta lowest.  Da format is tha same ol' dirty as for
default_tgs_enctypes.  Da default value fo' dis tag is
\fBaes256\-cts\-hmac\-sha1\-96 aes128\-cts\-hmac\-sha1\-96 des3\-cbc\-sha1 arcfour\-hmac\-md5 camellia256\-cts\-cmac camellia128\-cts\-cmac des\-cbc\-crc des\-cbc\-md5 des\-cbc\-md4\fP yo, but single\-DES encryption types is ghon be implicitly
removed from dis list if tha value of \fBallow_weak_crypto\fP is
false.
.sp
Do not set dis unless required fo' specific backward
compatibilitizzle purposes; stale jointz of dis settin can prevent
clients from takin advantage of freshly smoked up stronger enctypes when the
libraries is upgraded.
.TP
.B \fBdns_lookup_kdc\fP
Indicate whether DNS SRV recordz should be used ta locate tha KDCs
and other servers fo' a realm, if they is not listed up in the
krb5.conf shiznit fo' tha realm.  (Note dat tha admin_server
entry must be up in tha krb5.conf realm shiznit up in order to
contact kadmind, cuz tha DNS implementation fo' kadmin is
incomplete.)
.sp
Enablin dis option do open up a type of denial\-of\-service
attack, if one of mah thugs spoofs tha DNS recordz n' redirects you to
another server n' shit.  But fuck dat shiznit yo, tha word on tha street is dat it\(aqs no worse than a thugged-out denial of service,
because dat fake KDC is ghon be unable ta decode anythang you send
it (besides tha initial ticket request, which has no encrypted
data), n' anythang tha fake KDC sendz aint gonna be trusted without
verification rockin some secret dat it won\(aqt know.
.TP
.B \fBextra_addresses\fP
This allows a cold-ass lil computa ta use multiple local addresses, up in order
to allow Kerberos ta work up in a network dat uses NATs while still
usin address\-restricted tickets, n' you can put dat on yo' toast.  Da addresses should be up in a
comma\-separated list.  This option has no effect if
\fBnoaddresses\fP is true.
.TP
.B \fBforwardable\fP
If dis flag is true, initial tickets is ghon be forwardable by
default, if allowed by tha KDC.  Da default value is false.
.TP
.B \fBignore_acceptor_hostname\fP
When acceptin GSSAPI or krb5 securitizzle contexts fo' host\-based
service principals, ignore any hostname passed by tha calling
application, n' allow clients ta authenticate ta any service
principal up in tha keytab matchin tha steez name n' realm name
(if given).  This option can improve tha administrative
flexibilitizzle of server applications on multihomed hosts yo, but could
compromise tha securitizzle of virtual hostin environments, n' you can put dat on yo' toast.  The
default value is false.
.TP
.B \fBk5login_authoritative\fP
If dis flag is true, principals must be listed up in a local user\(aqs
k5login file ta be granted login access, if a \fI\&.k5login(5)\fP
file exists, n' you can put dat on yo' toast.  If dis flag is false, a principal may still be
granted login access all up in other mechanizzlez even if a k5login
file exists but do not list tha principal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da default value is
true.
.TP
.B \fBk5login_directory\fP
If set, tha library will look fo' a local user\(aqs k5login file
within tha named directory, wit a gangbangin' filename correspondin ta the
local username.  If not set, tha library will look fo' k5login
filez up in tha user\(aqs home directory, wit tha filename .k5login.
For securitizzle reasons, .k5login filez must be owned by
the local user or by root.
.TP
.B \fBkdc_default_options\fP
Default KDC options (Xored fo' multiple joints) when requesting
initial tickets, n' you can put dat on yo' toast.  By default it is set ta 0x00000010
(KDC_OPT_RENEWABLE_OK).
.TP
.B \fBkdc_timesync\fP
Accepted joints fo' dis relation is 1 or 0.  If it is nonzero,
client machines will compute tha difference between they time and
the time returned by tha KDC up in tha timestamps up in tha tickets and
use dis value ta erect fo' a inaccurate system clock when
requestin steez tickets or authenticatin ta skillz.  This
correctizzle factor is only used by tha Kerberos library; it is not
used ta chizzle tha system clock.  Da default value is 1.
.TP
.B \fBkdc_req_checksum_type\fP
An integer which specifies tha type of checksum ta use fo' tha KDC
requests, fo' compatibilitizzle wit straight-up oldschool KDC implementations.
This value is only used fo' DES keys; other keys use tha preferred
checksum type fo' dem keys.
.sp
Da possible joints n' they meanings is as bigs up.
.TS
center;
|l|l|.
_
T{
1
T}	T{
CRC32
T}
_
T{
2
T}	T{
RSA MD4
T}
_
T{
3
T}	T{
RSA MD4 DES
T}
_
T{
4
T}	T{
DES CBC
T}
_
T{
7
T}	T{
RSA MD5
T}
_
T{
8
T}	T{
RSA MD5 DES
T}
_
T{
9
T}	T{
NIST SHA
T}
_
T{
12
T}	T{
HMAC SHA1 DES3
T}
_
T{
\-138
T}	T{
Microsizzlez MD5 HMAC checksum type
T}
_
.TE
.TP
.B \fBnoaddresses\fP
If dis flag is true, requests fo' initial tickets aint gonna be
made wit address restrictions set, allowin tha tickets ta be
used across NATs.  Da default value is true.
.TP
.B \fBpermitted_enctypes\fP
Identifies all encryption types dat is permitted fo' use in
session key encryption. I aint talkin' bout chicken n' gravy biatch.  Da default value fo' dis tag is
\fBaes256\-cts\-hmac\-sha1\-96 aes128\-cts\-hmac\-sha1\-96 des3\-cbc\-sha1 arcfour\-hmac\-md5 camellia256\-cts\-cmac camellia128\-cts\-cmac des\-cbc\-crc des\-cbc\-md5 des\-cbc\-md4\fP yo, but single\-DES encryption types is ghon be implicitly
removed from dis list if tha value of \fBallow_weak_crypto\fP is
false.
.TP
.B \fBplugin_base_dir\fP
If set, determines tha base directory where krb5 plugins are
located. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da default value is tha \fBkrb5/plugins\fP subdirectory
of tha krb5 library directory.
.TP
.B \fBpreferred_preauth_types\fP
This allows you ta set tha preferred preauthentication types which
the client will attempt before others which may be advertised by a
KDC.  Da default value fo' dis settin is "17, 16, 15, 14",
which forces libkrb5 ta attempt ta use PKINIT if it is supported.
.TP
.B \fBproxiable\fP
If dis flag is true, initial tickets is ghon be proxiable by
default, if allowed by tha KDC.  Da default value is false.
.TP
.B \fBrdns\fP
If dis flag is true, reverse name lookup is ghon be used up in addition
to forward name lookup ta canonicalizin hostnames fo' use in
service principal names.  Da default value is true.
.TP
.B \fBrealm_try_domains\fP
Indicate whether a host\(aqs domain components should be used to
determine tha Kerberos realm of tha host.  Da value of this
variable be a integer: \-1 means not ta search, 0 means ta try the
host\(aqs domain itself, 1 means ta also try tha domain\(aqs immediate
parent, n' so forth.  Da library\(aqs usual mechanizzle fo' locating
Kerberos realms is used ta determine whether a thugged-out domain be a valid
realm, which may involve consultin DNS if \fBdns_lookup_kdc\fP is
set.  Da default aint ta search domain components.
.TP
.B \fBrenew_lifetime\fP
(\fIduration\fP string.)  Sets tha default renewable gametime
for initial ticket requests, n' you can put dat on yo' toast.  Da default value is 0.
.TP
.B \fBsafe_checksum_type\fP
An integer which specifies tha type of checksum ta use fo' the
KRB\-SAFE requests, n' you can put dat on yo' toast.  By default it is set ta 8 (RSA MD5 DES).  For
compatibilitizzle wit applications linked against DCE version 1.1 or
earlier Kerberos libraries, bust a value of 3 ta use tha RSA MD4
DES instead. Y'all KNOW dat shit, muthafucka!  This field is ignored when its value is incompatible
with tha session key type.  See tha \fBkdc_req_checksum_type\fP
configuration option fo' tha possible joints n' they meanings.
.TP
.B \fBticket_lifetime\fP
(\fIduration\fP string.)  Sets tha default gametime fo' initial
ticket requests, n' you can put dat on yo' toast.  Da default value is 1 day.
.TP
.B \fBudp_preference_limit\fP
When bustin  a message ta tha KDC, tha library will try rockin TCP
before UDP if tha size of tha message be above
\fBudp_preference_limit\fP\&.  If tha message is smalla than
\fBudp_preference_limit\fP, then UDP is ghon be tried before TCP.
Regardless of tha size, both protocols is ghon be tried if tha first
attempt fails.
.TP
.B \fBverify_ap_req_nofail\fP
If dis flag is true, then a attempt ta verify initial
credentials will fail if tha client machine aint gots a
keytab.  Da default value is false.
.UNINDENT
.SS [realms]
.sp
Each tag up in tha [realms] section of tha file is tha name of a Kerberos
realm.  Da value of tha tag be a subsection wit relations that
define tha propertizzlez of dat particular realm.  For each realm, the
followin tags may be specified up in tha realm\(aqs subsection:
.INDENT 0.0
.TP
.B \fBadmin_server\fP
Identifies tha host where tha administration server is hustlin.
Typically, dis is tha masta Kerberos server n' shit.  This tag must be
given a value up in order ta rap wit tha \fIkadmind(8)\fP
server fo' tha realm.
.TP
.B \fBauth_to_local\fP
This tag allows you ta set a general rule fo' mappin principal
names ta local user names.  It is ghon be used if there aint an
explicit mappin fo' tha principal name dat is being
translated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da possible joints are:
.INDENT 7.0
.TP
.B \fBRULE:\fP\fIexp\fP
Da local name is ghon be formulated from \fIexp\fP\&.
.sp
Da format fo' \fIexp\fP is \fB[\fP\fIn\fP\fB:\fP\fIstring\fP\fB](\fP\fIregexp\fP\fB)s/\fP\fIpattern\fP\fB/\fP\fIreplacement\fP\fB/g\fP\&.
Da integer \fIn\fP indicates how tha fuck nuff components tha target
principal should have.  If dis matches, then a strang will be
formed from \fIstring\fP, substitutin tha realm of tha principal
for \fB$0\fP n' tha \fIn\fP\(aqth component of tha principal for
\fB$n\fP (e.g., if tha principal was \fBjohndoe/admin\fP then
\fB[2:$2$1foo]\fP would result up in tha string
\fBadminjohndoefoo\fP).  If dis strang matches \fIregexp\fP, then
the \fBs//[g]\fP substitution command is ghon be run over the
string.  Da optionizzle \fBg\fP will cause tha substitution ta be
global over tha \fIstring\fP, instead of replacin only tha first
match up in tha \fIstring\fP\&.
.TP
.B \fBDEFAULT\fP
Da principal name is ghon be used as tha local user name.  If
the principal has mo' than one component or aint up in the
default realm, dis rule aint applicable n' tha conversion
will fail.
.TP
.B For example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
[realms]
    ATHENA.MIT.EDU = {
        auth_to_local = RULE:[2:$1](johndoe)s/^.*$/guest/
        auth_to_local = RULE:[2:$1;$2](^.*;admin$)s/;admin$//
        auth_to_local = RULE:[2:$2](^.*;root)s/^.*$/root/
        auto_to_local = DEFAULT
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
would result up in any principal without \fBroot\fP or \fBadmin\fP as the
second component ta be translated wit tha default rule.  A
principal wit a second component of \fBadmin\fP will become its
first component.  \fBroot\fP is ghon be used as tha local name fo' any
principal wit a second component of \fBroot\fP\&.  Da exception to
these two rulez is any principals \fBjohndoe/*\fP, which will
always git tha local name \fBguest\fP\&.
.TP
.B \fBauth_to_local_names\fP
This subsection allows you ta set explicit mappings from principal
names ta local user names.  Da tag is tha mappin name, n' the
value is tha correspondin local user name.
.TP
.B \fBdefault_domain\fP
This tag specifies tha domain used ta expand hostnames when
translatin Kerberos 4 steez principals ta Kerberos 5 principals
(for example, when convertin \fBrcmd.hostname\fP to
\fBhost/hostname.domain\fP).
.TP
.B \fBkdc\fP
Da name or address of a host hustlin a KDC fo' dat realm.  An
optionizzle port number, separated from tha hostname by a cold-ass lil colon, may
be included. Y'all KNOW dat shit, muthafucka!  If tha name or address gotz nuff colons (for example,
if it be a IPv6 address), enclose it up in square brackets to
distinguish tha colon from a port separator. Shiiit, dis aint no joke.  For yo' computa to
be able ta rap wit tha KDC fo' each realm, dis tag must
be given a value up in each realm subsection up in tha configuration
file, or there must be DNS SRV recordz specifyin tha KDCs.
.TP
.B \fBkpasswd_server\fP
Points ta tha server where all tha password chizzlez is performed.
If there is no such entry, tha port 464 on tha \fBadmin_server\fP
host is ghon be tried.
.TP
.B \fBmaster_kdc\fP
Identifies tha masta KDC(s).  Currently, dis tag is used up in only
one case: If a attempt ta git credentials fails cuz of an
invalid password, tha client software will attempt ta contact the
masta KDC, up in case tha user\(aqs password has just been chizzled, and
the updated database has not been propagated ta tha slave servers
yet.
.TP
.B \fBv4_instance_convert\fP
This subsection allows tha administrator ta configure exceptions
to tha \fBdefault_domain\fP mappin rule.  It gotz nuff V4 instances
(the tag name) which should be translated ta some specific
hostname (the tag value) as tha second component up in a Kerberos V5
principal name.
.TP
.B \fBv4_realm\fP
This relation is used by tha krb524 library routines when
convertin a V5 principal name ta a V4 principal name.  It be used
when tha V4 realm name n' tha V5 realm name is not tha same yo, but
still share tha same principal names n' passwords. Da tag value
is tha Kerberos V4 realm name.
.UNINDENT
.SS [domain_realm]
.sp
Da [domain_realm] section serves up a translation from a thugged-out domain name
or hostname ta a Kerberos realm name.  Da tag name can be a host name
or domain name, where domain names is indicated by a prefix of a
period (\fB\&.\fP).  Da value of tha relation is tha Kerberos realm name
for dat particular host or domain. I aint talkin' bout chicken n' gravy biatch.  Da Kerberos realm may be
identified either up in tha \fI\%realms\fP section or rockin DNS SRV records.
Host names n' domain names should be up in lower case.  For example:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[domain_realm]
    crash.mit.edu = TEST.ATHENA.MIT.EDU
    .mit.edu = ATHENA.MIT.EDU
    mit.edu = ATHENA.MIT.EDU
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
maps tha host wit tha exact name \fBcrash.mit.edu\fP tha fuck into the
TEST.ATHENA.MIT.EDU realm.  Da period prefix up in \fB\&.mit.edu\fP denotes
that all systems up in tha \fBmit.edu\fP domain belong to
\fBATHENA.MIT.EDU\fP realm.  Da third entry maps tha host \fBmit.edu\fP
itself ta tha \fBATHENA.MIT.EDU\fP realm.
.sp
If no translation entry applies ta a hostname used fo' a service
principal fo' a steez ticket request, tha library will try ta git a
referral ta tha appropriate realm from tha client realm\(aqs KDC.  If
that do not succeed, tha host\(aqs realm is considered ta be the
hostname\(aqs domain portion converted ta uppercase, unless the
\fBrealm_try_domains\fP settin up in [libdefaults] causes a gangbangin' finger-lickin' different
parent domain ta be used.
.SS [capaths]
.sp
In order ta big-ass up direct (non\-hierarchical) cross\-realm
authentication, configuration is needed ta determine the
authentication paths between realms.
.sp
A client will use dis section ta find tha authentication path between
its realm n' tha realm of tha server n' shit.  Da server will use this
section ta verify tha authentication path used by tha client, by
checkin tha transited field of tha received ticket.
.sp
There be a tag fo' each participatin client realm, n' each tag has
subtags fo' each of tha server realms.  Da value of tha subtags be an
intermediate realm which may participate up in tha cross\-realm
authentication. I aint talkin' bout chicken n' gravy biatch.  Da subtags may be repeated if there is mo' then one
intermediate realm.  A value of "." means dat tha two realms share
keys directly, n' no intermediate realms should be allowed to
participate.
.sp
Only dem entries which is ghon be needed on tha client or tha server
need ta be present.  A client needz a tag fo' its local realm with
subtags fo' all tha realmz of servers it will need ta authenticate to.
A server needz a tag fo' each realm of tha clients it will serve, with
a subtag of tha server realm.
.sp
For example, \fBANL.GOV\fP, \fBPNL.GOV\fP, n' \fBNERSC.GOV\fP all wish to
use tha \fBES.NET\fP realm as a intermediate realm.  ANL has a sub
realm of \fBTEST.ANL.GOV\fP which will authenticate wit \fBNERSC.GOV\fP
but not \fBPNL.GOV\fP\&.  Da [capaths] section fo' \fBANL.GOV\fP systems
would be lookin like this:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[capaths]
    ANL.GOV = {
        TEST.ANL.GOV = .
        PNL.GOV = ES.NET
        NERSC.GOV = ES.NET
        ES.NET = .
    }
    TEST.ANL.GOV = {
        ANL.GOV = .
    }
    PNL.GOV = {
        ANL.GOV = ES.NET
    }
    NERSC.GOV = {
        ANL.GOV = ES.NET
    }
    ES.NET = {
        ANL.GOV = .
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Da [capaths] section of tha configuration file used on \fBNERSC.GOV\fP
systems would be lookin like this:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[capaths]
    NERSC.GOV = {
        ANL.GOV = ES.NET
        TEST.ANL.GOV = ES.NET
        TEST.ANL.GOV = ANL.GOV
        PNL.GOV = ES.NET
        ES.NET = .
    }
    ANL.GOV = {
        NERSC.GOV = ES.NET
    }
    PNL.GOV = {
        NERSC.GOV = ES.NET
    }
    ES.NET = {
        NERSC.GOV = .
    }
    TEST.ANL.GOV = {
        NERSC.GOV = ANL.GOV
        NERSC.GOV = ES.NET
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
When a subtag is used mo' than once within a tag, clients will use
the order of joints ta determine tha path.  Da order of joints is not
important ta servers.
.SS [appdefaults]
.sp
Each tag up in tha [appdefaults] section names a Kerberos V5 application
or a option dat is used by some Kerberos V5 application[s].  The
value of tha tag defines tha default behaviors fo' dat application.
.INDENT 0.0
.TP
.B For example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
[appdefaults]
    telnet = {
        ATHENA.MIT.EDU = {
            option1 = false
        }
    }
    telnet = {
        option1 = true
        option2 = true
    }
    ATHENA.MIT.EDU = {
        option2 = false
    }
    option2 = true
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Da above four wayz of specifyin tha value of a option is shown in
order of decreasin precedence. In dis example, if telnet is hustlin
in tha realm EXAMPLE.COM, it should, by default, have option1 and
option2 set ta true.  But fuck dat shiznit yo, tha word on tha street is dat a telnet program up in tha realm
\fBATHENA.MIT.EDU\fP should have \fBoption1\fP set ta false and
\fBoption2\fP set ta true.  Any other programs up in ATHENA.MIT.EDU should
have \fBoption2\fP set ta false by default.  Any programs hustlin in
other realms should have \fBoption2\fP set ta true.
.sp
Da list of specifiable options fo' each application may be found in
that application\(aqs playa pages.  Da application defaults specified here
are overridden by dem specified up in tha \fI\%realms\fP section.
.SS [plugins]
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%pwqual\fP intercourse
.IP \(bu 2
\fI\%kadm5_hook\fP intercourse
.IP \(bu 2
\fI\%clpreauth\fP n' \fI\%kdcpreauth\fP intercourses
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Tags up in tha [plugins] section can be used ta regista dynamic plugin
modulez n' ta turn modulez on n' off.  Not every last muthafuckin krb5 pluggable
interface uses tha [plugins] section; tha ones dat do is documented
here.
.sp
Each pluggable intercourse correspondz ta a subsection of [plugins].
All subsections support tha same tags:
.INDENT 0.0
.TP
.B \fBdisable\fP
This tag may have multiple joints, n' you can put dat on yo' toast. If there be joints fo' this
tag, then tha named modulez is ghon be disabled fo' tha pluggable
interface.
.TP
.B \fBenable_only\fP
This tag may have multiple joints, n' you can put dat on yo' toast. If there be joints fo' this
tag, then only tha named modulez is ghon be enabled fo' tha pluggable
interface.
.TP
.B \fBmodule\fP
This tag may have multiple joints, n' you can put dat on yo' toast.  Each value be a strang of the
form \fBmodulename:pathname\fP, which causes tha shared object
located at \fIpathname\fP ta be registered as a thugged-out dynamic module named
\fImodulename\fP fo' tha pluggable intercourse.  If \fIpathname\fP aint an
absolute path, it is ghon be treated as relatizzle ta the
\fBplugin_base_dir\fP value from \fI\%[libdefaults]\fP\&.
.UNINDENT
.sp
Da followin subsections is currently supported within tha [plugins]
section:
.SS ccselect intercourse
.sp
Da ccselect subsection controls modulez fo' credential cache
selection within a cold-ass lil cache collection. I aint talkin' bout chicken n' gravy biatch.  In addizzle ta any registered
dynamic modules, tha followin built\-in modulez exist (and may be
disabled wit tha disable tag):
.INDENT 0.0
.TP
.B \fBk5identity\fP
Uses a .k5identitizzle file up in tha user\(aqs home directory ta select a
client principal
.TP
.B \fBrealm\fP
Uses tha steez realm ta guess a appropriate cache from the
collection
.UNINDENT
.SS pwqual intercourse
.sp
Da pwqual subsection controls modulez fo' tha password quality
interface, which is used ta reject weak passwordz when passwordz are
changed. Y'all KNOW dat shit, muthafucka!  Da followin built\-in modulez exist fo' dis intercourse:
.INDENT 0.0
.TP
.B \fBdict\fP
Checks against tha realm doggtionary file
.TP
.B \fBempty\fP
Rejects empty passwords
.TP
.B \fBhesiod\fP
Checks against user shiznit stored up in Hesiod (only if Kerberos
was built wit Hesiod support)
.TP
.B \fBprinc\fP
Checks against componentz of tha principal name
.UNINDENT
.SS kadm5_hook intercourse
.sp
Da kadm5_hook intercourse serves up plugins wit shiznit on
principal creation, modification, password chizzlez n' deletion. I aint talkin' bout chicken n' gravy biatch.  This
interface can be used ta write a plugin ta synchronize MIT Kerberos
with another database like fuckin Actizzle Directory.  No plugins is built
in fo' dis intercourse.
.SS clpreauth n' kdcpreauth intercourses
.sp
Da clpreauth n' kdcpreauth intercourses allow plugin modulez to
provide client n' KDC preauthentication mechanisms.  Da following
built\-in modulez exist fo' these intercourses:
.INDENT 0.0
.TP
.B \fBpkinit\fP
This module implements tha PKINIT preauthentication mechanism.
.TP
.B \fBencrypted_challenge\fP
This module implements tha encrypted challenge FAST factor.
.TP
.B \fBencrypted_timestamp\fP
This module implements tha encrypted timestamp mechanism.
.UNINDENT
.SH PKINIT OPTIONS
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Da followin is PKINIT\-specific options.  These joints may
be specified up in [libdefaults] as global defaults, or within
a realm\-specific subsection of [libdefaults], or may be
specified as realm\-specific joints up in tha [realms] section.
A realm\-specific value overrides, not addz to, a generic
[libdefaults] justification. I aint talkin' bout chicken n' gravy biatch.  Da search order is:
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP 1. 3
realm\-specific subsection of [libdefaults]:
.INDENT 3.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[libdefaults]
    EXAMPLE.COM = {
        pkinit_anchors = FILE:/usr/local/example.com.crt
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.IP 2. 3
realm\-specific value up in tha [realms] section,
.INDENT 3.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[realms]
    OTHERREALM.ORG = {
        pkinit_anchors = FILE:/usr/local/otherrealm.org.crt
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.IP 3. 3
generic value up in tha [libdefaults] section.
.INDENT 3.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[libdefaults]
    pkinit_anchors = DIR:/usr/local/generic_trusted_cas/
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Specifyin PKINIT identitizzle shiznit
.sp
Da syntax fo' specifyin Public Key identity, trust, n' revocation
information fo' PKINIT be as bigs up:
.INDENT 0.0
.TP
.B \fBFILE:\fP\fIfilename\fP[\fB,\fP\fIkeyfilename\fP]
This option has context\-specific behavior.
.sp
In \fBpkinit_identity\fP or \fBpkinit_identities\fP, \fIfilename\fP
specifies tha name of a PEM\-format file containin tha user\(aqs
certificate.  If \fIkeyfilename\fP aint specified, tha user\(aqs
private key is sposed ta fuckin be up in \fIfilename\fP as well.  Otherwise,
\fIkeyfilename\fP is tha name of tha file containin tha private key.
.sp
In \fBpkinit_anchors\fP or \fBpkinit_pool\fP, \fIfilename\fP be assumed to
be tha name of a OpenSSL\-style ca\-bundle file.
.TP
.B \fBDIR:\fP\fIdirname\fP
This option has context\-specific behavior.
.sp
In \fBpkinit_identity\fP or \fBpkinit_identities\fP, \fIdirname\fP
specifies a gangbangin' finger-lickin' directory wit filez named \fB*.crt\fP n' \fB*.key\fP
where tha straight-up original gangsta part of tha file name is tha same ol' dirty fo' matching
pairz of certificate n' private key files.  When a gangbangin' file wit a
name endin wit \fB\&.crt\fP is found, a matchin file endin with
\fB\&.key\fP be assumed ta contain tha private key.  If no such file
is found, then tha certificate up in tha \fB\&.crt\fP aint used.
.sp
In \fBpkinit_anchors\fP or \fBpkinit_pool\fP, \fIdirname\fP be assumed to
be a OpenSSL\-style hashed CA directory where each CA cert is
stored up in a gangbangin' file named \fBhash\-of\-ca\-cert.#\fP\&.  This infrastructure
is encouraged yo, but all filez up in tha directory is ghon be examined and
if they contain certificates (in PEM format), they is ghon be used.
.sp
In \fBpkinit_revoke\fP, \fIdirname\fP be assumed ta be a OpenSSL\-style
hashed CA directory where each revocation list is stored up in a gangbangin' file
named \fBhash\-of\-ca\-cert.r#\fP\&.  This infrastructure is encouraged,
but all filez up in tha directory is ghon be examined n' if they
contain a revocation list (in PEM format), they is ghon be used.
.TP
.B \fBPKCS12:\fP\fIfilename\fP
\fIfilename\fP is tha name of a PKCS #12 format file, containin the
user\(aqs certificate n' private key.
.TP
.B \fBPKCS11:\fP[\fBmodule_name=\fP]\fImodname\fP[\fB:slotid=\fP\fIslot\-id\fP][\fB:token=\fP\fItoken\-label\fP][\fB:certid=\fP\fIcert\-id\fP][\fB:certlabel=\fP\fIcert\-label\fP]
All keyword/values is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  \fImodname\fP specifies tha location
of a library implementin PKCS #11.  If a value is encountered
with no keyword, it be assumed ta be tha \fImodname\fP\&.  If no
module\-name is specified, tha default is \fBopensc\-pkcs11.so\fP\&.
\fBslotid=\fP and/or \fBtoken=\fP may be specified ta force tha use of
a particular smard card reader or token if there is mo' than one
available.  \fBcertid=\fP and/or \fBcertlabel=\fP may be specified to
force tha selection of a particular certificate on tha device.
See tha \fBpkinit_cert_match\fP configuration option fo' mo' ways
to select a particular certificate ta use fo' PKINIT.
.TP
.B \fBENV:\fP\fIenvvar\fP
\fIenvvar\fP specifies tha name of a environment variable which has
been set ta a value conformin ta one of tha previous joints, n' you can put dat on yo' toast.  For
example, \fBENV:X509_PROXY\fP, where environment variable
\fBX509_PROXY\fP has been set ta \fBFILE:/tmp/my_proxy.pem\fP\&.
.UNINDENT
.SS PKINIT krb5.conf options
.INDENT 0.0
.TP
.B \fBpkinit_anchors\fP
Specifies tha location of trusted anchor (root) certificates which
the client trusts ta sign KDC certificates.  This option may be
specified multiple times.  These joints from tha config file are
not used if tha user specifies X509_anchors on tha command line.
.TP
.B \fBpkinit_cert_match\fP
Specifies matchin rulez dat tha client certificate must match
before it is used ta attempt PKINIT authentication. I aint talkin' bout chicken n' gravy biatch.  If a user has
multiple certificates available (on a smart-ass card, or via other
media), there must be exactly one certificate chosen before
attemptin PKINIT authentication. I aint talkin' bout chicken n' gravy biatch.  This option may be specified
multiple times.  All tha available certificates is checked
against each rule up in order until there be a match of exactly one
certificate.
.sp
Da Subject n' Issuer comparison strings is tha \fI\%RFC 2253\fP
strin representations from tha certificate Subject DN n' Issuer
DN joints.
.sp
Da syntax of tha matchin rulez is:
.INDENT 7.0
.INDENT 3.5
[\fIrelation\-operator\fP]\fIcomponent\-rule\fP ...
.UNINDENT
.UNINDENT
.sp
where:
.INDENT 7.0
.TP
.B \fIrelation\-operator\fP
can be either \fB&&\fP, meanin all component rulez must match,
or \fB||\fP, meanin only one component rule must match.  The
default is \fB&&\fP\&.
.TP
.B \fIcomponent\-rule\fP
can be one of tha following.  Note dat there is no
punctuation or whitespace between component rules.
.INDENT 7.0
.INDENT 3.5
.nf
\fB<SUBJECT>\fP\fIregular\-expression\fP
\fB<ISSUER>\fP\fIregular\-expression\fP
\fB<SAN>\fP\fIregular\-expression\fP
\fB<EKU>\fP\fIextended\-key\-usage\-list\fP
\fB<KU>\fP\fIkey\-usage\-list\fP
.fi
.sp
.UNINDENT
.UNINDENT
.sp
\fIextended\-key\-usage\-list\fP be a cold-ass lil comma\-separated list of
required Extended Key Usage joints, n' you can put dat on yo' toast.  All joints up in tha list
must be present up in tha certificate.  Extended Key Usage joints
can be:
.INDENT 7.0
.IP \(bu 2
pkinit
.IP \(bu 2
msScLogin
.IP \(bu 2
clientAuth
.IP \(bu 2
emailProtection
.UNINDENT
.sp
\fIkey\-usage\-list\fP be a cold-ass lil comma\-separated list of required Key
Usage joints, n' you can put dat on yo' toast.  All joints up in tha list must be present up in the
certificate.  Key Usage joints can be:
.INDENT 7.0
.IP \(bu 2
digitalSignature
.IP \(bu 2
keyEncipherment
.UNINDENT
.UNINDENT
.sp
Examples:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pkinit_cert_match = ||<SUBJECT>.*DoE.*<SAN>.*@EXAMPLE.COM
pkinit_cert_match = &&<EKU>msScLogin,clientAuth<ISSUER>.*DoE.*
pkinit_cert_match = <EKU>msScLogin,clientAuth<KU>digitalSignature
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.TP
.B \fBpkinit_eku_checking\fP
This option specifies what tha fuck Extended Key Usage value tha KDC
certificate presented ta tha client must contain. I aint talkin' bout chicken n' gravy biatch.  (Note dat if
the KDC certificate has tha pkinit SubjectAlternativeName encoded
as tha Kerberos TGS name, EKU checkin aint necessary since the
issuin CA has certified dis as a KDC certificate.)  Da joints
recognized up in tha krb5.conf file are:
.INDENT 7.0
.TP
.B \fBkpKDC\fP
This is tha default value n' specifies dat tha KDC must have
the id\-pkinit\-KPKdc EKU as defined up in \fI\%RFC 4556\fP\&.
.TP
.B \fBkpServerAuth\fP
If \fBkpServerAuth\fP is specified, a KDC certificate wit the
id\-kp\-serverAuth EKU as used by Microsizzlez is ghon be accepted.
.TP
.B \fBnone\fP
If \fBnone\fP is specified, then tha KDC certificate aint gonna be
checked ta verify it has a aaight EKU.  Da use of this
option aint recommended.
.UNINDENT
.TP
.B \fBpkinit_dh_min_bits\fP
Specifies tha size of tha Diffie\-Hellman key tha client will
attempt ta use.  Da aaight joints is 1024, 2048, n' 4096.
Da default is 2048.
.TP
.B \fBpkinit_identities\fP
Specifies tha location(s) ta be used ta find tha user\(aqs X.509
identitizzle shiznit. I aint talkin' bout chicken n' gravy biatch.  This option may be specified multiple
times.  Each value be attempted up in order until identity
information is found n' authentication be attempted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Note that
these joints is not used if tha user specifies
\fBX509_user_identity\fP on tha command line.
.TP
.B \fBpkinit_kdc_hostname\fP
Da presense of dis option indicates dat tha client is willing
to accept a KDC certificate wit a thugged-out dNSName SAN (Subject
Alternatizzle Name) rather than requirin tha id\-pkinit\-san as
defined up in \fI\%RFC 4556\fP\&.  This option may be specified multiple
times.  Its value should contain tha aaight hostname fo' the
KDC (as contained up in its certificate).
.TP
.B \fBpkinit_longhorn\fP
If dis flag is set ta true, we is rappin' ta tha Longhorn KDC.
.TP
.B \fBpkinit_pool\fP
Specifies tha location of intermediate certificates which may be
used by tha client ta complete tha trust chain between a KDC
certificate n' a trusted anchor. Shiiit, dis aint no joke.  This option may be specified
multiple times.
.TP
.B \fBpkinit_require_crl_checking\fP
Da default certificate verification process will always check the
available revocation shiznit ta peep if a cold-ass lil certificate has been
revoked. Y'all KNOW dat shit, muthafucka!  If a match is found fo' tha certificate up in a CRL,
verification fails.  If tha certificate bein verified is not
listed up in a CRL, or there is no CRL present fo' its issuin CA,
and \fBpkinit_require_crl_checking\fP is false, then verification
succeeds.
.sp
But fuck dat shiznit yo, tha word on tha street is dat if \fBpkinit_require_crl_checking\fP is legit n' there is
no CRL shiznit available fo' tha issuin CA, then verification
fails.
.sp
\fBpkinit_require_crl_checking\fP should be set ta legit if the
policy is such dat up\-to\-date CRLs must be present fo' every last muthafuckin CA.
.TP
.B \fBpkinit_revoke\fP
Specifies tha location of Certificate Revocation List (CRL)
information ta be used by tha client when verifyin tha validity
of tha KDC certificate presented. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This option may be specified
multiple times.
.TP
.B \fBpkinit_win2k\fP
This flag specifies whether tha target realm be assumed ta support
only tha old, pre\-RFC version of tha protocol.  Da default is
false.
.TP
.B \fBpkinit_win2k_require_binding\fP
If dis flag is set ta true, it expects dat tha target KDC is
patched ta return a reply wit a cold-ass lil checksum rather than a nonce.
Da default is false.
.UNINDENT
.SH PARAMETER EXPANSION
.sp
Startin wit release 1.11, nuff muthafuckin variables, such as
\fBdefault_keytab_name\fP, allow parametas ta be expanded.
Valid parametas are:
.INDENT 0.0
.INDENT 3.5
.TS
center;
|l|l|.
_
T{
%{TEMP}
T}	T{
Temporary directory
T}
_
T{
%{uid}
T}	T{
Unix real UID or Windows SID
T}
_
T{
%{euid}
T}	T{
Unix effectizzle user ID or Windows SID
T}
_
T{
%{USERID}
T}	T{
Same as %{uid}
T}
_
T{
%{null}
T}	T{
Empty string
T}
_
T{
%{LIBDIR}
T}	T{
Installation library directory
T}
_
T{
%{BINDIR}
T}	T{
Installation binary directory
T}
_
T{
%{SBINDIR}
T}	T{
Installation admin binary directory
T}
_
T{
%{username}
T}	T{
(Unix) Username of effectizzle user ID
T}
_
T{
%{APPDATA}
T}	T{
(Windows) Roamin application data fo' current user
T}
_
T{
%{COMMON_APPDATA}
T}	T{
(Windows) Application data fo' all users
T}
_
T{
%{LOCAL_APPDATA}
T}	T{
(Windows) Local application data fo' current user
T}
_
T{
%{SYSTEM}
T}	T{
(Windows) Windows system folder
T}
_
T{
%{WINDOWS}
T}	T{
(Windows) Windows folder
T}
_
T{
%{USERCONFIG}
T}	T{
(Windows) Per\-user MIT krb5 config file directory
T}
_
T{
%{COMMONCONFIG}
T}	T{
(Windows) Common MIT krb5 config file directory
T}
_
.TE
.UNINDENT
.UNINDENT
.SH SAMPLE KRB5.CONF FILE
.sp
Here be a example of a generic krb5.conf file:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[libdefaults]
    default_realm = ATHENA.MIT.EDU
    default_tkt_enctypes = des3\-hmac\-sha1 des\-cbc\-crc
    default_tgs_enctypes = des3\-hmac\-sha1 des\-cbc\-crc
    dns_lookup_kdc = true
    dns_lookup_realm = false

[realms]
    ATHENA.MIT.EDU = {
        kdc = kerberos.mit.edu
        kdc = kerberos\-1.mit.edu
        kdc = kerberos\-2.mit.edu:750
        admin_server = kerberos.mit.edu
        master_kdc = kerberos.mit.edu
        default_domain = mit.edu
    }
    EXAMPLE.COM = {
        kdc = kerberos.example.com
        kdc = kerberos\-1.example.com
        admin_server = kerberos.example.com
    }

[domain_realm]
    .mit.edu = ATHENA.MIT.EDU
    mit.edu = ATHENA.MIT.EDU

[capaths]
    ATHENA.MIT.EDU = {
           EXAMPLE.COM = .
    }
    EXAMPLE.COM = {
           ATHENA.MIT.EDU = .
    }
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH FILES
.sp
\fB/etc/krb5.conf\fP
.SH SEE ALSO
.sp
syslog(3)
.SH AUTHOR
MIT
.SH COPYRIGHT
1985-2014, MIT
.\" Generated by docutils manpage writer.
.
