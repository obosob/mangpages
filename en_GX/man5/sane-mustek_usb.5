.TH sane\-mustek_usb 5 "13 Jul 2008" "" "SANE Scanner Access Now Easy"
.IX sane\-mustek_usb
.SH NAME
sane\-mustek_usb \- SANE backend fo' Mustek STD flatbed scanners
.SH DESCRIPTION
The
.B sane\-mustek_usb
library implements a SANE (Scanner Access Now Easy) backend dat provides
access ta Mustek STD flatbed scanners (includin a cold-ass lil clone from Trust).  At
present, tha followin scanners is known ta work mo' or less wit this
backend:
.PP
.RS
Mustek 600 CU
.br
Mustek 1200 UB
.br
Mustek 1200 CU
.br
Mustek 1200 CU Plus
.br
Trust Compact Scan STD 19200
.br
.RE
.PP
Mo' details can be found on tha Mustek STD backend homepizzy 
.IR http://www.meier\-geinitz.de/sane/mustek_usb\-backend/ .
.PP
Da Mustek BearPaw 1200 n' 2400 scanners is supported by tha plustek
backend yo, but it ain't no stoppin cause I be still poppin'. Right back up in yo muthafuckin ass. See 
.BR sane\-plustek (5)
for details. Da Mustek BearPaw 1200F is supported by tha MA-1509 backend yo, but it ain't no stoppin cause I be still poppin'. Right back up in yo muthafuckin ass. See
.BR sane\-ma1509 (5)
for details. Other Mustek STD scanners is supported by tha gt68xx backend,
see
.BR sane\-gt68xx (5).
.PP
This backend can only work wit scanners dat is already detected by the
operatin system. Right back up in yo muthafuckin ass. See 
.BR sane\-usb (5)
for details.
.PP
If you own a Mustek (or Trust) scanner other than tha ones listed above that
works wit dis backend, please let me know dis by bustin  tha scanner's
exact model name n' tha STD vendor n' thang idz (e.g. from
.I /proc/bus/usb/devices
or syslog) ta mah dirty ass.

.SH "DEVICE NAMES"
This backend expects thang namez of tha form:
.PP
.RS
.I special
.RE
.PP
Where
.I special
is a path-name fo' tha special thang dat correspondz ta a STD scanner.
With Linux, such a thang name could be
.I /dev/usb/scanner0
or
.IR /dev/usbscanner1 ,
for example.
.PP
For FreeBSD use
.IR /dev/uscanner0 .

.SH CONFIGURATION
Da contentz of the
.I mustek_usb.conf
file be a list of options n' thang names dat correspond ta Mustek
STD scanners.  Empty lines n' lines startin wit a hash mark (#) are
ignored. Y'all KNOW dat shit, muthafucka! If a thang name is placed up in 
.IR mustek_usb.conf ,
it must be followed by a line containin tha keyword
.B option
and a option specifyin tha scanner type. Da followin options can be used:
.BR 600cu ,
.BR 1200cu ,
.BR 1200cu_plus ,
.BR 1200ub .
For tha Trust Compact Scan STD 19200 use `option 1200ub'.
.PP
Instead of rockin tha thang name, tha scanner can be autodetected by 
.B "usb vendor_id product_id"
statements which is already included into
.IR mustek_usb.conf .
This is only supported wit Linux 2.4.8 n' higher n' all systems that
support libsub. "vendor_id" n' "product_id" is hexadecimal numbers that
identify tha scanner n' shit. If dis don't work, a thang name n' tha option
specifyin tha scanner type must be placed in
.I mustek_usb.conf 
as busted lyrics bout above.
.PP
Da global
.B option max_block_size
can be used ta limit tha amount of data acquired up in one turn from tha STD
system. Well shiiiit, it may be worth trying, if STD errors occur.
.PP
A sample configuration file is shown below:
.PP
.RS
# Comment
.br
option max_block_size 1024
.br
usb 0x055f 0x0001
.br
/dev/usb/scanner0
.br
option 600cu
.RE
.PP
Da first line is ignored. Y'all KNOW dat shit, muthafucka! Da second line sets tha buffer size ta a maximum of
1024 bytes.  Da third line tries ta autodetect a scanner wit vendor id 0x055f
and thang id 0x0001 (Mustek 1200 CU). Da fourth line  drops some lyrics ta tha backend to
attach ta 
.I /dev/usb/scanner0
and tha fifth line specifies that
.I /dev/usb/scanner0
is a Mustek 600 CU.
.SH FILES
.TP
.I /etc/sane.d/mustek_usb.conf
Da backend configuration file (see also description of
.B SANE_CONFIG_DIR
below).
.TP
.I /usr/lib64/sane/libsane\-mustek_usb.a
Da static library implementin dis backend.
.TP
.I /usr/lib64/sane/libsane\-mustek_usb.so
Da shared library implementin dis backend (present on systems that
support dynamic loading).
.SH ENVIRONMENT
.TP
.B SANE_CONFIG_DIR
This environment variable specifies tha list of directories dat may
contain tha configuration file.  Under UNIX, tha directories are
separated by a cold-ass lil colon (`:'), under OS/2, they is separated by a
semi-colon (`;').  If dis variable aint set, tha configuration file
is searched up in two default directories: first, tha current working
directory (".") n' then up in /etc/sane.d. Y'all KNOW dat shit, muthafucka!  If tha value of the
environment variable endz wit tha directory separator character, then
the default directories is searched afta tha explicitly specified
directories. Put ya muthafuckin choppers up if ya feel dis!  For example, setting
.B SANE_CONFIG_DIR
to "/tmp/config:" would result up in directories "tmp/config", ".", and
"/etc/sane.d" bein searched (in dis order).
.TP
.B SANE_DEBUG_MUSTEK_STD
If tha library was compiled wit debug support enabled, this
environment variable controls tha debug level fo' dis backend yo, but it ain't no stoppin cause I be still poppin'.  Higher
debug levels increase tha verbositizzle of tha output. 

.ft CR
.nf
Value  Description
0      no output
1      print fatal errors
2      print blingin lyrics
3      print non-fatal errors n' less blingin lyrics
4      print all but debuggin lyrics
5      print high level debuggin lyrics
6      print medium level debuggin lyrics
7      print low level debuggin lyrics
.fi
.ft R

Example: 
export SANE_DEBUG_MUSTEK_STD=4

.SH "SEE ALSO"
.BR sane (7),
.BR sane\-usb (5),
.BR sane\-mustek (5),
.BR sane\-mustek_pp (5),
.BR sane\-plustek (5),
.BR sane\-gt68xx (5),
.BR sane\-ma1509 (5)
.br
.IR /usr/share/doc/sane-backends/mustek_usb/mustek_usb.CHANGES ,
.I /usr/share/doc/sane-backends/mustek_usb/mustek_usb.TODO
.br
.I http://www.meier\-geinitz.de/sane/mustek_usb\-backend/

.SH AUTHOR
Hennin Meier-Geinitz <henning@meier\-geinitz.de>
.br
This backend is based on tha Mustek 1200ub backend from Mustek, maintained by
Tomothy Wang.

.SH BUGS
These devices gotz a hardware bug: Once data is freestyled ta them, they can't be
reset (toggle = DATA0). That means, any operation dat tries ta reset the
device will result up in hustlin tha fuck into timeouts.

In earlier versions dis backend failed when dat shiznit was loaded tha second time in
some configurations. Da only chizzle was ta replug tha scanner up in dis case. The
backend uses a workaround fo' dat bug now but itz only tested on
Linux. Reports fo' other operatin systems is appreciated.

.PP
Mo' detailed bug shiznit be available all up in tha Mustek backend homepage
.IR http://www.meier\-geinitz.de/sane/mustek_usb\-backend/ .
