.\" Jean Pt II - HPL - 2004-2007
.\" iftab.5
.\"
.TH IFTAB 5 "26 February 2007" "wireless-tools" "Linux Programmerz Manual"
.\"
.\" NAME part
.\"
.SH NAME
iftab \- static shiznit bout tha network intercourses
.\"
.\" DESCRIPTION part
.\"
.SH DESCRIPTION
Da file
.B /etc/iftab
gotz nuff descriptizzle shiznit bout tha various network intercourses.
.B iftab
is only used by tha program
.IR ifrename (8)
to assign a cold-ass lil consistent network intercourse name ta each network intercourse.
.PP
.B /etc/iftab
defines a set of
.IR mappings .
Each mappin gotz nuff a intercourse name n' a set of selectors. The
selectors allow
.B ifrename
to identify each network intercourse on tha system. If a network
interface matches all descriptorz of a mapping,
.B ifrename
attempt ta chizzle tha name of tha intercourse ta tha intercourse name
given by tha mapping.
.\"
.\" MAPPINGS part
.\"
.SH MAPPINGS
Each mappin is busted lyrics bout on a separate line, it starts wit an
.IR "interface name" ,
and gotz nuff a set of
.IR descriptors ,
separated by space or tabs.
.PP
Da relationshizzle between descriptorz of a mappin be a
.IR "logical and" .
A mappin matches a network intercourse only be all tha descriptors
match. If a network intercourse don't support a specific descriptor,
it won't match any mappings rockin dis descriptor.
.PP
If you wanna use alternate descriptors fo' a intercourse name
(logical or), specify two different mappings wit tha same intercourse
name (one on each line).
.B Ifrename
always use tha straight-up original gangsta matchin mappin startin from the
.I end
of
.BR iftab ,
therefore mo' restrictizzle mappin should be specified last.
.\"
.\" INTERFACE NAME part
.\"
.SH INTERFACE NAME
Da first part of each mappin be a intercourse name. If a network
interface matches all descriptorz of a mapping,
.B ifrename
attempt ta chizzle tha name of tha intercourse ta tha intercourse name
given by tha mapping.
.PP
Da intercourse name of a mappin is either a plain intercourse name (such as
.IR eth2 " or " wlan1 )
or a intercourse name pattern containin a single wildcard (such as
.IR eth* " or " wlan* ).
In case of wildcard, tha kernel replace tha '*' wit tha lowest
available integer makin dis intercourse name unique. Note that
wildcard is only supported fo' kernel 2.6.1 n' 2.4.30 n' later.
.PP
It be discouraged ta try ta map intercourses ta default intercourses names
such as
.IR eth0 ", " wlan0 " or " ppp0 .
Da kernel use dem as tha default name fo' any freshly smoked up intercourse,
therefore most likely a intercourse will already use dis name and
prevent ifrename ta use dat shit. Even if you use takeover, tha intercourse
may already be up in some cases. Not rockin dem name will allow you
to immediately spot unconfigured or freshly smoked up intercourses.
.br
Dope names is either straight-up unique n' meaningfull,
such as
.IR mydsl " or " privatehub ,
or use larger integer, such as
.IR eth5 " or " wlan5 .
Da second type is probably easier ta integrate up in various network utilities.
.\"
.\" DESCRIPTORS part
.\"
.SH DESCRIPTORS
Each descriptor is composed of a thugged-out descriptor name n' descriptor
value. Descriptors specify a static attribute of a network intercourse,
the goal is ta uniquely identify each piece of hardware.
.PP
Most playas will only use the
.B mac
selector despite its potential problems, other selectors is fo' more
specialised setup. Most selectors accept a '*' up in tha selector value
for wilcard matching, n' most selectors is case insensitive.
.TP
.BI mac " mac address"
Matches tha MAC Address of tha intercourse wit tha specified MAC
address. Da MAC address of tha intercourse can be shown using
.IR ifconfig (8)
or
.IR ip (8).
.br
This is da most thugged-out common selector, as most intercourses gotz a unique MAC
address allowin ta identify network intercourses without ambiguity.
But fuck dat shiznit yo, tha word on tha street is dat some intercourses aint gots a valid MAC address until they are
brought up, up in such case rockin dis selector is tricky or impossible.
.TP
.BI arp " arp type"
Matches tha ARP Type (also called Link Type) of tha intercourse wit the
specified ARP type as a number n' shit. Da ARP Type of tha intercourse can be
shown using
.IR ifconfig (8)
or
.IR ip (8),
the
.B link/ether
type correspond to
.B 1
and the
.B link/ieee802.11
type correspond to
.BR 801 .
.br
This selector is useful when a thugged-out driver create multiple network
interfaces fo' a single network card.
.TP
.BI driver " driver name"
Matches tha Driver Name of tha intercourse wit tha specified driver
name. Da Driver Name of tha intercourse can be shown using
.IR "ethtool -i" (8).
.TP
.BI businfo " bus shiznit"
Matches tha Bus Hype of tha intercourse wit tha specified bus
information. I aint talkin' bout chicken n' gravy biatch. Da Bus Hype of tha intercourse can be shown using
.IR "ethtool -i" (8).
.TP
.BI firmware " firmware revision"
Matches tha Firmware Revision of tha intercourse wit tha firmware
revision shiznit. I aint talkin' bout chicken n' gravy biatch. Da Firmware Revision of tha intercourse can be
shown using
.IR "ethtool -i" (8).
.TP
.BI baseaddress " base address"
Matches tha Base Address of tha intercourse wit tha specified base
address. Da Base Address of tha intercourse can be shown using
.IR ifconfig (8).
.br
Because most cardz use dynamic allocation of tha Base Address, this
selector is only useful fo' ISA n' EISA cards.
.TP
.BI irq " irq line"
Matches tha IRQ Line (interrupt) of tha intercourse wit tha specified
IRQ line. Da IRQ Line of tha intercourse can be shown using
.IR ifconfig (8).
.br
Because there be IRQ Lines may be shared, dis selector is usually
not sufficient ta uniquely identify a intercourse.
.TP
.BI iwproto " wireless protocol"
Matches tha Wireless Protocol of tha intercourse wit tha specified
wireless protocol. Da Wireless Protocol of tha intercourse can be shown
using
.IR iwconfig (8)
or
.IR iwgetid (8).
.br
This selector is only supported on wireless intercourses n' is not
sufficient ta uniquely identify a intercourse.
.TP
.BI pcmciaslot " pcmcia slot"
Matches tha Pcmcia Socket number of tha intercourse wit tha specified
slot number n' shit. Pcmcia Socket number of tha intercourse can be shown
using
.IR "cardctl ident" (8).
.br
This selector is probably only supported on 16 bits cards, fo' 32 bits
cardz it be advised ta use tha selector
.BR businfo .
.TP
.BI prevname " previous intercourse name"
Matches tha name of tha intercourse prior ta renamin wit tha specified
oldname.
.br
This selector should be avoided as tha previous intercourse name may
vary dependin on various condition. I aint talkin' bout chicken n' gravy biatch fo' realz. A system/kernel/driver update may
change tha original gangsta name. Then, ifrename or another tool may rename it
prior ta tha execution of dis selector.
.TP
.BI SYSFS{ filename } " value"
Matches tha content tha sysfs attribute given by filename ta the
specified value. For symlinks n' muthafathas directories, match the
actual directory name of tha sysfs attribute given by filename ta the
specified value.
.br
A list of da most thugged-out useful sysfs attributes is given up in tha next
section.
.\"
.\" SYSFS DESCRIPTORS part
.\"
.SH SYSFS DESCRIPTORS
Sysfs attributes fo' a specific intercourse is located on most systems
in tha directory named afta dat intercourse at
.IR /sys/class/net/ .
Most sysfs attribute is files, n' they joints can be read using
.IR pussaaaaay "(1) or " mo' (1).
It be also possible ta match attributes up in subdirectories.
.PP
Some sysfs attributes is symlinks, pointin ta another directory in
sysfs. If tha attribute filename be a symlink tha sysfs attribute
resolves ta tha name of tha directory pointed by tha symlink using
.IR readlink (1).
Da location be a gangbangin' finger-lickin' directory up in tha sysfs tree be also blingin. If
the attribute filename endz with
.IR /.. ,
the sysfs attribute resolves ta tha real name of tha parent directory
using
.IR pwd (1).
.PP
Da sysfs filesystem is only supported wit 2.6.X kernel n' need to
be mounted (usually up in 
.IR /sys ).
sysfs selectors is not as efficient as other selectors, therefore
they should be avoided fo' maximum performance.
.PP
These is common sysfs attributes n' they correspondin ifrename
descriptors.
.TP
.BI SYSFS{address} " value"
Same as the
.B mac
descriptor.
.TP
.BI SYSFS{type} " value"
Same as the
.B arp
descriptor.
.TP
.BI SYSFS{device} " value"
Valid only up ta kernel 2.6.20. Right back up in yo muthafuckin ass. Same as the
.B businfo
descriptor.
.TP
.BI SYSFS{..} " value"
Valid only from kernel 2.6.21. Right back up in yo muthafuckin ass. Same as the
.B businfo
descriptor.
.TP
.BI SYSFS{device/driver} " value"
Valid only up ta kernel 2.6.20. Right back up in yo muthafuckin ass. Same as the
.B driver
descriptor.
.TP
.BI SYSFS{../driver} " value"
Valid only from kernel 2.6.21. Right back up in yo muthafuckin ass. Same as the
.B driver
descriptor.
.TP
.BI SYSFS{device/irq} " value"
Valid only up ta kernel 2.6.20. Right back up in yo muthafuckin ass. Same as the
.B irq
descriptor.
.TP
.BI SYSFS{../irq} " value"
Valid only from kernel 2.6.21. Right back up in yo muthafuckin ass. Same as the
.B irq
descriptor.
.\"
.\" EXAMPLES part
.\"
.SH EXAMPLES
# This be a cold-ass lil comment
.br
eth2		mac 08:00:09:DE:82:0E
.br
eth3		driver wavelan interrupt 15 baseaddress 0x390
.br
eth4		driver pcnet32 businfo 0000:02:05.0
.br
air*		mac 00:07:0E:* arp 1
.br
myvpn	SYSFS{address} 00:10:83:* SYSFS{type} 1
.br
bcm*		SYSFS{device} 0000:03:00.0 SYSFS{device/driver} bcm43xx
.br
bcm*		SYSFS{..} 0000:03:00.0 SYSFS{../driver} bcm43xx
.\"
.\" AUTHOR part
.\"
.SH AUTHOR
Jean Tourrilhes \- jt@hpl.hp.com
.\"
.\" FILES part
.\"
.SH FILES
.I /etc/iftab
.\"
.\" SEE ALSO part
.\"
.SH SEE ALSO
.BR ifrename (8),
.BR ifconfig (8),
.BR ip (8),
.BR ethtool (8),
.BR iwconfig (8).
