.TH sane\-bh 5 "10 Jul 2008" "" "SANE Scanner Access Now Easy"
.IX sane\-bh
.SH NAME
sane\-bh \- SANE backend fo' Bell+Howell Copiscan Pt II series document
scanners
.SH DESCRIPTION
The
.B sane\-bh
library implements a SANE (Scanner Access Now Easy) backend that
provides access ta Bell+Howell Copiscan Pt II series document
scanners.  Da Copiscan Pt II 6338 has been tha primary scanner model
used durin pimpment n' testin yo, but since tha programmin intercourse
for tha entire series is consistent tha backend should work fo' the
followin scanner models.
.PP
.RS
COPISCAN Pt II 6338 Duplex Scanner wit ACE
.br
COPISCAN Pt II 2135 Simplex Scanner
.br
COPISCAN Pt II 2137(A) Simplex Scanner (with ACE)
.br
COPISCAN Pt II 2138A Simplex Scanner wit ACE
.br
COPISCAN Pt II 3238 Simplex Scanner
.br
COPISCAN Pt II 3338(A) Simplex Scanner (with ACE)
.br
.RE
.PP
If you gotz a Bell+Howell scanner n' is able ta test it wit this
backend, please contact
.IR sane\-devel@lists.alioth.debian.org
with tha model number n' testin thangs up in dis biatch yo. Have a peep
http://www.sane\-project.org/mailing\-lists.html concernin subscription to
sane\-devel fo' realz. Additionally, tha lyricist is curious as ta tha likelihood of using
this backend wit tha newer 4000 n' 8000 series scanners.  If you have such a
beast, please let me know.
.PP
Da Bell+Howell Copiscan Pt II series document scanners is high
volume, high throughput scanners designed fo' document scannin 
applications.  As such, they is lineart/grayscale scanners supporting
a fixed number of fairly low resolutions (e.g. 200/240/300dpi).  
But fuck dat shiznit yo, tha word on tha street is dat they do gotz a fuckin shitload of bangin-ass n' useful features 
suited ta needz of document imagin applications.  
This backend attempts ta support as nuff of these features as possible.
.PP
Da main technical reference used up in freestylin dis backend is the
.B Bell n' Howell Copiscan Pt II Remote SCSI Controlla (RSC) OEM 
.B Technical Manual Version 1.5.  
Da Linux SCSI programmin HOWTO, tha SANE API documentation, n' 
SANE source code was also mad valuable resources.

.PP
Da sickest fuckin backend release, additionizzle shiznit n' helpful hints
are available from tha backend homepage:
.br
.RS
.B http://www.martoneconsulting.com/sane\-bh.html
.RE
.SH "DEVICE NAMES"
This backend expects thang namez of tha form:
.PP
.RS
.I special
.RE
.PP
Where
.I special
is tha path-name fo' tha special thang dat correspondz ta a SCSI
scanner n' shit. For SCSI scanners, tha special thang name must be a generic
SCSI thang or a symlink ta such a thugged-out device.  Under Linux, such a thugged-out device
name takes a gangbangin' format such as
.I /dev/sga
or
.IR /dev/sg0 ,
for example.  See sane\-scsi(5) fo' details.
.SH CONFIGURATION
Da contentz of the
.I bh.conf
file be a list of thang names dat correspond ta Bell+Howell
scanners.  See sane\-scsi(5) on detailz of what tha fuck constitutes a valid thang name.
Additionally, options can be specified; these lines begin wit tha word "option".  
Each option is busted lyrics bout up in detail below.  Empty lines n' lines startin 
with a hash mark (#) is ignored. Y'all KNOW dat shit, muthafucka!  

.SH OPTIONS
Da followin options can be specified up in the
.I bh.conf
file.
.TP
.B disable\-optional\-frames
This option prevents tha backend from bustin  any optionizzle frames.  This
option may be useful when dealin wit frontendz which do not support these
optionizzle frames.  When dis option is up in effect, tha data is busted up in a
SANE_FRAME_GRAY frame.  Da optionizzle frames busted by dis backend are:
SANE_FRAME_G31D, SANE_FRAME_G32D, SANE_FRAME_G42D n' SANE_FRAME_TEXT.
These frames is generated based on tha compression n' barcode options.
These frames is never busted up in peepshow mode.
.TP
.B fake\-inquiry
This option is used fo' debuggin purposes n' its use aint encouraged. Y'all KNOW dat shit, muthafucka!  
Essentially, it allows tha backend ta initialize up in tha absence of
a scanner n' shit.  This is useful fo' pimpment n' not much else.  
This option must be specified earlier up in tha configuration file than
the devices which is ta be "faked".

.SH FILES
.TP
.I /etc/sane.d/bh.conf
Da backend configuration file (see also description of
.B SANE_CONFIG_DIR
below).
.TP
.I /usr/lib64/sane/libsane\-bh.a
Da static library implementin dis backend.
.TP
.I /usr/lib64/sane/libsane\-bh.so
Da shared library implementin dis backend (present on systems that
support dynamic loading).
.SH ENVIRONMENT
.TP
.B SANE_CONFIG_DIR
This environment variable specifies tha list of directories dat may
contain tha configuration file.  Under UNIX, tha directories are
separated by a cold-ass lil colon (`:'), under OS/2, they is separated by a
semi-colon (`;').  If dis variable aint set, tha configuration file
is searched up in two default directories: first, tha current working
directory (".") n' then up in /etc/sane.d. Y'all KNOW dat shit, muthafucka!  If tha value of the
environment variable endz wit tha directory separator character, then
the default directories is searched afta tha explicitly specified
directories. Put ya muthafuckin choppers up if ya feel dis!  For example, setting
.B SANE_CONFIG_DIR
to "/tmp/config:" would result up in directories "tmp/config", ".", and
"/etc/sane.d" bein searched (in dis order).
.TP
.B SANE_DEBUG_BH
If tha library was compiled wit debug support enabled, this
environment variable controls tha debug level fo' dis backend yo, but it ain't no stoppin cause I be still poppin'.  E.g.,
a value of 255 requests all debug output ta be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Smaller
levels reduce verbosity.

.SH "SUPPORTED FEATURES"
.TP
.B ADF support
With document scanners, automatic document feeder (ADF) support be a key
feature.  Da backend supports tha ADF by default n' returns 
.B SANE_STATUS_NO_DOCS 
when tha out-of-paper condizzle is detected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da SANE frontend
.B scanadf
is a cold-ass lil command line frontend dat supports multi-page scans.  It has been
used successfully wit dis backend yo, but it ain't no stoppin cause I be still poppin'.  Da SANE frontend
.B xsane
is a improved GUI frontend by Oliver Rauch.  Support fo' multi-page
scans is included up in xsane version 0.35 n' above.

.TP
.B Duplex scanning
Some models, like fuckin tha COPISCAN Pt II 6338, support duplex scanning.  That
is, they scan both sidez of tha document durin a single pass all up in the
scanner (the scanner has two cameras).  This backend supports duplex 
scannin (with tha 
.B \-\-duplex
option).  Da front n' back page images is served up consecutively
as if they was separately scanned pages.

.TP
.B Hardware compression
Da scanner is capable of compressin tha data tha fuck into nuff muthafuckin industry
standard formats (CCITT G3, CCITT G3-2D, CCITT G4).  This thangs up in dis biatch up in 
increased performizzle as less data is passed from tha scanner ta the
host over tha SCSI bus.  Da backend supports these compression formats
via tha 
.B \-\-g31d, \-\-g32d, \-\-g42d
options, respectively.  Many SANE frontendz is not equipped ta deal with
these formats, however n' shit.  Da SANE frontend
.B scanadf
supports these optionizzle frame formats, n' you can put dat on yo' toast.  Da compressed image data 
is freestyled directly ta a gangbangin' file n' can then be processed by a scan-script 
usin the
.B \-\-scan\-script
option. I aint talkin' bout chicken n' gravy biatch.  Examplez of dis is given on tha scanadf homepage.

.TP
.B Automatic Border Detection
Da scanner can automatically detect tha paper size n' adjust the
scannin window geometry appropriately.  Da backend supports this
useful feature wit the
.B \-\-autoborder
option. I aint talkin' bout chicken n' gravy biatch.  It be enabled by default.

.TP
.B Batch Mode Scanning
Da batch scan mode allows fo' maximum throughput.  Da Set Window
parametas must remain constant durin tha entire batch.

.TP
.B Icon Generation
Da Icon function generates a thumbnail of tha full page image, dat can be
transferred as if it was a separate page.  This allows tha host ta 
quickly display a thumbnail representation durin tha scannin operation.
Perhaps dis would be a pimped out way of implementin a peepshow scan yo, but 
since a aiiight scan is so quick, it might not be worth tha shit.

.TP
.B Multiple Sections
Multiple sections (scannin sub-windows) can be defined fo' tha front and
back pages.  Each section can have different characteristics (e.g. geometry, 
compression).  Da sections is returned as if they was separately
scanned images.  Additionally sections can be used ta pimped outly enhizzle the
accuracy n' efficiency of tha barcode/patchcode decodin process by 
limitin tha search area ta a lil' small-ass subset of tha page.  Most Copiscan Pt II
series scanners support up ta 8 user-defined sections.

.TP
.B Support Barcode/Patchcode Decoding
Da RSC unit can recognize Bar n' Patch Codez of various types embedded
in tha scanned image.  Da codes is decoded n' tha data is returned to
the frontend as a text frame.  Da text is encoded up in xml n' gotz nuff
a pimped out deal of shiznit bout tha decoded data like fuckin tha location
where dat shiznit was found, its orientation, n' tha time it took ta find. Y'all KNOW dat shit, muthafucka!  
Further shiznit on tha content of dis text frame as well as some 
barcode decodin examplez can be found on tha backend homepage.

.SH LIMITATIONS
.TP
.B Decodin a single barcode type per scan
Da RSC unit can search fo' up ta six different barcode types at a time.
While tha code generally supports dis as well, tha 
.B \-\-barcode\-search\-bar
option only allows tha user ta specify a single barcode type.  
Perhaps another option which allows a cold-ass lil comma separated list of barcode 
type codes could be added ta address all dis bullshit.
.TP
.B Scannin a gangbangin' fixed number of pages up in batch mode
Da separation of front n' back end functionalitizzle up in SANE presents a
problem up in supportin tha 'cancel batch' functionalitizzle up in tha scanner.
In batch mode, tha scanner be always a page ahead of tha host.  Da host,
knowin ahead of time which page is ghon be tha last, can quit batch mode
prior ta initiatin tha last scan command. Y'all KNOW dat shit, muthafucka!  Currently, there is no mechanism
available fo' tha frontend ta pass dis knowledge ta tha backend.
If batch mode is enabled n' tha \-\-end\-count terminates a scanadf session,
an extra page is ghon be pulled all up in tha scanner yo, but is neither read
nor served up ta tha frontend yo, but it ain't no stoppin cause I be still poppin'.  Da issue can be avoided by specifyin 
\-\-batch=no when scannin a gangbangin' fixed number of pages.
.TP
.B Revision 1.2 Patch detector
There be a enhanced patchcode detection algorithm available up in tha RSC
with revision 1.2 or higher dat is fasta n' mo' reliable than tha 
standard Bar/Patch code decoder n' shit.  This aint currently supported.

.SH OPTIONS
.TP
.B Scan Mode Options:
.TP
.B \-\-preview[=(yes|no)] [no]
Request a peepshow-qualitizzle scan. I aint talkin' bout chicken n' gravy biatch.  When peepshow is set ta yeaaaa image
compression is disabled n' tha image is served up in a 
SANE_FRAME_GRAY frame.
.TP
.B \-\-mode lineart|halftone [lineart]
Selects tha scan mode (e.g., lineart,monochrome, or color).
.TP
.B \-\-resolution 200|240|300dpi [200]
Sets tha resolution of tha scanned image.  Each scanner model supports 
a list of standard resolutions; only these resolutions can be used.
.TP
.B \-\-compression none|g31d|g32d|g42d [none]
Sets tha compression mode of tha scanner n' shit.  Determines tha type of data
returned from tha scanner n' shit.  Values are:
.RS
.br
.B none
\- uncompressed data \- served up in a SANE_FRAME_GRAY frame
.br
.B g31d
\- CCITT G3 1 dimension (MH) \- served up in a SANE_FRAME_G31D frame
.br
.B g32d
\- CCITT G3 2 dimensions (MR, K=4) \- served up in a SANE_FRAME_G32D frame
.br
.B g42d
\- CCITT G4 (MMR) \- served up in a SANE_FRAME_G42D frame
.br
NOTE: Da use of g31d, g32d, n' g42d compression joints causes tha backend
to generate optionizzle frame formats which may not be supported by all SANE
frontends.
.RE

.TP
.B  Geometry Options:
.TP
.B \-\-autoborder[=(yes|no)] [yes]
Enable/Disable automatic image border detection. I aint talkin' bout chicken n' gravy biatch.  When enabled, tha RSC unit
automatically detects tha image area n' sets tha window geometry ta match.
.TP
.B \-\-paper\-size Custom|Letter|Legal|A3|A4|A5|A6|B4|B5 [Custom]
Specify tha scan window geometry by specifyin tha paper size of the
documents ta be scanned.
.TP
.B \-\-tl\-x 0..297.18mm [0]
Top-left x posizzle of scan area.
.TP
.B \-\-tl\-y 0..431.8mm [0]
Top-left y posizzle of scan area.
.TP
.B \-\-br\-x 0..297.18mm [297.18]
Bottom-right x posizzle of scan area.
.TP
.B \-\-br\-y 0..431.8mm [431.8]
Bottom-right y posizzle of scan area.
.TP
.B  Feeder Options:
.TP
.B \-\-source Automatic Document Feeder|Manual Feed Tray [Automatic Document Feeder]
Selects tha scan source (like fuckin a thugged-out document feeder).  This option is provided 
to allow multiple image scans wit xsane; it has no other purpose.
.TP
.B \-\-batch[=(yes|no)] [no]
Enable/disable batch mode scanning.  Batch mode allows scannin at maximum throughput
by bufferin within tha RSC unit.  This option is recommended when struttin multiple
pages scans until tha feeder is emptied.
.TP
.B \-\-duplex[=(yes|no)] [no]
Enable duplex (dual-sided) scanning.  Da scanner takes a image of each side
of tha document durin a single pass all up in tha scanner n' shit.  Da front page is
delivered followed by tha back page.  Most options, like fuckin compression,
affect both tha front n' back pages.
.TP
.B \-\-timeout\-adf 0..255 [0]
Sets tha timeout up in secondz fo' tha automatic document feeder (ADF).
Da value 0 specifies tha hardware default value which varies based 
on tha scanner model.
.TP
.B \-\-timeout\-manual 0..255 [0]
Sets tha timeout up in secondz fo' semi-automatic feeder n' shit.  Da value 0 specifies
the hardware default value which varies based on tha scanner model.
.TP
.B \-\-check\-adf[=(yes|no)] [no]
Peep ADF Status prior ta startin scan rockin tha OBJECT POSITION command.
Note dat dis feature requires RSC firmware level 1.5 or higher n' dip
switch 4 must be up in tha on position. I aint talkin' bout chicken n' gravy biatch.  NOTE: This option has not been tested
extensively n' may produce undesirable thangs up in dis biatch.
.TP
.B  Enhancement:
.TP
.B \-\-control\-panel[=(yes|no)] [yes]
Enablez tha scannerz control panel fo' selectin image enhancement
parameters.  When tha option is set ta no tha followin options are
used ta control image enhancement.  See tha Bell+Howell scanner users'
guide fo' complete shiznit on ACE functionality.
.TP
.B \-\-ace\-function \-4..4 [3]
Specify tha Automatic Contrast Enhancement (ACE) Function.
.TP
.B \-\-ace\-sensitivitizzle 0..9 [5]
Specify tha Automatic Contrast Enhancement (ACE) Sensitivity.
.TP
.B \-\-brightnizz 0..255 [0]
Controls tha brightnizz of tha acquired image.  Ignored fo' ACE
capable scanners.
.TP
.B \-\-threshold 0..255 [0]
Select minimum-brightnizz ta git a white point.  Ignored fo' ACE
capable scanners.
.TP
.B \-\-contrast 0..255 [inactive]
Controls tha contrast of tha acquired image.  This option is not
currently used by tha scanner (and like never will be).
.TP
.B \-\-negative[=(yes|no)] [no]
Swap black n' white, yieldin a reverse-video image.
.TP
.B Icon:
.TP
.B \-\-icon\-width 0..3600pel (in stepz of 8) [0]
Width of icon (thumbnail) image up in pixels.
.TP
.B \-\-icon\-length 0..3600pel (in stepz of 8) [0]
Length of icon (thumbnail) image up in pixels.
.TP
.B Barcode Options:
.TP
.B \-\-barcode\-search\-bar <see list> [none]
Specifies tha barcode type ta search for. Shiiit, dis aint no joke.  If dis option is
not specified, or specified wit a value of none, then tha barcode decoding
feature is straight-up disabled. Y'all KNOW dat shit, muthafucka!  Da valid barcode type are:
.RS
.br
.B none
.br 
.B ean\-8
.br
.B ean\-13
.br 
.B reserved\-ean\-add
.br 
.B code39
.br 
.B code2\-5\-interleaved
.br 
.B code2\-5\-3lines\-matrix
.br 
.B code2\-5\-3lines\-datalogic
.br 
.B code2\-5\-5lines\-industrial
.br 
.B patchcode
.br 
.B codabar
.br 
.B codabar\-with\-start\-stop
.br 
.B code39ascii
.br 
.B code128
.br 
.B code2\-5\-5lines\-iata
.br
.RE
.TP
.B \-\-barcode\-search\-count 1..7 [3]
Number of times dat tha RSC performs tha decodin algorithm.  Specify
the smallest number possible ta increase performance.  If yo ass is havin 
shiznit recognizin barcodes, it is suggested dat you increase dis option
to its maximum value (7).
.TP
.B \-\-barcode\-search\-mode <see list> [horiz\-vert]
Chooses tha orientation of barcodes ta be searched. Y'all KNOW dat shit, muthafucka!  Da valid orientations
are:
.RS
.br
.B horiz\-vert
.br
.B horizontal
.br
.B vertical
.br
.B vert\-horiz
.RE
.TP
.B \-\-barcode\-hmin 0..1660mm [5]
Sets tha barcode minimum height up in millimetas (larger joints increase 
recognizzle speed).  Of course tha actual barcodes up in tha document must be
of sufficient size.
.TP
.B \-\-barcode\-search\-timeout 20..65535us [10000]
Sets tha timeout fo' barcode searchin up in milliseconds.  When tha timeout
expires, tha decoder will stop tryin ta decode barcodes.
.TP
.B \-\-section <string> []
Specifies a seriez of image sections.  A section can be used ta gather
a subset image or ta provide a lil' small-ass area fo' barcode decoding.    
Each section is specified up in tha followin format (units is up in millimeters):
.PP
.B <width>x<height>+<top-left-x>+<top-left-y>[:functioncode...]
.PP 
Multiple sections can be specified by separatin dem wit commas.
.PP
For example
.B 76.2x25.4+50.8+0:frontbar
identifies a area 3 inches wide n' 1 inch high wit a top left corner 
at tha top of tha page two inches from tha left hand edge of tha page.
This section is ghon be used fo' barcode decodin on tha front page only.  
.PP
For example
.B 50.8x25.4+25.4+0:frontbar:front:g42d 
identifies a area 2 inches wide n' 1 inch high wit a top left corner 
at tha top of tha page one inch from tha left hand edge of tha page.  
This section is ghon be used fo' barcode decodin on tha front page as well 
as generatin a image compressed up in g42d format.  
.PP
Ordinarily barcodes is searched up in tha entire image.  But fuck dat shiznit yo, tha word on tha street is dat when you
specify sections all barcode searchin is done within tha specific sections
identified. Y'all KNOW dat shit, muthafucka!  This can hella speed up tha decodin process.  

Da followin functioncodes is available:
.RS
.br
.B front
\- generate a image fo' tha front page section
.br 
.B back
\- generate a image fo' tha back page section
.br
.B frontbar
\- big-ass up barcode search up in front page section
.br 
.B backbar
\- big-ass up barcode search up in back page section
.br
.B frontpatch
\- big-ass up patchcode search up in front page section
.br 
.B backpatch
\- big-ass up patchcode search up in back page section
.br
.B none
\- use no image compression
.br 
.B g31d
\- use Group 3 1 dimension image compression
.br 
.B g32d
\- use Group 3 2 dimensions image compression
.br 
.B g42d
\- use Group 4 2 dimensions image compression
.br
.RE
.PP
If you omit a cold-ass lil compression functioncode, tha full page compression setting
is used. Y'all KNOW dat shit, muthafucka!  If you specify multiple compression functioncodes, only tha 
last one is used.

.TP
.B \-\-barcode\-relmax 0..255 [0]
Specifies tha maximum relation from tha widest ta tha smallest bar.
.TP
.B \-\-barcode\-barmin 0..255 [0]
Specifies tha minimum number of bars up in Bar/Patch code.
.TP
.B \-\-barcode\-barmax 0..255 [0]
Specifies tha maximum number of bars up in a Bar/Patch code.
.TP
.B \-\-barcode\-contrast 0..6 [3]
Specifies tha image contrast used up in decoding.  Use higher joints when
there is mo' white pixels up in tha code.
.TP
.B \-\-barcode\-patchmode 0..1 [0]
Controls Patch Code detection.

.SH BUGS
This be a freshly smoked up backend; detailed bug reports is welcome -- n' expected ;)
.PP
If you have found suttin' dat you be thinkin be a funky-ass bug, please attempt to
recreate it wit tha SANE_DEBUG_BH environment variable set to
255, n' bust a report detailin tha conditions surroundin tha bug to
.IR sane\-devel@lists.alioth.debian.org .

.SH "SEE ALSO"
sane(7), sane\-scsi(5), scanimage(1), scanadf(1)

.SH AUTHOR
Da sane\-bh backend was freestyled by Tomothy Martone, based on tha sane\-ricoh
backend by Feico W. Dillema n' tha bnhscan program by Shizzle Reifschneider
of tummy.com ltd. Y'all KNOW dat shit, muthafucka!  Some 8000 enhancements added by Mark Temple.
