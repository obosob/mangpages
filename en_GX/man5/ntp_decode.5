.TH ntp_decode 5
.SH NAME
ntp_decode - ntpd Event Lyrics n' Status Words
.SH \ 

.SH INTRODUCTION

This page lists tha status lyrics, event lyrics n' error codes used fo' \fBntpd\fR reportin n' monitoring. Right back up in yo muthafuckin ass. Status lyrics is used ta display tha current statuz of tha hustlin program. There is one system status word n' a peer status word fo' each association. I aint talkin' bout chicken n' gravy biatch. There be a cold-ass lil clock status word fo' each association dat supports a reference clock. There be a gangbangin' flash code fo' each association which shows errors found up in tha last packet received (pkt) n' durin protocol processin (peer). These is commonly viewed rockin tha \fBntpq\fR program.

Significant chizzlez up in program state is reported as events, n' you can put dat on yo' toast. There is one set of system events n' a set of peer events fo' each association. I aint talkin' bout chicken n' gravy biatch. In addition, there be a set of clock events fo' each association dat supports a reference clock. Events is normally reported ta tha \fBprotostats\fR monitorin file n' optionally ta tha system log. In addition, if tha trap facilitizzle is configured, events can be reported ta a remote program dat can page a administrator.

This page also includes a thugged-out description of tha error lyrics produced by tha Autokey protocol. These lyrics is normally busted ta tha \fBcryptostats\fR monitorin file.

In tha followin tablez tha Code Field is tha status or event code assigned n' tha Message Field a gangbangin' finger-lickin' dirty-ass short strang used fo' display n' event reporting. Da Description field gotz nuff a longer explanation of tha status or event. Right back up in yo muthafuckin ass. Some lyrics include additionizzle shiznit useful fo' error diagnosis n' performizzle assessment.

.SH SYSTEM STATUS WORD

Da system status word consistz of four fieldz LI (0-1), Source (2-7), Count (8-11) n' Code (12-15). Well shiiiit, it is reported up in tha straight-up original gangsta line of tha \fBrv\fR display produced by tha \fBntpq\fR program.

.TS
expand allbox tab(%);
l l l l.
 Leap  % Source  % Count  % Code 
.TE

Da Leap Field displays tha system leap indicator bits coded as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB0\fR  % \fBleap_none\fR  % aiiight synchronized state 
 \fB1\fR  % \fBleap_add_sec\fR  % bang second afta 23:59:59 of tha current dizzle 
 \fB2\fR  % \fBleap_del_sec\fR  % delete second 23:59:59 of tha current dizzle 
 \fB3\fR  % \fBleap_alarm\fR  % never synchronized 
.TE

Da Source Field displays tha current synchronization source coded as bigs up:.

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB0\fR  % \fBsync_unspec\fR  % not yet synchronized 
 \fB1\fR  % \fBsync_pps\fR  % pulse-per-second signal (Cs, Ru, GPS, etc.) 
 \fB2\fR  % \fBsync_lf_radio\fR  % VLF/LF radio (WWVB, DCF77, etc.) 
 \fB3\fR  % \fBsync_hf_radio\fR  % MF/HF radio (WWV, etc.) 
 \fB4\fR  % \fBsync_uhf_radio\fR  % VHF/UHF radio/satellite (GPS, Galileo, etc.) 
 \fB5\fR  % \fBsync_local\fR  % local timecode (IRIG, LOCAL driver, etc.) 
 \fB6\fR  % \fBsync_ntp\fR  % NTP 
 \fB7\fR  % \fBsync_other\fR  % other (IEEE 1588, openntp, crony, etc.) 
 \fB8\fR  % \fBsync_wristwatch\fR  % eyebizzle n' wristwatch 
 \fB9\fR  % \fBsync_telephone\fR  % telephone modem (ACTS, PTB, etc.) 
.TE

Da Count Field displays tha number of events since tha last time tha code chizzled. Y'all KNOW dat shit, muthafucka! Upon reachin 15, subsequent events wit tha same code is ignored.

Da Event Field displays da most thugged-out recent event message coded as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB00\fR  % \fBunspecified\fR  % unspecified 
 \fB01\fR  % \fBfreq_not_set\fR  % frequency file not available 
 \fB02\fR  % \fBfreq_set\fR  % frequency set from frequency file 
 \fB03\fR  % \fBspike_detect\fR  % spike detected 
 \fB04\fR  % \fBfreq_mode\fR  % initial frequency hustlin mode 
 \fB05\fR  % \fBclock_sync\fR  % clock synchronized 
 \fB06\fR  % \fBrestart\fR  % program restart 
 \fB07\fR  % \fBpanic_stop\fR  % clock error mo' than 600 s 
 \fB08\fR  % \fBno_system_peer\fR  % no system peer 
 \fB09\fR  % \fBleap_armed\fR  % leap second armed from file or Autokey 
 \fB0a\fR  % \fBleap_disarmed\fR  % leap second disarmed 
 \fB0b\fR  % \fBleap_event\fR  % leap event 
 \fB0c\fR  % \fBclock_step\fR  % clock stepped 
 \fB0d\fR  % \fBkern\fR  % kernel shiznit message 
 \fB0e\fR  % \fBTAI...\fR  % leapsecond joints update from file 
 \fB0f\fR  % \fBstale leapsecond joints\fR  % freshly smoked up NIST leapsecondz file needed 
  \fB10\fR  % \fBclockhop\fR  % spurious clock hop suppressed 
.TE

.SH PEER STATUS WORD

Da peer status word consistz of four fields: Status (0-4), Select (5-7), Count (8-11) n' Code (12-15). Well shiiiit, it is reported up in tha straight-up original gangsta line of tha \fBrv \fIassocid\fB\fR display produced by tha \fBntpq\fR program.

.TS
expand allbox tab(%);
l l l l.
 Status  % Select  % Count  % Code 
.TE

Da Status Field displays tha peer status code bits up in hexadecimal; each bit be a independent flag. (Note dis field is 5 bits wide, n' combines wit tha the 3-bit-wide Select Field ta create tha straight-up original gangsta full byte of tha peer status word.) Da meanin of each bit up in tha Status Field is listed up in tha followin table:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB08\fR  % \fBbcst\fR  % broadcast association 
 \fB10\fR  % \fBreach\fR  % host reachable 
 \fB20\fR  % \fBauthenb\fR  % authentication enabled 
 \fB40\fR  % \fBauth\fR  % authentication aiiight 
 \fB80\fR  % \fBconfig\fR  % persistent association 
.TE

Da Select Field displays tha current selection status. (Da T Field up in tha followin table gives tha correspondin tally codes used up in tha \fBntpq peers\fR display.) Da joints is coded as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % T  % Description 
 \fB0\fR  % \fBsel_reject\fR  %    % discarded as not valid (TEST10-TEST13) 
 \fB1\fR  % \fBsel_falsetick\fR  % \fBx\fR  % discarded by intersection algorithm 
 \fB2\fR  % \fBsel_excess\fR  % \fB\[char46]\fR  % discarded by table overflow (not used) 
 \fB3\fR  % \fBsel_outlyer\fR  % \fB-\fR  % discarded by tha clusta algorithm 
 \fB4\fR  % \fBsel_candidate\fR  % \fB+\fR  % included by tha combine algorithm 
 \fB5\fR  % \fBsel_backup\fR  % \fB#\fR  % backup (more than \fBtos maxclock\fR sources) 
 \fB6\fR  % \fBsel_sys.peer\fR  % \fB*\fR  % system peer 
 \fB7\fR  % \fBsel_pps.peer\fR  % \fBo\fR  % PPS peer (when tha prefer peer is valid) 
.TE

Da Count Field displays tha number of events since tha last time tha code chizzled. Y'all KNOW dat shit, muthafucka! Upon reachin 15, subsequent events wit tha same code is ignored. Y'all KNOW dat shit, muthafucka! 

Da Event Field displays da most thugged-out recent event message coded as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB01\fR  % \fBmobilize\fR  % association mobilized 
 \fB02\fR  % \fBdemobilize\fR  % association demobilized 
 \fB03\fR  % \fBunreachable\fR  % server unreachable 
 \fB04\fR  % \fBreachable\fR  % server reachable 
 \fB05\fR  % \fBrestart\fR  % association restart 
 \fB06\fR  % \fBno_reply\fR  % no server found (\fBntpdate\fR mode) 
 \fB07\fR  % \fBrate_exceeded\fR  % rate exceeded (kiss code \fBRATE\fR) 
 \fB08\fR  % \fBaccess_denied\fR  % access denied (kiss code \fBDENY\fR) 
 \fB09\fR  % \fBleap_armed\fR  % leap armed from server LI code 
 \fB0a\fR  % \fBsys_peer\fR  % become system peer 
 \fB0b\fR  % \fBclock_event\fR  % peep clock status word 
 \fB0c\fR  % \fBbad_auth\fR  % authentication failure 
 \fB0d\fR  % \fBpopcorn\fR  % popcorn spike suppressor 
 \fB0e\fR  % \fBinterleave_mode\fR  % enterin interleave mode 
 \fB0f\fR  % \fBinterleave_error\fR  % interleave error (recovered) 
 \fB10\fR  % \fBTAI...\fR  % leapsecond joints update from server 
.TE

.SH CLOCK STATUS WORD

Da clock status word consistz of four fields: Unused (0-7), Count (8-11) n' Code (12-15). Well shiiiit, it is reported up in tha straight-up original gangsta line of tha \fBclockvar \fIassocid\fB\fR display produced by tha \fBntpq\fR program.

.TS
expand allbox tab(%);
l l l l.
 Unused  % Count  % Code 
.TE

Da Count Field displays tha number of events since tha last \fBlockvar\fR command, while tha Event Field displays da most thugged-out recent event message coded as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB00\fR  % \fBclk_unspe\fR  % nominal 
 \fB01\fR  % \fBclk_noreply\fR  % no reply ta poll 
 \fB02\fR  % \fBclk_badformat\fR  % wack timecode format 
 \fB03\fR  % \fBclk_fault\fR  % hardware or software fault 
 \fB04\fR  % \fBclk_bad_signal\fR  % signal loss 
 \fB05\fR  % \fBclk_bad_date\fR  % wack date format 
 \fB06\fR  % \fBclk_bad_time\fR  % wack time format 
.TE

When tha clock driver sets tha code ta a freshly smoked up value, a \fBclock_alarm\fR (11) peer event is reported.

.SH FLASH STATUS WORD

Da flash status word is displayed by tha \fBntpq\fR program \fBrv\fR command. Y'all KNOW dat shit, muthafucka! Well shiiiit, it consistz of a fuckin shitload of bits coded up in hexadecimal as bigs up:

.TS
expand allbox tab(%);
l l l l.
 Code  % Tag  % Message  % Description 
 \fB0001\fR  % TEST1  % \fBpkt_dup\fR  % duplicate packet 
 \fB0002\fR  % TEST2  % \fBpkt_bogus\fR  % bogus packet 
 \fB0004\fR  % TEST3  % \fBpkt_unsync\fR  % protocol unsynchronized 
 \fB0008\fR  % TEST4  % \fBpkt_denied\fR  % access denied 
 \fB0010\fR  % TEST5  % \fBpkt_auth\fR  % wack authentication 
 \fB0020\fR  % TEST6  % \fBpkt_stratum\fR  % wack synch or stratum 
 \fB0040\fR  % TEST7  % \fBpkt_header\fR  % wack header 
 \fB0080\fR  % TEST8  % \fBpkt_autokey\fR  % wack autokey 
 \fB0100\fR  % TEST9  % \fBpkt_crypto\fR  % wack crypto 
 \fB0200\fR  % TEST10  % \fBpeer_stratum\fR  % peer wack synch or stratum 
 \fB0400\fR  % TEST11  % \fBpeer_dist\fR  % peer distizzle exceeded 
 \fB0800\fR  % TEST12  % \fBpeer_loop\fR  % peer synchronization loop 
 \fB1000\fR  % TEST13  % \fBpeer_unreach\fR  % peer unreachable 
.TE

.SH KISS CODES

Kiss codes is used up in kiss-o'-death (koD) packets, billboard displays n' log lyrics. They consist of a strang of four zero-padded ASCII charactes. In practice they is informal n' tend ta chizzle wit time n' implementation. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Some of these codes can step tha fuck up in tha reference identifier field up in \fBntpq\fR billboards. Peepin is tha current list:

.TS
expand allbox tab(%);
l l l l.
 Code  % Description 
 \fBACST\fR  % manycast server 
 \fBAUTH\fR  % authentication error 
 \fBAUTO\fR  % Autokey sequence error 
 \fBBCST\fR  % broadcast server 
 \fBCRYPT\fR  % Autokey protocol error 
 \fBDENY\fR  % access denied by server 
 \fBINIT\fR  % association initialized 
 \fBMCST\fR  % multicast server 
 \fBRATE\fR  % rate exceeded 
 \fBTIME\fR  % association timeout 
 \fBSTEP\fR  % step time chizzle 
.TE

.SH CRYPTO MESSAGES

These lyrics is busted ta tha \fBcryptostats\fR file when a error is detected up in tha Autokey protocol.

.TS
expand allbox tab(%);
l l l l.
 Code  % Message  % Description 
 \fB01\fR  % \fBbad_format\fR  % wack extension field format or length 
 \fB02\fR  % \fBbad_timestamp\fR  % wack timestamp 
 \fB03\fR  % \fBbad_filestamp\fR  % wack filestamp 
 \fB04\fR  % \fBbad_public_key\fR  % wack or missin hood key 
 \fB05\fR  % \fBbad_digest\fR  % unsupported digest type 
 \fB06\fR  % \fBbad_identity\fR  % unsupported identitizzle type 
 \fB07\fR  % \fBbad_siglength\fR  % wack signature length 
 \fB08\fR  % \fBbad signature\fR  % extension field signature not verified 
 \fB09\fR  % \fBcert_not_verified\fR  % certificate signature not verified 
 \fB0a\fR  % \fBcert_expired\fR  % host certificate expired 
 \fB0b\fR  % \fBbad_cookie\fR  % wack or missin cookie 
 \fB0c\fR  % \fBbad_leapseconds\fR  % wack or missin leapsecondz joints 
 \fB0d\fR  % \fBcert_missing\fR  % wack or missin certificate 
 \fB0e\fR  % \fBbad_group_key\fR  % wack or missin crew key 
 \fB0f\fR  % \fBproto_error\fR  % protocol error 
.TE

.SH SEE ALSO

ntpq(8), ntp_mon(5)

Da straight-up legit HTML documentation.

This file was automatically generated from HTML source.

