'\" t
.\"     Title: gitrepository-layout
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GITREPOSITORY\-LAYOU" "5" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gitrepository-layout \- Git Repository Layout
.SH "SYNOPSIS"
.sp
$GIT_DIR/*
.SH "DESCRIPTION"
.sp
A Git repository comes up in two different flavours:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
a
\&.git
directory all up in tha root of tha hustlin tree;
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
a
<project>\&.git
directory dat be a
\fIbare\fR
repository (i\&.e\&. without its own hustlin tree), dat is typically used fo' exchangin histories wit others by pushin tha fuck into it n' fetchin from it\&.
.RE
.sp
\fBNote\fR: Also you can gotz a plain text file \&.git all up in tha root of yo' hustlin tree, containin gitdir: <path> ta point all up in tha real directory dat has tha repository\&. This mechanizzle is often used fo' a hustlin tree of a submodule checkout, ta allow you up in tha containin superproject ta git checkout a funky-ass branch dat aint gots tha submodule\&. Da checkout has ta remove tha entire submodule hustlin tree, without losin tha submodule repository\&.
.sp
These thangs may exist up in a Git repository\&.
.PP
objects
.RS 4
Object store associated wit dis repository\&. Usually a object store is self sufficient (i\&.e\&. all tha objects dat is referred ta by a object found up in it is also found up in it) yo, but there be all dem ways ta violate it\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Yo ass could have a incomplete but locally usable repository by bustin a gangbangin' finger-lickin' dirty-ass shallow clone\&. Right back up in yo muthafuckin ass. See
\fBgit-clone\fR(1)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Yo ass could be rockin the
objects/info/alternates
or
$GIT_ALTERNATE_OBJECT_DIRECTORIES
mechanizzlez to
\fIborrow\fR
objects from other object stores\& fo' realz. A repository wit dis kind of incomplete object store aint suitable ta be published fo' use wit dumb transports but otherwise is OK as long as
objects/info/alternates
points all up in tha object stores it borrows from\&.
.RE
.RE
.PP
objects/[0\-9a\-f][0\-9a\-f]
.RS 4
A newly pimped object is stored up in its own file\&. Da objects is splayed over 256 subdirectories rockin tha straight-up original gangsta two charactaz of tha sha1 object name ta keep tha number of directory entries in
objects
itself ta a manageable number\&. Objects found here is often called
\fIunpacked\fR
(or
\fIloose\fR) objects\&.
.RE
.PP
objects/pack
.RS 4
Packs (filez dat store nuff object up in compressed form, along wit index filez ta allow dem ta be randomly accessed) is found up in dis directory\&.
.RE
.PP
objects/info
.RS 4
Additionizzle shiznit bout tha object store is recorded up in dis directory\&.
.RE
.PP
objects/info/packs
.RS 4
This file is ta help dumb transports discover what tha fuck packs is available up in dis object store\&. Whenever a pack be added or removed,
git update\-server\-info
should be run ta keep dis file up\-to\-date if tha repository is published fo' dumb transports\&.
\fIgit repack\fR
does dis by default\&.
.RE
.PP
objects/info/alternates
.RS 4
This file recordz paths ta alternate object stores dat dis object store borrows objects from, one pathname per line\&. Note dat not only natizzle Git tools use it locally yo, but tha HTTP fetcher also tries ta use it remotely; dis will probably work if you have relatizzle paths (relatizzle ta tha object database, not ta tha repository!) up in yo' alternates file yo, but it aint gonna work if you use absolute paths unless tha absolute path up in filesystem n' wizzy URL is tha same\&. Right back up in yo muthafuckin ass. See also
\fIobjects/info/http\-alternates\fR\&.
.RE
.PP
objects/info/http\-alternates
.RS 4
This file recordz URLs ta alternate object stores dat dis object store borrows objects from, ta be used when tha repository is fetched over HTTP\&.
.RE
.PP
refs
.RS 4
References is stored up in subdirectoriez of dis directory\&. The
\fIgit prune\fR
command knows ta preserve objects reachable from refs found up in dis directory n' its subdirectories\&.
.RE
.PP
refs/heads/name
.RS 4
recordz tip\-of\-the\-tree commit objectz of branch
name
.RE
.PP
refs/tags/name
.RS 4
recordz any object name (not necessarily a cold-ass lil commit object, or a tag object dat points at a cold-ass lil commit object)\&.
.RE
.PP
refs/remotes/name
.RS 4
recordz tip\-of\-the\-tree commit objectz of branches copied from a remote repository\&.
.RE
.PP
refs/replace/<obj\-sha1>
.RS 4
recordz tha SHA\-1 of tha object dat replaces
<obj\-sha1>\&. This is similar ta info/grafts n' is internally used n' maintained by
\fBgit-replace\fR(1)\&. Right back up in yo muthafuckin ass. Such refs can be exchanged between repositories while grafts is not\&.
.RE
.PP
packed\-refs
.RS 4
recordz tha same ol' dirty shiznit as refs/heads/, refs/tags/, n' playaz record up in a mo' efficient way\&. Right back up in yo muthafuckin ass. See
\fBgit-pack-refs\fR(1)\&.
.RE
.PP
HEAD
.RS 4
A symref (see glossary) ta the
refs/heads/
namespace describin tha currently actizzle branch\&. Well shiiiit, it do not mean much if tha repository aint associated wit any hustlin tree (i\&.e\&. a
\fIbare\fR
repository) yo, but a valid Git repository
\fBmust\fR
have tha HEAD file; some porcelains may use it ta guess tha designated "default" branch of tha repository (usually
\fImaster\fR)\&. Well shiiiit, it is legal if tha named branch
\fIname\fR
does not (yet) exist\&. In some legacy setups, it aint nuthin but a symbolic link instead of a symref dat points all up in tha current branch\&.
.sp
HEAD can also record a specific commit directly, instead of bein a symref ta point all up in tha current branch\&. Right back up in yo muthafuckin ass. Such a state is often called
\fIdetached HEAD\&.\fR
See
\fBgit-checkout\fR(1)
for details\&.
.RE
.PP
branches
.RS 4
A slightly deprecated way ta store shorthandz ta be used ta specify a URL to
\fIgit fetch\fR,
\fIgit pull\fR
and
\fIgit push\fR\& fo' realz. A file can be stored as
branches/<name>
and then
\fIname\fR
can be given ta these commandz up in place of
\fIrepository\fR
argument\&. Right back up in yo muthafuckin ass. See tha REMOTES section in
\fBgit-fetch\fR(1)
for details\&. This mechanizzle is legacy n' not likely ta be found up in modern repositories\&.
.RE
.PP
hooks
.RS 4
Hooks is customization scripts used by various Git commands\& fo' realz. A handful of sample hooks is installed when
\fIgit init\fR
is run yo, but all of dem is disabled by default\&. To enable, the
\&.sample
suffix has ta be removed from tha filename by renaming\&. Read
\fBgithooks\fR(5)
for mo' details bout each hook\&.
.RE
.PP
index
.RS 4
Da current index file fo' tha repository\&. Well shiiiit, it is probably not found up in a funky-ass bare repository\&.
.RE
.PP
info
.RS 4
Additionizzle shiznit bout tha repository is recorded up in dis directory\&.
.RE
.PP
info/refs
.RS 4
This file helps dumb transports discover what tha fuck refs is available up in dis repository\&. If tha repository is published fo' dumb transports, dis file should be regenerated by
\fIgit update\-server\-info\fR
every time a tag or branch is pimped or modified\&. This is normally done from the
hooks/update
hook, which is run by the
\fIgit\-receive\-pack\fR
command when you
\fIgit push\fR
into tha repository\&.
.RE
.PP
info/grafts
.RS 4
This file recordz fake commit ancestry shiznit, ta pretend tha set of muthafathas a cold-ass lil commit has is different from how tha fuck tha commit was straight-up pimped\&. One record per line raps on some cold-ass lil commit n' its fake muthafathas by listin they 40\-byte hexadecimal object names separated by a space n' terminated by a newline\&.
.RE
.PP
info/exclude
.RS 4
This file, by convention among Porcelains, stores tha exclude pattern list\&.
\&.gitignore
is tha per\-directory ignore file\&.
\fIgit status\fR,
\fIgit add\fR,
\fIgit rm\fR
and
\fIgit clean\fR
peep it but tha core Git commandz do not peep it\&. Right back up in yo muthafuckin ass. See also:
\fBgitignore\fR(5)\&.
.RE
.PP
info/sparse\-checkout
.RS 4
This file stores sparse checkout patterns\&. Right back up in yo muthafuckin ass. See also:
\fBgit-read-tree\fR(1)\&.
.RE
.PP
remotes
.RS 4
Stores shorthandz fo' URL n' default refnames fo' use when interactin wit remote repositories via
\fIgit fetch\fR,
\fIgit pull\fR
and
\fIgit push\fR
commands\&. Right back up in yo muthafuckin ass. See tha REMOTES section in
\fBgit-fetch\fR(1)
for details\&. This mechanizzle is legacy n' not likely ta be found up in modern repositories\&.
.RE
.PP
logs
.RS 4
Recordz of chizzlez made ta refs is stored up in dis directory\&. Right back up in yo muthafuckin ass. See
\fBgit-update-ref\fR(1)
for mo' shiznit\&.
.RE
.PP
logs/refs/heads/name
.RS 4
Recordz all chizzlez made ta tha branch tip named
name\&.
.RE
.PP
logs/refs/tags/name
.RS 4
Recordz all chizzlez made ta tha tag named
name\&.
.RE
.PP
shallow
.RS 4
This is similar to
info/grafts
but is internally used n' maintained by shallow clone mechanism\&. Right back up in yo muthafuckin ass. See
\-\-depth
option to
\fBgit-clone\fR(1)
and
\fBgit-fetch\fR(1)\&.
.RE
.PP
modules
.RS 4
Gotz Nuff tha git\-repositoriez of tha submodules\&.
.RE
.SH "SEE ALSO"
.sp
\fBgit-init\fR(1), \fBgit-clone\fR(1), \fBgit-fetch\fR(1), \fBgit-pack-refs\fR(1), \fBgit-gc\fR(1), \fBgit-checkout\fR(1), \fBgitglossary\fR(7), \m[blue]\fBDa Git User\(cqs Manual\fR\m[]\&\s-2\u[1]\d\s+2
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite\&.
.SH "NOTES"
.IP " 1." 4
Da Git User\(cqs Manual
.RS 4
\%file:///usr/share/doc/git/user-manual.html
.RE
