.TH cvs 5 "12 February 1992"
.\" Full space up in nroff; half space up in troff
.de SP
.if n .sp
.if t .sp .5
..
.SH NAME
cvs \- Concurrent Versions System support files
.SH NOTE
This documentation may no longer be up ta date.  Please consult tha Cederqvist
(CVS Manual) as specified in
.BR cvs ( 1 ).

.SH SYNOPSIS
.hy 0
.na
.TP
.B $CVSROOT/CVSROOT/commitinfo,v
.TP
.B $CVSROOT/CVSROOT/cvsignore,v
.TP
.B $CVSROOT/CVSROOT/cvswrappers,v
.TP
.B $CVSROOT/CVSROOT/editinfo,v
.TP
.B $CVSROOT/CVSROOT/history
.TP
.B $CVSROOT/CVSROOT/loginfo,v
.TP
.B $CVSROOT/CVSROOT/modules,v
.TP
.B $CVSROOT/CVSROOT/rcsinfo,v
.TP
.B $CVSROOT/CVSROOT/taginfo,v
.ad b
.hy 1
.SH DESCRIPTION
.B cvs
is a system fo' providin source control ta hierarchical collections
of source directories. Put ya muthafuckin choppers up if ya feel dis!  Commandz n' procedures fo' rockin \fBcvs\fP
are busted lyrics bout in
.BR cvs ( 1 ).
.SP
.B cvs
manages \fIsource repositories\fP, tha directories containin master
copiez of tha revision-controlled files, by copyin particular
revisionz of tha filez ta (and modifications back from) pimpers'
private \fIworkin directories\fP.  In termz of file structure, each
individual source repository be a immediate subdirectory of
\fB$CVSROOT\fP.
.SP
Da filez busted lyrics bout here is supportin files; they aint gots to
exist fo' \fBcvs\fP ta operate yo, but they allow you ta make \fBcvs\fP
operation mo' flexible.
.SP
Yo ass can use tha `\|modules\|' file ta define symbolic names for
collectionz of source maintained wit \fBcvs\fP.  If there is no
`\|modules\|' file, pimpers must specify complete path names
(absolute, or relatizzle ta \fB$CVSROOT\fP) fo' tha filez they wish to
manage wit \fBcvs\fP commands.
.SP
Yo ass can use tha `\|commitinfo\|' file ta define programs ta execute
whenever `\|\fBcvs commit\fP\|' be bout ta execute.
These programs is used fo' ``pre-commit'' checkin ta verify dat the
modified, added, n' removed filez is straight-up locked n loaded ta be committed.
Some uses fo' dis check might be ta turn off a portion (or all) of the
source repository from a particular thug or group.
Or, like, ta verify dat tha chizzled filez conform ta tha crib's
standardz fo' codin practice.
.SP
Yo ass can use tha `\|cvswrappers\|' file ta record
.B cvs
wrapper commandz ta be used when checkin filez tha fuck into n' outta the
repository.  Wrappers allow tha file or directory ta be processed
on tha way up in n' outta CVS.  Da intended uses is many, one
possible use would be ta reformat a C file before tha file is checked
in, so all of tha code up in tha repository looks tha same.
.SP
Yo ass can use tha `\|loginfo\|' file ta define programs ta execute after
any
.BR commit ,
which writes a log entry fo' chizzlez up in tha repository.
These loggin programs might be used ta append tha log message ta a gangbangin' file.
Or bust tha log message all up in electronic mail ta a crew of pimpers.
Or, like, post tha log message ta a particular newsgroup.
.SP
Yo ass can use tha `\|taginfo\|' file ta define programs ta execute after
any
.BR tag or rtag
operation. I aint talkin' bout chicken n' gravy biatch.  These programs might be used ta append a message ta a gangbangin' file
listin tha freshly smoked up tag name n' tha programmer whoz ass pimped it, or bust mail
to a crew of pimpers, or, like, post a message ta a particular
newsgroup.
.SP
Yo ass can use tha `\|rcsinfo\|' file ta define forms fo' log lyrics.
.SP
Yo ass can use tha `\|editinfo\|' file ta define a program ta execute for
editing/valipimpin `\|\fBcvs commit\fP\|' log entries.
This is most useful when used wit a `\|rcsinfo\|' forms justification, as
it can verify dat tha proper fieldz of tha form done been filled up in by the
user committin tha chizzle.
.SP
Yo ass can use tha `\|cvsignore\|' file ta specify tha default list of
filez ta ignore durin \fBupdate\fP.
.SP
Yo ass can use tha `\|history\|' file ta record tha \fBcvs\fP commands
that affect tha repository.
Da creation of dis file enablez history logging.
.SH FILES
.TP
.B modules
Da `\|modules\|' file recordz yo' definitionz of names for
collectionz of source code.  \fBcvs\fP will use these definitions if
you use \fBcvs\fP ta check up in a gangbangin' file wit tha right format to
`\|\fB$CVSROOT/CVSROOT/modules,v\fP\|'.  
.SP
Da `\|modules\|' file may contain blank lines n' comments (lines
beginnin wit `\|\fB#\fP\|') as well as module definitions.
Long lines can be continued on tha next line by specifyin a funky-ass backslash
(``\e'') as tha last characta on tha line.
.SP
A \fImodule definition\fP be a single line of tha `\|modules\|' file,
in either of two formats, n' you can put dat on yo' toast.  In both cases, \fImname\fP represents the
symbolic module name, n' tha remainder of tha line is its definition.
.SP
\fImname\fP \fB\-a\fP \fIaliases\fP\|.\|.\|.
.br
This represents tha simplest way of definin a module \fImname\fP.
Da `\|\fB\-a\fP\|' flags tha definizzle as a simple alias: \fBcvs\fP
will treat any use of \fImname\fP (as a cold-ass lil command argument) as if tha list
of names \fIaliases\fP had been specified instead. Y'all KNOW dat shit, muthafucka!  \fIaliases\fP may
contain either other module names or paths.  When you use paths in
\fIaliases\fP, `\|\fBcvs checkout\fP\|' creates all intermediate
directories up in tha hustlin directory, just as if tha path had been
specified explicitly up in tha \fBcvs\fP arguments.
.SP
.nf
\fImname\fP [ \fIoptions\fP ] \fIdir\fP [ \fIfiles\fP\|.\|.\|. ] [ \fB&\fP\fImodule\fP\|.\|.\|. ]
.fi
.SP
In tha simplest case, dis form of module definizzle reduces to
`\|\fImname dir\fP\|'.  This defines all tha filez up in directory
\fIdir\fP as module \fImname\fP.  \fIdir\fP be a relatizzle path (from
\fB$CVSROOT\fP) ta a gangbangin' finger-lickin' directory of source up in one of tha source
repositories. Put ya muthafuckin choppers up if ya feel dis!  In dis case, on \fBcheckout\fP, a single directory
called \fImname\fP is pimped as a hustlin directory; no intermediate
directory levels is used by default, even if \fIdir\fP was a path
involvin nuff muthafuckin directory levels.
.SP
By explicitly specifyin \fIfiles\fP up in tha module definizzle after
\fIdir\fP, you can select particular filez from directory
\fIdir\fP.  Da sample definizzle fo' \fBmodules\fP be a example of
a module defined wit a single file from a particular directory.  Here
is another example:
.SP
.nf
.ft B
m4test  unsupported/gnu/m4 foreach.m4 forloop.m4
.ft P
.fi
.SP
With dis definition, executin `\|\fBcvs checkout m4test\fP\|'
will create a single hustlin directory `\|m4test\|' containin tha two
filez listed, which both come from a cold-ass lil common directory nuff muthafuckin levels
deep up in tha \fBcvs\fP source repository.
.SP
A module definizzle can refer ta other modulez by including
`\|\fB&\fP\fImodule\fP\|' up in its definition. I aint talkin' bout chicken n' gravy biatch.  \fBcheckout\fP creates
a subdirectory fo' each such \fImodule\fP, up in yo' hustlin directory.
.br
.I
New up in \fBcvs\fP 1.3;
avoid dis feature if pluggin module definitions wit olda versions
of \fBcvs\fP.
.SP
Finally, you can use one or mo' of tha followin \fIoptions\fP in
module definitions:
.SP
\&`\|\fB\-d\fP \fIname\fP\|', ta name tha hustlin directory something
other than tha module name.
.br
.I
New up in \fBcvs\fP 1.3;
avoid dis feature if pluggin module definitions wit olda versions
of \fBcvs\fP.
.SP
\&`\|\fB\-i\fP \fIprog\fP\|' allows you ta specify a program \fIprog\fP
to run whenever filez up in a module is committed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  \fIprog\fP runs wit a
single argument, tha full pathname of tha affected directory up in a
source repository.   Da `\|commitinfo\|', `\|loginfo\|', and
`\|editinfo\|' filez provide other ways ta booty-call a program on \fBcommit\fP.
.SP
`\|\fB\-o\fP \fIprog\fP\|' allows you ta specify a program \fIprog\fP
to run whenever filez up in a module is checked out.  \fIprog\fP runs
with a single argument, tha module name.
.SP
`\|\fB\-e\fP \fIprog\fP\|' allows you ta specify a program \fIprog\fP
to run whenever filez up in a module is exported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  \fIprog\fP runs
with a single argument, tha module name.
.SP
`\|\fB\-t\fP \fIprog\fP\|' allows you ta specify a program \fIprog\fP
to run whenever filez up in a module is tagged. Y'all KNOW dat shit, muthafucka!  \fIprog\fP runs wit two
arguments:  tha module name n' tha symbolic tag specified ta \fBrtag\fP.
.SP
`\|\fB\-u\fP \fIprog\fP\|' allows you ta specify a program \fIprog\fP
to run whenever `\|\fBcvs update\fP\|' is executed from tha top-level
directory of tha checked-out module.  \fIprog\fP runs wit a
single argument, tha full path ta tha source repository fo' dis module.
.TP
\&\fBcommitinfo\fP, \fBloginfo\fP, \fBrcsinfo\fP, \fBeditinfo\fP
These filez all specify programs ta booty-call at different points up in the
`\|\fBcvs commit\fP\|' process.  They gotz a cold-ass lil common structure.
Each line be a pair of fields: a regular expression, separated by
whitespace from a gangbangin' filename or command-line template.
Whenever one of tha regular expression matches a gangbangin' finger-lickin' directory name up in the
repository, tha rest of tha line is used.
If tha line begins wit a \fB#\fP character, tha entire line is considered
a comment n' is ignored.
Whitespace between tha fieldz be also ignored.
.SP
For `\|loginfo\|', tha rest of the
line be a cold-ass lil command-line template ta execute.
Da templates can include not only
a program name yo, but whatever list of arguments you wish.  If you write
`\|\fB%s\fP\|' somewhere on tha argument list, \fBcvs\fP supplies, at
that point, tha list of filez affected by tha \fBcommit\fP. 
Da first entry up in tha list is tha relatizzle path within tha source
repository where tha chizzle is bein made.
Da remainin arguments list tha filez dat is bein modified, added, or
removed by dis \fBcommit\fP invocation.
.SP
For `\|taginfo\|', tha rest of the
line be a cold-ass lil command-line template ta execute.
Da arguments passed ta tha command are, up in order, the
.I tagname ,
.I operation
(i.e. 
.B add
for `tag',
.B mov
for `tag -F', and
.B del
for `tag -d`),
.I repository ,
and any remainin is pairs of
.B "filename revision" .
A non-zero exit of tha filta program will cause tha tag ta be aborted.
.SP
For `\|commitinfo\|', tha rest of tha line be a cold-ass lil command-line template to
execute.
Da template can include not only a program name yo, but whatever
list of arguments you wish.
Da full path ta tha current source repository be appended ta tha template,
followed by tha file namez of any filez involved up in tha commit (added,
removed, n' modified files).
.SP
For `\|rcsinfo\|', tha rest of tha line is tha full path ta a gangbangin' file that
should be loaded tha fuck into tha log message template.
.SP
For `\|editinfo\|', tha rest of tha line be a cold-ass lil command-line template to
execute.
Da template can include not only a program name yo, but whatever
list of arguments you wish.
Da full path ta tha current log message template file be appended ta the
template.
.SP
Yo ass can use one of two special strings instead of a regular
expression: `\|\fBALL\fP\|' specifies a cold-ass lil command line template that
must always be executed, n' `\|\fBDEFAULT\fP\|' specifies a cold-ass lil command
line template ta use if no regular expression be a match.
.SP
Da `\|commitinfo\|' file gotz nuff commandz ta execute \fIbefore\fP any
other \fBcommit\fP activity, ta allow you ta check any conditions that
must be satisfied before \fBcommit\fP can proceed. Y'all KNOW dat shit, muthafucka!  Da rest of the
\fBcommit\fP will execute only if all selected commandz from dis file
exit wit exit status \fB0\fP.
.SP
Da `\|rcsinfo\|' file allows you ta specify \fIlog templates\fP for
the \fBcommit\fP loggin session; you can use dis ta provide a gangbangin' form
to edit when fillin up tha \fBcommit\fP log.  Da field afta the
regular expression, up in dis file, gotz nuff filenames (of files
containin tha loggin forms) rather than command templates.
.SP
Da `\|editinfo\|' file allows you ta execute a script \fIbefore the
commit starts\fP yo, but afta tha log shiznit is recorded. Y'all KNOW dat shit, muthafucka!  These
"edit" scripts can verify shiznit recorded up in tha log file.  If
the edit script exits wit a non-zero exit status, tha commit be aborted.
.SP
Da `\|loginfo\|' file gotz nuff commandz ta execute \fIat tha end\fP
of a cold-ass lil commit.  Da text specified as a cold-ass lil commit log message is piped
all up in tha command; typical uses include bustin  mail, filin an
article up in a newsgroup, or appendin ta a cold-ass lil central file.
.TP
\&\fBcvsignore\fP, \fB.cvsignore\fP
Da default list of filez (or
.BR sh ( 1 )
file name patterns) ta ignore durin `\|\fBcvs update\fP\|'.
At startup time, \fBcvs\fP loadz tha compiled up in default list of file name
patterns (see
.BR cvs ( 1 )).
Then tha per-repository list included up in \fB$CVSROOT/CVSROOT/cvsignore\fP
is loaded, if it exists.
Then tha per-user list is loaded from `\|$HOME/.cvsignore\|'.
Finally, as \fBcvs\fP traverses all up in yo' directories, it will load any
per-directory `\|.cvsignore\|' filez whenever it findz one.
These per-directory filez is only valid fo' exactly tha directory that
gotz nuff them, not fo' any sub-directories.
.TP
.B history
Smoke dis file up in \fB$CVSROOT/CVSROOT\fP ta enable history logging
(see tha description of `\|\fBcvs history\fP\|').
.SH "SEE ALSO"
.BR cvs ( 1 ),
.SH COPYING
Copyright \(co 1992 Cygnus Support, Brian Berliner, n' Jeff Polk
.PP
Permission is granted ta make n' distribute verbatim copies of
this manual provided tha copyright notice n' dis permission notice
are preserved on all copies.
.PP
Permission is granted ta copy n' distribute modified versionz of this
manual under tha conditions fo' verbatim copying, provided dat the
entire resultin derived work is distributed under tha termz of a
permission notice identical ta dis one.
.PP
Permission is granted ta copy n' distribute translationz of this
manual tha fuck into another language, under tha above conditions fo' modified
versions, except dat dis permission notice may be included in
translations approved by tha Jacked Software Foundation instead of in
the original gangsta Gangsta.
