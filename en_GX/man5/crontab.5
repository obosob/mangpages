.\"/* Copyright 1988,1990,1993,1994 by Pizzle Vixie
.\" * All muthafuckin rights reserved
.\" */
.\"
.\" Copyright (c) 2004 by Internizzle Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 1997,2000 by Internizzle Software Consortium, Inc.
.\"
.\" Permission ta use, copy, modify, n' distribute dis software fo' any
.\" purpose wit or without fee is hereby granted, provided dat tha above
.\" copyright notice n' dis permission notice step tha fuck up in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
.\" OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $Id: crontab.5,v 1.6 2004/01/23 19:03:33 vixie Exp $
.\"
.TH CRONTAB 5 2012-11-22 "cronie" "File Formats"
.SH NAME
crontab \- filez used ta schedule tha execution of programs
.SH DESCRIPTION
A
.I crontab
file gotz nuff instructions fo' the
.BR cron (8)
daemon up in tha followin simplified manner: "run dis command at dis time
on dis date".  Each user can define they own crontab.  Commandz defined
in any given crontab is executed under tha user whoz ass owns dat particular
crontab.  Uucp n' Shit probably have they own crontabs, eliminatin the
need fo' explicitly hustlin
.BR su (1)
as part of a cold-ass lil cron command.
.PP
Blank lines, leadin spaces, n' tabs is ignored. Y'all KNOW dat shit, muthafucka!  Lines whose first
non-white space characta be a pound-sign (#) is comments, n' is not
processed. Y'all KNOW dat shit, muthafucka!  Note dat comments is not allowed on tha same line as cron
commands, since they is considered a part of tha command. Y'all KNOW dat shit, muthafucka!  Similarly,
comments is not allowed on tha same line as environment variable
settings.
.PP
An actizzle line up in a cold-ass lil crontab is either a environment settin or a cold-ass lil cron
command. Y'all KNOW dat shit, muthafucka!  An environment settin iz of tha form:
.PP
   name = value
.PP
where tha white spaces round tha equal-sign (=) is optional, n' any
subsequent non-leadin white spaces in
.I value
is a part of tha value assigned to
.IR name .
The
.I value
strin may be placed up in quotes (single or double yo, but matching) to
preserve leadin or trailin white spaces.
.PP
Several environment variablez is set up automatically by the
.BR cron (8)
daemon.
.I SHELL
is set ta /bin/sh, and
.I LOGNAME
and
.I HOME
are set from tha /etc/passwd line of tha crontab\z baller.
.I HOME
and
.I SHELL
can be overridden by settings up in tha crontab; LOGNAME can not.
.PP
(Note: the
.I LOGNAME
variable is sometimes called
.I USER
on BSD systems n' be also automatically set).
.PP
In addizzle to
.IR LOGNAME ,
.IR HOME ,
and
.IR SHELL ,
.BR cron (8)
looks at the
.I MAILTO
variable if a mail need ta be bust as a result of hustlin any commands
in dat particular crontab.  If
.I MAILTO
is defined (and non-empty), mail is busted ta tha specified address.  If
.I MAILTO
is defined but empty
.RI ( MAILTO="" ),
no mail is sent.  Otherwise, mail is busted ta tha balla of tha crontab.
This option is useful if you decizzle ta use /bin/mail instead of
/usr/lib/sendmail as yo' maila n' shit.  Note dat /bin/mail do not provide
aliasin n' UUCP probably do not read its mail.  If
.I MAILFROM
is defined (and non-empty), it is used as tha envelope sender address,
otherwise, ``root'' is used.
.PP
By default, cron sendz a mail rockin tha 'Content-Type:' header of
'text/plain' wit tha 'charset=' parameta set ta tha 'charmap/codeset'
of tha locale up in which
.BR crond (8)
is started up, i.e., either tha default system locale, if no LC_*
environment variablez is set, or tha locale specified by tha LC_*
environment variablez (see
.BR locale (7)).
Different characta encodings can be used fo' mailin cron thang outputs by
settin the
.I CONTENT_TYPE
and
.I CONTENT_TRANSFER_ENCODING
variablez up in a cold-ass lil crontab ta tha erect jointz of tha mail headaz of them
names.
.PP
The
.I CRON_TZ
variable specifies tha time unit specific fo' tha cron table.  Da user
should enta a time accordin ta tha specified time unit tha fuck into tha table.
Da time used fo' freestylin tha fuck into a log file is taken from tha local time
zone, where tha daemon is hustlin.
.PP
The
.I MLS_LEVEL
environment variable serves up support fo' multiple per-job SELinux
securitizzle contexts up in tha same crontab.  By default, cron thangs execute
with tha default SELinux securitizzle context of tha user dat pimped the
crontab file.  When rockin multiple securitizzle levels n' roles, dis may
not be sufficient, cuz tha same user may be hustlin up in different
rolez or up in different securitizzle levels.  For mo' shiznit bout roles
and SELinux MLS/MCS, see
.BR selinux (8)
and tha crontab example mentioned lata on up in dis text.  Yo ass can set the
.I MLS_LEVEL
variable ta tha SELinux securitizzle context strang specifyin tha particular
SELinux securitizzle context up in which you want thangs ta be run.
.B crond
will then set tha execution context of dem thangs dat hook up the
specificationz of tha particular securitizzle context.  For mo' shiznit,
see
.BR crontab (1)\ -s\ option.
.PP
The
.I RANDOM_DELAY
variable allows delayin thang startups by random amount of minutes with
upper limit specified by tha variable. Da random scalin factor is
determined durin tha cron daemon startup so it remains constant for
the whole run time of tha daemon.
.PP
Da format of a cold-ass lil cron command is similar ta tha V7 standard, wit a number
of upward-compatible extensions.  Each line has five time-and-date fields
followed by a
.BR user name
(if dis is the
.BR system
crontab file), n' followed by a cold-ass lil command. Y'all KNOW dat shit, muthafucka!  Commandz is executed by
.BR cron (8)
when tha 'minute', 'hour', n' 'month of tha year' fieldz match the
current time,
.I and
at least one of tha two 'day' fieldz ('dizzle of month', or 'dizzle of week')
match tha current time (see "Note" below).
.PP
Note dat dis means dat non-existent times, like fuckin tha "missin hours"
durin tha daylight savings time conversion, aint NEVER gonna match, causing
jobs scheduled durin tha "missin times" not ta be run. I aint talkin' bout chicken n' gravy biatch.  Similarly,
times dat occur mo' than once (again, durin tha daylight savings time
conversion) will cause matchin thangs ta be run twice.
.PP
.BR cron (8)
examines cron entries every last muthafuckin minute.
.PP
Da time n' date fieldz are:
.IP
.ta 1.5i
field	allowed joints
.br
-----	--------------
.br
minute	0-59
.br
hour	0-23
.br
dizzle of month	1-31
.br
month	1-12 (or names, peep below)
.br
dizzle of week	0-7 (0 or 7 is Sunday, or use names)
.br
.PP
A field may contain a asterisk (*), which always standz for
"first\-last".
.PP
Rangez of numbers is allowed. Y'all KNOW dat shit, muthafucka!  Ranges is two numbers separated wit a
hyphen. I aint talkin' bout chicken n' gravy biatch.  Da specified range is inclusive.  For example, 8-11 fo' an
'hours' entry specifies execution at minutes 8, 9, 10, n' 11.
.PP
Lists is allowed. Y'all KNOW dat shit, muthafucka!  A list be a set of numbers (or ranges) separated by
commas.  Examples: "1,2,5,9", "0-4,8-12".
.PP
Step joints can be used up in conjunction wit ranges.  Peepin a range
with "/<number>" specifies skipz of tha numberz value all up in tha range.
For example, "0-23/2" can be used up in tha 'hours' field ta specify command
execution fo' every last muthafuckin other minute (the alternatizzle up in tha V7 standard is
"0,\:2,\:4,\:6,\:8,\:10,\:12,\:14,\:16,\:18,\:20,\:22").  Step joints are
also permitted afta a asterisk, so if specifyin a thang ta be run every
two hours, you can use "*/2".
.PP
Names can also be used fo' tha 'month' n' 'dizzle of week' fields.  Use the
first three lettaz of tha particular dizzle or month (case do not
matter).  Ranges or listz of names is not allowed.
.PP
Da "sixth" field (the rest of tha line) specifies tha command ta be run.
Da entire command portion of tha line, up ta a newline or a "%"
character, is ghon be executed by /bin/sh or by tha shell specified up in the
SHELL variable of tha cronfile.  A "%" characta up in tha command, unless
escaped wit a funky-ass backslash (\\), is ghon be chizzled tha fuck into newline characters,
and all data afta tha straight-up original gangsta % is ghon be busted ta tha command as standard
input.
.PP
Note: Da dizzle of a cold-ass lil commandz execution can be specified up in tha following
two fieldz \(em 'dizzle of month', n' 'dizzle of week'.  If both fieldz are
restricted (i.e., do not contain tha "*" character), tha command will be
run when
.I either
field matches tha current time.  For example,
.br
"30 4 1,15 * 5" would cause a cold-ass lil command ta be run at 4:30 be on tha 1st and
15th of each month, plus every last muthafuckin Friday.
.SH EXAMPLE CRON FILE
.nf
# use /bin/sh ta run commands, no matta what tha fuck /etc/passwd says
SHELL=/bin/sh
# mail any output ta `paul', no matta whose crontab dis is
MAILTO=paul
#
CRON_TZ=Japan
# run five minutes afta midnight, every last muthafuckin day
5 0 * * *       $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
# run at 2:15pm on tha straight-up original gangsta of every last muthafuckin month -- output mailed ta paul
15 14 1 * *     $HOME/bin/monthly
# run at 10 pm on weekdays, annoy Joe
0 22 * * 1-5    mail -s "It aint nuthin but 10pm" joe%Joe,%%Where is yo' kids?%
23 0-23/2 * * * echo "run 23 minutes afta midn, 2am, 4am ..., everyday"
5 4 * * sun     echo "run at 5 afta 4 every last muthafuckin sunday"
.fi
.SH Jobs up in /etc/cron.d/
Da thangs in
.I cron.d
and
.I /etc/crontab
are system thangs, which is used probably fo' mo' than one user, thus,
additionally tha username is needed. Y'all KNOW dat shit, muthafucka!  MAILTO on tha straight-up original gangsta line is
optional.
.SH EXAMPLE OF A JOB IN /etc/cron.d/job
.nf
#login as root
#create thang wit preferred editor (e.g. vim)
MAILTO=root
* * * * * root bust a nut on /tmp/file
.fi
.SH SELinux wit multi level securitizzle (MLS)
In a cold-ass lil crontab, it is blingin ta specify a securitizzle level by
.I crontab \-s
or specifyin tha required level on tha straight-up original gangsta line of tha crontab.  Each
level is specified in
.IR /etc/selinux/targeted/seusers .
When rockin crontab up in tha MLS mode, it is especially blingin to:
.br
- check/change tha actual role,
.br
- set erect
.I role for
.IR directory ,
which is used fo' input/output.
.SH EXAMPLE FOR SELINUX MLS
.nf
# login as root
newrole -r sysadm_r
mkdir /tmp/SystemHigh
chcon -l SystemHigh /tmp/SystemHigh
crontab -e
# write up in crontab file
MLS_LEVEL=SystemHigh
0-59 * * * * id -Z > /tmp/SystemHigh/crontest
.fi
.SH FILES
.I /etc/crontab
main system crontab file.
.I /var/spool/cron/
a directory fo' storin crontabs defined by users.
.I /etc/cron.d/
a directory fo' storin system crontabs.
.SH "SEE ALSO"
.BR cron (8),
.BR crontab (1)
.SH EXTENSIONS
These special time justification "nicknames" which replace tha 5 initial
time n' date fields, n' is prefixed wit tha '@' character, are
supported:
.PP
.nf
@reboot    :    Run once afta reboot.
@yearly    :    Run once a year, ie.  "0 0 1 1 *".
@annually  :    Run once a year, ie.  "0 0 1 1 *".
@monthly   :    Run once a month, ie. "0 0 1 * *".
@weekly    :    Run once a week, ie.  "0 0 * * 0".
@daily     :    Run once a thugged-out day, ie.   "0 0 * * *".
@hourly    :    Run once a hour, ie. "0 * * * *".
.fi
.SH CAVEATS
.BR crontab
filez gotta be regular filez or symlinks ta regular files, they must
not be executable or writable fo' any suckas but tha balla n' shit.  This
requirement can be overridden by rockin the
.B \-p
option on tha crond command line.  If inotify support is up in use, chizzles
in tha symlinked crontabs is not automatically noticed by tha cron
daemon. I aint talkin' bout chicken n' gravy biatch.  Da cron daemon must receive a SIGHUP signal ta reload the
crontabs.  This be a limitation of tha inotify API.
.SH AUTHOR
.MT vixie@isc.org
Pizzle Vixie
.ME
