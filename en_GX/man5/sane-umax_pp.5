.TH "sane\-umax_pp" "5" "14 Jul 2008" "" "SANE Scanner Access Now Easy"
.IX sane\-umax_pp
.SH "NAME"
sane\-umax_pp \- SANE backend fo' Umax Astra parallel port flatbed scanners
.SH "DESCRIPTION"
The
.B sane\-umax_pp
library implements a SANE (Scanner Access Now Easy) backend that
provides access ta Umax parallel port flatbed scanners.  The
followin scanners work wit dis backend:
.PP 
.RS
Model:                
.br 
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- 
.br 
Astra 610P         
.br 
Astra 1220P         
.br 
HP3200C            
.br 
Astra 1600P       
.br 
Astra 2000P      
.br 
Genius ColorPage-Life Pro
.br 
.RE
.PP 
This backend handlez 75x75, 150x150, 300x300, 600x600 n' 600x1200 fo' 1220P/1600P/2000P
dpi scan resolutions, n' 75x75, 150x150, 300x300 n' 300x600 fo' 610P. In color n' gray 
levels, there be a software lineart mode.
.PP 
Da freshly smoked up generation models share a newer version of tha 610P ASIC embedded up in a EPAT chip. 
Only parts like fuckin CCD n' ADC chizzle from
one ta another n' shit. They even all reports bein UMAX Astra 1220P via IEEE1284.
There aint software way ta recognize dem properly. Under windows, model is
set by tha driver installed, regardless of tha hardware. 
.PP 
.TP 
.B EPP/ECP MODES ONLY
Da current version of tha backend uses only EPP or ECP mode ta rap 
with tha scanner n' shit. PS/2 mode aint implemented. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da 610P only use SPP. Well shiiiit, it is 
recommended dat you set yo' parallel port ta EPP up in BIOS wit tha current 
version of dis 
backend yo, but it ain't no stoppin cause I be still poppin'. Yo ass can leave it ta ECP or ECP+EPP yo, but up in dis case you may not use
ppdev but only direct hardware access if you gotta use ECP.  ECPEPP will only
work if you bust a 2.4 or 2.6 kernel wit ppdev characta thang support.
.PP 
This backend do support parport pluggin only 
.I 
if you gotz a kernel wit ppdev support.
.I 
.PP 
Note dat if you don't use tha ppdev characta device, tha backend 
needz ta run as root. To allow user access ta tha scanner
run tha backend all up in tha network intercourse (See saned(8) n' sane\-net(5)).
A mo' chillaxed solution (securitizzle wise) is ta add suid bit ta tha frontend
(See chmod(1)).
Da backend drop root priviledges as soon as it can, right afta bustin direct
access ta IO ports, which lessen risks when bein root.

.SH "DEVICE NAMES"
This backend expects thang namez of tha form:
.PP 
.RS
.I port value
.RE
.PP 
Where
\fBvalue\fR is : 

.RS
.TP
auto
autodetect all parallel ports n' probe
them fo' scanner
.TP
safe\-auto
autodetect all parallel ports n' probe
them fo' scanner yo, but do not try direct
hardware access
.TP
/dev/ppi0
uses *BSD ppi device, dependin on the
number of available parallel port, you
have ta use /dev/ppi1, /dev/ppi2, ...
.TP
/dev/parport0
uses linux ppdev device, dependin on the
number of available parallel port, you
have ta use /dev/parport1, /dev/parport2, ...
.TP
0x378
does direct hardware access on tha given
address. Usual joints is 0x378, 0x278, 0x3BC
In dis case, you gotta run tha scanner as 
root (*BSD n' linux), or wit 'IOPL=yes' on
OS/2
.PP 
.RE
\fBNOTE:\fR up in all cases, you must have sufficient priviledges
to git access ta tha chosen thang or address. Dependin on the
securitizzle settings, devices may not be available fo' all users.
Yo ass gotta chizzle permissions on tha dev/ppi* or /dev/parport* devices. 
.PP 
.RE
Yo ass can rename any thang rockin the
.PP 
.RS
.I name devname
.br 
.I model model
.br 
.I vendor vendor
.RE
.PP 
options. These options apply ta tha last port option. I aint talkin' bout chicken n' gravy biatch. 

.SH "CONFIGURATION"
Please make shizzle ta edit umax_pp.conf
.B before
you use tha backend.
.PP 
Da contentz of the
.B umax_pp.conf
file be a list of options n' thang names dat correspond ta Umax
scanners.  Empty lines n' lines startin wit a hash mark (#) are
ignored.
.PP 
Da eight options supported are
.BR red\-gain ,
.BR green\-gain ,
.BR blue\-gain ,
.BR red\-offset ,
.BR green\-offset ,
.BR blue\-offset ,
.BR astra ,
and
.BR buffer .

Options
.B red\-gain
,
.B green\-gain
and
.B blue\-gain
allow you ta adjust tha sensitivitizzle of yo' scanner fo' tha given color. Shiiit, dis aint no joke. Values
range from 0 (lowest gain) ta 15 (highest). If tha advanced option "Gain" aint
checked up in tha frontend, tha backend do automatic bust calibration, n' do not use
user provided joints.

.PP 

Options
.B red\-offset
,
.B green\-offset
and
.B blue\-offset
allow you ta adjust tha offset of yo' scanner fo' tha given color. Shiiit, dis aint no joke. Values
range from 0 (lowest offset) ta 15 (highest). 
.PP 

Option
.B astra
allows you ta chizzle tha model of yo' scanner n' shit. Current auto detection is based
on side effects on scannin when rockin 1220P command set on other models, so
it may fail on unknown hardware combination. I aint talkin' bout chicken n' gravy biatch. Valid joints is 610, 1220, 1600 
and 2000. Well shiiiit, it is useful only when autodetection fails ta detect properly
your scanner model. If yo' scanner work properly but is reported wrongly, 
let it be dat way. 
Da only valid case ta chizzle tha model is when yo' scanner produces "black" or 
"inverted" scans. In dis case you can put tha model. Be aware dat it will 
prevent scanner model autodetection.
.PP 

Option
.B buffer
allows you ta chizzle tha size of tha scan buffer n' shit. Da size must be specified in
bytes. Da default value is 2 megabytes. Decreasin dis value will improve the
smoothnizz of progress bar up in tha frontend yo, but will stall the
scan mo' often.

.PP 



.SH "FILES"
.TP 
.I /etc/sane.d/umax_pp.conf
Da backend configuration file (see also description of
.B SANE_CONFIG_DIR
below).
.TP 
.I /usr/lib64/sane/libsane\-umax_pp.a
Da static library implementin dis backend.
.TP 
.I /usr/lib64/sane/libsane\-umax_pp.so
Da shared library implementin dis backend (present on systems that
support dynamic loading).

.SH "ENVIRONMENT"
.TP 
.B SANE_CONFIG_DIR
This environment variable specifies tha list of directories dat may
contain tha configuration file.  Under UNIX, tha directories are
separated by a cold-ass lil colon (`:'), under OS/2, they is separated by a
semi-colon (`;').  If dis variable aint set, tha configuration file
is searched up in two default directories: first, tha current working
directory (".") n' then up in /etc/sane.d. Y'all KNOW dat shit, muthafucka!  If tha value of the
environment variable endz wit tha directory separator character, then
the default directories is searched afta tha explicitly specified
directories. Put ya muthafuckin choppers up if ya feel dis!  For example, setting
.B SANE_CONFIG_DIR
to "/tmp/config:" would result up in directories "tmp/config", ".", and
"/etc/sane.d" bein searched (in dis order).
.TP 
.B SANE_DEBUG_UMAX_PP
If tha library was compiled wit debug support enabled, this
environment variable controls tha debug level fo' dis backend yo, but it ain't no stoppin cause I be still poppin'.  E.g.,
a value of 128 requests all debug output ta be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Smaller
levels reduce verbosity.

.PP 
.RS
.ft CR
.nf
level   debug output
\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
 0       nothing
 1       errors
 2       warnings & minor errors
 3       additionizzle shiznit
 4       debug shiznit
 5       code flow (not supported yet)
 6       special debug shiznit
.fi
.ft R
.RE
.PP 
.TP 
.B SANE_DEBUG_UMAX_PP_LOW
This variable sets tha debug level fo' tha SANE intercourse fo' tha Umax
ASIC. Note dat enablin dis will spam yo' terminal wit some
mazillion linez of debug output.

.PP 
.RS
.ft CR
.nf
level   debug output
\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
 0       nothing
 1       errors
 8       command blocks
 16      detailed code flow
 32      dump datafilez      
 255     every last muthafuckin thang
.fi
.ft R
.RE
.PP 
 
.PP 
.SH "SEE ALSO"
sane(7), sane\-net(5), saned(8)

.TP 
For sickest fuckin bug fixes n' shiznit see
.I http://umax1220p.sourceforge.net/

.SH "AUTHOR"
St\['e]phane Voltz <stef.dev@free.fr>

.SH "CREDITS"
Support fo' tha 610P has been made possible give props ta ta a hardware donation
by Lil' Willy Stuart.

.SH "BUG REPORTS"
If suttin' don't work, please contact mah dirty ass. But I need some shiznit about
your scanner ta be able ta help yo thugged-out ass...

.TP 
.I SANE version
run "scanimage \-V" ta determine this
.TP 
.I tha backend version n' yo' scanner hardware
run "SANE_DEBUG_UMAX_PP=255 scanimage \-L 2>log" as root. If you don't git any output
from tha umax_pp backend, make shizzle a line "umax_pp" is included into
your /etc/sane.d/dll.conf.
If yo' scanner aint detected, make shizzle you've defined tha right port address, or the
correct thang 
in yo' umax_pp.conf.
.TP 
.I tha name of yo' scanner/vendor
also a worthy shiznit. I aint talkin' bout chicken n' gravy biatch. Please also include tha optical resolution n' lamp type of yo' scanner, both can be found up in tha manual of yo' scanner.
.TP 
.I any further comments
if you have comments bout tha documentation (what could be done better), or you
think I should know something, please include dat shit.
