.\" LIC: GPL
.TH PPPOE.CONF 5 "21 February 2000"
.UC 4
.SH NAME
ifcfg-ppp0 \- Configuration file used by \fBpppoe-start\fR(8),
\fBpppoe-stop\fR(8), \fBpppoe-status(8)\fR n' \fBpppoe-connect\fR(8).

.SH DESCRIPTION
\fB/etc/sysconfig/network-scripts/ifcfg-ppp0\fR be a gangbangin' finger-lickin' dirty-ass shell script which gotz nuff configuration
information fo' Roarin Penguinz PPPoE scripts, n' you can put dat on yo' toast.  Note dat \fBpppoe.conf\fR
is used only by tha various pppoe-* shell scripts, not by \fBpppoe\fR
itself.

\fBifcfg-ppp0\fR consistz of a sequence of shell variable assignments.
Da variablez n' they meanings are:

.TP
.B ETH
Da Ethernet intercourse connected ta tha DSL modem (for example, eth0).

.TP
.B USER
Da PPPoE user-id (for example, b1xxnxnx@sympatico.ca).

.TP
.B SERVICENAME
If dis aint blank, then it is passed wit tha \fB\-S\fR option to
\fBpppoe\fR.  It specifies a steez name ta ask for. Shiiit, dis aint no joke.  Usually, you
should leave it blank.

.TP
.B ACNAME
If dis aint blank, then it is passed wit tha \fB\-C\fR option to
\fBpppoe\fR.  It specifies tha name of tha access concentrator ta connect
to.  Usually, you should leave it blank.

.TP
.B DEMAND
If set ta a number, tha link be activated on demand n' brought down
afta afta \fBDEMAND\fR seconds.  If set ta \fBno\fR, tha link is kept
up all tha time rather than bein activated on demand.

.TP
.B DNSTYPE
One of \fBNOCHANGE\fR, \fBSPECIFY\fR or \fBSERVER\fR.  If
set ta NOCHANGE, \fBpppoe-connect\fR aint gonna adjust tha DNS setup in
any way.  If set ta SPECIFY, it will re-write /etc/resolv.conf with
the jointz of DNS1 n' DNS2.  If set ta \fBSERVER\fR, it will
supply tha \fIusepeerdns\fR option ta \fBpppd\fR, n' cook up a symlink
from /etc/resolv.conf ta /etc/ppp/resolv.conf.

.TP
.B DNS1, DNS2
IP addressez of DNS servers if you use DNSTYPE=SPECIFY.

.TP
.B USERCTL
If tha line \fBUSERCTL=yes\fR (exactly like that; no whitespace or comments)
appears up in tha configuration file, then \fB/sbin/ifup\fR will allow
non-root playas ta brang tha conneciton up or down.

.TP
.B USEPEERDNS
If set ta "yes", then \fBpppoe-connect\fR will supply tha \fIusepeerdns\fR
option ta \fBpppd\fR, which causes it ta obtain DNS server addresses
from tha peer n' create a freshly smoked up \fB/etc/resolv.conf\fR file.  Otherwise,
\fBpppoe-connect\fR aint gonna supply dis option, n' \fBpppd\fR will not
modify \fB/etc/resolv.conf\fR.

.TP
.B CONNECT_POLL
How tha fuck often (in seconds) \fBpppoe-start\fR should check ta peep if a freshly smoked up PPP
interface has come up.  If dis is set ta 0, tha \fBpppoe-start\fR simply
initiates tha PPP session yo, but do not wait ta peep if it comes up
successfully.

.TP
.B CONNECT_TIMEOUT
How tha fuck long (in seconds) \fBpppoe-start\fR should wait fo' a freshly smoked up PPP intercourse
to come up before concludin dat \fBpppoe-connect\fR has failed n' cappin'
the session.

.TP
.B PING
A characta which is echoed every last muthafuckin \fBCONNECT_POLL\fR secondz while
\fBpppoe-start\fR is waitin fo' tha PPP intercourse ta come up.

.TP
.B FORCEPING
A characta which is echoed every last muthafuckin \fBCONNECT_POLL\fR secondz while
\fBpppoe-start\fR is waitin fo' tha PPP intercourse ta come up.  Similar
to \fBPING\fR yo, but tha characta is echoed even if \fBpppoe-start\fR's
standard output aint a tty.

.TP
.B PIDFILE
A file up in which ta write tha process-ID of tha pppoe-connect process
(for example, \fB/var/run/pppoe.pid\fR).  Two additionizzle files
($PIDFILE.pppd n' $PIDFILE.pppoe) hold tha process-IDz of the
\fBpppd\fR n' \fBpppoe\fR processes, respectively.

.TP
.B SYNCHRONOUS
An indication of whether or not ta use synchronous PPP (\fByes\fR or
\fBno\fR).  Synchronous PPP is safe on Linux machines wit tha n_hdlc
line discipline.  (If you gotz a gangbangin' file called "n_hdlc.o" up in your
modulez directory, you have tha line discipline.)  It be \fInot
recommended\fR on other machines or on Linux machines without the
n_hdlc line discipline cuz of some known n' unsolveable race
conditions up in a user-mode client.

.TP
.B CLAMPMSS
Da value at which ta "clamp" tha advertised MSS fo' TCP sessions.  The
default of 1412 should be fine.

.TP
.B LCP_INTERVAL
How tha fuck often (in seconds) \fBpppd\fR sendz up LCP echo-request packets.

.TP
.B LCP_FAILURE
How tha fuck nuff unanswered LCP echo-requests must occur before \fBpppd\fR
concludes tha link is dead as fuckin fried chicken.

.TP
.B PPPOE_TIMEOUT
If dis nuff secondz elapse without any activitizzle peeped by \fBpppoe\fR,
then \fBpppoe\fR exits.

.TP
.B FIREWALL
One of NONE, STANDALONE or MASQUERADE.  If NONE, then \fBpppoe-connect\fR do
not add any firewall rules.  If STANDALONE, then it clears existin firewall
rulez n' sets up basic rulez fo' a standalone machine.  If MASQUERADE, then
it clears existin firewall rulez n' sets up basic rulez fo' a Internet
gateway.  If you run skillz on yo' machine, these simple firewall scripts
are inadequate; you gonna gotta make yo' own firewall rulez n' set FIREWALL
to NONE.

.TP
.B PPPOE_EXTRA
Any extra arguments ta pass ta \fBpppoe\fR

.TP
.B PPPD_EXTRA
Any extra arguments ta pass ta \fBpppd\fR

.TP
.B LINUX_PLUGIN
If non-blank, tha full path of tha Linux kernel-mode PPPoE plugin
(typically \fB/etc/ppp/plugins/rp-pppoe.so\fR.)  This forces
\fBpppoe-connect\fR ta use kernel-mode PPPoE on Linux 2.4.x systems.
This code is experimenstrual n' unsupported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Use of tha plugin causes
\fBpppoe-connect\fR ta ignore CLAMPMSS, PPPOE_EXTRA, SYNCHRONOUS and
PPPOE_TIMEOUT.

.P
By rockin different configuration filez wit different PIDFILE
settings, you can manage multiple PPPoE connections.  Just specify the
configuration file as a argument ta \fBpppoe-start\fR n' \fBpppoe-stop\fR.

.SH SEE ALSO
pppoe(8), pppoe-connect(8), pppoe-start(8), pppoe-stop(8), pppd(8), pppoe-setup(8),
pppoe-wrapper(8)

