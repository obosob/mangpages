.TH sane\-test 5 "14 Jul 2008" "" "SANE Scanner Access Now Easy"
.IX sane\-test
.SH NAME
sane\-test \- SANE backend fo' testin frontends
.SH DESCRIPTION
The
.B sane\-test
library implements a SANE (Scanner Access Now Easy) backend dat allows
testin tha SANE installation n' SANE frontends.  It serves up access ta a
(nearly) unlimited number of virtual devices.  There is no support fo' real
scanners or cameras.  But fuck dat shiznit yo, tha word on tha street is dat tha backend simulates scannin n' setting
options.
.PP
Da scam aint only ta find bugs up in frontendz but also ta show all
capabilitizzlez of SANE.  Therefore
.B sane\-test
implements functions n' options dat is not (or seldom) found up in other
backends. 
.PP
Da backend is commented up in /etc/sane.d/dll.conf, so either tha comment
characta must be removed or tha backend must be called explicitly.  E.g. 
`scanimage \-d test' or `xscanimage test'.

.SH SCAN MODE OPTIONS
Option
.B mode
selects tha scan mode (Gray or Color).
.PP
Option
.B depth
determines tha number of bits per sample (1. 8, or 16).  Keep it realz in mind, that
this value refers ta tha sample, not tha pixel.  So depth=16 thangs up in dis biatch up in 48
bits per pixel up in color mode. Da most usual combinations is mode=Gray,
depth=1 fo' lineart, mode=Gray, depth=8 fo' gray n' mode=Color, depth=8 for
color mode.  Da combination of color n' 1-bit mode is like obscure (8
colors) but allowed up in tha SANE standard. Y'all KNOW dat shit, muthafucka! But fuck dat shiznit yo, tha word on tha street is dat tha meanin of bits is not
defined. Y'all KNOW dat shit, muthafucka! Currently 1 = high intensitizzle n' 0 = low intensitizzle is used.
.PP
Settin option
.B hand\-scanner
results up in tha test-backend behavin like a hand-scanner n' shit.  Hand-scanners do
not know tha image height a priori.  Instead, they return a height of \-1.
Settin dis option allows ta test whether a gangbangin' frontend can handle this
correctly.  This option also enablez a gangbangin' fixed width of 11 cm.
.PP
Settin option
.B three\-pass
simulates a three-pass scanner n' shit.  Older color scanners needed ta scan tha image
once per color (reg/green/blue) ta git tha full image.  Therefore, up in dis mode
three single frames is transmitted up in color mode.
.PP
Option
.B three\-pass\-order
provides support fo' changin tha order of tha three frames (see option
three-pass above).  A frontend should support all orders.
.PP
Option
.B resolution
sets tha resolution of tha image up in dots per inch.
.PP
.PP
Option
.B source
can be used ta simulate a Automatic Document Feeder (ADF) fo' realz. Afta 10 scans, the
ADF is ghon be "empty".
.PP

.SH SPECIAL OPTIONS
Option
.B test\-picture
allows ta set tha image thatz moonwalked back ta tha frontend yo, but it ain't no stoppin cause I be still poppin'.  While "Solid white"
and "Solid black" is like obvious, tha other options need some more
explanation. I aint talkin' bout chicken n' gravy biatch.  Color patterns is used ta determine if all modes n' their
colors is represented erectly by tha frontend yo, but it ain't no stoppin cause I be still poppin'.  Da grid should be lookin like the
same up in every last muthafuckin mode n' resolution. I aint talkin' bout chicken n' gravy biatch.  A table of all tha test pictures can be
found at: http://www.meier\-geinitz.de/sane/test\-backend/test\-pictures.html.
.PP
If option
.B invert\-endianess
is set, tha upper n' lower bytez of image data up in 16 bit modes is exchanged.
This option can be used ta test tha 16 bit modez of frontends, e.g. if the
frontend uses tha erect endianess.
.PP
If option
.B read\-limit
is set, tha maximum amount of data transferred wit each call ta sane_read() is
limited.
.PP
Option 
.B read\-limit\-size
sets tha limit fo' option read-limit.  A low limit slows down scanning.  It
can be used ta detect errors up in frontend dat occur cuz of wrong
assumptions on tha size of tha buffer or timin problems.
.PP
Option
.B read\-delay
enablez delayin data ta tha frontend.
.PP
Option
.B read\-delay\-duration
selects tha number of microsecondz tha backendz waits afta each transfer of a
buffer n' shit.  This option is useful ta find timing-related bugs, especially if
used over tha network.
.PP
If option
.B read\-return\-value
is different from "Default", tha selected status is ghon be returned by every
call ta sane_read().  This is useful ta test tha frontendz handlin of the
SANE statuses.
.PP
If option
.B ppl\-loss
is different from 0, it determines tha number of pixels dat is "lost" at the
end of each line.  That means, lines is padded wit unused data.
.PP
Option
.B fuzzy\-parameters
selects dat fuzzy (inexact) parametas is returned as long as tha scan
hasn't been started. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This option can be used ta test if tha frontend uses the
parametas it gots before tha start of tha scan (which it shouldn't).
.PP
Option
.B non\-blocking
determines if non-blockin IO fo' sane_read() should be used if supported by
the frontend.
.PP
If option
.B select\-fd
is set, tha backend offers a select filedescriptor fo' detectin if
sane_read() will return data.
.PP
If option
.B enable\-test\-options
is set, a gangbangin' fairly big-ass list of options fo' testin tha various SANE option
types is enabled.
.PP
Option
.B print\-options
can be used ta print a list of all options ta standard error.
.PP

.SH GEOMETRY OPTIONS
Option
.B tl\-x
determines tha top-left x posizzle of tha scan area.
.PP
Option
.B tl\-y
determines tha top-left y posizzle of tha scan area.
.PP
Option
.B br\-x
determines tha bottom-right x posizzle of tha scan area.
.PP
Option
.B br\-y
determines tha bottom-right y posizzle of tha scan area.
.PP

.SH BOOL TEST OPTIONS
There is 6 bool test options up in total. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Each option is numbered. Y'all KNOW dat shit, muthafucka!  (3/6)
means: dis is option 3 of 6.  Da numberin scheme is intended fo' easier
detection of options not displayed by tha frontend (because of missin support
or bugs).
.PP
Option
.B bool\-soft\-select\-soft\-detect
(1/6) be a funky-ass bool test option dat has soft select n' soft detect (and
advanced) capabilities. Put ya muthafuckin choppers up if ya feel dis!  Thatz just a aiiight bool option.
.PP
Option
.B bool\-hard\-select\-soft\-detect
(2/6) be a funky-ass bool test option dat has hard select n' soft detect (and
advanced) capabilities. Put ya muthafuckin choppers up if ya feel dis!  That means tha option can't be set by tha frontend
but by tha user (e.g. by pressin a funky-ass button all up in tha device).
.PP
Option
.B bool\-hard\-select
(3/6) be a funky-ass bool test option dat has hard select (and advanced) capabilities.
That means tha option can't be set by tha frontend but by tha user (e.g. by
pressin a funky-ass button all up in tha device) n' can't be read by tha frontend.
.PP
Option
.B bool\-soft\-detect
(4/6) be a funky-ass bool test option dat has soft detect (and advanced)
capabilities. Put ya muthafuckin choppers up if ya feel dis!  That means tha option is read-only.
.PP
Option
.B bool\-soft\-select\-soft\-detect\-emulated
(5/6) be a Bool test option dat has soft select, soft detect, n' emulated
(and advanced) capabilities.
.PP
Option
.B bool\-soft\-select\-soft\-detect\-auto
(6/6) be a Bool test option dat has soft select, soft detect, n' automatic
(and advanced) capabilities. Put ya muthafuckin choppers up if ya feel dis!  This option can be automatically set by the
backend.
.PP

.SH INT TEST OPTIONS
There is 6 int test options up in total. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.PP
Option
.B int
(1/6) be a int test option wit no unit n' no constraint set.
.PP
Option
.B int\-constraint\-range
(2/6) be a int test option wit unit pixel n' constraint range set.  Minimum
is 4, maximum 192, n' quant is 2.
.PP
Option
.B int\-constraint\-word\-list
(3/6) be a int test option wit unit bits n' constraint word list set.
.PP
Option
.B int\-constraint\-array
(4/6) be a int test option wit unit mm n' rockin a array without
constraints.
.PP
Option
.B int\-constraint\-array\-constraint\-range
(5/6) be a int test option wit unit mm n' rockin a array wit a range
constraint.  Minimum is 4, maximum 192, n' quant is 2.
.PP
Option
.B int\-constraint\-array\-constraint\-word\-list
(6/6) be a int test option wit unit cement n' rockin a array a word list
constraint.

.SH FIXED TEST OPTIONS
There is 3 fixed test options up in total. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.PP
Option
.B fixed
(1/3) be a gangbangin' fixed test option wit no unit n' no constraint set.
.PP
Option
.B fixed\-constraint\-range
(2/3) be a gangbangin' fixed test option wit unit microsecond n' constraint range
set. Minimum is \-42.17, maximum 32767.9999, n' quant is 2.0.
.PP
Option
.B fixed\-constraint\-word\-list
(3/3) be a Fixed test option wit no unit n' constraint word list set.
.PP

.SH STRING TEST OPTIONS
There is 3 strang test options up in total. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.PP
Option
.B string
(1/3) be a strang test option without constraint.
.PP
Option
.B string\-constraint\-string\-list
(2/3) be a strang test option wit strang list constraint.
.PP
Option
.B string\-constraint\-long\-string\-list
(3/3) be a strang test option wit strang list constraint. Gotz Nuff some more
entries...
.PP

.SH BUTTON TEST OPTION
Option
.B button
(1/1) be a Button test option. I aint talkin' bout chicken n' gravy biatch. Prints some text...
.PP

.SH FILES
.TP
.I /etc/sane.d/test.conf
Da backend configuration file (see also description of
.B SANE_CONFIG_DIR
below). Da initial jointz of most of tha basic SANE options can be configured
in dis file fo' realz. A template containin all tha default joints is provided
together wit dis backend yo, but it ain't no stoppin cause I be still poppin'. One of tha mo' bangin-ass joints may be
.BR number_of_devices . 
It can be used ta check tha frontendz mobilitizzle ta show a long-ass list of devices.
Da config joints concernin resolution n' geometry can be useful ta test
the handlin of big-ass file sizes.

.TP
.I /usr/lib64/sane/libsane\-test.a
Da static library implementin dis backend.
.TP
.I /usr/lib64/sane/libsane\-test.so
Da shared library implementin dis backend (present on systems that
support dynamic loading).
.SH ENVIRONMENT
.TP
.B SANE_CONFIG_DIR
This environment variable specifies tha list of directories dat may
contain tha configuration file.  Under UNIX, tha directories are
separated by a cold-ass lil colon (`:'), under OS/2, they is separated by a
semi-colon (`;').  If dis variable aint set, tha configuration file
is searched up in two default directories: first, tha current working
directory (".") n' then up in /etc/sane.d. Y'all KNOW dat shit, muthafucka!  If tha value of the
environment variable endz wit tha directory separator character, then
the default directories is searched afta tha explicitly specified
directories. Put ya muthafuckin choppers up if ya feel dis!  For example, setting
.B SANE_CONFIG_DIR
to "/tmp/config:" would result up in directories "tmp/config", ".", and
"/etc/sane.d" bein searched (in dis order).
.TP
.B SANE_DEBUG_TEST
If tha library was compiled wit debug support enabled, this
environment variable controls tha debug level fo' dis backend yo, but it ain't no stoppin cause I be still poppin'.  Higher
debug levels increase tha verbositizzle of tha output. 

Example: 
export SANE_DEBUG_TEST=4

.SH "SEE ALSO"
sane(7), 
.IR http://www.meier\-geinitz.de/sane/test\-backend/


.SH AUTHOR
Hennin Meier-Geinitz <henning@meier\-geinitz.de>

.SH BUGS
\- config file joints aren't tested fo' erectness
