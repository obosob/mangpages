.TH sane\-umax 5 "14 Jul 2008" "" "SANE Scanner Access Now Easy"
.IX sane\-umax

.SH NAME
sane\-umax \- SANE backend fo' UMAX scanners

.SH ABOUT THIS FILE

This file only be a gangbangin' finger-lickin' dirty-ass short description of tha umax-backend fo' sane biaaatch! For detailed shiznit take a peep
sane\-umax\-doc.html (it is included up in tha sane source directory n' up in tha xsane online help)!

.SH DESCRIPTION

The
.B sane\-umax
library implements a SANE backend dat serves up access ta nuff muthafuckin UMAX-SCSI-scanners n' some Linotye Hell SCSI-scanners,
parallel- n' STD-scanners is not (and probably aint NEVER gonna be) supported!

.B I suggest you hold one hand on tha power-button of tha scanner while you try tha straight-up original gangsta scans!

.SH CONFIGURATION

Da configuration file fo' dis backend resides up in 
.IR /etc/sane.d/umax.conf .

Its contents be a list of thang names dat correspond ta UMAX n' UMAX compatible scanners. Empty lines
and lines startin wit a hash mark (#) is ignored. Y'all KNOW dat shit, muthafucka! A sample configuration file is
shown below: 

.nf
 # dis be a cold-ass lil comment
 #
 option scsi\-maxqueue 4
 option scsi\-buffer\-size\-min 65536
 option scsi\-buffer\-size\-max 131072
 option scan\-lines 40
 option peepshow\-lines 10
 option scsi\-maxqueue 2
 option execute\-request\-sense 0
 option force\-preview\-bit\-rgb 0
 option slow\-speed \-1
 option care\-about\-smearin \-1
 option calibration\-full\-ccd \-1
 option calibration\-width\-offset \-1
 option calibration\-bytes\-pixel \-1
 option exposure\-time\-rgb\-bind \-1
 option invert\-shading\-data \-1 
 option lamp\-control\-available 0
 option gamma\-lsb\-padded 0
 /dev/sge 
\ 
 #scsi Vendor Model Type Bus Channel ID LUN 
 # Da followin scanner supports lamp control
 option lamp\-control\-available 1
 scsi UMAX * Scanner * * * * * 
\ 
 # scanner on /dev/scanner do not support lamp control
 option lamp\-control\-available 0
 /dev/scanner 
.fi

.TP
execute\-request\-sense:
values: 0 = disabled, 1 = enabled
.br
default = 0
.br
If set ta 1 umax_do_request_sense is called in
umax_do_calibration. I aint talkin' bout chicken n' gravy biatch. This can hang tha system
(but has been enabled until dis version)
.TP
scsi\-buffer\-size\-min, scsi\-buffer\-size\-max:
values: 4096-1048576
.br
default min = 32768, max = 131072
.br
Especially tha minimum value is straight-up blingin.
If dis value is set too lil' small-ass tha backend is not
able ta bust gamma tablez ta tha scanner or to
do a cold-ass lil erect color calibration. I aint talkin' bout chicken n' gravy biatch. This may result in
strange color effects, n' you can put dat on yo' toast. If tha minimum value is set
too big-ass then tha backend aint able ta allocate
the axed scsi buffer size n' aborts with
out of memory error. Shiiit, dis aint no joke. Da default is 32KB, for
some scanners it should be increased ta 64KB.
.TP
scan\-lines, peepshow\-lines:
values: 1-65535
.br
default: scan\-lines = 40, peepshow\-lines = 10
.br
define tha maximum number of lines dat is scanned
into one buffer
.TP
force\-preview\-bit\-rgb:
values:
0 = disabled,
1 = enabled
.br
default = 0
.br
set peepshow bit up in rgb real scan
.TP
slow\-speed, care\-about\-smearing:
values:
\-1 = auto,
0 = disabled,
1 = enabled
.br
default = \-1
.br
dangerous options, needed fo' some scanners
do not chizzled these options until you straight-up know
what you do, you may destroy yo' scanner when you
define wack joints fo' dis options
.TP
calibration\-full\-ccd:
values:
\-1 = auto,
0 = disabled,
1 = enabled
.br
default = \-1
.br
do calibration fo' each pixel of ccd instead of
selected image
.TP
calibration\-width\-offset:
values: \-99999 = auto, > \-99999 set value
.br
add a offset width ta tha calculated wit for
image/ccd
.TP
calibration\-bytes\-pixel:
values:
\-1 = disabled,
0 = not set,
1 = 1 byte/pixel,
2 = 2 bytes/pixel
.br
use # bytes per pixel fo' calibration
.TP
exposure\-time\-rgb\-bind:
values:
\-1 = automatically set by driver \- if known,
0 = disabled (own selection fo' red, chronic n' blue),
1 = enabled (same joints fo' red, chronic n' blue)
.TP
invert\-shading\-data:
values:
\-1 = automatically set by driver \- if known,
0 = disabled,
1 = enabled
.br
default = \-1
.br
invert shadin data before bustin  it back ta tha scanner
.TP
lamp\-control\-available:
values:
0 = automatically set by driver \- if known,
1 = available
.br
default = 0
.TP
gamma\-lsb\-padded:
values:
\-1 = automatically set by driver \- if known,
0 = gamma data is msb padded,
1 = gamma data is lsb padded
.br
default = \-1
.TP
handle\-bad\-sense\-error:
values:
0 = handle as thang busy,
1 = handle as ok,
2 = handle as i/o error,
3 = ignore wack error code \- continue sense handlez
.br
default = 0
.TP
scsi\-maxqueue:
values:
1..# (maximum defined at compile time)
.br
default = 2
.br
most scsi drivers allow internal command queuein wit a thugged-out depth
of 2 commands. In most cases it do not mprove anythang when you
increase dis value. When yo' scsi driver do not support any
command queuein you can try ta set dis value ta 1.

.PP
Da special thang name must be a generic SCSI thang or a symlink ta such a thugged-out device.
To smoke up ta which thang yo' scanner be assigned n' how tha fuck you gotta set the
permissionz of dat device, gotz a peep sane\-scsi. 

.SH SCSI ADAPTER TIPS

Da ISA-SCSI-adaptas dat is shipped wit some Umax-scanners is not supported hella
well by Linux (I suggest not ta use it), tha PCI-SCSI-adaptas dat come wit some
Umax-scanners is not supported at all (as far as I know). On other platforms these
SCSI-adaptas is not supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. So you typically need ta purchase another SCSI-adapter
that is supported by yo' platform. Right back up in yo muthafuckin ass. See tha relevant hardware FAQUIZZYs n' HOWTOs fo' your
platform fo' mo' shiznit. I aint talkin' bout chicken n' gravy biatch. 

Da UMAX-scanners do block tha scsi-bus fo' all dem secondz while scanning. Well shiiiit, it is not
necessary ta connect tha scanner ta its own SCSI-adapter n' shit. But if you need short
response time fo' yo' SCSI-harddisk (e.g. if yo' computa be a gangbangin' file-server) or
other scsi devices, I suggest you use a own SCSI-adapta fo' yo' UMAX-scanner.

If you have any problems wit yo' Umax scanner, check yo' scsi chain
(cable length, termination, ...).

See also: sane\-scsi(5)

.SH FILES

.TP
Da backend configuration file:
.I /etc/sane.d/umax.conf
.TP
Da static library implementin dis backend:
.I /usr/lib64/sane/libsane\-umax.a
.TP
Da shared library implementin dis backend:
.I /usr/lib64/sane/libsane\-umax.so
(present on systems dat support dynamic loading)

.SH ENVIRONMENT

.TP
.B SANE_DEBUG_UMAX
If tha library was compiled wit debug support enabled, dis environment
variable controls tha debug level fo' dis backend yo, but it ain't no stoppin cause I be still poppin'. E.g., a value of 128
requests all debug output ta be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. Smalla levels reduce verbosity:
SANE_DEBUG_UMAX joints

.ft CR
.nf
Number  Remark
\ 
 0       print blingin errors (printed each time)
 1       print errors
 2       print sense
 3       print warnings
 4       print scanner-inquiry
 5       print shiznit
 6       print less blingin shiznit
 7       print called procedures
 8       print reader_process lyrics
 10      print called sane\-init-routines
 11      print called sane\-procedures
 12      print sane infos
 13      print sane option-control lyrics
.fi
.ft R

.TP
Example:
export SANE_DEBUG_UMAX=8

.SH BUGS

X-resolutions pimped outa than 600 dpi sometimes make problems

.SH SEE ALSO
sane(7)

.SH AUTHOR

Oliver Rauch

.SH EMAIL-CONTACT
Oliver.Rauch@Rauch-Domain.DE
