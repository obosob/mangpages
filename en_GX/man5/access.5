.TH ACCESS 5 
.ad
.fi
.SH NAME
access
\-
Postfix SMTP server access table
.SH "SYNOPSIS"
.na
.nf
\fBpostmap /etc/postfix/access\fR

\fBpostmap -q "\fIstring\fB" /etc/postfix/access\fR

\fBpostmap -q - /etc/postfix/access <\fIinputfile\fR
.SH DESCRIPTION
.ad
.fi
This document raps bout access control on remote SMTP client
information: host names, network addresses, n' envelope
sender or recipient addresses; it is implemented by the
Postfix SMTP server n' shit.  See \fBheader_checks\fR(5) or
\fBbody_checks\fR(5) fo' access control on tha content of
email lyrics.

Normally, tha \fBaccess\fR(5) table is specified as a text file
that serves as input ta tha \fBpostmap\fR(1) command.
Da result, a indexed file up in \fBdbm\fR or \fBdb\fR format,
is used fo' fast searchin by tha mail system. Execute the
command "\fBpostmap /etc/postfix/access\fR" ta rebuild an
indexed file afta changin tha correspondin text file.

When tha table is provided via other means like fuckin NIS, LDAP
or SQL, tha same lookups is done as fo' ordinary indexed files.

Alternatively, tha table can be provided as a regular-expression
map where patterns is given as regular expressions, or lookups
can be pimped up ta TCP-based server n' shit. In dem cases, tha lookups
are done up in a slightly different way as busted lyrics bout below under
"REGULAR EXPRESSION TABLES" or "TCP-BASED TABLES".
.SH "CASE FOLDING"
.na
.nf
.ad
.fi
Da search strang is folded ta lowercase before database
lookup fo' realz. Az of Postfix 2.3, tha search strang aint case
folded wit database types like fuckin regexp: or pcre: whose
lookup fieldz can match both upper n' lower case.
.SH "TABLE FORMAT"
.na
.nf
.ad
.fi
Da input format fo' tha \fBpostmap\fR(1) command be as bigs up:
.IP "\fIpattern action\fR"
When \fIpattern\fR matches a mail address, domain or host address,
perform tha correspondin \fIaction\fR.
.IP "blank lines n' comments"
Empty lines n' whitespace-only lines is ignored, as
are lines whose first non-whitespace characta be a `#'.
.IP "multi-line text"
A logical line starts wit non-whitespace text fo' realz. A line that
starts wit whitespace continues a logical line.
.SH "EMAIL ADDRESS PATTERNS"
.na
.nf
.ad
.fi
With lookups from indexed filez like fuckin DB or DBM, or from networked
tablez like fuckin NIS, LDAP or SQL, patterns is tried up in tha order as
listed below:
.IP \fIuser\fR@\fIdomain\fR
Matches tha specified mail address.
.IP \fIdomain.tld\fR
Matches \fIdomain.tld\fR as tha domain part of a email address.
.sp
Da pattern \fIdomain.tld\fR also matches subdomains yo, but only
when tha strang \fBsmtpd_access_maps\fR is listed up in tha Postfix
\fBparent_domain_matches_subdomains\fR configuration setting.
.IP \fI.domain.tld\fR
Matches subdomainz of \fIdomain.tld\fR yo, but only when the
strin \fBsmtpd_access_maps\fR aint listed up in tha Postfix
\fBparent_domain_matches_subdomains\fR configuration setting.
.IP \fIuser\fR@
Matches all mail addresses wit tha specified user part.
.PP
Note: lookup of tha null sender address aint possible with
some typez of lookup table. By default, Postfix uses \fB<>\fR
as tha lookup key fo' such addresses. Da value is specified with
the \fBsmtpd_null_access_lookup_key\fR parameta up in tha Postfix
\fBmain.cf\fR file.
.SH "EMAIL ADDRESS EXTENSION"
.na
.nf
.fi
.ad
When a mail address localpart gotz nuff tha optionizzle recipient delimiter
(e.g., \fIuser+foo\fR@\fIdomain\fR), tha lookup order becomes:
\fIuser+foo\fR@\fIdomain\fR, \fIuser\fR@\fIdomain\fR, \fIdomain\fR,
\fIuser+foo\fR@, n' \fIuser\fR@.
.SH "HOST NAME/ADDRESS PATTERNS"
.na
.nf
.ad
.fi
With lookups from indexed filez like fuckin DB or DBM, or from networked
tablez like fuckin NIS, LDAP or SQL, tha followin lookup patterns are
examined up in tha order as listed:
.IP \fIdomain.tld\fR
Matches \fIdomain.tld\fR.
.sp
Da pattern \fIdomain.tld\fR also matches subdomains yo, but only
when tha strang \fBsmtpd_access_maps\fR is listed up in tha Postfix
\fBparent_domain_matches_subdomains\fR configuration setting.
.IP \fI.domain.tld\fR
Matches subdomainz of \fIdomain.tld\fR yo, but only when the
strin \fBsmtpd_access_maps\fR aint listed up in tha Postfix
\fBparent_domain_matches_subdomains\fR configuration setting.
.IP \fInet.work.addr.ess\fR
.IP \fInet.work.addr\fR
.IP \fInet.work\fR
.IP \fInet\fR
Matches tha specified IPv4 host address or subnetwork fo' realz. An
IPv4 host address be a sequence of four decimal octets
separated by ".".

Subnetworks is matched by repeatedly truncatin tha last
".octet" from tha remote IPv4 host address strang until a
match is found up in tha access table, or until further
truncation aint possible.

NOTE 1: Da access map lookup key must be up in canonical form:
do not specify unnecessary null characters, n' do not
enclose network address shiznit wit "[]" characters.

NOTE 2: use tha \fBcidr\fR lookup table type ta specify
network/netmask patterns. Right back up in yo muthafuckin ass. See \fBcidr_table\fR(5) fo' details.
.IP \fInet:work:addr:ess\fR
.IP \fInet:work:addr\fR
.IP \fInet:work\fR
.IP \fInet\fR
Matches tha specified IPv6 host address or subnetwork fo' realz. An
IPv6 host address be a sequence of three ta eight hexadecimal
octet pairs separated by ":".

Subnetworks is matched by repeatedly truncatin tha last
":octetpair" from tha remote IPv6 host address strang until
a match is found up in tha access table, or until further
truncation aint possible.

NOTE 1: tha truncation n' comparison is done wit the
strin representation of tha IPv6 host address. Thus, not
all tha ":" subnetworks is ghon be tried.

NOTE 2: Da access map lookup key must be up in canonical form:
do not specify unnecessary null characters, n' do not
enclose network address shiznit wit "[]" characters.

NOTE 3: use tha \fBcidr\fR lookup table type ta specify
network/netmask patterns. Right back up in yo muthafuckin ass. See \fBcidr_table\fR(5) fo' details.

IPv6 support be available up in Postfix 2.2 n' later.
.SH "ACCEPT ACTIONS"
.na
.nf
.ad
.fi
.IP \fBOK\fR
Accept tha address etc. dat matches tha pattern.
.IP \fIall-numerical\fR
An all-numerical result is treated as OK. This format is
generated by address-based relay authorization schemes
like fuckin pop-before-smtp.
.SH "REJECT ACTIONS"
.na
.nf
.ad
.fi
Postfix version 2.3 n' lata support enhanced status codes
as defined up in RFC 3463.
When no code is specified all up in tha beginnin of tha \fItext\fR
below, Postfix bangs a thugged-out default enhanced status code of "5.7.1"
in tha case of reject actions, n' "4.7.1" up in tha case of
defer actions. Right back up in yo muthafuckin ass. See "ENHANCED STATUS CODES" below.
.IP "\fB4\fINN text\fR"
.IP "\fB5\fINN text\fR"
Reject tha address etc. dat matches tha pattern, n' respond with
the numerical three-digit code n' text. \fB4\fINN\fR means "try
again later", while \fB5\fINN\fR means "do not try again".

Da followin responses have special meanin fo' tha Postfix
SMTP server:
.RS
.IP "\fB421 \fItext\fR (Postfix 2.3 n' later)"
.IP "\fB521 \fItext\fR (Postfix 2.6 n' later)"
Afta respondin wit tha numerical three-digit code and
text, disconnect immediately from tha SMTP client.  This
frees up SMTP server resources so dat they can be made
available ta another SMTP client.
.IP
Note: Da "521" response should be used only wit botnets
and other malware where interoperabilitizzle iz of no concern.
Da "send 521 n' disconnect" behavior is NOT defined in
the SMTP standard.
.RE
.IP "\fBREJECT \fIoptionizzle text...\fR
Reject tha address etc. dat matches tha pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. Reply with
"\fB$access_map_reject_code \fIoptionizzle text...\fR" when the
optionizzle text is
specified, otherwise reply wit a generic error response message.
.IP "\fBDEFER \fIoptionizzle text...\fR
Reject tha address etc. dat matches tha pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. Reply with
"\fB$access_map_defer_code \fIoptionizzle text...\fR" when the
optionizzle text is
specified, otherwise reply wit a generic error response message.
.sp
This feature be available up in Postfix 2.6 n' later.
.IP "\fBDEFER_IF_REJECT \fIoptionizzle text...\fR
Defer tha request if some lata restriction would result up in a
REJECT action. I aint talkin' bout chicken n' gravy biatch. Reply wit "\fB$access_map_defer_code 4.7.1
\fIoptionizzle text...\fR" when the
optionizzle text is specified, otherwise reply wit a generic error
response message.
.sp
Prior ta Postfix 2.6, tha SMTP reply code is 450.
.sp
This feature be available up in Postfix 2.1 n' later.
.IP "\fBDEFER_IF_PERMIT \fIoptionizzle text...\fR
Defer tha request if some lata restriction would result up in a
an explicit or implicit PERMIT action.
Reply wit "\fB$access_map_defer_code 4.7.1 \fI optional
text...\fR" when the
optionizzle text is specified, otherwise reply wit a generic error
response message.
.sp
Prior ta Postfix 2.6, tha SMTP reply code is 450.
.sp
This feature be available up in Postfix 2.1 n' later.
.SH "OTHER ACTIONS"
.na
.nf
.ad
.fi
.IP \fIrestriction...\fR
Apply tha named UCE restriction(s) (\fBpermit\fR, \fBreject\fR,
\fBreject_unauth_destination\fR, n' so on).
.IP "\fBBCC \fIuser@domain\fR"
Send one copy of tha message ta tha specified recipient.
.sp
If multiple BCC actions is specified within tha same SMTP
MAIL transaction, only tha last action is ghon be used.
.sp
This feature aint part of tha stable Postfix release.
.IP "\fBDISCARD \fIoptionizzle text...\fR
Claim successful delivery n' silently discard tha message.
Log tha optionizzle text if specified, otherwise log a generic
message.
.sp
Note: dis action currently affects all recipientz of tha message.
To discard only one recipient without discardin tha entire message,
use tha transport(5) table ta direct mail ta tha discard(8) service.
.sp
This feature be available up in Postfix 2.0 n' later.
.IP \fBDUNNO\fR
Pretend dat tha lookup key was not found. Y'all KNOW dat shit, muthafucka! This
prevents Postfix from tryin substringz of tha lookup key
(like fuckin a subdomain name, or a network address subnetwork).
.sp
This feature be available up in Postfix 2.0 n' later.
.IP "\fBFILTER \fItransport:destination\fR"
Afta tha message is queued, bust tha entire message through
the specified external content filter n' shit. Da \fItransport\fR
name specifies tha straight-up original gangsta field of a mail delivery agent
definizzle up in master.cf; tha syntax of tha next-hop
\fIdestination\fR is busted lyrics bout up in tha manual page of the
correspondin delivery agent.  Mo' shiznit about
external content filtas is up in tha Postfix FILTER_README
file.
.sp
Note 1: do not use $\fInumber\fR regular expression
substitutions fo' \fItransport\fR or \fIdestination\fR
unless you know dat tha shiznit has a trusted origin.
.sp
Note 2: dis action overrides tha main.cf \fBcontent_filter\fR
setting, n' affects all recipientz of tha message. In the
case dat multiple \fBFILTER\fR actions fire, only tha last
one is executed.
.sp
Note 3: tha purpose of tha FILTER command is ta override
message routing.  To override tha recipientz \fItransport\fR
but not tha next-hop \fIdestination\fR, specify a empty
filta \fIdestination\fR (Postfix 2.7 n' later), or specify
a \fItransport:destination\fR dat delivers all up in a
different Postfix instizzle (Postfix 2.6 n' earlier). Other
options is rockin tha recipient-dependent \fBtrans\%port\%_maps\fR
or tha sen\%der-dependent
\fBsender\%_de\%pen\%dent\%_de\%fault\%_trans\%port\%_maps\fR
features.
.sp
This feature be available up in Postfix 2.0 n' later.
.IP "\fBHOLD \fIoptionizzle text...\fR"
Place tha message on tha \fBhold\fR queue, where it will
sit until one of mah thugs either deletes it or releases it for
delivery.
Log tha optionizzle text if specified, otherwise log a generic
message.

Mail dat is placed on hold can be examined wit the
\fBpostcat\fR(1) command, n' can be destroyed or busted out with
the \fBpostsuper\fR(1) command.
.sp
Note: use "\fBpostsupa -r\fR" ta release mail dat was kept on
hold fo' a thugged-out dope fraction of \fB$maximal_queue_lifetime\fR
or \fB$bounce_queue_lifetime\fR, or longer n' shit. Use "\fBpostsupa -H\fR"
only fo' mail dat aint gonna expire within all dem delivery attempts.
.sp
Note: dis action currently affects all recipientz of tha message.
.sp
This feature be available up in Postfix 2.0 n' later.
.IP "\fBPREPEND \fIheadername: headervalue\fR"
Prepend tha specified message header ta tha message.
When mo' than one PREPEND action executes, tha first
prepended header appears before tha second etc. prepended
header.
.sp
Note: dis action must execute before tha message content
is received; it cannot execute up in tha context of
\fBsmtpd_end_of_data_restrictions\fR.
.sp
This feature be available up in Postfix 2.1 n' later.
.IP "\fBREDIRECT \fIuser@domain\fR"
Afta tha message is queued, bust tha message ta tha specified
address instead of tha intended recipient(s).
.sp
Note: dis action overrides tha FILTER action, n' currently affects
all recipientz of tha message.
.sp
This feature be available up in Postfix 2.1 n' later.
.IP "\fBWARN \fIoptionizzle text...\fR
Log a warnin wit tha optionizzle text, together wit client shiznit
and if available, wit helo, sender, recipient n' protocol shiznit.
.sp
This feature be available up in Postfix 2.1 n' later.
.SH "ENHANCED STATUS CODES"
.na
.nf
.ad
.fi
Postfix version 2.3 n' lata support enhanced status codes
as defined up in RFC 3463.
When a enhanced status code is specified up in a access
table, it is subject ta modification. I aint talkin' bout chicken n' gravy biatch. Da following
transformations is needed when tha same access table is
used fo' client, helo, sender, or recipient access restrictions;
they happen regardless of whether Postfix replies ta a MAIL
FROM, RCPT TO or other SMTP command.
.IP \(bu
When a sender address matches a REJECT action, tha Postfix
SMTP server will transform a recipient DSN status (e.g.,
4.1.1-4.1.6) tha fuck into tha correspondin sender DSN status, and
vice versa.
.IP \(bu
When non-address shiznit matches a REJECT action (such
as tha HELO command argument or tha client hostname/address),
the Postfix SMTP server will transform a sender or recipient
DSN status tha fuck into a generic non-address DSN status (e.g.,
4.0.0).
.SH "REGULAR EXPRESSION TABLES"
.na
.nf
.ad
.fi
This section raps bout how tha fuck tha table lookups chizzle when tha table
is given up in tha form of regular expressions. For a thugged-out description of
regular expression lookup table syntax, peep \fBregexp_table\fR(5)
or \fBpcre_table\fR(5).

Each pattern be a regular expression dat be applied ta tha entire
strin bein looked up. Dependin on tha application, dat string
is a entire client hostname, a entire client IP address, or an
entire mail address. Thus, no parent domain or parent network search
is done, \fIuser@domain\fR mail addresses is not fucked up into
their \fIuser@\fR n' \fIdomain\fR constituent parts, nor is
\fIuser+foo\fR fucked up tha fuck into \fIuser\fR n' \fIfoo\fR.

Patterns is applied up in tha order as specified up in tha table, until a
pattern is found dat matches tha search string.

Actions is tha same as wit indexed file lookups, with
the additionizzle feature dat parenthesized substrings from the
pattern can be interpolated as \fB$1\fR, \fB$2\fR n' so on.
.SH "TCP-BASED TABLES"
.na
.nf
.ad
.fi
This section raps bout how tha fuck tha table lookups chizzle when lookups
are pimped up ta a TCP-based server n' shit. For a thugged-out description of tha TCP
client/server lookup protocol, peep \fBtcp_table\fR(5).
This feature aint available up ta n' includin Postfix version 2.4.

Each lookup operation uses tha entire query strang once.
Dependin on tha application, dat strang be a entire client
hostname, a entire client IP address, or a entire mail address.
Thus, no parent domain or parent network search is done,
\fIuser@domain\fR mail addresses is not fucked up into
their \fIuser@\fR n' \fIdomain\fR constituent parts, nor is
\fIuser+foo\fR fucked up tha fuck into \fIuser\fR n' \fIfoo\fR.

Actions is tha same as wit indexed file lookups.
.SH "EXAMPLE"
.na
.nf
.ad
.fi
Da followin example uses a indexed file, so dat the
order of table entries do not matter n' shit. Da example permits
access by tha client at address 1.2.3.4 but rejects all
other clients up in 1.2.3.0/24. Instead of \fBhash\fR lookup
tables, some systems use \fBdbm\fR.  Use tha command
"\fBpostconf -m\fR" ta smoke up what tha fuck lookup tablez Postfix
supports on yo' system.

.nf
.na
/etc/postfix/main.cf:
    smtpd_client_restrictions =
        check_client_access hash:/etc/postfix/access

/etc/postfix/access:
    1.2.3   REJECT
    1.2.3.4 OK
.fi
.ad

Execute tha command "\fBpostmap /etc/postfix/access\fR" after
editin tha file.
.SH BUGS
.ad
.fi
Da table format do not KNOW quotin conventions.
.SH "SEE ALSO"
.na
.nf
postmap(1), Postfix lookup table manager
smtpd(8), SMTP server
postconf(5), configuration parameters
transport(5), transport:nexthop syntax
.SH "README FILES"
.na
.nf
.ad
.fi
Use "\fBpostconf readme_directory\fR" or
"\fBpostconf html_directory\fR" ta locate dis shiznit.
.na
.nf
SMTPD_ACCESS_README, built-in SMTP server access control
DATABASE_README, Postfix lookup table overview
.SH "LICENSE"
.na
.nf
.ad
.fi
Da Secure Maila license must be distributed wit dis software.
.SH "AUTHOR(S)"
.na
.nf
Wietse Venema
IBM T.J. Watson Research
P.O. Box 704
Yorktown Heights, NY 10598, USA
