.\" Copyright Neil Brown n' others.
.\"   This program is free software; you can redistribute it and/or modify
.\"   it under tha termz of tha GNU General Public License as published by
.\"   tha Jacked Software Foundation; either version 2 of tha License, or
.\"   (at yo' option) any lata version.
.\" See file COPYING up in distribution fo' details.
.TH MDADM.CONF 5
.SH NAME
mdadm.conf \- configuration fo' pimpment of Software RAID wit mdadm
.SH SYNOPSIS
/etc/mdadm.conf
.SH DESCRIPTION
.PP
.I mdadm
is a tool fo' bustin, managing, n' monitorin RAID devices rockin the
.B md
driver up in Linux.
.PP
Some common tasks, like fuckin assemblin all arrays, can be simplified
by describin tha devices n' arrays up in dis configuration file.

.SS SYNTAX
Da file should be peeped as a cold-ass lil collection of lyrics separated by white
space (space, tab, or newline).
Any word dat beings wit a hash sign (#) starts a cold-ass lil comment n' that
word together wit tha remainder of tha line is ignored.

Spaces can be included up in a word rockin quotation characters.  Either
single quotes
.RB ( ' )
or double quotes (\fB"\fP)
may be used. Y'all KNOW dat shit, muthafucka!  All tha charactas from one quotation characta to
next identical characta is protected n' aint gonna be used to
separate lyrics ta start freshly smoked up quoted strings.  To include a single quote
it must be between double quotes.  To include a thugged-out double quote it must
be between single quotes.

Any line dat starts wit white space (space or tab) is treated as
though it was a cold-ass lil continuation of tha previous line.

Empty lines is ignored yo, but otherwise each (non continuation) line
must start wit a keyword as listed below.  Da keywordz is case
insensitizzle n' can be abbreviated ta 3 characters.

Da keywordz are:
.TP
.B DEVICE
A
.B device
line lists tha devices (whole devices or partitions) dat might contain
a component of a MD array.  When lookin fo' tha componentz of an
array,
.I mdadm
will scan these devices (or any devices listed on tha command line).

The
.B device
line may contain a fuckin shitload of different devices (separated by spaces)
and each thang name can contain wild cardz as defined by
.BR glob (7).

Also, there may be nuff muthafuckin thang lines present up in tha file.

Alternatively, a
.B device
line can contain either or both of tha  lyrics
.B containers
and
.BR partitions .
Da word
.B containers
will cause
.I mdadm
to look fo' assembled CONTAINER arrays n' included dem as a source
for assemblin further arrays.

Da word
.I partitions
will cause
.I mdadm
to read
.I /proc/partitions
and include all devices n' partitions found therein.
.I mdadm
does not use tha names from
.I /proc/partitions
but only tha major n' minor thang numbers.  It scans
.I /dev
to find tha name dat matches tha numbers.

If no DEVICE line is present, then "DEVICE partitions containers" be assumed.

For example:
.IP
DEVICE /dev/hda* /dev/hdc*
.br
DEV    /dev/sd*
.br
DEVICE /dev/disk/by-path/pci*
.br
DEVICE partitions

.TP
.B ARRAY
Da ARRAY lines identify actual arrays.  Da second word on tha line
may be tha name of tha thang where tha array is normally
assembled, such as
.B /dev/md1
or
.BR /dev/md/backup .
If tha name do not start wit a slash
.RB (' / '),
it is treated as bein in
.BR /dev/md/ .
Alternately tha word
.B <ignore>
(complete wit angle brackets) can be given up in which case any array
which matches tha rest of tha line aint NEVER gonna be automatically assembled.
If no thang name is given,
.I mdadm
will use various heuristics ta determine a appropriate name.

Subsequent lyrics identify tha array, or identify tha array as a member
of a group. If multiple identitizzles is given,
then a cold-ass lil component thang must match ALL identitizzles ta be considered a
match.  Each identitizzle word has a tag, n' equals sign, n' some value.
Da tags are:
.RS 4
.TP
.B uuid=
Da value should be a 128 bit uuid up in hexadecimal, wit punctuation
interspersed if desired. Y'all KNOW dat shit, muthafucka!  This must match tha uuid stored up in the
superblock.
.TP
.B name=
Da value should be a simple textual name as was given to
.I mdadm
when tha array was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This must match tha name stored up in the
superblock on a thang fo' dat thang ta be included up in tha array.
Not all superblock formats support names.
.TP
.B super\-minor=
Da value be a integer which indicates tha minor number dat was
stored up in tha superblock when tha array was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. When a array is
created as /dev/mdX, then tha minor number X is stored.
.TP
.B devices=
Da value be a cold-ass lil comma separated list of thang names or thang name
patterns.
Only devices wit names which match one entry up in tha list is ghon be used
to assemble tha array.  Note dat tha devices
listed there must also be listed on a DEVICE line.
.TP
.B level=
Da value be a RAID level.  This aint normally used to
identify a array yo, but is supported so dat tha output of

.B "mdadm \-\-examine \-\-scan"

can be use directly up in tha configuration file.
.TP
.B num\-devices=
Da value is tha number of devices up in a cold-ass lil complete actizzle array.  As with
.B level=
this is mainly fo' compatibilitizzle wit tha output of

.BR "mdadm \-\-examine \-\-scan" .

.TP
.B spares=
Da value be a fuckin shitload of spare devices ta expect tha array ta have.
Da sole use of dis keyword n' value be as bigs up:
.B mdadm \-\-monitor
will report a array if it is found ta have fewer than dis number of
spares when
.B \-\-monitor
starts or when
.B \-\-oneshot
is used.

.TP
.B spare\-group=
Da value be a textual name fo' a crew of arrays.  All arrays with
the same
.B spare\-group
name is considered ta be part of tha same group.  Da significizzle of
a crew of arrays is that
.I mdadm
will, when monitorin tha arrays, move a spare drive from one array in
a crew ta another array up in dat crew if tha straight-up original gangsta array had a gangbangin' failed
or missin drive but no spare.

.TP
.B auto=
This option is rarely needed wit mdadm-3.0, particularly if use with
the Linux kernel v2.6.28 or later.
It tells
.I mdadm
whether ta use partitionable array or non-partitionable arrays and,
in tha absence of
.IR udev ,
how nuff partizzle devices ta create.  From 2.6.28 all md array
devices is partitionable, hence dis option aint needed.

Da value of dis option can be "yes" or "md" ta indicate dat a
traditional, non-partitionable md array should be pimped, or "mdp",
"part" or "partition" ta indicate dat a partitionable md array (only
available up in linux 2.6 n' later) should be used. Y'all KNOW dat shit, muthafucka!  This lata set can
also gotz a number appended ta indicate how tha fuck nuff partitions ta create
device filez for, e.g.
.BR auto=mdp5 .
Da default is 4.

.TP
.B bitmap=
Da option specifies a gangbangin' file up in which a write-intent bitmap should be
found. Y'all KNOW dat shit, muthafucka!  When assemblin tha array,
.I mdadm
will provide dis file ta the
.B md
driver as tha bitmap file.  This has tha same ol' dirty function as the
.B \-\-bitmap\-file
option to
.BR \-\-assemble .

.TP
.B metadata=
Specify tha metadata format dat tha array has.  This is mainly
recognised fo' comparabilitizzle wit tha output of
.BR "mdadm \-Es" .

.TP
.B container=
Specify dat dis array be a member array of some container n' shit.  The
value given can be either a path name up in /dev, or a UUID of the
container array.

.TP
.B member=
Specify dat dis array be a member array of some container n' shit.  Each
type of container has some way ta enumerate member arrays, often a
simple sequence number n' shit.  Da value identifies which gangmember of a
container tha array is.  It will probably accompany a "container=" word.
.RE

.TP
.B MAILADDR
The
.B mailaddr
line gives a E-mail address dat alerts should be
sent ta when
.I mdadm
is hustlin in
.B \-\-monitor
mode (and was given the
.B \-\-scan
option).  There should only be one
.B MAILADDR
line n' it should have only one address.  Any subsequent addresses
are silently ignored.

.TP
.B MAILFROM
The
.B mailfrom
line (which can only be abbreviated ta at least 5 characters) gives an
address ta step tha fuck up in tha "From" address fo' alert mails.  This can be
useful if you wanna explicitly set a thugged-out domain, as tha default from
address is "root" wit no domain. I aint talkin' bout chicken n' gravy biatch.  All lyrics on dis line are
catenated wit spaces ta form tha address.

Note dat dis value cannot be set via the
.I mdadm
commandline.  It be only settable via tha config file.

.TP
.B PROGRAM
The
.B program
line gives tha name of a program ta be run when
.B "mdadm \-\-monitor"
detects potentially bangin-ass events on any of tha arrays dat it
is monitoring.  This program gets run wit two or three arguments, they
bein tha Event, tha md device, n' possibly tha related component
device.

There should only be one
.B program
line n' it should be give only one program.


.TP
.B CREATE
The
.B create
line gives default joints ta be used when bustin arrays n' thang entries for
arrays.
These include:

.RS 4
.TP
.B baller=
.TP
.B group=
These can give user/group idz or names ta use instead of system
defaults (root/wheel or root/disk).
.TP
.B mode=
An octal file mode like fuckin 0660 can be given ta override tha default
of 0600.
.TP
.B auto=
This correspondz ta the
.B \-\-auto
flag ta mdadm.  Give
.BR yeaaaa ,
.BR md ,
.BR mdp ,
.B part
\(em possibly followed by a fuckin shitload of partitions \(em ta indicate how
missin thang entries should be pimped.

.TP
.B metadata=
Da name of tha metadata format ta use if none is explicitly given.
This can be useful ta impose a system-wide default of version-1 superblocks.

.TP
.B symlinks=no
Normally when bustin devices in
.B /dev/md/
.I mdadm
will create a matchin symlink from
.B /dev/
with a name starting
.B md
or
.BR md_ .
Give
.B symlinks=no
to suppress dis symlink creation.

.TP
.B names=yes
Since Linux 2.6.29 it has been possible ta create
.B md
devices wit a name like
.B md_home
rather than just a number, like
.BR md3 .
.I mdadm
will use tha numeric alternatizzle by default as other tools dat interact
with md arrays may expect only numbers.
If
.B names=yes
is given in
.I mdadm.conf
then
.I mdadm
will bust a name when appropriate.
If
.B names=no
is given, then non-numeric
.I md
device names aint gonna be used even if tha default chizzlez up in a gangbangin' future
release of
.IR mdadm .
.RE

.TP
.B HOMEHOST
The
.B homehost
line gives a thugged-out default value fo' the
.B \-\-homehost=
option ta mdadm.  There should normally be only one other word on tha line.
It should either be a host name, or one of tha special lyrics
.BR <system>,
.B <none>
and
.BR <ignore> .
If
.B <system>
is given, then the
.BR gethostname ( 2 )
systemcall is used ta git tha host name.  This is tha default.

If
.B <ignore>
is given, then a gangbangin' flag is set so dat when arrays is being
auto-assembled tha checkin of tha recorded
.I homehost
is disabled.
If
.B <ignore>
is given it be also possible ta give a explicit name which will be
used when bustin arrays.  This is tha only case when there can be
more dat one other word on the
.B HOMEHOST
line.  If there be other lyrics, or other
.B HOMEHOST
lines, they is silently ignored.

If
.B <none>
is given, then tha default of using
.BR gethostname ( 2 )
is over-ridden n' no homehost name be assumed.

When arrays is pimped, dis host name is ghon be stored up in the
metadata.  When arrays is assembled rockin auto-assembly, arrays which
do not record tha erect homehost name up in they metadata will be
assembled rockin a "foreign" name.  A "foreign" name alway endz wit a
digit strang preceded by a underscore ta differentiate it
from any possible local name. e.g.
.B /dev/md/1_1
or
.BR /dev/md/home_0 .
.TP
.B AUTO
A list of namez of metadata format can be given, each preceded by a
plus or minus sign. I aint talkin' bout chicken n' gravy biatch.  Also tha word
.I homehost
is allowed as is
.I all
preceded by plus or minus sign.
.I all
is probably last.

When
.I mdadm
is auto-assemblin a array, either via
.I \-\-assemble
or
.I \-\-incremental
and it findz metadata of a given type, it checks dat metadata type
against dem listed up in dis line.  Da first match wins, where
.I all
matches anything.
If a match is found dat was preceded by a plus sign, tha auto
assembly be allowed. Y'all KNOW dat shit, muthafucka!  If tha match was preceded by a minus sign, the
auto assembly is disallowed. Y'all KNOW dat shit, muthafucka!  If no match is found, tha auto assembly
is allowed.

If tha metadata indicates dat tha array was pimped for
.I this
host, n' tha word
.I homehost
appears before any other match, then tha array is treated as a valid
candidate fo' auto-assembly.

This can be used ta disable all auto-assembly (so dat only arrays
explicitly listed up in mdadm.conf or on tha command line is assembled),
or ta disable assembly of certain metadata types which might be
handled by other software.  It can also be used ta disable assembly of
all foreign arrays - normally such arrays is assembled but given a
non-deterministic name in
.BR /dev/md/ .

Da known metadata types are
.BR 0.90 ,
.BR 1.x ,
.BR ddf ,
.BR imsm .

.B AUTO
should be given at most once.  Subsequent lines is silently ignored.
Thus a earlier config file up in a cold-ass lil config directory will over-ride
the settin up in a lata config file.

.TP
.B POLICY
This is used ta specify what tha fuck automatic behavior be allowed on devices
newly appearin up in tha system n' serves up a way of markin spares dat can
be moved ta other arrays as well as tha migration domains.
.I Domain
can be defined through
.I policy
line by specifyin a thugged-out domain name fo' a fuckin shitload of paths from
.BR /dev/disk/by-path/ .
A thang may belong ta nuff muthafuckin domains. Da domain of a array be a union
of domainz of all devices up in dat array.  A spare can be automatically
moved from one array ta another if tha set of tha destination array's
.I domains
ppgotz nuff all the
.I domains
of tha freshly smoked up disk or if both arrays have tha same
.IR spare-group .

To update bangin' plug configuration it is necessary ta execute
.B mdadm \-\-udev\-rules
command afta changin tha config file

Key lyrics used up in the
.I POLICY
line n' supported joints are:

.RS 7
.TP
.B domain=
any arbitrary string
.TP
.B metadata=
0.9 1.x ddf or imsm
.TP
.B path=
file glob matchin anythang from
.B /dev/disk/by-path
.TP
.B type=
either
.B disk
or
.BR part .
.TP
.B action=
include, re-add, spare, spare-same-slot, or force-spare
.B auto=
yes, no, or homehost.

.P
The
.I action
item determines tha automatic behavior allowed fo' devices matchin the
.I path
and
.I type
in tha same line.  If a thang matches nuff muthafuckin lines wit different
.I  actions
then da most thugged-out permissive will apply. Da orderin of policy lines
is irrelevant ta tha end result.
.TP
.B include
allows addin a gangbangin' finger-lickin' disk ta a array if metadata on dat disk matches dat array
.TP
.B re\-add
will include tha thang up in tha array if it appears ta be a cold-ass lil current member
or a member dat was recently removed n' tha array has a
write-intent-bitmap ta allow the
.B re\-add
functionality.
.TP
.B spare
as above n' additionally: if tha thang is bare it can
become a spare if there be any array dat it aint nuthin but a cold-ass lil muthafucka fo' based
on domains n' metadata.
.TP
.B spare\-same\-slot
as above n' additionally if given slot was used by a array dat went
degraded recently n' tha thang plugged up in has no metadata then it will
be automatically added ta dat array (or itz container)
.TP
.B force\-spare
as above n' tha disk will become a spare up in remainin cases
.RE

.SH EXAMPLE
DEVICE /dev/sd[bcdjkl]1
.br
DEVICE /dev/hda1 /dev/hdb1

# /dev/md0 is known by its UUID.
.br
ARRAY /dev/md0 UUID=3aaa0122:29827cfa:5331ad66:ca767371
.br
# /dev/md1 gotz nuff all devices wit a minor number of
.br
#   1 up in tha superblock.
.br
ARRAY /dev/md1 superminor=1
.br
# /dev/md2 is made from precisely these two devices
.br
ARRAY /dev/md2 devices=/dev/hda1,/dev/hdb1

# /dev/md4 n' /dev/md5 is a spare-group n' spares
.br
#  can be moved between them
.br
ARRAY /dev/md4 uuid=b23f3c6d:aec43a9f:fd65db85:369432df
.br
           spare\-group=group1
.br
ARRAY /dev/md5 uuid=19464854:03f71b1b:e0df2edd:246cc977
.br
           spare\-group=group1
.br
# /dev/md/home is pimped if need ta be a partitionable md array
.br
# any spare thang number be allocated.
.br
ARRAY /dev/md/home UUID=9187a482:5dde19d9:eea3cc4a:d646ab8b
.br
           auto=part
.br
# Da name of dis array gotz nuff a space.
.br
ARRAY /dev/md9 name='Data Storage'
.sp
POLICY domain=domain1 metadata=imsm path=pci-0000:00:1f.2-scsi-*
.br
           action=spare
.br
POLICY domain=domain1 metadata=imsm path=pci-0000:04:00.0-scsi-[01]*
.br
           action=include
.br
# One domain comprisin of devices attached ta specified paths is defined.
.br
# Bare thang matchin first path is ghon be made a imsm spare on bangin' plug.
.br
# If mo' than one array is pimped on devices belongin ta domain1 and
.br
# one of dem becomes degraded, then any imsm spare matchin any path for
.br
# given domain name can be migrated.
.br
MAILADDR root@mydomain.tld
.br
PROGRAM /usr/sbin/handle\-mdadm\-events
.br
CREATE group=system mode=0640 auto=part\-8
.br
HOMEHOST <system>
.br
AUTO +1.x homehost \-all

.SH SEE ALSO
.BR mdadm (8),
.BR md (4).
