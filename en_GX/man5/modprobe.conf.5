'\" t
.\"     Title: modprobe.d
.\"    Author: Jizzle Mastas <jcm@jonmasters.org>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/22/2013
.\"    Manual: modprobe.d
.\"    Source: kmod
.\"  Language: Gangsta
.\"
.TH "MODPROBE\&.D" "5" "08/22/2013" "kmod" "modprobe.d"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
modprobe.d \- Configuration directory fo' modprobe
.SH "SYNOPSIS"
.PP
/lib/modprobe\&.d/*\&.conf
.PP
/etc/modprobe\&.d/*\&.conf
.PP
/run/modprobe\&.d/*\&.conf
.SH "DESCRIPTION"
.PP
Because the
\fBmodprobe\fR
command can add or remove mo' than one module, cuz of modulez havin dependencies, we need a method of specifyin what tha fuck options is ta be used wit dem modules\& fo' realz. All filez underneath the
/etc/modprobe\&.d
directory which end wit the
\&.conf
extension specify dem options as required\&. They can also be used ta create convenient aliases: alternate names fo' a module, or they can override tha normal
\fBmodprobe\fR
behavior altogether fo' dem wit special requirements (like fuckin insertin mo' than one module)\&.
.PP
Note dat module n' alias names (like other module names) can have \- or _ up in them: both is interchangeable all up in all tha module commandz as underscore conversion happens automatically\&.
.PP
Da format of n' filez under
modprobe\&.d
is simple: one command per line, wit blank lines n' lines startin wit \*(Aq#\*(Aq ignored (useful fo' addin comments)\& fo' realz. A \*(Aq\e\*(Aq all up in tha end of a line causes it ta continue on tha next line, which make tha file a lil' bit neater\&.
.SH "COMMANDS"
.PP
alias \fIwildcard\fR \fImodulename\fR
.RS 4
This allows you ta give alternate names fo' a module\&. For example: "alias my\-mod straight-up_long_modulename" means you can use "modprobe my\-mod" instead of "modprobe straight-up_long_modulename"\&. Yo ass can also use shell\-style wildcards, so "alias my\-mod* straight-up_long_modulename" means dat "modprobe my\-mod\-something" has tha same ol' dirty effect\&. Yo ass can\*(Aqt have aliases ta other aliases (that way lies madness) yo, but aliases can have options, which is ghon be added ta any other options\&.
.sp
Note dat modulez can also contain they own aliases, which you can peep using
\fBmodinfo\fR\&. These aliases is used as a last resort (ie\&. if there is no real module,
\fBinstall\fR,
\fBremove\fR, or
\fBalias\fR
command up in tha configuration)\&.
.RE
.PP
blacklist \fImodulename\fR
.RS 4
Modulez can contain they own aliases: probably these is aliases describin tha devices they support, like fuckin "pci:123\&.\&.\&."\&. These "internal" aliases can be overridden by aiiight "alias" keywordz yo, but there be cases where two or mo' modulez both support tha same devices, or a module invalidly fronts ta support a thang dat it do not: the
\fBblacklist\fR
keyword indicates dat all of dat particular module\*(Aqs internal aliases is ta be ignored\&.
.RE
.PP
install \fImodulename\fR \fIcommand\&.\&.\&.\fR
.RS 4
This command instructs
\fBmodprobe\fR
to run yo' command instead of insertin tha module up in tha kernel as normal\&. Da command can be any shell command: dis allows you ta do any kind of complex processin you might wish\&. For example, if tha module "fred" works betta wit tha module "barney" already installed (but it don\*(Aqt depend on it, so
\fBmodprobe\fR
won\*(Aqt automatically load it), you could say "install fred /sbin/modprobe barney; /sbin/modprobe \-\-ignore\-install fred", which would do what tha fuck you wanted\&. Note the
\fB\-\-ignore\-install\fR, which stops tha second
\fBmodprobe\fR
from hustlin tha same
\fBinstall\fR
command again\&. Right back up in yo muthafuckin ass. See also
\fBremove\fR
below\&.
.sp
Da long term future of dis command as a solution ta tha problem of providin additionizzle module dependencies aint assured n' it is intended ta replace dis command wit a warnin bout its eventual removal or deprecation at some point up in a gangbangin' future release\&. Its use complicates tha automated determination of module dependencies by distribution utilities, like fuckin mkinitrd (because these now need ta somehow interpret what tha fuck the
\fBinstall\fR
commandz might be bustin\&. In a slick ghetto, modulez would provide all dependency shiznit without tha use of dis command n' work is underway ta implement soft dependency support within tha Linux kernel\&.
.sp
If you use tha strang "$CMDLINE_OPTS" up in tha command, it is ghon be replaced by any options specified on tha modprobe command line\&. This can be useful cuz playas expect "modprobe fred opt=1" ta pass tha "opt=1" arg ta tha module, even if there\*(Aqs a install command up in tha configuration file\&. Right back up in yo muthafuckin ass. So our above example becomes "install fred /sbin/modprobe barney; /sbin/modprobe \-\-ignore\-install fred $CMDLINE_OPTS"
.RE
.PP
options \fImodulename\fR \fIoption\&.\&.\&.\fR
.RS 4
This command allows you ta add options ta tha module
\fImodulename\fR
(which might be a alias) every last muthafuckin time it is banged tha fuck into tha kernel: whether directly (using
\fBmodprobe\fR\fImodulename\fR
or cuz tha module bein banged dependz on dis module\&.
.sp
All options is added together: they can come from an
\fBoption\fR
for tha module itself, fo' a alias, n' on tha command line\&.
.RE
.PP
remove \fImodulename\fR \fIcommand\&.\&.\&.\fR
.RS 4
This is similar ta the
\fBinstall\fR
command above, except it is invoked when "modprobe \-r" is run\&.
.RE
.PP
softdep \fImodulename\fR pre: \fImodules\&.\&.\&.\fR post: \fImodules\&.\&.\&.\fR
.RS 4
The
\fBsoftdep\fR
command allows you ta specify soft, or optional, module dependencies\&.
\fImodulename\fR
can be used without these optionizzle modulez installed yo, but probably wit some features missing\&. For example, a thugged-out driver fo' a storage HBA might require another module be loaded up in order ta use pimpment features\&.
.sp
pre\-deps n' post\-deps modulez is listz of names and/or aliasez of other modulez dat modprobe will attempt ta install (or remove) up in order before n' afta tha main module given up in the
\fImodulename\fR
argument\&.
.sp
Example: Assume "softdep c pre: a funky-ass b post: d e" is provided up in tha configuration\&. Hustlin "modprobe c" is now equivalent ta "modprobe a funky-ass b c d e" without tha softdep\&. Flags like fuckin \-\-use\-blacklist is applied ta all tha specified modules, while module parametas only apply ta module c\&.
.sp
Note: if there are
\fBinstall\fR
or
\fBremove\fR
commandz wit tha same
\fImodulename\fR
argument,
\fBsoftdep\fR
takes precedence\&.
.RE
.SH "COMPATIBILITY"
.PP
A future version of kmod will come wit a phat warnin ta avoid use of the
\fBinstall\fR
as explained above\&. This will happen once support fo' soft dependencies up in tha kernel is complete\&. That support will complement tha existin softdep support within dis utilitizzle by providin such dependencies directly within tha modules\&.
.SH "COPYRIGHT"
.PP
This manual page originally Copyright 2004, Rusty Russell, IBM Corporation\&. Maintained by Jizzle Mastas n' others\&.
.SH "SEE ALSO"
.PP
\fBmodprobe\fR(8),
\fBmodules.dep\fR(5)
.SH "AUTHORS"
.PP
\fBJizzle Masters\fR <\&jcm@jonmasters\&.org\&>
.RS 4
Developer
.RE
.PP
\fBRobby Workman\fR <\&rworkman@slackware\&.com\&>
.RS 4
Developer
.RE
.PP
\fBLucas De Marchi\fR <\&lucas\&.demarchi@profusion\&.mobi\&>
.RS 4
Developer
.RE
