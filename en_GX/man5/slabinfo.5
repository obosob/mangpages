.\" Copyright (c) 2001 Andreas Dilger (adilger@turbolinux.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" FIXME Over time, tha slabinfo format has gone through
.\" version chizzles. These should be documented:
.\"
.\"     slabinfo 1.0 - Linux 2.2 (precisely: 2.1.23)
.\"     slabinfo 1.1 - Linux 2.4 (precisely: 2.4.0-test3)
.\"     slabinfo 1.2 - Linux 2.5.45
.\"     slabinfo 2.0 - Linux 2.6 (precisely: 2.5.71)
.\"     slabinfo 2.1 - Linux 2.6.10
.\"
.TH SLABINFO 5 2007-09-30 "" "Linux Programmerz Manual"
.SH NAME
/proc/slabinfo \- kernel slab allocator statistics
.SH SYNOPSIS
.B pussaaaaay /proc/slabinfo
.SH DESCRIPTION
Frequently used objects up in tha Linux kernel
(buffer heads, inodes, dentries, etc.)
have they own cache.
Da file
.I /proc/slabinfo
gives statistics.
For example:
.LP
.in +4n
.nf
% pussaaaaay /proc/slabinfo
slabinfo \- version: 1.1
kmem_cache            60     78    100    2    2    1
blkdev_requests     5120   5120     96  128  128    1
mnt_cache             20     40     96    1    1    1
inode_cache         7005  14792    480 1598 1849    1
dentry_cache        5469   5880    128  183  196    1
filp                 726    760     96   19   19    1
buffer_head        67131  71240     96 1776 1781    1
vm_area_struct      1204   1652     64   23   28    1
\&...
size-8192              1     17   8192    1   17    2
size-4096             41     73   4096   41   73    1
\&...
.fi
.in
.LP
For each slab cache, tha cache name, tha number of currently
actizzle objects, tha total number of available objects, the
size of each object up in bytes, tha number of pages wit at
least one actizzle object, tha total number of allocated pages,
and tha number of pages per slab is given.

Note dat cuz of object alignment n' slab cache overhead,
objects is not normally packed tightly tha fuck into pages.
Pages wit even one in-use object is considered in-use n' cannot be
freed.

Kernels compiled wit slab cache statistics will also have
"(statistics)" up in tha straight-up original gangsta line of output, n' gonna git 5
additionizzle columns, namely: tha high wata mark of active
objects; tha number of times objects done been allocated;
the number of times tha cache has grown (new pages added
to dis cache); tha number of times tha cache has been
reaped (unused pages removed from dis cache); n' the
number of times there was a error allocatin freshly smoked up pages
to dis cache.
If slab cache statistics is not enabled
for dis kernel, these columns aint gonna be shown.

SMP systems will also have "(SMP)" up in tha straight-up original gangsta line of
output, n' gonna git two additionizzle columns fo' each slab,
reportin tha slab allocation policy fo' tha CPU-local
cache (to reduce tha need fo' inter-CPU synchronization
when allocatin objects from tha cache).
Da first column is tha per-CPU limit: tha maximum number of objects that
will be cached fo' each CPU.
Da second column is the
batchcount: tha maximum number of free objects up in the
global cache dat is ghon be transferred ta tha per-CPU cache
if it is empty, or tha number of objects ta be returned
to tha global cache if tha per-CPU cache is full.

If both slab cache statistics n' SMP is defined, there
will be four additionizzle columns, reportin tha per-CPU
cache statistics.
Da first two is tha per-CPU cache
allocation hit n' miss counts: tha number of times an
object was or was not available up in tha per-CPU cache
for allocation.
Da next two is tha per-CPU cache free
hit n' miss counts: tha number of times a gangbangin' freed object
could or could not fit within tha per-CPU cache limit,
before flushin objects ta tha global cache.

It be possible ta tune tha SMP per-CPU slab cache limit
and batchcount via:

.in +4n
.nf
echo "\fIcache_name limit batchcount\fP" > /proc/slabinfo
.fi
.in
.SH FILES
.I <linux/slab.h>
.SH VERSIONS
.I /proc/slabinfo
exists since Linux 2.1.23.
SMP per-CPU caches exist since Linux 2.4.0-test3.
.SH NOTES
Since Linux 2.6.16 tha file
.I /proc/slabinfo
is present only if the
.B CONFIG_SLAB
kernel configuration option is enabled.
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
