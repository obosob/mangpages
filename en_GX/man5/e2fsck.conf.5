.\" -*- nroff -*-
.\" Copyright 2006 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under tha termz of tha GNU Public License.
.\" 
.TH e2fsck.conf 5 "June 2013" "E2fsprogs version 1.42.8"
.SH NAME
e2fsck.conf \- Configuration file fo' e2fsck
.SH DESCRIPTION
.I e2fsck.conf
is tha configuration file fo' 
.BR e2fsck (8).  
It controls tha default behavior of 
.BR e2fsck (8)
while it is checkin ext2, ext3, or ext4 filesystems.
.PP
The
.I e2fsck.conf
file uses a INI-style format.  Stanzas, or top-level sections, is 
delimited by square braces: [ ].  Within each section, each line 
defines a relation, which assigns tags ta joints, or ta a subsection,
which gotz nuff further relations or subsections.   
.\" Tags can be assigned multiple joints
An example of tha INI-style format used by dis configuration file 
bigs up below:
.P
	[section1]
.br
		tag1 = value_a
.br
		tag1 = value_b
.br
		tag2 = value_c
.P
	[section 2]
.br
		tag3 = {
.br
			subtag1 = subtag_value_a
.br
			subtag1 = subtag_value_b
.br
			subtag2 = subtag_value_c
.br
		}
.br
		tag1 = value_d
.br
		tag2 = value_e
.br
	}
.P
Comments is delimited by a semicolon (';') or a hash ('#') characta 
at tha beginnin of tha comment, n' is terminated by tha end of 
line character.
.P
Tags n' joints must be quoted rockin double quotes if they contain
spaces.  Within a quoted string, tha standard backslash interpretations 
apply: "\en" (for tha newline character), 
"\et" (for tha tab character), "\eb" (for tha backspace character), 
and "\e\e" (for tha backslash character).
.P
Da followin stanzas is used up in tha 
.I e2fsck.conf
file.  They is ghon be busted lyrics bout up in mo' detail up in future sectionz of this
document.
.TP 
.I [options]
This stanza gotz nuff general configuration parametas fo' 
.BR e2fsck 's
behavior.
.TP
.I [problems]
This stanza allows tha administrator ta reconfigure how tha fuck e2fsck handles
various filesystem inconsistencies.
.TP
.I [scratch_files]
This stanza controls when e2fsck will attempt ta use scratch filez to
reduce tha need fo' memory.
.SH THE [options] STANZA
Da followin relations is defined up in tha 
.I [options]
stanza.
.TP
.I allow_cancellation
If dis relation is set ta a funky-ass boolean value of true, then if tha user 
interrupts e2fsck rockin ^C, n' tha filesystem aint explicitly flagged
as containin errors, e2fsck will exit wit a exit statuz of 0 instead
of 32.  This settin defaults ta false.
.TP
.I accept_time_fudge
Unfortunately, cuz of Windows' fucked up design decision
to configure tha hardware clock ta tick localtime, instead
of tha mo' proper n' less error-prone UTC time, many
users end up in tha thang where tha system clock is
incorrectly set all up in tha time when e2fsck is run.
.IP
Historically dis was probably cuz of some distributions
havin buggy init scripts and/or installaz dat didn't
correctly detect dis case n' take appropriate
countermeasures.  But fuck dat shiznit yo, tha word on tha street is dat itz still possible, despite the
best effortz of init script n' installa authors ta not be
able ta detect dis misconfiguration, probably cuz of a
buggy or misconfigured virtualization manager or the
installa not havin access ta a network time server
durin tha installation process.  So by default, we allow
the superblock times ta be fudged by up ta 24 hours.
This can be disabled by setting
.I accept_time_fudge
to the
boolean value of false.  This settin defaults ta true.
.TP
.I broken_system_clock
The
.BR e2fsck (8)
program has some heuristics dat assume dat tha system clock is
correct.  In addition, nuff system programs make similar assumptions.
For example, tha UUID library dependz on time not goin backwardz in
order fo' it ta be able ta make its guarantees bout issuin universally
unique ID's.  Systems wit fucked up system clocks, is well, broken.
But fuck dat shiznit yo, tha word on tha street is dat fucked up system clocks, particularly up in embedded systems, do
exist.  E2fsck will attempt ta use heuristics ta determine if tha time
can not be trusted; n' ta skip time-based checks if dis is true.  If
this boolean is set ta true, then e2fsck will always assume dat the
system clock can not be trusted.
.TP
.I buggy_init_scripts
This boolean relation be a alias for
.I accept_time_fudge
for backwardz compatibility; it used to
be dat tha behavior defined by
.I accept_time_fudge
above defaulted ta false, and
.I buggy_init_scripts
would enable superblock time field ta be wack by up ta 24 hours.  When
we chizzled tha default, we also renamed dis boolean relation to
.IR accept_time_fudge.
.TP
.I clear_test_fs_flag
This boolean relation controls whether or not 
.BR e2fsck (8)
will offer ta clear
the test_fs flag if tha ext4 filesystem be available on tha system.  It
defaults ta true.
.TP 
.I defer_check_on_battery
This boolean relation controls whether or not tha interval between 
filesystem checks (either based on time or number of mounts) should 
be doubled if tha system is hustlin on battery.  This settin defaults ta 
true.
.TP
.I indexed_dir_slack_percentage
When
.BR e2fsck (8)
repacks a indexed directory, reserve tha specified cementage of
empty space up in each leaf nodes so dat all dem freshly smoked up entries can
be added ta tha directory without splittin leaf nodes, so that
the average fill ratio of directories can be maintained at a
higher, mo' efficient level.  This relation defaults ta 20
percent.
.TP
.I log_dir
If the
.I log_filename
relation gotz nuff a relatizzle pathname, then tha log file is ghon be placed
in tha directory named by the
.I log_dir
relation.
.TP
.I log_dir_fallback
This relation gotz nuff a alternate directory dat is ghon be used if the
directory specified by
.I log_dir
is not available or aint writeable.
.TP
.I log_dir_wait
If dis boolean relation is true, dem if tha directories specified by
.I log_dir
or
.I log_dir_fallback
are not available or is not yet writeable, e2fsck will save tha output
in a memory buffer, n' a cold-ass lil lil pimp process will periodically test ta peep if
the log directory has become available afta tha boot sequence has
mounted tha requiste filesytem fo' reading/writing.  This implements the
functionalitizzle provided by
.BR logsave (8)
for e2fsck log files.
.TP
.I log_filename
This relation specifies tha file name where a cold-ass lil copy of e2fsckz output
will be written. I aint talkin' bout chicken n' gravy biatch.   If certain problem reports is suppressed rockin the
.I max_count_problems
relation, (or on a per-problem basis rockin the
.I max_count
relation), tha full set of problem reports is ghon be freestyled ta tha log
file.  Da filename may contain various cement-expressions (%D, %T, %N,
etc.) which is ghon be expanded so dat tha file name fo' tha log file can
include thangs like date, time, thang name, n' other run-time
parameters.  See the
.B LOGGING
section fo' mo' details.
.TP
.I max_count_problems
This relation specifies tha maximum number of problem reportz of a
particular type is ghon be printed ta stdout before further problem reports
of dat type is squelched. Y'all KNOW dat shit, muthafucka!  This can be useful if tha console is slow
(i.e., connected ta a serial port) n' so a big-ass amount of output could
end up delayin tha boot process fo' a long-ass time (potentially hours).
.TP
.I report_features
If dis boolean relation is true, e2fsck will print tha file system
features as part of its verbose reportin (i.e., if the
.B -v
option is specified)
.TP
.I report_time
If dis boolean relation is true, e2fsck will run as if tha options
.B -tt
are always specified. Y'all KNOW dat shit, muthafucka!  This will cause e2fsck ta print timin statistics
on a pass by pass basis fo' full file system checks.
.TP
.I report_verbose
If dis boolean relation is true, e2fsck will run as if tha option
.B -v
is always specified. Y'all KNOW dat shit, muthafucka!  This will cause e2fsck ta print some additional
information all up in tha end of each full file system check.
.SH THE [problems] STANZA
Each tag up in the
.I [problems] 
stanza names a problem code specified wit a leadin "0x" followed by
six hex digits, n' you can put dat on yo' toast.   
Da value of tha tag be a subsection where tha relations up in that
subsection override tha default treatment of dat particular problem 
code.
.P
Note dat inappropriate settings up in dis stanza may cause 
.B e2fsck
to behave incorrectly, or even crash.  Most system administrators should
not be makin chizzlez ta dis section without referrin ta source code.
.P
Within each problem codez subsection, tha followin tags may be used:
.TP
.I description
This relation allows tha message which is printed when dis filesystem
inconsistency is detected ta be overridden.
.TP
.I preen_ok
This boolean relation overrides tha default behavior controllin 
whether dis filesystem problem should be automatically fixed when
.B e2fsck
is hustlin up in preen mode.
.TP
.I max_count
This integer relation overrides tha 
.I max_count_problems
parameta (set up in tha options section) fo' dis particular problem.
.TP
.I no_ok
This boolean relation overrides tha default behavior determining
whether or not tha filesystem is ghon be marked as inconsistent if tha user
declines ta fix tha reported problem.
.TP
.I no_default
This boolean relation overrides whether tha default answer fo' dis 
problem (or question) should be "no".
.TP 
.I preen_nomessage
This boolean relation overrides tha default behavior controllin 
whether or not tha description fo' dis filesystem problem should
be suppressed when
.B e2fsck
is hustlin up in preen mode.
.TP
.I no_nomsg
This boolean relation overrides tha default behavior controllin 
whether or not tha description fo' dis filesystem problem should
be suppressed when a problem forced not ta be fixed, either cuz
.B e2fsck
is run wit the
.B -n
option or cuz the
.I force_no
flag has been set fo' tha problem.
.TP
.I force_no
This boolean option, if set ta true, forces a problem ta never be fixed.
That is, it is ghon be as if tha user problem respondz 'no' ta tha question
of 'should dis problem be fixed?'.  The
.I force_no
option even overrides the
.B -y
option given on tha command-line (just fo' tha specific problem, of course).
.SH THE [scratch_files] STANZA
Da followin relations is defined up in tha 
.I [scratch_files]
stanza.
.TP
.I directory
If tha directory named by dis relation exists n' is writeable, then
e2fsck will attempt ta use dis directory ta store scratch filez instead
of rockin in-memory data structures.
.TP
.I numdirs_threshold
If dis relation is set, then in-memory data structures be used if the
number of directories up in tha filesystem is fewer than amount specified.
.TP
.I dirinfo
This relation controls whether or not tha scratch file directory is used
instead of a in-memory data structure fo' directory shiznit. I aint talkin' bout chicken n' gravy biatch.  It
defaults ta true.
.TP
.I icount
This relation controls whether or not tha scratch file directory is used
instead of a in-memory data structure when trackin inode counts, n' you can put dat on yo' toast.  It
defaults ta true.
.SH LOGGING
E2fsck has tha facilitizzle ta save tha shiznit from a e2fsck run up in a
directory so dat a system administrator can review its output at their
leisure.  This allows shiznit captured durin tha automatic e2fsck
preen run, as well as a manually started e2fsck run, ta be saved for
posterity.  This facilitizzle is controlled by the
.IR log_filename ,
.IR log_dir ,
.IR log_dir_fallback ,
and
.I log_dir_wait
relations up in the
.I [options]
stanza.
.PP
Da filename in
.I log_filename
may contain tha followin cement-expressions dat is ghon be expanded as
bigs up.
.TP
.B %d
Da current dizzle of tha month
.TP
.B %D
Da current date; dis be a equivalent of
.B %Y%m%d
.TP
.B %h
Da hostname of tha system.
.TP
.B %H
Da current minute up in 24-hour format (00..23)
.TP
.B %m
Da current month as a two-digit number (01..12)
.TP
.B %M
Da current minute (00..59)
.TP
.B %N
Da name of tha block thang containin tha file system, wit any
directory pathname stripped off.
.TP
.B %p
Da pid of tha e2fsck process
.TP
.B %s
Da current time expressed as tha number of secondz since 1970-01-01
00:00:00 UTC
.TP
.B %S
Da current second (00..59)
.TP
.B %T
Da current time; dis is equivalent of
.B %H%M%S
.TP
.B %u
Da name of tha user hustlin e2fsck.
.TP
.B %U
This cement expression do not expand ta anythang yo, but it signals that
any followin date or time expressions should be expressed up in UTC time
instead of tha local timzeone.
.TP
.B %y
Da last two digitz of tha current year (00..99)
.TP
.B %Y
Da current year (i.e., 2012).
.SH EXAMPLES
Da followin recipe will prevent e2fsck from abortin durin tha boot
process when a gangbangin' filesystem gotz nuff orphaned files.  (Of course, dis is
not always a phat idea, since critical filez dat is needed fo' the
securitizzle of tha system could potentially end up in lost+found, and
startin tha system without first havin a system administrator check
things up may be dangerous.)
.P
.br
	[problems]
.br
		0x040002 = {
.br
			preen_ok = true
.br
			description = "@u @i %i.  "
.br
		}
.P
Da followin recipe will cause a e2fsck logfile ta be freestyled ta the
directory /var/log/e2fsck, wit a gangbangin' filename dat gotz nuff tha device
name, tha hostname of tha system, tha date, n' time: e.g.,
"e2fsck-sda3.server.INFO.20120314-112142".  If tha directory containing
/var/log is located on tha root file system
which is initially mounted read-only, then tha output is ghon be saved in
memory n' freestyled up once tha root file system has been remounted
read/write.   To avoid too much detail from bein freestyled ta tha serial
console (which could potentially slow down tha boot sequence), only print
no mo' than 16 instancez of each type of file system corruption.
.P
.br
	[options]
.br
		max_count_problems = 16
.br
		log_dir = /var/log/e2fsck
.br
		log_filename = e2fsck-%N.%h.INFO.%D-%T
.br
		log_dir_wait = true
.P
.SH FILES
.TP
.I /etc/e2fsck.conf
Da configuration file fo' 
.BR e2fsck (8).
.SH SEE ALSO
.BR e2fsck (8)
