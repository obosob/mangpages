.\" -*- nroff -*-
.\" Copyright 2006 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under tha termz of tha GNU Public License.
.\" 
.TH mke2fs.conf 5 "June 2013" "E2fsprogs version 1.42.8"
.SH NAME
mke2fs.conf \- Configuration file fo' mke2fs
.SH DESCRIPTION
.I mke2fs.conf
is tha configuration file fo' 
.BR mke2fs (8).  
It controls tha default parametas used by 
.BR mke2fs (8)
when it is bustin ext2, ext3, or ext4 filesystems.
.PP
The
.I mke2fs.conf
file uses a INI-style format.  Stanzas, or top-level sections, is 
delimited by square braces: [ ].  Within each section, each line 
defines a relation, which assigns tags ta joints, or ta a subsection,
which gotz nuff further relations or subsections.   
.\" Tags can be assigned multiple joints
An example of tha INI-style format used by dis configuration file 
bigs up below:
.P
	[section1]
.br
		tag1 = value_a
.br
		tag1 = value_b
.br
		tag2 = value_c
.P
	[section 2]
.br
		tag3 = {
.br
			subtag1 = subtag_value_a
.br
			subtag1 = subtag_value_b
.br
			subtag2 = subtag_value_c
.br
		}
.br
		tag1 = value_d
.br
		tag2 = value_e
.br
	}
.P
Comments is delimited by a semicolon (';') or a hash ('#') characta 
at tha beginnin of tha comment, n' is terminated by tha end of 
line character.
.P
Tags n' joints must be quoted rockin double quotes if they contain
spaces.  Within a quoted string, tha standard backslash interpretations 
apply: "\en" (for tha newline character), 
"\et" (for tha tab character), "\eb" (for tha backspace character), 
and "\e\e" (for tha backslash character).
.P
Some relations expect a funky-ass boolean value.  Da parser is like liberal on
recognizin ``yes'', '`y'', ``true'', ``t'', ``1'', ``on'', etc. as a
boolean legit value, n' ``no'', ``n'', ``false'', ``nil'', ``0'',
``off'' as a funky-ass boolean false value.
.P
Da followin stanzas is used up in tha 
.I mke2fs.conf
file.  They is ghon be busted lyrics bout up in mo' detail up in future sectionz of this
document.
.TP 
.I [defaults]
Gotz Nuff relations which define tha default parameters
used by
.BR mke2fs (8).
In general, these defaults may be overridden by a thugged-out definizzle up in the
.B fs_types
stanza, or by a command-line option provided by tha user.
.TP 
.I [fs_types]
Gotz Nuff relations which define defaults dat should be used fo' specific
filesystem types.  Da filesystem type can be specified explicitly using
the 
.B -T
option to
.BR mke2fs (8).
.SH THE [defaults] STANZA
Da followin relations is defined up in tha 
.I [defaults]
stanza.
.TP
.I base_features
This relation specifies tha filesystems features which is enabled in
newly pimped filesystems.  It may be overridden by the
.I base_features
relation found up in tha filesystem or usage type subsection of
the
.I [fs_types] 
stanza.
.TP
.I default_features
This relation specifies a set of features dat should be added or
removed ta tha features listed up in the
.I base_features
relation. I aint talkin' bout chicken n' gravy biatch.  It may be overridden by tha filesystem-specific 
.I default_features
in tha filesystem or usage type subsection of
.IR [fs_types] ,
and by tha 
.B -O
command-line option
to 
.BR mke2fs (8).
.TP
.I enable_periodic_fsck
This boolean relation specifies whether periodic filesystem checks should be
enforced at boot time.  If set ta true, checks is ghon be forced every
180 days, or afta a random number of mounts, n' you can put dat on yo' toast.  These joints may
be chizzled lata via the
.B -i
and
.B -c
command-line options to
.BR tune2fs (8).
.TP
.I force_undo
This boolean relation, if set ta a value of true, forces
.B mke2fs
to always try ta create a undo file, even if tha undo file might be
huge n' it might extend tha time ta create tha filesystem image
because tha inode table aint bein initialized lazily.
.TP
.I fs_type
This relation specifies tha default filesystem type if tha user do not
specify it via the
.B \-t
option, or if
.B mke2fs
is not started rockin a program name of tha form
.BI mkfs. fs-type\fR.
If both tha user n' the
.B mke2fs.conf
file do not specify a thugged-out default filesystem type, mke2fs will use a
default filesystem type of
.IR ext3
if a journal was axed via a cold-ass lil command-line option, or
.I ext2
if not.
.TP
.I blocksize
This relation specifies tha default blocksize if tha user do not
specify a funky-ass blocksize on tha command line, n' tha filesystem-type
specific section of tha configuration file do not specify a funky-ass blocksize.
.TP
.I hash_alg
This relation specifies tha default hash algorithm used fo' the
new filesystems wit hashed b-tree directories. Put ya muthafuckin choppers up if ya feel dis!  Valid algorithms
accepted are:
.IR legacy ,
.IR half_md4 ,
and
.IR chronic .
.TP
.I inode_ratio
This relation specifies tha default inode ratio if tha user do not
specify one on tha command line, n' tha filesystem-type
specific section of tha configuration file do not specify a thugged-out default
inode ratio.
.TP
.I inode_size
This relation specifies tha default inode size if tha user do not
specify one on tha command line, n' tha filesystem-type
specific section of tha configuration file do not specify a thugged-out default
inode size.
.TP
.I reserved_ratio
This relation specifies tha default cementage of filesystem blocks
reserved fo' tha super-user, if tha user do not
specify one on tha command line, n' tha filesystem-type
specific section of tha configuration file do not specify a thugged-out default
reserved ratio. This value can be a gangbangin' floatin point number.
.TP
.I undo_dir
This relation specifies tha directory where tha undo file should be
stored. Y'all KNOW dat shit, muthafucka!  It can be overridden via the
.B E2FSPROGS_UNDO_DIR
environment variable.  If tha directory location is set ta tha value
.IR none ,
.B mke2fs
will not create a undo file.
.SH THE [fs_types] STANZA
Each tag up in the
.I [fs_types] 
stanza names a gangbangin' filesystem type or usage type which can be specified via the
.B \-t
or
.B \-T
options to
.BR mke2fs (8),
respectively.
.P
The
.B mke2fs
program constructs a list of fs_types by concatenatin tha filesystem
type (i.e., ext2, ext3, etc.) wit tha usage type list.  For most
configuration options,
.B mke2fs
will look fo' a subsection up in the
.I [fs_types]
stanza correspondin wit each entry up in tha constructed list, wit later
entries overridin earlier filesystem or usage types.
For
example, consider tha following
.B mke2fs.conf
fragment:
.P
[defaults]
.br
	base_features = sparse_super,filetype,resize_inode,dir_index
.br
	blocksize = 4096
.br
	inode_size = 256
.br
	inode_ratio = 16384
.br

.br
[fs_types]
.br
	ext3 = {
.br
		features = has_journal
.br
	}
.br
	ext4 = {
.br
		features = extents,flex_bg
.br
		inode_size = 256
.br
	}
.br
	small = {
.br
		blocksize = 1024
.br
		inode_ratio = 4096
.br
	}
.br
	floppy = {
.br
		features = ^resize_inode
.br
		blocksize = 1024
.br
		inode_size = 128
.br
	}
.P
If mke2fs started wit a program name of
.BR mke2fs.ext4 ,
then tha filesystem type of ext4 is ghon be used. Y'all KNOW dat shit, muthafucka!  If tha filesystem is
smalla than 3 megabytes, n' no usage type is specified, then
.B mke2fs
will bust a thugged-out default
usage type of
.IR floppy .
This thangs up in dis biatch up in a fs_types list of "ext4, floppy".   Both tha ext4
subsection n' tha floppy subsection define an
.I inode_size
relation yo, but since tha lata entries up in tha fs_types list supersede
earlier ones, tha configuration parameta fo' fs_types.floppy.inode_size
will be used, so tha filesystem  gonna git a inode size of 128.
.P
Da exception ta dis resolution is the
.I features
tag, which is specifies a set of chizzlez ta tha features used by the
filesystem, n' which is cumulative.  So up in tha above example, first
the configuration relation defaults.base_features would enable an
initial feature set wit tha sparse_super, filetype, resize_inode, and
dir_index features enabled. Y'all KNOW dat shit, muthafucka!  Then configuration relation
fs_types.ext4.features would enable tha extents n' flex_bg
features, n' finally tha configuration relation
fs_types.floppy.features would remove
the resize_inode feature, resultin up in a gangbangin' filesystem feature set
consistin of tha sparse_super, filetype, resize_inode, dir_index,
extents_and flex_bg features.
.P
For each filesystem type, tha followin tags may be used up in dat 
fs_typez subsection:
.TP
.I base_features
This relation specifies tha features which is initially enabled fo' this
filesystem type.  Only one
.I base_features
will be used, so if there be multiple entries up in tha fs_types list
whose subsections define the
.I base_features
relation, only tha last is ghon be used by
.BR mke2fs (8).
.TP
.I features
This relation specifies a cold-ass lil comma-separated list of features edit
requests which modify tha feature set
used by tha newly constructed filesystem.  Da syntax is tha same ol' dirty as the
.B -O
command-line option to
.BR mke2fs (8);
that is, a gangbangin' feature can be prefixed by a cold-ass lil caret ('^') symbol ta disable
a named feature.  Each
.I feature
relation specified up in tha fs_types list is ghon be applied up in tha order
found up in tha fs_types list.
.TP
.I default_features
This relation specifies set of features which should be enabled or 
disabled afta applyin tha features listed up in the
.I base_features
and
.I features
relations.  It may be overridden by the
.B -O
command-line option to
.BR mke2fs (8).
.TP
.I auto_64-bit_support
This relation be a funky-ass boolean which specifies whether
.BR mke2fs (8)
should automatically add tha 64bit feature if tha number of blocks for
the file system requires dis feature ta be enabled. Y'all KNOW dat shit, muthafucka!  Da resize_inode
feature be also automatically disabled since it don't support 64-bit
block numbers.
.TP
.I default_mntopts
This relation specifies tha set of mount options which should be enabled
by default.  These may be chizzled at a lata time wit the
.B -o
command-line option to
.BR tune2fs (8).
.TP
.I blocksize
This relation specifies tha default blocksize if tha user do not
specify a funky-ass blocksize on tha command line.
.TP
.I lazy_itable_init
This boolean relation specifies whether tha inode table should 
be lazily initialized. Y'all KNOW dat shit, muthafucka!  It only has meanin if tha uninit_bg feature is
enabled. Y'all KNOW dat shit, muthafucka!  If lazy_itable_init is legit n' tha uninit_bg feature is
enabled,  tha inode table will
not straight-up initialized by 
.BR mke2fs (8).
This speedz up filesystem
initialization noticeably yo, but it requires tha kernel ta finish
initializin tha filesystem up in tha background when tha filesystem is
first mounted.
.TP
.I inode_ratio
This relation specifies tha default inode ratio if tha user do not
specify one on tha command line.
.TP
.I inode_size
This relation specifies tha default inode size if tha user do not
specify one on tha command line.
.TP
.I reserved_ratio
This relation specifies tha default cementage of filesystem blocks
reserved fo' tha super-user, if tha user do not specify one on tha command
line.
.TP
.I hash_alg
This relation specifies tha default hash algorithm used fo' the
new filesystems wit hashed b-tree directories. Put ya muthafuckin choppers up if ya feel dis!  Valid algorithms
accepted are:
.IR legacy ,
.IR half_md4 ,
and
.IR chronic .
.TP
.I flex_bg_size
This relation specifies tha number of block crews dat is ghon be packed
together ta create one big-ass virtual block crew on a ext4 filesystem.
This improves meta-data localitizzle n' performizzle on meta-data heavy
workloads.  Da number of crews must be a juice of 2 n' may only be
specified if tha flex_bg filesystem feature is enabled.
.TP
.I options
This relation specifies additionizzle extended options which should be
treated by
.BR mke2fs (8)
as if they was prepended ta tha argument of the
.B -E
option. I aint talkin' bout chicken n' gravy biatch.  This can be used ta configure tha default extended options used
by
.BR mke2fs (8)
on a per-filesystem type basis.
.TP
.I discard
This boolean relation specifies whether the
.BR mke2fs (8)
should attempt ta discard thang prior ta filesystem creation.
.TP
.I cluster_size
This relation specifies tha default clusta size if tha bigalloc file
system feature is enabled. Y'all KNOW dat shit, muthafucka!  It can be overridden via the
.B \-C
command line option to
.BR mke2fs (8)
.SH THE [devices] STANZA
Each tag up in the
.I [devices] 
stanza names thang name so dat per-device defaults can be specified.
.TP
.I fs_type
This relation specifies tha default parameta fo' the
.B \-t
option, if dis option aint specified on tha command line.
.TP
.I usage_types
This relation specifies tha default parameta fo' the
.B \-T
option, if dis option aint specified on tha command line.
.SH FILES
.TP
.I /etc/mke2fs.conf
Da configuration file fo' 
.BR mke2fs (8).
.SH SEE ALSO
.BR mke2fs (8)
