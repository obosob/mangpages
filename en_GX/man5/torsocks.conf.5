.TH "TORSOCKS.CONF" "5" "August 24th, 2013" "" ""

.SH NAME
torsocks.conf \(em Configuration file fo' torsocks(8)

.SH SUMMARY

By default, torsocks will assume dat it should connect ta tha Tor SOCKS proxy
runnin at 127.0.0.1 on port 9050. This is tha default address n' port for
Torz socks server on most installations. If yo ass is hustlin a aiiight Tor
installation n' have no special requirements, then you should not need to
create, edit or invoke a cold-ass lil configuration file when rockin torsocks.

Yo crazy-ass installation of torsocks includes a thugged-out default configuration file
that gotz nuff joints sensible fo' use wit most Tor installations. The
installation location fo' yo' default configuration file is:

/etc/tor/torsocks.conf

In order ta bust a cold-ass lil configuration file, you must set tha environment variable
TORSOCKS_CONF_FILE wit tha location of tha file.

If TORSOCKS_CONF_FILE aint set, torsocks will attempt ta read the
configuration file at /etc/tor/torsocks.conf. If dat file cannot be read,
torsocks will use sensible defaults fo' most Tor installations, i.e. it will
assume dat you wanna bust a SOCKS proxy hustlin at 127.0.0.1 (localhost) on
port 9050.

.SH CONFIGURATION

.SS SYNTAX
Da basic structure of all lines up in tha configuration file is:

.RS
<directive> <parameters>
.RE

Empty lines is ignored n' all input on a line afta a '#' characta is
ignored.

.SS DIRECTIVES
Da followin directives is used up in tha torsocks configuration file:

.TP
.I TorAddress ip_addr
Da IP address of tha Tor SOCKS server (e.g "server = 10.1.4.253"). Only one
server may be specified. Y'all KNOW dat shit, muthafucka! Currently, torsocks do NOT support hostname.
(default: 127.0.0.1)

.TP
.I TorPort port
Da port on which tha Tor SOCKS server receives requests, n' you can put dat on yo' toast. (default: 9050)

.TP
.I OnionAddrRange subnet/mask
Tor hidden cribs aint gots real IP addresses. This specifies what tha fuck range of IP
addresses is ghon be handed ta tha application as "cookies" fo' .onion names.  Of
course, you should pick a funky-ass block of addresses which yo ass aint goin ta ever
need ta straight-up connect to. This is similar ta tha MapAddress feature of the
main tor daemon. I aint talkin' bout chicken n' gravy biatch. (default: 127.42.42.0/24)

.TP
.I SOCKS5Username username
Username ta use fo' SOCKS5 authentication method dat make tha connections to
Tor ta bust a gangbangin' finger-lickin' different circuit from other existin streams. If set, the
SOCKS5Password must be specified also. (Default: none).

.TP
.I SOCKS5Password password
Password ta use fo' SOCKS5 authentication method dat make tha connections to
Tor ta bust a gangbangin' finger-lickin' different circuit from other existin streams. If set, the
SOCKS5Username must be specified also. (Default: none).

.TP
.I AllowInbound 0|1
Allow inbound connections meanin dat listen() n' accept()/accept4() will be
allowed fo' non localhost address so tha applicaton can handle incoming
connection. I aint talkin' bout chicken n' gravy biatch. Note dat Unix socket is allowed. Y'all KNOW dat shit, muthafucka! (Default: 0)

.SH EXAMPLE
  $ export TORSOCKS_CONF_FILE=$PWD/torsocks.conf
  $ torsocks ssh account@sshserver.com

.SH SEE ALSO
.BR torsocks(1),
.BR torsocks(8),

.SH AUTHOR
Dizzy Goulet <dgoulet@ev0ke.net>
