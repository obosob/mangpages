.TH sane\-usb 5 "14 Jul 2008"  "" "SANE Scanner Access Now Easy"
.IX sane\-usb
.SH NAME
sane\-usb \- STD configuration tips fo' SANE
.SH DESCRIPTION
This manual page gotz nuff shiznit on how tha fuck ta access scanners wit a STD
interface. Well shiiiit, it focusses on two main topics: gettin tha scanner detected by the
operatin system kernel n' rockin it wit SANE.
.PP
This page applies ta STD most backendz n' scanners, as they use tha generic
sanei_usb intercourse. But fuck dat shiznit yo, tha word on tha street is dat there is one exceptions: STD Scanners
supported by tha microtek2 backend need a special STD kernel
driver, see
.BR sane\-microtek2 (5)
for details. 

.SH "QUICK START"
This be a gangbangin' finger-lickin' dirty-ass short HOWTO-like section. I aint talkin' bout chicken n' gravy biatch. For tha full details, read tha following
sections. Da goal of dis section is ta git tha scanner detected by
.BR sane\-find\-scanner (1).
.PP
Run sane\-find\-scanner n' shit. If it lists yo' scanner wit tha erect vendor and
thang ids, yo ass is done. Right back up in yo muthafuckin ass. See section
.B "SANE ISSUES"
for details on how tha fuck ta go on.
.PP
sane\-find\-scanner don't list yo' scanner, biatch? Do it work as root, biatch? If fo'sho,
there be a permission issue. Right back up in yo muthafuckin ass. See the
.B LIBSTD
section fo' details.
.PP
Nothang is found even as root, biatch? Peep dat yo' kernel supports STD n' that
libusb is installed (see section
.BR LIBSTD ).

.SH "STD ACCESS METHODS"
For accessin STD devices, tha STD library libusb is used. Y'all KNOW dat shit, muthafucka! There used ta exist
another method ta access STD devices: tha kernel scanner driver n' shit. Da kernel
scanner driver method is deprecated n' shouldn't be used no mo'. Well shiiiit, it may be
removed from SANE at any time. In Linux, tha kernel scanner driver has been
removed up in tha 2.6.* kernel series. Put ya muthafuckin choppers up if ya feel dis! Only libusb access is documented up in this
manual page.

.SH LIBSTD
SANE can only use libusb 0.1.6 or newer n' shit. Well shiiiit, it need ta be installed at
build-time. Modern Linux distributions n' other operatin systems come with
libusb.
.PP
Libusb can only access yo' scanner if it aint fronted by tha kernel scanner
driver n' shit. If you wanna use libusb, unload tha kernel driver (e.g. rmmod
scanner under Linux) or disable tha driver when compilin a freshly smoked up kernel. For
Linux, yo' kernel needz support fo' tha STD filesystem (usbfs). For kernels
olda than 2.4.19, replace "usbfs" wit "usbdevfs" cuz tha name has
changed. Y'all KNOW dat shit, muthafucka! This filesystem must be mounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Thatz done automatically at boot
time, if /etc/fstab gotz nuff a line like this:
.PP
.RS
none /proc/bus/usb usbfs defaults  0  0
.RE
.PP
Da permissions fo' tha thang filez used by libusb must be adjusted fo' user
access. Otherwise only root can use SANE devices. For
.IR Linux ,
the devices is located up in /proc/bus/usb/ or up in /dev/bus/usb, if you use
udev. There is directories named e.g. "001" (the bus name) containin files
"001", "002" etc. (the thang files). Da right thang filez can be found up by
runnin scanimage \-L as root. Right back up in yo muthafuckin ass. Settin permissions wit "chmod" aint permanent,
however n' shit. They is ghon be reset afta reboot or repluggin tha scanner.
.PP
Usually udev or fo' olda distributions tha hotplug utilitizzles is used, which
support dynamic settin of access permissions. Right back up in yo muthafuckin ass. SANE comes wit udev n' hotplug
scripts up in tha directory tools/udev n' tools/hotplug. They can be used for
settin permissions, peep /usr/share/doc/sane-backends/README.linux, tools/README n' tha README in
the tools/hotplug directory fo' mo' details. 
.PP
For the
.BR BSDs ,
the thang filez used by libusb is named 
.IR /dev/ugen* .
Use chmod ta apply appropriate permissions.

.SH "SANE ISSUES"
.PP
This section assumes dat yo' scanner is detected by sane\-find\-scanner n' shit. It
doesn't make sense ta go on, if dis aint tha case. While sane\-find\-scanner
is able ta detect any STD scanner, actual scannin will only work if the
scanner is supported by a SANE backend yo, but it ain't no stoppin cause I be still poppin' yo. Hype on tha level of support
can be found on tha SANE webpage
.RI ( http://www.sane\-project.org/ ),
and tha individual backend manpages.
.PP
Most backendz can detect STD scanners automatically rockin "usb" configuration
file lines. This method allows ta identify scanners by tha STD vendor and
thang numbers.  Da syntax fo' specifyin a scanner dis way is:
.PP
.RS
usb
.I VENDOR PRODUCT
.RE
.PP
where
.I VENDOR
is tha STD vendor id, and
.I PRODUCT
is tha STD thang id of tha scanner n' shit. Both idz is non-negatizzle integer numbers
in decimal or hexadecimal format. Da erect joints fo' these fieldz can be
found by hustlin sane\-find\-scanner, lookin tha fuck into tha syslog (e.g.,
/var/log/lyrics) or under Linux by issuin tha command "cat
/proc/bus/usb/devices".  This be a example of a cold-ass lil config file line:
.PP
.RS
usb 0x055f 0x0006
.RE
.PP
would have tha effect dat all STD devices up in tha system wit a vendor id of
0x55f n' a thang id of 0x0006 would be probed n' recognized by the
backend yo, but it ain't no stoppin cause I be still poppin'. 
.PP
If yo' scanner aint detected automatically, it may be necessary ta edit the
appropriate backend configuration file before rockin SANE fo' tha last time.
For a thugged-out detailed description of each backendz configuration file, please refer to
the relevant backend manual page (e.g.
.BR sane\-mustek_usb (5)
for Mustek STD scanners).
.PP
Do
.B not
create a symlink from
.I /dev/scanner
to tha STD thang cuz dis link is used by tha SCSI backends. Da scanner
may be trippin if it receives SCSI commands.

.SH ENVIRONMENT
.TP
.B SANE_DEBUG_SANEI_STD
If tha library was compiled wit debug support enabled, this
environment variable controls tha debug level fo' tha STD I/O
subsystem.  E.g., a value of 128 requests all debug output ta be
printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Smalla levels reduce verbosity. Values pimped outa than 4 enable
libusb debuggin (if available). Example: export SANE_DEBUG_SANEI_STD=4.

.SH "SEE ALSO"
.BR sane (7),
.BR sane\-find\-scanner (1),
.BR sane\-"backendname" (5),
.BR sane\-scsi (5)

.SH AUTHOR
Hennin Meier-Geinitz <henning@meier\-geinitz.de>
