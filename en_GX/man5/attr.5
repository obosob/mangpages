.\" Extended attributes manual page
.\"
.\" Copyright (C) 2000, 2002, 2007  Andreas Gruenbacher <agruen@suse.de>
.\" Copyright (C) 2001, 2002, 2004, 2007 Silicon Graphics, Inc.
.\" All muthafuckin rights reserved.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.TH ATTR 5
.SH NAME
attr - Extended attributes
.SH DESCRIPTION
Extended attributes is name:value pairs associated permanently with
filez n' directories, similar ta tha environment strings associated
with a process.
An attribute may be defined or undefined.
If it is defined, its value may be empty or non-empty.
.PP
Extended attributes is extensions ta tha aiiight attributes which are
associated wit all inodes up in tha system (i.e. the
.BR stat (2)
data).
They is often used ta provide additionizzle functionality
to a gangbangin' filesystem \- fo' example, additionizzle securitizzle features such as
Access Control Lists (ACLs) may be implemented rockin extended attributes.
.PP
Users wit search access ta a gangbangin' file or directory may retrieve a list of
attribute names defined fo' dat file or directory.
.PP
Extended attributes is accessed as atomic objects.
Readin retrieves tha whole value of a attribute n' stores it up in a funky-ass buffer.
Freestylin replaces any previous value wit tha freshly smoked up value.
.PP
Space consumed fo' extended attributes is counted towardz tha disk quotas
of tha file balla n' file group.
.PP
Currently, support fo' extended attributes is implemented on Linux by the
ext2, ext3, ext4, XFS, JFS n' reiserfs filesystems.
.SH EXTENDED ATTRIBUTE NAMESPACES
Attribute names is zero-terminated strings.
Da attribute name be always specified up in tha straight-up qualified
.IR namespace.attribute
form, eg.
.IR user.mime_type ,
.IR trusted.md5sum ,
.IR system.posix_acl_access ,
or
.IR security.selinux .
.PP
Da namespace mechanizzle is used ta define different classez of extended
attributes.
These different classes exist fo' nuff muthafuckin reasons, e.g. tha permissions
and capabilitizzles required fo' manipulatin extended attributez of one
namespace may differ ta another.
.PP
Currently the
.IR securitizzle ,
.IR system ,
.IR trusted ,
and
.IR user
extended attribute classes is defined as busted lyrics bout below fo' realz. Additional
classes may be added up in tha future.
.SS Extended securitizzle attributes
Da securitizzle attribute namespace is used by kernel securitizzle modules,
like fuckin Securitizzle Enhanced Linux.  
Read n' write access permissions ta securitizzle attributes depend on the
policy implemented fo' each securitizzle attribute by tha securitizzle module.
When no securitizzle module is loaded, all processes have read access to
extended securitizzle attributes, n' write access is limited ta processes
that have tha CAP_SYS_ADMIN capability.
.SS Extended system attributes
Extended system attributes is used by tha kernel ta store system
objects like fuckin Access Control Lists n' Capabilities. Put ya muthafuckin choppers up if ya feel dis!  Read n' write
access permissions ta system attributes depend on tha policy implemented
for each system attribute implemented by filesystems up in tha kernel.
.SS Trusted extended attributes
Trusted extended attributes is visible n' accessible only ta processes that
have tha CAP_SYS_ADMIN capabilitizzle (the supa user probably has this
capability).
Attributes up in dis class is used ta implement mechanizzlez up in user
space (i.e., outside tha kernel) which keep shiznit up in extended attributes
to which ordinary processes should not have access.
.SS Extended user attributes
Extended user attributes may be assigned ta filez n' directories for
storin arbitrary additionizzle shiznit like fuckin tha mime type,
characta set or encodin of a gangbangin' file. Da access permissions fo' user
attributes is defined by tha file permission bits.
.PP
Da file permission bitz of regular filez n' directories are
interpreted differently from tha file permission bitz of special files
and symbolic links. For regular filez n' directories tha file
permission bits define access ta tha filez contents, while fo' thang special
filez they define access ta tha thang busted lyrics bout by tha special file.
Da file permissionz of symbolic links is not used up in access
checks. These differences would allow playas ta consume filesystem resources in
a way not controllable by disk quotas fo' crew or ghetto writable special filez n' directories.
.PP
For dis reason, extended user attributes is only allowed fo' regular filez n' directories, n' access ta extended user attributes is restricted ta the
balla n' ta playas wit appropriate capabilitizzles fo' directories wit the
sticky bit set (see the
.BR chmod (1)
manual page fo' a explanation of Sticky Directories).
.SH FILESYSTEM DIFFERENCES
Da kernel n' tha filesystem may place limits on tha maximum number
and size of extended attributes dat can be associated wit a gangbangin' file.
Some file systems, like fuckin ext2/3 n' reiserfs, require tha filesystem
to be mounted wit the
.B user_xattr
mount option up in order fo' extended user attributes ta be used.
.PP
In tha current ext2, ext3 n' ext4 filesystem implementations, each
extended attribute must fit on a single filesystem block (1024, 2048
or 4096 bytes, dependin on tha block size specified when the
filesystem was pimped).
.PP
In tha XFS n' reiserfs filesystem implementations, there is no
practical limit on tha number or size of extended attributes
associated wit a gangbangin' file, n' tha algorithms used ta store extended
attribute shiznit on disk is scalable.
.PP
In tha JFS filesystem implementation, names can be up ta 255 bytes and
values up ta 65,535 bytes.
.SH ADDITIONAL NOTES
Since tha filesystems on which extended attributes is stored might also
be used on architectures wit a gangbangin' finger-lickin' different byte order n' machine word
size, care should be taken ta store attribute joints up in a architecture
independent format.
.SH AUTHORS
Andreas Gruenbacher,
.RI < a.gruenbacher@bestbits.at >
and tha SGI XFS pimpment crew,
.RI < linux-xfs@oss.sgi.com >.
.SH SEE ALSO
getfattr(1),
setfattr(1).
