'\" t
.\"     Title: btrfs-mount
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-MOUNT" "5" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-mount \- mount options n' supported file attributes fo' tha btrfs filesystem
.SH "DESCRIPTION"
.sp
This document raps bout mount options specific ta tha btrfs filesystem\&. Other generic mount options is available,and is busted lyrics bout up in tha \fBmount\fR(8) manpage\&.
.SH "MOUNT OPTIONS"
.PP
\fBalloc_start=\fR\fB\fIbytes\fR\fR
.RS 4
Debuggin option ta force all block allocations above a cold-ass lil certain byte threshold on each block device\&. Da value is specified up in bytes, optionally wit a K, M, or G suffix, case insensitive\&. Default is 1MB\&.
.RE
.PP
\fBautodefrag\fR
.RS 4
Disable/enable auto defragmentation\& fo' realz. Auto defragmentation detects lil' small-ass random writes tha fuck into filez n' queue dem up fo' tha defrag process\&. Works dopest fo' lil' small-ass files; Not well suited fo' big-ass database workloads\&.
.RE
.PP
\fBcheck_int\fR|\fBcheck_int_data\fR|\fBcheck_int_print_mask=\fR\fB\fIvalue\fR\fR
.RS 4
These debuggin options control tha behavior of tha integritizzle checkin module (the BTRFS_FS_CHECK_INTEGRITY config option required)\&.
\fBcheck_int\fR
enablez tha integritizzle checker module, which examines all block write requests ta ensure on\-disk consistency, at a big-ass memory n' CPU cost\&.
\fBcheck_int_data\fR
includes extent data up in tha integritizzle checks, n' implies tha check_int option\&.
\fBcheck_int_print_mask\fR
takes a funky-ass bitmask of BTRFSIC_PRINT_MASK_* joints as defined in
\fIfs/btrfs/check\-integrity\&.c\fR, ta control tha integritizzle checker module behavior\&.

See comments all up in tha top of
\fIfs/btrfs/check\-integrity\&.c\fR
for mo' info\&.
.RE
.PP
\fBcommit=\fR\fB\fIseconds\fR\fR
.RS 4
Set tha interval of periodic commit, 30 secondz by default\& yo. Higher joints defer data bein synced ta permanent storage wit obvious consequences when tha system crashes\&. Da upper bound aint forced yo, but a warnin is printed if it\(cqs mo' than 300 secondz (5 minutes)\&.
.RE
.PP
\fBcompress\fR|\fBcompress=\fR\fB\fItype\fR\fR|\fBcompress\-force\fR|\fBcompress\-force=\fR\fB\fItype\fR\fR
.RS 4
Control BTRFS file data compression\&. Type may be specified as "zlib" "lzo" or "no" (for no compression, used fo' remounting)\&. If no type is specified, zlib is used\&. If compress\-force is specified, all filez is ghon be compressed, whether or not they compress well\&. If compression is enabled, nodatacow n' nodatasum is disabled\&.
.RE
.PP
\fBdegraded\fR
.RS 4
Allow mounts ta continue wit missin devices\& fo' realz. A read\-write mount may fail wit too nuff devices missing, fo' example if a stripe member is straight-up missing\&.
.RE
.PP
\fBdevice=\fR\fB\fIdevicepath\fR\fR
.RS 4
Specify a thang durin mount so dat ioctls on tha control thang can be avoided\&. Especially useful when tryin ta mount a multi\-device setup as root\&. May be specified multiple times fo' multiple devices\&.
.RE
.PP
\fBdiscard\fR
.RS 4
Disable/enable discard mount option\&. Discard thangs frequent commandz ta let tha block thang reclaim space freed by tha filesystem\&. This is useful fo' SSD devices, thinly provisioned LUNs n' virtual machine images yo, but may gotz a thugged-out dope performizzle impact\&. (Da fstrim command be also available ta initiate batch trims from userspace)\&.
.RE
.PP
\fBenospc_debug\fR
.RS 4
Disable/enable debuggin option ta be mo' verbose up in some ENOSPC conditions\&.
.RE
.PP
\fBfatal_errors=\fR\fB\fIaction\fR\fR
.RS 4
Action ta take when encounterin a gangbangin' fatal error\&.

"bug" \- BUG() on a gangbangin' fatal error\&. This is tha default\&.

"panic" \- panic() on a gangbangin' fatal error\&.
.RE
.PP
\fBflushoncommit\fR
.RS 4
The
\fBflushoncommit\fR
mount option forces any data dirtied by a write up in a prior transaction ta commit as part of tha current commit\&. This make tha committed state a gangbangin' straight-up consistent view of tha file system from tha application\(cqs perspectizzle (i\&.e\&., it includes all completed file system operations)\&. This was previously tha behavior only when a snapshot is pimped\&.
.RE
.sp
\fBinode_cache\fR: Enable free inode number caching\&. Defaults ta off cuz of a overflow problem when tha free space crcs don\(cqt fit inside a single page\&.
.PP
\fBmax_inline=\fR\fB\fIbytes\fR\fR
.RS 4
Specify tha maximum amount of space, up in bytes, dat can be inlined up in a metadata B\-tree leaf\&. Da value is specified up in bytes, optionally wit a K, M, or G suffix, case insensitive\&. In practice, dis value is limited by tha root sector size, wit some space unavailable cuz of leaf headers\&. For a 4k sectorsize, max inline data is ~3900 bytes\&.
.RE
.PP
\fBmetadata_ratio=\fR\fB\fIvalue\fR\fR
.RS 4
Specify dat 1 metadata chunk should be allocated afta every
\fIvalue\fR
data chunks\&. Off by default\&.
.RE
.PP
\fBnoacl\fR
.RS 4
Enable/disable support fo' Posix Access Control Lists (ACLs)\&. Right back up in yo muthafuckin ass. See the
\fBacl\fR(5) manual page fo' mo' shiznit bout ACLs\&.
.RE
.PP
\fBnobarrier\fR
.RS 4
ensure dat certain IOs make it all up in tha thang cache n' is on persistent storage\&. If disabled on a thang wit a volatile (non\-battery\-backed) write\-back cache, nobarrier option will lead ta filesystem corruption on a system crash or juice loss\&.
.RE
.PP
\fBnodatacow\fR
.RS 4
Enable/disable data copy\-on\-write fo' newly pimped files\&. Nodatacow implies nodatasum, n' disablez all compression\&.
.RE
.PP
\fBnodatasum\fR
.RS 4
Enable/disable data checksummin fo' newly pimped files\&. Datasum implies datacow\&.
.RE
.PP
\fBnotreelog\fR
.RS 4
Enable/disable tha tree loggin used fo' fsync n' O_SYNC writes\&.
.RE
.PP
\fBrecovery\fR
.RS 4
Enable autorecovery attempts if a wack tree root is found at mount time\&. Currently dis scans a list of nuff muthafuckin previous tree roots n' tries ta use tha straight-up original gangsta readable\&.
.RE
.PP
\fBrescan_uuid_tree\fR
.RS 4
Force check n' rebuild procedure of tha UUID tree\&. This should not normally be needed\&.
.RE
.PP
\fBskip_balance\fR
.RS 4
Skip automatic resume of interrupted balizzle operation afta mount\&. May be resumed wit "btrfs balizzle resume\&."
.RE
.PP
\fBnospace_cache\fR
.RS 4
Disable freespace cache loadin without clearin tha cache\&.
.RE
.PP
\fBclear_cache\fR
.RS 4
Force clearin n' rebuildin of tha disk space cache if suttin' has gone wrong\&.
.RE
.PP
\fBssd\fR|\fBnossd\fR|\fBssd_spread\fR
.RS 4
Options ta control ssd allocation schemes\&. By default, BTRFS will enable or disable ssd allocation heuristics dependin on whether a rotationizzle or nonrotationizzle disk is up in use\&. Da ssd n' nossd options can override dis autodetection\&.

Da ssd_spread mount option attempts ta allocate tha fuck into big-ass chunkz of unused space, n' may big-ass up betta on low\-end ssds\&. ssd_spread implies ssd, enablin all other ssd heuristics as well\&.
.RE
.PP
\fBsubvol=\fR\fB\fIpath\fR\fR
.RS 4
Mount subvolume at
\fIpath\fR
rather than tha root subvolume\&. The
\fIpath\fR
is relatizzle ta tha top level subvolume\&.
.RE
.PP
\fBsubvolid=\fR\fB\fIID\fR\fR
.RS 4
Mount subvolume specified by a ID number rather than tha root subvolume\&. This allows mountin of subvolumes which is not up in tha root of tha mounted filesystem\&. Yo ass can use "btrfs subvolume list" ta peep subvolume ID numbers\&.
.RE
.PP
\fBsubvolrootid=\fR\fB\fIobjectid\fR\fR\fB (deprecated)\fR
.RS 4
Mount subvolume specified by
\fIobjectid\fR
rather than tha root subvolume\&. This allows mountin of subvolumes which is not up in tha root of tha mounted filesystem\&. Yo ass can use "btrfs subvolume show" ta peep tha object ID fo' a subvolume\&.
.RE
.PP
\fBthread_pool=\fR\fB\fInumber\fR\fR
.RS 4
Da number of worker threadz ta allocate\&. Da default number is equal ta tha number of CPUs + 2, or 8, whichever is smaller\&.
.RE
.PP
\fBuser_subvol_rm_allowed\fR
.RS 4
Allow subvolumes ta be deleted by a non\-root user\&. Use wit caution\&.
.RE
.SH "FILE ATTRIBUTES"
.sp
Da btrfs filesystem supports settin tha followin file attributes tha \fBchattr\fR(1) utility
.sp
\fBa\fR \(em append only
.sp
\fBA\fR \(em no atime thugged-out shit
.sp
\fBc\fR \(em compressed
.sp
\fBC\fR \(em no copy on write
.sp
\fBd\fR \(em no dump
.sp
\fBD\fR \(em synchronous directory thugged-out shit
.sp
\fBi\fR \(em immutable
.sp
\fBS\fR \(em synchronous thugged-out shit
.sp
\fBX\fR \(em no compression
.sp
For descriptionz of these attribute flags, please refer ta tha \fBchattr\fR(1) playa page\&.
.SH "SEE ALSO"
.sp
\fBchattr\fR(1), \fBmkfs\&.btrfs\fR(8), \fBmount\fR(8), \fBbtrfs\fR(8)
