'\" t
.TH "SYSTEMD\&.KILL" "5" "" "systemd 208" "systemd.kill"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.kill \- Bust a cap up in environment configuration
.SH "SYNOPSIS"
.PP
\fIservice\fR\&.service,
\fIsocket\fR\&.socket,
\fImount\fR\&.mount,
\fIswap\fR\&.swap
.SH "DESCRIPTION"
.PP
Unit configuration filez fo' skillz, sockets, mount points n' swap devices share a subset of configuration options which define tha process cappin' parametaz of spawned processes\&.
.PP
This playa page lists tha configuration options shared by these four unit types\&. Right back up in yo muthafuckin ass. See
\fBsystemd.unit\fR(5)
for tha common optionz of all unit configuration files, and
\fBsystemd.service\fR(5),
\fBsystemd.socket\fR(5),
\fBsystemd.swap\fR(5)
and
\fBsystemd.mount\fR(5)
for mo' shiznit on tha specific unit configuration files\&. Da execution specific configuration options is configured up in tha [Service], [Socket], [Mount], or [Swap] section, dependin on tha unit type\&.
.SH "OPTIONS"
.PP
\fIKillMode=\fR
.RS 4
Specifies how tha fuck processez of dis steez shall be capped\&. One of
\fBcontrol\-group\fR,
\fBprocess\fR,
\fBnone\fR\&.
.sp
If set to
\fBcontrol\-group\fR, all remainin processes up in tha control crew of dis unit is ghon be terminated on unit stop (for skillz: afta tha stop command is executed, as configured with
\fIExecStop=\fR)\&. If set to
\fBprocess\fR, only tha main process itself is capped\&. If set to
\fBnone\fR, no process is capped\&. In dis case only tha stop command is ghon be executed on unit stop yo, but no process be capped otherwise\&. Processes remainin kickin it afta stop is left up in they control crew n' tha control crew continues ta exist afta stop unless it is empty\&. Defaults to
\fBcontrol\-group\fR\&.
.sp
Processes will first be terminated via
\fBSIGTERM\fR
(unless tha signal ta bust is chizzled via
\fIKillSignal=\fR)\&. Optionally, dis is immediately followed by a
\fBSIGHUP\fR
(if enabled with
\fISendSIGHUP=\fR)\&. If then, afta a thugged-out delay (configured via the
\fITimeoutStopSec=\fR
option), processes still remain, tha termination request is repeated wit the
\fBSIGKILL\fR
signal (unless dis is disabled via the
\fISendSIGKILL=\fR
option)\&. Right back up in yo muthafuckin ass. See
\fBkill\fR(2)
for mo' shiznit\&.
.RE
.PP
\fIKillSignal=\fR
.RS 4
Specifies which signal ta use when cappin' a service\&. Defaults to
\fBSIGTERM\fR\&.
.RE
.PP
\fISendSIGHUP=\fR
.RS 4
Specifies whether ta send
\fBSIGHUP\fR
to remainin processes immediately afta bustin  tha signal configured with
\fIKillSignal=\fR\&. This is useful ta indicate ta shells n' shell\-like programs dat they connection has been severed\&. Takes a funky-ass boolean value\&. Defaults ta "no"\&.
.RE
.PP
\fISendSIGKILL=\fR
.RS 4
Specifies whether ta send
\fBSIGKILL\fR
to remainin processes afta a timeout, if tha aiiight shutdown procedure left processez of tha steez around\&. Takes a funky-ass boolean value\&. Defaults ta "yes"\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemctl\fR(1),
\fBjournalctl\fR(8),
\fBsystemd.unit\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.socket\fR(5),
\fBsystemd.swap\fR(5),
\fBsystemd.mount\fR(5),
\fBsystemd.exec\fR(5),
\fBsystemd.directives\fR(7)
