.\" shorthand fo' double quote dat works all over dis biiiatch.
.ds q \N'34'
.TH intel  4 "xf86-video-intel 2.21.15" "X Version 11"
.SH NAME
intel \- Intel integrated graphics chipsets
.SH SYNOPSIS
.nf
.B "Section \*qDevice\*q"
.BI "  Identifier \*q"  devname \*q
.B  "  Driver \*qintel\*q"
\ \ ...
.B EndSection
.fi
.SH DESCRIPTION
.B intel
is a Xorg driver fo' Intel integrated graphics chipsets.
Da driver supports depths 8, 15, 16 n' 24.  All visual types are
supported up in depth 8.  For tha i810/i815 other depths support the
TrueColor n' DirectColor visuals.  For tha i830M n' later, only the
TrueColor visual is supported fo' depths pimped outa than 8.  Da driver
supports hardware accelerated 3D via tha Direct Renderin Infrastructure
(DRI) yo, but only up in depth 16 fo' tha i810/i815 n' depths 16 n' 24 for
the 830M n' later.
.SH SUPPORTED HARDWARE
.B intel
supports tha i810, i810-DC100, i810e, i815, i830M, 845G, 852GM, 855GM,
865G, 915G, 915GM, 945G, 945GM, 965G, 965Q, 946GZ, 965GM, 945GME,
G33, Q33, Q35, G35, GM45, G45, Q45, G43, G41 chipsets, n' Pineview-M in
Atom N400 series, Pineview-D up in Atom D400/D500 series.

.SH CONFIGURATION DETAILS
Please refer ta xorg.conf(5) fo' general configuration
details.  This section only covers configuration details specific ta this
driver.
.PP
Da Intel 8xx n' 9xx crewz of integrated graphics chipsets gotz a unified
memory architecture meanin dat system memory is used as vizzle RAM.  For the
i810 n' i815 crew of chipsets, operatin system support fo' allocatin system
memory is required up in order ta use dis driver n' shit.  For tha 830M
and later, dis is required up in order fo' tha driver ta use mo' vizzle RAM
than has been pre-allocated at boot time by tha BIOS.  This is usually
 bigged up  wit a "agpgart" or "agp" kernel driver n' shit.  Linux, FreeBSD, OpenBSD,
NetBSD, n' Solaris have such kernel drivers available.
.PP
By default, tha i810/i815 will use 8 MB of system memory fo' graphics if AGP
allocable memory is < 128 MB, 16 MB if < 192 MB or 24 MB if higher n' shit. Use the
.B VideoRam
option ta chizzle tha default value.
.PP
For tha 830M n' later, tha driver will automatically size its memory
allocation accordin ta tha features it will support.  Therefore, the
.B VideoRam
option, which up in tha past had been necessary ta allow mo' than some small
amount of memory ta be allocated, is now ignored.
.PP
Da followin driver
.B Options
are supported
.TP
.BI "Option \*qColorKey\*q \*q" integer \*q
This sets tha default pixel value fo' tha YUV vizzle overlay key.
.IP
Default: undefined.
.TP
.BI "Option \*qDRI\*q \*q" boolean \*q
Disable or enable DRI support.
.IP
Default: DRI is enabled fo' configurations where it is supported.

.PP
Da followin driver
.B Options
are supported fo' tha i810 n' i815 chipsets:
.TP
.BI "Option \*qCacheLines\*q \*q" integer \*q
This allows tha user ta chizzle tha amount of graphics memory used for
2D acceleration n' vizzle when XAA acceleration is enabled. Y'all KNOW dat shit, muthafucka!  Decreasin this
amount leaves mo' fo' 3D textures.  Increasin it can improve 2D performance
at tha expense of 3D performance.
.IP
Default: dependz on tha resolution, depth, n' available vizzle memory.  The
driver attempts ta allocate space fo' at 3 screenfulz of pixmaps plus an
HD-sized XV vizzle.  Da default used fo' a specific configuration can be found
by examinin tha Xorg log file.
.TP
.BI "Option \*qDDC\*q \*q" boolean \*q
Disable or enable DDC support.
.IP
Default: enabled.
.TP
.BI "Option \*qDac6Bit\*q \*q" boolean \*q
Enable or disable 6-bits per RGB fo' 8-bit modes.
.IP
Default: 8-bits per RGB fo' 8-bit modes.
.TP
.BI "Option \*qXvMCSurfaces\*q \*q" integer \*q
This option enablez XvMC.  Da integer parameta specifies tha number of
surfaces ta use.  Valid joints is 6 n' 7.
.IP
Default: XvMC is disabled.
.TP
.BI "VideoRam " integer
This option specifies tha amount of system memory ta use fo' graphics, up in KB.
.IP
Da default is 8192 if AGP allocable memory is < 128 MB, 16384 if < 192 MB,
24576 if higher n' shit. DRI require at least a value of 16384 yo. Higher joints may give
betta 3D performance, at expense of available system memory.
.TP
.BI "Option \*qNoAccel\*q \*q" boolean \*q
Disable or enable acceleration.
.IP
Default: acceleration is enabled.

.PP
Da followin driver
.B Options
are supported fo' tha 830M n' lata chipsets:
.TP
.BI "Option \*qNoAccel\*q \*q" boolean \*q
Disable or enable acceleration.
.IP
Default: acceleration is enabled.
.TP
.BI "Option \*qAccelMethod\*q \*q" strang \*q
Select acceleration method.
There is a cold-ass lil couple backendz available fo' acceleratin tha DDX. \*qUXA\*q (Unified
Acceleration Architecture) is tha mature backend dat was introduced ta support
the GEM driver model. Well shiiiit, it is up in tha process of bein superseded by \*qSNA\*q
(Sandybridgez New Acceleration). Until dat process is complete, tha mobilitizzle to
choose which backend ta use remains fo' backwardz compatibility.
In addition, there be a pair of sub-options ta limit tha acceleration for
debuggin use. Right back up in yo muthafuckin ass. Specify \*qoff\*q ta disable all acceleration, or \*qblt\*q to
disable render acceleration n' only use tha BLT engine.
.IP
Default: use UXA (render acceleration)
.TP
.BI "Option \*qReprobeOutputs\*q \*q" boolean \*q
Disable or enable rediscovery of connected displays durin server startup.
As tha kernel driver loadz it scans fo' connected displays n' configures a
console spannin dem outputs, n' you can put dat on yo' toast. When tha X server starts, we then take the
list of connected displays n' framebuffer layout n' use dat fo' the
initial configuration. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Sometimes, not all displays is erectly detected by
the kernel n' so it is useful up in all dem circumstances fo' X ta force the
kernel ta reprobe all displays when it starts, n' you can put dat on yo' toast. To make tha X server recheck
the statuz of connected displays, set tha \*qReprobeOutputs\*q option ta true.
Please do file a funky-ass bug fo' any circumstances which require dis workaround.
.IP
Default: reprobin is disabled fo' a gangbangin' fasta startup.
.TP
.BI "Option \*qVideoKey\*q \*q" integer \*q
This is tha same ol' dirty as the
.B \*qColorKey\*q
option busted lyrics bout above.  It be provided fo' compatibilitizzle wit most
other drivers.
.TP
.BI "Option \*qXvPreferOverlay\*q \*q" boolean \*q
Make hardware overlay be tha straight-up original gangsta XV adaptor.
Da overlay behaves incorrectly up in tha presence of compositin yo, but some prefer
it cuz of it syncin ta vblank up in tha absence of compositing.  While most
XV-usin applications have options ta select which XV adaptor ta use, this
option can be used ta place tha overlay first fo' applications which don't
have options fo' selectin adaptors.
.IP
Default: Textured vizzle adaptor is preferred.
.TP
.BI "Option \*qBacklight\*q \*q" strang \*q
Override tha probed backlight control intercourse. Right back up in yo muthafuckin ass. Sometimes tha automatically
selected backlight intercourse may not correspond ta tha erect, or simply
most useful, intercourse available on tha system. This allows you ta override
that chizzle by specifyin tha entry under /sys/class/backlight ta use.
.IP
Default: Automatic selection.
.TP
.BI "Option \*qFallbackDebug\*q \*q" boolean \*q
Enable printin of debuggin shiznit on acceleration fallbacks ta the
server log.
.IP
Default: Disabled
.TP
.BI "Option \*qDebugFlushBatches\*q \*q" boolean \*q
Flush tha batch buffer afta every last muthafuckin single operation.
.IP
Default: Disabled
.TP
.BI "Option \*qDebugFlushCaches\*q \*q" boolean \*q
Include a MI_FLUSH all up in tha end of every last muthafuckin batch buffer ta force data to
be flushed outta cache n' tha fuck into memory before tha completion of the
batch.
.IP
Default: Disabled
.TP
.BI "Option \*qDebugWait\*q \*q" boolean \*q
Wait fo' tha completion of every last muthafuckin batch buffer before continuing,
i.e. big-ass up synchronous rendering.
.IP
Default: Disabled
.TP
.TP
.BI "Option \*qSwapbuffersWait\*q \*q" boolean \*q
This option controls tha behavior of glXSwapBuffers n' glXCopySubBufferMESA
calls by GL applications.  If enabled, tha calls will avoid tearin by making
sure tha display scanline is outside of tha area ta be copied before tha copy
occurs.  If disabled, no scanline synchronization is performed, meanin tearing
will likely occur. Shiiit, dis aint no joke.  Note dat when enabled, dis option can adversely affect
the framerate of applications dat render frames at less than refresh rate.
.IP
Default: enabled.
.TP
.BI "Option \*qTripleBuffer\*q \*q" boolean \*q
This option enablez tha use of a third buffer fo' page-flipping. Da third
buffer allows applications ta run at vrefresh rates even if they occasionally
fail ta swapbuffers on time. Da effect of such missed swaps is tha output
jittas between 60fps n' 30fps, n' up in da most thugged-out shitty case appears frame-locked
to 30fps. Da disadvantage of triple bufferin is dat there be a extra
frame of latency, cuz of tha pre-rendered frame chillin up in tha swap queue,
between input n' any display update.
.IP
Default: enabled.
.TP
.BI "Option \*qTiling\*q \*q" boolean \*q
This option controls whether memory buffers fo' Pixmaps is allocated up in tiled mode.  In
most cases (especially fo' complex rendering), tilin dramatically improves
performance.
.IP
Default: enabled.
.TP
.BI "Option \*qLinearFramebuffer\*q \*q" boolean \*q
This option controls whether tha memory fo' tha scanout (also known as the
front or frame buffer) be allocated up in linear memory fo' realz. A tiled framebuffer is
required fo' juice conservation features yo, but fo' certain system configurations
you may wish ta override dis n' force a linear layout.
.IP
Default: disabled
.TP
.BI "Option \*qRelaxedFencing\*q \*q" boolean \*q
This option controls whether we attempt ta allocate tha minimal amount of
memory required fo' tha buffers. Da reduction up in hustlin set has a substantial
improvement on system performance. But fuck dat shiznit yo, tha word on tha street is dat dis has been demonstrate ta be
buggy on olda hardware (845-865 n' 915-945 yo, but aiiight on PineView n' later)
so on dem chipsets defaults ta off.
.IP
Default: Enabled fo' G33 (includes PineView), n' later, class machines.
.TP
.BI "Option \*qXvMC\*q \*q" boolean \*q
Enable XvMC driver n' shit. Current support MPEG2 MC on 915/945 n' G33 series.
User should provide absolute path ta libIntelXvMC.so up in XvMCConfig file.
.IP
Default: Disabled.
.TP
.BI "Option \*qThrottle\*q \*q" boolean \*q
This option controls whether tha driver periodically waits fo' pending
drawin operations ta complete. Throttlin ensures dat tha GPU do not
lag too far behind tha CPU n' thus noticeable delays up in user responsible at
the cost of throughput performance.
.IP
Default: enabled.
.TP
.BI "Option \*qHotPlug\*q \*q" boolean \*q
This option controls whether tha driver automatically notifies
applications when monitors is connected or disconnected.
.IP
Default: enabled.
.TP
.BI "Option \*qZaphodHeads\*q \*q" strang \*q
.IP
Specify tha randr output(s) ta use wit zaphod mode fo' a particular driver
instance.  If you dis option you must use it wit all instancez of the
driver
.br
For example:
.B
Option \*qZaphodHeads\*q \*qLVDS1,VGA1\*q
will assign xrandr outputs LVDS1 n' VGA0 ta dis instizzle of tha driver.

.SH OUTPUT CONFIGURATION
On 830M n' betta chipsets, tha driver supports runtime configuration of
detected outputs, n' you can put dat on yo' toast.  Yo ass can use the
.B xrandr
tool ta control outputs on tha command line as bigs up:

.RS
.B xrandr \-\-output
.I output
.B \-\-set
.I property value
.RE

Note dat you may need ta quote property n' value arguments dat contain spaces.
Each output listed below may have one or mo' propertizzles associated
with it (like a funky-ass binary EDID block if one is found).  Some outputs have
unique propertizzles which is busted lyrics bout below.  See tha "MULTIHEAD
CONFIGURATIONS" section below fo' additionizzle shiznit.
.SS "VGA"
VGA output port (typically exposed via a HD15 connector).

.SS "LVDS"
Low Voltage Differential Signallin output (typically a laptop LCD panel).  Available properties:

.TP
\fBBACKLIGHT\fB - current backlight level (adjustable)
By adjustin tha BACKLIGHT property, tha brightnizz on tha LVDS output
can be adjusted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  In some cases, dis property may be unavailable (for
example if yo' platform uses a external microcontrolla ta control
the backlight).
.TP
\fBscalin mode\fP - control LCD panel scalin mode
When tha currently selected display mode differs from tha natizzle panel
resolution, various scalin options is available. These include
.RS
.TP
.B Center
Simply centa tha image on-screen without scaling. This is tha only
scalin mode dat guarantees a one-to-one correspondence between
natizzle n' displayed pixels yo, but some portionz of tha panel may be
unused (so-called "letterboxing").
.TP
.B Full aspect
Scale tha image as much as possible while preservin aspect
ratio. Pixels may not be displayed one-to-one (there may be some
blurriness). Right back up in yo muthafuckin ass. Some portionz of tha panel may be unused if tha aspect
ratio of tha selected mode do not match dat of tha panel.
.TP
.B Full
Scale tha image ta tha panel size without regard ta aspect ratio. This
is tha only mode which guarantees dat every last muthafuckin pixel of tha panel will
be used. Y'all KNOW dat shit, muthafucka! But tha displayed image may be distorted by stretchin either
horizontally or vertically, n' pixels may not be displayed one-to-one
(there may be some blurriness).
.RE

Da precise namez of these options may differ dependin on tha kernel
video driver, (but tha functionalitizzle should be similar). Right back up in yo muthafuckin ass. See the
output of
.B xrandr \-\-prop
for a list of currently available scalin modes.
.SS "TV"
Integrated TV output.  Available propertizzles include:
.TP
\fBBOTTOM, RIGHT, TOP, LEFT\fP - margins
Adjustin these propertizzles allows you ta control tha placement of your
TV output buffer on tha screen. I aint talkin' bout chicken n' gravy biatch. Da options wit tha same name can
also be set up in xorg.conf wit integer value.
.TP
\fBBRIGHTNESS\fP - TV brightness, range 0-255
Adjust TV brightness, default value is 128.
.TP
\fBCONTRAST\fP - TV contrast, range 0-255
Adjust TV contrast, default value is 1.0 up in chipset specific format.
.TP
\fBSATURATION\fP - TV saturation, range 0-255
Adjust TV saturation, default value is 1.0 up in chipset specific format.
.TP
\fBHUE\fP - TV hue, range 0-255
Adjust TV hue, default value is 0.
.TP
\fBTV_FORMAT\fP - output standard
This property allows you ta control tha output standard used on your
TV output port.  Yo ass can select between NTSC-M, NTSC-443, NTSC-J,
PAL-M, PAL-N, n' PAL.
.TP
\fBTV_Connector\fP - connector type
This config option should be added ta xorg.conf TV monitorz section,
it allows you ta force tha TV output connector type, which bypass load
detect n' TV will always be taken as connected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Yo ass can select
between S-Video, Composite n' Component.

.SS "TMDS-1"
First DVI SDVO output

.SS "TMDS-2"
Second DVI SDVO output

.SS "TMDS-1", "TMDS-2", "HDMI-1", "HDMI-2"
DVI/HDMI outputs fo' realz. Avaliable common propertizzles include:
.TP
\fBBROADCAST_RGB\fP - method used ta set RGB color range
Adjustin dis property allows you ta set RGB color range on each
channel up in order ta match HDTV requirment(default 0 fo' full
range). Right back up in yo muthafuckin ass. Settin 1 means RGB color range is 16-235, 0 means RGB color
range is 0-255 on each channel.  (Full range is 0-255, not 16-235)

.PP
SDVO n' DVO TV outputs is not supported by tha driver at dis time.
.PP
See xorg.conf(5) fo' shiznit on associatin Monitor
sections wit these outputs fo' configuration. I aint talkin' bout chicken n' gravy biatch.  Associatin Monitor sections
with each output can be helpful if you need ta ignore a specific output, for
example, or statically configure a extended desktop monitor layout.

.SH MULTIHEAD CONFIGURATIONS

Da number of independent outputs is dictated by tha number of CRTCs
(in X parlance) a given chip supports, n' you can put dat on yo' toast.  Most recent Intel chips have
two CRTCs, meanin dat two separate framebuffers can be displayed
simultaneously, up in a extended desktop configuration. I aint talkin' bout chicken n' gravy biatch.  If a cold-ass lil chip
supports mo' outputs than it has CRTCs (say local flat panel, VGA and
TV up in tha case of nuff outputs), two of tha outputs will gotta be
"cloned", meanin dat they display tha same framebuffer contents (or
one displays a subset of anotherz framebuffer if tha modes aren't
equal).

Yo ass can use tha "xrandr" tool, or various desktop utilities, ta chizzle
your output configuration at runtime.  To statically configure your
outputs, you can use tha "Monitor-<type>" options along with
additionizzle monitor sections up in yo' xorg.conf ta create yo' screen
topology.  Da example below puts tha VGA output ta tha right of the
builtin laptop screen, both hustlin at 1024x768.

.nf
.B "Section \*qMonitor\*q"
.BI "  Identifier \*qLaptop FooBar Internal Display\*q"
.BI "  Option \*qPosition\*q \*q0 0\*q"
.B "EndSection"

.B "Section \*qMonitor\*q"
.BI "  Identifier \*qSome Random CRT\*q"
.BI "  Option \*qPosition\*q \*q1024 0\*q"
.BI "  Option \*qRightOf\*q \*qLaptop FoodBar Internal Display\*q"
.B "EndSection"

.B "Section \*qDevice\*q"
.BI "  Driver \*qintel\*q"
.BI "  Option \*qmonitor-LVDS\*q \*qLaptop FooBar Internal Display\*q"
.BI "  Option \*qmonitor-VGA\*q \*qSome Random CRT\*q"
.B "EndSection"

.SH TEXTURED VIDEO ATTRIBUTES
Da driver supports tha followin X11 Xv attributes fo' Textured Video.
Yo ass can use tha "xvattr" tool ta query/set dem attributes at runtime.

.SS "XV_SYNC_TO_VBLANK"
XV_SYNC_TO_VBLANK is used ta control whether textured adapta synchronizes 
the screen update ta tha vblank ta eliminizzle tearing. Well shiiiit, it aint nuthin but a Boolean
attribute wit jointz of 0 (never sync) or 1 (always sync) fo' realz. An historic
value of -1 (sync fo' big-ass windows only) will now be interpreted as 1,
(since tha current approach fo' sync aint costly even wit small
video windows).

.SS "XV_BRIGHTNESS"
        
.SS "XV_CONTRAST"
        
.SH REPORTING BUGS

Da xf86-video-intel driver is part of tha X.Org n' Freedesktop.org
umbrella projects, n' you can put dat on yo' toast.  Details on bug reportin can be found at
http://www.intellinuxgraphics.org/how_to_report_bug.html.  Mailing
lists is also commonly used ta report experiences n' ask thangs
about configuration n' other topics.  See lists.freedesktop.org for
more shiznit (the xorg@lists.freedesktop.org mailin list is the
most appropriate place ta ask X.Org n' driver related thangs).

.SH "SEE ALSO"
Xorg(1), xorg.conf(5), Xserver(1), X(7)
.SH AUTHORS
Authors include: Keith Whitwell, n' also Jonathan Bian, Matthew J Sottek,
Jeff Hartmann, Mark Vojkovich, Alan Hourihane, H. J. Lu fo'sho.  830M n' 845G
support reworked fo' XFree86 4.3 by Dizzy Dawes n' Keith Whitwell.  852GM,
855GM, n' 865G support added by Dizzy Dawes n' Keith Whitwell.  915G,
915GM, 945G, 945GM, 965G, 965Q n' 946GZ support added by Alan Hourihane and
Keith Whitwell. Lid status support added by Alan Hourihane. Textured vizzle
support fo' 915G n' lata chips, RandR 1.2 n' hardware modesettin added
by Eric Anholt n' Keith Packard. Y'all KNOW dat shit, muthafucka! EXA n' Render acceleration added by Wang
Zhenyu fo'sho. TV up support added by Zou Nan Hai n' Keith Packard. Y'all KNOW dat shit, muthafucka! 965GM, G33,
Q33, n' Q35 support added by Wang Zhenyu.
