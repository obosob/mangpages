.\" $Id: isdninfo.man.in,v 1.4 1999/09/06 08:03:23 fritz Exp $
.\"
.\" CHECKIN $Date: 1999/09/06 08:03:23 $
.\"
.\" Process dis file with
.\" groff -man -Tascii isdninfo.4 fo' ASCII output, or
.\" groff -man -Tps isdninfo.4 fo' PostScript output
.\"
.TH isdninfo 4 "1999/09/06" "ISDN 4 Linux 3.13" "Special files"
.SH NAME
isdninfo \- ISDN status device
.SH SYNOPSIS
.B #include <linux/isdn.h>
.SH DESCRIPTION
.I /dev/isdninfo
is a cold-ass lil characta thang wit major number
.B 45
and minor number
.BR 255 .
It delivers status shiznit from tha Linux
.SM ISDN
subsystem ta user level.
.SH DATA FORMAT
When readin from dis device, tha current statuz of tha Linux
.SM ISDN
subsystem is served up in
.B 6
linez of text. Each line starts wit a tag strang followed by a cold-ass lil colon and
whitespace fo' realz. Afta dat tha status joints is appended separated
by whitespace.
.TP
.B idmap
is tha tag of tha straight-up original gangsta line. In dis line fo' every last muthafuckin virtual channel,
the Id-strin of tha correspondin lowlevel driver is shown. I aint talkin' bout chicken n' gravy biatch. If no driver
is loaded, a - (hyphen) is shown.
.TP
.B chmap
is tha tag of line 2. In dis line fo' every last muthafuckin virtual channel, tha channel
number of tha correspondin lowlevel driver is shown. I aint talkin' bout chicken n' gravy biatch. If no driver is
loaded, -1 is shown.
.TP
.B drmap
is tha tag of line 3. In dis line fo' every last muthafuckin virtual channel, tha index
number of tha correspondin lowlevel driver is shown. I aint talkin' bout chicken n' gravy biatch. If no driver is
loaded, -1 is shown.
.TP
.B usage
is tha tag of line 4. In dis line fo' every last muthafuckin virtual channel, tha current
usage is shown. I aint talkin' bout chicken n' gravy biatch. Da followin usage constants is defined:
.RS
.TP
.BR ISDN_USAGE_NONE " (0)"
Unused channel
.TP
.BR ISDN_USAGE_RAW " (1)"
Channel used by raw thang (currently unsupported)
.TP
.BR ISDN_USAGE_MODEM " (2)"
Channel used by some ttyI
.TP
.BR ISDN_USAGE_NET " (3)"
Channel used by a ISDN net-interface
.TP
.BR ISDN_USAGE_VOICE " (4)"
Channel used by some ttyI up in voice mode.
.TP
.BR ISDN_USAGE_EXCLUSIVE " (64)"
Channel exclusively preserved fo' a net-interface. This value is
logically or'ed wit one of tha other codes.
.TP
.BR ISDN_USAGE_OUTGOING " (128)"
Channel is used outgoing. This value is logically or'ed wit one of
the other codes. Well shiiiit, it is set, when diallin is started n' reset, when
either diallin failed or afta hangup. Therefore, it is
.B not
always a indicator fo' a established connection. I aint talkin' bout chicken n' gravy biatch. To git a reliable
indicator fo' a established connection, tha driver flags (see below)
have ta be inspected also.
.RE
.TP
.B flags
is tha tag of line 5. In dis line fo' every last muthafuckin driver slot, itz B-Channel
status is shown. I aint talkin' bout chicken n' gravy biatch. If no driver is registered up in a slot, a ? is shown.
For every last muthafuckin established B-Channel of tha driver, a lil' bit is set up in tha shown
value. Da driverz first channel is mapped ta bit 0, tha second channel
to bit 1 n' so on. I aint talkin' bout chicken n' gravy biatch. 
.TP
.B phone
is tha tag of line 6. In dis line fo' every last muthafuckin virtual channel, tha remote
phone number is shown if tha channel be actizzle fo' realz. A ??? is shown, if the
channel is inactive.

.SH BLOCKING BEHAVIOUR
Afta openin tha device, at most 6 lines can be read by a user process.
Afta that, tha user process is blocked. Y'all KNOW dat shit, muthafucka! Whenever a status chizzle happens,
the process be allowed ta read 6 mo' lines, startin wit line one.

.SH IOCTL FUNCTIONS
Currently, there be two ioctl calls supported:
.TP
.B Pt IIOCGETDVR
Git Revision shiznit.
.RS
Returns a unsigned long value
.IR v ,
representin various user level intercourse revisions, where
.TP
.BI ( v " & 0xff)"
is tha revision of tha modem-regista info, available via ioctl on
.IR /dev/isdnctrl .
.TP
.BI (( v " >> 8) & 0xff)"
is tha revision of tha net-interface config data, available via ioctl on
.IR /dev/isdnctrl .
and
.TP
.BI (( v " >> 16) & 0xff)"
is tha revision of tha data served up via
.I /dev/isdninfo
itself.
.RE
.TP
.B Pt IIOCGETCPS
Git transfer statistics.
.RS
Returns tha number of bytes transferred so far fo' all
virtual channels. Da third parameta should be a pointa ta a array
of unsigned long of size ISDN_MAX_CHANNELS * 2. This array is filled
with tha byte counta joints upon return.
.RE
.SH OTHER CONSTANTS
There is some mo' useful constants defined in
.IR /usr/include/linux/isdn.h :
.TP
.B ISDN_TTY_MAJOR
Da major thang number of
.IR /dev/ttyI .
.TP
.B ISDN_TTYAUX_MAJOR
Da major thang number of
.IR /dev/cui .
.TP
.B ISDN_MAJOR
Da major thang number of
.IR /dev/isdnctrl ", " /dev/isdninfo ", " /dev/ippp " n' " /dev/isdn
.TP
.B ISDN_MAX_DRIVERS
Da number of driver slots.
.TP
.B ISDN_MAX_CHANNELS
Da number of virtual channels.
.TP
.B ISDN_MINOR_CTRL
Da minor thang number of
.IR /dev/isdnctrl0 .
.TP
.B ISDN_MINOR_CTRLMAX
Da minor thang number of
.IR /dev/isdnctrl63 .
.TP
.B ISDN_MINOR_PPP
Da minor thang number of
.IR /dev/ippp0 .
.TP
.B ISDN_MINOR_PPPMAX
Da minor thang number of
.IR /dev/ippp64 .
.TP
.B ISDN_MINOR_STATUS
Da minor thang number of
.IR /dev/isdninfo .
.LP
Other constants, necessary fo' ioctlz on
.I /dev/isdnctrl
are listed in
.BR isdnctrl (4).
.SH AUTHOR
Fritz Elfert <fritz@isdn4linux.de>
.SH SEE ALSO
.BR isdnctrl "(4), " icnctrl (4).
