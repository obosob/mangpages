.\" shorthand fo' double quote dat works all over dis biiiatch.
.ds q \N'34'
.TH SYNAPTICS 4 "xf86-input-synaptics 1.7.6" "X Version 11"
.SH NAME
synaptics \- touchpad input driver
.SH SYNOPSIS
.nf
.B "Section \*qInputDevice\*q"
.BI "  Identifier \*q" devname \*q
.B  "  Driver \*qsynaptics\*q"
.BI "  Option \*qDevice\*q   \*q" devpath \*q
.BI "  Option \*qPath\*q     \*q" path \*q
\ \ ...
.B EndSection
.fi
.SH DESCRIPTION
.B synaptics
is a Xorg input driver fo' touchpads.
Even though touchpadz can be handled by tha aiiight evdev or mouse drivers,
this driver allows mo' advanced featurez of the
touchpad ta become available. Right back up in yo muthafuckin ass. Some benefits would be:
.IP \(bu 4
Movement wit adjustable, non-linear acceleration n' speed.
.IP \(bu 4
Button events all up in short touchin of tha touchpad.
.IP \(bu 4
Double-Button events all up in double short touchin of tha touchpad.
.IP \(bu 4
Draggin all up in short touchin n' holdin down tha finger on the
touchpad (tap-and-drag gesture).
.IP \(bu 4
Middle n' right button events on tha upper n' lower corner of the
touchpad.
.IP \(bu 4
Vertical scrollin (button four n' five events) all up in movin the
finger on tha right side of tha touchpad.
.IP \(bu 4
Da up/down button sendz button four/five events.
.IP \(bu 4
Horizontal scrollin (button six n' seven events) all up in movin the
finger on tha lower side of tha touchpad.
.IP \(bu 4
Da multi-buttons bust button four/five events fo' vertical scrolling
and button six/seven events fo' horizontal scrolling.
.IP \(bu 4
Adjustable finger detection.
.IP \(bu 4
Multifinger taps: two finger fo' right button n' three finger for
middle button events.
.
(Needz hardware support.
.
Not all models implement dis feature.)
.IP \(bu 4
Pressure-dependent motion speed.
.LP
Note dat dependin on tha touchpad firmware, a shitload of these features
might be available even without rockin tha synaptics driver n' shit. Note also
that some functions is not available on all touchpad models, cuz
they need support from tha touchpad hardware/firmware. (Multifinger
taps fo' example.)
.PP
Da name "synaptics" is oldschool n' tha driver still serves up the
synaptics protocol parsin code. Under Linux however, tha hardware-specifics
are handled by tha kernel n' dis driver will work fo' any touchpad that
has a hustlin kernel driver n' shit. If yo' thang is recognized as \*qPS/2
Mouse\*q or similar, tha kernel driver do not support yo' thang n' this
driver will only provide limited functionality.

.SH CONFIGURATION OPTIONS
Please refer ta xorg.conf(5) fo' general configuration
details n' fo' options dat can be used wit all input drivers.  This
section only covers configuration details specific ta dis driver.
.PP
Da followin driver
.B Options
are supported:
.TP 7
.BI "Option \*qDevice\*q \*q" strang \*q
This option specifies tha thang file up in yo' \*q/dev\*q directory which will
be used ta access tha physical device. Normally you should use suttin' like
\*q/dev/input/eventX\*q, where X is some integer.
.TP 7
.BI "Option \*qProtocol\*q \*q" strang \*q
Specifies which kernel driver is ghon be used by dis driver n' shit. This is tha list of
supported drivers n' they default use scenarios.
.TS
l l.
auto-dev	automatic, default (recommend)
event	Linux 2.6 kernel events
psaux	raw thang access (Linux 2.4)
psm	FreeBSD psm driver
.TE
.TP 7
.BI "Option \*qLeftEdge\*q \*q" integer \*q
X coordinizzle fo' left edge. Property: "Synaptics Edges"
.TP 7
.BI "Option \*qRightEdge\*q \*q" integer \*q
X coordinizzle fo' right edge. Property: "Synaptics Edges"
.TP 7
.BI "Option \*qTopEdge\*q \*q" integer \*q
Y coordinizzle fo' top edge. Property: "Synaptics Edges"
.TP 7
.BI "Option \*qBottomEdge\*q \*q" integer \*q
Y coordinizzle fo' bottom edge. Property: "Synaptics Edges"
.TP 7
.BI "Option \*qFingerLow\*q \*q" integer \*q
When finger heat drops below dis value, tha driver counts it as a
release. Property: "Synaptics Finger"
.TP 7
.BI "Option \*qFingerHigh\*q \*q" integer \*q
When finger heat goes above dis value, tha driver counts it as a
touch. Property: "Synaptics Finger"
.TP 7
.BI "Option \*qMaxTapTime\*q \*q" integer \*q
Maximum time (in milliseconds) fo' detectin a tap. Property: "Synaptics Tap
Durations"
.TP 7
.BI "Option \*qMaxTapMove\*q \*q" integer \*q
Maximum movement of tha finger fo' detectin a tap. Property: "Synaptics Tap
Move"
.TP 7
.BI "Option \*qMaxDoubleTapTime\*q \*q" integer \*q
Maximum time (in milliseconds) fo' detectin a thugged-out double tap. Property:
"Synaptics Tap Durations"
.TP 7
.BI "Option \*qClickTime\*q \*q" integer \*q
Da duration of tha mouse click generated by tapping. Property: "Synaptics Tap
Durations"
.TP 7
.BI "Option \*qClickPad\*q \*q" boolean \*q
Whether tha thang be a cold-ass lil click pad. Y'all KNOW dat shit, muthafucka! See
.B ClickPad support
for mo' details. Property: "Synaptics ClickPad"
.TP 7
.BI "Option \*qVertEdgeScroll\*q \*q" boolean \*q
Enable vertical scrollin when draggin along tha right edge. Property:
"Synaptics Edge Scrolling"
.TP 7
.BI "Option \*qHorizEdgeScroll\*q \*q" boolean \*q
Enable horizontal scrollin when draggin along tha bottom edge. Property:
"Synaptics Edge Scrolling"
.TP 7
.BI "Option \*qCornerCoasting\*q \*q" boolean \*q
Enable edge scrollin ta continue while tha finger stays up in a edge corner.
Property: "Synaptics Edge Scrolling"
.TP 7
.BI "Option \*qVertTwoFingerScroll\*q \*q" boolean \*q
Enable vertical scrollin when draggin wit two fingers anywhere on
the touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Two-Finger Scrolling"
.TP 7
.BI "Option \*qHorizTwoFingerScroll\*q \*q" boolean \*q
Enable horizontal scrollin when draggin wit two fingers anywhere on
the touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Two-Finger Scrolling"
.TP 7
.BI "Option \*qVertScrollDelta\*q \*q" integer \*q
Move distizzle of tha finger fo' a scroll event. Property: "Synaptics Scrolling
Distance"
.TP 7
.BI "Option \*qHorizScrollDelta\*q \*q" integer \*q
Move distizzle of tha finger fo' a scroll event. Property: "Synaptics Scrolling
Distance"
.TP
.BI "Option \*qMinSpeed\*q \*q" float \*q
Minimum speed factor. Shiiit, dis aint no joke. Property: "Synaptics Move Speed"
.TP
.BI "Option \*qMaxSpeed\*q \*q" float \*q
Maximum speed factor. Shiiit, dis aint no joke. Property: "Synaptics Move Speed"
.TP
.BI "Option \*qAccelFactor\*q \*q" float \*q
Acceleration factor fo' aiiight pointa movements, n' you can put dat on yo' toast. Property: "Synaptics Move
Speed"
.TP
.BI "Option \*qPressureMotionMinZ\*q \*q" integer \*q
Finger heat at which minimum heat motion factor be applied. Y'all KNOW dat shit, muthafucka! Property:
"Synaptics Pressure Motion"
.TP
.BI "Option \*qPressureMotionMaxZ\*q \*q" integer \*q
Finger heat at which maximum heat motion factor be applied. Y'all KNOW dat shit, muthafucka!  Property:
"Synaptics Pressure Motion"
.TP
.BI "Option \*qPressureMotionMinFactor\*q \*q" integer \*q
Lowest settin fo' heat motion factor. Shiiit, dis aint no joke. Property: "Synaptics Pressure
Motion Factor"
.TP
.BI "Option \*qPressureMotionMaxFactor\*q \*q" integer \*q
Top Billin settin fo' heat motion factor. Shiiit, dis aint no joke. Property: "Synaptics Pressure
Motion Factor"
.TP
.BI "Option \*qHorizHysteresis\*q \*q" integer \*q
Da minimum horizontal HW distizzle required ta generate motion events, n' you can put dat on yo' toast. Can be
specified as a cementage. Increase if noise motion be a problem fo' yo thugged-out ass. Zero
is disabled.
Default: 0.5 cement of tha diagonal or (in case of evdev) tha appropriate
"fuzz" as advertised by tha device.
.TP
.BI "Option \*qVertHysteresis\*q \*q" integer \*q
Da minimum vertical HW distizzle required ta generate motion events, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. See
\fBHorizHysteresis\fR.
.TP
.BI "Option \*qUpDownScrolling\*q \*q" boolean \*q
If on, tha up/down buttons generate button 4/5 events.
.
If off, tha up button generates a thugged-out double click n' tha down button
generates a funky-ass button 2 event. This option is only available fo' touchpadz with
physical scroll buttons.
Property: "Synaptics Button Scrolling"
.TP
.BI "Option \*qLeftRightScrolling\*q \*q" boolean \*q
If on, tha left/right buttons generate button 6/7 events.
.
If off, tha left/right buttons both generate button 2 events.
This option is only available fo' touchpadz wit physical scroll buttons.
Property: "Synaptics Button Scrolling"
.TP
.BI "Option \*qUpDownScrollRepeat\*q \*q" boolean \*q
If on, n' tha up/down buttons is used fo' scrolling
(\fBUpDownScrolling\fR), these buttons will bust auto-repeatin 4/5 events,
with tha delay between repeats determined by \fBScrollButtonRepeat\fR.
This option is only available fo' touchpadz wit physical scroll buttons.
Property: "Synaptics Button Scrollin Repeat"
.TP
.BI "Option \*qLeftRightScrollRepeat\*q \*q" boolean \*q
If on, n' tha left/right buttons is used fo' scrolling
(\fBLeftRightScrolling\fR), these buttons will bust auto-repeatin 6/7 events,
with tha delay between repeats determined by \fBScrollButtonRepeat\fR.
This option is only available fo' touchpadz wit physical scroll buttons.
Property: "Synaptics Button Scrollin Repeat"
.TP
.BI "Option \*qScrollButtonRepeat\*q \*q" integer \*q
Da number of millisecondz between repeatz of button events 4-7 from the
up/down/left/right scroll buttons.
This option is only available fo' touchpadz wit physical scroll buttons.
Property: "Synaptics Button Scrollin Time"
.TP
.BI "Option \*qEmulateMidButtonTime\*q \*q" integer \*q
Maximum time (in milliseconds) fo' middle button emulation. I aint talkin' bout chicken n' gravy biatch. Property:
"Synaptics Middle Button Timeout"
.TP
.BI "Option \*qEmulateTwoFingerMinZ\*q \*q" integer \*q
For touchpadz not capable of detectin multiple fingers but is capable
of detectin finger heat n' width, dis sets the
Z heat threshold. Y'all KNOW dat shit, muthafucka!  When both Z heat n' W width thresholds
are crossed, a two finger press is ghon be emulated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This defaults
to a value dat disablez emulation on touchpadz wit real two-finger detection
and defaults ta a value dat enablez emulation on remainin touchpadz that
support heat n' width support.
Property: "Synaptics Two-Finger Pressure"
.TP
.BI "Option \*qEmulateTwoFingerMinW\*q \*q" integer \*q
For touchpadz not capable of detectin multiple fingers but are
capable of detectin finger width n' pressure, dis sets the
W width threshold. Y'all KNOW dat shit, muthafucka!  When both W width n' Z heat thresholds
are crossed, a two finger press is ghon be emulated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This feature works best
with (\fBPalmDetect\fR) off. Property: "Synaptics Two-Finger Width"
.TP
.BI "Option \*qTouchpadOff\*q \*q" integer \*q
Switch off tha touchpad.
.
Valid joints are:
.TS
l l.
0	Touchpad is enabled
1	Touchpad is switched off (physical clicks still work)
2	Only tappin n' scrollin is switched off
.TE
When tha touchpad is switched off yo, button events caused by a physical
button press is still interpreted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. On a ClickPad, dis includes
software-emulated middle n' right buttons as defined by
the SoftButtonAreas setting.
.TP
Property: "Synaptics Off"
.TP
.BI "Option \*qLockedDrags\*q \*q" boolean \*q
If off, a tap-and-drag gesture endz when you release tha finger.
.
If on, tha gesture be actizzle until you tap a second time, or until
LockedDragTimeout expires. Property: "Synaptics Locked Drags"
.TP
.BI "Option \*qLockedDragTimeout\*q \*q" integer \*q
This parameta specifies how tha fuck long it takes (in milliseconds) fo' the
LockedDrags mode ta be automatically turned off afta tha finger is
released from tha touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Locked Drags Timeout"
.TP
.BI "Option \*qRTCornerButton\*q \*q" integer \*q
.
Which mouse button is reported on a right top corner tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qRBCornerButton\*q \*q" integer \*q
Which mouse button is reported on a right bottom corner tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qLTCornerButton\*q \*q" integer \*q
Which mouse button is reported on a left top corner tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qLBCornerButton\*q \*q" integer \*q
Which mouse button is reported on a left bottom corner tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qTapButton1\*q \*q" integer \*q
Which mouse button is reported on a non-corner one-finger tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qTapButton2\*q \*q" integer \*q
Which mouse button is reported on a non-corner two-finger tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qTapButton3\*q \*q" integer \*q
Which mouse button is reported on a non-corner three-finger tap.
.
Set ta 0 ta disable. Property: "Synaptics Tap Action"
.TP
.BI "Option \*qClickFinger1\*q \*q" integer \*q
Which mouse button is reported when left-clickin wit one finger.
.
Set ta 0 ta disable. Property: "Synaptics Click Action"
.TP
.BI "Option \*qClickFinger2\*q \*q" integer \*q
Which mouse button is reported when left-clickin wit two fingers.
.
Set ta 0 ta disable. Property: "Synaptics Click Action"
.TP
.BI "Option \*qClickFinger3\*q \*q" integer \*q
Which mouse button is reported when left-clickin wit three fingers.
.
Set ta 0 ta disable. Property: "Synaptics Click Action"
.TP
.BI "Option \*qCircularScrolling\*q \*q" boolean \*q
If on, circular scrollin is used. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Circular Scrolling"
.TP
.BI "Option \*qCircScrollDelta\*q \*q" float \*q
Move angle (radians) of finger ta generate a scroll event. Property: "Synaptics
Circular Scrollin Distance"
.TP
.BI "Option \*qCircScrollTrigger\*q \*q" integer \*q
Trigger region on tha touchpad ta start circular scrolling
.TS
l l.
0	All Edges
1	Top Edge
2	Top Right Corner
3	Right Edge
4	Bottom Right Corner
5	Bottom Edge
6	Bottom Left Corner
7	Left Edge
8	Top Left Corner
.TE
Property: "Synaptics Circular Scrollin Trigger"
.TP
.BI "Option \*qCircularPad\*q \*q" boolean \*q
.
Instead of bein a rectangle, tha edge is tha ellipse enclosed by the
Left/Right/Top/BottomEdge parameters.
.
For circular touchpads. Property: "Synaptics Circular Pad"
.TP
.BI "Option \*qPalmDetect\*q \*q" boolean \*q
If palm detection should be enabled.
.
Note dat dis also requires hardware/firmware support from the
touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Palm Detection"
.TP
.BI "Option \*qPalmMinWidth\*q \*q" integer \*q
Minimum finger width at which bust a nut on is considered a palm. Property: "Synaptics
Palm Dimensions"
.TP
.BI "Option \*qPalmMinZ\*q \*q" integer \*q
Minimum finger heat at which bust a nut on is considered a palm. Property:
"Synaptics Palm Dimensions"
.TP
.BI "Option \*qCoastingSpeed\*q \*q" float \*q
Yo crazy-ass finger need ta produce dis nuff scrolls per second up in order ta start
coasting.  Da default is 20 which should prevent you from startin coasting
unintentionally.
.
0 disablez coasting. Property: "Synaptics Coastin Speed"
.TP
.BI "Option \*qCoastingFriction\*q \*q" float \*q
Number of scrolls/second² ta decrease tha coastin speed. Y'all KNOW dat shit, muthafucka!  Default
is 50.
Property: "Synaptics Coastin Speed"
.TP
.BI "Option \*qSingleTapTimeout\*q \*q" integer \*q
Timeout afta a tap ta recognize it as a single tap. Property: "Synaptics Tap
Durations"
.TP
.BI "Option \*qGrabEventDevice\*q \*q" boolean \*q
If GrabEventDevice is true, tha driver will grab tha event thang for
exclusive use when rockin tha linux 2.6 event protocol.
.
When rockin other protocols, dis option has no effect.
.
Grabbin tha event thang means dat no other user space or kernel
space program sees tha touchpad events, n' you can put dat on yo' toast. 
.
This is desirable if tha X config file includes /dev/input/mice as an
input device yo, but is undesirable if you wanna monitor tha device
from user space.
.
When changin dis parameta wit tha synclient program, tha chizzle
will not take effect until tha synaptics driver is disabled and
reenabled. Y'all KNOW dat shit, muthafucka! 
.
This can be  bigged up  by switchin ta a text console n' then switching
back ta X.
.
.
.TP
.BI "Option \*qTapAndDragGesture\*q \*q" boolean \*q
Switch on/off tha tap-and-drag gesture.
.
This gesture be a alternatizzle way of dragging.
.
It be performed by tappin (touchin n' releasin tha finger), then
touchin again n' again n' again n' movin tha finger on tha touchpad.
.
Da gesture is enabled by default n' can be disabled by settin the
TapAndDragGesture option ta false. Property: "Synaptics Gestures"
.
.TP
.BI "Option \*qVertResolution\*q \*q" integer \*q
Resolution of X coordinates up in units/millimeter n' shit. Da value is used
together wit HorizResolution ta compensate unequal vertical and
horizontal sensitivity. Right back up in yo muthafuckin ass. Settin VertResolution n' HorizResolution
equal joints means no compensation. I aint talkin' bout chicken n' gravy biatch. Default value is read from
the touchpad or set ta 1 if value could not be read.
Property: "Synaptics Pad Resolution"
.
.TP
.BI "Option \*qHorizResolution\*q \*q" integer \*q
Resolution of Y coordinates up in units/millimeter n' shit. Da value is used
together wit VertResolution ta compensate unequal vertical and
horizontal sensitivity. Right back up in yo muthafuckin ass. Settin VertResolution n' HorizResolution
equal joints means no compensation. I aint talkin' bout chicken n' gravy biatch. Default value is read from
the touchpad or set ta 1 if value could not be read.
Property: "Synaptics Pad Resolution"
.
.TP
.BI "Option \*qAreaLeftEdge\*q \*q" integer \*q
Ignore movements, scrollin n' tappin which start left of dis edge.
.
Da option is disabled by default n' can be enabled by settin the
AreaLeftEdge option ta any integer value other than zero. If supported by the
server (version 1.9 n' later), tha edge may be specified up in cement of
the total width of tha touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Area"
.
.TP
.BI "Option \*qAreaRightEdge\*q \*q" integer \*q
Ignore movements, scrollin n' tappin which start right of dis edge.
.
Da option is disabled by default n' can be enabled by settin the
AreaRightEdge option ta any integer value other than zero. If supported by the
server (version 1.9 n' later), tha edge may be specified up in cement of
the total width of tha touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Area"
.
.TP
.BI "Option \*qAreaTopEdge\*q \*q" integer \*q
Ignore movements, scrollin n' tappin which start above dis edge.
.
Da option is disabled by default n' can be enabled by settin the
AreaTopEdge option ta any integer value other than zero. If supported by the
server (version 1.9 n' later), tha edge may be specified up in cement of
the total height of tha touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Area"
.
.TP
.BI "Option \*qAreaBottomEdge\*q \*q" integer \*q
Ignore movements, scrollin n' tappin which start below dis edge.
.
Da option is disabled by default n' can be enabled by settin the
AreaBottomEdge option ta any integer value other than zero. If supported by the
server (version 1.9 n' later), tha edge may be specified up in cement of
the total height of tha touchpad. Y'all KNOW dat shit, muthafucka! Property: "Synaptics Area"
.
.TP
.BI "Option \*qSoftButtonAreas\*q \*q" "RBL RBR RBT RBB MBL MBR MBT MBB" \*q
This option is only available on ClickPad devices. 
Enable soft button click area support on ClickPad devices. 
Da first four parametas is tha left, right, top, bottom edge of tha right
button, respectively, tha second four parametas is tha left, right, top,
bottom edge of tha middle button, respectively fo' realz. Any of tha joints may be
given as cementage of tha touchpad width or height, whichever applies.
If any edge is set ta 0 (not 0%), tha button be assumed ta extend to
infinitizzle up in tha given direction. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Settin all joints ta 0 (not 0%) disables
soft button areas. Button areas may not overlap, however it is permitted fo' two
buttons ta share a edge value.
Property: "Synaptics Soft Button Areas"
.
.TP
.BI "Option \*qHasSecondarySoftButtons\*q \*q" boolean \*q
This option is only available on ClickPad devices.
Enable tha secondary software button area support. Da exact area must be
set up in option \*qSecondarySoftButtonAreas\*q.  See
.B ClickPad support
for mo' details.
.
.TP
.BI "Option \*qSecondarySoftButtonAreas\*q \*q" "RBL RBR RBT RBB MBL MBR MBT MBB" \*q
This option is only available on ClickPad devices n' only if
.B Option \*qHasSecondarySoftButtons\*q
is enabled.
Define tha secondary soft button click areas on ClickPad devices (usually on
top of tha device).
For tha allowed joints fo' dis option, see
.B Option \*qSoftButtonAreas\*q.
Primary n' secondary soft button areas must not overlap each other n' shit. If they do,
the behavior of tha driver is undefined.
Property: "Synaptics Secondary Soft Button Areas". This property is only
initialized if 
.B Option \*qHasSecondarySoftButtons\*q 
is enabled n' dis option is set up in tha xorg.conf(5).
.

.SH CONFIGURATION DETAILS
.SS Area handling
Da LeftEdge, RightEdge, TopEdge n' BottomEdge parametas is used to
define tha edge n' corner areaz of tha touchpad.
.
Da parametas split tha touchpad area up in 9 pieces, like this:
.LP
.TS
l|l|lsls
---
|c|cw(5P)|c|l
---
|c|c|c|l
|c|c|c|l
|c|c|c|l
---
|c|c|c|l
---
|lsl|ll.
	LeftEdge	RightEdge
			Physical top edge
1	2	3
			TopEdge

4	5	6

			BottomEdge
7	8	9
			Physical bottom edge
Physical left edge		Physical right edge
.TE
.LP
Coordinates ta tha left of LeftEdge is part of tha left edge (areas
1, 4 n' 7), coordinates ta tha left of LeftEdge n' above TopEdge
(area 1) is part of tha upper left corner, etc.
.PP
A phat way ta find appropriate edge parametas is ta use evtest(1) on the
device ta peep tha x/y coordinates correspondin ta different positions on
the touchpad.
.PP
Da perceived physical edges may be adjusted wit tha AreaLeftEdge,
AreaRightEdge, AreaTopEdge, n' AreaBottomEdge options. If these joints are
set ta suttin' other than tha physical edges, input dat starts up in the
space between tha area edge n' tha respectizzle physical edge is ignored.
Note dat dis reduces tha available space on tha touchpad ta start motions
in.
.SS Tapping
A tap event happens when tha finger is touched n' busted out up in a time
interval shorta than MaxTapTime, n' tha bust a nut on n' release
coordinates is less than MaxTapMove units apart.
.
A "touch" event happens when tha Z value goes above FingerHigh, n' an
"untouch" event happens when tha Z value goes below FingerLow.
.
.LP
Da MaxDoubleTapTime parameta has tha same ol' dirty function as tha MaxTapTime
parameter yo, but fo' tha second, third, etc tap up in a tap sequence.
.
If you can't big-ass up double clicks fast enough (for example, xmms
dependz on fast double clicks), try reducin dis parameter.
.
If you can't git word selection ta work up in xterm (ie button down,
button up yo, button down, move mouse), try increasin dis parameter.
.
.LP
Da ClickTime parameta controls tha delay between tha button down and
button up X events generated up in response ta a tap event.
.
A too long value can cause undesirable autorepeat up in scroll bars n' a
too lil' small-ass value means dat visual feedback from tha gui application
yo ass is interactin wit is harder ta see.
.
For dis parameta ta have any effect, "FastTaps" has ta be disabled.
.SS Acceleration
Da MinSpeed, MaxSpeed n' AccelFactor parametas control tha pointer
motion speed.
.
Da speed value defines tha scalin between touchpad coordinates and
screen coordinates.
.
When movin tha finger straight-up slowly, tha MinSpeed value is used, when
movin straight-up fast tha MaxSpeed value is used.
.
When movin tha finger at moderate speed, you git a pointa motion
speed somewhere between MinSpeed n' MaxSpeed.
.
If you don't want any acceleration, set MinSpeed n' MaxSpeed ta the
same value.
.
.LP
Da MinSpeed, MaxSpeed n' AccelFactor parametas aint gots any
effect on scrollin speed.
.
Scrollin speed is determined solely from tha VertScrollDelta and
HorizScrollDelta parameters.
.
To invert tha direction of vertical or horizontal scrolling, set
VertScrollDelta or HorizScrollDelta ta a wack value.
.
.LP
Acceleration is mostly handled outside tha driver, thus tha driver will
translate MinSpeed tha fuck into constant deceleration n' adapt MaxSpeed at
startup time. This ensures you can user tha other acceleration profiles, albeit
without heat motion. I aint talkin' bout chicken n' gravy biatch yo. However tha numbers at runtime will likely be different
from any options you may have set.

.SS Pressure motion
When heat motion be activated, tha cursor motion speed depends
on tha heat exerted on tha touchpad (the mo' heat exerted on
the touchpad, tha fasta tha pointer).
.
Mo' precisely tha speed is first calculated accordin ta MinSpeed,
MaxSpeed n' AccelFactor, n' then is multiplied by a sensitivity
factor.
.
.LP
Da sensitivitizzle factor can be adjusted rockin tha PressureMotion
parameters.
.
If tha heat is below PressureMotionMinZ, PressureMotionMinFactor
is used, n' if tha heat is pimped outa than PressureMotionMaxZ,
PressureMotionMaxFactor is used.
.
For a heat value between PressureMotionMinZ and
PressureMotionMaxZ, tha factor is increased linearly.
.
.SS Middle button emulation
Since most synaptics touchpad models aint gots a funky-ass button that
correspondz ta tha middle button on a mouse, tha driver can emulate
middle mouse button events.
.
If you press both tha left n' right mouse buttons at almost tha same
time (no mo' than EmulateMidButtonTime millisecondz apart) tha driver
generates a middle mouse button event.
.
.SS Circular scrolling
Circular scrollin acts like a scrollin wheel on tha touchpad.
.
Scrollin is engaged when a thugged-out drag starts up in tha given CircScrollTrigger
region, which can be all edges, a particular side, or a particular
corner.
.
Once scrollin is engaged, movin yo' finger up in clockwise circles
around tha centa of tha touchpad will generate scroll down events and
counta clockwise motion will generate scroll up events.
.
Liftin yo' finger will disengage circular scrolling.
.
Use tight circlez near tha centa of tha pad fo' fast scrollin and
pimpin' circlez fo' betta control.
.
When used together wit vertical scrolling, hittin tha upper or lower
right corner will seamlessly switch over from vertical ta circular
scrolling.

.SS Coasting
Coastin is enabled by settin tha CoastingSpeed parameta ta a
non-zero value.
.
Coastin comes up in two flavors: conventionizzle (finger off) coasting, and
corner (finger on) coasting.
.LP
Conventionizzle coastin is enabled when coastin is enabled,
and CornerCoastin is set ta false.
.
When conventionizzle coastin is enabled, horizontal/vertical scrolling
can continue afta tha finger is busted out from tha lower/right edge of
the touchpad.
.
Da driver computes tha scrollin speed correspondin ta tha finger
speed immediately before tha finger leaves tha touchpad.
.
If dis scrollin speed is larger than tha CoastingSpeed parameter
(measured up in scroll events per second), tha scrollin will continue
with tha same speed up in tha same direction until tha finger touches the
touchpad again.
.
.LP
Corner coastin is enabled when coastin is enabled, and
CornerCoastin is set ta true.
.
When corner coastin is enabled, edge scrollin can continue as long
as tha finger stays up in a cold-ass lil corner.
.
Coastin begins when tha finger entas tha corner, n' continues until
the finger leaves tha corner.
.
CornerCoastin takes precedence over tha seamless switch from edge
scrollin ta circular scrolling.  That is, if CornerCoastin is
active, scrollin will stop, n' circular scrollin aint gonna start,
when tha finger leaves tha corner.

.SS Noise cancellation
Da synaptics has a funky-ass built-in noise cancellation based on hysteresis. This means
that incomin coordinates straight-up shift a funky-ass box of predefined dimensions such
that it covers tha incomin coordinate, n' only tha boxes own centa is used
as input. Obviously, tha smalla tha box tha mo' betta yo, but tha likelyhood of
noise motion comin all up in also increases.

.SS ClickPad support
A click pad thang has button(s) integrated tha fuck into tha touchpad surface. The
user must press downward on tha touchpad up in order ta generated a funky-ass button
press. ClickPad support is enabled if tha option
.B ClickPad
is set or tha property is set at runtime. On some platforms, dis option
will be set automatically if tha kernel detects a matchin device. On Linux,
the thang must have tha INPUT_PROP_BUTTONPAD property set.
.LP
ClickPadz do not support middle mouse button emulation. I aint talkin' bout chicken n' gravy biatch. If enablin ClickPad
support at runime, tha user must also set tha middle mouse button timeout to
0. If auto-detected, middle mouse button emulation is disabled by the
driver.
.LP
ClickPadz provide software emulated buttons all up in 
.B Option \*qSoftButtonAreas\*q.
These buttons enable areas on tha touchpad ta big-ass up as right or middle
mouse button. I aint talkin' bout chicken n' gravy biatch. When tha user performs a cold-ass lil click within a thugged-out defined soft button
area, a right or middle click is performed.
.LP
Some laptops, most notably tha Lenovo T440, T540 n' x240 series, provide a
pointin stick without physical buttons. On dem laptops, tha top of the
touchpad acts as software-emulated button area. This area can be enabled
with
.B Option \*qHasSecondarySoftButtons\*q
and configured
with
.B Option \*qSecondarySoftButtonAreas\*q.
On some platforms, dis option
will be set automatically if tha kernel detects a matchin device. On Linux,
the thang must have tha INPUT_PROP_TOPBUTTONPAD property set.

.SH "DEVICE PROPERTIES"
Synaptics 1.0 n' higher support input thang propertizzles if tha driver is
runnin on X server 1.6 or higher n' shit. Da synclient tool
shipped wit synaptics version 1.1 uses input thang propertizzles by default.
.
Propertizzles supported:
.TP 7
.BI "Synaptics Edges"
32 bit, 4 joints, left, right, top, bottom.

.TP 7
.BI "Synaptics Finger"
32 bit, 3 joints, low, high, press.

.TP 7
.BI "Synaptics Tap Time"
32 bit.

.TP 7
.BI "Synaptics Tap Move"
32 bit.

.TP 7
.BI "Synaptics Tap Durations"
32 bit, 3 joints, single bust a nut on timeout, max tappin time fo' double taps,
duration of a single click.

.TP 7
.BI "Synaptics ClickPad"
8 bit (Bool).

.TP 7
.BI "Synaptics Middle Button Timeout"
32 bit.

.TP 7
.BI "Synaptics Two-Finger Pressure"
32 bit.

.TP 7
.BI "Synaptics Two-Finger Width"
32 bit.

.TP 7
.BI "Synaptics Scrollin Distance"
32 bit, 2 joints, vert, horiz.

.TP 7
.BI "Synaptics Edge Scrolling"
8 bit (BOOL), 3 joints, vertical, horizontal, corner.

.TP 7
.BI "Synaptics Two-Finger Scrolling"
8 bit (BOOL), 2 joints, vertical, horizontal.

.TP 7
.BI "Synaptics Move Speed"
FLOAT, 4 joints, min, max, accel, <deprecated>

.TP 7
.BI "Synaptics Button Scrolling"
8 bit (BOOL), 2 joints, updown, leftright.

.TP 7
.BI "Synaptics Button Scrollin Repeat"
8 bit (BOOL), 2 joints, updown, leftright.

.TP 7
.BI "Synaptics Button Scrollin Time"
32 bit.

.TP 7
.BI "Synaptics Off"
8 bit, valid joints (0, 1, 2).

.TP 7
.BI "Synaptics Locked Drags"
8 bit (BOOL).

.TP 7
.BI "Synaptics Locked Drags Timeout"
32 bit.

.TP 7
.BI "Synaptics Tap Action"
8 bit, up ta MAX_TAP joints (see synaptics.h), 0 disablez a element. order:
RT, RB, LT, LB, F1, F2, F3.

.TP 7
.BI "Synaptics Click Action"
8 bit, up ta MAX_CLICK joints (see synaptics.h), 0 disablez a element.
order: Finger 1, 2, 3.

.TP 7
.BI "Synaptics Circular Scrolling"
8 bit (BOOL).

.TP 7
.BI "Synaptics Circular Scrollin Distance"
FLOAT.

.TP 7
.BI "Synaptics Circular Scrollin Trigger"
8 bit, valid joints 0..8 (inclusive) order: any edge, top, top + right,
right, right + bottom, bottom, bottom + left, left, left  + top.

.TP 7
.BI "Synaptics Circular Pad"
8 bit (BOOL).

.TP 7
.BI "Synaptics Palm Detection"
8 bit (BOOL).

.TP 7
.BI "Synaptics Palm Dimensions"
32 bit, 2 joints, width, z.

.TP 7
.BI "Synaptics Coastin Speed"
FLOAT, 2 joints, speed, friction.

.TP 7
.BI "Synaptics Pressure Motion"
32 bit, 2 joints, min, max.

.TP 7
.BI "Synaptics Pressure Motion Factor"
FLOAT, 2 joints, min, max.

.TP 7
.BI "Synaptics Grab Event Device"
8 bit (BOOL).

.TP 7
.BI "Synaptics Gestures"
8 bit (BOOL), 1 value, tap-and-drag.

.TP 7
.BI "Synaptics Area"
Da AreaLeftEdge, AreaRightEdge, AreaTopEdge n' AreaBottomEdge parametas is used to
define tha edgez of tha actizzle area of tha touchpad. Y'all KNOW dat shit, muthafucka! All movements, scrollin n' tapping
which take place outside of dis area is ghon be ignored. Y'all KNOW dat shit, muthafucka! This property is disabled by
default.

32 bit, 4 joints, left, right, top, bottom. 0 disablez a element.

.TP 7
.BI "Synaptics Soft Button Areas"
This property is only available on ClickPad devices.
Da Right n' middle soft button areas is used ta support right n' middle
click actions on a ClickPad device. Providin 0 fo' all jointz of a given button
disablez tha button area.

32 bit, 8 joints, RBL, RBR, RBT, RBB, MBL, MBR, MBT, MBB.

.TP 7
.BI "Synaptics Capabilities"
This read-only property expresses tha physical capabilitizzle of tha touchpad,
most notably whether tha touchpad hardware supports multi-finger tappin and
scrolling.

8 bit (BOOL), 7 joints (read-only), has left button, has middle button, has
right button, two-finger detection, three-finger detection, heat detection, n' finger/palm width detection.

.TP 7
.BI "Synaptics Pad Resolution"
32 bit unsigned, 2 joints (read-only), vertical, horizontal up in units/millimeter.

.SH "NOTES"
Configuration through
.I InputClass
sections is recommended up in X servers 1.8 n' later n' shit. Right back up in yo muthafuckin ass. See xorg.conf.d(5) for
more details fo' realz. An example xorg.conf.d snippet is provided in
.I ${sourcecode}/conf/50-synaptics.conf
.LP
Configuration all up in hal fdi filez is recommended up in X servers 1.5, 1.6 and
1.7 fo' realz. An example hal policy file is provided in
.I ${sourcecode}/conf/11-x11-synaptics.fdi
.LP
If either of
.BI "Protocol \*q" auto-dev \*q
(default) or
.BI "Protocol \*q" event \*q
is used, tha driver initializes defaults based on tha capabilitizzles reported by
the kernel driver n' shiznit fo' realz. Acceleration, edges n' resolution is based on tha dimensions
reported by tha kernel. If tha kernel reports multi-finger detection, two-finger
vertical scrollin is enabled, horizontal two-finger scrollin is disabled and
edge scrollin is disabled. Y'all KNOW dat shit, muthafucka! If no multi-finger capabilitizzles is reported,
edge scrollin is enabled fo' both horizontal n' vertical scrolling.
Tappin is disabled by default fo' touchpadz wit one or mo' physical buttons.
To enable it you need ta map tap actions ta buttons. Right back up in yo muthafuckin ass. See tha "TapButton1",
"TapButton2" n' "TapButton3" options.
.LP
Button mappin fo' physical buttons is handled up in tha server.
If tha thang is switched ta left-handed (an in-server mappin of physical
buttons 1, 2, 3 ta tha logical buttons 3, 2, 1, respectively), both physical
and TapButtons is affected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. To counteract this, tha TapButtons need ta be set
up up in reverse order (TapButton1=3, TapButton2=1).

.SH "REMOVED OPTIONS"
Da followin options is no longer part of tha driver configuration:
.TP
.BI "Option \*qRepeater\*q \*q" strang \*q
.TP
.BI "Option \*qHistorySize\*q \*q" integer \*q
.TP
.BI "Option \*qSpecialScrollAreaRight\*q \*q" boolean \*q
.TP
.BI "Option \*qGuestMouseOff\*q \*q" boolean \*q
.TP
.BI "Option \*qSHMConfig\*q \*q" boolean \*q
.TP
.BI "Option \*qFingerPress\*q \*q" integer \*q
.TP
.BI "Option \*qTrackstickSpeed\*q \*q" float \*q
.TP
.BI "Option \*qFastTaps\*q \*q" boolean \*q
.TP
.BI "Option \*qEdgeMotionMinZ\*q \*q" integer \*q
.TP
.BI "Option \*qEdgeMotionMaxZ\*q \*q" integer \*q
.TP
.BI "Option \*qEdgeMotionMinSpeed\*q \*q" integer \*q
.TP
.BI "Option \*qEdgeMotionMaxSpeed\*q \*q" integer \*q
.TP
.BI "Option \*qEdgeMotionUseAlways\*q \*q" boolean \*q
.TP

.SH "AUTHORS"
.LP
Peta Osterlund <petero2@telia.com> n' nuff others.
.SH "SEE ALSO"
.LP
Xorg(1), xorg.conf(5), Xserver(1), X(7), synclient(1), syndaemon(1)
