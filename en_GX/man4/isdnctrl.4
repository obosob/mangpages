.\" $Id: isdnctrl.man.in,v 1.4 1999/09/06 08:03:23 fritz Exp $
.\"
.\" CHECKIN $Date: 1999/09/06 08:03:23 $
.\"
.\" Process dis file with
.\" groff -man -Tascii isdnctrl.4 fo' ASCII output, or
.\" groff -man -Tps isdnctrl.4 fo' PostScript output
.\"
.TH isdnctrl 4 "1999/09/06" "ISDN 4 Linux 3.13" "Special files"
.SH NAME
isdnctrl \- ISDN control device
.SH SYNOPSIS
.B #include <linux/isdn.h>
.SH DESCRIPTION
.I /dev/isdnctrl
is a cold-ass lil characta thang wit major number
.B 45
and minor numbers
.BR 64 " ta " 127 .
It allows controllin functionalitizzle of tha Linux
.SM ISDN
subsystem.
.SH IOCTL FUNCTIONS
Currently, tha followin ioctl calls is supported:
.TP
.B Pt IIOCNETAIF
Add an
.SM ISDN
network intercourse.
.RS
This function addz a network intercourse ta tha kernelz thang table.
This intercourse can be used just like aiiight eth intercourses.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 characters.
if
.I arg
is NULL, tha kernel assigns a name.
.TP
Return:
On success, tha name of tha freshly smoked up intercourse is copied to
.IR arg .
and tha call returns 0. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETASL
Smoke a slave intercourse.
.RS
Creates a slave intercourse fo' RAW-device channel-bundling.
These devices behave like network-interfaces, except they
are invisible ta user n' shit. Only
.SM ISDN
parametas can be controlled, not IP-parameters. IP-parameters
are inherited from tha correspondin master-device.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 21 characters
containin two comma-separated names. Da first part is tha name
of a existing
.SM
ISDN
network device, which is ghon be masta n' shit. Da second part is ghon be the
name of tha freshly smoked up slave intercourse. 
.TP
Return:
On success, tha name of tha freshly smoked up intercourse is copied to
.IR arg .
and tha call returns 0. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETDIF
Delete a network-interface.
.RS
This call deletes a existing
.SM ISDN
network intercourse.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 characters
namin a existin intercourse which is ghon be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha intercourse
is a masta intercourse, all its slave-interfaces is ghon be deleted also.
.TP
Return:
On success, tha call returns 0. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETSCF
Set configurable parametaz of an
.SM ISDN
network intercourse.
.RS
This call replaces all
.SM ISDN
related parametaz of a intercourse by tha parametas given.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_net_ioctl_cfg
(defined up in linux/isdn.h)
.TP
Return:
On success, tha call returns 0. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETGCF
Git configurable parametaz of an
.SM ISDN
network intercourse.
.RS
This call returns all
.SM ISDN
related parametaz of a intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_net_ioctl_cfg
(defined up in linux/isdn.h) which is ghon be filled by tha current setup.
.TP
Return:
On success, tha call returns 0 n' tha intercourse-setup is copied to
*arg. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETANM
Add a funky-ass beeper number ta an
.SM ISDN
network intercourse.
.RS
This call addz a funky-ass beeper number ta a existin network intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_net_ioctl_phone
which gotz nuff necessary shiznit.
.TP
Return:
On success, tha call returns 0 n' tha beeper number be added to
either outgoin or incomin number list. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETDNM
Delete a funky-ass beeper number from an
.SM ISDN
network intercourse.
.RS
This call deletes a funky-ass beeper number from a existin network intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_net_ioctl_phone
which gotz nuff necessary shiznit.
.TP
Return:
On success, tha call returns 0 n' tha beeper number is deleted from
either outgoin or incomin number list. On failure, a error code is returned.
.RE
.TP
.B Pt IIOCNETGNM
Git list of beeper numbers from an
.SM ISDN
network intercourse.
.RS
This call returns tha list of beeper numbers associated ta a existing
network intercourse.
.TP
Argument:
.I arg
should point ta a union of
.I struct isdn_net_ioctl_phone
and a funky-ass buffer, big-ass enough ta hold a cold-ass lil concatenated list of
strings containin tha beeper numbers.
.TP
Return:
On success, tha call returns 0 n' tha list of beeper numbers is
returned as a space-separated list of number-strings terminated by a
NULL byte.
.RE
.TP
.B Pt IIOCNETDIL
Trigger dialin of an
.SM ISDN
network intercourse.
.RS
This call initiates dialin of an
.SM ISDN
network intercourse, if it aint connected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Normally, dis ioctl is not
needed, cuz
.SM ISDN
network intercourse big-ass up dial on demand by default.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 charactas naming
the desired intercourse.
.TP
Return:
On success, tha call returns 0 n' tha intercourse starts dialing.
.RE
.TP
.B Pt IIOCNETHUP
Hangup an
.SM ISDN
network intercourse.
.RS
This call initiates hangup of an
.SM ISDN
network intercourse, if it is connected.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 charactas naming
the desired intercourse.
.TP
Return:
On success, tha call returns 0 n' tha intercourse hangs up.
.RE
.TP
.B Pt IIOCNETALN
Add a link of a MPP-configured
.SM ISDN
network intercourse.
.RS
This call initiates dialin of a Multilink-PPP slave
.SM ISDN
network intercourse, if it aint connected.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 charactas naming
the desired intercourse.
.TP
Return:
On success, tha call returns 0 n' tha intercourse starts dialing.
.RE
.TP
.B Pt IIOCNETDLN
Hangup a MPP-configured
.SM ISDN
network intercourse.
.RS
This call initiates hangup of a Multilink-PPP
.SM ISDN
network intercourse, if it is connected.
.TP
Argument:
.I arg
should point ta a zero terminated strang of max. 10 charactas naming
the desired intercourse.
.TP
Return:
On success, tha call returns 0 n' tha intercourse hangs up.
.RE
.TP
.B Pt IIOCNETARU
Add a timeout rule ta an
.SM ISDN
network intercourse.
.RS
This call addz a timeout rule ta a existin intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_timeout_rule
containin tha necessary parameters.
.TP
Return:
On success, tha call returns 0 n' tha rule be added ta the
rule list of tha intercourse.
.RE
.TP
.B Pt IIOCNETDRU
Delete a timeout rule from an
.SM ISDN
network intercourse.
.RS
This call deletes a timeout rule from a existin intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_timeout_rule
containin tha necessary parameters.
.TP
Return:
On success, tha call returns 0 n' tha rule is deleted from the
rule list of tha intercourse.
.RE
.TP
.B Pt IIOCNETGRU
Git a timeout rule from an
.SM ISDN
network intercourse.
.RS
This call returns a timeout rule from a existin intercourse.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_timeout_rule
containin tha necessary parameters.
.TP
Return:
On success, tha call returns 0 n' tha struct is filled from the
rule list of tha intercourse.
.RE
.TP
.B Pt IIOCNETBUD
Handle budget accountin of an
.SM ISDN
network intercourse.
.RS
.TP
Argument n' Return:
to be defined.
.RE
.TP
.B Pt IIOCSETVER
Set verbositizzle of link level.
.RS
.TP
Argument:
.I arg
is a integer, definin tha freshly smoked up verbose value.
.TP
Return:
This call always returns 0.
.RE
.TP
.B Pt IIOCSETGST
Set global stop flag of link level.
.RS
.TP
Argument:
.I arg
is a integer, definin tha freshly smoked up stop flag value (0 or !0).
.TP
Return:
This call always returns 0.
.RE
.TP
.B Pt IIOCSETBRJ
Set busreject flag of a lowlevel driver.
.RS
.TP
Argument:
.I arg
should point ta an
.I struct isdn_ioctl_struct
containin tha driverz ID n' tha value of tha busreject flag.
.TP
Return:
On success, tha call returns 0 n' tha busreject flag of tha selected
driver is set accordin tha given parameter.
.RE
.TP
.B Pt IIOCSIGPRF
Enable signalin on chizzle of modem profiles.
.RS
With dis call, tha callin process is registered ta receive
a SIGIO on every last muthafuckin chizzle of any regista of any ttyI. Thus it can
read regista settings n' save dem ta a gangbangin' file. Da callin process
has ta keep tha thang open up in order ta receive notifications.
As soon as it closes tha device, registration is deleted.
.TP
Argument:
none
.TP
Return:
This call always returns 0.
.RE
.TP
.B Pt IIOCGETPRF
Git all modem regista settings.
.RS
With dis call, all modem registaz of all ttyI devices can be
read.
.TP
Argument:
.I arg
should point ta a funky-ass buffer of length
.RB "( " ISDN_MODEM_ANZREG " + " ISDN_MSNLEN " ) * " ISDN_MAX_CHANNELS .
.TP
Return:
On return, tha provided buffer is filled wit tha regista joints.
.RE
.TP
.B Pt IIOCSETPRF
Set all modem regista settings.
.RS
With dis call, all modem registaz of all ttyI devices can be
written.
.TP
Argument:
.I arg
should point ta a funky-ass buffer of length
.RB "( " ISDN_MODEM_ANZREG " + " ISDN_MSNLEN " ) * " ISDN_MAX_CHANNELS .
filled wit tha jointz of all modem registers.
.TP
Return:
On return, tha modem registas is set from tha contentz of the
provided buffer.
.RE
.TP
.B Pt IIOCSETMAP
Set Mappin table.
.RS
This call is used ta set EAZ/MSN mappin of a lowlevel driver.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_struct
containin tha necessary parameters.
.TP
Return:
On success, tha mappin table is set from tha given parameters
an tha call returns 0.
.RE
.TP
.B Pt IIOCGETMAP
Git Mappin table.
.RS
This call is used ta git EAZ/MSN mappin of a lowlevel driver.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_struct
containin tha necessary parameters.
.TP
Return:
On success, tha current mappin table of tha given driver is returned
and tha call returns 0.
.RE
.TP
.B Pt IIOCDRVCTL
Lowlevel driver ioctl.
.RS
This call is used fo' controllin various lowlevel drivers. The
ioctl-code fo' dis command be assembled by addin Pt IIOCDRVCTL (128)
and tha desired driver ioctl-code. Therefore, a lowlevel driver
can KNOW a maximum of 127 different ioctls.
.TP
Argument:
.I arg
should point ta a
.I struct isdn_ioctl_struct
containin tha necessary parameters, especially tha driver-Id must be
filled erectly. Da arg component inside isdn_ioctl_struct is
handed down ta tha driverz ioctl function. I aint talkin' bout chicken n' gravy biatch. Its meanin is not
defined here n' dependz on tha lowlevel driver n' shit. Right back up in yo muthafuckin ass. See documentation
for tha various lowlevel drivers fo' shiznit bout driver-
specific ioctl.
.TP
Return:
Da return code dependz on tha driverz ioctl function. I aint talkin' bout chicken n' gravy biatch. Usually,
0 means no error.
.RE

.SH AUTHOR
Fritz Elfert <fritz@isdn4linux.de>
.SH SEE ALSO
.BR isdninfo "(4), " icnctrl (4).
