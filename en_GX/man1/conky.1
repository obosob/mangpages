.\" t
.\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH conky 1 2012-05-03 "" ""
.SH NAME
conky \- A system monitor fo' X originally based on tha torsmo code yo, but mo' kickass. Well shiiiit, it just keeps on given'er n' shit. Yeah.
.SH SYNOPSIS
'nh
.fi
.ad l
\fBconky\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
[
\fIoptions\fR
]
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
Conky be a system monitor fo' X originally based on
torsmo. Right back up in yo muthafuckin ass. Since its inception, Conky has chizzled
significantly from its predecessor, while maintaining
simplicitizzle n' configurability. Conky can display just
about anything, either on yo' root desktop or up in its own
window. Not only do Conky have nuff built-in objects, it
can also display just bout any piece of shiznit by
usin scripts n' other external programs.
.PP
Conky has mo' than 250 built up in objects, including
support fo' a plethora of OS stats (uname, uptime, CPU
usage, mem usage, disk usage, "top" like process stats, and
network monitoring, just ta name a gangbangin' few), built up in IMAP and
POP3 support, built up in support fo' nuff ghettofab music
players (MPD, XMMS2, BMPx, Audacious), n' much much more.
Conky can display dis info either as text, or rockin simple
progress bars n' graph widgets, wit different fonts and
colours.
.PP
We is always lookin fo' help, whether its reporting
bugs, freestylin patches, or freestylin docs. Please use the
facilitizzles at SourceForge ta make bug reports, feature
requests, n' submit patches, or stop by #conky on
irc.freenode.net if you have thangs or want to
contribute.
.PP
Thanks fo' yo' interest up in Conky.
.SH COMPILING
For playas compilin from source on a funky-ass binary distro,
make shizzle you have tha X pimpment libraries installed
(Unless you provide configure wit "--disable-x11"). This
should be a package along tha linez of "libx11-dev" or
"xorg-x11-dev" fo' X11 libs, n' similar "-dev" format for
the other libs required (dependin on yo' configure
options). Yo ass should be able ta peep which extra packages
you need ta install by readin errors dat you git from
\&'./configure'. Yo ass can enable/disable shiznit by giving
options ta configure yo, but be careful wit disabling. For
example: wit --disable-math you won't git errors but
logarithmic graphs is ghon be aiiight graphs n' gauges
will miss they line. 
.PP
Conky has (for some time) been available up in the
repositoriez of most ghettofab distributions yo. Here is some
installation instructions fo' a gangbangin' few:
.PP
Gentoo playas -- Conky is up in Gentooz Portage...
simply use "emerge app-admin/conky" for
installation.
.PP
Debian, etc. playas -- Conky should be up in your
repositories, n' can be installed by bustin "aptitude
install conky".
.PP
Example ta compile n' run Conky wit all optional
components (note dat some configure options may differ for
your system):
.TP 
\fB\*(T<\fBsh autogen.sh\fR\*(T> \fR\*(T<\fB# Only required if buildin from tha git repo\fR\*(T> 
.TP 
\fB\*(T<\fB\&./configure\fR\*(T> \fR\*(T<\fB\-\-prefix=/usr \-\-mandir=/usr/share/man \-\-infodir=/usr/share/info \-\-datadir=/usr/share \-\-sysconfdir=/etc \-\-localstatedir=/var/lib \-\-disable\-own\-window \-\-enable\-audacious[=yes|no|legacy] \-\-enable\-bmpx \-\-disable\-hddtemp \-\-disable\-mpd \-\-enable\-xmms2 \-\-disable\-portmon \-\-disable\-network \-\-enable\-debug \-\-disable\-x11 \-\-disable\-double\-buffer \-\-disable\-xdamage \-\-disable\-xft\fR\*(T> 
.TP 
\fB\*(T<\fBmake\fR\*(T> \fR
.TP 
\fB\*(T<\fBmake install\fR\*(T> \fR\*(T<\fB# Optional\fR\*(T> 
.TP 
\fB\*(T<\fBsrc/conky\fR\*(T> \fR
.PP
Conky has been tested ta be compatible wit C99 C,
however it has not been tested wit anythang other than
gcc, n' aint guaranteed ta work wit other
compilers.
.PP
.SH "YOU SHOULD KNOW"
Conky is generally straight-up phat on resources. That holla'd,
the mo' you try ta make Conky do, tha mo' resources it is
goin ta consume.
.PP
An easy as fuck  way ta force Conky ta reload yo' ~/.conkyrc:
"killall -SIGUSR1 conky". Right back up in yo muthafuckin ass. Saves you tha shiznit of having
to bust a cap up in n' then restart. Yo ass can now also do tha same with
SIGHUP.
.SH OPTIONS
Command line options override configurations defined in
configuration file.
.TP 
\fB\*(T<\fB\-v | \-V | \-\-version\fR\*(T> \fR
Prints version n' exits 

.TP 
\fB\*(T<\fB\-q | \-\-quiet\fR\*(T> \fR
Run Conky up in 'quiet mode' (ie. no output) 

.TP 
\fB\*(T<\fB\-D | \-\-debug\fR\*(T> \fR
Increase debuggin output, ie. -DD fo' more
debuggin 

.TP 
\fB\*(T<\fB\-a | \-\-alignment=\fR\*(T> \fR\*(T<\fBALIGNMENT\fR\*(T> 
Text alignment on screen,
{top,bottom,middle}_{left,right,middle} or none. Can also
be abbreviated wit first charz of position, ie. tr for
top_right. 

.TP 
\fB\*(T<\fB\-b | \-\-double\-buffer\fR\*(T> \fR
Use double bufferin (eliminates "flicker") 

.TP 
\fB\*(T<\fB\-c | \-\-config=\fR\*(T> \fR\*(T<\fBFILE\fR\*(T> 
Config file ta load instead of $HOME/.conkyrc 

.TP 
\fB\*(T<\fB\-C | \-\-print\-config\fR\*(T> \fR
Print builtin default config ta stdout. Right back up in yo muthafuckin ass. See also
the section EXAMPLES fo' mo' shiznit. I aint talkin' bout chicken n' gravy biatch. 

.TP 
\fB\*(T<\fB\-d | \-\-daemonize\fR\*(T> \fR
Daemonize Conky, aka fork ta background 

.TP 
\fB\*(T<\fB\-f | \-\-font=\fR\*(T> \fR\*(T<\fBFONT\fR\*(T> 
Font ta use 

.TP 
\fB\*(T<\fB\-h | \-\-help\fR\*(T> \fR
Prints command line help n' exits 

.TP 
\fB\*(T<\fB\-o | \-\-own\-window\fR\*(T> \fR
Smoke own window ta draw 

.TP 
\fB\*(T<\fB\-t | \-\-text=\fR\*(T> \fR\*(T<\fBTEXT\fR\*(T> 
Text ta render, remember single quotes, like -t '
$uptime ' 

.TP 
\fB\*(T<\fB\-p | \-\-pause=\fR\*(T> \fR\*(T<\fBSECONDS\fR\*(T> 
Time ta pause before straight-up startin Conky

.TP 
\fB\*(T<\fB\-u | \-\-interval=\fR\*(T> \fR\*(T<\fBSECONDS\fR\*(T> 
Update interval 

.TP 
\fB\*(T<\fB\-w | \-\-window\-id=\fR\*(T> \fR\*(T<\fBWIN_ID\fR\*(T> 
Window id ta draw 

.TP 
\fB\*(T<\fB\-X | \-\-display=\fR\*(T> \fR\*(T<\fBDISPLAY\fR\*(T> 
X11 display ta use 

.TP 
\fB\*(T<\fB\-x\fR\*(T> \fR\*(T<\fBX_COORDINATE\fR\*(T> 
X posizzle 

.TP 
\fB\*(T<\fB\-y\fR\*(T> \fR\*(T<\fBY_COORDINATE\fR\*(T> 
Y posizzle 

.TP 
\fB\*(T<\fB\-i\fR\*(T> \fR\*(T<\fBCOUNT\fR\*(T> 
Number of times ta update Conky (and quit) 

.SH "CONFIGURATION SETTINGS"
Default configuration file location is $HOME/.conkyrc or
${sysconfdir}/conky/conky.conf. On most systems, sysconfdir is
/etc, n' you can find tha sample config file there
(/etc/conky/conky.conf).
.PP
Yo ass might wanna copy it ta $HOME/.conkyrc n' then
start modifyin dat shit. Other configs can be found at
http://conky.sf.net/
.TP 
\fB\*(T<\fBTEXT\fR\*(T> \fR
Afta dis begins text ta be formatted on screen.
Backslash (\e) escapes newlines up in tha text section. I aint talkin' bout chicken n' gravy biatch. This
can be useful fo' cleanin up config filez where conky is
used ta pipe input ta dzen2. 

.TP 
\fB\*(T<\fBalignment\fR\*(T> \fR
Aligned posizzle on screen, may be top_left,
top_right, top_middle, bottom_left, bottom_right,
bottom_middle, middle_left, middle_middle, middle_right, or
none (also can be abreviated as tl, tr, tm, bl, br, bm, ml,
mm, mr). Right back up in yo muthafuckin ass. See also gap_x n' gap_y.

.TP 
\fB\*(T<\fBappend_file\fR\*(T> \fR
Append tha file given as argument. 

.TP 
\fB\*(T<\fBbackground\fR\*(T> \fR
Boolean value, if true, Conky is ghon be forked to
background when started. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

.TP 
\fB\*(T<\fBborder_inner_margin\fR\*(T> \fR
Inner border margin up in pixels (the margin between
the border n' text). 

.TP 
\fB\*(T<\fBborder_outer_margin\fR\*(T> \fR
Outa border margin up in pixels (the margin between
the border n' tha edge of tha window). 

.TP 
\fB\*(T<\fBborder_width\fR\*(T> \fR
Border width up in pixels. 

.TP 
\fB\*(T<\fBcolorN\fR\*(T> \fR
Predefine a cold-ass lil color fo' use inside TEXT segments.
Substitute N by a gangbangin' finger-lickin' digit between 0 n' 9, inclusively. When
specifyin tha color value up in hex, omit tha leadin hash
(#). 

.TP 
\fB\*(T<\fBcpu_avg_samples\fR\*(T> \fR
Da number of samplez ta average fo' CPU
monitoring. 

.TP 
\fB\*(T<\fBdefault_bar_size\fR\*(T> \fR
Specify a thugged-out default width n' height fo' bars.
Example: 'default_bar_size 0 6'. This is particularly
useful fo' execbar n' execibar as they do not take size
arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBdefault_color\fR\*(T> \fR
Default color n' border color 

.TP 
\fB\*(T<\fBdefault_gauge_size\fR\*(T> \fR
Specify a thugged-out default width n' height fo' gauges.
Example: 'default_gauge_size 25 25'. This is particularly
useful fo' execgauge n' execigauge as they do not take
size arguments 

.TP 
\fB\*(T<\fBdefault_graph_size\fR\*(T> \fR
Specify a thugged-out default width n' height fo' graphs.
Example: 'default_graph_size 0 25'. This is particularly
useful fo' execgraph n' execigraph as they do not take
size arguments 

.TP 
\fB\*(T<\fBdefault_outline_color\fR\*(T> \fR
Default outline color 

.TP 
\fB\*(T<\fBdefault_shade_color\fR\*(T> \fR
Default shadin color n' borderz shadin color 

.TP 
\fB\*(T<\fBdisable_auto_reload\fR\*(T> \fR
Enable ta disable tha inotify-based auto config reload feature.

.TP 
\fB\*(T<\fBdiskio_avg_samples\fR\*(T> \fR
Da number of samplez ta average fo' disk I/O
monitoring. 

.TP 
\fB\*(T<\fBdisplay\fR\*(T> \fR
Specify a X display ta connect to. 

.TP 
\fB\*(T<\fBdouble_buffer\fR\*(T> \fR
Use tha Xdbe extension? (eliminates flicker) It
is highly recommended ta use own window wit dis one so
double buffer won't be all kindsa big. 

.TP 
\fB\*(T<\fBdraw_borders\fR\*(T> \fR
Draw bordaz round text? 

.TP 
\fB\*(T<\fBdraw_graph_borders\fR\*(T> \fR
Draw bordaz round graphs? 

.TP 
\fB\*(T<\fBdraw_outline\fR\*(T> \fR
Draw outlines? 

.TP 
\fB\*(T<\fBdraw_shades\fR\*(T> \fR
Draw shades? 

.TP 
\fB\*(T<\fBextra_newline\fR\*(T> \fR
Put a extra newline all up in tha end when freestylin to
stdout, useful fo' freestylin ta phatz wiboxes. 

.TP 
\fB\*(T<\fBfont\fR\*(T> \fR
Font name up in X, xfontsel can be used ta git a
nice font 

.TP 
\fB\*(T<\fBformat_human_readable\fR\*(T> \fR
If enabled, joints which is up in bytes will be
printed up in human readable format (i.e., KiB, MiB, etc). If
disabled, tha number of bytes is printed instead. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBgap_x\fR\*(T> \fR
Gap, up in pixels, between right or left border of
screen, same as passin -x at command line, e.g. gap_x 10.
For other posizzle related stuff, peep 'alignment'. 

.TP 
\fB\*(T<\fBgap_y\fR\*(T> \fR
Gap, up in pixels, between top or bottom border of
screen, same as passin -y at command line, e.g. gap_y 10.
For other posizzle related stuff, peep 'alignment'. 

.TP 
\fB\*(T<\fBhddtemp_host\fR\*(T> \fR
Hostname ta connect ta fo' hddtemp objects, n' you can put dat on yo' toast. Defaults
to "127.0.0.1".

.TP 
\fB\*(T<\fBhddtemp_port\fR\*(T> \fR
Port ta use fo' hddtemp connections. Defaults to
7634.

.TP 
\fB\*(T<\fBif_up_strictness\fR\*(T> \fR
How tha fuck strict should if_up be when testin an
interface fo' bein up? Da value is one of up, link or
address, ta check fo' tha intercourse bein solely up, being
up n' havin link or bein up, havin link n' a assigned
IP address. 

.TP 
\fB\*(T<\fBimap\fR\*(T> \fR
Default global IMAP server n' shiznit fo' realz. Arguments are: "host
user pass [-i interval (in seconds)] [-f 'folder'] [-p port]
[-e 'command'] [-r retries]". Default port is 143, default
folda is 'INBOX', default interval is 5 minutes, and
default number of retries before givin up is 5. If the
password is supplied as '*', yo big-ass booty is ghon be prompted ta enter
the password when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBimlib_cache_flush_interval\fR\*(T> \fR
Interval (in seconds) ta flush Imlib2 cache. 

.TP 
\fB\*(T<\fBimlib_cache_size\fR\*(T> \fR
Imlib2 image cache size, up in bytes. Defaults to
4MiB. Increase dis value if you use $image lots, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. Set
to 0 ta disable tha image cache.

.TP 
\fB\*(T<\fBimlib_image_alpha\fR\*(T> \fR
Boolean, use transparency fo' images? Enabled by
default. If own_window_visual_argb is enabled, images
appear transparent; disable dis option ta make images
appear opaque.

.TP 
\fB\*(T<\fBlua_draw_hook_post\fR\*(T> \fR\*(T<\fBfunction_name [function arguments]\fR\*(T> 
This function, if defined, is ghon be called by
Conky all up in each iteration afta drawin ta the
window. Requires X support. Takes any number of
optionizzle arguments, n' you can put dat on yo' toast. Use dis hook fo' drawin thangs on
top of what tha fuck Conky draws. Conky puts 'conky_' up in front
of function_name ta prevent accidental calls ta the
wrong function unless you place 'conky_' up in front of it
yo ass.

.TP 
\fB\*(T<\fBlua_draw_hook_pre\fR\*(T> \fR\*(T<\fBfunction_name [function arguments]\fR\*(T> 
This function, if defined, is ghon be called by
Conky all up in each iteration before drawin ta the
window. Requires X support. Takes any number of
optionizzle arguments, n' you can put dat on yo' toast. Use dis hook fo' drawin thangs on
top of what tha fuck Conky draws. Conky puts 'conky_' up in front
of function_name ta prevent accidental calls ta the
wrong function unless you place 'conky_' up in front of it
yo ass.

.TP 
\fB\*(T<\fBlua_load\fR\*(T> \fR
Loadz tha Lua scripts separated by spaces. 

.TP 
\fB\*(T<\fBlua_shutdown_hook\fR\*(T> \fR\*(T<\fBfunction_name [function arguments]\fR\*(T> 
This function, if defined, is ghon be called by
Conky at shutdown or when tha configuration is
reloaded. Y'all KNOW dat shit, muthafucka! Use dis hook ta clean up afta yo ass,
like fuckin freein memory which has been allocated by
external libraries via Lua. Conky puts 'conky_' in
front of function_name ta prevent accidental calls to
the wack function unless you place 'conky_' in
front of it yo ass.

.TP 
\fB\*(T<\fBlua_startup_hook\fR\*(T> \fR\*(T<\fBfunction_name [function arguments]\fR\*(T> 
This function, if defined, is ghon be called by
Conky at startup or when tha configuration is reloaded.
Use dis hook ta initialize joints, or fo' any run-once
applications. Conky puts 'conky_' up in front of
function_name ta prevent accidental calls ta tha wrong
function unless you place 'conky_' up in front of
it yo ass.

.TP 
\fB\*(T<\fBmail_spool\fR\*(T> \fR
Mail spool fo' mail checkin 

.TP 
\fB\*(T<\fBmax_port_monitor_connections\fR\*(T> \fR
Allow each port monitor ta track at most this
many connections (if 0 or not set, default is 256) 

.TP 
\fB\*(T<\fBmax_specials\fR\*(T> \fR
Maximum number of special thangs, e.g. fonts,
offsets, aligns, etc. (default is 512) 

.TP 
\fB\*(T<\fBmax_text_width\fR\*(T> \fR\*(T<\fBwidth\fR\*(T> 
When a line up in tha output gotz nuff 'width'
chars n' tha end aint reached, tha next char will start
on a freshly smoked up line. If you wanna make shizzle dat lines don't
get broken, set 'width' ta 0

.TP 
\fB\*(T<\fBmax_user_text\fR\*(T> \fR\*(T<\fBbytes\fR\*(T> 
Maximum size of user text buffer, i.e. layout
below TEXT line up in config file (default is 16384 bytes) 

.TP 
\fB\*(T<\fBmaximum_width\fR\*(T> \fR\*(T<\fBpixels\fR\*(T> 
Maximum width of window 

.TP 
\fB\*(T<\fBminimum_size\fR\*(T> \fR\*(T<\fBwidth (height)\fR\*(T> 
Minimum size of window 

.TP 
\fB\*(T<\fBmpd_host\fR\*(T> \fR
Host of MPD server 

.TP 
\fB\*(T<\fBmpd_password\fR\*(T> \fR
MPD server password 

.TP 
\fB\*(T<\fBmpd_port\fR\*(T> \fR
Port of MPD server 

.TP 
\fB\*(T<\fBmusic_player_interval\fR\*(T> \fR
Music playa thread update interval (defaults to
Conkyz update interval) 

.TP 
\fB\*(T<\fBnet_avg_samples\fR\*(T> \fR
Da number of samplez ta average fo' net data 

.TP 
\fB\*(T<\fBno_buffers\fR\*(T> \fR
Subtract (file system) buffers from used memory?

.TP 
\fB\*(T<\fBnvidia_display\fR\*(T> \fR
Da display dat tha nvidia variable will use (defaults ta tha value of the
display variable)

.TP 
\fB\*(T<\fBout_to_console\fR\*(T> \fR
Print text ta stdout. 

.TP 
\fB\*(T<\fBout_to_ncurses\fR\*(T> \fR
Print text up in tha console yo, but use ncurses so
that conky can print tha text of a freshly smoked up update over tha old
text. (In tha future dis will provide mo' useful thangs) 

.TP 
\fB\*(T<\fBout_to_stderr\fR\*(T> \fR
Print text ta stderr. Shiiit, dis aint no joke. 

.TP 
\fB\*(T<\fBout_to_x\fR\*(T> \fR
When set ta no, there is ghon be no output up in X
(useful when you also use thangs like out_to_console). If
you set it ta no, make shizzle dat itz placed before all
other X-related settin (take tha straight-up original gangsta line of your
configfile ta be sure). Default value is yeaaaa 

.TP 
\fB\*(T<\fBoverride_utf8_locale\fR\*(T> \fR
Force UTF8? requires XFT 

.TP 
\fB\*(T<\fBoverwrite_file\fR\*(T> \fR
Overwrite tha file given as argument. 

.TP 
\fB\*(T<\fBown_window\fR\*(T> \fR
Boolean, create own window ta draw? 

.TP 
\fB\*(T<\fBown_window_class\fR\*(T> \fR
Manually set tha WM_CLASS name. Defaults to
"Conky". 

.TP 
\fB\*(T<\fBown_window_colour\fR\*(T> \fR\*(T<\fBcolour\fR\*(T> 
If own_window_transparent no, set a specified
background colour (defaults ta black). Takes either a hex
value (e.g. ffffff, note tha lack of '#') or a valid RGB
name (see /usr/lib/X11/rgb.txt)

.TP 
\fB\*(T<\fBown_window_hints\fR\*(T> \fR\*(T<\fBundecorated,below,above,sticky,skip_taskbar,skip_pager\fR\*(T> 
If own_window is fo'sho, you may use these window
manager hints ta affect tha way Conky displays. Notes: Use
own_window_type desktop as another way ta implement nuff of
these hints implicitly. If you use own_window_type
override, window manager hints have no meanin n' are
ignored. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBown_window_title\fR\*(T> \fR
Manually set tha window name. Defaults to
"<hostname> - conky". 

.TP 
\fB\*(T<\fBown_window_argb_visual\fR\*(T> \fR
Boolean, use ARGB visual? ARGB can be used fo' real
transparency, note dat a cold-ass lil composite manager is required fo' real
transparency. This option aint gonna work as desired (in most cases)
in conjunction wit 'own_window_type override'.

.TP 
\fB\*(T<\fBown_window_argb_value\fR\*(T> \fR
When ARGB visuals is enabled, dis use dis ta modify tha alpha value used. Y'all KNOW dat shit, muthafucka! Valid range is 0-255, where 0 is 0% opacity, n' 255 is 100% opacity.

.TP 
\fB\*(T<\fBown_window_transparent\fR\*(T> \fR
Boolean, set transparency? If ARGB visual is enabled, sets
background opacitizzle ta 0%.

.TP 
\fB\*(T<\fBown_window_type\fR\*(T> \fR
if own_window is fo'sho, you may specify type
normal, desktop, dock, panel or override (default: normal).
Desktop windows is special windows dat have no window
decorations; is always visible on yo' desktop; do not
appear up in yo' pager or taskbar; n' is sticky across all
workspaces. Panel windows reserve space along a thugged-out desktop
edge, just like panels n' taskbars, preventin maximized
windows from overlappin em. Da edge is chosen based on
the alignment option. I aint talkin' bout chicken n' gravy biatch. Override windows is not under the
control of tha window manager n' shiznit yo. Hints is ignored. Y'all KNOW dat shit, muthafucka! This type
of window can be useful fo' certain thangs. 

.TP 
\fB\*(T<\fBpad_percents\fR\*(T> \fR
Pad cementages ta dis nuff decimals (0 = no
padding) 

.TP 
\fB\*(T<\fBpop3\fR\*(T> \fR
Default global POP3 server n' shiznit fo' realz. Arguments are: "host
user pass [-i interval (in seconds)] [-p port] [-e 'command']
[-r retries]". Default port is 110, default interval is 5
minutes, n' default number of retries before givin up is
5. If tha password is supplied as '*', yo big-ass booty is ghon be prompted
to enta tha password when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBshort_units\fR\*(T> \fR
Shortens units ta a single characta (kiB->k,
GiB->G, etc.). Default is off. 

.TP 
\fB\*(T<\fBshow_graph_range\fR\*(T> \fR
Shows tha time range covered by a graph. 

.TP 
\fB\*(T<\fBshow_graph_scale\fR\*(T> \fR
Shows tha maximum value up in scaled graphs. 

.TP 
\fB\*(T<\fBstippled_borders\fR\*(T> \fR
Border stipplin (dashing) up in pixels 

.TP 
\fB\*(T<\fBtemperature_unit\fR\*(T> \fR
Desired output unit of all objects displayin a
temperature. Parametas is either "fahrenheit" or
"celsius". Da default unit is degree Celsius. 

.TP 
\fB\*(T<\fBtemplateN\fR\*(T> \fR
Define a template fo' lata use inside TEXT
segments, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. Substitute N by a gangbangin' finger-lickin' digit between 0 n' 9,
inclusively. Da value of tha variable is bein inserted
into tha shiznit below TEXT all up in tha correspondin position,
but before some substitutions is applied: 

\&'\en' -> newline
.br
\&'\e\e' -> backslash
.br
\&'\e ' -> space
.br
\&'\eN' -> template argument N

.TP 
\fB\*(T<\fBtext_buffer_size\fR\*(T> \fR\*(T<\fBbytes\fR\*(T> 
Size of tha standard text buffer (default is 256
bytes). This buffer is used fo' intermediary text, such as
individual lines, output from $exec vars, n' various other
variables. Increasin tha size of dis buffer can
drastically reduce Conkyz performizzle yo, but will allow for
more text display per variable. Da size of dis buffer
cannot be smalla than tha default value of 256 bytes. 

.TP 
\fB\*(T<\fBtimes_in_seconds\fR\*(T> \fR
If true, variablez dat output times output a number
that represents seconds. This don't affect $time, $tztime and
$utime

.TP 
\fB\*(T<\fBtop_cpu_separate\fR\*(T> \fR
If true, cpu up in top will show usage of one
processorz juice n' shit. If false, cpu up in top will show tha usage
of all processors' juice combined. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBtop_name_width\fR\*(T> \fR
Width fo' $top name value (defaults ta 15
characters). 

.TP 
\fB\*(T<\fBtotal_run_times\fR\*(T> \fR
Total number of times fo' Conky ta update before
quitting. Zero make Conky run forever 

.TP 
\fB\*(T<\fBupdate_interval\fR\*(T> \fR\*(T<\fBseconds\fR\*(T> 
Update interval 

.TP 
\fB\*(T<\fBupdate_interval_on_battery\fR\*(T> \fR\*(T<\fBseconds\fR\*(T> 
Update interval when hustlin on batterypower 

.TP 
\fB\*(T<\fBuppercase\fR\*(T> \fR
Boolean value, if true, text is rendered up in upper
case 

.TP 
\fB\*(T<\fBuse_spacer\fR\*(T> \fR
Addz spaces round certain objects ta stop them
from movin other thangs around. Y'all KNOW dat shit, muthafucka! Arguments is left, right,
and none (default). Da oldschool true/false joints are
deprecated n' default ta right/none respectively. Note
that dis only helps if yo ass is rockin a mono font, such as
Bitstream Vera Sans Mono. 

.TP 
\fB\*(T<\fBuse_xft\fR\*(T> \fR
Use Xft (anti-aliased font n' stuff) 

.TP 
\fB\*(T<\fBxftalpha\fR\*(T> \fR
Alpha of Xft font. Must be a value at or between
1 n' 0. 

.TP 
\fB\*(T<\fBxftfont\fR\*(T> \fR
Xft font ta use. 

.SH OBJECTS/VARIABLES
Colours is parsed rockin XParsecolor(), there might be a
list of them: /usr/share/X11/rgb.txt. 
Colour can be also in
#rrggbb format (hex).
.PP
Some objects may create threads, n' sometimes these threadz will
not be destroyed until Conky terminates. There is no way to
destroy or clean up threadz while Conky is hustlin. For example,
if you use a MPD variable, tha MPD thread will keep hustlin until
Conky dies. Put ya muthafuckin choppers up if ya feel dis! Right back up in yo muthafuckin ass. Some threaded objects will use one of tha parameters
as a 'key', so dat you only have 1 relevant thread hustlin (for
example, tha $curl, $rss n' $weather objects launch one thread per
URI).
.TP 
\fB\*(T<\fBacpiacadapter\fR\*(T> \fR\*(T<\fB(adapter)\fR\*(T> 
ACPI ac adapta state. On linux, tha adapta option specifies the
subfolda of /sys/class/power_supply containin tha state shiznit (tries "AC"
and "ADP1" if there is no argument given). Non-linux systems ignore dat shit.

.TP 
\fB\*(T<\fBacpifan\fR\*(T> \fR
ACPI hustla state 

.TP 
\fB\*(T<\fBacpitemp\fR\*(T> \fR
ACPI temperature up in C. 

.TP 
\fB\*(T<\fBaddr\fR\*(T> \fR\*(T<\fB(interface)\fR\*(T> 
IP address fo' a intercourse, or "No Address" if
no address be assigned. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBaddrs\fR\*(T> \fR\*(T<\fB(interface)\fR\*(T> 
IP addresses fo' a intercourse (if one - works
like addr). Linux only. 

.TP 
\fB\*(T<\fBadt746xcpu\fR\*(T> \fR
CPU temperature from therm_adt746x 

.TP 
\fB\*(T<\fBadt746xfan\fR\*(T> \fR
Fan speed from therm_adt746x 

.TP 
\fB\*(T<\fBalignc\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Align text ta centre 

.TP 
\fB\*(T<\fBalignr\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Right-justify text, wit space of N 

.TP 
\fB\*(T<\fBapcupsd\fR\*(T> \fR\*(T<\fBhost\fR\*(T> \*(T<\fBport\fR\*(T> 
Sets up tha connection ta apcupsd daemon. I aint talkin' bout chicken n' gravy biatch. Prints
nothing, defaults ta localhost:3551 

.TP 
\fB\*(T<\fBapcupsd_cable\fR\*(T> \fR
Prints tha UPS connection type. 

.TP 
\fB\*(T<\fBapcupsd_charge\fR\*(T> \fR
Current battery capacitizzle up in cement. 

.TP 
\fB\*(T<\fBapcupsd_lastxfer\fR\*(T> \fR
Reason fo' last transfer from line ta battery. 

.TP 
\fB\*(T<\fBapcupsd_linev\fR\*(T> \fR
Nominal input voltage. 

.TP 
\fB\*(T<\fBapcupsd_load\fR\*(T> \fR
Current load up in cement. 

.TP 
\fB\*(T<\fBapcupsd_loadbar\fR\*(T> \fR
Bar showin current load. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBapcupsd_loadgauge\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Gauge dat shows current load. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBapcupsd_loadgraph\fR\*(T> \fR\*(T<\fB(height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
History graph of current load. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBapcupsd_model\fR\*(T> \fR
Prints tha model of tha UPS. 

.TP 
\fB\*(T<\fBapcupsd_name\fR\*(T> \fR
Prints tha UPS user-defined name. 

.TP 
\fB\*(T<\fBapcupsd_status\fR\*(T> \fR
Prints current status (on-line, on-battery). 

.TP 
\fB\*(T<\fBapcupsd_temp\fR\*(T> \fR
Current internal temperature. 

.TP 
\fB\*(T<\fBapcupsd_timeleft\fR\*(T> \fR
Time left ta run on battery. 

.TP 
\fB\*(T<\fBapcupsd_upsmode\fR\*(T> \fR
Prints tha UPS mode (e.g. standalone). 

.TP 
\fB\*(T<\fBapm_adapter\fR\*(T> \fR
Display APM AC adapta status (FreeBSD only) 

.TP 
\fB\*(T<\fBapm_battery_life\fR\*(T> \fR
Display APM battery game up in cement (FreeBSD
only) 

.TP 
\fB\*(T<\fBapm_battery_time\fR\*(T> \fR
Display remainin APM battery game up in hh:mm:ss or
"unknown" if AC adapterstatus is on-line or charging
(FreeBSD only) 

.TP 
\fB\*(T<\fBaudacious_bar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Progress bar 

.TP 
\fB\*(T<\fBaudacious_bitrate\fR\*(T> \fR
Bitrate of current tune 

.TP 
\fB\*(T<\fBaudacious_channels\fR\*(T> \fR
Number of audio channelz of current tune 

.TP 
\fB\*(T<\fBaudacious_filename\fR\*(T> \fR
Full path n' filename of current tune 

.TP 
\fB\*(T<\fBaudacious_frequency\fR\*(T> \fR
Samplin frequency of current tune 

.TP 
\fB\*(T<\fBaudacious_length\fR\*(T> \fR
Total length of current tune as MM:SS 

.TP 
\fB\*(T<\fBaudacious_length_seconds\fR\*(T> \fR
Total length of current tune up in secondz 

.TP 
\fB\*(T<\fBaudacious_main_volume\fR\*(T> \fR
Da current volume fetched from Audacious 

.TP 
\fB\*(T<\fBaudacious_playlist_length\fR\*(T> \fR
Number of tunes up in playlist 

.TP 
\fB\*(T<\fBaudacious_playlist_position\fR\*(T> \fR
Playlist posizzle of current tune 

.TP 
\fB\*(T<\fBaudacious_position\fR\*(T> \fR
Posizzle of current tune (MM:SS) 

.TP 
\fB\*(T<\fBaudacious_position_seconds\fR\*(T> \fR
Posizzle of current tune up in secondz 

.TP 
\fB\*(T<\fBaudacious_status\fR\*(T> \fR
Player status (Playing/Paused/Stopped/Not
running) 

.TP 
\fB\*(T<\fBaudacious_title\fR\*(T> \fR\*(T<\fB(max length)\fR\*(T> 
Title of current tune wit optionizzle maximum
length specifier 

.TP 
\fB\*(T<\fBbattery\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Battery status n' remainin cementage capacity
of ACPI or APM battery fo' realz. ACPI battery number can be given as
argument (default is BAT0). 

.TP 
\fB\*(T<\fBbattery_bar\fR\*(T> \fR\*(T<\fB(height),(width) (num)\fR\*(T> 
Battery cementage remainin of ACPI battery up in a
bar fo' realz. ACPI battery number can be given as argument (default
is BAT0). 

.TP 
\fB\*(T<\fBbattery_percent\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Battery cementage remainin fo' ACPI battery.
ACPI battery number can be given as argument (default is
BAT0). 

.TP 
\fB\*(T<\fBbattery_short\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Battery status n' remainin cementage capacity
of ACPI or APM battery fo' realz. ACPI battery number can be given as
argument (default is BAT0). This mode display a gangbangin' finger-lickin' dirty-ass short
status, which means dat C is displayed instead of
charging, D fo' discharging, F fo' full, N fo' not present,
E fo' empty n' U fo' unknown. I aint talkin' bout chicken n' gravy biatch. 

.TP 
\fB\*(T<\fBbattery_time\fR\*(T> \fR\*(T<\fB(num)\fR\*(T> 
Battery charge/discharge time remainin of ACPI
battery fo' realz. ACPI battery number can be given as argument
(default is BAT0). 

.TP 
\fB\*(T<\fBblink\fR\*(T> \fR\*(T<\fBtext_and_other_conky_vars\fR\*(T> 
Let 'text_and_other_conky_vars' blink on n' off.

.TP 
\fB\*(T<\fBbmpx_album\fR\*(T> \fR
Album up in current BMPx track 

.TP 
\fB\*(T<\fBbmpx_artist\fR\*(T> \fR
Artist up in current BMPx track 

.TP 
\fB\*(T<\fBbmpx_bitrate\fR\*(T> \fR
Bitrate of tha current BMPx track 

.TP 
\fB\*(T<\fBbmpx_title\fR\*(T> \fR
Title of tha current BMPx track 

.TP 
\fB\*(T<\fBbmpx_track\fR\*(T> \fR
Track number of tha current BMPx track 

.TP 
\fB\*(T<\fBbmpx_uri\fR\*(T> \fR
URI of tha current BMPx track 

.TP 
\fB\*(T<\fBbuffers\fR\*(T> \fR
Amount of memory buffered 

.TP 
\fB\*(T<\fBcached\fR\*(T> \fR
Amount of memory cached 

.TP 
\fB\*(T<\fBcat\fR\*(T> \fR\*(T<\fBfile\fR\*(T> 
Readz a gangbangin' file n' displays tha contents up in conky.
This is useful if you have a independent process
generatin output dat you wanna include up in conky.

.TP 
\fB\*(T<\fBcatp\fR\*(T> \fR\*(T<\fBfile\fR\*(T> 
Readz a gangbangin' file n' displays tha contents up in conky.
This is useful if you have a independent process
generatin output dat you wanna include up in conky. This
differs from $cat up in dat it parses tha contentz of the
file, so you can bang thangs like ${color red}hi!${color}
in yo' file n' have it erectly parsed by Conky.

.TP 
\fB\*(T<\fBcmdline_to_pid\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
PID of tha straight-up original gangsta process dat has strang up in it's
commandline

.TP 
\fB\*(T<\fBcolor\fR\*(T> \fR\*(T<\fB(color)\fR\*(T> 
Change drawin color ta 'color' which be a name of
a color or a hexcode preceded wit # (for example #0A1B2C ).
If you use ncurses only tha followin flavas is supported:
red,green,yellow,blue,magenta,cyan,black,white.

.TP 
\fB\*(T<\fBcolorN\fR\*(T> \fR
Change drawin color ta colorN configuration
option, where N be a gangbangin' finger-lickin' digit between 0 n' 9, inclusively. 

.TP 
\fB\*(T<\fBcombine\fR\*(T> \fR\*(T<\fBvar1 var2\fR\*(T> 
Places tha linez of var2 ta tha right of the
linez of var1 separated by tha chars dat is put between
var1 n' var2. For example: ${combine ${head /proc/cpuinfo
2} - ${head /proc/meminfo 1}} gives as output
"cpuinfo_line1 - meminfo_line1" on line 1 and
"cpuinfo_line2 -" on line 2. $combine vars can also be
nested ta place mo' vars next ta each other n' shit. 

.TP 
\fB\*(T<\fBconky_build_arch\fR\*(T> \fR
CPU architecture Conky was built fo' 

.TP 
\fB\*(T<\fBconky_build_date\fR\*(T> \fR
Date Conky was built 

.TP 
\fB\*(T<\fBconky_version\fR\*(T> \fR
Conky version 

.TP 
\fB\*(T<\fBcpu\fR\*(T> \fR\*(T<\fB(cpuN)\fR\*(T> 
CPU usage up in cements, n' you can put dat on yo' toast. For SMP machines, tha CPU
number can be provided as a argument. ${cpu cpu0} is the
total usage, n' ${cpu cpuX} (X >= 1) is individual
CPUs. 

.TP 
\fB\*(T<\fBcpubar\fR\*(T> \fR\*(T<\fB(cpuN) (height),(width)\fR\*(T> 
Bar dat shows CPU usage, height is barz height
in pixels. Right back up in yo muthafuckin ass. See $cpu fo' mo' info on SMP. 

.TP 
\fB\*(T<\fBcpugauge\fR\*(T> \fR\*(T<\fB(cpuN) (height),(width)\fR\*(T> 
Elliptical gauge dat shows CPU usage, height and
width is gaugez vertical n' horizontal axis
respectively. Right back up in yo muthafuckin ass. See $cpu fo' mo' info on SMP. 

.TP 
\fB\*(T<\fBcpugraph\fR\*(T> \fR\*(T<\fB(cpuN) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
CPU usage graph, wit optionizzle colours up in hex,
minus tha #. Right back up in yo muthafuckin ass. See $cpu fo' mo' info on SMP. Uses a
logarithmic scale (to peep lil' small-ass numbers) when you use the
-l switch. Takes tha switch '-t' ta bust a temperature
gradient, which make tha gradient joints chizzle depending
on tha amplitude of a particular graph value (try it and
see). 

.TP 
\fB\*(T<\fBcurl\fR\*(T> \fR\*(T<\fBurl (interval_in_minutes)\fR\*(T> 
Downlizzle data from URI rockin Curl at the
specified interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da interval may be a gangbangin' floating
point value pimped outa than 0, otherwise defaults ta 15
minutes. Most useful when used up in conjunction wit Lua
and tha Lua API. This object is threaded, n' once a
thread is pimped it can't be explicitly destroyed.
One thread will run fo' each URI specified. Y'all KNOW dat shit, muthafucka! Yo ass can use
any protocol dat Curl supports.
.TP 
\fB\*(T<\fBdesktop\fR\*(T> \fR
Number of tha desktop on which conky is hustlin
or tha message "Not hustlin up in X" if dis is tha case. 

.TP 
\fB\*(T<\fBdesktop_name\fR\*(T> \fR
Name of tha desktop on which conky is hustlin or
the message "Not hustlin up in X" if dis is tha case. 

.TP 
\fB\*(T<\fBdesktop_number\fR\*(T> \fR
Number of desktops or tha message "Not hustlin in
X" if dis is tha case. 

.TP 
\fB\*(T<\fBdisk_protect\fR\*(T> \fR\*(T<\fBdevice\fR\*(T> 
Disk protection status, if supported (needs
kernel-patch). Prints either "frozen" or "free " (note the
padding). 

.TP 
\fB\*(T<\fBdiskio\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays current disk IO. Device is optional, and
takes tha form of sda fo' /dev/sda. Individual partitions
are allowed. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBdiskio_read\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays current disk IO fo' reads. Device as in
diskio. 

.TP 
\fB\*(T<\fBdiskio_write\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays current disk IO fo' writes. Device as in
diskio. 

.TP 
\fB\*(T<\fBdiskiograph\fR\*(T> \fR\*(T<\fB(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Disk IO graph, colours defined up in hex, minus the
#. If scale is non-zero, it becomes tha scale fo' the
graph. Uses a logarithmic scale (to peep lil' small-ass numbers) when
you use -l switch. Takes tha switch '-t' ta use a
temperature gradient, which make tha gradient joints
change dependin on tha amplitude of a particular graph
value (try it n' see). 

.TP 
\fB\*(T<\fBdiskiograph_read\fR\*(T> \fR\*(T<\fB(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Disk IO graph fo' reads, colours defined up in hex,
minus tha #. If scale is non-zero, it becomes tha scale for
the graph. Device as up in diskio. Uses a logarithmic scale
(to peep lil' small-ass numbers) when you use -l switch. Takes the
switch '-t' ta bust a temperature gradient, which make the
gradient joints chizzle dependin on tha amplitude of a
particular graph value (try it n' see). 

.TP 
\fB\*(T<\fBdiskiograph_write\fR\*(T> \fR\*(T<\fB(device) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Disk IO graph fo' writes, colours defined up in hex,
minus tha #. If scale is non-zero, it becomes tha scale for
the graph. Device as up in diskio. Uses a logarithmic scale
(to peep lil' small-ass numbers) when you use -l switch. Takes the
switch '-t' ta bust a temperature gradient, which make the
gradient joints chizzle dependin on tha amplitude of a
particular graph value (try it n' see). 

.TP 
\fB\*(T<\fBdownspeed\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Downlizzle speed up in suitable IEC units 

.TP 
\fB\*(T<\fBdownspeedf\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Downlizzle speed up in KiB wit one decimal 

.TP 
\fB\*(T<\fBdownspeedgraph\fR\*(T> \fR\*(T<\fB(netdev) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Downlizzle speed graph, colours defined up in hex,
minus tha #. If scale is non-zero, it becomes tha scale for
the graph. Uses a logarithmic scale (to peep lil' small-ass numbers)
when you use -l switch. Takes tha switch '-t' ta use a
temperature gradient, which make tha gradient joints
change dependin on tha amplitude of a particular graph
value (try it n' see). 

.TP 
\fB\*(T<\fBdraft_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as draft up in tha specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBelse\fR\*(T> \fR
Text ta show if any of tha above is not legit 

.TP 
\fB\*(T<\fBendif\fR\*(T> \fR
Endz a $if block. 

.TP 
\fB\*(T<\fBentropy_avail\fR\*(T> \fR
Current entropy available fo' crypto freaks 

.TP 
\fB\*(T<\fBentropy_bar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Normalized bar of available entropy fo' crypto
freaks 

.TP 
\fB\*(T<\fBentropy_perc\fR\*(T> \fR
Percentage of entropy available up in comparison to
the poolsize 

.TP 
\fB\*(T<\fBentropy_poolsize\fR\*(T> \fR
Total size of system entropy pool fo' crypto
freaks 

.TP 
\fB\*(T<\fBeval\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
Evaluates given strang accordin ta tha rulez of
TEXT interpretation, i.e. parsin any contained text object
specifications tha fuck into they output, any occurin '$$' tha fuck into a
single '$' n' so on. I aint talkin' bout chicken n' gravy biatch. Da output is then bein parsed
again. I aint talkin' bout chicken n' gravy biatch. 

.TP 
\fB\*(T<\fBeve\fR\*(T> \fR\*(T<\fBapi_userid api_key character_id\fR\*(T> 
Fetches yo' currently hustlin skill from the
Eve Online API servers (http://www.eve-online.com/) and
displays tha skill along wit tha remainin hustlin time. 

.TP 
\fB\*(T<\fBexec\fR\*(T> \fR\*(T<\fBcommand\fR\*(T> 
Executes a gangbangin' finger-lickin' dirty-ass shell command n' displays tha output
in conky. warning: dis takes a shitload mo' resources than
other variables. I'd recommend codin wanted behaviour up in C
and postin a patch. 

.TP 
\fB\*(T<\fBexecbar\fR\*(T> \fR\*(T<\fBcommand\fR\*(T> 
Same as exec, except if tha straight-up original gangsta value return is
a value between 0-100, it will use dat number fo' a funky-ass bar.
Da size fo' bars can be controlled via the
default_bar_size config setting. 

.TP 
\fB\*(T<\fBexecgauge\fR\*(T> \fR\*(T<\fBcommand\fR\*(T> 
Same as exec, except if tha straight-up original gangsta value returned
is a value between 0-100, it will use dat number fo' a
gauge. Da size fo' gauges can be controlled via the
default_gauge_size config setting. 

.TP 
\fB\*(T<\fBexecgraph\fR\*(T> \fR\*(T<\fB(\-t) (\-l) command\fR\*(T> 
Same as execbar yo, but graphs joints, n' you can put dat on yo' toast. Uses a
logaritmic scale when tha log option (-l switch) is given
(to peep lil' small-ass numbers). Values still gotta be between 0
and 100. Da size fo' graphs can be controlled via the
default_graph_size config setting. Takes tha switch '-t' to
use a temperature gradient, which make tha gradient joints
change dependin on tha amplitude of a particular graph
value (try it n' see). If -t or -l is yo' first argument,
you may need ta preceed it by a space (' ').

.TP 
\fB\*(T<\fBexeci\fR\*(T> \fR\*(T<\fBinterval command\fR\*(T> 
Same as exec but wit specific interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Interval
can't be less than update_interval up in configuration. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See
also $texeci

.TP 
\fB\*(T<\fBexecibar\fR\*(T> \fR\*(T<\fBinterval command\fR\*(T> 
Same as execbar, except wit a interval 

.TP 
\fB\*(T<\fBexecigauge\fR\*(T> \fR\*(T<\fBinterval command\fR\*(T> 
Same as execgauge yo, but takes a interval arg and
gauges joints, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBexecigraph\fR\*(T> \fR\*(T<\fBinterval (\-t) (\-l) command\fR\*(T> 
Same as execgraph yo, but takes a interval arg and
graphs joints, n' you can put dat on yo' toast. If -t or -l is yo' first argument, you may
need ta preceed it by a space (' '). 

.TP 
\fB\*(T<\fBexecp\fR\*(T> \fR\*(T<\fBcommand\fR\*(T> 
Executes a gangbangin' finger-lickin' dirty-ass shell command n' displays tha output
in conky. warning: dis takes a shitload mo' resources than
other variables. I'd recommend codin wanted behaviour up in C
and postin a patch. This differs from $exec up in dat it
parses tha output of tha command, so you can bang thangs
like ${color red}hi!${color} up in yo' script n' have it
correctly parsed by Conky. Caveats: Conky parses and
evaluates tha output of $execp every last muthafuckin time Conky loops, and
then destroys all tha objects, n' you can put dat on yo' toast. If you try ta use anything
like $execi within a $execp statement, it will
functionally run all up in tha same interval dat tha $execp
statement runs, as it is pimped n' destroyed at every
interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 

.TP 
\fB\*(T<\fBexecpi\fR\*(T> \fR\*(T<\fBinterval command\fR\*(T> 
Same as execp but wit specific interval.
Interval can't be less than update_interval in
configuration. I aint talkin' bout chicken n' gravy biatch. Note dat tha output from tha $execpi
command is still parsed n' evaluated at every last muthafuckin interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 

.TP 
\fB\*(T<\fBflagged_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as flagged up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBfont\fR\*(T> \fR\*(T<\fB(font)\fR\*(T> 
Specify a gangbangin' finger-lickin' different font. This freshly smoked up font will
apply ta tha current line n' every last muthafuckin thang following. Yo ass can
use a $font wit no arguments ta chizzle back ta tha default
font (much like wit $color) 

.TP 
\fB\*(T<\fBformat_time\fR\*(T> \fR\*(T<\fBsecondz format\fR\*(T> 
Format time given up in seconds. This var only works when
the times_in_secondz configuration settin is on. I aint talkin' bout chicken n' gravy biatch. Format be a string
that should start n' end wit a "-char. Shiiit, dis aint no joke. Da "-chars is not
part of tha output, \ew,\ed,\eh,\em,\es,\e(,\e) n' \e\e is replaced by
weeks,days,hours,minutes,seconds,(,) n' \e. If you leave up a unit,
itz value is ghon be expressed up in tha highest unite lower then the
one left out. Text between ()-chars aint gonna be visible if a
replaced unit up in dis text is 0. If secondz be a thugged-out decimal number
then you can peep tha numbers behind tha point by rockin \eS
followed by a number dat specifies tha amount of
digits behind tha point dat you wanna peep (maximum 9).
Yo ass can also place a 'x' behind \eS so you have all digits behind
the point n' no trailin zero's. (also maximum 9)

.TP 
\fB\*(T<\fBforwarded_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as forwarded up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBfreq\fR\*(T> \fR\*(T<\fB(n)\fR\*(T> 
Returns CPU #nz frequency up in MHz. CPUs are
counted from 1. If omitted, tha parameta defaults ta 1. 

.TP 
\fB\*(T<\fBfreq_g\fR\*(T> \fR\*(T<\fB(n)\fR\*(T> 
Returns CPU #nz frequency up in GHz. CPUs are
counted from 1. If omitted, tha parameta defaults ta 1. 

.TP 
\fB\*(T<\fBfs_bar\fR\*(T> \fR\*(T<\fB(height),(width) fs\fR\*(T> 
Bar dat shows how tha fuck much space is used on a gangbangin' file
system. height is tha height up in pixels. fs be any file on
that file system. 

.TP 
\fB\*(T<\fBfs_bar_free\fR\*(T> \fR\*(T<\fB(height),(width) fs\fR\*(T> 
Bar dat shows how tha fuck much space is free on a gangbangin' file
system. height is tha height up in pixels. fs be any file on
that file system. 

.TP 
\fB\*(T<\fBfs_free\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
Jacked space on a gangbangin' file system available fo' users. 

.TP 
\fB\*(T<\fBfs_free_perc\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
Jacked cementage of space on a gangbangin' file system
available fo' users. 

.TP 
\fB\*(T<\fBfs_size\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
File system size. 

.TP 
\fB\*(T<\fBfs_type\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
File system type. 

.TP 
\fB\*(T<\fBfs_used\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
File system used space. 

.TP 
\fB\*(T<\fBfs_used_perc\fR\*(T> \fR\*(T<\fB(fs)\fR\*(T> 
Percent of file system used space. 

.TP 
\fB\*(T<\fBgoto\fR\*(T> \fR\*(T<\fBx\fR\*(T> 
Da next element is ghon be printed at posizzle 'x'.

.TP 
\fB\*(T<\fBgw_iface\fR\*(T> \fR
Displays tha default routez intercourse or
"multiple"/"none" accordingly. 

.TP 
\fB\*(T<\fBgw_ip\fR\*(T> \fR
Displays tha default gatewayz IP or
"multiple"/"none" accordingly. 

.TP 
\fB\*(T<\fBhddtemp\fR\*(T> \fR\*(T<\fB(dev)\fR\*(T> 
Displays temperature of a selected hard disk
drive as reported by tha hddtemp daemon. I aint talkin' bout chicken n' gravy biatch. Use hddtemp_host
and hddtemp_port ta specify a host n' port fo' all hddtemp
objects, n' you can put dat on yo' toast. If no dev parameta is given, tha straight-up original gangsta disk returned
by tha hddtemp daemon is used.

.TP 
\fB\*(T<\fBhead\fR\*(T> \fR\*(T<\fBlogfile lines (next_check)\fR\*(T> 
Displays first N linez of supplied text file. The
file is checked every last muthafuckin 'next_check' update. If next_check is
not supplied, Conky defaults ta 2. Max of 30 lines can be
displayed, or until tha text buffer is filled. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBhr\fR\*(T> \fR\*(T<\fB(height)\fR\*(T> 
Horizontal line, height is tha height up in pixels 

.TP 
\fB\*(T<\fBhwmon\fR\*(T> \fR\*(T<\fB(dev) type n (factor offset)\fR\*(T> 
Hwmon sensor from sysfs (Linux 2.6). Parameter
dev may be omitted if you have only one hwmon device.
Parameta type is either 'in' or 'vol' meanin voltage;
\&'fan' meanin fan; 'temp' meanin temperature. Parameta n
is number of tha sensor. Shiiit, dis aint no joke. Right back up in yo muthafuckin ass. See /sys/class/hwmon/ on your
local computer n' shit. Da optionizzle arguments 'factor' and
\&'offset' allow precalculation of tha raw input, which is
bein modified as bigs up: 'input = input * factor +
offset'. Note dat they gotta be given as decimal joints
(i.e. contain at least one decimal place). 

.TP 
\fB\*(T<\fBi2c\fR\*(T> \fR\*(T<\fB(dev) type n (factor offset)\fR\*(T> 
I2C sensor from sysfs (Linux 2.6). Parameta dev
may be omitted if you have only one I2C device. Parameter
type is either 'in' or 'vol' meanin voltage; 'fan' meaning
fan; 'temp' meanin temperature. Parameta n is number of
the sensor. Shiiit, dis aint no joke. Right back up in yo muthafuckin ass. See /sys/bus/i2c/devices/ on yo' local
computer n' shit. Da optionizzle arguments 'factor' n' 'offset'
allow precalculation of tha raw input, which is being
modified as bigs up: 'input = input * factor + offset'.
Note dat they gotta be given as decimal joints (i.e.
contain at least one decimal place). 

.TP 
\fB\*(T<\fBi8k_ac_status\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays whether ac juice is on, as listed in
/proc/i8k (translated ta human-readable). Beware dat this
is by default not enabled by i8k itself. 

.TP 
\fB\*(T<\fBi8k_bios\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha bios version as listed up in /proc/i8k. 

.TP 
\fB\*(T<\fBi8k_buttons_status\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha volume buttons status as listed in
/proc/i8k. 

.TP 
\fB\*(T<\fBi8k_cpu_temp\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha cpu temperature up in Celsius, as
reported by /proc/i8k. 

.TP 
\fB\*(T<\fBi8k_left_fan_rpm\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha left fanz rate of rotation, in
revolutions per minute as listed up in /proc/i8k. Beware, some
laptops i8k reports these hustlas up in reverse order n' shit. 

.TP 
\fB\*(T<\fBi8k_left_fan_status\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha left hustla status as listed in
/proc/i8k (translated ta human-readable). Beware, some
laptops i8k reports these hustlas up in reverse order n' shit. 

.TP 
\fB\*(T<\fBi8k_right_fan_rpm\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha right fanz rate of rotation, in
revolutions per minute as listed up in /proc/i8k. Beware, some
laptops i8k reports these hustlas up in reverse order n' shit. 

.TP 
\fB\*(T<\fBi8k_right_fan_status\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha right hustla status as listed in
/proc/i8k (translated ta human-readable). Beware, some
laptops i8k reports these hustlas up in reverse order n' shit. 

.TP 
\fB\*(T<\fBi8k_serial\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays yo' laptop serial number as listed in
/proc/i8k. 

.TP 
\fB\*(T<\fBi8k_version\fR\*(T> \fR
If hustlin tha i8k kernel driver fo' Inspiron
laptops, displays tha version formattin of /proc/i8k. 

.TP 
\fB\*(T<\fBibm_brightness\fR\*(T> \fR
If hustlin tha IBM ACPI, displays tha brigtness
of tha laptopss LCD (0-7). 

.TP 
\fB\*(T<\fBibm_fan\fR\*(T> \fR
If hustlin tha IBM ACPI, displays tha hustla speed. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBibm_temps\fR\*(T> \fR\*(T<\fBN\fR\*(T> 
If hustlin tha IBM ACPI, displays the
temperatures from tha IBM temperature sensors (N=0..7)
Sensor 0 is on tha CPU, 3 is on tha GPU. 

.TP 
\fB\*(T<\fBibm_volume\fR\*(T> \fR
If hustlin tha IBM ACPI, displays tha "master"
volume, controlled by tha volume keys (0-14). 

.TP 
\fB\*(T<\fBiconv_start\fR\*(T> \fR\*(T<\fBcodeset_from codeset_to\fR\*(T> 
Convert text from one codeset ta another using
GNU iconv. Needz ta be stopped wit iconv_stop. 

.TP 
\fB\*(T<\fBiconv_stop\fR\*(T> \fR
Quit iconv codeset conversion. I aint talkin' bout chicken n' gravy biatch. 

.TP 
\fB\*(T<\fBif_empty\fR\*(T> \fR\*(T<\fB(var)\fR\*(T> 
if conky variable VAR is empty, display
everythang between $if_empty n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_existing\fR\*(T> \fR\*(T<\fBfile (string)\fR\*(T> 
if FILE exists, display every last muthafuckin thang between
if_existin n' tha matchin $endif. Da optionizzle second
parameta checks fo' FILE containin tha specified string
and prints every last muthafuckin thang between $if_existin n' tha matching
$endif. 

.TP 
\fB\*(T<\fBif_gw\fR\*(T> \fR
if there be at least one default gateway, display
everythang between $if_gw n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_match\fR\*(T> \fR\*(T<\fBexpression\fR\*(T> 
Evaluates tha given boolean expression, printing
everythang between $if_match n' tha matchin $endif
dependin on whether tha evaluation returns legit or not.
Valid expressions consist of a left side, a operator n' a
right side. Left n' right sides is bein parsed for
contained text objects before evaluation. I aint talkin' bout chicken n' gravy biatch. Recognised left
and right side types are: 

\fBdouble\fRArgument consistz of only
digits n' a single dot.
.br
\fBlong\fRArgument consistz of only
digits.
.br
\fBstring\fRArgument is enclosed in
quotation marks (")

Valid operandz are: '>', '<', '>=',
\&'<=', '==', '!='. 

.TP 
\fB\*(T<\fBif_mixer_mute\fR\*(T> \fR\*(T<\fB(mixer)\fR\*(T> 
If mixer exists, display every last muthafuckin thang between
$if_mixer_mute n' tha matchin $endif. If no mixer is
specified, "Vol" is used. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBif_mounted\fR\*(T> \fR\*(T<\fB(mountpoint)\fR\*(T> 
if MOUNTPOINT is mounted, display every last muthafuckin thang
between $if_mounted n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_mpd_playing\fR\*(T> \fR
if mpd is playin or paused, display every last muthafuckin thang
between $if_mpd_playin n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_running\fR\*(T> \fR\*(T<\fB(process)\fR\*(T> 
if PROCESS is hustlin, display every last muthafuckin thang
$if_runnin n' tha matchin $endif. This uses the
``pidof'' command, so tha -x switch be also supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

.TP 
\fB\*(T<\fBif_smapi_bat_installed\fR\*(T> \fR\*(T<\fB(INDEX)\fR\*(T> 
when rockin smapi, if tha battery wit index INDEX
is installed, display every last muthafuckin thang between
$if_smapi_bat_installed n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_up\fR\*(T> \fR\*(T<\fB(interface)\fR\*(T> 
if INTERFACE exists n' is up, display every last muthafuckin thang
between $if_up n' tha matchin $endif 

.TP 
\fB\*(T<\fBif_updatenr\fR\*(T> \fR\*(T<\fB(updatenr)\fR\*(T> 
If itz tha UPDATENR-th time dat conky thugged-out shit,
display every last muthafuckin thang between $if_updatenr n' tha matching
$endif. Da counta resets when tha highest UPDATENR is
reached. Y'all KNOW dat shit, muthafucka! Example : "{$if_updatenr 1}foo$endif{$if_updatenr
2}bar$endif{$if_updatenr 4}$endif" shows foo 25% of the
time followed by bar 25% of tha time followed by nothing
the other half of tha time. 

.TP 
\fB\*(T<\fBif_xmms2_connected\fR\*(T> \fR
Display every last muthafuckin thang between $if_xmms2_connected
and tha matchin $endif if xmms2 is hustlin. 

.TP 
\fB\*(T<\fBimage\fR\*(T> \fR\*(T<\fB<path ta image> (\-p x,y) (\-s WxH) (\-n) (\-f interval)\fR\*(T> 
Rendaz a image from tha path specified using
Imlib2. Takes 4 optionizzle arguments: a position, a size, a
no-cache switch, n' a cold-ass lil cache flush interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Changin the
x,y posizzle will move tha posizzle of tha image, and
changin tha WxH will scale tha image. If you specify the
no-cache flag (-n), tha image aint gonna be cached.
Alternately, you can specify tha -f int switch ta specify a
cache flust interval fo' a particular image. Example:
${image /home/brenden/cheeseburger.jpg -p 20,20 -s 200x200}
will render 'cheeseburger.jpg' at (20,20) scaled ta 200x200
pixels. Conky do not make any attempt ta adjust the
posizzle (or any other formatting) of images, they is just
rendered as per tha arguments passed. Y'all KNOW dat shit, muthafucka! Da only reason
$image is part of tha TEXT section, is ta allow fo' runtime
modifications, all up in $execp $lua_parse, or some other
method. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBimap_lyrics\fR\*(T> \fR\*(T<\fB(args)\fR\*(T> 
Displays tha number of lyrics up in yo' global
IMAP inbox by default. Yo ass can define individual IMAP
inboxes separately by passin arguments ta dis object.
Arguments are: "host user pass [-i interval (in seconds)]
[-f 'folder'] [-p port] [-e 'command'] [-r retries]". Default
port is 143, default folda is 'INBOX', default interval is
5 minutes, n' default number of retries before givin up
is 5. If tha password is supplied as '*', yo big-ass booty is ghon be
prompted ta enta tha password when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBimap_unseen\fR\*(T> \fR\*(T<\fB(args)\fR\*(T> 
Displays tha number of unseen lyrics up in your
global IMAP inbox by default. Yo ass can define individual
IMAP inboxes separately by passin arguments ta this
object fo' realz. Arguments are: "host user pass [-i interval (in
seconds)] [-f 'folder'] [-p port] [-e 'command'] [-r retries]".
Default port is 143, default folda is 'INBOX', default
interval is 5 minutes, n' default number of retries before
givin up is 5. If tha password is supplied as '*', you
will be prompted ta enta tha password when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBinclude\fR\*(T> \fR\*(T<\fBpath\fR\*(T> 
Loadz tha configfile at path, places the
configsettings behind tha configsettings up in tha orginal
config n' places tha vars where tha includevar
stood.
.TP 
\fB\*(T<\fBioscheduler\fR\*(T> \fR\*(T<\fBdisk\fR\*(T> 
Prints tha current ioschedula used fo' tha given
disk name (i.e. e.g. "hda" or "sdb") 

.TP 
\fB\*(T<\fBkernel\fR\*(T> \fR
Kernel version 

.TP 
\fB\*(T<\fBlaptop_mode\fR\*(T> \fR
Da value of /proc/sys/vm/laptop_mode 

.TP 
\fB\*(T<\fBlines\fR\*(T> \fR\*(T<\fBtextfile\fR\*(T> 
Displays tha number of lines up in tha given file 

.TP 
\fB\*(T<\fBloadavg\fR\*(T> \fR\*(T<\fB(1|2|3)\fR\*(T> 
System load average, 1 is fo' past 1 minute, 2
for past 5 minutes n' 3 fo' past 15 minutes. Without argument, prints
all three joints separated by whitespace.

.TP 
\fB\*(T<\fBloadgraph\fR\*(T> \fR\*(T<\fB(height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Load1 average graph, similar ta xload, with
optionizzle colours up in hex, minus tha #. Uses a logarithmic
scale (to peep lil' small-ass numbers) when you use tha -l switch.
Takes tha switch '-t' ta bust a temperature gradient, which
makes tha gradient joints chizzle dependin on tha amplitude
of a particular graph value (try it n' see). 

.TP 
\fB\*(T<\fBlua\fR\*(T> \fR\*(T<\fBfunction_name (function parameters)\fR\*(T> 
Executes a Lua function wit given parameters,
then prints tha returned string. Right back up in yo muthafuckin ass. See also 'lua_load' on how
to load scripts, n' you can put dat on yo' toast. Conky puts 'conky_' up in front of
function_name ta prevent accidental calls ta tha wrong
function unless you put you place 'conky_' up in front of it
yo ass. 

.TP 
\fB\*(T<\fBlua_bar\fR\*(T> \fR\*(T<\fB(height, width) function_name (function parameters)\fR\*(T> 
Executes a Lua function wit given parametas and
draws a funky-ass bar. Shiiit, dis aint no joke. Expects result value ta be a integer between
0 n' 100. Right back up in yo muthafuckin ass. See also 'lua_load' on how tha fuck ta load scripts.
Conky puts 'conky_' up in front of function_name ta prevent
accidental calls ta tha wack function unless you put you
place 'conky_' up in front of it yo ass. 

.TP 
\fB\*(T<\fBlua_gauge\fR\*(T> \fR\*(T<\fB(height, width) function_name (function parameters)\fR\*(T> 
Executes a Lua function wit given parametas and
draws a gauge. Expects result value ta be a integer
between 0 n' 100. Right back up in yo muthafuckin ass. See also 'lua_load' on how tha fuck ta load
scripts, n' you can put dat on yo' toast. Conky puts 'conky_' up in front of function_name to
prevent accidental calls ta tha wack function unless you
put you place 'conky_' up in front of it yo ass. 

.TP 
\fB\*(T<\fBlua_graph\fR\*(T> \fR\*(T<\fBfunction_name (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Executes a Lua function wit n' draws a graph.
Expects result value ta be any number, n' by default will
scale ta show tha full range. Right back up in yo muthafuckin ass. See also 'lua_load' on how tha fuck to
load scripts, n' you can put dat on yo' toast. Takes tha switch '-t' ta bust a temperature
gradient, which make tha gradient joints chizzle depending
on tha amplitude of a particular graph value (try it and
see). Conky puts 'conky_' up in front of function_name to
prevent accidental calls ta tha wack function unless you
put you place 'conky_' up in front of it yo ass. 

.TP 
\fB\*(T<\fBlua_parse\fR\*(T> \fR\*(T<\fBfunction_name (function parameters)\fR\*(T> 
Executes a Lua function wit given parametas as
per $lua, then parses n' prints tha result value as per
the syntax fo' Conkyz TEXT section. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See also 'lua_load' on
how ta load scripts, n' you can put dat on yo' toast. Conky puts 'conky_' up in front of
function_name ta prevent accidental calls ta tha wrong
function unless you put you place 'conky_' up in front of it
yo ass. 

.TP 
\fB\*(T<\fBmachine\fR\*(T> \fR
Machine, i686 fo' example 

.TP 
\fB\*(T<\fBmails\fR\*(T> \fR\*(T<\fB(mailbox)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Mail count up in tha specified mailbox or yo' mail
spool if not. Both mbox n' maildir type mailboxes are
supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Yo ass can bust a program like fetchmail ta get
mails from some server rockin yo' most straight-up bangin protocol. Right back up in yo muthafuckin ass. See
also new_mails. 

.TP 
\fB\*(T<\fBmboxscan\fR\*(T> \fR\*(T<\fB(\-n number of lyrics ta print) (\-fw from width) (\-sw subject width) mbox\fR\*(T> 
Print a summary of recent lyrics up in a mbox
format mailbox. mbox parameta is tha filename of the
mailbox (can be encapsulated rockin '"', ie. ${mboxscan -n
10 "/home/brenden/some box"} 

.TP 
\fB\*(T<\fBmem\fR\*(T> \fR
Amount of memory up in use 

.TP 
\fB\*(T<\fBmembar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Bar dat shows amount of memory up in use 

.TP 
\fB\*(T<\fBmemeasyfree\fR\*(T> \fR
Amount of free memory includin tha memory that
is straight-up easily freed (buffers/cache) 

.TP 
\fB\*(T<\fBmemfree\fR\*(T> \fR
Amount of free memory 

.TP 
\fB\*(T<\fBmemgauge\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Gauge dat shows amount of memory up in use (see
cpugauge) 

.TP 
\fB\*(T<\fBmemgraph\fR\*(T> \fR\*(T<\fB(height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Memory usage graph. Uses a logarithmic scale (to
see lil' small-ass numbers) when you use tha -l switch. Takes the
switch '-t' ta bust a temperature gradient, which make the
gradient joints chizzle dependin on tha amplitude of a
particular graph value (try it n' see). 

.TP 
\fB\*(T<\fBmemmax\fR\*(T> \fR
Total amount of memory 

.TP 
\fB\*(T<\fBmemperc\fR\*(T> \fR
Percentage of memory up in use 

.TP 
\fB\*(T<\fBmixer\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Prints tha mixer value as reported by tha OS.
On Linux, dis variable uses tha OSS emulation, so you
need tha proper kernel module loaded.
Default mixer is "Vol" yo, but you can specify one of the
available OSS controls: "Vol", "Bass", "Trebl", "Synth",
"Pcm", "Spkr", "Line", "Mic", "CD", "Mix", "Pcm2 ", "Rec",
"IGain", "OGain", "Line1", "Line2", "Line3", "Digital1",
"Digital2", "Digital3", "PhoneIn", "PhoneOut", "Video",
"Radio" n' "Monitor".

.TP 
\fB\*(T<\fBmixerbar\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays mixer value up in a funky-ass bar as reported by the
OS. Right back up in yo muthafuckin ass. See docs fo' $mixer fo' details on arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBmixerl\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Prints tha left channel mixer value as reported
by tha OS. Right back up in yo muthafuckin ass. See docs fo' $mixer fo' details on arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBmixerlbar\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays tha left channel mixer value up in a funky-ass bar as
reported by tha OS. Right back up in yo muthafuckin ass. See docs fo' $mixer fo' details on
arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBmixerr\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Prints tha right channel mixer value as reported
by tha OS. Right back up in yo muthafuckin ass. See docs fo' $mixer fo' details on arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBmixerrbar\fR\*(T> \fR\*(T<\fB(device)\fR\*(T> 
Displays tha right channel mixer value up in a funky-ass bar
as reported by tha OS. Right back up in yo muthafuckin ass. See docs fo' $mixer fo' details on
arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBmoc_album\fR\*(T> \fR
Album of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_artist\fR\*(T> \fR
Artist of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_bitrate\fR\*(T> \fR
Bitrate up in tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_curtime\fR\*(T> \fR
Current time of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_file\fR\*(T> \fR
File name of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_rate\fR\*(T> \fR
Rate of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_song\fR\*(T> \fR
Da current cold lil' woo wop name bein played up in MOC. 

.TP 
\fB\*(T<\fBmoc_state\fR\*(T> \fR
Current state of MOC; playing, stopped etc. 

.TP 
\fB\*(T<\fBmoc_timeleft\fR\*(T> \fR
Time left up in tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_title\fR\*(T> \fR
Title of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmoc_totaltime\fR\*(T> \fR
Total length of tha current MOC cold lil' woo wop 

.TP 
\fB\*(T<\fBmonitor\fR\*(T> \fR
Number of tha monitor on which conky is hustlin
or tha message "Not hustlin up in X" if dis is tha case. 

.TP 
\fB\*(T<\fBmonitor_number\fR\*(T> \fR
Number of monitors or tha message "Not hustlin in
X" if dis is tha case. 

.TP 
\fB\*(T<\fBmpd_album\fR\*(T> \fR
Album up in current MPD cold lil' woo wop 

.TP 
\fB\*(T<\fBmpd_artist\fR\*(T> \fR
Artist up in current MPD cold lil' woo wop must be enabled at
compile 

.TP 
\fB\*(T<\fBmpd_bar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Bar of mpdz progress 

.TP 
\fB\*(T<\fBmpd_bitrate\fR\*(T> \fR
Bitrate of current cold lil' woo wop 

.TP 
\fB\*(T<\fBmpd_date\fR\*(T> \fR
Date of current song

.TP 
\fB\*(T<\fBmpd_elapsed\fR\*(T> \fR
Songz elapsed time 

.TP 
\fB\*(T<\fBmpd_file\fR\*(T> \fR
Prints tha file name of tha current MPD cold lil' woo wop 

.TP 
\fB\*(T<\fBmpd_length\fR\*(T> \fR
Songz length 

.TP 
\fB\*(T<\fBmpd_name\fR\*(T> \fR
Prints tha MPD name field 

.TP 
\fB\*(T<\fBmpd_percent\fR\*(T> \fR
Percent of songz progress 

.TP 
\fB\*(T<\fBmpd_random\fR\*(T> \fR
Random status (On/Off) 

.TP 
\fB\*(T<\fBmpd_repeat\fR\*(T> \fR
Repeat status (On/Off) 

.TP 
\fB\*(T<\fBmpd_smart\fR\*(T> \fR\*(T<\fB(max length)\fR\*(T> 
Prints tha cold lil' woo wop name up in either tha form "artist -
title" or file name, dependin on whats available 

.TP 
\fB\*(T<\fBmpd_status\fR\*(T> \fR
Playing, stopped, et cetera. 

.TP 
\fB\*(T<\fBmpd_title\fR\*(T> \fR\*(T<\fB(max length)\fR\*(T> 
Title of current MPD cold lil' woo wop 

.TP 
\fB\*(T<\fBmpd_track\fR\*(T> \fR
Prints tha MPD track field 

.TP 
\fB\*(T<\fBmpd_vol\fR\*(T> \fR
MPDz volume 

.TP 
\fB\*(T<\fBnameserver\fR\*(T> \fR\*(T<\fB(index)\fR\*(T> 
Print a nameserver from /etc/resolv.conf. Index
starts at n' defaults ta 0. 

.TP 
\fB\*(T<\fBnew_mails\fR\*(T> \fR\*(T<\fB(mailbox)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Unread mail count up in tha specified mailbox or
mail spool if not. Both mbox n' maildir type mailboxes are
supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

.TP 
\fB\*(T<\fBnodename\fR\*(T> \fR
Hostname 

.TP 
\fB\*(T<\fBnodename_short\fR\*(T> \fR
Short hostname (same as 'hostname -s' shell command).

.TP 
\fB\*(T<\fBnvidia\fR\*(T> \fR\*(T<\fBthreshold\fR\*(T> \*(T<\fBtemp\fR\*(T> \*(T<\fBambient\fR\*(T> \*(T<\fBgpufreq\fR\*(T> \*(T<\fBmemfreq\fR\*(T> \*(T<\fBimagequality\fR\*(T> 
Nvidia graficcard support fo' tha XNVCtrl
library. Each option can be shortened ta tha least
significant part. Temperatures is printed as float, all
other joints as integer n' shit. 

\fBthreshold\fR
\*(T<\fBDa thresholdtemperature at
which tha gpu slows down\fR\*(T>
.br
\fBtemp\fR
\*(T<\fBGives tha gpu current
temperature\fR\*(T>
.br
\fBambient\fR
\*(T<\fBGives current air temperature near GPU
case\fR\*(T>
.br
\fBgpufreq\fR
\*(T<\fBGives tha current gpu frequency\fR\*(T>
.br
\fBmemfreq\fR
\*(T<\fBGives tha current mem frequency\fR\*(T>
.br
\fBimagequality\fR
\*(T<\fBWhich imagequalitizzle should be chosen by
OpenGL applications\fR\*(T>

.TP 
\fB\*(T<\fBoffset\fR\*(T> \fR\*(T<\fB(pixels)\fR\*(T> 
Move text over by N pixels. Right back up in yo muthafuckin ass. See also $voffset. 

.TP 
\fB\*(T<\fBoutlinecolor\fR\*(T> \fR\*(T<\fB(color)\fR\*(T> 
Change outline color 

.TP 
\fB\*(T<\fBpb_battery\fR\*(T> \fR\*(T<\fBitem\fR\*(T> 
If hustlin on Applez powerbook/ibook, display
information on battery status. Da item parameter
specifies, what tha fuck shiznit ta display. Exactly one item
must be specified. Y'all KNOW dat shit, muthafucka! Valid shit are: 

\fBstatus\fR
\*(T<\fBDisplay if battery is straight-up charged,
charging, dischargin or absent (runnin on
AC)\fR\*(T>
.br
\fBpercent\fR
\*(T<\fBDisplay charge of battery up in cement, if
chargin or discharging. Nothang is ghon be displayed,
if battery is straight-up charged or absent.\fR\*(T>
.br
\fBtime\fR
\*(T<\fBDisplay tha time remainin until the
battery is ghon be straight-up charged or discharged at
current rate. Nothang is displayed, if battery is
absent or if itz present but straight-up charged n' not
discharging.\fR\*(T>

.TP 
\fB\*(T<\fBpid_chroot\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Directory used as rootdirectory by tha process
(this is ghon be "/" unless tha process did a cold-ass lil chroot syscall)

.TP 
\fB\*(T<\fBpid_cmdline\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Command line dis process was invoked with

.TP 
\fB\*(T<\fBpid_cwd\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Current hustlin directory of tha process

.TP 
\fB\*(T<\fBpid_environ\fR\*(T> \fR\*(T<\fBpid varname\fR\*(T> 
Contentz of a environment-var of tha process

.TP 
\fB\*(T<\fBpid_environ_list\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
List of environment-vars dat tha process can see

.TP 
\fB\*(T<\fBpid_exe\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Path ta executed command dat started tha process

.TP 
\fB\*(T<\fBpid_nice\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da sick value of tha process

.TP 
\fB\*(T<\fBpid_openfiles\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
List of filez dat tha process has open

.TP 
\fB\*(T<\fBpid_parent\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da pid of tha parent of tha process

.TP 
\fB\*(T<\fBpid_priority\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da prioritizzle of tha process (see 'priority' up in "man 5 proc")

.TP 
\fB\*(T<\fBpid_read\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Total number of bytes read by tha process

.TP 
\fB\*(T<\fBpid_state\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
State of tha process

.TP 
\fB\*(T<\fBpid_state_short\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
One of tha chars up in "RSDZTW" representin tha state
of tha process where R is hustlin, S is chillin up in an
interruptible wait, D is waitin up in uninterruptible disk chill,
Z is zombie, T is traced or stopped (on a signal), n' W is paging

.TP 
\fB\*(T<\fBpid_stderr\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Filedescriptor binded ta tha STDERR of tha process

.TP 
\fB\*(T<\fBpid_stdin\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Filedescriptor binded ta tha STDIN of tha process

.TP 
\fB\*(T<\fBpid_stdout\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Filedescriptor binded ta tha STDOUT of tha process

.TP 
\fB\*(T<\fBpid_threads\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Number of threadz up in process containin dis thread

.TP 
\fB\*(T<\fBpid_thread_list\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
List wit pidz from threadz from dis process

.TP 
\fB\*(T<\fBpid_time_kernelmode\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Amount of time dat tha process has been scheduled up in kernel mode up in seconds

.TP 
\fB\*(T<\fBpid_time_usermode\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Amount of time dat tha process has been scheduled up in user mode up in seconds

.TP 
\fB\*(T<\fBpid_time\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Sum of $pid_time_kernelmode n' $pid_time_usermode

.TP 
\fB\*(T<\fBpid_uid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da real uid of tha process

.TP 
\fB\*(T<\fBpid_euid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da effectizzle uid of tha process

.TP 
\fB\*(T<\fBpid_suid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da saved set uid of tha process

.TP 
\fB\*(T<\fBpid_fsuid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da file system uid of tha process

.TP 
\fB\*(T<\fBpid_gid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da real gid of tha process

.TP 
\fB\*(T<\fBpid_egid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da effectizzle gid of tha process

.TP 
\fB\*(T<\fBpid_sgid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da saved set gid of tha process

.TP 
\fB\*(T<\fBpid_fsgid\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Da file system gid of tha process

.TP 
\fB\*(T<\fBpid_vmpeak\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Peak virtual memory size of tha process

.TP 
\fB\*(T<\fBpid_vmsize\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Virtual memory size of tha process

.TP 
\fB\*(T<\fBpid_vmlck\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Locked memory size of tha process

.TP 
\fB\*(T<\fBpid_vmhwm\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Peak resident set size ("high wata mark") of tha process

.TP 
\fB\*(T<\fBpid_vmrss\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Resident set size of tha process

.TP 
\fB\*(T<\fBpid_vmdata\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Data segment size of tha process

.TP 
\fB\*(T<\fBpid_vmstk\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Stack segment size of tha process

.TP 
\fB\*(T<\fBpid_vmexe\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Text segment size of tha process

.TP 
\fB\*(T<\fBpid_vmlib\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Shared library code size of tha process

.TP 
\fB\*(T<\fBpid_vmpte\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Page table entries size of tha process

.TP 
\fB\*(T<\fBpid_write\fR\*(T> \fR\*(T<\fBpid\fR\*(T> 
Total number of bytes freestyled by tha process

.TP 
\fB\*(T<\fBplatform\fR\*(T> \fR\*(T<\fB(dev) type n (factor offset)\fR\*(T> 
Platform sensor from sysfs (Linux 2.6). Parameter
dev may be omitted if you have only one platform device.
Platform type is either 'in' or 'vol' meanin voltage;
\&'fan' meanin fan; 'temp' meanin temperature. Parameta n
is number of tha sensor. Shiiit, dis aint no joke. Right back up in yo muthafuckin ass. See /sys/bus/platform/devices/ on
your local computer n' shit. Da optionizzle arguments 'factor' and
\&'offset' allow precalculation of tha raw input, which is
bein modified as bigs up: 'input = input * factor +
offset'. Note dat they gotta be given as decimal joints
(i.e. contain at least one decimal place). 

.TP 
\fB\*(T<\fBpop3_unseen\fR\*(T> \fR\*(T<\fB(args)\fR\*(T> 
Displays tha number of unseen lyrics up in your
global POP3 inbox by default. Yo ass can define individual
POP3 inboxes separately by passin arguments ta this
object fo' realz. Arguments are: "host user pass [-i interval (in
seconds)] [-p port] [-e 'command'] [-r retries]". Default
port is 110, default interval is 5 minutes, n' default
number of retries before givin up is 5. If tha password is
supplied as '*', yo big-ass booty is ghon be prompted ta enta tha password
when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBpop3_used\fR\*(T> \fR\*(T<\fB(args)\fR\*(T> 
Displays tha amount of space (in MiB, 2^20) used
in yo' global POP3 inbox by default. Yo ass can define
individual POP3 inboxes separately by passin arguments to
this object fo' realz. Arguments are: "host user pass [-i interval
(in seconds)] [-p port] [-e 'command'] [-r retries]". Default
port is 110, default interval is 5 minutes, n' default
number of retries before givin up is 5. If tha password is
supplied as '*', yo big-ass booty is ghon be prompted ta enta tha password
when Conky starts, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBpre_exec\fR\*(T> \fR\*(T<\fBshell command\fR\*(T> 
Executes a gangbangin' finger-lickin' dirty-ass shell command one time before conky
displays anythang n' puts output as text. 

.TP 
\fB\*(T<\fBprocesses\fR\*(T> \fR
Total processes (chillin n' hustlin) 

.TP 
\fB\*(T<\fBread_tcp\fR\*(T> \fR\*(T<\fB(host) port\fR\*(T> 
Connects ta a tcp port on a host (default is
localhost), readz every last muthafuckin char available all up in tha moment and
shows em. 

.TP 
\fB\*(T<\fBreplied_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as replied up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBrss\fR\*(T> \fR\*(T<\fBuri interval_in_minutes action (num_par (spaces_in_front))\fR\*(T> 
Downlizzle n' parse RSS feeds. Da interval may be
a floatin point value pimped outa than 0, otherwise
defaults ta 15 minutes fo' realz. Action may be one of the
following: feed_title, item_title (with num par),
item_desc (with num par) n' item_titlez (when using
this action n' spaces_in_front is given conky places
that nuff spaces up in front of each item). This object is
threaded, n' once a thread is pimped it can't be
explicitly destroyed. Y'all KNOW dat shit, muthafucka! One thread will run fo' each URI
specified. Y'all KNOW dat shit, muthafucka! Yo ass can use any protocol dat Curl
supports.
.TP 
\fB\*(T<\fBrunning_processes\fR\*(T> \fR
Hustlin processes (not chillin), requires Linux
2.6 

.TP 
\fB\*(T<\fBrunning_threads\fR\*(T> \fR
Number of hustlin (runnable) threads. Linux only.

.TP 
\fB\*(T<\fBscroll\fR\*(T> \fR\*(T<\fBlength (step) text\fR\*(T> 
Scroll 'text' by 'step' charactas showing
\&'length' number of charactas all up in tha same time. Da text
may also contain variables. 'step' is optionizzle n' defaults
to 1 if not set. If a var creates output on multiple lines
then tha lines is placed behind each other separated with
a '|'-sign. I aint talkin' bout chicken n' gravy biatch. If you chizzle tha textcolor inside $scroll it
will automatically have itz oldschool value back all up in tha end of
$scroll. Da end n' tha start of text is ghon be separated by
\&'length' number of spaces. 

.TP 
\fB\*(T<\fBseen_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as peeped up in tha specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBshadecolor\fR\*(T> \fR\*(T<\fB(color)\fR\*(T> 
Change shadin color 

.TP 
\fB\*(T<\fBsmapi\fR\*(T> \fR\*(T<\fB(ARGS)\fR\*(T> 
when rockin smapi, display contentz of the
/sys/devices/platform/smapi directory fo' realz. ARGS is either
\&'(FILENAME)' or 'bat (INDEX) (FILENAME)' ta display the
correspondin files' content. This be a straight-up raw method of
accessin tha smapi joints, n' you can put dat on yo' toast. When available, betta use one
of tha smapi_* variablez instead. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBsmapi_bat_bar\fR\*(T> \fR\*(T<\fB(INDEX),(height),(width)\fR\*(T> 
when rockin smapi, display tha remainin capacity
of tha battery wit index INDEX as a funky-ass bar. Shiiit, dis aint no joke. 

.TP 
\fB\*(T<\fBsmapi_bat_perc\fR\*(T> \fR\*(T<\fB(INDEX)\fR\*(T> 
when rockin smapi, display tha remainin capacity
in cement of tha battery wit index INDEX. This be a
separate variable cuz it supports tha 'use_spacer'
configuration option. I aint talkin' bout chicken n' gravy biatch. 

.TP 
\fB\*(T<\fBsmapi_bat_power\fR\*(T> \fR\*(T<\fBINDEX\fR\*(T> 
when rockin smapi, display tha current juice of
the battery wit index INDEX up in watt. This be a separate
variable cuz tha original gangsta read up value is being
converted from mW. Da sign of tha output reflects charging
(positive) or dischargin (negative) state. 

.TP 
\fB\*(T<\fBsmapi_bat_temp\fR\*(T> \fR\*(T<\fBINDEX\fR\*(T> 
when rockin smapi, display tha current temperature
of tha battery wit index INDEX up in degree Celsius. This is
a separate variable cuz tha original gangsta read up value is
bein converted from milli degree Celsius. 

.TP 
\fB\*(T<\fBsony_fanspeed\fR\*(T> \fR
Displays tha Sony VAIO fanspeed shiznit if
sony-laptop kernel support is enabled. Y'all KNOW dat shit, muthafucka! Linux only. 

.TP 
\fB\*(T<\fBstippled_hr\fR\*(T> \fR\*(T<\fB(space)\fR\*(T> 
Stippled (dashed) horizontal line 

.TP 
\fB\*(T<\fBswap\fR\*(T> \fR
Amount of swap up in use 

.TP 
\fB\*(T<\fBswapbar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Bar dat shows amount of swap up in use 

.TP 
\fB\*(T<\fBswapfree\fR\*(T> \fR
Amount of free swap 

.TP 
\fB\*(T<\fBswapmax\fR\*(T> \fR
Total amount of swap 

.TP 
\fB\*(T<\fBswapperc\fR\*(T> \fR
Percentage of swap up in use 

.TP 
\fB\*(T<\fBsysname\fR\*(T> \fR
System name, Linux fo' example 

.TP 
\fB\*(T<\fBtab\fR\*(T> \fR\*(T<\fB(width, (start))\fR\*(T> 
Puts a tab of tha specified width, startin from
column 'start'. Da unit is pixels fo' both arguments, n' you can put dat on yo' toast. 

.TP 
\fB\*(T<\fBtail\fR\*(T> \fR\*(T<\fBlogfile lines (next_check)\fR\*(T> 
Displays last N linez of supplied text file. The
file is checked every last muthafuckin 'next_check' update. If next_check is
not supplied, Conky defaults ta 2. Max of 30 lines can be
displayed, or until tha text buffer is filled. Y'all KNOW dat shit, muthafucka! 

.TP 
\fB\*(T<\fBtcp_portmon\fR\*(T> \fR\*(T<\fBport_begin port_end item (index)\fR\*(T> 
TCP port (both IPv6 n' IPv4) monitor for
specified local ports, n' you can put dat on yo' toast. Port numbers must be in
the range 1 ta 65535. Valid shit are:

\fBcount\fR
\*(T<\fBTotal number of connections up in the
range\fR\*(T>
.br
\fBrip\fR
\*(T<\fBRemote ip address\fR\*(T>
.br
\fBrhost\fR
\*(T<\fBRemote host name\fR\*(T>
.br
\fBrport\fR
\*(T<\fBRemote port number\fR\*(T>
.br
\fBrservice\fR
\*(T<\fBRemote steez name from
/etc/skillz\fR\*(T>
.br
\fBlip\fR
\*(T<\fBLocal ip address\fR\*(T>
.br
\fBlhost\fR
\*(T<\fBLocal host name\fR\*(T>
.br
\fBlport\fR
\*(T<\fBLocal port number\fR\*(T>
.br
\fBlservice\fR
\*(T<\fBLocal steez name from
/etc/skillz\fR\*(T>

Da connection index serves up you wit access to
each connection up in tha port monitor. Shiiit, dis aint no joke. Da monitor will
return shiznit fo' index joints from 0 ta n-1
connections. Values higher than n-1 is simply ignored.
For tha "count" item, tha connection index must be
omitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Well shiiiit, it is required fo' all other items.

Examples:

\fB${tcp_portmon 6881 6999
count}\fR
\*(T<\fBDisplays tha number of connections in
the bittorrent port range\fR\*(T>
.br
\fB${tcp_portmon 22 22 rip 0}\fR
\*(T<\fBDisplays tha remote host ip of the
first sshd connection\fR\*(T>
.br
\fB${tcp_portmon 22 22 rip 9}\fR
\*(T<\fBDisplays tha remote host ip of the
tenth sshd connection\fR\*(T>
.br
\fB${tcp_portmon 1 1024 rhost
0}\fR
\*(T<\fBDisplays tha remote host name of the
first connection on a privileged port\fR\*(T>
.br
\fB${tcp_portmon 1 1024 rport
4}\fR
\*(T<\fBDisplays tha remote host port of the
fifth connection on a privileged port\fR\*(T>
.br
\fB${tcp_portmon 1 65535 lservice
14}\fR
\*(T<\fBDisplays tha local steez name of the
fifteenth connection up in tha range of all
ports\fR\*(T>

Note dat port monitor variablez which share the
same port range straight-up refer ta tha same monitor, so
many references ta a single port range fo' different
items n' different indexes all use tha same monitor
internally. In other lyrics, tha program avoidz bustin
redundant monitors.
.TP 
\fB\*(T<\fBtemplateN\fR\*(T> \fR\*(T<\fB(arg1)\fR\*(T> \*(T<\fB(arg2)\fR\*(T> \*(T<\fB(arg3 ...)\fR\*(T> 
Evaluate tha content of tha templateN
configuration variable (where N be a value between 0
and 9, inclusively), applyin substitutions as
busted lyrics bout up in tha documentation of tha corresponding
configuration variable. Da number of arguments is
optionizzle yo, but must match tha highest referred index in
the template. Yo ass can use tha same special sequences in
each argument as tha ones valid fo' a template
definition, e.g. ta allow a argument ta contain a
whitespace fo' realz. Also simple nestin of templates is
possible dis way.

Here is some examplez of template
definitions:

template0 $\e1\e2
.br
template1 \e1: ${fs_used \e2} / ${fs_size
\e2}
.br
template2 \e1 \e2

Da followin list shows sample usage of the
templates defined above, wit tha equivalent syntax
when not rockin any template at all:
.TS
l l.
T{
usin template
T}	T{
same without template
T}
.T&
_ _
l l
l l
l l.
T{
${template0 node name}
T}	T{
$nodename
T}
T{
${template1 root /}
T}	T{
root: ${fs_free /} / ${fs_size
/}
T}
T{
${template1
${template2\e disk\e root}
/}
T}	T{
disk root:
${fs_free /} / ${fs_size
/}
T}
.TE
.TP 
\fB\*(T<\fBtexeci\fR\*(T> \fR\*(T<\fBinterval command\fR\*(T> 
Runs a cold-ass lil command at a interval inside a thread and
displays tha output. Right back up in yo muthafuckin ass. Same as $execi, except tha command is
run inside a thread. Y'all KNOW dat shit, muthafucka! Use dis if you gotz a slow script to
keep Conky updating. Yo ass should make tha interval slightly
longer then tha time it takes yo' script ta execute. For
example, if you gotz a script dat take 5 secondz to
execute, you should make tha interval at least 6 seconds.
See also $execi. This object will clean up tha thread when
it is destroyed, so it can safely be used up in a nested
fashion, though it may not produce tha desired behaviour if
used dis way. 

.TP 
\fB\*(T<\fBthreads\fR\*(T> \fR
Total threads

.TP 
\fB\*(T<\fBtime\fR\*(T> \fR\*(T<\fB(format)\fR\*(T> 
Local time, peep playa strftime ta git more
information bout format 

.TP 
\fB\*(T<\fBto_bytes\fR\*(T> \fR\*(T<\fBsize\fR\*(T> 
If 'size' be a number followed by a size-unit
(kilobyte,mb,GiB,...) then it converts tha size ta bytes
and shows it without unit, otherwise it just shows 'size'. 

.TP 
\fB\*(T<\fBtop\fR\*(T> \fR\*(T<\fBtype num\fR\*(T> 
This takes arguments up in tha form:top (name)
(number) Basically, processes is ranked from highest to
lowest up in termz of cpu usage, which is what tha fuck (num)
represents, n' you can put dat on yo' toast. Da types are: "name", "pid", "cpu", "mem",
"mem_res", "mem_vsize", "time", "uid", "user", "io_perc", "io_read" and
"io_write". There can be a max of 10 processes listed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

.TP 
\fB\*(T<\fBtop_io\fR\*(T> \fR\*(T<\fBtype num\fR\*(T> 
Same as top, except sorted by tha amount of I/O
the process has done durin tha update interval 

.TP 
\fB\*(T<\fBtop_mem\fR\*(T> \fR\*(T<\fBtype num\fR\*(T> 
Same as top, except sorted by mem usage instead
of cpu 

.TP 
\fB\*(T<\fBtop_time\fR\*(T> \fR\*(T<\fBtype num\fR\*(T> 
Same as top, except sorted by total CPU time
instead of current CPU usage 

.TP 
\fB\*(T<\fBtotaldown\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Total download, overflows at 4 GB on Linux with
32-bit arch n' there don't seem ta be a way ta know how
many times it has already done dat before conky has
started. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

.TP 
\fB\*(T<\fBtotalup\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Total upload, dis one too, may overflow 

.TP 
\fB\*(T<\fBtrashed_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails marked as trashed up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBtztime\fR\*(T> \fR\*(T<\fB(timezone (format))\fR\*(T> 
Local time fo' specified timezone, peep man
strftime ta git mo' shiznit bout format. Da timezone
argument is specified up in similar fashizzle as TZ environment
variable. For hints, look up in /usr/share/zoneinfo. e.g.
US/Pacific, Europe/Zurich, etc. 

.TP 
\fB\*(T<\fBgid_name\fR\*(T> \fR\*(T<\fBgid\fR\*(T> 
Name of crew wit dis gid

.TP 
\fB\*(T<\fBuid_name\fR\*(T> \fR\*(T<\fBuid\fR\*(T> 
Username of user wit dis uid

.TP 
\fB\*(T<\fBunflagged_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails not marked as flagged up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBunforwarded_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails not marked as forwarded up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBunreplied_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of mails not marked as replied up in the
specified mailbox or mail spool if not. Only maildir type
mailboxes is supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBunseen_mails\fR\*(T> \fR\*(T<\fB(maildir)\fR\*(T> \*(T<\fB(interval)\fR\*(T> 
Number of freshly smoked up or unseen mails up in tha specified
mailbox or mail spool if not. Only maildir type mailboxes
are supported, mbox type will return -1. 

.TP 
\fB\*(T<\fBupdates\fR\*(T> \fR\*(T<\fBNumber of thugged-out shit\fR\*(T> 
for debuggin 

.TP 
\fB\*(T<\fBupspeed\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Upload speed up in suitable IEC units 

.TP 
\fB\*(T<\fBupspeedf\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Upload speed up in KiB wit one decimal 

.TP 
\fB\*(T<\fBupspeedgraph\fR\*(T> \fR\*(T<\fB(netdev) (height),(width) (gradient colour 1) (gradient colour 2) (scale) (\-t) (\-l)\fR\*(T> 
Upload speed graph, colours defined up in hex, minus
the #. If scale is non-zero, it becomes tha scale fo' the
graph. Uses a logarithmic scale (to peep lil' small-ass numbers) when
you use tha -l switch. Takes tha switch '-t' ta use a
temperature gradient, which make tha gradient joints
change dependin on tha amplitude of a particular graph
value (try it n' see). 

.TP 
\fB\*(T<\fBuptime\fR\*(T> \fR
Uptime 

.TP 
\fB\*(T<\fBuptime_short\fR\*(T> \fR
Uptime up in a gangbangin' finger-lickin' dirty-ass shorta format 

.TP 
\fB\*(T<\fBuser_names\fR\*(T> \fR
Lists tha namez of tha playas logged up in 

.TP 
\fB\*(T<\fBuser_number\fR\*(T> \fR
Number of playas logged up in 

.TP 
\fB\*(T<\fBuser_terms\fR\*(T> \fR
Lists tha consolez up in use 

.TP 
\fB\*(T<\fBuser_times\fR\*(T> \fR
Lists how tha fuck long playas done been logged up in fo' 

.TP 
\fB\*(T<\fBuser_time\fR\*(T> \fR\*(T<\fBconsole\fR\*(T> 
Lists how tha fuck long tha user fo' tha given console has been
logged up in for

.TP 
\fB\*(T<\fButime\fR\*(T> \fR\*(T<\fB(format)\fR\*(T> 
Display time up in UTC (universal coordinizzle time). 

.TP 
\fB\*(T<\fBvoffset\fR\*(T> \fR\*(T<\fB(pixels)\fR\*(T> 
Change vertical offset by N pixels. Negative
values will cause text ta overlap. Right back up in yo muthafuckin ass. See also $offset. 

.TP 
\fB\*(T<\fBvoltage_mv\fR\*(T> \fR\*(T<\fB(n)\fR\*(T> 
Returns CPU #nz voltage up in mV. CPUs is counted
from 1. If omitted, tha parameta defaults ta 1. 

.TP 
\fB\*(T<\fBvoltage_v\fR\*(T> \fR\*(T<\fB(n)\fR\*(T> 
Returns CPU #nz voltage up in V. CPUs is counted
from 1. If omitted, tha parameta defaults ta 1. 

.TP 
\fB\*(T<\fBweather\fR\*(T> \fR\*(T<\fBURI locID data_type (interval_in_minutes)\fR\*(T> 
Download, parse n' display METAR data.

For tha 'URI', there be two
possibilities:

http://weather.noaa.gov/pub/data/observations/metar/stations/
.br
http://xoap.weather.com/weather/local/

Da first one is free ta use but tha second
requires you ta regista n' obtain yo' partner ID and
license key. These two must be written, separated by a
space, tha fuck into a gangbangin' file called .xoaprc which need ta be
placed tha fuck into yo' home directory.

\&'locID' must be a valid location identifier for
the required uri. For tha NOAA joint dis must be a
valid ICAO (see fo' instance
https://pilotweb.nas.faa.gov/qryhtml/icao/). For the
weather.com joint dis must be a valid location ID (see
for instance
http://aspnetresources.com/tools/locid.aspx).

\&'data_type' must be one of tha following:

\fBlast_update\fR
Da date n' time stamp of tha data.
Da result dependz on tha URI used. Y'all KNOW dat shit, muthafucka! For the
NOAA joint it is date (yyyy/mm/dd) n' UTC time.
For tha weather.com one it is date
([m]m/[d]d/yy) n' Local Time of the
station.
.br
\fBtemperature\fR

Air temperature (you can use the
\&'temperature_unit' config settin ta chizzle
units)
.br
\fBcloud_cover\fR

Da highest cloud cover status
.br
\fBpressure\fR

Air heat up in millibar
.br
\fBwind_speed\fR

Wind speed up in km/h
.br
\fBwind_dir\fR

Wind direction
.br
\fBwind_dir_DEG\fR

Compass wind direction
.br
\fBhumidity\fR

Relatizzle humiditizzle up in %
.br
\fBweather\fR

Any relevant drizzle event (rain, snow,
etc.). This aint used if yo ass is queryin the
weather.com joint since dis data be aggregated
into tha cloud_cover one
.br
\fBicon\fR

Weather icon (only for
www.weather.com). Can be used together wit the
icon kit provided upon registerin ta their
service.

\&'delay_in_minutes' (optional, default 30) cannot
be less than 30 minutes.

This object is threaded, n' once a thread is
created it can't be explicitly destroyed. Y'all KNOW dat shit, muthafucka! One thread
will run fo' each URI specified.

Note dat these variablez is still EXPERIMENTAL
and can be subject ta nuff future chizzles.
.TP 
\fB\*(T<\fBweather_forecast\fR\*(T> \fR\*(T<\fBURI locID dizzle data_type (interval_in_minutes)\fR\*(T> 
Download, parse n' display drizzle forecast data
for a given dizzle (daytime only).

For tha 'URI', fo' tha time bein only
http://xoap.weather.com/weather/local/ is
supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. See 'weather' above fo' detailz of usage

\&'locID', peep 'weather' above.

\&'day' be a number from 0 (todizzle) ta 4 (3 days
afta tomorrow).

\&'data_type' must be one of tha following:

\fBday\fR
\*(T<\fBDizzle of tha week\fR\*(T>
.br
\fBdate\fR
\*(T<\fBDate, up in tha form MMM DD (ie. Jul 14)\fR\*(T>
.br
\fBlow\fR
\*(T<\fBMinimun temperature (you can use the
\&'temperature_unit' config settin ta chizzle
units)\fR\*(T>
.br
\fBhi\fR
\*(T<\fBMaximum temperature (you can use the
\&'temperature_unit' config settin ta chizzle
units)\fR\*(T>
.br
\fBicon\fR
\*(T<\fBWeather icon. I aint talkin' bout chicken n' gravy biatch. Can be used together wit the
icon kit provided upon registerin ta tha weather.com
service\fR\*(T>
.br
\fBforecast\fR
\*(T<\fBWeather forecast (sunny, rainy, etc.)\fR\*(T>
.br
\fBwind_speed\fR
\*(T<\fBWind speed up in km/h\fR\*(T>
.br
\fBwind_dir\fR
\*(T<\fBWind direction\fR\*(T>
.br
\fBwind_dir_DEG\fR
\*(T<\fBCompass wind direction\fR\*(T>
.br
\fBhumidity\fR
\*(T<\fBRelatizzle humiditizzle up in %\fR\*(T>
.br
\fBprecipitation\fR
\*(T<\fBProbabilitizzle of havin a
precipitation (in %)\fR\*(T>

\&'delay_in_minutes' (optional, default 210) cannot
be lower than 210 min.

This object is threaded, n' once a thread is
created it can't be explicitly destroyed. Y'all KNOW dat shit, muthafucka! One thread
will run fo' each URI specified. Y'all KNOW dat shit, muthafucka! Yo ass can use any
protocol dat Curl supports.

Note dat these variablez is still EXPERIMENTAL
and can be subject ta nuff future chizzles.
.TP 
\fB\*(T<\fBwireless_ap\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless access point MAC address (Linux only) 

.TP 
\fB\*(T<\fBwireless_bitrate\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless bitrate (ie 11 Mb/s) (Linux only) 

.TP 
\fB\*(T<\fBwireless_essid\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless access point ESSID (Linux only) 

.TP 
\fB\*(T<\fBwireless_link_bar\fR\*(T> \fR\*(T<\fB(height),(width) (net)\fR\*(T> 
Wireless link qualitizzle bar (Linux only) 

.TP 
\fB\*(T<\fBwireless_link_qual\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless link qualitizzle (Linux only) 

.TP 
\fB\*(T<\fBwireless_link_qual_max\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless link qualitizzle maximum value (Linux only) 

.TP 
\fB\*(T<\fBwireless_link_qual_perc\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless link qualitizzle up in cements (Linux only) 

.TP 
\fB\*(T<\fBwireless_mode\fR\*(T> \fR\*(T<\fB(net)\fR\*(T> 
Wireless mode (Managed/Ad-Hoc/Master) (Linux
only) 

.TP 
\fB\*(T<\fBwords\fR\*(T> \fR\*(T<\fBtextfile\fR\*(T> 
Displays tha number of lyrics up in tha given file 

.TP 
\fB\*(T<\fBxmms2_album\fR\*(T> \fR
Album up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_artist\fR\*(T> \fR
Artist up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_bar\fR\*(T> \fR\*(T<\fB(height),(width)\fR\*(T> 
Bar of XMMS2z progress 

.TP 
\fB\*(T<\fBxmms2_bitrate\fR\*(T> \fR
Bitrate of current cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_comment\fR\*(T> \fR
Comment up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_date\fR\*(T> \fR
Returns songz date. 

.TP 
\fB\*(T<\fBxmms2_duration\fR\*(T> \fR
Duration of current cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_elapsed\fR\*(T> \fR
Songz elapsed time 

.TP 
\fB\*(T<\fBxmms2_genre\fR\*(T> \fR
Genre up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_id\fR\*(T> \fR
XMMS2 id of current cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_percent\fR\*(T> \fR
Percent of songz progress 

.TP 
\fB\*(T<\fBxmms2_playlist\fR\*(T> \fR
Returns tha XMMS2 playlist. 

.TP 
\fB\*(T<\fBxmms2_size\fR\*(T> \fR
Size of current cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_smart\fR\*(T> \fR
Prints tha cold lil' woo wop name up in either tha form "artist -
title" or file name, dependin on whats available 

.TP 
\fB\*(T<\fBxmms2_status\fR\*(T> \fR
XMMS2 status (Playing, Paused, Stopped, or
Disconnected) 

.TP 
\fB\*(T<\fBxmms2_timesplayed\fR\*(T> \fR
Number of times a cold lil' woo wop was played (presumably). 

.TP 
\fB\*(T<\fBxmms2_title\fR\*(T> \fR
Title up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_tracknr\fR\*(T> \fR
Track number up in current XMMS2 cold lil' woo wop 

.TP 
\fB\*(T<\fBxmms2_url\fR\*(T> \fR
Full path ta current cold lil' woo wop 

.TP 
\fB\*(T<\fBif_jack_active\fR\*(T> \fR
If JACK be actizzle display every last muthafuckin thang between the
$if_jack_actizzle n' tha matchin $endif.

.TP 
\fB\*(T<\fBjack_cpu_load\fR\*(T> \fR
Prints tha current CPU load as estimated by JACK.

.TP 
\fB\*(T<\fBjack_buffer_size\fR\*(T> \fR
Shows tha current JACK buffer size.

.TP 
\fB\*(T<\fBjack_sampler_rate\fR\*(T> \fR
Shows tha current JACK sample rate.

.TP 
\fB\*(T<\fBjack_xruns\fR\*(T> \fR
Shows a cold-ass lil count of xruns (buffer over/under runs)
that have ocurred.

.TP 
\fB\*(T<\fBif_jack_rolling\fR\*(T> \fR
If tha JACK transhiznit mechanizzle is rolling, display
everythang between tha $if_jack_rollin n' tha matchin $endif.

.TP 
\fB\*(T<\fBjack_frame\fR\*(T> \fR
Shows tha frame number up in tha JACK transhiznit timeline.

.TP 
\fB\*(T<\fBjack_hour\fR\*(T> \fR
Shows tha frame number as hours.

.TP 
\fB\*(T<\fBjack_min\fR\*(T> \fR
Shows tha frame number as minutes within tha hour.

.TP 
\fB\*(T<\fBjack_sec\fR\*(T> \fR
Shows tha frame number as secondz within tha minute.

.TP 
\fB\*(T<\fBif_jack_bbt\fR\*(T> \fR
If JACK transhiznit is keepin BBT (bars/beats/ticks)
information then display every last muthafuckin thang between $if_jack_bbt and
the correspondin $endif.

.TP 
\fB\*(T<\fBjack_beat_type\fR\*(T> \fR
Shows tha beat type of tha time signature tha JACK
transhiznit mechanizzle is using.

.TP 
\fB\*(T<\fBjack_beats_per_bar\fR\*(T> \fR
Shows tha number of beats per bar tha JACK
transhiznit mechanizzle is using.

.TP 
\fB\*(T<\fBjack_bpm\fR\*(T> \fR
Shows tha beats per minute tha JACK transport
mechanizzle is using.

.TP 
\fB\*(T<\fBjack_bar\fR\*(T> \fR
Da bar posizzle JACK transhiznit is currently located.

.TP 
\fB\*(T<\fBjack_beat\fR\*(T> \fR
Da beat within tha bar JACK transhiznit is currently
located.

.TP 
\fB\*(T<\fBjack_tick\fR\*(T> \fR
Da tick within tha beat JACK transhiznit is currently
located.

.SH "LUA API"
Conky features a Lua Programmin API, n' also ships wit Lua
bindings fo' some useful libraries. Put ya muthafuckin choppers up if ya feel dis! Conky defines certain global
functions n' variablez which can be accessed from Lua code hustlin
in Conky.
.PP
To use Lua Conky, you first need ta make shizzle you gotz a version of Conky
with Lua support enabled (``conky -v'' will report this). Right back up in yo muthafuckin ass. Scripts
must first be loaded rockin tha lua_load configuration option. I aint talkin' bout chicken n' gravy biatch. You
then call functions up in Lua via Conkyz $lua, $lua_read, n' Lua
hooks.
.PP
Be careful when bustin threaded objects all up in tha Lua API. You
could wind up wit a whole bunch of threadz hustlin if a thread is
created wit each iteration.
.PP
At dis time, tha Lua API should not be considered stable n' may
change drastically from one release ta another as it matures.
.PP
NOTE: In order ta accommodate certain features up in tha cairo
libraryz API, Conky will export all dem additionizzle functions fo' the
creation of certain structures. These is documented below.
.TP 
\fB\*(T<\fBconky_parse(string)\fR\*(T> \fR\*(T<\fBfunction\fR\*(T> 
This function takes a strang dat is evaluated as
per Conkyz TEXT section, n' then returns a string
with tha result.
.TP 
\fB\*(T<\fBconky_set_update_interval(number)\fR\*(T> \fR\*(T<\fBfunction\fR\*(T> 
Sets Conkyz update interval (in seconds) to
\&'number'.
.TP 
\fB\*(T<\fBconky_window\fR\*(T> \fR\*(T<\fBtable\fR\*(T> 
This table gotz nuff some shiznit about
Conkyz window. Da followin table raps bout the
values contained:

\fBdrawable\fR
\*(T<\fBWindowz drawable (Xlib Drawable),
requires Lua extras enabled at compile
time.\fR\*(T>
.br
\fBvisual\fR
\*(T<\fBWindowz visual (Xlib Visual), requires
Lua extras enabled at compile time.\fR\*(T>
.br
\fBdisplay\fR
\*(T<\fBWindowz display (Xlib Display),
requires Lua extras enabled at compile
time.\fR\*(T>
.br
\fBwidth\fR
\*(T<\fBWindow width (in pixels).\fR\*(T>
.br
\fBheight\fR
\*(T<\fBWindow height (in pixels).\fR\*(T>
.br
\fBborder_inner_margin\fR
\*(T<\fBWindowz inner border margin (in
pixels).\fR\*(T>
.br
\fBborder_outer_margin\fR
\*(T<\fBWindowz outa border margin (in
pixels).\fR\*(T>
.br
\fBborder_width\fR
\*(T<\fBWindowz border width (in
pixels).\fR\*(T>
.br
\fBtext_start_x\fR
\*(T<\fBDa x component of tha starting
coordinizzle of text drawing.\fR\*(T>
.br
\fBtext_start_y\fR
\*(T<\fBDa y component of tha starting
coordinizzle of text drawing.\fR\*(T>
.br
\fBtext_width\fR
\*(T<\fBDa width of tha text drawing
region.\fR\*(T>
.br
\fBtext_height\fR
\*(T<\fBDa height of tha text drawing
region.\fR\*(T>

NOTE: This table is only defined when X support
is enabled.
.TP 
\fB\*(T<\fBconky_info\fR\*(T> \fR\*(T<\fBtable\fR\*(T> 
This table gotz nuff some shiznit about
Conkyz internal data. Da followin table raps about
the joints contained:

\fBupdate_interval\fR
\*(T<\fBConkyz update interval (in
seconds).\fR\*(T>
.br
\fBuptime\fR
\*(T<\fBSystem uptime, up in seconds.\fR\*(T>
.TP 
\fB\*(T<\fBconky_build_info\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
A strang containin tha build info fo' this
particular instizzle of Conky, includin tha version,
build date, n' architecture.
.TP 
\fB\*(T<\fBconky_build_date\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
A strang containin tha build date fo' this
particular instizzle of Conky.
.TP 
\fB\*(T<\fBconky_build_arch\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
A strang containin tha build architecture for
this particular instizzle of Conky.
.TP 
\fB\*(T<\fBconky_version\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
A strang containin tha version of tha current
instizzle of Conky.
.TP 
\fB\*(T<\fBconky_config\fR\*(T> \fR\*(T<\fBstring\fR\*(T> 
A strang containin tha path of tha current Conky
configuration file.
.TP 
\fB\*(T<\fBcairo_text_extents_t:create()\fR\*(T> \fR\*(T<\fBfunction\fR\*(T> 
Call dis function ta return a freshly smoked up cairo_text_extents_t structure fo' realz. A creation function fo' dis structure aint provided by tha cairo API fo' realz. Afta callin this, you should use tolua.takeballership() on tha return value ta ensure ballershizzle is passed properly.
.TP 
\fB\*(T<\fBcairo_font_extents_t:create()\fR\*(T> \fR\*(T<\fBfunction\fR\*(T> 
Call dis function ta return a freshly smoked up cairo_font_extents_t structure fo' realz. A creation function fo' dis structure aint provided by tha cairo API fo' realz. Afta callin this, you should use tolua.takeballership() on tha return value ta ensure ballershizzle is passed properly.
.TP 
\fB\*(T<\fBcairo_matrix_t:create()\fR\*(T> \fR\*(T<\fBfunction\fR\*(T> 
Call dis function ta return a freshly smoked up cairo_matrix_t structure fo' realz. A creation function fo' dis structure aint provided by tha cairo API fo' realz. Afta callin this, you should use tolua.takeballership() on tha return value ta ensure ballershizzle is passed properly.
.SH EXAMPLES
.TP 
\*(T<conky\*(T> \*(T<\fB\-t '${time %D %H:%M}' \-o \-u 30\fR\*(T> 
Start Conky up in its own window wit date
and clock as text n' 30 sec update
interval.
.TP 
\*(T<conky\*(T> \*(T<\fB\-a top_left \-x 5 \-y 500 \-d\fR\*(T> 
Start Conky ta background at coordinates
(5, 500).
.TP 
\*(T<conky\*(T> \*(T<\fB\-C > ~/.conkyrc\fR\*(T> 
Do not start Conky yo, but have it output
the builtin default config file ta ~/.conkyrc for
lata customising.
.SH FILES
.TP 
\*(T<\fI${sysconfdir}/conky/conky.conf\fR\*(T> 
Default system-wide configuration file.
Da value of ${sysconfdir} dependz on the
compile-time options (most likely /etc).
.TP 
\*(T<\fI~/.conkyrc\fR\*(T> 
Default underground configuration
file.
.SH BUGS
Drawin ta root or some other desktop window directly
doesn't work wit all window managers. Especially don't
work well wit Gnome n' it has been reported dat it
doesn't work wit KDE either n' shit. Nautilus can be disabled from
drawin ta desktop wit program gconf-editor. Shiiit, dis aint no joke. Uncheck
show_desktop up in /apps/nautilus/preferences/. There is -w
switch up in Conky ta set some specific window id. Y'all KNOW dat shit, muthafucka! Yo ass might
find xwininfo -tree useful ta find tha window ta draw to.
Yo ass can also use -o argument which make Conky ta create
its own window. If you do try hustlin Conky up in its own
window, be shizzle ta read up on tha own_window_type settings
and experiment.
.SH "SEE ALSO"
\(lahttp://conky.sourceforge.net/\(ra
.PP
\(lahttp://www.sourceforge.net/projects/conky\(ra
.PP
\(lahttp://wiki.conky.be\(ra
.PP
#conky on irc.freenode.net
.SH COPYING
Copyright (c) 2005-2012 Brenden Matthews, Philip
Kovacs, et. al. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack fo' realz. Any original gangsta torsmo code is licensed under
the BSD license (see LICENSE.BSD fo' a cold-ass lil copy) fo' realz. All code
written since tha fork of torsmo is licensed under tha GPL
(see LICENSE.GPL fo' a cold-ass lil copy), except where noted
differently (like fuckin up in portmon code, timed thread code,
and audacious code which is LGPL, n' prss which be an
MIT-style license).
.SH AUTHORS
Da Conky dev crew (see AUTHORS fo' a gangbangin' full list of
contributors).
