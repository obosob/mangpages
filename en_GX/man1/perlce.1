.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLCE 1"
.TH PERLCE 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlce \- Perl fo' WinCE
.SH "Buildin Perl fo' WinCE"
.IX Header "Buildin Perl fo' WinCE"
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
This file gives tha instructions fo' buildin Perl5.8 n' above for
WinCE.  Please read n' KNOW tha terms under which this
software is distributed.
.SS "General explanations on cross-compilin WinCE"
.IX Subsection "General explanations on cross-compilin WinCE"
.IP "\(bu" 4
\&\fIminiperl\fR is built. This be a single executable (without \s-1DLL\s0), intended
to run on Win32, n' it will facilitate remainin build process; all binaries
built afta it is foreign n' should not run locally.
.Sp
\&\fIminiperl\fR is built rockin \fI./win32/Makefile\fR; dis is part of normal
build process invoked as dependency from wince/Makefile.ce
.IP "\(bu" 4
Afta \fIminiperl\fR is built, \fIconfigpm\fR is invoked ta create right \fIConfig.pm\fR
in right place n' its correspondin Cross.pm.
.Sp
Unlike Win32 build, miniperl aint gonna have \fIConfig.pm\fR of host within reach;
it rather will use \fIConfig.pm\fR from within cross-compilation directories.
.Sp
File \fICross.pm\fR is dead simple: fo' given cross-architecture places up in \f(CW@INC\fR
a path where perl modulez are, n' right \fIConfig.pm\fR up in dat place.
.Sp
That holla'd, \f(CW\*(C`miniperl \-Ilib \-MConfig \-we 1\*(C'\fR should report a error, cuz
it can not find \fIConfig.pm\fR. If it do not give a error \*(-- wack \fIConfig.pm\fR
is substituted, n' resultin binaries is ghon be a mess.
.Sp
\&\f(CW\*(C`miniperl \-MCross \-MConfig \-we 1\*(C'\fR should run aiiight, n' it will provide right
\&\fIConfig.pm\fR fo' further compilations.
.IP "\(bu" 4
Durin extensions build phase, a script \fI./win32/buldext.pl\fR is invoked,
which up in turn steps up in \fI./ext\fR subdirectories n' performs a funky-ass build of
each extension up in turn.
.Sp
All invokez of \fIMakefile.PL\fR is provided wit \f(CW\*(C`\-MCross\*(C'\fR so ta enable cross\-
compile.
.SS "\s-1BUILD\s0"
.IX Subsection "BUILD"
This section raps bout tha steps ta be performed ta build PerlCE.
Yo ass may find additionizzle shiznit bout buildin perl fo' WinCE
at <http://perlce.sourceforge.net> n' some pre-built binaries.
.PP
\fITools & \s-1SDK\s0\fR
.IX Subsection "Tools & SDK"
.PP
For compiling, you need following:
.IP "\(bu" 4
Microsizzlez Embedded Visual Tools
.IP "\(bu" 4
Microsizzlez Visual \*(C+
.IP "\(bu" 4
Rainer Keuchelz celib-sources
.IP "\(bu" 4
Rainer Keuchelz console-sources
.PP
Needed source filez can be downloaded at
<http://perlce.sourceforge.net>
.PP
\fIMake\fR
.IX Subsection "Make"
.PP
Normally you only need ta edit \fI./win32/ce\-helpers/compile.bat\fR
to reflect yo' system n' run dat shit.
.PP
File \fI./win32/ce\-helpers/compile.bat\fR is straight-up a wrapper ta call
\&\f(CW\*(C`nmake \-f makefile.ce\*(C'\fR wit appropriate parametas n' it accepts extra
parametas n' forwardz dem ta \f(CW\*(C`nmake\*(C'\fR command as additional
arguments, n' you can put dat on yo' toast. Yo ass should pass target dis way.
.PP
To prepare distribution you need ta do following:
.IP "\(bu" 4
go ta \fI./win32\fR subdirectory
.IP "\(bu" 4
edit file \fI./win32/ce\-helpers/compile.bat\fR
.IP "\(bu" 4
run 
  compile.bat
.IP "\(bu" 4
run 
  compile.bat dist
.PP
\&\fIMakefile.ce\fR has \f(CW\*(C`CROSS_NAME\*(C'\fR macro, n' it is used further ta refer to
your cross-compilation scheme. Yo ass could assign a name ta it yo, but this
is not necessary, cuz by default it be assigned afta yo' machine
configuration name, like fuckin \*(L"wince\-sh3\-hpc\-wce211\*(R", n' dis is enough
to distinguish different buildz all up in tha same time. This option could be
handy fo' nuff muthafuckin different buildz on same platform ta perform, say,
threaded build. Y'all KNOW dat shit, muthafucka! In a gangbangin' followin example we assume dat all required
environment variablez is set properly fo' C cross-compila (a special
*.bat file could fit perfectly ta dis purpose) n' yo' \fIcompile.bat\fR
has proper \*(L"\s-1MACHINE\*(R"\s0 parameta set, to, say, \f(CW\*(C`wince\-mips\-pocket\-wce300\*(C'\fR.
.PP
.Vb 4
\&  compile.bat
\&  compile.bat dist
\&  compile.bat CROSS_NAME=mips\-wce300\-thr "USE_ITHREADS=define" "USE_IMP_SYS=define" "USE_MULTI=define"
\&  compile.bat CROSS_NAME=mips\-wce300\-thr "USE_ITHREADS=define" "USE_IMP_SYS=define" "USE_MULTI=define" dist
.Ve
.PP
If all goes all gravy n' no errors durin a funky-ass build, you gonna git two independent
distributions: \f(CW\*(C`wince\-mips\-pocket\-wce300\*(C'\fR n' \f(CW\*(C`mips\-wce300\-thr\*(C'\fR.
.PP
Target \f(CW\*(C`dist\*(C'\fR prepares distribution file set. Target \f(CW\*(C`zipdist\*(C'\fR performs
same as \f(CW\*(C`dist\*(C'\fR but additionally compresses distribution filez tha fuck into zip
archive.
.PP
\&\s-1NOTE:\s0 durin a funky-ass build there could be pimped a number (or one) of \fIConfig.pm\fR
for cross-compilation (\*(L"foreign\*(R" \fIConfig.pm\fR) n' dem is hidden inside
\&\fI../xlib/$(\s-1CROSS_NAME\s0)\fR wit other auxiliary filez yo, but, n' dis is blingin to
note, there should be \fBno\fR \fIConfig.pm\fR fo' host miniperl.
If you gonna git a error dat perl could not find Config.pm somewhere up in building
process dis means suttin' went wrong. Most probably you forgot to
specify a cold-ass lil cross-compilation when invokin miniperl.exe ta Makefile.PL
When buildin a extension fo' cross-compilation yo' command line should
look like
.PP
.Vb 1
\&  ..\eminiperl.exe \-I..\elib \-MCross=mips\-wce300\-thr Makefile.PL
.Ve
.PP
or just
.PP
.Vb 1
\&  ..\eminiperl.exe \-I..\elib \-MCross Makefile.PL
.Ve
.PP
to refer a cold-ass lil cross-compilation dat was pimped last time.
.PP
All thangs related ta buildin fo' WinCE devices could be axed in
\&\fIperlce\-user@lists.sourceforge.net\fR mailin list.
.SH "Usin Perl on WinCE"
.IX Header "Usin Perl on WinCE"
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
PerlCE is currently linked wit a simple console window, so it also
works on non-hpc devices.
.PP
Da simple stdio implementation creates tha filez \fIstdin.txt\fR,
\&\fIstdout.txt\fR n' \fIstderr.txt\fR, so you might examine dem if your
console has only a limited number of cols.
.PP
When exitcode is non-zero, a message box appears, otherwise the
console closes, so you might gotta catch a exit with
status 0 up in yo' program ta peep any output.
.PP
stdout/stderr now go tha fuck into tha filez \fI/perl\-stdout.txt\fR and
\&\fI/perl\-stderr.txt.\fR
.PP
PerlIDE is handy ta deal wit perlce.
.SS "\s-1LIMITATIONS\s0"
.IX Subsection "LIMITATIONS"
No \fIfork()\fR, \fIpipe()\fR, \fIpopen()\fR etc.
.SS "\s-1ENVIRONMENT\s0"
.IX Subsection "ENVIRONMENT"
All environment vars must be stored up in HKLM\eEnvironment as
strings. They is read at process startup.
.IP "\s-1PERL5LIB\s0" 4
.IX Item "PERL5LIB"
Usual perl lib path (semi-list).
.IP "\s-1PATH\s0" 4
.IX Item "PATH"
Semi-list fo' executables.
.IP "\s-1TMP\s0" 4
.IX Item "TMP"
\&\- Tempdir.
.IP "\s-1UNIXROOTPATH\s0" 4
.IX Item "UNIXROOTPATH"
\&\- Root fo' accessin some special files, i.e. \fI/dev/null\fR, \fI/etc/skillz\fR.
.IP "\s-1ROWS/COLS\s0" 4
.IX Item "ROWS/COLS"
\&\- Rows/cols fo' console.
.IP "\s-1HOME\s0" 4
.IX Item "HOME"
\&\- Home directory.
.IP "\s-1CONSOLEFONTSIZE\s0" 4
.IX Item "CONSOLEFONTSIZE"
\&\- Size fo' console font.
.PP
Yo ass can set these wit cereg.exe, a (remote) registry editor
or via tha PerlIDE.
.SS "\s-1REGISTRY\s0"
.IX Subsection "REGISTRY"
To start perl by clickin on a perl source file, you have
to make tha accordin entries up in \s-1HKCR \s0(see \fIce\-helpers/wince\-reg.bat\fR).
cereg.exe (which must be executed on a thugged-out desktop pc with
ActiveSync) is reported not ta work on some devices.
Yo ass gotta create tha registry entries by hand rockin a 
registry editor.
.SS "\s-1XS\s0"
.IX Subsection "XS"
Da followin Win32\-Methodz is built-in:
.PP
.Vb 10
\&        newXS("Win32::GetCwd", w32_GetCwd, file);
\&        newXS("Win32::SetCwd", w32_SetCwd, file);
\&        newXS("Win32::GetTickCount", w32_GetTickCount, file);
\&        newXS("Win32::GetOSVersion", w32_GetOSVersion, file);
\&        newXS("Win32::IsWinNT", w32_IsWinNT, file);
\&        newXS("Win32::IsWin95", w32_IsWin95, file);
\&        newXS("Win32::IsWinCE", w32_IsWinCE, file);
\&        newXS("Win32::CopyFile", w32_CopyFile, file);
\&        newXS("Win32::Sleep", w32_Sleep, file);
\&        newXS("Win32::MessageBox", w32_MessageBox, file);
\&        newXS("Win32::GetPowerStatus", w32_GetPowerStatus, file);
\&        newXS("Win32::GetOemInfo", w32_GetOemInfo, file);
\&        newXS("Win32::ShellEx", w32_ShellEx, file);
.Ve
.SS "\s-1BUGS\s0"
.IX Subsection "BUGS"
Openin filez fo' read-write is currently not supported if
they use stdio (normal perl file handles).
.PP
If you find bugs or if it do not work at all on your
device, bust mail ta tha address below. Please report
the detailz of yo' thang (processor, ceversion, 
devicetype (hpc/palm/pocket)) n' tha date of tha downloaded
files.
.SS "\s-1INSTALLATION\s0"
.IX Subsection "INSTALLATION"
Currently installation instructions is at <http://perlce.sourceforge.net/>.
.PP
Afta installation & testin processes will stabilize, shiznit will
be mo' precise.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Da port fo' Win32 was used as a reference.
.SH "History of WinCE port"
.IX Header "History of WinCE port"
.IP "5.6.0" 4
.IX Item "5.6.0"
Initial port of perl ta WinCE. Dat shiznit was performed up in separate directory
named \fIwince\fR. This port was based on contentz of \fI./win32\fR directory.
\&\fIminiperl\fR was not built, user must have \s-1HOST\s0 perl n' properly edit
\&\fImakefile.ce\fR ta reflect all dis bullshit.
.IP "5.8.0" 4
.IX Item "5.8.0"
wince port was kept up in tha same \fI./wince\fR directory, n' \fIwince/Makefile.ce\fR
was used ta invoke natizzle compila ta create \s-1HOST\s0 miniperl, which then
facilitates cross-compilin process.
Extension buildin support was added.
.IP "5.9.4" 4
.IX Item "5.9.4"
Two directories \fI./win32\fR n' \fI./wince\fR was merged, so perlce build
process comes up in \fI./win32\fR directory.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "Rainer Keuchel <coyxc@rainer\-keuchel.de>" 4
.IX Item "Rainer Keuchel <coyxc@rainer-keuchel.de>"
provided initial port of Perl, which appears ta be most essential work, as
it was a funky-ass breakall up in on havin Perl ported at all.
Many props n' obligations ta Rainer!
.IP "Vadim Konovalov" 4
.IX Item "Vadim Konovalov"
made further support of WinCE port.
