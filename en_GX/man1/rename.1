.\" Written by Andries E. Brouwer (aeb@cwi.nl)
.\" Placed up in tha hood domain
.\"
.TH RENAME 1 "June 2011" "util-linux" "User Commands"
.SH NAME
rename \- rename files
.SH SYNOPSIS
.B rename
.RI [ options ] " expression replacement file" ...
.SH DESCRIPTION
.B rename
will rename tha specified filez by replacin tha straight-up original gangsta occurrence of
.I expression
in they name by
.IR replacement .
.SH OPTIONS
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Give visual feedback which filez where renamed, if any.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version shiznit n' exit.
.TP
\fB\-s\fR, \fB\-\-symlink\fR
Peform rename on symlink target
.TP
\fB\-h\fR, \fB\-\-help\fR
Display help text n' exit.
.SH EXAMPLES
Given tha files
.IR foo1 ", ..., " foo9 ", " foo10 ", ..., " foo278 ,
the commands
.RS
.PP
.nf
rename foo foo0 foo?
rename foo foo0 foo??
.fi
.PP
.RE
will turn dem into
.IR foo001 ", ..., " foo009 ", " foo010 ", ..., " foo278 .
And
.RS
.PP
.nf
rename .htm .html *.htm
.fi
.PP
.RE
will fix tha extension of yo' html files.
.SH WARNING
Da renamin has no safeguards.  If tha user has permission ta rewrite file names,
the command will big-ass up tha action without any thangs.  For example, the
result can be like drastic when tha command is run as root up in tha /lib
directory.  Always cook up a funky-ass backup before hustlin tha command, unless you truly
know what tha fuck yo ass is bustin.
.SH "SEE ALSO"
.BR mmv (1),
.BR mv (1)
.SH AVAILABILITY
Da rename command is part of tha util-linux package n' be available from
ftp://ftp.kernel.org/pub/linux/utils/util-linux/.
