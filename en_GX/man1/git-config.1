'\" t
.\"     Title: git-config
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-CONFIG" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-config \- Git n' set repository or global options
.SH "SYNOPSIS"
.sp
.nf
\fIgit config\fR [<file\-option>] [type] [\-z|\-\-null] name [value [value_regex]]
\fIgit config\fR [<file\-option>] [type] \-\-add name value
\fIgit config\fR [<file\-option>] [type] \-\-replace\-all name value [value_regex]
\fIgit config\fR [<file\-option>] [type] [\-z|\-\-null] \-\-get name [value_regex]
\fIgit config\fR [<file\-option>] [type] [\-z|\-\-null] \-\-get\-all name [value_regex]
\fIgit config\fR [<file\-option>] [type] [\-z|\-\-null] \-\-get\-regexp name_regex [value_regex]
\fIgit config\fR [<file\-option>] [type] [\-z|\-\-null] \-\-get\-urlmatch name URL
\fIgit config\fR [<file\-option>] \-\-unset name [value_regex]
\fIgit config\fR [<file\-option>] \-\-unset\-all name [value_regex]
\fIgit config\fR [<file\-option>] \-\-rename\-section old_name new_name
\fIgit config\fR [<file\-option>] \-\-remove\-section name
\fIgit config\fR [<file\-option>] [\-z|\-\-null] \-l | \-\-list
\fIgit config\fR [<file\-option>] \-\-get\-color name [default]
\fIgit config\fR [<file\-option>] \-\-get\-colorbool name [stdout\-is\-tty]
\fIgit config\fR [<file\-option>] \-e | \-\-edit
.fi
.sp
.SH "DESCRIPTION"
.sp
Yo ass can query/set/replace/unset options wit dis command\&. Da name is straight-up tha section n' tha key separated by a thugged-out dot, n' tha value is ghon be escaped\&.
.sp
Multiple lines can be added ta a option by rockin tha \fI\-\-add\fR option\&. If you wanna update or unset a option which can occur on multiple lines, a POSIX regexp value_regex need ta be given\&. Only tha existin joints dat match tha regexp is updated or unset\&. If you wanna handle tha lines dat do \fBnot\fR match tha regex, just prepend a single exclamation mark up in front (see also tha section called \(lqEXAMPLES\(rq)\&.
.sp
Da type specifier can be either \fI\-\-int\fR or \fI\-\-bool\fR, ta make \fIgit config\fR ensure dat tha variable(s) iz of tha given type n' convert tha value ta tha canonical form (simple decimal number fo' int, a "true" or "false" strang fo' bool), or \fI\-\-path\fR, which do some path expansion (see \fI\-\-path\fR below)\&. If no type specifier is passed, no checks or transformations is performed on tha value\&.
.sp
When reading, tha joints is read from tha system, global n' repository local configuration filez by default, n' options \fI\-\-system\fR, \fI\-\-global\fR, \fI\-\-local\fR n' \fI\-\-file <filename>\fR can be used ta tell tha command ta read from only dat location (see tha section called \(lqFILES\(rq)\&.
.sp
When writing, tha freshly smoked up value is freestyled ta tha repository local configuration file by default, n' options \fI\-\-system\fR, \fI\-\-global\fR, \fI\-\-file <filename>\fR can be used ta tell tha command ta write ta dat location (you can say \fI\-\-local\fR but dat is tha default)\&.
.sp
This command will fail wit non\-zero status upon error\&. Right back up in yo muthafuckin ass. Some exit codes are:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Da config file is invalid (ret=3),
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
can not write ta tha config file (ret=4),
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
no section or name was provided (ret=2),
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
the section or key is invalid (ret=1),
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
you try ta unset a option which do not exist (ret=5),
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
you try ta unset/set a option fo' which multiple lines match (ret=5), or
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}
you try ta use a invalid regexp (ret=6)\&.
.RE
.sp
On success, tha command returns tha exit code 0\&.
.SH "OPTIONS"
.PP
\-\-replace\-all
.RS 4
Default behavior is ta replace at most one line\&. This replaces all lines matchin tha key (and optionally tha value_regex)\&.
.RE
.PP
\-\-add
.RS 4
Addz a freshly smoked up line ta tha option without alterin any existin joints\&. This is tha same ol' dirty as providing
\fI^$\fR
as tha value_regex in
\-\-replace\-all\&.
.RE
.PP
\-\-get
.RS 4
Git tha value fo' a given key (optionally filtered by a regex matchin tha value)\&. Returns error code 1 if tha key was not found n' tha last value if multiple key joints was found\&.
.RE
.PP
\-\-get\-all
.RS 4
Like git yo, but do not fail if tha number of joints fo' tha key aint exactly one\&.
.RE
.PP
\-\-get\-regexp
.RS 4
Like \-\-get\-all yo, but interprets tha name as a regular expression n' writes up tha key names\&. Regular expression matchin is currently case\-sensitizzle n' done against a cold-ass lil canonicalized version of tha key up in which section n' variable names is lowercased yo, but subsection names is not\&.
.RE
.PP
\-\-get\-urlmatch name URL
.RS 4
When given a two\-part name section\&.key, tha value fo' section\&.<url>\&.key whose <url> part matches tha dopest ta tha given URL is returned (if no such key exists, tha value fo' section\&.key is used as a gangbangin' fallback)\&. When given just tha section as name, do so fo' all tha keys up in tha section n' list them\&.
.RE
.PP
\-\-global
.RS 4
For freestylin options: write ta global
~/\&.gitconfig
file rather than tha repository
\&.git/config, write to
$XDG_CONFIG_HOME/git/config
file if dis file exists n' the
~/\&.gitconfig
file don\(cqt\&.
.sp
For readin options: read only from global
~/\&.gitconfig
and from
$XDG_CONFIG_HOME/git/config
rather than from all available files\&.
.sp
See also
the section called \(lqFILES\(rq\&.
.RE
.PP
\-\-system
.RS 4
For freestylin options: write ta system\-wide
$(prefix)/etc/gitconfig
rather than tha repository
\&.git/config\&.
.sp
For readin options: read only from system\-wide
$(prefix)/etc/gitconfig
rather than from all available files\&.
.sp
See also
the section called \(lqFILES\(rq\&.
.RE
.PP
\-\-local
.RS 4
For freestylin options: write ta tha repository
\&.git/config
file\&. This is tha default behavior\&.
.sp
For readin options: read only from tha repository
\&.git/config
rather than from all available files\&.
.sp
See also
the section called \(lqFILES\(rq\&.
.RE
.PP
\-f config\-file, \-\-file config\-file
.RS 4
Use tha given config file instead of tha one specified by GIT_CONFIG\&.
.RE
.PP
\-\-blob blob
.RS 4
Similar to
\fI\-\-file\fR
but use tha given blob instead of a gangbangin' file\&. E\&.g\&. you can use
\fImaster:\&.gitmodules\fR
to read joints from tha file
\fI\&.gitmodules\fR
in tha masta branch\&. Right back up in yo muthafuckin ass. See "SPECIFYING REVISIONS" section in
\fBgitrevisions\fR(7)
for a mo' complete list of ways ta spell blob names\&.
.RE
.PP
\-\-remove\-section
.RS 4
Remove tha given section from tha configuration file\&.
.RE
.PP
\-\-rename\-section
.RS 4
Rename tha given section ta a freshly smoked up name\&.
.RE
.PP
\-\-unset
.RS 4
Remove tha line matchin tha key from config file\&.
.RE
.PP
\-\-unset\-all
.RS 4
Remove all lines matchin tha key from config file\&.
.RE
.PP
\-l, \-\-list
.RS 4
List all variablez set up in config file\&.
.RE
.PP
\-\-bool
.RS 4
\fIgit config\fR
will ensure dat tha output is "true" or "false"
.RE
.PP
\-\-int
.RS 4
\fIgit config\fR
will ensure dat tha output be a simple decimal number\& fo' realz. An optionizzle value suffix of
\fIk\fR,
\fIm\fR, or
\fIg\fR
in tha config file will cause tha value ta be multiplied by 1024, 1048576, or 1073741824 prior ta output\&.
.RE
.PP
\-\-bool\-or\-int
.RS 4
\fIgit config\fR
will ensure dat tha output matches tha format of either \-\-bool or \-\-int, as busted lyrics bout above\&.
.RE
.PP
\-\-path
.RS 4
\fIgit\-config\fR
will expand leading
\fI~\fR
to tha value of
\fI$HOME\fR, and
\fI~user\fR
to tha home directory fo' tha specified user\&. This option has no effect when settin tha value (but you can use
\fIgit config bla ~/\fR
from tha command line ta let yo' shell do tha expansion)\&.
.RE
.PP
\-z, \-\-null
.RS 4
For all options dat output joints and/or keys, always end joints wit tha null characta (instead of a newline)\&. Use newline instead as a thugged-out delimita between key n' value\&. This allows fo' secure parsin of tha output without gettin trippin e\&.g\&. by joints dat contain line breaks\&.
.RE
.PP
\-\-get\-colorbool name [stdout\-is\-tty]
.RS 4
Find tha color settin for
name
(e\&.g\&.
color\&.diff) n' output "true" or "false"\&.
stdout\-is\-tty
should be either "true" or "false", n' is taken tha fuck into account when configuration say "auto"\&. If
stdout\-is\-tty
is missing, then checks tha standard output of tha command itself, n' exits wit status 0 if color is ta be used, or exits wit status 1 otherwise\&. When tha color settin for
name
is undefined, tha command uses
color\&.ui
as fallback\&.
.RE
.PP
\-\-get\-color name [default]
.RS 4
Find tha color configured for
name
(e\&.g\&.
color\&.diff\&.new) n' output it as tha ANSI color escape sequence ta tha standard output\&. Da optional
default
parameta is used instead, if there is no color configured for
name\&.
.RE
.PP
\-e, \-\-edit
.RS 4
Opens a editor ta modify tha specified config file; either
\fI\-\-system\fR,
\fI\-\-global\fR, or repository (default)\&.
.RE
.PP
\-\-[no\-]includes
.RS 4
Respect
include\&.*
directives up in config filez when lookin up joints\&. Defaults ta on\&.
.RE
.SH "FILES"
.sp
If not set explicitly wit \fI\-\-file\fR, there be four filez where \fIgit config\fR will search fo' configuration options:
.PP
$(prefix)/etc/gitconfig
.RS 4
System\-wide configuration file\&.
.RE
.PP
$XDG_CONFIG_HOME/git/config
.RS 4
Second user\-specific configuration file\&. If $XDG_CONFIG_HOME aint set or empty,
$HOME/\&.config/git/config
will be used\& fo' realz. Any single\-valued variable set up in dis file is ghon be overwritten by whatever is in
~/\&.gitconfig\&. Well shiiiit, it aint nuthin but a phat scam not ta create dis file if you sometimes use olda versionz of Git, as support fo' dis file was added fairly recently\&.
.RE
.PP
~/\&.gitconfig
.RS 4
User\-specific configuration file\& fo' realz. Also called "global" configuration file\&.
.RE
.PP
$GIT_DIR/config
.RS 4
Repository specific configuration file\&.
.RE
.sp
If no further options is given, all readin options will read all of these filez dat is available\&. If tha global or tha system\-wide configuration file is not available they is ghon be ignored\&. If tha repository configuration file aint available or readable, \fIgit config\fR will exit wit a non\-zero error code\&. But fuck dat shiznit yo, tha word on tha street is dat up in neither case will a error message be issued\&.
.sp
Da filez is read up in tha order given above, wit last value found takin precedence over joints read earlier\&. When multiple joints is taken then all jointz of a key from all filez is ghon be used\&.
.sp
All freestylin options will per default write ta tha repository specific configuration file\&. Note dat dis also affects options like \fI\-\-replace\-all\fR n' \fI\-\-unset\fR\&. \fB\fIgit config\fR\fR\fB will only eva chizzle one file at a time\fR\&.
.sp
Yo ass can override these rulez either by command line options or by environment variables\&. Da \fI\-\-global\fR n' tha \fI\-\-system\fR options will limit tha file used ta tha global or system\-wide file respectively\&. Da GIT_CONFIG environment variable has a similar effect yo, but you can specify any filename you want\&.
.SH "ENVIRONMENT"
.PP
GIT_CONFIG
.RS 4
Take tha configuration from tha given file instead of \&.git/config\&. Usin tha "\-\-global" option forces dis ta ~/\&.gitconfig\&. Usin tha "\-\-system" option forces dis ta $(prefix)/etc/gitconfig\&.
.RE
.PP
GIT_CONFIG_NOSYSTEM
.RS 4
Whether ta skip readin settings from tha system\-wide $(prefix)/etc/gitconfig file\&. Right back up in yo muthafuckin ass. See
\fBgit\fR(1)
for details\&.
.RE
.sp
See also tha section called \(lqFILES\(rq\&.
.SH "EXAMPLES"
.sp
Given a \&.git/config like this:
.sp
.if n \{\
.RS 4
.\}
.nf
#
# This is tha config file, and
# a \(aq#\(aq or \(aq;\(aq characta indicates
# a cold-ass lil comment
#
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
; core variables
[core]
        ; Don\(aqt trust file modes
        filemode = false
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
; Our diff algorithm
[diff]
        external = /usr/local/bin/diff\-wrapper
        renames = true
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
; Proxy settings
[core]
        gitproxy=proxy\-command fo' kernel\&.org
        gitproxy=default\-proxy ; fo' all tha rest
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
; HTTP
[http]
        sslVerify
[http "https://weak\&.example\&.com"]
        sslVerify = false
        cookieFile = /tmp/cookie\&.txt
.fi
.if n \{\
.RE
.\}
.sp
you can set tha filemode ta legit with
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.filemode true
.fi
.if n \{\
.RE
.\}
.sp
.sp
Da hypothetical proxy command entries straight-up gotz a postfix ta discern what tha fuck URL they apply to\& yo. Here is how tha fuck ta chizzle tha entry fo' kernel\&.org ta "ssh"\&.
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.gitproxy \(aq"ssh" fo' kernel\&.org\(aq \(aqfor kernel\&.org$\(aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
This make shizzle dat only tha key/value pair fo' kernel\&.org is replaced\&.
.sp
To delete tha entry fo' renames, do
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-unset diff\&.renames
.fi
.if n \{\
.RE
.\}
.sp
.sp
If you wanna delete a entry fo' a multivar (like core\&.gitproxy above), you gotta provide a regex matchin tha value of exactly one line\&.
.sp
To query tha value fo' a given key, do
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get core\&.filemode
.fi
.if n \{\
.RE
.\}
.sp
.sp
or
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.filemode
.fi
.if n \{\
.RE
.\}
.sp
.sp
or, ta query a multivar:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get core\&.gitproxy "for kernel\&.org$"
.fi
.if n \{\
.RE
.\}
.sp
.sp
If you wanna know all tha joints fo' a multivar, do:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get\-all core\&.gitproxy
.fi
.if n \{\
.RE
.\}
.sp
.sp
If you like ta live dangerously, you can replace \fBall\fR core\&.gitproxy by a freshly smoked up one with
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-replace\-all core\&.gitproxy ssh
.fi
.if n \{\
.RE
.\}
.sp
.sp
But fuck dat shiznit yo, tha word on tha street is dat if you straight-up only wanna replace tha line fo' tha default proxy, i\&.e\&. tha one without a "for \&..." postfix, do suttin' like this:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.gitproxy ssh \(aq! fo' \(aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
To straight-up match only joints wit a exclamation mark, you have to
.sp
.if n \{\
.RS 4
.\}
.nf
% git config section\&.key value \(aq[!]\(aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
To add a freshly smoked up proxy, without alterin any of tha existin ones, use
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-add core\&.gitproxy \(aq"proxy\-command" fo' example\&.com\(aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
An example ta use customized color from tha configuration up in yo' script:
.sp
.if n \{\
.RS 4
.\}
.nf
#!/bin/sh
WS=$(git config \-\-get\-color color\&.diff\&.whitespace "blue reverse")
RESET=$(git config \-\-get\-color "" "reset")
echo "${WS}your whitespace color or blue reverse${RESET}"
.fi
.if n \{\
.RE
.\}
.sp
.sp
For URLs up in https://weak\&.example\&.com, http\&.sslVerify is set ta false, while it is set ta legit fo' all others:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-bool \-\-get\-urlmatch http\&.sslverify https://good\&.example\&.com
true
% git config \-\-bool \-\-get\-urlmatch http\&.sslverify https://weak\&.example\&.com
false
% git config \-\-get\-urlmatch http https://weak\&.example\&.com
http\&.cookiefile /tmp/cookie\&.txt
http\&.sslverify false
.fi
.if n \{\
.RE
.\}
.sp
.SH "CONFIGURATION FILE"
.sp
Da Git configuration file gotz nuff a fuckin shitload of variablez dat affect tha Git commands\(aq behavior\&. Da \&.git/config file up in each repository is used ta store tha configuration fo' dat repository, n' $HOME/\&.gitconfig is used ta store a per\-user configuration as fallback joints fo' tha \&.git/config file\&. Da file /etc/gitconfig can be used ta store a system\-wide default configuration\&.
.sp
Da configuration variablez is used by both tha Git plumbin n' tha porcelains\&. Da variablez is divided tha fuck into sections, wherein tha straight-up qualified variable name of tha variable itself is tha last dot\-separated segment n' tha section name is every last muthafuckin thang before tha last dot\&. Da variable names is case\-insensitive, allow only alphanumeric charactas n' \-, n' must start wit a alphabetic character\&. Right back up in yo muthafuckin ass. Some variablez may step tha fuck up multiple times\&.
.SS "Syntax"
.sp
Da syntax is fairly flexible n' permissive; whitespaces is mostly ignored\&. Da \fI#\fR n' \fI;\fR charactas begin comments ta tha end of line, blank lines is ignored\&.
.sp
Da file consistz of sections n' variables\& fo' realz. A section begins wit tha name of tha section up in square brackets n' continues until tha next section begins\&. Right back up in yo muthafuckin ass. Section names is not case sensitive\&. Only alphanumeric characters, \- n' \&. is allowed up in section names\&. Each variable must belong ta some section, which means dat there must be a section header before tha straight-up original gangsta settin of a variable\&.
.sp
Sections can be further divided tha fuck into subsections\&. To begin a subsection put its name up in double quotes, separated by space from tha section name, up in tha section header, like up in tha example below:
.sp
.if n \{\
.RS 4
.\}
.nf
        [section "subsection"]
.fi
.if n \{\
.RE
.\}
.sp
.sp
Subsection names is case sensitizzle n' can contain any charactas except newline (doublequote " n' backslash gotta be escaped as \e" n' \e\e, respectively)\&. Right back up in yo muthafuckin ass. Section headaz cannot span multiple lines\&. Variablez may belong directly ta a section or ta a given subsection\&. Yo ass can have [section] if you have [section "subsection"] yo, but you don\(cqt need to\&.
.sp
There be also a thugged-out deprecated [section\&.subsection] syntax\&. With dis syntax, tha subsection name is converted ta lower\-case n' be also compared case sensitively\&. These subsection names follow tha same restrictions as section names\&.
.sp
All tha other lines (and tha remainder of tha line afta tha section header) is recognized as settin variables, up in tha form \fIname = value\fR\&. If there is no equal sign on tha line, tha entire line is taken as \fIname\fR n' tha variable is recognized as boolean "true"\&. Da variable names is case\-insensitive, allow only alphanumeric charactas n' \-, n' must start wit a alphabetic character\&. There can be mo' than one value fo' a given variable; we say then dat tha variable is multivalued\&.
.sp
Leadin n' trailin whitespace up in a variable value is discarded\&. Internal whitespace within a variable value is retained verbatim\&.
.sp
Da joints followin tha equals sign up in variable assign is all either a string, a integer, or a funky-ass boolean\&. Boolean joints may be given as yes/no, 1/0, true/false or on/off\&. Case aint dope up in boolean joints, when convertin value ta tha canonical form rockin \fI\-\-bool\fR type specifier; \fIgit config\fR will ensure dat tha output is "true" or "false"\&.
.sp
Strin joints may be entirely or partially enclosed up in double quotes\&. Yo ass need ta enclose variable joints up in double quotes if you wanna preserve leadin or trailin whitespace, or if tha variable value gotz nuff comment charactas (i\&.e\&. it gotz nuff \fI#\fR or \fI;\fR)\&. Double quote " n' backslash \e charactas up in variable joints must be escaped: use \e" fo' " n' \e\e fo' \e\&.
.sp
Da followin escape sequences (beside \e" n' \e\e) is recognized: \en fo' newline characta (NL), \et fo' horizontal tabulation (HT, TAB) n' \eb fo' backspace (BS)\&. Other char escape sequences (includin octal escape sequences) is invalid\&.
.sp
Variable joints endin up in a \e is continued on tha next line up in tha customary UNIX fashion\&.
.sp
Some variablez may require a special value format\&.
.SS "Includes"
.sp
Yo ass can include one config file from another by settin tha special include\&.path variable ta tha name of tha file ta be included\&. Da included file is expanded immediately, as if its contents had been found all up in tha location of tha include directive\&. If tha value of tha include\&.path variable be a relatizzle path, tha path is considered ta be relatizzle ta tha configuration file up in which tha include directizzle was found\&. Da value of include\&.path is subject ta tilde expansion: ~/ is expanded ta tha value of $HOME, n' ~user/ ta tha specified user\(cqs home directory\&. Right back up in yo muthafuckin ass. See below fo' examples\&.
.SS "Example"
.sp
.if n \{\
.RS 4
.\}
.nf
# Core variables
[core]
        ; Don\(aqt trust file modes
        filemode = false
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# Our diff algorithm
[diff]
        external = /usr/local/bin/diff\-wrapper
        renames = true
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
[branch "devel"]
        remote = origin
        merge = refs/heads/devel
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
# Proxy settings
[core]
        gitProxy="ssh" fo' "kernel\&.org"
        gitProxy=default\-proxy ; fo' tha rest
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
[include]
        path = /path/to/foo\&.inc ; include by absolute path
        path = foo ; expand "foo" relatizzle ta tha current file
        path = ~/foo ; expand "foo" up in yo' $HOME directory
.fi
.if n \{\
.RE
.\}
.SS "Variables"
.sp
Note dat dis list is non\-comprehensive n' not necessarily complete\&. For command\-specific variables, yo big-ass booty is ghon find a mo' detailed description up in tha appropriate manual page\&. Yo ass will find a thugged-out description of non\-core porcelain configuration variablez up in tha respectizzle porcelain documentation\&.
.PP
advice\&.*
.RS 4
These variablez control various optionizzle help lyrics designed ta aid freshly smoked up users\& fo' realz. All
\fIadvice\&.*\fR
variablez default to
\fItrue\fR, n' you can tell Git dat you do not need help by settin these to
\fIfalse\fR:
.PP
pushUpdateRejected
.RS 4
Set dis variable to
\fIfalse\fR
if you wanna disable
\fIpushNonFFCurrent\fR,
\fIpushNonFFDefault\fR,
\fIpushNonFFMatching\fR,
\fIpushAlreadyExists\fR,
\fIpushFetchFirst\fR, and
\fIpushNeedsForce\fR
simultaneously\&.
.RE
.PP
pushNonFFCurrent
.RS 4
Real shiznit shown when
\fBgit-push\fR(1)
fails cuz of a non\-fast\-forward update ta tha current branch\&.
.RE
.PP
pushNonFFDefault
.RS 4
Real shiznit ta set
\fIpush\&.default\fR
to
\fIupstream\fR
or
\fIcurrent\fR
when you ran
\fBgit-push\fR(1)
and pushed
\fImatchin refs\fR
by default (i\&.e\&. you did not provide a explicit refspec, n' no
\fIpush\&.default\fR
configuration was set) n' it resulted up in a non\-fast\-forward error\&.
.RE
.PP
pushNonFFMatching
.RS 4
Real shiznit shown when you ran
\fBgit-push\fR(1)
and pushed
\fImatchin refs\fR
explicitly (i\&.e\&. you used
\fI:\fR, or specified a refspec dat isn\(cqt yo' current branch) n' it resulted up in a non\-fast\-forward error\&.
.RE
.PP
pushAlreadyExists
.RS 4
Shown when
\fBgit-push\fR(1)
rejects a update dat do not qualify fo' fast\-forwardin (e\&.g\&., a tag\&.)
.RE
.PP
pushFetchFirst
.RS 4
Shown when
\fBgit-push\fR(1)
rejects a update dat tries ta overwrite a remote ref dat points at a object our phat asses do not have\&.
.RE
.PP
pushNeedsForce
.RS 4
Shown when
\fBgit-push\fR(1)
rejects a update dat tries ta overwrite a remote ref dat points at a object dat aint a cold-ass lil commit\-ish, or make tha remote ref point at a object dat aint a cold-ass lil commit\-ish\&.
.RE
.PP
statusHints
.RS 4
Show directions on how tha fuck ta proceed from tha current state up in tha output of
\fBgit-status\fR(1), up in tha template shown when freestylin commit lyrics in
\fBgit-commit\fR(1), n' up in tha help message shown by
\fBgit-checkout\fR(1)
when switchin branch\&.
.RE
.PP
statusUoption
.RS 4
Advise ta consider rockin the
\-u
option to
\fBgit-status\fR(1)
when tha command takes mo' than 2 secondz ta enumerate untracked files\&.
.RE
.PP
commitBeforeMerge
.RS 4
Real shiznit shown when
\fBgit-merge\fR(1)
refuses ta merge ta avoid overwritin local chizzles\&.
.RE
.PP
resolveConflict
.RS 4
Real shiznit shown by various commandz when conflicts prevent tha operation from bein performed\&.
.RE
.PP
implicitIdentity
.RS 4
Real shiznit on how tha fuck ta set yo' identitizzle configuration when yo' shiznit is guessed from tha system username n' domain name\&.
.RE
.PP
detachedHead
.RS 4
Real shiznit shown when you used
\fBgit-checkout\fR(1)
to move ta tha detach HEAD state, ta instruct how tha fuck ta create a local branch afta tha fact\&.
.RE
.PP
amWorkDir
.RS 4
Real shiznit dat shows tha location of tha patch file when
\fBgit-am\fR(1)
fails ta apply it\&.
.RE
.PP
rmHints
.RS 4
In case of failure up in tha output of
\fBgit-rm\fR(1), show directions on how tha fuck ta proceed from tha current state\&.
.RE
.RE
.PP
core\&.fileMode
.RS 4
If false, tha executable bit differences between tha index n' tha hustlin tree is ignored; useful on fucked up filesystems like FAT\&. Right back up in yo muthafuckin ass. See
\fBgit-update-index\fR(1)\&.
.sp
Da default is true, except
\fBgit-clone\fR(1)
or
\fBgit-init\fR(1)
will probe n' set core\&.fileMode false if appropriate when tha repository is pimped\&.
.RE
.PP
core\&.ignorecase
.RS 4
If true, dis option enablez various workaroundz ta enable Git ta work betta on filesystems dat is not case sensitive, like FAT\&. For example, if a gangbangin' finger-lickin' directory listin findz "makefile" when Git expects "Makefile", Git will assume it is straight-up tha same file, n' continue ta remember it as "Makefile"\&.
.sp
Da default is false, except
\fBgit-clone\fR(1)
or
\fBgit-init\fR(1)
will probe n' set core\&.ignorecase legit if appropriate when tha repository is pimped\&.
.RE
.PP
core\&.precomposeunicode
.RS 4
This option is only used by Mac OS implementation of Git\&. When core\&.precomposeunicode=true, Git reverts tha unicode decomposizzle of filenames done by Mac OS\&. This is useful when pluggin a repository between Mac OS n' Linux or Windows\&. (Git fo' Windows 1\&.7\&.10 or higher is needed, or Git under cygwin 1\&.7)\&. When false, file names is handled straight-up transparent by Git, which is backward compatible wit olda versionz of Git\&.
.RE
.PP
core\&.trustctime
.RS 4
If false, tha ctime differences between tha index n' tha hustlin tree is ignored; useful when tha inode chizzle time is regularly modified by suttin' outside Git (file system crawlaz n' some backup systems)\&. Right back up in yo muthafuckin ass. See
\fBgit-update-index\fR(1)\&. True by default\&.
.RE
.PP
core\&.checkstat
.RS 4
Determines which stat fieldz ta match between tha index n' work tree\&. Da user can set dis to
\fIdefault\fR
or
\fIminimal\fR\&. Default (or explicitly
\fIdefault\fR), is ta check all fields, includin tha sub\-second part of mtime n' ctime\&.
.RE
.PP
core\&.quotepath
.RS 4
Da commandz dat output paths (e\&.g\&.
\fIls\-files\fR,
\fIdiff\fR), when not given the
\-z
option, will quote "unusual" charactas up in tha pathname by enclosin tha pathname up in a thugged-out double\-quote pair n' wit backslashes tha same ol' dirty way strings up in C source code is quoted\&. If dis variable is set ta false, tha bytes higher than 0x80 is not quoted but output as verbatim\&. Note dat double quote, backslash n' control charactas is always quoted without
\-z
regardless of tha settin of dis variable\&.
.RE
.PP
core\&.eol
.RS 4
Sets tha line endin type ta use up in tha hustlin directory fo' filez dat have the
text
property set\& fo' realz. Alternatives are
\fIlf\fR,
\fIcrlf\fR
and
\fInative\fR, which uses tha platform\(cqs natizzle line ending\&. Da default value is
native\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for mo' shiznit on end\-of\-line conversion\&.
.RE
.PP
core\&.safecrlf
.RS 4
If true, make Git check if converting
CRLF
is reversible when end\-of\-line conversion be active\&. Git will verify if a cold-ass lil command modifies a gangbangin' file up in tha work tree either directly or indirectly\&. For example, committin a gangbangin' file followed by checkin up tha same file should yield tha original gangsta file up in tha work tree\&. If dis aint tha case fo' tha current settin of
core\&.autocrlf, Git will reject tha file\&. Da variable can be set ta "warn", up in which case Git will only warn bout a irreversible conversion but continue tha operation\&.
.sp
CRLF conversion bears a slight chizzle of corruptin data\&. When it is enabled, Git will convert CRLF ta LF durin commit n' LF ta CRLF durin checkout\& fo' realz. A file dat gotz nuff a mixture of LF n' CRLF before tha commit cannot be recreated by Git\&. For text filez dis is tha right thang ta do: it erects line endings such dat our crazy asses have only LF line endings up in tha repository\&. But fo' binary filez dat is accidentally classified as text tha conversion can corrupt data\&.
.sp
If you recognize such corruption early you can easily fix it by settin tha conversion type explicitly up in \&.gitattributes\&. Right afta committin you still have tha original gangsta file up in yo' work tree n' dis file aint yet corrupted\&. Yo ass can explicitly tell Git dat dis file is binary n' Git will handle tha file appropriately\&.
.sp
Unfortunately, tha desired effect of cleanin up text filez wit mixed line endings n' tha undesired effect of corruptin binary filez cannot be distinguished\&. In both cases CRLFs is removed up in a irreversible way\&. For text filez dis is tha right thang ta do cuz CRLFs is line endings, while fo' binary filez convertin CRLFs corrupts data\&.
.sp
Note, dis safety check do not mean dat a cold-ass lil checkout will generate a gangbangin' file identical ta tha original gangsta file fo' a gangbangin' finger-lickin' different settin of
core\&.eol
and
core\&.autocrlf yo, but only fo' tha current one\&. For example, a text file with
LF
would be accepted with
core\&.eol=lf
and could lata be checked up with
core\&.eol=crlf, up in which case tha resultin file would contain
CRLF, although tha original gangsta file contained
LF\&. But fuck dat shiznit yo, tha word on tha street is dat up in both work trees tha line endings would be consistent, dat is either all
LF
or all
CRLF yo, but never mixed\& fo' realz. A file wit mixed line endings would be reported by the
core\&.safecrlf
mechanism\&.
.RE
.PP
core\&.autocrlf
.RS 4
Settin dis variable ta "true" be almost tha same as settin the
text
attribute ta "auto" on all filez except dat text filez is not guaranteed ta be normalized: filez dat contain
CRLF
in tha repository aint gonna be touched\&. Use dis settin if you wanna have
CRLF
line endings up in yo' hustlin directory even though tha repository aint gots normalized line endings\&. This variable can be set to
\fIinput\fR, up in which case no output conversion is performed\&.
.RE
.PP
core\&.symlinks
.RS 4
If false, symbolic links is checked up as lil' small-ass plain filez dat contain tha link text\&.
\fBgit-update-index\fR(1)
and
\fBgit-add\fR(1)
will not chizzle tha recorded type ta regular file\&. Useful on filesystems like FAT dat do not support symbolic links\&.
.sp
Da default is true, except
\fBgit-clone\fR(1)
or
\fBgit-init\fR(1)
will probe n' set core\&.symlinks false if appropriate when tha repository is pimped\&.
.RE
.PP
core\&.gitProxy
.RS 4
A "proxy command" ta execute (as
\fIcommand host port\fR) instead of establishin direct connection ta tha remote server when rockin tha Git protocol fo' fetching\&. If tha variable value is up in tha "COMMAND fo' DOMAIN" format, tha command be applied only on hostnames endin wit tha specified domain string\&. This variable may be set multiple times n' is matched up in tha given order; tha straight-up original gangsta match wins\&.
.sp
Can be overridden by the
\fIGIT_PROXY_COMMAND\fR
environment variable (which always applies universally, without tha special "for" handling)\&.
.sp
Da special string
none
can be used as tha proxy command ta specify dat no proxy be used fo' a given domain pattern\&. This is useful fo' excludin servers inside a gangbangin' firewall from proxy use, while defaultin ta a cold-ass lil common proxy fo' external domains\&.
.RE
.PP
core\&.ignoreStat
.RS 4
If true, commandz which modify both tha hustlin tree n' tha index will mark tha updated paths wit tha "assume unchanged" bit up in tha index\&. These marked filez is then assumed ta stay unchanged up in tha hustlin tree, until you mark dem otherwise manually \- Git aint gonna detect tha file chizzlez by lstat() calls\&. This is useful on systems where dem is straight-up slow, like fuckin Microsizzlez Windows\&. Right back up in yo muthafuckin ass. See
\fBgit-update-index\fR(1)\&. False by default\&.
.RE
.PP
core\&.preferSymlinkRefs
.RS 4
Instead of tha default "symref" format fo' HEAD n' other symbolic reference files, use symbolic links\&. This is sometimes needed ta work wit oldschool scripts dat expect HEAD ta be a symbolic link\&.
.RE
.PP
core\&.bare
.RS 4
If legit dis repository be assumed ta be
\fIbare\fR
and has no hustlin directory associated wit it\&. If dis is tha case a fuckin shitload of commandz dat require a hustlin directory is ghon be disabled, such as
\fBgit-add\fR(1)
or
\fBgit-merge\fR(1)\&.
.sp
This settin be automatically guessed by
\fBgit-clone\fR(1)
or
\fBgit-init\fR(1)
when tha repository was pimped\&. By default a repository dat endz up in "/\&.git" be assumed ta be not bare (bare = false), while all other repositories is assumed ta be bare (bare = true)\&.
.RE
.PP
core\&.worktree
.RS 4
Set tha path ta tha root of tha hustlin tree\&. This can be overridden by tha GIT_WORK_TREE environment variable n' the
\fI\-\-work\-tree\fR
command line option\&. Da value can be a absolute path or relatizzle ta tha path ta tha \&.git directory, which is either specified by \-\-git\-dir or GIT_DIR, or automatically discovered\&. If \-\-git\-dir or GIT_DIR is specified but none of \-\-work\-tree, GIT_WORK_TREE n' core\&.worktree is specified, tha current hustlin directory is regarded as tha top level of yo' hustlin tree\&.
.sp
Note dat dis variable is honored even when set up in a cold-ass lil configuration file up in a "\&.git" subdirectory of a gangbangin' finger-lickin' directory n' its value differs from tha latta directory (e\&.g\&. "/path/to/\&.git/config" has core\&.worktree set ta "/different/path"), which is most likely a misconfiguration\&. Hustlin Git commandz up in tha "/path/to" directory will still use "/different/path" as tha root of tha work tree n' can cause mad drama unless you know what tha fuck yo ass is bustin (e\&.g\&. yo ass is bustin a read\-only snapshot of tha same index ta a location different from tha repository\(cqs usual hustlin tree)\&.
.RE
.PP
core\&.logAllRefUpdates
.RS 4
Enable tha reflog\&. Updates ta a ref <ref> is logged ta tha file "$GIT_DIR/logs/<ref>", by appendin tha freshly smoked up n' oldschool SHA\-1, tha date/time n' tha reason of tha update yo, but only when tha file exists\&. If dis configuration variable is set ta true, missin "$GIT_DIR/logs/<ref>" file be automatically pimped fo' branch headz (i\&.e\&. under refs/heads/), remote refs (i\&.e\&. under refs/remotes/), note refs (i\&.e\&. under refs/notes/), n' tha symbolic ref HEAD\&.
.sp
This shiznit can be used ta determine what tha fuck commit was tha tip of a funky-ass branch "2 minutes ago"\&.
.sp
This value is legit by default up in a repository dat has a hustlin directory associated wit it, n' false by default up in a funky-ass bare repository\&.
.RE
.PP
core\&.repositoryFormatVersion
.RS 4
Internal variable identifyin tha repository format n' layout version\&.
.RE
.PP
core\&.sharedRepository
.RS 4
When
\fIgroup\fR
(or
\fItrue\fR), tha repository is made shareable between nuff muthafuckin playas up in a crew (makin shizzle all tha filez n' objects is group\-writable)\&. When
\fIall\fR
(or
\fIworld\fR
or
\fIeverybody\fR), tha repository is ghon be readable by all users, additionally ta bein group\-shareable\&. When
\fIumask\fR
(or
\fIfalse\fR), Git will use permissions reported by umask(2)\&. When
\fI0xxx\fR, where
\fI0xxx\fR
is a octal number, filez up in tha repository gonna git dis mode value\&.
\fI0xxx\fR
will override user\(cqs umask value (whereas tha other options will only override axed partz of tha user\(cqs umask value)\&. Examples:
\fI0660\fR
will make tha repo read/write\-able fo' tha balla n' crew yo, but inaccessible ta others (equivalent to
\fIgroup\fR
unless umask is e\&.g\&.
\fI0022\fR)\&.
\fI0640\fR
is a repository dat is group\-readable but not group\-writable\&. Right back up in yo muthafuckin ass. See
\fBgit-init\fR(1)\&. False by default\&.
.RE
.PP
core\&.warnAmbiguousRefs
.RS 4
If true, Git will warn you if tha ref name you passed it be ambiguous n' might match multiple refs up in tha repository\&. True by default\&.
.RE
.PP
core\&.compression
.RS 4
An integer \-1\&.\&.9, indicatin a thugged-out default compression level\&. \-1 is tha zlib default\&. 0 means no compression, n' 1\&.\&.9 is various speed/size tradeoffs, 9 bein slowest\&. If set, dis serves up a thugged-out default ta other compression variables, such as
\fIcore\&.loosecompression\fR
and
\fIpack\&.compression\fR\&.
.RE
.PP
core\&.loosecompression
.RS 4
An integer \-1\&.\&.9, indicatin tha compression level fo' objects dat is not up in a pack file\&. \-1 is tha zlib default\&. 0 means no compression, n' 1\&.\&.9 is various speed/size tradeoffs, 9 bein slowest\&. If not set, defaults ta core\&.compression\&. If dat aint set, defaults ta 1 (best speed)\&.
.RE
.PP
core\&.packedGitWindowSize
.RS 4
Number of bytez of a pack file ta map tha fuck into memory up in a single mappin operation\&. Larger window sizes may allow yo' system ta process a smalla number of big-ass pack filez mo' quickly\&. Right back up in yo muthafuckin ass. Smalla window sizes will negatively affect performizzle cuz of increased calls ta tha operatin system\(cqs memory manager yo, but may improve performizzle when accessin a big-ass number of big-ass pack files\&.
.sp
Default is 1 MiB if NO_MMAP was set at compile time, otherwise 32 MiB on 32 bit platforms n' 1 GiB on 64 bit platforms\&. This should be reasonable fo' all users/operatin systems\&. Yo ass probably do not need ta adjust dis value\&.
.sp
Common unit suffixes of
\fIk\fR,
\fIm\fR, or
\fIg\fR
are supported\&.
.RE
.PP
core\&.packedGitLimit
.RS 4
Maximum number of bytes ta map simultaneously tha fuck into memory from pack files\&. If Git need ta access mo' than dis nuff bytes at once ta complete a operation it will unmap existin regions ta reclaim virtual address space within tha process\&.
.sp
Default is 256 MiB on 32 bit platforms n' 8 GiB on 64 bit platforms\&. This should be reasonable fo' all users/operatin systems, except on tha phattest projects\&. Yo ass probably do not need ta adjust dis value\&.
.sp
Common unit suffixes of
\fIk\fR,
\fIm\fR, or
\fIg\fR
are supported\&.
.RE
.PP
core\&.deltaBaseCacheLimit
.RS 4
Maximum number of bytes ta reserve fo' cachin base objects dat may be referenced by multiple deltified objects\&. By storin tha entire decompressed base objects up in a cold-ass lil cache Git be able ta avoid unpackin n' decompressin frequently used base objects multiple times\&.
.sp
Default is 16 MiB on all platforms\&. This should be reasonable fo' all users/operatin systems, except on tha phattest projects\&. Yo ass probably do not need ta adjust dis value\&.
.sp
Common unit suffixes of
\fIk\fR,
\fIm\fR, or
\fIg\fR
are supported\&.
.RE
.PP
core\&.bigFileThreshold
.RS 4
Filez larger than dis size is stored deflated, without attemptin delta compression\&. Right back up in yo muthafuckin ass. Storin big-ass filez without delta compression avoidz excessive memory usage, all up in tha slight expense of increased disk usage\&.
.sp
Default is 512 MiB on all platforms\&. This should be reasonable fo' most projects as source code n' other text filez can still be delta compressed yo, but larger binary media filez won\(cqt be\&.
.sp
Common unit suffixes of
\fIk\fR,
\fIm\fR, or
\fIg\fR
are supported\&.
.RE
.PP
core\&.excludesfile
.RS 4
In addizzle to
\fI\&.gitignore\fR
(per\-directory) and
\fI\&.git/info/exclude\fR, Git looks tha fuck into dis file fo' patternz of filez which is not meant ta be tracked\&. "~/" is expanded ta tha value of
$HOME
and "~user/" ta tha specified user\(cqs home directory\&. Its default value is $XDG_CONFIG_HOME/git/ignore\&. If $XDG_CONFIG_HOME is either not set or empty, $HOME/\&.config/git/ignore is used instead\&. Right back up in yo muthafuckin ass. See
\fBgitignore\fR(5)\&.
.RE
.PP
core\&.askpass
.RS 4
Some commandz (e\&.g\&. svn n' http intercourses) dat interactively ask fo' a password can be holla'd at ta use a external program given via tha value of dis variable\&. Can be overridden by the
\fIGIT_ASKPASS\fR
environment variable\&. If not set, fall back ta tha value of the
\fISSH_ASKPASS\fR
environment variable or, failin that, a simple password prompt\&. Da external program shall be given a suitable prompt as command line argument n' write tha password on its STDOUT\&.
.RE
.PP
core\&.attributesfile
.RS 4
In addizzle to
\fI\&.gitattributes\fR
(per\-directory) and
\fI\&.git/info/attributes\fR, Git looks tha fuck into dis file fo' attributes (see
\fBgitattributes\fR(5))\&. Path expansions is made tha same way as for
core\&.excludesfile\&. Its default value is $XDG_CONFIG_HOME/git/attributes\&. If $XDG_CONFIG_HOME is either not set or empty, $HOME/\&.config/git/attributes is used instead\&.
.RE
.PP
core\&.editor
.RS 4
Commandz such as
commit
and
tag
that lets you edit lyrics by launchin a editor uses tha value of dis variable when it is set, n' tha environment variable
GIT_EDITOR
is not set\&. Right back up in yo muthafuckin ass. See
\fBgit-var\fR(1)\&.
.RE
.PP
core\&.commentchar
.RS 4
Commandz such as
commit
and
tag
that lets you edit lyrics consider a line dat begins wit dis characta commented, n' removes dem afta tha editor returns (default
\fI#\fR)\&.
.RE
.PP
sequence\&.editor
.RS 4
Text editor used by
git rebase \-i
for editin tha rebase instruction file\&. Da value is meant ta be interpreted by tha shell when it is used\&. Well shiiiit, it can be overridden by the
GIT_SEQUENCE_EDITOR
environment variable\&. When not configured tha default commit message editor is used instead\&.
.RE
.PP
core\&.pager
.RS 4
Text viewer fo' use by Git commandz (e\&.g\&.,
\fIless\fR)\&. Da value is meant ta be interpreted by tha shell\&. Da order of preference is the
$GIT_PAGER
environment variable, then
core\&.pager
configuration, then
$PAGER, n' then tha default chosen at compile time (usually
\fIless\fR)\&.
.sp
When the
LESS
environment variable is unset, Git sets it to
FRSX
(if
LESS
environment variable is set, Git do not chizzle it at all)\&. If you wanna selectively override Git\(cqs default settin for
LESS, you can set
core\&.pager
to e\&.g\&.
less \-+S\&. This is ghon be passed ta tha shell by Git, which will translate tha final command to
LESS=FRSX less \-+S\&. Da environment  drops some lyrics ta tha command ta set the
S
option ta chop long lines but tha command line resets it ta tha default ta fold long lines\&.
.sp
Likewise, when the
LV
environment variable is unset, Git sets it to
\-c\&. Yo ass can override dis settin by exporting
LV
with another value or setting
core\&.pager
to
lv +c\&.
.RE
.PP
core\&.whitespace
.RS 4
A comma separated list of common whitespace problems ta notice\&.
\fIgit diff\fR
will use
color\&.diff\&.whitespace
to highlight them, and
\fIgit apply \-\-whitespace=error\fR
will consider dem as errors\&. Yo ass can prefix
\-
to disable any of dem (e\&.g\&.
\-trailing\-space):
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
blank\-at\-eol
treats trailin whitespaces all up in tha end of tha line as a error (enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
space\-before\-tab
treats a space characta dat appears immediately before a tab characta up in tha initial indent part of tha line as a error (enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
indent\-with\-non\-tab
treats a line dat is indented wit space charactas instead of tha equivalent tabs as a error (not enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tab\-in\-indent
treats a tab characta up in tha initial indent part of tha line as a error (not enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
blank\-at\-eof
treats blank lines added all up in tha end of file as a error (enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
trailing\-space
is a gangbangin' finger-lickin' dirty-ass short\-hand ta cover both
blank\-at\-eol
and
blank\-at\-eof\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
cr\-at\-eol
treats a cold-ass lil carriage\-return all up in tha end of line as part of tha line terminator, i\&.e\&. wit it,
trailing\-space
does not trigger if tha characta before such a cold-ass lil carriage\-return aint a whitespace (not enabled by default)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tabwidth=<n>
 drops some lyrics ta how tha fuck nuff characta positions a tab occupies; dis is relevant for
indent\-with\-non\-tab
and when Git fixes
tab\-in\-indent
errors\&. Da default tab width is 8\& fo' realz. Allowed joints is 1 ta 63\&.
.RE
.RE
.PP
core\&.fsyncobjectfiles
.RS 4
This boolean will enable
\fIfsync()\fR
when freestylin object files\&.
.sp
This be a total waste of time n' effort on a gangbangin' filesystem dat ordaz data writes properly yo, but can be useful fo' filesystems dat do not use journallin (traditionizzle UNIX filesystems) or dat only journal metadata n' not file contents (OS X\(cqs HFS+, or Linux ext3 wit "data=writeback")\&.
.RE
.PP
core\&.preloadindex
.RS 4
Enable parallel index preload fo' operations like
\fIgit diff\fR
.sp
This can speed up operations like
\fIgit diff\fR
and
\fIgit status\fR
especially on filesystems like NFS dat have weak cachin semantics n' thus relatively high IO latencies\&. With dis set to
\fItrue\fR, Git will do tha index comparison ta tha filesystem data up in parallel, allowin overlappin IO\(cqs\&.
.RE
.PP
core\&.createObject
.RS 4
Yo ass can set dis to
\fIlink\fR, up in which case a hardlink followed by a thugged-out delete of tha source is used ta make shizzle dat object creation aint gonna overwrite existin objects\&.
.sp
On some file system/operatin system combinations, dis is unreliable\&. Right back up in yo muthafuckin ass. Set dis config settin to
\fIrename\fR
there; But fuck dat shiznit yo, tha word on tha street is dat This will remove tha check dat make shizzle dat existin object filez aint gonna git overwritten\&.
.RE
.PP
core\&.notesRef
.RS 4
When showin commit lyrics, also show notes which is stored up in tha given ref\&. Da ref must be straight-up qualified\&. If tha given ref do not exist, it aint a error but means dat no notes should be printed\&.
.sp
This settin defaults ta "refs/notes/commits", n' it can be overridden by the
\fIGIT_NOTES_REF\fR
environment variable\&. Right back up in yo muthafuckin ass. See
\fBgit-notes\fR(1)\&.
.RE
.PP
core\&.sparseCheckout
.RS 4
Enable "sparse checkout" feature\&. Right back up in yo muthafuckin ass. See section "Sparse checkout" in
\fBgit-read-tree\fR(1)
for mo' shiznit\&.
.RE
.PP
core\&.abbrev
.RS 4
Set tha length object names is abbreviated to\&. If unspecified, nuff commandz abbreviate ta 7 hexdigits, which may not be enough fo' abbreviated object names ta stay unique fo' sufficiently long time\&.
.RE
.PP
add\&.ignore\-errors, add\&.ignoreErrors
.RS 4
Tells
\fIgit add\fR
to continue addin filez when some filez cannot be added cuz of indexin errors\&. Equivalent ta the
\fI\-\-ignore\-errors\fR
option of
\fBgit-add\fR(1)\&. Older versionz of Git accept only
add\&.ignore\-errors, which do not follow tha usual namin convention fo' configuration variables\&. Newer versionz of Git honor
add\&.ignoreErrors
as well\&.
.RE
.PP
alias\&.*
.RS 4
Command aliases fo' the
\fBgit\fR(1)
command wrapper \- e\&.g\&. afta definin "alias\&.last = cat\-file commit HEAD", tha invocation "git last" is equivalent ta "git cat\-file commit HEAD"\&. To avoid mad drama n' shits wit script usage, aliases dat hide existin Git commandz is ignored\& fo' realz. Arguments is split by spaces, tha usual shell quotin n' escapin is supported\&. quote pair n' a funky-ass backslash can be used ta quote them\&.
.sp
If tha alias expansion is prefixed wit a exclamation point, it is ghon be treated as a gangbangin' finger-lickin' dirty-ass shell command\&. For example, definin "alias\&.new = !gitk \-\-all \-\-not ORIG_HEAD", tha invocation "git new" is equivalent ta hustlin tha shell command "gitk \-\-all \-\-not ORIG_HEAD"\&. Note dat shell commandz is ghon be executed from tha top\-level directory of a repository, which may not necessarily be tha current directory\&.
\fIGIT_PREFIX\fR
is set as returned by hustlin
\fIgit rev\-parse \-\-show\-prefix\fR
from tha original gangsta current directory\&. Right back up in yo muthafuckin ass. See
\fBgit-rev-parse\fR(1)\&.
.RE
.PP
am\&.keepcr
.RS 4
If true, git\-am will call git\-mailsplit fo' patches up in mbox format wit parameter
\fI\-\-keep\-cr\fR\&. In dis case git\-mailsplit aint gonna remove
\er
from lines endin with
\er\en\&. Can be overridden by giving
\fI\-\-no\-keep\-cr\fR
from tha command line\&. Right back up in yo muthafuckin ass. See
\fBgit-am\fR(1),
\fBgit-mailsplit\fR(1)\&.
.RE
.PP
apply\&.ignorewhitespace
.RS 4
When set to
\fIchange\fR, tells
\fIgit apply\fR
to ignore chizzlez up in whitespace, up in tha same way as the
\fI\-\-ignore\-space\-change\fR
option\&. When set ta one of: no, none, never, false tells
\fIgit apply\fR
to respect all whitespace differences\&. Right back up in yo muthafuckin ass. See
\fBgit-apply\fR(1)\&.
.RE
.PP
apply\&.whitespace
.RS 4
Tells
\fIgit apply\fR
how ta handle whitespaces, up in tha same way as the
\fI\-\-whitespace\fR
option\&. Right back up in yo muthafuckin ass. See
\fBgit-apply\fR(1)\&.
.RE
.PP
branch\&.autosetupmerge
.RS 4
Tells
\fIgit branch\fR
and
\fIgit checkout\fR
to set up freshly smoked up branches so that
\fBgit-pull\fR(1)
will appropriately merge from tha startin point branch\&. Note dat even if dis option aint set, dis behavior can be chosen per\-branch rockin the
\-\-track
and
\-\-no\-track
options\&. Da valid settings are:
false \(em no automatic setup is done;
true \(em automatic setup is done when tha startin point be a remote\-trackin branch;
always \(em  automatic setup is done when tha startin point is either a local branch or remote\-trackin branch\&. This option defaults ta true\&.
.RE
.PP
branch\&.autosetuprebase
.RS 4
When a freshly smoked up branch is pimped with
\fIgit branch\fR
or
\fIgit checkout\fR
that tracks another branch, dis variable  drops some lyrics ta Git ta set up pull ta rebase instead of merge (see "branch\&.<name>\&.rebase")\&. When
never, rebase is never automatically set ta true\&. When
local, rebase is set ta legit fo' tracked branchez of other local branches\&. When
remote, rebase is set ta legit fo' tracked branchez of remote\-trackin branches\&. When
always, rebase is ghon be set ta legit fo' all trackin branches\&. Right back up in yo muthafuckin ass. See "branch\&.autosetupmerge" fo' details on how tha fuck ta set up a funky-ass branch ta track another branch\&. This option defaults ta never\&.
.RE
.PP
branch\&.<name>\&.remote
.RS 4
When on branch <name>, it tells
\fIgit fetch\fR
and
\fIgit push\fR
which remote ta fetch from/push to\&. Da remote ta push ta may be overridden with
remote\&.pushdefault
(for all branches)\&. Da remote ta push to, fo' tha current branch, may be further overridden by
branch\&.<name>\&.pushremote\&. If no remote is configured, or if yo ass is not on any branch, it defaults to
origin
for fetchin and
remote\&.pushdefault
for pushing\& fo' realz. Additionally,
\&.
(a period) is tha current local repository (a dot\-repository), see
branch\&.<name>\&.merge\(aqs final note below\&.
.RE
.PP
branch\&.<name>\&.pushremote
.RS 4
When on branch <name>, it overrides
branch\&.<name>\&.remote
for pushing\&. Well shiiiit, it also overrides
remote\&.pushdefault
for pushin from branch <name>\&. When you pull from one place (e\&.g\&. yo' upstream) n' push ta another place (e\&.g\&. yo' own publishin repository), you would wanna set
remote\&.pushdefault
to specify tha remote ta push ta fo' all branches, n' use dis option ta override it fo' a specific branch\&.
.RE
.PP
branch\&.<name>\&.merge
.RS 4
Defines, together wit branch\&.<name>\&.remote, tha upstream branch fo' tha given branch\&. Well shiiiit, it tells
\fIgit fetch\fR/\fIgit pull\fR/\fIgit rebase\fR
which branch ta merge n' can also affect
\fIgit push\fR
(see push\&.default)\&. When up in branch <name>, it tells
\fIgit fetch\fR
the default refspec ta be marked fo' mergin up in FETCH_HEAD\&. Da value is handled like tha remote part of a refspec, n' must match a ref which is fetched from tha remote given by "branch\&.<name>\&.remote"\&. Da merge shiznit is used by
\fIgit pull\fR
(which at first calls
\fIgit fetch\fR) ta lookup tha default branch fo' merging\&. Without dis option,
\fIgit pull\fR
defaults ta merge tha straight-up original gangsta refspec fetched\&. Right back up in yo muthafuckin ass. Specify multiple joints ta git a octopus merge\&. If you wish ta setup
\fIgit pull\fR
so dat it merges tha fuck into <name> from another branch up in tha local repository, you can point branch\&.<name>\&.merge ta tha desired branch, n' use tha relatizzle path setting
\&.
(a period) fo' branch\&.<name>\&.remote\&.
.RE
.PP
branch\&.<name>\&.mergeoptions
.RS 4
Sets default options fo' mergin tha fuck into branch <name>\&. Da syntax n' supported options is tha same as dem of
\fBgit-merge\fR(1) yo, but option joints containin whitespace charactas is currently not supported\&.
.RE
.PP
branch\&.<name>\&.rebase
.RS 4
When true, rebase tha branch <name> on top of tha fetched branch, instead of mergin tha default branch from tha default remote when "git pull" is run\&. Right back up in yo muthafuckin ass. See "pull\&.rebase" fo' bustin dis up in a non branch\-specific manner\&.
.sp
.if n \{\
.RS 4
.\}
.nf
When preserve, also pass `\-\-preserve\-merges` along ta \(aqgit rebase\(aq
so dat locally committed merge commits aint gonna be flattened
by hustlin \(aqgit pull\(aq\&.
.fi
.if n \{\
.RE
.\}
.sp
\fBNOTE\fR: dis be a possibly fucked up operation; do
\fBnot\fR
use it unless you KNOW tha implications (see
\fBgit-rebase\fR(1)
for details)\&.
.RE
.PP
branch\&.<name>\&.description
.RS 4
Branch description, can be edited with
git branch \-\-edit\-description\&. Branch description be automatically added up in tha format\-patch cover letta or request\-pull summary\&.
.RE
.PP
browser\&.<tool>\&.cmd
.RS 4
Specify tha command ta invoke tha specified browser\&. Da specified command is evaluated up in shell wit tha URLs passed as arguments\&. (See
\fBgit-web--browse\fR(1)\&.)
.RE
.PP
browser\&.<tool>\&.path
.RS 4
Override tha path fo' tha given tool dat may be used ta browse HTML help (see
\fI\-w\fR
option in
\fBgit-help\fR(1)) or a hustlin repository up in gitweb (see
\fBgit-instaweb\fR(1))\&.
.RE
.PP
clean\&.requireForce
.RS 4
A boolean ta make git\-clean do not a god damn thang unless given \-f, \-i or \-n\&. Defaults ta true\&.
.RE
.PP
color\&.branch
.RS 4
A boolean ta enable/disable color up in tha output of
\fBgit-branch\fR(1)\&. May be set to
always,
false
(or
never) or
auto
(or
true), up in which case flavas is used only when tha output is ta a terminal\&. Defaults ta false\&.
.RE
.PP
color\&.branch\&.<slot>
.RS 4
Use customized color fo' branch coloration\&.
<slot>
is one of
current
(the current branch),
local
(a local branch),
remote
(a remote\-trackin branch up in refs/remotes/),
upstream
(upstream trackin branch),
plain
(other refs)\&.
.sp
Da value fo' these configuration variablez be a list of flavas (at most two) n' attributes (at most one), separated by spaces\&. Da flavas accepted are
normal,
black,
red,
green,
yellow,
blue,
magenta,
cyan
and
white; tha attributes are
bold,
dim,
ul,
blink
and
reverse\&. Da first color given is tha foreground; tha second is tha background\&. Da posizzle of tha attribute, if any, don\(cqt matter\&.
.RE
.PP
color\&.diff
.RS 4
Whether ta use ANSI escape sequences ta add color ta patches\&. If dis is set to
always,
\fBgit-diff\fR(1),
\fBgit-log\fR(1), and
\fBgit-show\fR(1)
will use color fo' all patches\&. If it is set to
true
or
auto, dem commandz will only use color when output is ta tha terminal\&. Defaults ta false\&.
.sp
This do not affect
\fBgit-format-patch\fR(1)
or the
\fIgit\-diff\-*\fR
plumbin commands\&. Can be overridden on tha command line wit the
\-\-color[=<when>]
option\&.
.RE
.PP
color\&.diff\&.<slot>
.RS 4
Use customized color fo' diff colorization\&.
<slot>
specifies which part of tha patch ta use tha specified color, n' is one of
plain
(context text),
meta
(metainformation),
frag
(hunk header),
\fIfunc\fR
(function up in hunk header),
old
(removed lines),
new
(added lines),
commit
(commit headers), or
whitespace
(highlightin whitespace errors)\&. Da jointz of these variablez may be specified as up in color\&.branch\&.<slot>\&.
.RE
.PP
color\&.decorate\&.<slot>
.RS 4
Use customized color for
\fIgit log \-\-decorate\fR
output\&.
<slot>
is one of
branch,
remoteBranch,
tag,
stash
or
HEAD
for local branches, remote\-trackin branches, tags, stash n' HEAD, respectively\&.
.RE
.PP
color\&.grep
.RS 4
When set to
always, always highlight matches\&. When
false
(or
never), never\&. When set to
true
or
auto, use color only when tha output is freestyled ta tha terminal\&. Defaults to
false\&.
.RE
.PP
color\&.grep\&.<slot>
.RS 4
Use customized color fo' grep colorization\&.
<slot>
specifies which part of tha line ta use tha specified color, n' is one of
.PP
context
.RS 4
non\-matchin text up in context lines (when using
\-A,
\-B, or
\-C)
.RE
.PP
filename
.RS 4
filename prefix (when not using
\-h)
.RE
.PP
function
.RS 4
function name lines (when using
\-p)
.RE
.PP
linenumber
.RS 4
line number prefix (when using
\-n)
.RE
.PP
match
.RS 4
matchin text
.RE
.PP
selected
.RS 4
non\-matchin text up in selected lines
.RE
.PP
separator
.RS 4
separators between fieldz on a line (:,
\-, and
=) n' between hunks (\-\-)
.RE
.sp
Da jointz of these variablez may be specified as up in color\&.branch\&.<slot>\&.
.RE
.PP
color\&.interactive
.RS 4
When set to
always, always use flavas fo' interactizzle prompts n' displays (like fuckin dem used by "git\-add \-\-interactive" n' "git\-clean \-\-interactive")\&. When false (or
never), never\&. When set to
true
or
auto, use flavas only when tha output is ta tha terminal\&. Defaults ta false\&.
.RE
.PP
color\&.interactive\&.<slot>
.RS 4
Use customized color for
\fIgit add \-\-interactive\fR
and
\fIgit clean \-\-interactive\fR
output\&.
<slot>
may be
prompt,
header,
help
or
error, fo' four distinct typez of aiiight output from interactizzle commands\&. Da jointz of these variablez may be specified as up in color\&.branch\&.<slot>\&.
.RE
.PP
color\&.pager
.RS 4
A boolean ta enable/disable colored output when tha pager is up in use (default is true)\&.
.RE
.PP
color\&.showbranch
.RS 4
A boolean ta enable/disable color up in tha output of
\fBgit-show-branch\fR(1)\&. May be set to
always,
false
(or
never) or
auto
(or
true), up in which case flavas is used only when tha output is ta a terminal\&. Defaults ta false\&.
.RE
.PP
color\&.status
.RS 4
A boolean ta enable/disable color up in tha output of
\fBgit-status\fR(1)\&. May be set to
always,
false
(or
never) or
auto
(or
true), up in which case flavas is used only when tha output is ta a terminal\&. Defaults ta false\&.
.RE
.PP
color\&.status\&.<slot>
.RS 4
Use customized color fo' status colorization\&.
<slot>
is one of
header
(the header text of tha status message),
added
or
updated
(filez which is added but not committed),
changed
(filez which is chizzled but not added up in tha index),
untracked
(filez which is not tracked by Git),
branch
(the current branch), or
nobranch
(the color the
\fIno branch\fR
warnin is shown in, defaultin ta red)\&. Da jointz of these variablez may be specified as up in color\&.branch\&.<slot>\&.
.RE
.PP
color\&.ui
.RS 4
This variable determines tha default value fo' variablez such as
color\&.diff
and
color\&.grep
that control tha use of color per command crew\&. Its scope will expand as mo' commandz learn configuration ta set a thugged-out default fo' the
\-\-color
option\&. Right back up in yo muthafuckin ass. Set it to
false
or
never
if you prefer Git commandz not ta use color unless enabled explicitly wit some other configuration or the
\-\-color
option\&. Right back up in yo muthafuckin ass. Set it to
always
if you want all output not intended fo' machine consumption ta use color, to
true
or
auto
(this is tha default since Git 1\&.8\&.4) if you want such output ta use color when freestyled ta tha terminal\&.
.RE
.PP
column\&.ui
.RS 4
Specify whether supported commandz should output up in columns\&. This variable consistz of a list of tokens separated by spaces or commas:
.sp
These options control when tha feature should be enabled (defaults to
\fInever\fR):
.PP
always
.RS 4
always show up in columns
.RE
.PP
never
.RS 4
never show up in columns
.RE
.PP
auto
.RS 4
show up in columns if tha output is ta tha terminal
.RE
.sp
These options control layout (defaults to
\fIcolumn\fR)\&. Right back up in yo muthafuckin ass. Settin any of these implies
\fIalways\fR
if none of
\fIalways\fR,
\fInever\fR, or
\fIauto\fR
are specified\&.
.PP
column
.RS 4
fill columns before rows
.RE
.PP
row
.RS 4
fill rows before columns
.RE
.PP
plain
.RS 4
show up in one column
.RE
.sp
Finally, these options can be combined wit a layout option (defaults to
\fInodense\fR):
.PP
dense
.RS 4
make unequal size columns ta utilize mo' space
.RE
.PP
nodense
.RS 4
make equal size columns
.RE
.RE
.PP
column\&.branch
.RS 4
Specify whether ta output branch listin in
git branch
in columns\&. Right back up in yo muthafuckin ass. See
column\&.ui
for details\&.
.RE
.PP
column\&.clean
.RS 4
Specify tha layout when list shit in
git clean \-i, which always shows filez n' directories up in columns\&. Right back up in yo muthafuckin ass. See
column\&.ui
for details\&.
.RE
.PP
column\&.status
.RS 4
Specify whether ta output untracked filez in
git status
in columns\&. Right back up in yo muthafuckin ass. See
column\&.ui
for details\&.
.RE
.PP
column\&.tag
.RS 4
Specify whether ta output tag listin in
git tag
in columns\&. Right back up in yo muthafuckin ass. See
column\&.ui
for details\&.
.RE
.PP
commit\&.cleanup
.RS 4
This settin overrides tha default of the
\-\-cleanup
option in
git commit\&. Right back up in yo muthafuckin ass. See
\fBgit-commit\fR(1)
for details\&. Changin tha default can be useful when you always wanna keep lines dat begin wit comment character
#
in yo' log message, up in which case you would do
git config commit\&.cleanup whitespace
(note dat yo big-ass booty is ghon gotta remove tha help lines dat begin with
#
in tha commit log template yo ass, if you do this)\&.
.RE
.PP
commit\&.status
.RS 4
A boolean ta enable/disable inclusion of status shiznit up in tha commit message template when rockin a editor ta prepare tha commit message\&. Defaults ta true\&.
.RE
.PP
commit\&.template
.RS 4
Specify a gangbangin' file ta use as tha template fo' freshly smoked up commit lyrics\&. "~/" is expanded ta tha value of
$HOME
and "~user/" ta tha specified user\(cqs home directory\&.
.RE
.PP
credential\&.helper
.RS 4
Specify a external helper ta be called when a username or password credential is needed; tha helper may consult external storage ta avoid promptin tha user fo' tha credentials\&. Right back up in yo muthafuckin ass. See
\fBgitcredentials\fR(7)
for details\&.
.RE
.PP
credential\&.useHttpPath
.RS 4
When acquirin credentials, consider tha "path" component of a http or https URL ta be blingin\&. Defaults ta false\&. Right back up in yo muthafuckin ass. See
\fBgitcredentials\fR(7)
for mo' shiznit\&.
.RE
.PP
credential\&.username
.RS 4
If no username is set fo' a network authentication, use dis username by default\&. Right back up in yo muthafuckin ass. See credential\&.<context>\&.* below, and
\fBgitcredentials\fR(7)\&.
.RE
.PP
credential\&.<url>\&.*
.RS 4
Any of tha credential\&.* options above can be applied selectively ta some credentials\&. For example "credential\&.https://example\&.com\&.username" would set tha default username only fo' https connections ta example\&.com\&. Right back up in yo muthafuckin ass. See
\fBgitcredentials\fR(7)
for details on how tha fuck URLs is matched\&.
.RE
.PP
diff\&.autorefreshindex
.RS 4
When using
\fIgit diff\fR
to compare wit work tree files, do not consider stat\-only chizzle as chizzled\&. Instead, silently run
git update\-index \-\-refresh
to update tha cached stat shiznit fo' paths whose contents up in tha work tree match tha contents up in tha index\&. This option defaults ta true\&. Note dat dis affects only
\fIgit diff\fR
Porcelain, n' not lower level
\fIdiff\fR
commandz such as
\fIgit diff\-files\fR\&.
.RE
.PP
diff\&.dirstat
.RS 4
A comma separated list of
\-\-dirstat
parametas specifyin tha default behavior of the
\-\-dirstat
option to
\fBgit-diff\fR(1)` n' playas\&. Da defaults can be overridden on tha command line (using
\-\-dirstat=<param1,param2,\&.\&.\&.>)\&. Da fallback defaults (when not chizzled by
diff\&.dirstat) are
changes,noncumulative,3\&. Da followin parametas is available:
.PP
changes
.RS 4
Compute tha dirstat numbers by countin tha lines dat done been removed from tha source, or added ta tha destination\&. This ignores tha amount of pure code movements within a gangbangin' file\&. In other lyrics, rearrangin lines up in a gangbangin' file aint counted as much as other chizzles\&. This is tha default behavior when no parameta is given\&.
.RE
.PP
lines
.RS 4
Compute tha dirstat numbers by bustin tha regular line\-based diff analysis, n' summin tha removed/added line counts\&. (For binary files, count 64\-byte chunks instead, since binary filez have no natural concept of lines)\&. This be a mo' expensive
\-\-dirstat
behavior than the
changes
behavior yo, but it do count rearranged lines within a gangbangin' file as much as other chizzles\&. Da resultin output is consistent wit what tha fuck you git from tha other
\-\-*stat
options\&.
.RE
.PP
files
.RS 4
Compute tha dirstat numbers by countin tha number of filez chizzled\&. Each chizzled file counts equally up in tha dirstat analysis\&. This is tha computationally skankyest
\-\-dirstat
behavior, since it do not gotta peep tha file contents at all\&.
.RE
.PP
cumulative
.RS 4
Count chizzlez up in a cold-ass lil lil pimp directory fo' tha parent directory as well\&. Note dat when using
cumulative, tha sum of tha cementages reported may exceed 100%\&. Da default (non\-cumulative) behavior can be specified wit the
noncumulative
parameter\&.
.RE
.PP
<limit>
.RS 4
An integer parameta specifies a cold-ass lil cut\-off cement (3% by default)\&. Directories contributin less than dis cementage of tha chizzlez is not shown up in tha output\&.
.RE
.sp
Example: Da followin will count chizzled files, while ignorin directories wit less than 10% of tha total amount of chizzled files, n' accumulatin lil pimp directory counts up in tha parent directories:
files,10,cumulative\&.
.RE
.PP
diff\&.statGraphWidth
.RS 4
Limit tha width of tha graph part up in \-\-stat output\&. If set, applies ta all commandz generatin \-\-stat output except format\-patch\&.
.RE
.PP
diff\&.context
.RS 4
Generate diffs wit <n> linez of context instead of tha default of 3\&. This value is overridden by tha \-U option\&.
.RE
.PP
diff\&.external
.RS 4
If dis config variable is set, diff generation aint performed rockin tha internal diff machinery yo, but rockin tha given command\&. Can be overridden wit tha \(oqGIT_EXTERNAL_DIFF\(cq environment variable\&. Da command is called wit parametas as busted lyrics bout under "git Diffs" in
\fBgit\fR(1)\&. Note: if you wanna use a external diff program only on a subset of yo' files, you might wanna use
\fBgitattributes\fR(5)
instead\&.
.RE
.PP
diff\&.ignoreSubmodules
.RS 4
Sets tha default value of \-\-ignore\-submodules\&. Note dat dis affects only
\fIgit diff\fR
Porcelain, n' not lower level
\fIdiff\fR
commandz such as
\fIgit diff\-files\fR\&.
\fIgit checkout\fR
also honors dis settin when reportin uncommitted chizzles\&. Right back up in yo muthafuckin ass. Settin it to
\fIall\fR
disablez tha submodule summary normally shown by
\fIgit commit\fR
and
\fIgit status\fR
when
\fIstatus\&.submodulesummary\fR
is set unless it is overridden by rockin tha \-\-ignore\-submodulez command line option\&. The
\fIgit submodule\fR
commandz is not affected by dis setting\&.
.RE
.PP
diff\&.mnemonicprefix
.RS 4
If set,
\fIgit diff\fR
uses a prefix pair dat is different from tha standard "a/" n' "b/" dependin on what tha fuck is bein compared\&. When dis configuration is up in effect, reverse diff output also swaps tha order of tha prefixes:
.PP
git diff
.RS 4
compares tha (i)ndex n' tha (w)ork tree;
.RE
.PP
git diff HEAD
.RS 4
compares a (c)ommit n' tha (w)ork tree;
.RE
.PP
git diff \-\-cached
.RS 4
compares a (c)ommit n' tha (i)ndex;
.RE
.PP
git diff HEAD:file1 file2
.RS 4
compares a (o)bject n' a (w)ork tree entity;
.RE
.PP
git diff \-\-no\-index a funky-ass b
.RS 4
compares two non\-git thangs (1) n' (2)\&.
.RE
.RE
.PP
diff\&.noprefix
.RS 4
If set,
\fIgit diff\fR
does not show any source or destination prefix\&.
.RE
.PP
diff\&.orderfile
.RS 4
File indicatin how tha fuck ta order filez within a gangbangin' finger-lickin' diff, rockin one shell glob pattern per line\&. Can be overridden by the
\fI\-O\fR
option to
\fBgit-diff\fR(1)\&.
.RE
.PP
diff\&.renameLimit
.RS 4
Da number of filez ta consider when struttin tha copy/rename detection; equivalent ta the
\fIgit diff\fR
option
\fI\-l\fR\&.
.RE
.PP
diff\&.renames
.RS 4
Tells Git ta detect renames\&. If set ta any boolean value, it will enable basic rename detection\&. If set ta "copies" or "copy", it will detect copies, as well\&.
.RE
.PP
diff\&.suppressBlankEmpty
.RS 4
A boolean ta inhibit tha standard behavior of printin a space before each empty output line\&. Defaults ta false\&.
.RE
.PP
diff\&.submodule
.RS 4
Specify tha format up in which differences up in submodulez is shown\&. Da "log" format lists tha commits up in tha range like
\fBgit-submodule\fR(1)summary
does\&. Da "short" format format just shows tha namez of tha commits all up in tha beginnin n' end of tha range\&. Defaults ta short\&.
.RE
.PP
diff\&.wordRegex
.RS 4
A POSIX Extended Regular Expression used ta determine what tha fuck be a "word" when struttin word\-by\-word difference calculations\&. Characta sequences dat match tha regular expression is "words", all other charactas are
\fBignorable\fR
whitespace\&.
.RE
.PP
diff\&.<driver>\&.command
.RS 4
Da custom diff driver command\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.<driver>\&.xfuncname
.RS 4
Da regular expression dat tha diff driver should use ta recognize tha hunk header\& fo' realz. A built\-in pattern may also be used\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.<driver>\&.binary
.RS 4
Set dis option ta legit ta make tha diff driver treat filez as binary\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.<driver>\&.textconv
.RS 4
Da command dat tha diff driver should call ta generate tha text\-converted version of a gangbangin' file\&. Da result of tha conversion is used ta generate a human\-readable diff\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.<driver>\&.wordregex
.RS 4
Da regular expression dat tha diff driver should use ta split lyrics up in a line\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.<driver>\&.cachetextconv
.RS 4
Set dis option ta legit ta make tha diff driver cache tha text conversion outputs\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
diff\&.tool
.RS 4
Controls which diff tool is used by
\fBgit-difftool\fR(1)\&. This variable overrides tha value configured in
merge\&.tool\&. Da list below shows tha valid built\-in joints\& fo' realz. Any other value is treated as a cold-ass lil custom diff tool n' requires dat a cold-ass lil correspondin difftool\&.<tool>\&.cmd variable is defined\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
araxis
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
bc3
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
codecompare
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
deltawalker
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
diffmerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
diffuse
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ecmerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
emerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
gvimdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
gvimdiff2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
kdiff3
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
kompare
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
meld
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
opendiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
p4merge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tkdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
vimdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
vimdiff2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
xxdiff
.RE
.RE
.PP
diff\&.algorithm
.RS 4
Choose a gangbangin' finger-lickin' diff algorithm\&. Da variants is as bigs up:
.PP
default, myers
.RS 4
Da basic greedy diff algorithm\&. Currently, dis is tha default\&.
.RE
.PP
minimal
.RS 4
Spend extra time ta make shizzle tha smallest possible diff is produced\&.
.RE
.PP
patience
.RS 4
Use "patience diff" algorithm when generatin patches\&.
.RE
.PP
histogram
.RS 4
This algorithm extendz tha patience algorithm ta "support low\-occurrence common elements"\&.
.RE
.RE
.PP
difftool\&.<tool>\&.path
.RS 4
Override tha path fo' tha given tool\&. This is useful up in case yo' tool aint up in tha PATH\&.
.RE
.PP
difftool\&.<tool>\&.cmd
.RS 4
Specify tha command ta invoke tha specified diff tool\&. Da specified command is evaluated up in shell wit tha followin variablez available:
\fILOCAL\fR
is set ta tha name of tha temporary file containin tha contentz of tha diff pre\-image and
\fIREMOTE\fR
is set ta tha name of tha temporary file containin tha contentz of tha diff post\-image\&.
.RE
.PP
difftool\&.prompt
.RS 4
Prompt before each invocation of tha diff tool\&.
.RE
.PP
fetch\&.recurseSubmodules
.RS 4
This option can be either set ta a funky-ass boolean value or to
\fIon\-demand\fR\&. Right back up in yo muthafuckin ass. Settin it ta a funky-ass boolean chizzlez tha behavior of fetch n' pull ta unconditionally recurse tha fuck into submodulez when set ta legit or ta not recurse at all when set ta false\&. When set to
\fIon\-demand\fR
(the default value), fetch n' pull will only recurse tha fuck into a populated submodule when its superproject retrieves a cold-ass lil commit dat thugged-out shiznit tha submodule\(cqs reference\&.
.RE
.PP
fetch\&.fsckObjects
.RS 4
If it is set ta true, git\-fetch\-pack will check all fetched objects\&. Well shiiiit, it will abort up in tha case of a malformed object or a gangbangin' fucked up link\&. Da result of a abort is only danglin objects\&. Defaults ta false\&. If not set, tha value of
transfer\&.fsckObjects
is used instead\&.
.RE
.PP
fetch\&.unpackLimit
.RS 4
If tha number of objects fetched over tha Git natizzle transfer is below dis limit, then tha objects is ghon be unpacked tha fuck into loose object files\& yo. However if tha number of received objects equals or exceedz dis limit then tha received pack is ghon be stored as a pack, afta addin any missin delta bases\&. Right back up in yo muthafuckin ass. Storin tha pack from a push can make tha push operation complete faster, especially on slow filesystems\&. If not set, tha value of
transfer\&.unpackLimit
is used instead\&.
.RE
.PP
fetch\&.prune
.RS 4
If true, fetch will automatically behave as if the
\-\-prune
option was given on tha command line\&. Right back up in yo muthafuckin ass. See also
remote\&.<name>\&.prune\&.
.RE
.PP
format\&.attach
.RS 4
Enable multipart/mixed attachments as tha default for
\fIformat\-patch\fR\&. Da value can also be a thugged-out double quoted strang which will enable attachments as tha default n' set tha value as tha boundary\&. Right back up in yo muthafuckin ass. See tha \-\-attach option in
\fBgit-format-patch\fR(1)\&.
.RE
.PP
format\&.numbered
.RS 4
A boolean which can enable or disable sequence numbers up in patch subjects\&. Well shiiiit, it defaults ta "auto" which enablez it only if there is mo' than one patch\&. Well shiiiit, it can be enabled or disabled fo' all lyrics by settin it ta "true" or "false"\&. Right back up in yo muthafuckin ass. See \-\-numbered option in
\fBgit-format-patch\fR(1)\&.
.RE
.PP
format\&.headers
.RS 4
Additionizzle email headaz ta include up in a patch ta be submitted by mail\&. Right back up in yo muthafuckin ass. See
\fBgit-format-patch\fR(1)\&.
.RE
.PP
format\&.to, format\&.cc
.RS 4
Additionizzle recipients ta include up in a patch ta be submitted by mail\&. Right back up in yo muthafuckin ass. See tha \-\-to n' \-\-cc options in
\fBgit-format-patch\fR(1)\&.
.RE
.PP
format\&.subjectprefix
.RS 4
Da default fo' format\-patch is ta output filez wit the
\fI[PATCH]\fR
subject prefix\&. Use dis variable ta chizzle dat prefix\&.
.RE
.PP
format\&.signature
.RS 4
Da default fo' format\-patch is ta output a signature containin tha Git version number\&. Use dis variable ta chizzle dat default\&. Right back up in yo muthafuckin ass. Set dis variable ta tha empty strang ("") ta suppress signature generation\&.
.RE
.PP
format\&.suffix
.RS 4
Da default fo' format\-patch is ta output filez wit tha suffix
\&.patch\&. Use dis variable ta chizzle dat suffix (make shizzle ta include tha dot if you want it)\&.
.RE
.PP
format\&.pretty
.RS 4
Da default pretty format fo' log/show/whatchanged command, See
\fBgit-log\fR(1),
\fBgit-show\fR(1),
\fBgit-whatchanged\fR(1)\&.
.RE
.PP
format\&.thread
.RS 4
Da default threadin steez for
\fIgit format\-patch\fR\&. Can be a funky-ass boolean value, or
shallow
or
deep\&.
shallow
threadin make every last muthafuckin mail a reply ta tha head of tha series, where tha head is chosen from tha cover letter, the
\-\-in\-reply\-to, n' tha straight-up original gangsta patch mail, up in dis order\&.
deep
threadin make every last muthafuckin mail a reply ta tha previous one\& fo' realz. A legit boolean value is tha same ol' dirty as
shallow, n' a gangbangin' false value disablez threading\&.
.RE
.PP
format\&.signoff
.RS 4
A boolean value which lets you enable the
\-s/\-\-signoff
option of format\-patch by default\&.
\fBNote:\fR
Addin tha Signed\-off\-by: line ta a patch should be a cold-ass lil conscious act n' means dat you certify you have tha muthafuckin rights ta submit dis work under tha same open source license\&. Please peep the
\fISubmittingPatches\fR
document fo' further rap\&.
.RE
.PP
format\&.coverLetter
.RS 4
A boolean dat controls whether ta generate a cold-ass lil cover\-letta when format\-patch is invoked yo, but up in addizzle can be set ta "auto", ta generate a cold-ass lil cover\-letta only when there\(cqs mo' than one patch\&.
.RE
.PP
filter\&.<driver>\&.clean
.RS 4
Da command which is used ta convert tha content of a worktree file ta a funky-ass blob upon checkin\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
filter\&.<driver>\&.smudge
.RS 4
Da command which is used ta convert tha content of a funky-ass blob object ta a worktree file upon checkout\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
gc\&.aggressiveWindow
.RS 4
Da window size parameta used up in tha delta compression algorithm used by
\fIgit gc \-\-aggressive\fR\&. This defaults ta 250\&.
.RE
.PP
gc\&.auto
.RS 4
When there be approximately mo' than dis nuff loose objects up in tha repository,
git gc \-\-auto
will pack them\&. Right back up in yo muthafuckin ass. Some Porcelain commandz use dis command ta big-ass up a light\-weight garbage collection from time ta time\&. Da default value is 6700\&. Right back up in yo muthafuckin ass. Settin dis ta 0 disablez it\&.
.RE
.PP
gc\&.autopacklimit
.RS 4
When there be mo' than dis nuff packs dat is not marked with
*\&.keep
file up in tha repository,
git gc \-\-auto
consolidates dem tha fuck into one larger pack\&. Da default value is 50\&. Right back up in yo muthafuckin ass. Settin dis ta 0 disablez it\&.
.RE
.PP
gc\&.packrefs
.RS 4
Running
git pack\-refs
in a repository rendaz it unclonable by Git versions prior ta 1\&.5\&.1\&.2 over dumb transports like fuckin HTTP\&. This variable determines whether
\fIgit gc\fR
runs
git pack\-refs\&. This can be set to
notbare
to enable it within all non\-bare repos or it can be set ta a funky-ass boolean value\&. Da default is
true\&.
.RE
.PP
gc\&.pruneexpire
.RS 4
When
\fIgit gc\fR
is run, it will call
\fIprune \-\-expire 2\&.weeks\&.ago\fR\&. Override tha grace period wit dis config variable\&. Da value "now" may be used ta disable dis grace period n' always prune unreachable objects immediately\&.
.RE
.PP
gc\&.reflogexpire, gc\&.<pattern>\&.reflogexpire
.RS 4
\fIgit reflog expire\fR
removes reflog entries olda than dis time; defaults ta 90 days\&. With "<pattern>" (e\&.g\&. "refs/stash") up in tha middle tha settin applies only ta tha refs dat match tha <pattern>\&.
.RE
.PP
gc\&.reflogexpireunreachable, gc\&.<ref>\&.reflogexpireunreachable
.RS 4
\fIgit reflog expire\fR
removes reflog entries olda than dis time n' is not reachable from tha current tip; defaults ta 30 days\&. With "<pattern>" (e\&.g\&. "refs/stash") up in tha middle, tha settin applies only ta tha refs dat match tha <pattern>\&.
.RE
.PP
gc\&.rerereresolved
.RS 4
Recordz of conflicted merge you resolved earlier is kept fo' dis nuff minutes when
\fIgit rerere gc\fR
is run\&. Da default is 60 days\&. Right back up in yo muthafuckin ass. See
\fBgit-rerere\fR(1)\&.
.RE
.PP
gc\&.rerereunresolved
.RS 4
Recordz of conflicted merge you aint resolved is kept fo' dis nuff minutes when
\fIgit rerere gc\fR
is run\&. Da default is 15 days\&. Right back up in yo muthafuckin ass. See
\fBgit-rerere\fR(1)\&.
.RE
.PP
gitcvs\&.commitmsgannotation
.RS 4
Append dis strang ta each commit message\&. Right back up in yo muthafuckin ass. Set ta empty strang ta disable dis feature\&. Defaults ta "via git\-CVS emulator"\&.
.RE
.PP
gitcvs\&.enabled
.RS 4
Whether tha CVS server intercourse is enabled fo' dis repository\&. Right back up in yo muthafuckin ass. See
\fBgit-cvsserver\fR(1)\&.
.RE
.PP
gitcvs\&.logfile
.RS 4
Path ta a log file where tha CVS server intercourse well\&... logs various stuff\&. Right back up in yo muthafuckin ass. See
\fBgit-cvsserver\fR(1)\&.
.RE
.PP
gitcvs\&.usecrlfattr
.RS 4
If true, tha server will look up tha end\-of\-line conversion attributes fo' filez ta determine the
\fI\-k\fR
modes ta use\&. If tha attributes force Git ta treat a gangbangin' file as text, the
\fI\-k\fR
mode is ghon be left blank so CVS clients will treat it as text\&. If they suppress text conversion, tha file is ghon be set with
\fI\-kb\fR
mode, which suppresses any newline mungin tha client might otherwise do\&. If tha attributes do not allow tha file type ta be determined, then
\fIgitcvs\&.allbinary\fR
is used\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)\&.
.RE
.PP
gitcvs\&.allbinary
.RS 4
This is used if
\fIgitcvs\&.usecrlfattr\fR
does not resolve tha erect
\fI\-kb\fR
mode ta use\&. If true, all unresolved filez is busted ta tha client up in mode
\fI\-kb\fR\&. This causes tha client ta treat dem as binary files, which suppresses any newline mungin it otherwise might do\& fo' realz. Alternatively, if it is set ta "guess", then tha contentz of tha file is examined ta decizzle if it is binary, similar to
\fIcore\&.autocrlf\fR\&.
.RE
.PP
gitcvs\&.dbname
.RS 4
Database used by git\-cvsserver ta cache revision shiznit derived from tha Git repository\&. Da exact meanin dependz on tha used database driver, fo' SQLite (which is tha default driver) dis be a gangbangin' filename\&. Right back up in yo muthafuckin ass. Supports variable substitution (see
\fBgit-cvsserver\fR(1)
for details)\&. May not contain semicolons (;)\&. Default:
\fI%Ggitcvs\&.%m\&.sqlite\fR
.RE
.PP
gitcvs\&.dbdriver
.RS 4
Used Perl DBI driver\&. Yo ass can specify any available driver fo' dis here yo, but it might not work\&. git\-cvsserver is tested with
\fIDBD::SQLite\fR, reported ta work with
\fIDBD::Pg\fR, n' reported
\fBnot\fR
to work with
\fIDBD::mysql\fR\&. Experimenstrual feature\&. May not contain double colons (:)\&. Default:
\fISQLite\fR\&. Right back up in yo muthafuckin ass. See
\fBgit-cvsserver\fR(1)\&.
.RE
.PP
gitcvs\&.dbuser, gitcvs\&.dbpass
.RS 4
Database user n' password\&. Only useful if setting
\fIgitcvs\&.dbdriver\fR, since SQLite has no concept of database playas and/or passwords\&.
\fIgitcvs\&.dbuser\fR
supports variable substitution (see
\fBgit-cvsserver\fR(1)
for details)\&.
.RE
.PP
gitcvs\&.dbTableNamePrefix
.RS 4
Database table name prefix\&. Prepended ta tha namez of any database tablez used, allowin a single database ta be used fo' nuff muthafuckin repositories\&. Right back up in yo muthafuckin ass. Supports variable substitution (see
\fBgit-cvsserver\fR(1)
for details)\& fo' realz. Any non\-alphabetic charactas is ghon be replaced wit underscores\&.
.RE
.sp
All gitcvs variablez except fo' \fIgitcvs\&.usecrlfattr\fR n' \fIgitcvs\&.allbinary\fR can also be specified as \fIgitcvs\&.<access_method>\&.<varname>\fR (where \fIaccess_method\fR is one of "ext" n' "pserver") ta make dem apply only fo' tha given access method\&.
.PP
gitweb\&.category, gitweb\&.description, gitweb\&.baller, gitweb\&.url
.RS 4
See
\fBgitweb\fR(1)
for description\&.
.RE
.PP
gitweb\&.avatar, gitweb\&.blame, gitweb\&.grep, gitweb\&.highlight, gitweb\&.patches, gitweb\&.pickaxe, gitweb\&.remote_heads, gitweb\&.showsizes, gitweb\&.snapshot
.RS 4
See
\fBgitweb.conf\fR(5)
for description\&.
.RE
.PP
grep\&.lineNumber
.RS 4
If set ta true, enable
\fI\-n\fR
option by default\&.
.RE
.PP
grep\&.patternType
.RS 4
Set tha default matchin behavior\&. Usin a value of
\fIbasic\fR,
\fIextended\fR,
\fIfixed\fR, or
\fIperl\fR
will enable the
\fI\-\-basic\-regexp\fR,
\fI\-\-extended\-regexp\fR,
\fI\-\-fixed\-strings\fR, or
\fI\-\-perl\-regexp\fR
option accordingly, while tha value
\fIdefault\fR
will return ta tha default matchin behavior\&.
.RE
.PP
grep\&.extendedRegexp
.RS 4
If set ta true, enable
\fI\-\-extended\-regexp\fR
option by default\&. This option is ignored when the
\fIgrep\&.patternType\fR
option is set ta a value other than
\fIdefault\fR\&.
.RE
.PP
gpg\&.program
.RS 4
Use dis custom program instead of "gpg" found on $PATH when makin or verifyin a PGP signature\&. Da program must support tha same command line intercourse as GPG, namely, ta verify a thugged-out detached signature, "gpg \-\-verify $file \- <$signature" is run, n' tha program is sposed ta fuckin signal a phat signature by exitin wit code 0, n' ta generate a ascii\-armored detached signature, tha standard input of "gpg \-bsau $key" is fed wit tha contents ta be signed, n' tha program is sposed ta fuckin bust tha result ta its standard output\&.
.RE
.PP
gui\&.commitmsgwidth
.RS 4
Defines how tha fuck wide tha commit message window is up in the
\fBgit-gui\fR(1)\&. "75" is tha default\&.
.RE
.PP
gui\&.diffcontext
.RS 4
Specifies how tha fuck nuff context lines should be used up in calls ta diff made by the
\fBgit-gui\fR(1)\&. Da default is "5"\&.
.RE
.PP
gui\&.encoding
.RS 4
Specifies tha default encodin ta use fo' displayin of file contents in
\fBgit-gui\fR(1)
and
\fBgitk\fR(1)\&. Well shiiiit, it can be overridden by settin the
\fIencoding\fR
attribute fo' relevant filez (see
\fBgitattributes\fR(5))\&. If dis option aint set, tha tools default ta tha locale encoding\&.
.RE
.PP
gui\&.matchtrackingbranch
.RS 4
Determines if freshly smoked up branches pimped with
\fBgit-gui\fR(1)
should default ta trackin remote branches wit matchin names or not\&. Default: "false"\&.
.RE
.PP
gui\&.newbranchtemplate
.RS 4
Is used as suggested name when bustin freshly smoked up branches rockin the
\fBgit-gui\fR(1)\&.
.RE
.PP
gui\&.pruneduringfetch
.RS 4
"true" if
\fBgit-gui\fR(1)
should prune remote\-trackin branches when struttin a gangbangin' fetch\&. Da default value is "false"\&.
.RE
.PP
gui\&.trustmtime
.RS 4
Determines if
\fBgit-gui\fR(1)
should trust tha file modification timestamp or not\&. By default tha timestamps is not trusted\&.
.RE
.PP
gui\&.spellingdictionary
.RS 4
Specifies tha doggtionary used fo' spell checkin commit lyrics up in the
\fBgit-gui\fR(1)\&. When set ta "none" spell checkin is turned off\&.
.RE
.PP
gui\&.fastcopyblame
.RS 4
If true,
\fIgit gui blame\fR
uses
\-C
instead of
\-C \-C
for original gangsta location detection\&. Well shiiiit, it make blame hella fasta on big-ass repositories all up in tha expense of less thorough copy detection\&.
.RE
.PP
gui\&.copyblamethreshold
.RS 4
Specifies tha threshold ta use in
\fIgit gui blame\fR
original gangsta location detection, measured up in alphanumeric characters\&. Right back up in yo muthafuckin ass. See the
\fBgit-blame\fR(1)
manual fo' mo' shiznit on copy detection\&.
.RE
.PP
gui\&.blamehistoryctx
.RS 4
Specifies tha radiuz of history context up in minutes ta show in
\fBgitk\fR(1)
for tha selected commit, when the
Show History Context
menu item is invoked from
\fIgit gui blame\fR\&. If dis variable is set ta zero, tha whole history is shown\&.
.RE
.PP
guitool\&.<name>\&.cmd
.RS 4
Specifies tha shell command line ta execute when tha correspondin item of the
\fBgit-gui\fR(1)Tools
menu is invoked\&. This option is mandatory fo' every last muthafuckin tool\&. Da command is executed from tha root of tha hustlin directory, n' up in tha environment it receives tha name of tha tool as
\fIGIT_GUITOOL\fR, tha name of tha currently selected file as
\fIFILENAME\fR, n' tha name of tha current branch as
\fICUR_BRANCH\fR
(if tha head is detached,
\fICUR_BRANCH\fR
is empty)\&.
.RE
.PP
guitool\&.<name>\&.needsfile
.RS 4
Run tha tool only if a gangbangin' finger-lickin' diff is selected up in tha GUI\&. Well shiiiit, it guarantees that
\fIFILENAME\fR
is not empty\&.
.RE
.PP
guitool\&.<name>\&.noconsole
.RS 4
Run tha command silently, without bustin a window ta display its output\&.
.RE
.PP
guitool\&.<name>\&.norescan
.RS 4
Don\(cqt rescan tha hustlin directory fo' chizzlez afta tha tool finishes execution\&.
.RE
.PP
guitool\&.<name>\&.confirm
.RS 4
Show a cold-ass lil confirmation dialog before straight-up hustlin tha tool\&.
.RE
.PP
guitool\&.<name>\&.argprompt
.RS 4
Request a strang argument from tha user, n' pass it ta tha tool all up in the
\fIARGS\fR
environment variable\&. Right back up in yo muthafuckin ass. Since requestin a argument implies confirmation, the
\fIconfirm\fR
option has no effect if dis is enabled\&. If tha option is set to
\fItrue\fR,
\fIyes\fR, or
\fI1\fR, tha dialog uses a funky-ass built\-in generic prompt; otherwise tha exact value of tha variable is used\&.
.RE
.PP
guitool\&.<name>\&.revprompt
.RS 4
Request a single valid revision from tha user, n' set the
\fIREVISION\fR
environment variable\&. In other aspects dis option is similar to
\fIargprompt\fR, n' can be used together wit it\&.
.RE
.PP
guitool\&.<name>\&.revunmerged
.RS 4
Show only unmerged branches up in the
\fIrevprompt\fR
subdialog\&. This is useful fo' tools similar ta merge or rebase yo, but not fo' thangs like checkout or reset\&.
.RE
.PP
guitool\&.<name>\&.title
.RS 4
Specifies tha title ta use fo' tha prompt dialog\&. Da default is tha tool name\&.
.RE
.PP
guitool\&.<name>\&.prompt
.RS 4
Specifies tha general prompt strang ta display all up in tha top of tha dialog, before subsections for
\fIargprompt\fR
and
\fIrevprompt\fR\&. Da default value includes tha actual command\&.
.RE
.PP
help\&.browser
.RS 4
Specify tha browser dat is ghon be used ta display help up in the
\fIweb\fR
format\&. Right back up in yo muthafuckin ass. See
\fBgit-help\fR(1)\&.
.RE
.PP
help\&.format
.RS 4
Override tha default help format used by
\fBgit-help\fR(1)\&. Values
\fIman\fR,
\fIinfo\fR,
\fIweb\fR
and
\fIhtml\fR
are supported\&.
\fIman\fR
is tha default\&.
\fIweb\fR
and
\fIhtml\fR
are tha same\&.
.RE
.PP
help\&.autocorrect
.RS 4
Automatically erect n' execute mistyped commandz afta waitin fo' tha given number of decisecondz (0\&.1 sec)\&. If mo' than one command can be deduced from tha entered text, not a god damn thang is ghon be executed\&. If tha value of dis option is negative, tha erected command is ghon be executed immediately\&. If tha value is 0 \- tha command is ghon be just shown but not executed\&. This is tha default\&.
.RE
.PP
help\&.htmlpath
.RS 4
Specify tha path where tha HTML documentation resides\&. File system paths n' URLs is supported\& yo. HTML pages is ghon be prefixed wit dis path when help is displayed up in the
\fIweb\fR
format\&. This defaults ta tha documentation path of yo' Git installation\&.
.RE
.PP
http\&.proxy
.RS 4
Override tha HTTP proxy, normally configured rockin the
\fIhttp_proxy\fR,
\fIhttps_proxy\fR, and
\fIall_proxy\fR
environment variablez (see
curl(1))\&. This can be overridden on a per\-remote basis; peep remote\&.<name>\&.proxy
.RE
.PP
http\&.cookiefile
.RS 4
File containin previously stored cookie lines which should be used up in tha Git http session, if they match tha server\&. Da file format of tha file ta read dem scooby snacks from should be plain HTTP headaz or tha Netscape/Mo'jizzle cookie file format (see
\fBcurl\fR(1))\&. NOTE dat tha file specified wit http\&.cookiefile is only used as input unless http\&.saveCookies is set\&.
.RE
.PP
http\&.savecookies
.RS 4
If set, store dem scooby snacks received durin requests ta tha file specified by http\&.cookiefile\& yo. Has no effect if http\&.cookiefile is unset\&.
.RE
.PP
http\&.sslVerify
.RS 4
Whether ta verify tha SSL certificate when fetchin or pushin over HTTPS\&. Can be overridden by the
\fIGIT_SSL_NO_VERIFY\fR
environment variable\&.
.RE
.PP
http\&.sslCert
.RS 4
File containin tha SSL certificate when fetchin or pushin over HTTPS\&. Can be overridden by the
\fIGIT_SSL_CERT\fR
environment variable\&.
.RE
.PP
http\&.sslKey
.RS 4
File containin tha SSL private key when fetchin or pushin over HTTPS\&. Can be overridden by the
\fIGIT_SSL_KEY\fR
environment variable\&.
.RE
.PP
http\&.sslCertPasswordProtected
.RS 4
Enable Git\(cqs password prompt fo' tha SSL certificate\&. Otherwise OpenSSL will prompt tha user, possibly nuff times, if tha certificate or private key is encrypted\&. Can be overridden by the
\fIGIT_SSL_CERT_PASSWORD_PROTECTED\fR
environment variable\&.
.RE
.PP
http\&.sslCAInfo
.RS 4
File containin tha certificates ta verify tha peer wit when fetchin or pushin over HTTPS\&. Can be overridden by the
\fIGIT_SSL_CAINFO\fR
environment variable\&.
.RE
.PP
http\&.sslCAPath
.RS 4
Path containin filez wit tha CA certificates ta verify tha peer wit when fetchin or pushin over HTTPS\&. Can be overridden by the
\fIGIT_SSL_CAPATH\fR
environment variable\&.
.RE
.PP
http\&.sslTry
.RS 4
Attempt ta use AUTH SSL/TLS n' encrypted data transfers when connectin via regular FTP protocol\&. This might be needed if tha FTP server requires it fo' securitizzle reasons or you wish ta connect securely whenever remote FTP server supports it\&. Default is false since it might trigger certificate verification errors on misconfigured servers\&.
.RE
.PP
http\&.maxRequests
.RS 4
How tha fuck nuff HTTP requests ta launch up in parallel\&. Can be overridden by the
\fIGIT_HTTP_MAX_REQUESTS\fR
environment variable\&. Default is 5\&.
.RE
.PP
http\&.minSessions
.RS 4
Da number of curl sessions (counted across slots) ta be kept across requests\&. They aint gonna be ended wit curl_easy_cleanup() until http_cleanup() is invoked\&. If USE_CURL_MULTI aint defined, dis value is ghon be capped at 1\&. Defaults ta 1\&.
.RE
.PP
http\&.postBuffer
.RS 4
Maximum size up in bytez of tha buffer used by smart-ass HTTP transports when POSTin data ta tha remote system\&. For requests larger than dis buffer size, HTTP/1\&.1 n' Transfer\-Encoding: chunked is used ta avoid bustin a massive pack file locally\&. Default is 1 MiB, which is sufficient fo' most requests\&.
.RE
.PP
http\&.lowSpeedLimit, http\&.lowSpeedTime
.RS 4
If tha HTTP transfer speed is less than
\fIhttp\&.lowSpeedLimit\fR
for longer than
\fIhttp\&.lowSpeedTime\fR
seconds, tha transfer be aborted\&. Can be overridden by the
\fIGIT_HTTP_LOW_SPEED_LIMIT\fR
and
\fIGIT_HTTP_LOW_SPEED_TIME\fR
environment variables\&.
.RE
.PP
http\&.noEPSV
.RS 4
A boolean which disablez rockin of EPSV ftp command by curl\&. This can helpful wit some "poor" ftp servers which don\(cqt support EPSV mode\&. Can be overridden by the
\fIGIT_CURL_FTP_NO_EPSV\fR
environment variable\&. Default is false (curl will use EPSV)\&.
.RE
.PP
http\&.useragent
.RS 4
Da HTTP USER_AGENT strang presented ta a HTTP server\&. Da default value represents tha version of tha client Git like fuckin git/1\&.7\&.1\&. This option allows you ta override dis value ta a mo' common value like fuckin Mozilla/4\&.0\&. This may be necessary, fo' instance, if connectin all up in a gangbangin' firewall dat restricts HTTP connections ta a set of common USER_AGENT strings (but not includin dem like git/1\&.7\&.1)\&. Can be overridden by the
\fIGIT_HTTP_USER_AGENT\fR
environment variable\&.
.RE
.PP
http\&.<url>\&.*
.RS 4
Any of tha http\&.* options above can be applied selectively ta some urls\&. For a cold-ass lil config key ta match a URL, each element of tha config key is compared ta dat of tha URL, up in tha followin order:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Scheme (e\&.g\&.,
https
in
https://example\&.com/)\&. This field must match exactly between tha config key n' tha URL\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Host/domain name (e\&.g\&.,
example\&.com
in
https://example\&.com/)\&. This field must match exactly between tha config key n' tha URL\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Port number (e\&.g\&.,
8080
in
http://example\&.com:8080/)\&. This field must match exactly between tha config key n' tha URL\&. Omitted port numbers is automatically converted ta tha erect default fo' tha scheme before matching\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Path (e\&.g\&.,
repo\&.git
in
https://example\&.com/repo\&.git)\&. Da path field of tha config key must match tha path field of tha URL either exactly or as a prefix of slash\-delimited path elements\&. This means a cold-ass lil config key wit path
foo/
matches URL path
foo/bar\& fo' realz. A prefix can only match on a slash (/) boundary\&. Longer matches take precedence (so a cold-ass lil config key wit path
foo/bar
is a funky-ass betta match ta URL path
foo/bar
than a cold-ass lil config key wit just path
foo/)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
User name (e\&.g\&.,
user
in
https://user@example\&.com/repo\&.git)\&. If tha config key has a user name it must match tha user name up in tha URL exactly\&. If tha config key aint gots a user name, dat config key will match a URL wit any user name (includin none) yo, but at a lower precedence than a cold-ass lil config key wit a user name\&.
.RE
.sp
Da list above is ordered by decreasin precedence; a URL dat matches a cold-ass lil config key\(cqs path is preferred ta one dat matches its user name\&. For example, if tha URL is
https://user@example\&.com/foo/bar
a config key match of
https://example\&.com/foo
will be preferred over a cold-ass lil config key match of
https://user@example\&.com\&.
.sp
All URLs is normalized before attemptin any matchin (the password part, if embedded up in tha URL, be always ignored fo' matchin purposes) so dat equivalent urls dat is simply spelled differently will match properly\&. Environment variable settings always override any matches\&. Da urls dat is matched against is dem given directly ta Git commands\&. This means any URLs hit up as a result of a redirection do not participate up in matching\&.
.RE
.PP
i18n\&.commitEncoding
.RS 4
Characta encodin tha commit lyrics is stored in; Git itself do not care per se yo, but dis shiznit is necessary e\&.g\&. when importin commits from emails or up in tha gitk graphical history browser (and possibly at other places up in tha future or up in other porcelains)\&. Right back up in yo muthafuckin ass. See e\&.g\&.
\fBgit-mailinfo\fR(1)\&. Defaults to
\fIutf\-8\fR\&.
.RE
.PP
i18n\&.logOutputEncoding
.RS 4
Characta encodin tha commit lyrics is converted ta when hustlin
\fIgit log\fR
and playas\&.
.RE
.PP
imap
.RS 4
Da configuration variablez up in the
\fIimap\fR
section is busted lyrics bout in
\fBgit-imap-send\fR(1)\&.
.RE
.PP
init\&.templatedir
.RS 4
Specify tha directory from which templates is ghon be copied\&. (See tha "TEMPLATE DIRECTORY" section of
\fBgit-init\fR(1)\&.)
.RE
.PP
instaweb\&.browser
.RS 4
Specify tha program dat is ghon be used ta browse yo' hustlin repository up in gitweb\&. Right back up in yo muthafuckin ass. See
\fBgit-instaweb\fR(1)\&.
.RE
.PP
instaweb\&.httpd
.RS 4
Da HTTP daemon command\-line ta start gitweb on yo' hustlin repository\&. Right back up in yo muthafuckin ass. See
\fBgit-instaweb\fR(1)\&.
.RE
.PP
instaweb\&.local
.RS 4
If legit tha wizzy server started by
\fBgit-instaweb\fR(1)
will be bound ta tha local IP (127\&.0\&.0\&.1)\&.
.RE
.PP
instaweb\&.modulepath
.RS 4
Da default module path for
\fBgit-instaweb\fR(1)
to use instead of /usr/lib/apache2/modules\&. Only used if httpd is Apache\&.
.RE
.PP
instaweb\&.port
.RS 4
Da port number ta bind tha gitweb httpd to\&. Right back up in yo muthafuckin ass. See
\fBgit-instaweb\fR(1)\&.
.RE
.PP
interactive\&.singlekey
.RS 4
In interactizzle commands, allow tha user ta provide one\-letta input wit a single key (i\&.e\&., without hittin enter)\&. Currently dis is used by the
\-\-patch
mode of
\fBgit-add\fR(1),
\fBgit-checkout\fR(1),
\fBgit-commit\fR(1),
\fBgit-reset\fR(1), and
\fBgit-stash\fR(1)\&. Note dat dis settin is silently ignored if portable keystroke input aint available\&.
.RE
.PP
log\&.abbrevCommit
.RS 4
If true, makes
\fBgit-log\fR(1),
\fBgit-show\fR(1), and
\fBgit-whatchanged\fR(1)
assume
\-\-abbrev\-commit\&. Yo ass may override dis option with
\-\-no\-abbrev\-commit\&.
.RE
.PP
log\&.date
.RS 4
Set tha default date\-time mode fo' the
\fIlog\fR
command\&. Right back up in yo muthafuckin ass. Settin a value fo' log\&.date is similar ta using
\fIgit log\fR\(aqs
\-\-date
option\&. Possible joints are
relative,
local,
default,
iso,
rfc, and
short; see
\fBgit-log\fR(1)
for details\&.
.RE
.PP
log\&.decorate
.RS 4
Print up tha ref namez of any commits dat is shown by tha log command\&. If
\fIshort\fR
is specified, tha ref name prefixes
\fIrefs/heads/\fR,
\fIrefs/tags/\fR
and
\fIrefs/remotes/\fR
will not be printed\&. If
\fIfull\fR
is specified, tha full ref name (includin prefix) is ghon be printed\&. This is tha same ol' dirty as tha log commands
\fI\-\-decorate\fR
option\&.
.RE
.PP
log\&.showroot
.RS 4
If true, tha initial commit is ghon be shown as a funky-ass big-ass creation event\&. This is equivalent ta a gangbangin' finger-lickin' diff against a empty tree\&. Tools like
\fBgit-log\fR(1)
or
\fBgit-whatchanged\fR(1), which normally hide tha root commit will now show it\&. True by default\&.
.RE
.PP
log\&.mailmap
.RS 4
If true, makes
\fBgit-log\fR(1),
\fBgit-show\fR(1), and
\fBgit-whatchanged\fR(1)
assume
\-\-use\-mailmap\&.
.RE
.PP
mailmap\&.file
.RS 4
Da location of a augmentin mailmap file\&. Da default mailmap, located up in tha root of tha repository, is loaded first, then tha mailmap file pointed ta by dis variable\&. Da location of tha mailmap file may be up in a repository subdirectory, or somewhere outside of tha repository itself\&. Right back up in yo muthafuckin ass. See
\fBgit-shortlog\fR(1)
and
\fBgit-blame\fR(1)\&.
.RE
.PP
mailmap\&.blob
.RS 4
Like
mailmap\&.file yo, but consider tha value as a reference ta a funky-ass blob up in tha repository\&. If both
mailmap\&.file
and
mailmap\&.blob
are given, both is parsed, wit entries from
mailmap\&.file
takin precedence\&. In a funky-ass bare repository, dis defaults to
HEAD:\&.mailmap\&. In a non\-bare repository, it defaults ta empty\&.
.RE
.PP
man\&.viewer
.RS 4
Specify tha programs dat may be used ta display help up in the
\fIman\fR
format\&. Right back up in yo muthafuckin ass. See
\fBgit-help\fR(1)\&.
.RE
.PP
man\&.<tool>\&.cmd
.RS 4
Specify tha command ta invoke tha specified playa viewer\&. Da specified command is evaluated up in shell wit tha playa page passed as argument\&. (See
\fBgit-help\fR(1)\&.)
.RE
.PP
man\&.<tool>\&.path
.RS 4
Override tha path fo' tha given tool dat may be used ta display help up in the
\fIman\fR
format\&. Right back up in yo muthafuckin ass. See
\fBgit-help\fR(1)\&.
.RE
.PP
merge\&.conflictstyle
.RS 4
Specify tha steez up in which conflicted hunks is freestyled up ta hustlin tree filez upon merge\&. Da default is "merge", which shows a
<<<<<<<
conflict marker, chizzlez made by one side, a
=======
marker, chizzlez made by tha other side, n' then a
>>>>>>>
marker\& fo' realz. An alternate style, "diff3", addz a
|||||||
marker n' tha original gangsta text before the
=======
marker\&.
.RE
.PP
merge\&.defaultToUpstream
.RS 4
If merge is called without any commit argument, merge tha upstream branches configured fo' tha current branch by rockin they last observed joints stored up in they remote\-trackin branches\&. Da jointz of the
branch\&.<current branch>\&.merge
that name tha branches all up in tha remote named by
branch\&.<current branch>\&.remote
are consulted, n' then they is mapped via
remote\&.<remote>\&.fetch
to they correspondin remote\-trackin branches, n' tha tipz of these trackin branches is merged\&.
.RE
.PP
merge\&.ff
.RS 4
By default, Git do not create a extra merge commit when mergin a cold-ass lil commit dat be a thugged-out descendant of tha current commit\&. Instead, tha tip of tha current branch is fast\-forwarded\&. When set to
false, dis variable  drops some lyrics ta Git ta create a extra merge commit up in such a cold-ass lil case (equivalent ta givin the
\-\-no\-ff
option from tha command line)\&. When set to
only, only such fast\-forward merges is allowed (equivalent ta givin the
\-\-ff\-only
option from tha command line)\&.
.RE
.PP
merge\&.log
.RS 4
In addizzle ta branch names, populate tha log message wit at most tha specified number of one\-line descriptions from tha actual commits dat is bein merged\&. Defaults ta false, n' legit be a synonym fo' 20\&.
.RE
.PP
merge\&.renameLimit
.RS 4
Da number of filez ta consider when struttin rename detection durin a merge; if not specified, defaults ta tha value of diff\&.renameLimit\&.
.RE
.PP
merge\&.renormalize
.RS 4
Tell Git dat canonical representation of filez up in tha repository has chizzled over time (e\&.g\&. earlier commits record text filez wit CRLF line endings yo, but recent ones use LF line endings)\&. In such a repository, Git can convert tha data recorded up in commits ta a cold-ass lil canonical form before struttin a merge ta reduce unnecessary conflicts\&. For mo' shiznit, peep section "Mergin branches wit differin checkin/checkout attributes" in
\fBgitattributes\fR(5)\&.
.RE
.PP
merge\&.stat
.RS 4
Whether ta print tha diffstat between ORIG_HEAD n' tha merge result all up in tha end of tha merge\&. True by default\&.
.RE
.PP
merge\&.tool
.RS 4
Controls which merge tool is used by
\fBgit-mergetool\fR(1)\&. Da list below shows tha valid built\-in joints\& fo' realz. Any other value is treated as a cold-ass lil custom merge tool n' requires dat a cold-ass lil correspondin mergetool\&.<tool>\&.cmd variable is defined\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
araxis
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
bc3
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
codecompare
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
deltawalker
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
diffmerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
diffuse
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ecmerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
emerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
gvimdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
gvimdiff2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
kdiff3
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
meld
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
opendiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
p4merge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tkdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tortoisemerge
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
vimdiff
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
vimdiff2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
xxdiff
.RE
.RE
.PP
merge\&.verbosity
.RS 4
Controls tha amount of output shown by tha recursive merge game\&. Level 0 outputs not a god damn thang except a gangbangin' final error message if conflicts was detected\&. Level 1 outputs only conflicts, 2 outputs conflicts n' file chizzles\&. Level 5 n' above outputs debuggin shiznit\&. Da default is level 2\&. Can be overridden by the
\fIGIT_MERGE_VERBOSITY\fR
environment variable\&.
.RE
.PP
merge\&.<driver>\&.name
.RS 4
Defines a human\-readable name fo' a cold-ass lil custom low\-level merge driver\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
merge\&.<driver>\&.driver
.RS 4
Defines tha command dat implements a cold-ass lil custom low\-level merge driver\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
merge\&.<driver>\&.recursive
.RS 4
Names a low\-level merge driver ta be used when struttin a internal merge between common ancestors\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
mergetool\&.<tool>\&.path
.RS 4
Override tha path fo' tha given tool\&. This is useful up in case yo' tool aint up in tha PATH\&.
.RE
.PP
mergetool\&.<tool>\&.cmd
.RS 4
Specify tha command ta invoke tha specified merge tool\&. Da specified command is evaluated up in shell wit tha followin variablez available:
\fIBASE\fR
is tha name of a temporary file containin tha common base of tha filez ta be merged, if available;
\fILOCAL\fR
is tha name of a temporary file containin tha contentz of tha file on tha current branch;
\fIREMOTE\fR
is tha name of a temporary file containin tha contentz of tha file from tha branch bein merged;
\fIMERGED\fR
gotz nuff tha name of tha file ta which tha merge tool should write tha thangs up in dis biatch of a successful merge\&.
.RE
.PP
mergetool\&.<tool>\&.trustExitCode
.RS 4
For a cold-ass lil custom merge command, specify whether tha exit code of tha merge command can be used ta determine whether tha merge was successful\&. If dis aint set ta legit then tha merge target file timestamp is checked n' tha merge assumed ta done been successful if tha file has been updated, otherwise tha user is prompted ta indicate tha success of tha merge\&.
.RE
.PP
mergetool\&.keepBackup
.RS 4
Afta struttin a merge, tha original gangsta file wit conflict markers can be saved as a gangbangin' file wit a
\&.orig
extension\&. If dis variable is set to
false
then dis file aint preserved\&. Defaults to
true
(i\&.e\&. keep tha backup files)\&.
.RE
.PP
mergetool\&.keepTemporaries
.RS 4
When invokin a cold-ass lil custom merge tool, Git uses a set of temporary filez ta pass ta tha tool\&. If tha tool returns a error n' dis variable is set to
true, then these temporary filez is ghon be preserved, otherwise they is ghon be removed afta tha tool has exited\&. Defaults to
false\&.
.RE
.PP
mergetool\&.prompt
.RS 4
Prompt before each invocation of tha merge resolution program\&.
.RE
.PP
notes\&.displayRef
.RS 4
Da (fully qualified) refname from which ta show notes when showin commit lyrics\&. Da value of dis variable can be set ta a glob, up in which case notes from all matchin refs is ghon be shown\&. Yo ass may also specify dis configuration variable nuff muthafuckin times\& fo' realz. A warnin is ghon be issued fo' refs dat do not exist yo, but a glob dat do not match any refs is silently ignored\&.
.sp
This settin can be overridden wit the
GIT_NOTES_DISPLAY_REF
environment variable, which must be a cold-ass lil colon separated list of refs or globs\&.
.sp
Da effectizzle value of "core\&.notesRef" (possibly overridden by GIT_NOTES_REF) be also implicitly added ta tha list of refs ta be displayed\&.
.RE
.PP
notes\&.rewrite\&.<command>
.RS 4
When rewritin commits wit <command> (currently
amend
or
rebase) n' dis variable is set to
true, Git automatically copies yo' notes from tha original gangsta ta tha rewritten commit\&. Defaults to
true yo, but peep "notes\&.rewriteRef" below\&.
.RE
.PP
notes\&.rewriteMode
.RS 4
When copyin notes durin a rewrite (see tha "notes\&.rewrite\&.<command>" option), determines what tha fuck ta do if tha target commit already has a note\&. Must be one of
overwrite,
concatenate, or
ignore\&. Defaults to
concatenate\&.
.sp
This settin can be overridden wit the
GIT_NOTES_REWRITE_MODE
environment variable\&.
.RE
.PP
notes\&.rewriteRef
.RS 4
When copyin notes durin a rewrite, specifies tha (fully qualified) ref whose notes should be copied\&. Da ref may be a glob, up in which case notes up in all matchin refs is ghon be copied\&. Yo ass may also specify dis configuration nuff muthafuckin times\&.
.sp
Do not gotz a thugged-out default value; you must configure dis variable ta enable note rewriting\&. Right back up in yo muthafuckin ass. Set it to
refs/notes/commits
to enable rewritin fo' tha default commit notes\&.
.sp
This settin can be overridden wit the
GIT_NOTES_REWRITE_REF
environment variable, which must be a cold-ass lil colon separated list of refs or globs\&.
.RE
.PP
pack\&.window
.RS 4
Da size of tha window used by
\fBgit-pack-objects\fR(1)
when no window size is given on tha command line\&. Defaults ta 10\&.
.RE
.PP
pack\&.depth
.RS 4
Da maximum delta depth used by
\fBgit-pack-objects\fR(1)
when no maximum depth is given on tha command line\&. Defaults ta 50\&.
.RE
.PP
pack\&.windowMemory
.RS 4
Da window memory size limit used by
\fBgit-pack-objects\fR(1)
when no limit is given on tha command line\&. Da value can be suffixed wit "k", "m", or "g"\&. Defaults ta 0, meanin no limit\&.
.RE
.PP
pack\&.compression
.RS 4
An integer \-1\&.\&.9, indicatin tha compression level fo' objects up in a pack file\&. \-1 is tha zlib default\&. 0 means no compression, n' 1\&.\&.9 is various speed/size tradeoffs, 9 bein slowest\&. If not set, defaults ta core\&.compression\&. If dat aint set, defaults ta \-1, tha zlib default, which is "a default compromise between speed n' compression (currently equivalent ta level 6)\&."
.sp
Note dat changin tha compression level aint gonna automatically recompress all existin objects\&. Yo ass can force recompression by passin tha \-F option to
\fBgit-repack\fR(1)\&.
.RE
.PP
pack\&.deltaCacheSize
.RS 4
Da maximum memory up in bytes used fo' cachin deltas in
\fBgit-pack-objects\fR(1)
before freestylin dem up ta a pack\&. This cache is used ta speed up tha freestylin object phase by not havin ta recompute tha final delta result once tha dopest match fo' all objects is found\&. Repackin big-ass repositories on machines which is tight wit memory might be badly impacted by dis though, especially if dis cache pushes tha system tha fuck into swapping\& fo' realz. A value of 0 means no limit\&. Da smallest size of 1 byte may be used ta virtually disable dis cache\&. Defaults ta 256 MiB\&.
.RE
.PP
pack\&.deltaCacheLimit
.RS 4
Da maximum size of a thugged-out delta, dat is cached in
\fBgit-pack-objects\fR(1)\&. This cache is used ta speed up tha freestylin object phase by not havin ta recompute tha final delta result once tha dopest match fo' all objects is found\&. Defaults ta 1000\&.
.RE
.PP
pack\&.threads
.RS 4
Specifies tha number of threadz ta spawn when searchin fo' dopest delta matches\&. This requires that
\fBgit-pack-objects\fR(1)
be compiled wit pthreadz otherwise dis option is ignored wit a warning\&. This is meant ta reduce packin time on multiprocessor machines\&. Da required amount of memory fo' tha delta search window is however multiplied by tha number of threads\&. Right back up in yo muthafuckin ass. Specifyin 0 will cause Git ta auto\-detect tha number of CPU\(cqs n' set tha number of threadz accordingly\&.
.RE
.PP
pack\&.indexVersion
.RS 4
Specify tha default pack index version\&. Valid joints is 1 fo' legacy pack index used by Git versions prior ta 1\&.5\&.2, n' 2 fo' tha freshly smoked up pack index wit capabilitizzles fo' packs larger than 4 GB as well as proper protection against tha repackin of corrupted packs\&. Version 2 is tha default\&. Note dat version 2 is enforced n' dis config option ignored whenever tha correspondin pack is larger than 2 GB\&.
.sp
If you have a oldschool Git dat do not KNOW tha version 2
*\&.idx
file, clonin or fetchin over a non natizzle protocol (e\&.g\&. "http" n' "rsync") dat will copy both
*\&.pack
file n' corresponding
*\&.idx
file from tha other side may hit you wit a repository dat cannot be accessed wit yo' olda version of Git\&. If the
*\&.pack
file is smalla than 2 GB, however, you can use
\fBgit-index-pack\fR(1)
on tha *\&.pack file ta regenerate the
*\&.idx
file\&.
.RE
.PP
pack\&.packSizeLimit
.RS 4
Da maximum size of a pack\&. This settin only affects packin ta a gangbangin' file when repacking, i\&.e\&. tha git:// protocol is unaffected\&. Well shiiiit, it can be overridden by the
\-\-max\-pack\-size
option of
\fBgit-repack\fR(1)\&. Da minimum size allowed is limited ta 1 MiB\&. Da default is unlimited\&. Common unit suffixes of
\fIk\fR,
\fIm\fR, or
\fIg\fR
are supported\&.
.RE
.PP
pager\&.<cmd>
.RS 4
If tha value is boolean, turns on or off pagination of tha output of a particular Git subcommand when freestylin ta a tty\&. Otherwise, turns on pagination fo' tha subcommand rockin tha pager specified by tha value of
pager\&.<cmd>\&. If
\-\-paginate
or
\-\-no\-pager
is specified on tha command line, it takes precedence over dis option\&. To disable pagination fo' all commands, set
core\&.pager
or
GIT_PAGER
to
cat\&.
.RE
.PP
pretty\&.<name>
.RS 4
Alias fo' a \-\-pretty= format string, as specified in
\fBgit-log\fR(1)\& fo' realz. Any aliases defined here can be used just as tha built\-in pretty formats could\&. For example, hustlin
git config pretty\&.changelog "format:* %H %s"
would cause tha invocation
git log \-\-pretty=changelog
to be equivalent ta hustlin
git log "\-\-pretty=format:* %H %s"\&. Note dat a alias wit tha same name as a funky-ass built\-in format is ghon be silently ignored\&.
.RE
.PP
pull\&.rebase
.RS 4
When true, rebase branches on top of tha fetched branch, instead of mergin tha default branch from tha default remote when "git pull" is run\&. Right back up in yo muthafuckin ass. See "branch\&.<name>\&.rebase" fo' settin dis on a per\-branch basis\&.
.sp
.if n \{\
.RS 4
.\}
.nf
When preserve, also pass `\-\-preserve\-merges` along ta \(aqgit rebase\(aq
so dat locally committed merge commits aint gonna be flattened
by hustlin \(aqgit pull\(aq\&.
.fi
.if n \{\
.RE
.\}
.sp
\fBNOTE\fR: dis be a possibly fucked up operation; do
\fBnot\fR
use it unless you KNOW tha implications (see
\fBgit-rebase\fR(1)
for details)\&.
.RE
.PP
pull\&.octopus
.RS 4
Da default merge game ta use when pullin multiple branches at once\&.
.RE
.PP
pull\&.twohead
.RS 4
Da default merge game ta use when pullin a single branch\&.
.RE
.PP
push\&.default
.RS 4
Defines tha action
git push
should take if no refspec is explicitly given\&. Different joints is well\-suited fo' specific workflows; fo' instance, up in a purely central workflow (i\&.e\&. tha fetch source is equal ta tha push destination),
upstream
is probably what tha fuck you want\&. Possible joints are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
nothing
\- do not push anythang (error out) unless a refspec is explicitly given\&. This is primarily meant fo' playas whoz ass wanna avoid mistakes by always bein explicit\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
current
\- push tha current branch ta update a funky-ass branch wit tha same name on tha receivin end\&. Works up in both central n' non\-central workflows\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
upstream
\- push tha current branch back ta tha branch whose chizzlez is probably integrated tha fuck into tha current branch (which is called
@{upstream})\&. This mode only make sense if yo ass is pushin ta tha same repository you would normally pull from (i\&.e\&. central workflow)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
simple
\- up in centralized workflow, work like
upstream
with a added safety ta refuse ta push if tha upstream branch\(cqs name is different from tha local one\&.
.sp
When pushin ta a remote dat is different from tha remote you normally pull from, work as
current\&. This is tha safest option n' is suited fo' beginners\&.
.sp
This mode will become tha default up in Git 2\&.0\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
matching
\- push all branches havin tha same name on both ends\&. This make tha repository yo ass is pushin ta remember tha set of branches dat is ghon be pushed up (e\&.g\&. if you always push
\fImaint\fR
and
\fImaster\fR
there n' no other branches, tha repository you push ta gonna git these two branches, n' yo' local
\fImaint\fR
and
\fImaster\fR
will be pushed there)\&.
.sp
To use dis mode effectively, you gotta make sure
\fIall\fR
the branches you would push up is locked n loaded ta be pushed up before hustlin
\fIgit push\fR, as tha whole point of dis mode is ta allow you ta push all of tha branches up in one go\&. If you probably finish work on only one branch n' push up tha result, while other branches is unfinished, dis mode aint fo' you\& fo' realz. Also dis mode aint suitable fo' pushin tha fuck into a gangbangin' finger-lickin' dirty-ass shared central repository, as other playas may add freshly smoked up branches there, or update tha tip of existin branches outside yo' control\&.
.sp
This is currently tha default yo, but Git 2\&.0 will chizzle tha default to
simple\&.
.RE
.RE
.PP
rebase\&.stat
.RS 4
Whether ta show a gangbangin' finger-lickin' diffstat of what tha fuck chizzled upstream since tha last rebase\&. False by default\&.
.RE
.PP
rebase\&.autosquash
.RS 4
If set ta legit enable
\fI\-\-autosquash\fR
option by default\&.
.RE
.PP
rebase\&.autostash
.RS 4
When set ta true, automatically create a temporary stash before tha operation begins, n' apply it afta tha operation ends\&. This means dat you can run rebase on a gangbangin' finger-lickin' dirty worktree\&. But fuck dat shiznit yo, tha word on tha street is dat use wit care: tha final stash application afta a successful rebase might result up in non\-trivial conflicts\&. Defaults ta false\&.
.RE
.PP
receive\&.autogc
.RS 4
By default, git\-receive\-pack will run "git\-gc \-\-auto" afta receivin data from git\-push n' uppimpin refs\&. Yo ass can stop it by settin dis variable ta false\&.
.RE
.PP
receive\&.fsckObjects
.RS 4
If it is set ta true, git\-receive\-pack will check all received objects\&. Well shiiiit, it will abort up in tha case of a malformed object or a gangbangin' fucked up link\&. Da result of a abort is only danglin objects\&. Defaults ta false\&. If not set, tha value of
transfer\&.fsckObjects
is used instead\&.
.RE
.PP
receive\&.unpackLimit
.RS 4
If tha number of objects received up in a push is below dis limit then tha objects is ghon be unpacked tha fuck into loose object files\& yo. However if tha number of received objects equals or exceedz dis limit then tha received pack is ghon be stored as a pack, afta addin any missin delta bases\&. Right back up in yo muthafuckin ass. Storin tha pack from a push can make tha push operation complete faster, especially on slow filesystems\&. If not set, tha value of
transfer\&.unpackLimit
is used instead\&.
.RE
.PP
receive\&.denyDeletes
.RS 4
If set ta true, git\-receive\-pack will deny a ref update dat deletes tha ref\&. Use dis ta prevent such a ref deletion via a push\&.
.RE
.PP
receive\&.denyDeleteCurrent
.RS 4
If set ta true, git\-receive\-pack will deny a ref update dat deletes tha currently checked up branch of a non\-bare repository\&.
.RE
.PP
receive\&.denyCurrentBranch
.RS 4
If set ta legit or "refuse", git\-receive\-pack will deny a ref update ta tha currently checked up branch of a non\-bare repository\&. Right back up in yo muthafuckin ass. Such a push is potentially fucked up cuz it brangs tha HEAD outta sync wit tha index n' hustlin tree\&. If set ta "warn", print a warnin of such a push ta stderr yo, but allow tha push ta proceed\&. If set ta false or "ignore", allow such pushes wit no message\&. Defaults ta "refuse"\&.
.RE
.PP
receive\&.denyNonFastForwards
.RS 4
If set ta true, git\-receive\-pack will deny a ref update which aint a gangbangin' fast\-forward\&. Use dis ta prevent such a update via a push, even if dat push is forced\&. This configuration variable is set when initializin a gangbangin' finger-lickin' dirty-ass shared repository\&.
.RE
.PP
receive\&.hiderefs
.RS 4
String(s)
receive\-pack
uses ta decizzle which refs ta omit from its initial advertisement\&. Use mo' than one definitions ta specify multiple prefix strings\& fo' realz. A ref dat is under tha hierarchies listed on tha value of dis variable is excluded, n' is hidden when respondin to
git push, n' a attempt ta update or delete a hidden ref by
git push
is rejected\&.
.RE
.PP
receive\&.updateserverinfo
.RS 4
If set ta true, git\-receive\-pack will run git\-update\-server\-info afta receivin data from git\-push n' uppimpin refs\&.
.RE
.PP
receive\&.shallowupdate
.RS 4
If set ta true, \&.git/shallow can be updated when freshly smoked up refs require freshly smoked up shallow roots\&. Otherwise dem refs is rejected\&.
.RE
.PP
remote\&.pushdefault
.RS 4
Da remote ta push ta by default\&. Overrides
branch\&.<name>\&.remote
for all branches, n' is overridden by
branch\&.<name>\&.pushremote
for specific branches\&.
.RE
.PP
remote\&.<name>\&.url
.RS 4
Da URL of a remote repository\&. Right back up in yo muthafuckin ass. See
\fBgit-fetch\fR(1)
or
\fBgit-push\fR(1)\&.
.RE
.PP
remote\&.<name>\&.pushurl
.RS 4
Da push URL of a remote repository\&. Right back up in yo muthafuckin ass. See
\fBgit-push\fR(1)\&.
.RE
.PP
remote\&.<name>\&.proxy
.RS 4
For remotes dat require curl (http, https n' ftp), tha URL ta tha proxy ta use fo' dat remote\&. Right back up in yo muthafuckin ass. Set ta tha empty strang ta disable proxyin fo' dat remote\&.
.RE
.PP
remote\&.<name>\&.fetch
.RS 4
Da default set of "refspec" for
\fBgit-fetch\fR(1)\&. Right back up in yo muthafuckin ass. See
\fBgit-fetch\fR(1)\&.
.RE
.PP
remote\&.<name>\&.push
.RS 4
Da default set of "refspec" for
\fBgit-push\fR(1)\&. Right back up in yo muthafuckin ass. See
\fBgit-push\fR(1)\&.
.RE
.PP
remote\&.<name>\&.mirror
.RS 4
If true, pushin ta dis remote will automatically behave as if the
\-\-mirror
option was given on tha command line\&.
.RE
.PP
remote\&.<name>\&.skipDefaultUpdate
.RS 4
If true, dis remote is ghon be skipped by default when uppimpin using
\fBgit-fetch\fR(1)
or the
update
subcommand of
\fBgit-remote\fR(1)\&.
.RE
.PP
remote\&.<name>\&.skipFetchAll
.RS 4
If true, dis remote is ghon be skipped by default when uppimpin using
\fBgit-fetch\fR(1)
or the
update
subcommand of
\fBgit-remote\fR(1)\&.
.RE
.PP
remote\&.<name>\&.receivepack
.RS 4
Da default program ta execute on tha remote side when pushing\&. Right back up in yo muthafuckin ass. See option \-\-receive\-pack of
\fBgit-push\fR(1)\&.
.RE
.PP
remote\&.<name>\&.uploadpack
.RS 4
Da default program ta execute on tha remote side when fetching\&. Right back up in yo muthafuckin ass. See option \-\-upload\-pack of
\fBgit-fetch-pack\fR(1)\&.
.RE
.PP
remote\&.<name>\&.tagopt
.RS 4
Settin dis value ta \-\-no\-tags disablez automatic tag followin when fetchin from remote <name>\&. Right back up in yo muthafuckin ass. Settin it ta \-\-tags will fetch every last muthafuckin tag from remote <name>, even if they is not reachable from remote branch heads\&. Passin these flags directly to
\fBgit-fetch\fR(1)
can override dis setting\&. Right back up in yo muthafuckin ass. See options \-\-tags n' \-\-no\-tags of
\fBgit-fetch\fR(1)\&.
.RE
.PP
remote\&.<name>\&.vcs
.RS 4
Settin dis ta a value <vcs> will cause Git ta interact wit tha remote wit tha git\-remote\-<vcs> helper\&.
.RE
.PP
remote\&.<name>\&.prune
.RS 4
When set ta true, fetchin from dis remote by default will also remove any remote\-trackin references dat no longer exist on tha remote (as if the
\-\-prune
option was given on tha command line)\&. Overrides
fetch\&.prune
settings, if any\&.
.RE
.PP
remotes\&.<group>
.RS 4
Da list of remotes which is fetched by "git remote update <group>"\&. Right back up in yo muthafuckin ass. See
\fBgit-remote\fR(1)\&.
.RE
.PP
repack\&.usedeltabaseoffset
.RS 4
By default,
\fBgit-repack\fR(1)
creates packs dat use delta\-base offset\&. If you need ta share yo' repository wit Git olda than version 1\&.4\&.4, either directly or via a thugged-out dumb protocol like fuckin http, then you need ta set dis option ta "false" n' repack\& fo' realz. Access from oldschool Git versions over tha natizzle protocol is unaffected by dis option\&.
.RE
.PP
rerere\&.autoupdate
.RS 4
When set ta true,
git\-rerere
updates tha index wit tha resultin contents afta it cleanly resolves conflicts rockin previously recorded resolution\&. Defaults ta false\&.
.RE
.PP
rerere\&.enabled
.RS 4
Activate recordin of resolved conflicts, so dat identical conflict hunks can be resolved automatically, should they be encountered again\&. By default,
\fBgit-rerere\fR(1)
is enabled if there be an
rr\-cache
directory under the
$GIT_DIR, e\&.g\&. if "rerere" was previously used up in tha repository\&.
.RE
.PP
sendemail\&.identity
.RS 4
A configuration identity\&. When given, causes joints up in the
\fIsendemail\&.<identity>\fR
subsection ta take precedence over joints up in the
\fIsendemail\fR
section\&. Da default identitizzle is tha value of
\fIsendemail\&.identity\fR\&.
.RE
.PP
sendemail\&.smtpencryption
.RS 4
See
\fBgit-send-email\fR(1)
for description\&. Note dat dis settin aint subject ta the
\fIidentity\fR
mechanism\&.
.RE
.PP
sendemail\&.smtpssl
.RS 4
Deprecated alias for
\fIsendemail\&.smtpencryption = ssl\fR\&.
.RE
.PP
sendemail\&.smtpsslcertpath
.RS 4
Path ta ca\-certificates (either a gangbangin' finger-lickin' directory or a single file)\&. Right back up in yo muthafuckin ass. Set it ta a empty strang ta disable certificate verification\&.
.RE
.PP
sendemail\&.<identity>\&.*
.RS 4
Identity\-specific versionz of the
\fIsendemail\&.*\fR
parametas found below, takin precedence over dem when tha dis identitizzle is selected, all up in command\-line or
\fIsendemail\&.identity\fR\&.
.RE
.PP
sendemail\&.aliasesfile, sendemail\&.aliasfiletype, sendemail\&.annotate, sendemail\&.bcc, sendemail\&.cc, sendemail\&.cccmd, sendemail\&.chainreplyto, sendemail\&.confirm, sendemail\&.envelopesender, sendemail\&.from, sendemail\&.multiedit, sendemail\&.signedoffbycc, sendemail\&.smtppass, sendemail\&.suppresscc, sendemail\&.suppressfrom, sendemail\&.to, sendemail\&.smtpdomain, sendemail\&.smtpserver, sendemail\&.smtpserverport, sendemail\&.smtpserveroption, sendemail\&.smtpuser, sendemail\&.thread, sendemail\&.validate
.RS 4
See
\fBgit-send-email\fR(1)
for description\&.
.RE
.PP
sendemail\&.signedoffcc
.RS 4
Deprecated alias for
\fIsendemail\&.signedoffbycc\fR\&.
.RE
.PP
showbranch\&.default
.RS 4
Da default set of branches for
\fBgit-show-branch\fR(1)\&. Right back up in yo muthafuckin ass. See
\fBgit-show-branch\fR(1)\&.
.RE
.PP
status\&.relativePaths
.RS 4
By default,
\fBgit-status\fR(1)
shows paths relatizzle ta tha current directory\&. Right back up in yo muthafuckin ass. Settin dis variable to
false
shows paths relatizzle ta tha repository root (this was tha default fo' Git prior ta v1\&.5\&.4)\&.
.RE
.PP
status\&.short
.RS 4
Set ta legit ta enable \-\-short by default in
\fBgit-status\fR(1)\&. Da option \-\-no\-short takes precedence over dis variable\&.
.RE
.PP
status\&.branch
.RS 4
Set ta legit ta enable \-\-branch by default in
\fBgit-status\fR(1)\&. Da option \-\-no\-branch takes precedence over dis variable\&.
.RE
.PP
status\&.displayCommentPrefix
.RS 4
If set ta true,
\fBgit-status\fR(1)
will bang a cold-ass lil comment prefix before each output line (startin with
core\&.commentChar, i\&.e\&.
#
by default)\&. This was tha behavior of
\fBgit-status\fR(1)
in Git 1\&.8\&.4 n' previous\&. Defaults ta false\&.
.RE
.PP
status\&.showUntrackedFiles
.RS 4
By default,
\fBgit-status\fR(1)
and
\fBgit-commit\fR(1)
show filez which is not currently tracked by Git\&. Directories which contain only untracked files, is shown wit tha directory name only\&. Right back up in yo muthafuckin ass. Showin untracked filez means dat Git need ta lstat() all all tha filez up in tha whole repository, which might be slow on some systems\&. Right back up in yo muthafuckin ass. So, dis variable controls how tha fuck tha commandz displays tha untracked files\&. Possible joints are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
no
\- Show no untracked files\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
normal
\- Show untracked filez n' directories\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
all
\- Show also individual filez up in untracked directories\&.
.RE
.sp
If dis variable aint specified, it defaults to
\fInormal\fR\&. This variable can be overridden wit tha \-u|\-\-untracked\-filez option of
\fBgit-status\fR(1)
and
\fBgit-commit\fR(1)\&.
.RE
.PP
status\&.submodulesummary
.RS 4
Defaults ta false\&. If dis is set ta a non zero number or legit (identical ta \-1 or a unlimited number), tha submodule summary is ghon be enabled n' a summary of commits fo' modified submodulez is ghon be shown (see \-\-summary\-limit option of
\fBgit-submodule\fR(1))\&. Please note dat tha summary output command is ghon be suppressed fo' all submodulez when
diff\&.ignoreSubmodules
is set to
\fIall\fR
or only fo' dem submodulez where
submodule\&.<name>\&.ignore=all\&. To also view tha summary fo' ignored submodulez you can either use tha \-\-ignore\-submodules=dirty command line option or the
\fIgit submodule summary\fR
command, which shows a similar output but do not honor these settings\&.
.RE
.PP
submodule\&.<name>\&.path, submodule\&.<name>\&.url, submodule\&.<name>\&.update
.RS 4
Da path within dis project, URL, n' tha uppimpin game fo' a submodule\&. These variablez is initially populated by
\fIgit submodule init\fR; edit dem ta override tha URL n' other joints found up in the
\&.gitmodules
file\&. Right back up in yo muthafuckin ass. See
\fBgit-submodule\fR(1)
and
\fBgitmodules\fR(5)
for details\&.
.RE
.PP
submodule\&.<name>\&.branch
.RS 4
Da remote branch name fo' a submodule, used by
git submodule update \-\-remote\&. Right back up in yo muthafuckin ass. Set dis option ta override tha value found up in the
\&.gitmodules
file\&. Right back up in yo muthafuckin ass. See
\fBgit-submodule\fR(1)
and
\fBgitmodules\fR(5)
for details\&.
.RE
.PP
submodule\&.<name>\&.fetchRecurseSubmodules
.RS 4
This option can be used ta control recursive fetchin of dis submodule\&. Well shiiiit, it can be overridden by rockin tha \-\-[no\-]recurse\-submodulez command line option ta "git fetch" n' "git pull"\&. This settin will override dat from up in the
\fBgitmodules\fR(5)
file\&.
.RE
.PP
submodule\&.<name>\&.ignore
.RS 4
Defines under what tha fuck circumstances "git status" n' tha diff crew show a submodule as modified\&. When set ta "all", it aint NEVER gonna be considered modified, "dirty" will ignore all chizzlez ta tha submodulez work tree n' takes only differences between tha HEAD of tha submodule n' tha commit recorded up in tha superproject tha fuck into account\&. "untracked" will additionally let submodulez wit modified tracked filez up in they work tree show up\&. Usin "none" (the default when dis option aint set) also shows submodulez dat have untracked filez up in they work tree as chizzled\&. This settin overrides any settin made up in \&.gitmodulez fo' dis submodule, both settings can be overridden on tha command line by rockin tha "\-\-ignore\-submodules" option\&. The
\fIgit submodule\fR
commandz is not affected by dis setting\&.
.RE
.PP
tar\&.umask
.RS 4
This variable can be used ta restrict tha permission bitz of tar archive entries\&. Da default is 0002, which turns off tha ghetto write bit\&. Da special value "user" indicates dat tha archivin user\(cqs umask is ghon be used instead\&. Right back up in yo muthafuckin ass. See umask(2) and
\fBgit-archive\fR(1)\&.
.RE
.PP
transfer\&.fsckObjects
.RS 4
When
fetch\&.fsckObjects
or
receive\&.fsckObjects
are not set, tha value of dis variable is used instead\&. Defaults ta false\&.
.RE
.PP
transfer\&.hiderefs
.RS 4
This variable can be used ta set both
receive\&.hiderefs
and
uploadpack\&.hiderefs
at tha same time ta tha same joints\&. Right back up in yo muthafuckin ass. See entries fo' these other variables\&.
.RE
.PP
transfer\&.unpackLimit
.RS 4
When
fetch\&.unpackLimit
or
receive\&.unpackLimit
are not set, tha value of dis variable is used instead\&. Da default value is 100\&.
.RE
.PP
uploadpack\&.hiderefs
.RS 4
String(s)
upload\-pack
uses ta decizzle which refs ta omit from its initial advertisement\&. Use mo' than one definitions ta specify multiple prefix strings\& fo' realz. A ref dat is under tha hierarchies listed on tha value of dis variable is excluded, n' is hidden from
git ls\-remote,
git fetch, etc\& fo' realz. An attempt ta fetch a hidden ref by
git fetch
will fail\&. Right back up in yo muthafuckin ass. See also
uploadpack\&.allowtipsha1inwant\&.
.RE
.PP
uploadpack\&.allowtipsha1inwant
.RS 4
When
uploadpack\&.hiderefs
is up in effect, allow
upload\-pack
to accept a gangbangin' fetch request dat asks fo' a object all up in tha tip of a hidden ref (by default, such a request is rejected)\&. peep also
uploadpack\&.hiderefs\&.
.RE
.PP
uploadpack\&.keepkickin it
.RS 4
When
upload\-pack
has started
pack\-objects, there may be a on tha down-low period while
pack\-objects
prepares tha pack\&. Normally it would output progress shiznit yo, but if
\-\-quiet
was used fo' tha fetch,
pack\-objects
will output not a god damn thang at all until tha pack data begins\&. Right back up in yo muthafuckin ass. Some clients n' networks may consider tha server ta be hung n' give up\&. Right back up in yo muthafuckin ass. Settin dis option instructs
upload\-pack
to bust a empty keepkickin it packet every
uploadpack\&.keepkickin it
seconds\&. Right back up in yo muthafuckin ass. Settin dis option ta 0 disablez keepkickin it packets entirely\&. Da default is 5 seconds\&.
.RE
.PP
url\&.<base>\&.insteadOf
.RS 4
Any URL dat starts wit dis value is ghon be rewritten ta start, instead, wit <base>\&. In cases where some joint serves a big-ass number of repositories, n' serves dem wit multiple access methods, n' some playas need ta use different access methods, dis feature allows playas ta specify any of tha equivalent URLs n' have Git automatically rewrite tha URL ta tha dopest alternatizzle fo' tha particular user, even fo' a never\-before\-seen repository on tha crib\&. When mo' than one insteadOf strings match a given URL, tha longest match is used\&.
.RE
.PP
url\&.<base>\&.pushInsteadOf
.RS 4
Any URL dat starts wit dis value aint gonna be pushed to; instead, it is ghon be rewritten ta start wit <base>, n' tha resultin URL is ghon be pushed to\&. In cases where some joint serves a big-ass number of repositories, n' serves dem wit multiple access methods, a shitload of which do not allow push, dis feature allows playas ta specify a pull\-only URL n' have Git automatically use a appropriate URL ta push, even fo' a never\-before\-seen repository on tha crib\&. When mo' than one pushInsteadOf strings match a given URL, tha longest match is used\&. If a remote has a explicit pushurl, Git will ignore dis settin fo' dat remote\&.
.RE
.PP
user\&.email
.RS 4
Yo crazy-ass email address ta be recorded up in any newly pimped commits\&. Can be overridden by the
\fIGIT_AUTHOR_EMAIL\fR,
\fIGIT_COMMITTER_EMAIL\fR, and
\fIEMAIL\fR
environment variables\&. Right back up in yo muthafuckin ass. See
\fBgit-commit-tree\fR(1)\&.
.RE
.PP
user\&.name
.RS 4
Yo crazy-ass full name ta be recorded up in any newly pimped commits\&. Can be overridden by the
\fIGIT_AUTHOR_NAME\fR
and
\fIGIT_COMMITTER_NAME\fR
environment variables\&. Right back up in yo muthafuckin ass. See
\fBgit-commit-tree\fR(1)\&.
.RE
.PP
user\&.signingkey
.RS 4
If
\fBgit-tag\fR(1)
or
\fBgit-commit\fR(1)
is not selectin tha key you want it ta automatically when bustin a signed tag or commit, you can override tha default selection wit dis variable\&. This option is passed unchanged ta gpg\(cqs \-\-local\-user parameter, so you may specify a key rockin any method dat gpg supports\&.
.RE
.PP
web\&.browser
.RS 4
Specify a wizzy browser dat may be used by some commands\&. Currently only
\fBgit-instaweb\fR(1)
and
\fBgit-help\fR(1)
may use it\&.
.RE
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
