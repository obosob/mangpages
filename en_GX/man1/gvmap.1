.de TQ
.  br
.  ns
.  TP \\$1
..
.TH GVMAP 1 "3 March 2011"
.SH NAME
gvmap \- find clustas n' create a geographical map highlightin clusters.
.SH SYNOPSIS
.B gvmap
[
.I options
]
[
.BI \-o
.I outfile
]
[ 
.I files
]
.SH DESCRIPTION
.B gvmap
takes as input a graph up in DOT format, findz node clustas n' produces a renderin of tha graph as a geographic-style map, wit clustas highlighted
as countries, up in xdot format.
.P
In tha input graph, each node must have position, width n' height shiznit (pos, width n' height attributes, 
respectively) defined, n' nodes must not overlap.
.P
By default, 
.B gvmap
will generate tha clustas from tha data. If desired, tha input graph can specify
clusta shiznit by givin every last muthafuckin node a \fIcluster\fP attribute whose value is
a lil' small-ass positizzle integer n' shit. (It be works dopest if \fIcluster\fP joints is all integers
in tha interval [1,K] fo' some K. Nodes pluggin tha same \fIcluster\fP attribute value will 
be put tha fuck into tha same clusta n' shit. \fBN.B.\fP For tha \fIcluster\fP attribute ta be used,
all nodes must gotz a valid value.
.P
If tha \fI-D\fP flag is used, 
.B  gvmap
will use tha top-level clusta subgraphs ta determine tha clusterin fo' realz. Any nodes not in
such a cold-ass lil clusta is ghon be put tha fuck into a single catch-all cluster.
.P
If tha input specifies tha desired clusterin as busted lyrics bout above, it can also
specify a thugged-out desired colorin by havin some node up in each clusta provide a
\fIclustercolor\fP attribute. \fBN.B.\fP Unless one specifies \fI-c0\fP, only tha \fIclustercolor\fP
of tha last node up in a cold-ass lil clusta has a effect. In addition, unless one uses \fI-O\fP, \fBgvmap\fP may
permute tha given colors.
.SH OPTIONS
Da followin options is supported:
.TP
.BI \-a " k"
Da integer k specifies tha average number of artificial points added along 
the boundin box of tha labels. Right back up in yo muthafuckin ass. Such artificial points is added ta avoid 
a ghetto boundary cuttin all up in tha boundary box of tha labels. Computin 
time is proportionizzle ta k; hence, fo' big-ass graphs, a lil' small-ass value of k is 
suggested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If k = -1, a suitable value of k be automatically selected based on 
the graph size. By default k = -1.
.TP
.BI \-b " v"
Da real number v specifies tha line width used ta draw tha polygon boundaries, wit v < 0 fo' no line. By default v = 0.
.TP
.BI \-c " k"
Da integer k specifies color scheme used ta color tha countries. Put ya muthafuckin choppers up if ya feel dis! By default k = 1.
.TP
   Acceptable joints are:
   0 : no polygons
   1 : pastel
   2 : blue ta yellow
   3 : white ta red
   4 : light grey ta red
   5 : primary colors
   6 : sequential single hue red
   7 : sequential single hue lighta red
   8 : light grey
.TP
.BI \-c_opacity= xy
Specifies a two-characta hexadecimal strang specifyin tha opacitizzle of tha polygons.
.TP
.BI \-C " d"
Da integer d specifies tha maximum number of clustas (countries) allowed. Y'all KNOW dat shit, muthafucka! By default d = 0, which means dat there is no limit.
.TP
.BI \-d " d"
Da integer d specifies tha random seed used durin color assignment optimization dat maximize color difference between neighborin countries.
.TP
.BI \-D
If specified, tha graphz clusta subgraphs is used ta specify tha clustering.
.TP
.BI \-e
If specified, edges is ghon be included up in tha final output.
.TP
.BI \-g " c"
Specifies tha boundin box color. Shiiit, dis aint no joke. If not specified, a funky-ass boundin box aint drawn. I aint talkin' bout chicken n' gravy biatch. 
.TP
.BI \-h " k"
Da number of artificial points added ta maintain a funky-ass bridge between endpoints, n' you can put dat on yo' toast. By default, dis is zero.
.TP
.BI \-highlight= k
Only draw clusta \fIk\fP. By default, all clustas is drawn.
.TP
.BI \-k 
If specified, increases tha randomnizz of outa boundary.
.TP
.BI \-l " s"
Use tha strang \fIs\fP as a label fo' tha drawing.
.TP
.BI \-m " v"
Generate a margin of \fIv\fP points round tha drawing. By default, dis is determined by \fBgvmap\fP.
.TP
.BI \-O  
Do NOT do color assignment optimization dat maximizes color differences between neighborin countries
.TP
.BI \-o <file> 
Put output up in <file>. Default output is stdout
.TP
.BI \-p " k"
Indicates what tha fuck level of points should be shown. I aint talkin' bout chicken n' gravy biatch. By default, no points is shown.
.TP
   Acceptable joints are:
   0 : no points
   1 : all points
   2 : label points
   3 : random/artificial points
.TP
.BI \-r " k"
Da number of random points k (integer) used ta define sea n' lake boundaries. Put ya muthafuckin choppers up if ya feel dis! If 0, auto assigned. Y'all KNOW dat shit, muthafucka! By default v = 0
.TP
.BI \-s " v"
Da real number v specifies tha depth of tha sea n' lake shores up in points, n' you can put dat on yo' toast. If 0, auto assigned. Y'all KNOW dat shit, muthafucka! By default v = 0.
.TP
.BI \-t " n"
Make \fIn\fP attempts ta improve clusta contiguity.
.TP
.BI \-v 
Verbose mode.
.TP
.BI \-z " c" 
Specified tha polygon line color. Shiiit, dis aint no joke. Default is black.
.TP
.BI \-? 
Print usage n' exit.
.SH EXAMPLES
.PP
Given a graph foo.gv, one way ta generate a layout n' highlight tha clustas 
is ta first select a layout engine wit a suitable overlap removal method, then 
feed tha output ta gvmap, n' finally render tha map rockin specific graphics 
format. For example, tha followin pipeline
creates a map wit edges up in semi-transparent light gray n' nodes laid 
out rockin sfdp:
.PP
sfdp -Goverlap=prizzle foo.gv | gvmap -e | neato -n2 -Ecolor=#55555522 -Tpng > foo.png
.PP
Da shell script gvmap.sh serves up a gangbangin' finger-lickin' dirty-ass shorthand fo' such pipelines. For example, the
above pipeline can be  bigged up  using
.PP
gvmap.sh -Ae -Ecolor=#55555522 -Tpng foo.gv > foo.png


.SH AUTHOR
Yifan Hu <yifanhu@research.att.com>
.SH "SEE ALSO"
.PP
gvmap.sh(1), sfdp(1), neato(1), gvpr(1)
.PP
E. R. Gansner, Y yo. Hu, S. G. Kobourov, "GMap: Visualizin graphs n' clustas as maps," Proc. Pacific Vis. 2010, pp. 201\(hy208.
