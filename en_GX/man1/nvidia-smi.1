.TH "nvidia\-smi" "1" "2014/12/1" "nvidia\-smi 331.113" "NVIDIA"


.SH "NAME"
.PP
nvidia\-smi \- NVIDIA System Management Interface program


.SH "SYNOPSIS"
.PP
nvidia-smi [OPTION1 [ARG1]] [OPTION2 [ARG2]] ...


.PP 
.SH "DESCRIPTION"
.PP 
NVSMI serves up monitorin shiznit fo' each of NVIDIA\(aqs Tesla devices n' each of its high-end Fermi-based n' Kepler-based Quadro devices.
It serves up straight-up limited shiznit fo' other typez of NVIDIA devices.
See NVML documentation at \fIhttp://developer.nvidia.com/nvidia-management-library-nvml\fR fo' what tha fuck features is supported on a particular device.
Da data is presented up in either plain text or XML format, via stdout or a gangbangin' file.
NVSMI also serves up nuff muthafuckin pimpment operations fo' changin thang state.
.PP
Note dat tha functionalitizzle of NVSMI is exposed all up in tha NVML C-based library.
See tha NVIDIA pimper joint fo' mo' shiznit bout NVML.
Python n' Perl wrappers ta NVML is also available.
Da output of NVSMI aint guaranteed ta be backwardz compatible; NVML n' tha bindings is backwardz compatible.
.PP
\fIhttp://developer.nvidia.com/nvidia-management-library-nvml/\fR
.PP
\fIhttp://pypi.python.org/pypi/nvidia-ml-py/\fR
.PP
\fIhttp://search.cpan.org/search?query=nvidia%3A%3Aml\fR


.PP
.SH "OPTIONS" 
.SS
GENERAL OPTIONS
.SS "\-h, \-\-help"
Print usage shiznit n' exit.

.SS
SUMMARY OPTIONS
.SS "\-L, \-\-list\-gpus"
List each of tha NVIDIA GPUs up in tha system, along wit they UUIDs.

.SS
QUERY OPTIONS
.SS "\-q, \-\-query"
Display GPU or Unit info.
Displayed info includes all data listed up in tha (\fIGPU ATTRIBUTES\fR) or (\fIUNIT ATTRIBUTES\fR) sectionz of dis document.
Some devices and/or environments don\(aqt support all possible shiznit.
Any unsupported data is indicated by a "N/A" up in tha output.
By default shiznit fo' all available GPUs or Units is displayed.
Use tha \fB\-i\fR option ta restrict tha output ta a single GPU or Unit.

.SS
[plus optional]

.SS "\-u, \-\-unit"
Display Unit data instead of GPU data.
Unit data is only available fo' NVIDIA S\-class Tesla enclosures.

.SS "\-i, \-\-id=ID"
Display data fo' a single specified GPU or Unit.
Da specified id may be tha GPU/Unit\(aqs 0\-based index up in tha natural enumeration returned by tha driver, tha GPU\(aqs board serial number, tha GPU\(aqs UUID, or tha GPU\(aqs PCI bus ID (as domain:bus:device.function up in hex).
It be recommended dat playas desirin consistency use either UUID or PCI bus ID, since thang enumeration orderin aint guaranteed ta be consistent between reboots n' board serial number might be shared between multiple GPUs on tha same board.

.SS "\-f FILE, \-\-filename=FILE"
Redirect query output ta tha specified file up in place of tha default stdout.
Da specified file is ghon be overwritten.

.SS "\-x, \-\-xml\-format"
Produce XML output up in place of tha default human\-readable format.
Both GPU n' Unit query outputs conform ta correspondin DTDs.
These is available via tha \fB\-\-dtd\fR flag.

.SS "\-\-dtd"
Use wit \fB\-x\fR.
Embed tha DTD up in tha XML output.

.SS "\-d TYPE, \-\-display=TYPE"
Display only selected shiznit: MEMORY, UTILIZATION, ECC, TEMPERATURE, POWER, CLOCK, COMPUTE, PIDS, PERFORMANCE, SUPPORTED_CLOCKS, PAGE_RETIREMENT, ACCOUNTING
Flags can be combined wit comma e.g.
"MEMORY,ECC".
Doesn\(aqt work wit -u/--unit or -x/--xml-format flags.

.SS "\-l SEC, \-\-loop=SEC"
Continuously report query data all up in tha specified interval, rather than tha default of just once.
Da application will chill in\-between queries.
Note dat on Linux ECC error or XID error events will print up durin tha chill period if tha \fI-x\fR flag was not specified.
Pressin Ctrl+C at any time will abort tha loop, which will otherwise run indefinitely.
If no argument is specified fo' tha \fB\-l\fR form a thugged-out default interval of 5 secondz is used.

.SS
SELECTIVE QUERY OPTIONS
Allows tha calla ta pass a explicit list of propertizzles ta query.

.SS
[one of]

.SS "\-\-query\-gpu=
Hype bout GPU.
Pass comma separated list of propertizzles you wanna query.
e.g. \-\-query\-gpu=pci.bus_id,persistence_mode.
Call \-\-help\-query\-gpu fo' mo' info.

.SS "\-\-query\-supported\-clocks="
List of supported clocks.
Call \-\-help\-query\-supported\-clocks fo' mo' info.

.SS "\-\-query\-compute\-apps="
List of currently actizzle compute processes.
Call \-\-help\-query\-compute\-apps fo' mo' info.

.SS "\-\-query\-accounted\-apps="
List of accounted compute processes.
Call \-\-help\-query\-accounted\-apps fo' mo' info.

.SS "\-\-query\-retired\-pages="
List of GPU thang memory pages dat done been retired.
Call \-\-help\-query\-retired\-pages fo' mo' info.

.SS
[mandatory]

.SS "\-\-format="
Comma separated list of format options:
.IP \[bu] 
csv - comma separated joints (MANDATORY)
.IP \[bu] 
noheader - skip first line wit column headers
.IP \[bu] 
nounits - don't print units fo' numerical joints

.SS
[plus any of]

.SS "\-i, \-\-id=ID"
Display data fo' a single specified GPU.
Da specified id may be tha GPU\(aqs 0\-based index up in tha natural enumeration returned by tha driver, tha GPU\(aqs board serial number, tha GPU\(aqs UUID, or tha GPU\(aqs PCI bus ID (as domain:bus:device.function up in hex).
It be recommended dat playas desirin consistency use either UUID or PCI bus ID, since thang enumeration orderin aint guaranteed ta be consistent between reboots n' board serial number might be shared between multiple GPUs on tha same board.

.SS "\-f FILE, \-\-filename=FILE"
Redirect query output ta tha specified file up in place of tha default stdout.
Da specified file is ghon be overwritten.

.SS "\-l SEC, \-\-loop=SEC"
Continuously report query data all up in tha specified interval, rather than tha default of just once.
Da application will chill in\-between queries.
Note dat on Linux ECC error or XID error events will print up durin tha chill period if tha \fI-x\fR flag was not specified.
Pressin Ctrl+C at any time will abort tha loop, which will otherwise run indefinitely.
If no argument is specified fo' tha \fB\-l\fR form a thugged-out default interval of 5 secondz is used.

.SS "\-lms ms, \-\-loop\-ms=ms"
Same as \-l,\-\-loop but up in milliseconds.

.SS
DEVICE MODIFICATION OPTIONS

.SS
[any one of]

.SS "\-pm, \-\-persistence\-mode=MODE"
Set tha persistence mode fo' tha target GPUs.
See tha (\fIGPU ATTRIBUTES\fR) section fo' a thugged-out description of persistence mode.
Requires root.
Will impact all GPUs unless a single GPU is specified rockin tha \fI\-i\fR argument.
Da effect of dis operation is immediate.
But fuck dat shiznit yo, tha word on tha street is dat it do not persist across reboots.
Afta each reboot persistence mode will default ta "Disabled".
Available on Linux only.

.SS "\-e, \-\-ecc\-config=CONFIG"
Set tha ECC mode fo' tha target GPUs.
See tha (\fIGPU ATTRIBUTES\fR) section fo' a thugged-out description of ECC mode.
Requires root.
Will impact all GPUs unless a single GPU is specified rockin tha \fI\-i\fR argument.
This settin takes effect afta tha next reboot n' is persistent.

.SS "\-p, \-\-reset\-ecc\-errors=TYPE"
Reset tha ECC error countas fo' tha target GPUs.
See tha (\fIGPU ATTRIBUTES\fR) section fo' a thugged-out description of ECC error counta types.
Available arguments is 0|VOLATILE or 1|AGGREGATE.
Requires root.
Will impact all GPUs unless a single GPU is specified rockin tha \fI\-i\fR argument.
Da effect of dis operation is immediate.

.SS "\-c, \-\-compute\-mode=MODE"
Set tha compute mode fo' tha target GPUs.
See tha (\fIGPU ATTRIBUTES\fR) section fo' a thugged-out description of compute mode.
Requires root.
Will impact all GPUs unless a single GPU is specified rockin tha \fI\-i\fR argument.
Da effect of dis operation is immediate.
But fuck dat shiznit yo, tha word on tha street is dat it do not persist across reboots.
Afta each reboot compute mode will reset ta "DEFAULT".

.SS "\-dm TYPE, \-\-driver\-model=TYPE"
.SS "\-fdm TYPE, \-\-force\-driver\-model=TYPE"
Enable or disable TCC driver model.
For Windows only.
Requires administrator privileges.
\fI\-dm\fR will fail if a gangbangin' finger-lickin' display be attached yo, but \fI\-fdm\fR will force tha driver model ta chizzle.
Will impact all GPUs unless a single GPU is specified rockin tha \fI\-i\fR argument.
A reboot is required fo' tha chizzle ta take place.
See \fBDriver Model\fR fo' mo' shiznit on Windows driver models.

.SS "     \-\-gom=MODE"
Set GPU Operation Mode: 0/ALL_ON, 1/COMPUTE, 2/LOW_DP
Supported on GK110 M-class n' X-class Tesla shizzle from tha Kepla crew.
Not supported on Quadro n' Tesla C-class shizzle.
Requires administrator privileges.
See \fIGPU Operation Mode\fR fo' mo' shiznit bout GOM.
GOM chizzlez take effect afta reboot.
Da reboot requirement might be removed up in tha future.
Compute only GOMs don't support WDDM (Windows Display Driver Model)

.SS "\-r, \-\-gpu\-reset"
Trigger a reset of tha GPU.
Can be used ta clear GPU HW n' SW state up in thangs dat would otherwise require a machine reboot.
Typically useful if a thugged-out double bit ECC error has occurred.
Requires \fI\-i\fR switch ta target specific device.
Requires root.
There can\(aqt be any applications rockin dis particular thang (e.g. CUDA application, graphics application like X server, monitorin application like other instizzle of nvidia-smi).
There also can\(aqt be any compute applications hustlin on any other GPU up in tha system.
Only on supported devices from Fermi n' Kepla crew hustlin on Linux.

GPU reset aint guaranteed ta work up in all cases. Well shiiiit, it aint recommended fo' thang environments at dis time.
In some thangs there may be HW components on tha board dat fail ta revert back ta a initial state followin tha reset request.
This is mo' likely ta be peeped on Fermi-generation shizzle vs. Kepler, n' mo' likely ta be peeped if tha reset is bein performed on a hung GPU.

Peepin a reset, it is recommended dat tha game of tha GPU be verified before further use.
Da nvidia-healthmon tool be a phat chizzle fo' dis test.
If tha GPU aint healthy a cold-ass lil complete reset should be instigated by juice cyclin tha node.
nvidia-healthmon is distributed as a part of GDK \fIhttp://developer.nvidia.com/gpu-deployment-kit\fR

.SS "\-ac, \-\-applications\-clocks=MEM_CLOCK,GRAPHICS_CLOCK"
Specifies maximum <memory,graphics> clocks as a pair (e.g. 2000,800) dat defines GPUz speed while hustlin applications on a GPU.
Only on Tesla devices from tha Kepler+ crew.
Requires root unless restrictions is chillaxed wit tha \-acp command..

.SS "\-rac, \-\-reset\-applications\-clocks"
Resets tha applications clocks ta tha default value.
Only on Tesla devices from Kepler+ crew.
Requires root unless restrictions is chillaxed wit tha \-acp command.

.SS "\-acp, \-\-applications\-clocks\-permission"
Toggle whether applications clocks can be chizzled by all playas or only by root.
Only on Tesla devices from tha Kepler+ crew.
Requires root.

.SS "\-pl, \-\-power\-limit=POWER_LIMIT"
Specifies maximum juice limit up in watts.
Accepts integer n' floatin point numbers.
Only on supported devices from Kepla crew.
Requires administrator privileges.
Value need ta be between Min n' Max Juice Limit as reported by nvidia-smi.

.SS "\-am, \-\-accounting\-mode"
Enablez or disablez GPU Accounting.
With GPU Accountin one can keep track of usage of resources all up in gamespan of a single process.
Only on supported devices from Kepla crew.
Requires administrator privileges.

.SS "\-caa, \-\-clear\-accounted\-apps"
Clears all processes accounted so far.
Only on supported devices from Kepla crew.
Requires administrator privileges.

.SS
[plus optional]

.SS "\-i, \-\-id=ID"
Modify a single specified GPU.
Da specified id may be tha GPU/Unit\(aqs 0\-based index up in tha natural enumeration returned by tha driver, tha GPU\(aqs board serial number, tha GPU\(aqs UUID, or tha GPU\(aqs PCI bus ID (as domain:bus:device.function up in hex).
It be recommended dat playas desirin consistency use either UUID or PCI bus ID, since thang enumeration orderin aint guaranteed ta be consistent between reboots n' board serial number might be shared between multiple GPUs on tha same board.


.SS
UNIT MODIFICATION OPTIONS

.SS "\-t, \-\-toggle\-led=STATE"
Set tha LED indicator state on tha front n' back of tha unit ta tha specified color.
See tha (\fIUNIT ATTRIBUTES\fR) section fo' a thugged-out description of tha LED states.
Allowed flavas is 0|GREEN n' 1|AMBER.
Requires root.

.SS
[plus optional]

.SS "\-i, \-\-id=ID"
Modify a single specified Unit.
Da specified id is tha Unit\(aqs 0-based index up in tha natural enumeration returned by tha driver.


.SS
SHOW DTD OPTIONS

.SS "\-\-dtd"
Display Device or Unit DTD.

.SS
[plus optional]

.SS "\-f FILE, \-\-filename=FILE"
Redirect query output ta tha specified file up in place of tha default stdout.
Da specified file is ghon be overwritten.

.SS "\-u, \-\-unit"
Display Unit DTD instead of thang DTD.

.PP 
.SH "RETURN VALUE"
.PP 

Return code reflects whether tha operation succeeded or failed n' what tha fuck was tha reason of failure.
.IP \[bu] 
Return code 0 \- Success
.IP \[bu]
Return code 2 \- A supplied argument or flag is invalid
.IP \[bu]
Return code 3 \- Da axed operation aint available on target device
.IP \[bu]
Return code 4 \- Da current user aint gots permission ta access dis thang or big-ass up dis operation
.IP \[bu]
Return code 6 \- A query ta find a object was unsuccessful
.IP \[bu]
Return code 8 \- A devicez external juice cablez is not properly attached
.IP \[bu]
Return code 9 \- NVIDIA driver aint loaded
.IP \[bu]
Return code 10 \- NVIDIA Kernel detected a interrupt issue wit a GPU
.IP \[bu]
Return code 12 \- NVML Shared Library couldn't be found or loaded
.IP \[bu]
Return code 13 \- Local version of NVML don't implement dis function
.IP \[bu]
Return code 14 \- infoROM is corrupted
.IP \[bu]
Return code 15 \- Da GPU has fallen off tha bus or has otherwise become inaccessible
.IP \[bu]
Return code 255 \- Other error or internal driver error occurred

.PP
.SH "GPU ATTRIBUTES"
.PP
Da followin list raps bout all possible data returned by tha \fB\-q\fR thang query option.
Unless otherwise noted all numerical thangs up in dis biatch is base 10 n' unitless.

.SS "Timestamp"
Da current system timestamp all up in tha time nvidia\-smi was invoked.
Format is "Day\-of\-week Month Dizzle HH:MM:SS Year".

.SS "Driver Version"
Da version of tha installed NVIDIA display driver.
This be a alphanumeric string.

.SS "Attached GPUs"
Da number of NVIDIA GPUs up in tha system.

.SS "Product Name"
Da straight-up legit thang name of tha GPU.
This be a alphanumeric string.
For all shizzle.

.SS "Display Mode"
A flag dat indicates whether a physical display (e.g. monitor) is currently connected ta any of tha GPUz connectors.
"Enabled" indicates a attached display.
"Disabled" indicates otherwise.

.SS "Display Active"
A flag dat indicates whether a gangbangin' finger-lickin' display is initialized on tha GPUz (e.g. memory be allocated on tha thang fo' display).
Display can be actizzle even when no monitor is physically attached.
"Enabled" indicates a actizzle display.
"Disabled" indicates otherwise.

.SS "Persistence Mode"
A flag dat indicates whether persistence mode is enabled fo' tha GPU.
Value is either "Enabled" or "Disabled".
When persistence mode is enabled tha NVIDIA driver remains loaded even when no actizzle clients, like fuckin X11 or nvidia-smi, exist.
This minimizes tha driver load latency associated wit hustlin dependent apps, like fuckin CUDA programs.
For all CUDA-capable shizzle.
Linux only.

.SS "Accountin Mode"
A flag dat indicates whether accountin mode is enabled fo' tha GPU
Value is either \"Enabled\" or \"Disabled\"
When accountin is enabled statistics is calculated fo' each compute process hustlin on tha GPU.
Statistics is available fo' query afta tha process terminates.
See --help-query-accounted-apps fo' mo' info.

.SS "Accountin Mode Buffer Size"
Returns tha size of tha circular buffer dat holdz list of processes dat can be queried fo' accountin stats.
This is tha maximum number of processes dat accountin shiznit is ghon be stored fo' before shiznit
about crazy oldschool processes will git overwritten by shiznit bout freshly smoked up processes.

.SS "Driver Model"
On Windows, tha TCC n' WDDM driver models is supported.
Da driver model can be chizzled wit tha (\fI\-dm\fR) or (\fI\-fdm\fR) flags.
Da TCC driver model is optimized fo' compute applications.
I.E. kernel launch times is ghon be quicker wit TCC.
Da WDDM driver model is designed fo' graphics applications n' aint recommended fo' compute applications.
Linux do not support multiple driver models, n' will always have tha value of "N/A".

.TP 15
.B "Current"
Da driver model currently up in use.
Always "N/A" on Linux.

.TP 15
.B "Pending"
Da driver model dat is ghon be used on tha next reboot.
Always "N/A" on Linux.

.SS "Serial Number"
This number matches tha serial number physically printed on each board.
It be a globally unique immutable alphanumeric value.

.SS "GPU UUID"
This value is tha globally unique immutable alphanumeric identifier of tha GPU.
It do not correspond ta any physical label on tha board.

.SS "Minor Number"
Da minor number fo' tha thang is such dat tha Nvidia thang node file fo' each GPU gonna git tha form /dev/nvidia[minor number]. 
Available only on Linux platform.

.SS "VBIOS Version"
Da BIOS of tha GPU board.

.SS "Inforom Version"
Version numbers fo' each object up in tha GPU board\(aqs inforom storage.
Da inforom be a small, persistent store of configuration n' state data fo' tha GPU.
All inforom version fieldz is numerical.
It can be useful ta know these version numbers cuz some GPU features is only available wit inforomz of a cold-ass lil certain version or higher.

If any of tha fieldz below return Unknown Error additionizzle Inforom verification check is performed n' appropriate warnin message is displayed.

.TP 15
.B "Image Version"
Global version of tha infoROM image.
Image version just like VBIOS version uniquely raps bout tha exact version of tha infoROM flashed on tha board up in contrast ta infoROM object version which is only a indicator of supported features.

.TP 15
.B "OEM Object"
Version fo' tha OEM configuration data.

.TP 15
.B "ECC Object"
Version fo' tha ECC recordin data.

.TP 15
.B "Juice Object"
Version fo' tha juice pimpment data.


.SS "GPU Operation Mode"
GOM allows ta reduce juice usage n' optimize GPU throughput by disablin GPU features.

Each GOM is designed ta hook up specific user needs.

In "All On" mode every last muthafuckin thang is enabled n' hustlin at full speed.

Da "Compute" mode is designed fo' hustlin only compute tasks. Graphics operations is not allowed.

Da "Low Double Precision" mode is designed fo' hustlin graphics applications dat don't require high bandwidth double precision.

GOM can be chizzled wit tha (\fI\-\-gom\fR) flag.

Supported on GK110 M-class n' X-class Tesla shizzle from tha Kepla crew.
Not supported on Quadro n' Tesla C-class shizzle.

.TP 15
.B "Current"
Da GOM currently up in use.

.TP 15
.B "Pending"
Da GOM dat is ghon be used on tha next reboot.

.SS "PCI"
Basic PCI info fo' tha device.
Some of dis shiznit may chizzle whenever cardz is added/removed/moved up in a system.
For all shizzle.

.TP 15
.B "Bus"
PCI bus number, up in hex

.TP 15
.B "Device"
PCI thang number, up in hex

.TP 15
.B "Domain"
PCI domain number, up in hex

.TP 15
.B "Device Id"
PCI vendor thang id, up in hex

.TP 15
.B "Sub System Id"
PCI Sub System id, up in hex

.TP 15
.B "Bus Id"
PCI bus id as "domain:bus:device.function", up in hex
.SS "GPU Link shiznit"
Da PCIe link generation n' bus width

.TP 15
.B "Current"
Da current link generation n' width.
These may be reduced when tha GPU aint up in use.

.TP 15
.B "Maximum"
Da maximum link generation n' width possible wit dis GPU n' system configuration.
For example, if tha GPU supports a higher PCIe generation than tha system supports then dis reports tha system PCIe generation.

.SS "Bridge Chip"
Hype related ta Bridge Chip on tha device. Da bridge chip firmware is only present on boardz wit mo' than one GPU.

.TP 15
.B "Type"
Da type of bridge chip. Reported as N/A if don't exist.

.TP 15
.B "Firmware Version"
Da firmware version of tha bridge chip. Reported as N/A if don't exist.

.SS "Fan Speed"
Da hustla speed value is tha cement of maximum speed dat tha device\(aqs hustla is currently intended ta run at.
It ranges from 0 ta 100%.
Note: Da reported speed is tha intended hustla speed.
If tha hustla is physically blocked n' unable ta spin, dis output aint gonna match tha actual hustla speed.
Many parts do not report hustla speedz cuz they rely on coolin via hustlas up in tha surroundin enclosure.
For all discrete shizzle wit dedicated fans.

.SS "Performizzle State"
Da current performizzle state fo' tha GPU.
States range from P0 (maximum performance) ta P12 (minimum performance).

.SS "Clocks Throttle Reasons"
Retrieves shiznit bout factors dat is reducin tha frequency of clocks.
Only on supported Tesla devices from Kepla crew.

If all throttle reasons is returned as "Not Active" it means dat clocks is hustlin as high as possible. 

.TP 15
.B "Idle"
Nothang is hustlin on tha GPU n' tha clocks is droppin ta Idle state.
This limita may be removed up in a lata release.

.TP 15
.B "Application Clocks Setting"
GPU clocks is limited by applications clocks setting.
E.g. can be chizzled rockin nvidia\-smi \-\-applications\-clocks=

.TP 15
.B "SW Juice Cap"
SW Juice Scalin algorithm is reducin tha clocks below axed clocks cuz tha GPU is consumin too much power.
E.g. Right back up in yo muthafuckin ass. SW juice cap limit can be chizzled wit nvidia\-smi \-\-power\-limit=

.TP 15
.B "HW Slowdown"
HW Slowdown (reducin tha core clocks by a gangbangin' factor of 2 or more) is engaged.

This be a indicator of:
.br
* temperature bein too high
.br
* External Juice Brake Assertion is triggered (e.g. by tha system juice supply)
.br
* Juice draw is too high n' Fast Trigger protection is reducin tha clocks
.br
* May be also reported durin PState or clock chizzle
.br
** This behavior may be removed up in a lata release

.TP 15
.B "Unknown"
Some other unspecified factor is reducin tha clocks.

.SS "FB Memory Usage"
On-board frame buffer memory shiznit.
Reported total memory be affected by ECC state.
If ECC is enabled tha total available memory is decreased by nuff muthafuckin cement, cuz of tha requisite paritizzle bits.
Da driver may also reserve a lil' small-ass amount of memory fo' internal use, even without actizzle work on tha GPU.
For all shizzle.

.TP 15
.B "Total"
Total size of FB memory.

.TP 15
.B "Used"
Used size of FB memory.

.TP 15
.B "Free"
Available size of FB memory.

.SS "BAR1 Memory Usage"
BAR1 is used ta map tha FB (device memory) so dat it can be directly accessed by tha CPU or by 3rd jam devices (peer-to-peer on tha PCIe bus).

.TP 15
.B "Total"
Total size of BAR1 memory.

.TP 15
.B "Used"
Used size of BAR1 memory.

.TP 15
.B "Free"
Available size of BAR1 memory.

.SS "Compute Mode"
Da compute mode flag indicates whether individual or multiple compute applications may run on tha GPU.

"Default" means multiple contexts is allowed per device.

"Exclusive Thread" means only one context be allowed per device, usable from one thread at a time.

"Exclusive Process" means only one context be allowed per device, usable from multiple threadz at a time.

"Prohibited" means no contexts is allowed per thang (no compute apps).

"EXCLUSIVE_PROCESS" was added up in CUDA 4.0.
Prior CUDA releases supported only one exclusive mode, which is equivalent ta "EXCLUSIVE_THREAD" up in CUDA 4.0 n' beyond.

For all CUDA-capable shizzle.

.SS "Utilization"
Utilization rates report how tha fuck busy each GPU is over time, n' can be used ta determine how tha fuck much a application is rockin tha GPUs up in tha system.

Note: Durin driver initialization when ECC is enabled one can peep high GPU n' Memory Utilization readings.
This is caused by ECC Memory Scrubbin mechanizzle dat is performed durin driver initialization.

.TP 15
.B "GPU"
Percent of time over tha past sample period durin which one or mo' kernels was executin on tha GPU.
Da sample period may be between 1 second n' 1/6 second dependin on tha product.

.TP 15
.B "Memory"
Percent of time over tha past sample period durin which global (device) memory was bein read or written.
Da sample period may be between 1 second n' 1/6 second dependin on tha product.

.SS "Ecc Mode"
A flag dat indicates whether ECC support is enabled.
May be either "Enabled" or "Disabled".
Changes ta ECC mode require a reboot.
Requires Inforom ECC object version 1.0 or higher.

.TP 15
.B "Current"
Da ECC mode dat tha GPU is currently operatin under.

.TP 15
.B "Pending"
Da ECC mode dat tha GPU will operate under afta tha next reboot.

.SS "ECC Errors"
NVIDIA GPUs can provide error counts fo' various typez of ECC errors.
Some ECC errors is either single or double bit, where single bit errors is erected n' double bit errors is uncorrectable.
Texture memory errors may be erectable via resend or uncorrectable if tha resend fails.
These errors is available across two timescalez (volatile n' aggregate).
Single bit ECC errors is automatically erected by tha HW n' do not result up in data corruption.
Double bit errors is detected but not erected.
Please peep tha ECC documents on tha wizzy fo' shiznit on compute application behavior when double bit errors occur.
Volatile error countas track tha number of errors detected since tha last driver load.
Aggregate error counts persist indefinitely n' thus act as a gametime counter.

.PP
A note bout volatile counts: On Windows dis is once per boot.
On Linux dis can be mo' frequent.
On Linux tha driver unloadz when no actizzle clients exist.
Hence, if persistence mode is enabled or there be always a thugged-out driver client actizzle (e.g. X11), then Linux also sees per-boot behavior.
If not, volatile counts is reset each time a cold-ass lil compute app is run.

.PP
Tesla n' Quadro shizzle from tha Fermi n' Kepla crew can display total ECC error counts, as well as a funky-ass breakdown of errors based on location on tha chip.
Da locations is busted lyrics bout below.
Location\-based data fo' aggregate error counts requires Inforom ECC object version 2.0.
All other ECC counts require ECC object version 1.0.

.TP 15
.B "Device Memory"
Errors detected up in global thang memory.

.TP 15
.B "Regista File"
Errors detected up in regista file memory.

.TP 15
.B "L1 Cache"
Errors detected up in tha L1 cache.

.TP 15
.B "L2 Cache"
Errors detected up in tha L2 cache.

.TP 15
.B "Texture Memory"
Paritizzle errors detected up in texture memory.

.TP 15
.B "Total"
Total errors detected across entire chip. Right back up in yo muthafuckin ass. Sum of \fBDevice Memory\fR, \fBRegista File\fR, \fBL1 Cache\fR, \fBL2 Cache\fR n' \fBTexture Memory\fR.

.SS "Page Retirement"

NVIDIA GPUs can retire pagez of GPU thang memory when they become unreliable.
This can happen when multiple single bit ECC errors occur fo' tha same page, or on a thugged-out double bit ECC error.
When a page is retired, tha NVIDIA driver will hide it such dat no driver, or application memory allocations can access dat shit.

.B "Double Bit ECC"
Da number of GPU thang memory pages dat done been retired cuz of a thugged-out double bit ECC error.

.B "Single Bit ECC"
Da number of GPU thang memory pages dat done been retired cuz of multiple single bit ECC errors.

.B "Pending"
Checks if any GPU thang memory pages is pendin retirement on tha next reboot.
Pages dat is pendin retirement can still be allocated, n' may cause further reliabilitizzle issues.

.SS "Temperature"
Readings from temperature sensors on tha board.
All readings is up in degrees C.
Not all shizzle support all readin types.
In particular, shizzle up in module form factors dat rely on case hustlas or passive coolin do not probably provide temperature readings.
See below fo' restrictions.

.TP 15
.B "GPU"
Core GPU temperature.
For all discrete n' S-class shizzle.
.SS "Juice Readings"
Juice readings help ta shed light on tha current juice usage of tha GPU, n' tha factors dat affect dat usage.
When juice pimpment is enabled tha GPU limits juice draw under load ta fit within a predefined juice envelope by manipulatin tha current performizzle state.
See below fo' limitz of availability.

.TP 15
.B "Juice State"
Juice State is deprecated n' has been renamed ta Performizzle State up in 2.285.
To maintain XML compatibility, up in XML format Performizzle State is listed up in both places.

.TP 15
.B "Juice Management"
A flag dat indicates whether juice pimpment is enabled.
Either "Supported" or "N/A".
Requires Inforom PWR object version 3.0 or higher or Kepla device.

.TP 15
.B "Juice Draw"
Da last measured juice draw fo' tha entire board, up in watts.
Only available if juice pimpment is supported.
This readin be accurate ta within +/- 5 watts.
Requires Inforom PWR object version 3.0 or higher or Kepla device.

.TP 15
.B "Juice Limit"
Da software juice limit, up in watts, n' you can put dat on yo' toast.  Set by software like fuckin nvidia-smi.
Only available if juice pimpment is supported.
Requires Inforom PWR object version 3.0 or higher or Kepla device.
On Kepla devices Juice Limit can be adjusted rockin \-pl,\-\-power\-limit= switches.

.TP 15
.B "Enforced Juice Limit"
Da juice pimpment algorithm\(aqs juice ceiling, up in watts.
Total board juice draw is manipulated by tha juice pimpment algorithm such dat it stays under dis value.
This limit is tha minimum of various limits like fuckin tha software limit listed above.
Only available if juice pimpment is supported.
Requires a Kepla device.

.TP 15
.B "Default Juice Limit"
Da default juice pimpment algorithm\(aqs juice ceiling, up in watts.
Juice Limit is ghon be set back ta Default Juice Limit afta driver unload.
Only on supported devices from Kepla crew.

.TP 15
.B "Min Juice Limit"
Da minimum value up in watts dat juice limit can be set to.
Only on supported devices from Kepla crew.

.TP 15
.B "Max Juice Limit"
Da maximum value up in watts dat juice limit can be set to.
Only on supported devices from Kepla crew.

.SS "Clocks"
Current frequency at which partz of tha GPU is hustlin.
All readings is up in MHz.

.TP 15
.B "Graphics"
Current frequency of graphics (shader) clock.

.TP 15
.B "SM"
Current frequency of SM (Streamin Multiprocessor) clock.

.TP 15
.B "Memory"
Current frequency of memory clock.

.SS "Applications Clocks"
User specified frequency at which applications is ghon be hustlin at.
Can be chizzled wit [\-ac | \-\-applications\-clocks] switches.

.TP 15
.B "Graphics"
User specified frequency of graphics (shader) clock.

.TP 15
.B "Memory"
User specified frequency of memory clock.

.SS "Default Applications Clocks"
Default frequency at which applications is ghon be hustlin at.
Application clocks can be chizzled wit [\-ac | \-\-applications\-clocks] switches.
Application clocks can be set ta default rockin [\-rac | \-\-reset\-applications\-clocks] switches.

.TP 15
.B "Graphics"
Default frequency of applications graphics (shader) clock.

.TP 15
.B "Memory"
Default frequency of applications memory clock.

.SS "Max Clocks"
Maximum frequency at which partz of tha GPU is design ta run.
All readings is up in MHz.
 
On GPUs from Fermi crew current P0 clocks (reported up in Clocks section) can differ from max clocks by few MHz.

.TP 15
.B "Graphics"
Maximum frequency of graphics (shader) clock.

.TP 15
.B "SM"
Maximum frequency of SM (Streamin Multiprocessor) clock.

.TP 15
.B "Memory"
Maximum frequency of memory clock.

.SS "Supported clocks"
List of possible memory n' graphics clocks combinations dat tha GPU can operate on (not takin tha fuck into account HW brake reduced clocks).
These is tha only clock combinations dat can be passed ta \-\-applications\-clocks flag.
Supported Clocks is listed only when \-q \-d SUPPORTED_CLOCKS switches is provided or up in XML format.

.SS "Compute Processes"
List of processes havin compute context on tha device.

.TP 15
Each Entry iz of format "<pid>. <Process name>"

.TP 15
.B "Used GPU Memory"
Amount memory used on tha thang by tha context.
Not available on Windows when hustlin up in WDDM mode cuz Windows KMD manages all tha memory not NVIDIA driver.


.PP
.SH "UNIT ATTRIBUTES"
.PP
Da followin list raps bout all possible data returned by tha \fB\-q -u\fR unit query option.
Unless otherwise noted all numerical thangs up in dis biatch is base 10 n' unitless.

.SS "Timestamp"
Da current system timestamp all up in tha time nvidia\-smi was invoked.
Format is "Day\-of\-week Month Dizzle HH:MM:SS Year".

.SS "Driver Version"
Da version of tha installed NVIDIA display driver.
Format is "Major\-Number.Minor\-Number".

.SS "HIC Info"
Hype bout any Host Interface Cardz (HIC) dat is installed up in tha system.

.TP 15
.B "Firmware Version"
Da version of tha firmware hustlin on tha HIC.

.SS "Attached Units"
Da number of attached Units up in tha system.

.SS "Product Name"
Da straight-up legit thang name of tha unit.
This be a alphanumeric value.
For all S-class shizzle.

.SS "Product Id"
Da thang identifier fo' tha unit.
This be a alphanumeric value of tha form "part1-part2-part3".
For all S-class shizzle.

.SS "Product Serial"
Da immutable globally unique identifier fo' tha unit.
This be a alphanumeric value.
For all S-class shizzle.

.SS "Firmware Version"
Da version of tha firmware hustlin on tha unit.
Format is "Major\-Number.Minor\-Number".
For all S-class shizzle.

.SS "LED State"
Da LED indicator is used ta flag systems wit potential problems.
An LED color of AMBER indicates a issue.
For all S-class shizzle.

.TP 15
.B "Color"
Da color of tha LED indicator.
Either "GREEN" or "AMBER".

.TP 15
.B "Cause"
Da reason fo' tha current LED color.
Da cause may be listed as any combination of "Unknown", "Set ta AMBER by host system", "Thermal sensor failure", "Fan failure" n' "Temperature exceedz critical limit".

.SS "Temperature"
Temperature readings fo' blingin componentz of tha Unit.
All readings is up in degrees C.
Not all readings may be available.
For all S-class shizzle.

.TP 15
.B "Intake"
Air temperature all up in tha unit intake.

.TP 15
.B "Exhaust"
Air temperature all up in tha unit exhaust point.

.TP 15
.B "Board"
Air temperature across tha unit board.

.SS "PSU"
Readings fo' tha unit juice supply.
For all S-class shizzle.

.TP 15
.B "State"
Operatin state of tha PSU.
Da juice supply state can be any of tha following: "Normal", "Abnormal", "High voltage", "Fan failure", "Heatsink temperature", "Current limit", "Voltage below UV alarm threshold", "Low\-voltage", "I2C remote off command", "MOD_DISABLE input" or "Short pin transition".

.TP 15
.B "Voltage"
PSU voltage setting, up in volts.

.TP 15
.B "Current"
PSU current draw, up in amps.

.SS "Fan Info"
Fan readings fo' tha unit.
A readin is provided fo' each fan, of which there can be many.
For all S-class shizzle.

.TP 15
.B "State"
Da state of tha fan, either "NORMAL" or "FAILED".

.TP 15
.B "Speed"
For a healthy fan, tha fan\(aqs speed up in RPM.

.SS "Attached GPUs"
A list of PCI bus idz dat correspond ta each of tha GPUs attached ta tha unit.
Da bus idz have tha form "domain:bus:device.function", up in hex.
For all S-class shizzle.

.PP
.SH "NOTES"
.PP
On Linux, NVIDIA thang filez may be modified by nvidia-smi if run as root.
Please peep tha relevant section of tha driver README file.

.PP
Da \fB\-a\fR n' \fB\-g\fR arguments is now deprecated up in favor of \fB\-q\fR n' \fB\-i\fR, respectively.
But fuck dat shiznit yo, tha word on tha street is dat tha oldschool arguments still work fo' dis release.


.PP
.SH "EXAMPLES" 
.SS "nvidia\-smi -q"
Query attributes fo' all GPUs once, n' display up in plain text ta stdout.
.SS "nvidia\-smi \-\-format=csv,noheader \-\-query\-gpu=uuid,persistence_mode"
Query UUID n' persistence mode of all GPUs up in tha system.
.SS "nvidia\-smi -q -d ECC,POWER -i 0 -l 10 -f out.log"
Query ECC errors n' juice consumption fo' GPU 0 at a gangbangin' frequency of 10 seconds, indefinitely, n' record ta tha file out.log.
.SS "nvidia\-smi -c 1 -i GPU\-b2f5f1b745e3d23d\-65a3a26d-097db358\-7303e0b6\-149642ff3d219f8587cde3a8"
Set tha compute mode ta "EXCLUSIVE_THREAD" fo' GPU wit UUID "GPU\-b2f5f1b745e3d23d\-65a3a26d-097db358\-7303e0b6\-149642ff3d219f8587cde3a8".
.SS "nvidia\-smi -q -u -x --dtd"
Query attributes fo' all Units once, n' display up in XML format wit embedded DTD ta stdout.
.SS "nvidia\-smi --dtd -u -f nvsmi_unit.dtd"
Write tha Unit DTD ta nvsmi_unit.dtd.
.SS "nvidia\-smi -q -d SUPPORTED_CLOCKS"
Display supported clockz of all GPUs.
.SS "nvidia\-smi -i 0 --applications-clocks 2500,745"
Set applications clocks ta 2500 MHz memory, n' 745 MHz graphics.

.PP
.SH "CHANGE LOG"
.PP
.PP 1

  === Known Issues ===
.PP 1

  * On Linux when X Server is hustlin Used GPU Memory up in Compute Processes section may contain value dat is larger than tha actual value. This is ghon be fixed up in a gangbangin' future release.
.PP 1

  * On Linux GPU Reset can't be triggered when there is pendin GOM chizzle.
.PP 1

  * On Linux GPU Reset may not successfully chizzle pendin ECC mode fo' realz. A full reboot may be required ta enable tha mode chizzle.
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v5.319 Update n' v331 ===
.PP 1

 
.PP 1

  * Added reportin of minor number.
.PP 1

  * Added reportin BAR1 memory size.
.PP 1

  * Added reportin of bridge chip firmware.
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v4.319 Production n' v4.319 Update ===
.PP 1

 
.PP 1

  * Added freshly smoked up --applications-clocks-permission switch ta chizzle permission requirements fo' settin n' resettin applications clocks.
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v4.304 n' v4.319 Production ===
.PP 1

 
.PP 1

  * Added reportin of Display Actizzle state n' updated documentation ta clarify how tha fuck it differs from Display Mode n' Display Actizzle state
.PP 1

  * For consistency on multi-GPU boardz nvidia-smi -L always displays UUID instead of serial number
.PP 1

  * Added machine readable selectizzle reporting. Right back up in yo muthafuckin ass. See SELECTIVE QUERY OPTIONS section of nvidia-smi -h
.PP 1

  * Added queries fo' page retirement shiznit. I aint talkin' bout chicken n' gravy biatch.  See --help-query-retired-pages n' -d PAGE_RETIREMENT
.PP 1

  * Renamed Clock Throttle Reason User Defined Clocks ta Applications Clocks Setting
.PP 1

  * On error, return codes have distinct non zero joints fo' each error class. Right back up in yo muthafuckin ass. See RETURN VALUE section
.PP 1

  * nvidia-smi -i can now query shiznit from healthy GPU when there be a problem wit other GPU up in tha system
.PP 1

  * All lyrics dat point ta a problem wit a GPU print pci bus id of a GPU at fault
.PP 1

  * New flag --loop-ms fo' queryin shiznit at higher rates than once a second (can have wack impact on system performance)
.PP 1

  * Added queries fo' accountin procsses.  See --help-query-accounted-apps n' -d ACCOUNTING
.PP 1

  * Added tha enforced juice limit ta tha query output
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v4.304 RC n' v4.304 Production ===
.PP 1

 
.PP 1

  * Added reportin of GPU Operation Mode (GOM)
.PP 1

  * Added freshly smoked up --gom switch ta set GPU Operation Mode
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v3.295 n' v4.304 RC ===
.PP 1

 
.PP 1

  * Reformatted non-verbose output cuz of user feedback.  Removed pendin shiznit from table.
.PP 1

  * Print up helpful message if initialization fails cuz of kernel module not receivin interrupts
.PP 1

  * Betta error handlin when NVML shared library aint present up in tha system
.PP 1

  * Added freshly smoked up --applications-clocks switch
.PP 1

  * Added freshly smoked up filta ta --display switch. Run wit -d SUPPORTED_CLOCKS ta list possible clocks on a GPU
.PP 1

  * When reportin free memory, calculate it from tha rounded total n' used memory so dat joints add up
.PP 1

  * Added reportin of juice pimpment limit constraints n' default limit
.PP 1

  * Added freshly smoked up --power-limit switch
.PP 1

  * Added reportin of texture memory ECC errors
.PP 1

  * Added reportin of Clock Throttle Reasons
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v2.285 n' v3.295 ===
.PP 1

  
.PP 1

  * Clearer error reportin fo' hustlin commandz (like changin compute mode)
.PP 1

  * When hustlin commandz on multiple GPUs at once N/A errors is treated as warnings.
.PP 1

  * nvidia-smi -i now also supports UUID
.PP 1

  * UUID format chizzled ta match UUID standard n' will report a gangbangin' finger-lickin' different value.
.PP 1

 
.PP 1

  === Chizzlez between nvidia-smi v2.0 n' v2.285 ===
.PP 1

  
.PP 1

  * Report VBIOS version.
.PP 1

  * Added -d/--display flag ta filta partz of data
.PP 1

  * Added reportin of PCI Sub System ID
.PP 1

  * Updated docs ta indicate we support M2075 n' C2075
.PP 1

  * Report HIC HWBC firmware version wit -u switch
.PP 1

  * Report max(P0) clocks next ta current clocks
.PP 1

  * Added --dtd flag ta print tha thang or unit DTD
.PP 1

  * Added message when NVIDIA driver aint hustlin
.PP 1

  * Added reportin of PCIe link generation (max n' current), n' link width (max n' current).
.PP 1

  * Gettin pendin driver model works on non-admin
.PP 1

  * Added support fo' hustlin nvidia-smi on Windows Guest accounts
.PP 1

  * Hustlin nvidia-smi without -q command will output non verbose version of -q instead of help
.PP 1

  * Fixed parsin of -l/--loop= argument (default value, 0, ta big-ass value)
.PP 1

  * Chizzled format of pciBusId (to XXXX:XX:XX.X - dis chizzle was visible up in 280)
.PP 1

  * Parsin of busId fo' -i command is less restrictive. Yo ass can pass 0:2:0.0 or 0000:02:00 n' other variations
.PP 1

  * Chizzled versionin scheme ta also include "driver version"
.PP 1

  * XML format always conforms ta DTD, even when error conditions occur
.PP 1

  * Added support fo' single n' double bit ECC events n' XID errors (enabled by default wit -l flag disabled fo' -x flag)
.PP 1

  * Added thang reset -r --gpu-reset flags
.PP 1

  * Added listin of compute hustlin processes 
.PP 1

  * Renamed juice state ta performizzle state. Deprecated support exists up in XML output only.
.PP 1

  * Updated DTD version number ta 2.0 ta match tha updated XML output
.PP
.SH "SEE ALSO"
.PP
On Linux, tha driver README is installed as /usr/share/doc/NVIDIA_GLX-1.0/README.txt

.PP
.SH "AUTHOR"
NVIDIA Corporation
.SH "COPYRIGHT"
Copyright 2011-2014 NVIDIA Corporation.
