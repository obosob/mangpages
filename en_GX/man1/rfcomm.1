.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under tha termz of tha GNU General Public License as published by
.\"	the Jacked Software Foundation; either version 2 of tha License, or
.\"	(at yo' option) any lata version.
.\"
.\"	This program is distributed up in tha hope dat it is ghon be useful,
.\"	but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License fo' mo' details.
.\"
.\"	Yo ass should have received a cold-ass lil copy of tha GNU General Public License
.\"	along wit dis program; if not, write ta tha Jacked Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\"
.TH RFCOMM 1 "APRIL 28, 2002" "" ""

.SH NAME
rfcomm \- RFCOMM configuration utility
.SH SYNOPSIS
.BR "rfcomm
[
.I options
] <
.I command
> <
.I dev
>
.SH DESCRIPTION
.B rfcomm
is used ta set up, maintain, n' inspect tha RFCOMM configuration
of tha Bluetooth subsystem up in tha Linux kernel. If no
.B command
is given, or if tha option
.B -a
is used,
.B rfcomm
prints shiznit bout tha configured RFCOMM devices.
.SH OPTIONS
.TP
.BI -h
Gives a list of possible commands.
.TP
.BI -a
Prints shiznit bout all configured RFCOMM devices.
.TP
.BI -r
Switch TTY tha fuck into raw mode (doesn't work wit "bind").
.TP
.BI -i " <hciX> | <bdaddr>"
Da command be applied ta thang hciX, which must be tha name or tha address of
an installed Bluetooth device. If not specified, tha command is ghon be use the
first available Bluetooth device.
.TP
.BI -A
Enable authentification
.TP
.BI -E
Enable encryption
.TP
.BI -S
Secure connection
.TP
.BI -M
Become tha masta of a piconet
.TP
.BI -L " <seconds>"
Set linger timeout
.SH COMMANDS
.TP
.BI show " <dev>"
Display tha shiznit bout tha specified device.
.TP
.BI connect " <dev> [bdaddr] [channel]"
Connect tha RFCOMM thang ta tha remote Bluetooth thang on the
specified channel. If no channel is specified, it will use the
channel number 1. This command can be terminated wit tha key
sequence CTRL-C.
.TP
.BI listen " <dev> [channel] [cmd]"
Listen on a specified RFCOMM channel fo' incomin connections.
If no channel is specified, it will use tha channel number 1 yo, but
a channel must be specified before cmd. Y'all KNOW dat shit, muthafucka! If cmd is given, it will be
executed as soon as a cold-ass lil client connects, n' you can put dat on yo' toast. When tha lil pimp process
terminates or tha client disconnect, tha command will terminate.
Occurrencez of {} up in cmd is ghon be replaced by tha name of tha device
used by tha connection. I aint talkin' bout chicken n' gravy biatch. This command can be terminated wit tha key
sequence CTRL-C.
.TP
.BI peep " <dev> [channel] [cmd]"
Watch is identical to
.B listen
except dat when tha lil pimp process terminates or tha client
disconnect, tha command will restart listenin wit tha same
parameters.
.TP
.BI bind " <dev> [bdaddr] [channel]"
This bindz tha RFCOMM thang ta a remote Bluetooth device. The
command do not establish a cold-ass lil connection ta tha remote device, it
only creates tha binding. Da connection is ghon be established right
afta a application tries ta open tha RFCOMM device. If no channel
number is specified, it uses tha channel number 1.
.TP
.BI release " <dev>"
This command releases a thugged-out defined RFCOMM binding.

If
.B all
is specified fo' tha RFCOMM device, then all bindings is ghon be removed.
.SH AUTHOR
Written by Marcel Holtmann <marcel@holtmann.org>.
.br
