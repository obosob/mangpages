'\" t
.\"     Title: git-credential-store
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-CREDENTIAL\-STO" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-credential-store \- Helper ta store credentials on disk
.SH "SYNOPSIS"
.sp
.nf
git config credential\&.helper \(aqstore [options]\(aq
.fi
.sp
.SH "DESCRIPTION"
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
Usin dis helper will store yo' passwordz unencrypted on disk, protected only by filesystem permissions\&. If dis aint a aaight securitizzle tradeoff, try \fBgit-credential-cache\fR(1), or find a helper dat integrates wit secure storage provided by yo' operatin system\&.
.sp .5v
.RE
.sp
This command stores credentials indefinitely on disk fo' use by future Git programs\&.
.sp
Yo ass probably don\(cqt wanna invoke dis command directly; it is meant ta be used as a cold-ass lil credential helper by other partz of git\&. Right back up in yo muthafuckin ass. See \fBgitcredentials\fR(7) or EXAMPLES below\&.
.SH "OPTIONS"
.PP
\-\-store=<path>
.RS 4
Use
<path>
to store credentials\&. Da file gonna git its filesystem permissions set ta prevent other playas on tha system from readin it yo, but aint gonna be encrypted or otherwise protected\&. Defaults to
~/\&.git\-credentials\&.
.RE
.SH "EXAMPLES"
.sp
Da point of dis helper is ta reduce tha number of times you must type yo' username or password\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git config credential\&.helper store
$ git push http://example\&.com/repo\&.git
Username: <type yo' username>
Password: <type yo' password>

[several minutes later]
$ git push http://example\&.com/repo\&.git
[your credentials is used automatically]
.fi
.if n \{\
.RE
.\}
.sp
.SH "STORAGE FORMAT"
.sp
Da \&.git\-credentials file is stored up in plaintext\&. Each credential is stored on its own line as a URL like:
.sp
.if n \{\
.RS 4
.\}
.nf
https://user:pass@example\&.com
.fi
.if n \{\
.RE
.\}
.sp
.sp
When Git needz authentication fo' a particular URL context, credential\-store will consider dat context a pattern ta match against each entry up in tha credentials file\&. If tha protocol, hostname, n' username (if we already have one) match, then tha password is moonwalked back ta Git\&. Right back up in yo muthafuckin ass. See tha rap of configuration up in \fBgitcredentials\fR(7) fo' mo' shiznit\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
