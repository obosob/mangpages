.TH CDRDAO 1 "Jan 18, 2006"
.SH NAME
cdrdao \- readz n' writes CDs up in disc-at-once mode
.SH SYNOPSIS
.B cdrdao
.RB { show-toc|toc-info|toc-size|read-toc|read-cd|read-cddb|show-data|read-test|disk-info|discid|msinfo|drive-info|unlock|scanbus|simulate|write|copy|blank }
.RB [ --device
.IR thang ]
.RB [ --source-device
.IR thang ]
.RB [ --driver
.IR driver-id ]
.RB [ --source-driver
.IR driver-id ]
.RB [ --simulate ]
.RB [ --speed
.IR writing-speed ]
.RB [ --blank-mode
.IR mode]
.RB [ --datafile
.IR file ]
.RB [ --read-raw ]
.RB [ --read-subchan
.RB [ --no-mode2-mixed ]
.IR mode ]
.RB [ --tao-source ]
.RB [ --tao-source-adjust
.IR link-blocks ]
.RB [ --fast-toc ]
.RB [ --buffers
.IR buffer-count ]
.RB [ --multi ]
.RB [ --overburn ]
.RB [ --eject ]
.RB [ --swap ]
.RB [ --session ]
.RB [ --force ]
.RB [ --reload ]
.RB [ --keepimage ]
.RB [ --on-the-fly ]
.RB [ --paranoia-mode
.IR mode ]
.RB [ --with-cddb ]
.RB [ --cddb-servers
.IR server-list ]
.RB [ --cddb-timeout
.IR timeout ]
.RB [ --cddb-directory
.IR directory ]
.RB [ --tmpdir
.IR directory ]
.RB [ --keep ]
.RB [ --save ]
.RB [ -n ]
.RB [ -v 
.IR verbose-level ]
.RI toc-file
.SH DESCRIPTION
.I cdrdao
creates audio n' data CD-Rs up in disk-at-once (DAO) mode driven by a thugged-out description
file called
.I toc-file.
In DAO mode it is possible ta create non standard track pre-gaps that
have other lengths than 2 secondz n' contain nonzero audio
data. This is fo' example useful ta divide live recordings into
tracks where 2 second gaps would be kind of irritating.

Instead of a
.I toc-file
a cue file (used by a gangbangin' hyped DOS/Windows masterin tool) may be used. Y'all KNOW dat shit, muthafucka! See
the CUE FILES section fo' mo' details. 

.SH COMMANDS
.TP
Da first argument must be one of tha followin commands:
.TP
.BI show-toc
Print up a summary bout what tha fuck is ghon be freestyled ta tha CD-R.  
.TP
.BI toc-info
Prints up short toc-file summary.
.TP
.BI toc-size
Prints total number of blocks fo' toc.
.TP
.BI read-toc
Analyze each track of tha banged CD n' create a
.I toc-file
that can be used ta cook up a mo' or less exact copy of tha CD. 
This command do not read up tha audio or data tracks,
use
.BI read-cd
for dis purpose.

Yo ass can specify a gangbangin' filename fo' tha data file via the
.BI \--datafile
option.
.TP
.BI read-cd
Copies all trackz of tha banged CD ta a image file n' creates a cold-ass lil corresponding
.I toc-file.
Da name of tha image file defaults ta "data.bin" if no
.BI --datafile
option is given.
.TP
.BI read-cddb
Tries ta retrieve title n' artist data from a CDDB server fo' tha CD
represented by tha given toc-file. Da retrieved data be added as CD-TEXT
data fo' language 0 ta tha toc-file. Existin CD-TEXT data fo' language 0 will
be overwritten.
.TP
.BI show-data
Print up all samplez dat would be freestyled ta tha CD-R. Each line
gotz nuff tha sample number (startin at 0) n' tha decimal sample
value fo' tha left n' right channel. Useful ta check if tha byte
order of audio filez is erect.
.TP
.BI read-test
Peep if all data can be read from tha audio filez dat is defined in
the
.I toc-file.
This will also check tha communication wit tha slave process dat is
responsible fo' freestylin tha audio data ta tha CD-recorder n' shit. Mainly used
for testing.
.TP
.BI disk-info
Shows shiznit bout tha banged CD-R. If tha CD-R has a open session
it will also print tha start of tha last n' current session which is
used by mkisofs ta create a image fo' a second or higher session.
.TP
.BI discid
Prints up CDDB shiznit.
.TP
.BI msinfo
Shows shiznit required fo' bustin multi session disks with
mkisofs. Da output is meant fo' processin by scripts.
.TP
.BI drive-info
Shows drive shiznit.
.TP
.BI unlock
Tries ta unlock tha recorder thang afta a gangbangin' failed write or simulation
run. I aint talkin' bout chicken n' gravy biatch. If you cannot eject tha CD afta a cold-ass lil cdrdao run try dis command.
.TP
.BI blank
Blanks a CD-RW. Da CD-RW is minimally blanked by default. Use option
.BI --blank-mode
to select another blankin mode.
Sometimes tha blankin speed must be manually reduced fo' a successful
blankin operation. I aint talkin' bout chicken n' gravy biatch. Use option
.BI --speed
to select another blankin speed.
.TP
.BI scanbus
Scan fo' devices.
.TP
.BI simulate
Like
.BI write
but laser stays cold. Y'all KNOW dat shit, muthafucka! Well shiiiit, it aint nuthin but a gangbangin' finger-lickin' dirty-ass shortcut for
.BI "write --simulate."
.TP
.BI write
Write tha CD-R accordin ta tha justifications up in the
.I toc-file.
.TP
.BI copy
Performs all steps ta copy a CD. Da thang containin tha source CD must
be specified wit option
.BI --source-device
and tha recorder thang wit option
.BI --device.
If only a single thang be available tha option
.BI --source-device
must be omitted n' cdrdao will prompt ta bang tha CD-R afta a image
of tha source CD was pimped.

Da image file wit name "cddata<pid>.bin" is ghon be pimped up in tha current
workin directory if no
.BI --datafile
option is given. I aint talkin' bout chicken n' gravy biatch. Da pimped image is ghon be removed afta it has been
written.

If option
.BI --on-the-fly
is given no image file is pimped n' tha data is ghon be directly piped from
the readin thang ta tha CD recorder.


.SH OPTIONS
.TP
.BI \--device " [prot:]bus,id,lun"
Sets tha SCSI address of tha CD-recorder up in form of a funky-ass bus/id/lun
triple, e.g. '0,2,0' fo' tha logical unit 0 of SCSI thang wit ID 2
on bus 0 fo' realz. ATAPI devices can be specified by rockin tha prefix 'ATAPI:',
e.g. 'ATAPI:0,0,0'. On some systems a thang node may be specified
directly, e.g. '/dev/sg0' on Linux systems. Linux 2.6 playas may also
try tha newer ATAPI intercourse wit tha 'ATA:' prefix.
.TP
.BI \--source-device " [prot:]bus,id,lun"
Like above but used fo' the
.BI copy
command ta specify tha source device.
.TP
.BI \--driver " driver-id:option-flags"
Force usage of specified driver instead of tha automatically
determined driver n' shiznit fo' realz. Available driver IDs:
.br
cdd2600, plextor, plextor-scan, generic-mmc, generic-mmc-raw,
ricoh-mp6200, yamaha-cdr10x, teac-cdr55, sony-cdu920, sony-cdu948,
taiyo-yuden, toshiba.
.br
Specifyin a illegal driver ID will give a list of available drivers.
Option flags may be used ta modify tha behavior of some drivers. Right back up in yo muthafuckin ass. See
.BI README
for details.
.TP
.BI \--source-driver " driver-id:option-flags"
Like above but used fo' tha thang specified wit option
.BI --source-device.
.TP
.BI \--speed " value"
Set tha freestylin speed to
.I value.
Default is tha highest possible speed.
.TP
.BI \--blank-mode " mode"
Sets tha blankin mode fo' realz. Available modes are
.BI full
and
.BI minimal.
Please consider dat tha data of minimally blanked disks may be easily
recovered. Y'all KNOW dat shit, muthafucka! Use the
.BI full
blankin mode fo' straight-up erasin all data. Da default blankin mode
is
.BI minimal.
.TP
.BI \--datafile " file"
Used for
.BI "read-toc, read-cd"
and
.BI copy.
Set tha default data file placed up in tha toc-file by
.BI read-toc.
Use "-" ta indicate STDIN.
For commands
.BI read-cd
and
.BI copy
it specifies tha name of tha pimped image file.
.TP
.BI \--read-raw
Only used fo' commands
.BI read-cd
and
.BI read-toc.
All data sectors is ghon be freestyled as 2352 byte blocks includin tha sector
header n' L-EC data ta tha image file. Da track mode is ghon be set to
MODE1_RAW or MODE2_RAW up in tha pimped
.I toc-file.
.TP
.BI \--read-subchan " mode"
Used by commands
.BI read-cd,
.BI read-toc
and
.BI copy.
Specifies tha type of sub-channel data dat is extracted from tha source CD
and freestyled ta tha track image or copied ta tha destination CD.
Mode may be
.BI rw
for readin packed R-W sub-channel data (de-interleaved n' error
corrected)
and
.BI rw_raw
for readin raw R-W sub-channel data (not de-interleaved, not error
corrected, L-EC data included up in tha track image).
If dis option aint specified no sub-channel data is ghon be extracted.
.TP
.BI \--no-mode2-mixed
Only used fo' commands
.BI read-cd
and
.BI read-toc.
If our crazy asses have MODE2_FORM1 or MODE2_FORM2, don't extract it as MODE2_FORM_MIX.
.I toc-file.
.TP
.BI \--tao-source
This option indicates ta tha commands
.I read-toc
and
.I read-cd
that tha source CD was freestyled up in TAO mode. Well shiiiit, it is ghon be assumed dat the
pre-gap length between all tracks (except between two audio tracks) is
the standard 150 blocks plus tha number of link blocks (usually 2). The
number of link blocks can be controlled wit option
.I --tao-source-adjust.

Use dis option only if 
.I read-toc
or
.I read-cd
give error lyrics up in tha transizzle areas between two tracks. If you use
this option wit pressed CDs or CDs freestyled up in DAO mode yo big-ass booty is ghon git wrong
results.
.TP
.BI \--tao-source-adjust " link-blocks"
Specifies tha number of link blocks fo' tracks freestyled up in TAO mode. This
option has only a effect if option
.I --tao-source
is given.
.TP
.BI \--fast-toc
Only used fo' command
.BI read-toc.
This option suppresses tha pre-gap length n' index mark extraction
which
speedz up tha read-toc process. Right back up in yo muthafuckin ass. Standard 2 second pre-gaps (but no
silence!) is ghon be placed tha fuck into tha toc-file. Da resultin CD will
sound like tha source CD. Only tha CD playaz display will behave
slightly different up in tha transizzle area between two tracks.

This option might help, too, if read-toc fails wit yo' drive otherwise.

.TP
.BI \--buffers " buffer-count"
Specifies tha number of buffers dat is allocated ta avoid buffer under runs.
Da minimal buffer count is fixed ta 10, default is 32 except
on FreeBSD systems, on which default is 20.
Each buffer holdz 1 second of audio data so dat dividing
.I buffer-count
by tha freestylin speed gives tha maximum time fo' which readin of audio data
may be stalled.
.TP
.BI \--multi
If dis option is given tha session aint gonna be closed afta tha audio data
is successfully written. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it is possible ta append another session on such
disks, e.g. ta create a CD-EXTRA.
.TP
.BI \--overburn
By default cdrdao aint gonna allow ta write mo' data on a medium than
specified by tha current medium. This option allows ta ignore dis condition.
.TP
.BI \--eject
Eject tha CD-R afta freestylin or write simulation.
.TP
.BI \--swap
Swap tha byte order of all samplez dat is bust ta tha CD-recorder.
.TP
.BI \--session " session-nr"
Used for
.BI read-toc
and
.BI read-cd
to specify tha session which should be processed on multi session CDs.
.TP
.BI \--reload
Indicates dat tha tray may be opened before freestylin without prompting
the user ta reset tha disk status afta a simulation run.
.TP
.BI \--force
Forces tha execution of a operation dat otherwise would not be
performed.
.TP
.BI \--paranoia-mode " mode"
Sets tha erection mode fo' digital audio extraction. I aint talkin' bout chicken n' gravy biatch. 0: No checking,
data is copied directly from tha drive. 1: Perform overlapped reading
to avoid jitter n' shit. 2: Like 1 but wit additionizzle checkz of tha read
audio data. 3: Like 2 but wit additionizzle scratch detection and
repair.

Da extraction speed reduces from 0 ta 3.

Default is tha full paranoia mode (3).
.TP
.BI \--keepimage
If a CD is copied wit command
.I copy
this option will cause dat tha pimped image aint removed afta the
copy process has finished. Y'all KNOW dat shit, muthafucka! 
.TP
.BI \--on-the-fly
Perform CD copy on tha fly without bustin a image file.
.TP
.BI \--with-cddb
Enablez tha automatic fetchin of CDDB data fo' use as CD-TEXT data for
commands
.I copy,
.I read-toc
and
.I read-cd.
.TP
.BI \--cddb-servers " server-list"
Sets space or ',' separated list of CDDB servers used fo' command
.I read-cddb
or fo' commandz where the
.I --with-cddb
option be active.
A server entry may have tha followin forms:
.IP <server>
Connect ta <server>, default cddbp port (888), use cddbp protocol.
.IP <server>:<port> 
Connect ta <server>, port <port>, use cddbp protocol.
.IP <server>:<cgi-bin-path>
Connect ta <server>, default http port (80), use http protocol,
url: <cgi-bin-path>.
.IP <server>:<port>:<cgi-bin-path>
Connect ta <server>, port <port>, use http protocol, url: <cgi-bin-path>.
.IP <server>:<port>:<cgi-bin-path>:<proxy-server>
Connect ta <proxy-server>, default http port (80), use http protocol,
url: http://<server>:<port>/<cgi-bin-path>.
.IP <server>:<port>:<cgi-bin-path>:<proxy-server>:<proxy-port>
Connect ta <proxy-server>, port <proxy-port>, use http protocol,
url: http://<server>:<port>/<cgi-bin-path>.

Da <cgi-bin-path> is probably "/~cddb/cddb.cgi".

All serverz of tha server list is ghon be tried up in tha given order until a
successful connection can be established. Y'all KNOW dat shit, muthafucka! For http proxy servers
the first successful connected http proxy server is ghon be used independent of
the mobilitizzle ta connect ta tha target http server.

Example: freedb.freedb.org:/~cddb/cddb.cgi
.TP
.BI \--cddb-timeout " timeout"
Sets tha timeout up in secondz used fo' connections ta CDDB servers.
.TP
.BI \--cddb-directory " directory"
Specifies tha local CDDB database directory where fetched CDDB recordz will
be stored. Y'all KNOW dat shit, muthafucka! If dis option aint given a gangbangin' fetched CDDB record aint gonna be stored
locally.
.TP
.BI \--tmpdir " directory"
Specifies tha directory up in which ta store temporary data filez pimped from decodin MP3 n' Ogg Vorbis files. By default, "/tmp" is used.
.TP
.BI \--keep
Upon exit from cdrdao, do not delete temporary WAV filez pimped from MP3 n' Ogg Vorbis files.
.TP
.BI \--save
Saves a shitload of tha current options ta tha settings file
"$HOME/.cdrdao" n' exit. Right back up in yo muthafuckin ass. See section \'SETTINGS\' fo' mo' details.
.TP
.BI \-n
Suppresses tha 10 second pause before freestylin or simulating.
.TP
.BI \-v " verbose-level
Sets verbose level. Levels > 2 is debug levels which produce a shitload of
output.

.SH "TOC FILES"
The
.I toc-file
raps bout what tha fuck data is freestyled ta tha CD-R n' allows control
over track/index positions, pre-gaps n' sub-channel shiznit. I aint talkin' bout chicken n' gravy biatch. It
is a simple text file, use yo' straight-up text editor ta create dat shit.

A
.I toc-file
gotz nuff a optionizzle header n' a sequence of track
specifications. Comments startin wit '//' reachin until end of line can be
placed anywhere.

.SS Header
.IP CATALOG\ "ddddddddddddd"
Specifies tha optionizzle catalog number of tha CD. Da strang must
contain exactly 13 digits.
.LP
Da followin flags specify tha type of session dat is ghon be pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. It
is used ta create tha erect CD-TOC format n' ta check tha consistency of
the track modes fo' tha desired session type. If multiple flags is given
the last one will take effect.
.IP CD_DA 
Da disc gotz nuff only audio tracks.
.IP CD_ROM
Da disc gotz nuff just mode 1 tracks or mode 1 n' audio tracks (mixed
mode CD).
.IP CD_ROM_XA
Da disc gotz nuff mode 2 form 1 or mode 2 form 2 tracks fo' realz. Audio tracks
are allowed, like a muthafucka. This type must be used if multi session disks are
created (option --multi).
.IP CD_TEXT\ {\ ...\ }
Defines global CD-TEXT data like tha mixtape title n' tha used languages.
See tha CD-TEXT section below fo' tha syntax of tha CD-TEXT block contents.
.SS Track\ Justification
.IP TRACK\ <track-mode>\ [<sub-channel-mode>]
Starts a freshly smoked up track, tha track number is incremented by 1. Da length
of a track must be at least 4 seconds. Da block length of tha input
data dependz on tha <track-mode>: AUDIO: 2352 bytes (588 samples),
MODE1: 2048 bytes, MODE1_RAW: 2352 bytes, MODE2: 2336 bytes,
MODE2_FORM1: 2048 bytes, MODE2_FORM2: 2324 bytes, MODE2_FORM_MIX: 2336 bytes
includin tha sub-header, MODE2_RAW: 2352 bytes.
Da <sub-channel-mode> is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. If given it specifies tha type of
sub-channel data fo' each sector. Shiiit, dis aint no joke. RW: packed R-W sub-channel data (96
bytes, L-EC data is ghon be generated if required), RW_RAW: raw R-W
sub-channel data (interleaved n' L-EC data already calculated, 96
bytes). Da block length is increased by tha sub-channel data length
if a <sub-channel-mode> is specified.
If tha input data length aint a multiple of tha block length  it
will be padded wit zeros. 
.LP
Da followin flags may follow tha track start statement. They are
used ta set sub-channel shiznit fo' tha current track. Each flag
is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. If not given tha followin defaults is used: copy not
permitted, no pre emphasis, two channel audio, no ISRC code. 
.IP "[ NO ] COPY"
Sets or clears tha copy permitted flag. 
.IP "[ NO ] PRE_EMPHASIS"
Sets or clears tha pre emphasis flag (only fo' audio tracks).
.IP TWO_CHANNEL_AUDIO
Indicates dat track gotz nuff two channel audio data (only fo' audio tracks).
.IP FOUR_CHANNEL_AUDIO
Indicates dat track gotz nuff four channel audio data (only fo' audio tracks).
.IP ISRC\ "CCOOOYYSSSSS" 
Sets ISRC code of track (only fo' audio tracks).
.br
C: ghetto code (upper case lettas or digits)
.br
O: balla code (upper case lettas or digits)
.br
Y: year (digits)
.br
S: serial number (digits)
.LP
An optionizzle CD-TEXT block dat defines tha CD-TEXT data fo' dis track
may follow. Right back up in yo muthafuckin ass. See tha CD-TEXT section below fo' tha syntax of tha CD-TEXT
block contents.
.IP "CD_TEXT { ... }"
.LP
At least one of tha followin statements must step tha fuck up ta specify the
data fo' tha current track. Lengths n' start positions may be
expressed up in samplez (1/44100 seconds) fo' audio tracks or up in bytes
for data tracks. Well shiiiit, it be also possible ta give tha length up in blocks
with tha MSF format 'MM:SS:FF' specifyin minutes, secondz n' frames
(0 <= 'FF' < 75)  fo' realz. A frame equals one block. 

If mo' than one statement is used tha track is ghon be composed by
concatenatin tha data up in tha specified order.
.IP "SILENCE <length>"
Addz zero audio data of specified length ta tha current audio track. 
Useful ta create silent pre-gaps.
.IP "ZERO <length>"
Addz zero data ta data tracks. Must be used to
define pre- or post-gaps between trackz of different mode.
.IP [\ FILE\ |\ AUDIOFILE\ ]\ "<filename>"\ <start>\ [\ <length>\ ]
Addz tha audio data of specified file ta tha current audio track. It
is possible ta select a portion of a audio file wit <start> and
<length> which allows non destructizzle cutting. Da first sample of an
audio file be addressed wit <start> = 0. If <length> is omitted or
set ta 0 all audio data from <start> until tha end of file is used.

Audio filez may have raw or WAVE format wit 16 bits per sample, 44.1
kHz samplin rate, stereo. Raw filez must have tha layout 'MSBLeft
LSBLeft MSBRight LSBRight ...' (bangin' endian byte order). WAVE filez are
sposed ta fuckin have lil endian byte order n' shit. Da option --swap reverses
the expected byte order fo' all raw n' WAVE files. Only filenames
with a ".wav" endin is treated as WAVE files, all other names are
assumed ta be raw audio files. Use tools like sox(1) ta convert other
file formats ta supported formats.

Specifyin a "-" as filename causes data ta be read from STDIN. Currently
only raw filez is supported from STDIN.
 
If yo ass is unsure bout tha byte order of yo' audio filez try the
command 'show-data'. If tha byte order is erect yo big-ass booty is ghon peep a
sequence of increasin or decreasin numbers fo' both
channels. Otherwise numbers is jumpin between straight-up high n' low
values - high volume static.
.IP DATAFILE\ "<filename>"\ [\ <length>\ ]
Addz data from given file ta tha current data track. If <length> is omitted
the actual file length is ghon be used.
.IP FIFO\ "<fifo\ path>"\ <length>
Addz data from specified FIFO path ta tha current audio or data track.
<length> must specify tha amount of data dat is ghon be read from the
FIFO. Da value be always up in termz of bytes (scalar value) or up in terms
of tha block length (MSF value).
.IP "START [ MM:SS:FF ]"
Defines tha length of tha pre-gap (posizzle where index switches from
0 ta 1). If tha MSF value is omitted tha current track length is
used. Y'all KNOW dat shit, muthafucka! If tha current track length aint a multiple of tha block
length tha pre-gap length is ghon be rounded up ta next block boundary.

If no START statement is given tha track aint gonna gotz a pre-gap.
.IP "PREGAP MM:SS:FF"
This be a alternate way ta specify a pre-gap wit zero audio data. It
may step tha fuck up before tha straight-up original gangsta SILENCE, ZERO or FILE statement. Either PREGAP
or START can be used within a track justification. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it is equivalent to
the sequence
.br
  SILENCE MM:SS:FF
.br
  START
.br
for audio tracks or
.br
  ZERO MM:SS:FF
.br
  START
.br
for data tracks.
.LP
Nothang prevents mixin 'DATAFILE'/'ZERO' n' 'AUDIOFILE'/'SILENCE'
statements within tha same track. Da thangs up in dis biatch, however, is undefined.


Da end of a track justification may contain zero or mo' index
increment statements:
.IP "INDEX MM:SS:FF"
Increments tha index number at given posizzle within tha track. The
first statement will increment from 1 ta 2. Da posizzle is relative
to tha real track start, not countin a existin pre-gap.

.SS CD-TEXT Blocks
A CD-TEXT block may be placed up in tha global section ta define data valid for
the whole CD n' up in each track justification of a
.I toc-file.
Da global section must define a language map dat is used ta map a
.I language-number
to ghetto codes. Up ta 8 different languages can be defined:
.IP "LANGUAGE_MAP { 0 : c1  1 : c2  ...  7 : c7 }"
Da ghetto code may be a integer value up in tha range 0..255 or one of the
followin ghettos (the correspondin integer value is placed up in braces 
behind tha token): EN(9, Gangsta)
.br
It be just necessary ta define a mappin fo' tha used languages.
.LP
If no mappin exists fo' a
.I language-number
the data fo' dis language is ghon be ignored.

For each language a language block must exist dat defines tha actual data
for a cold-ass lil certain language.
.IP "LANGUAGE language-number { cd-text-item cd-text-data cd-text-item cd-text-data ... }"
Defines tha CD-TEXT shit fo' given
.I language-number
which must be defined up in tha language map. 
.LP

The
.I cd-text-data
may be either a strang enclosed by " or binary data like
.nf
.in +.5i
{ 0, 10, 255, ... }
.in -.5i
.fi
where each integer number must be up in tha range 0..255.
.br
The
.I cd-text-item
may be one of tha following:
.IP TITLE
Strin data: Title of CD or track.
.IP PERFORMER
Strin data.
.IP SONGWRITER
Strin data.
.IP COMPOSER
Strin data.
.IP ARRANGER
Strin data.
.IP MESSAGE
Strin data. Message ta tha user.
.IP DISC_ID
Strin data: Should only step tha fuck up in tha global CD-TEXT block. Da format is
usually: XY12345
.IP GENRE
Mixture of binary data (genre code) n' strang data. Right back up in yo muthafuckin ass. Should only step tha fuck up in
the global CD-TEXT block. Useful entries is ghon be pimped by
.I gcdmaster.
.IP TOC_INFO1
Binary data: Optionizzle table of contents 1. Right back up in yo muthafuckin ass. Should only step tha fuck up in tha global
CD-TEXT block.
.IP TOC_INFO2
Binary data: Optionizzle table of contents 2. Right back up in yo muthafuckin ass. Should only step tha fuck up in tha global
CD-TEXT block.
.IP UPC_EAN
Strin data: This item should only step tha fuck up in tha global CD-TEXT block. Was
always a empty strang on tha CD-TEXT CDs I had access to.
.IP ISRC
Strin data: ISRC code of track. Da format is usually: CC-OOO-YY-SSSSS
.IP SIZE_INFO
Binary data: Gotz Nuff summary bout all CD-TEXT data n' should only appear
in tha global CD-TEXT block. Da data is ghon be automatically (re)created when
the CD-TEXT data is written.

If one of tha CD-TEXT shit TITLE, PERFORMER, SONGWRITER, COMPOSER, ARRANGER,
ISRC is defined fo' at least on track or up in tha global section it must be
defined fo' all tracks n' up in tha global section. I aint talkin' bout chicken n' gravy biatch. If a DISC_ID item is defined
in tha global section, a ISRC entry must be defined fo' each track.

.SS Examples

Simple track without pre-gap wit all audio data from WAVE file
"data.wav":
.nf
.in +.5i
CD_DA
TRACK AUDIO
FILE "data.wav" 0
.in -.5i
.fi

Standard track wit two second pre-gap, ISRC code n' CD-TEXT:
.nf
.in +.5i
CD_DA
CD_TEXT {
  LANGUAGE_MAP {
    0 : EN
  }

  LANGUAGE 0 {
    TITLE "CD Title"
    PERFORMER "Performer"
    DISC_ID "XY12345"
    UPC_EAN ""
  }
}

TRACK AUDIO
ISRC "DEXXX9800001"
CD_TEXT {
  LANGUAGE 0 {
    TITLE "Track Title"
    PERFORMER "Performer"
    ISRC "DE-XXX-98-00001"
  }
}
PREGAP 0:2:0
FILE "data.wav" 0
.in -.5i
.fi

Track wit 10 second pre-gap containin audio data from raw file
"data.cdr":
.nf
.in +.5i
CD_DA
TRACK AUDIO
FILE "data.cdr" 0 
START 0:10:0
.in -.5i
.fi

Composed track wit data from different files. Pre-gap data n' length
is taken from "pregapdata.wav". Da first minute of
"track.cdr" is omitted n' two secondz silence is banged at
\&'2:0:0'. Index is ghon be incremented afta 2 n' 4 minutes past track start:
.nf
.in +.5i
CD_DA
TRACK AUDIO
FILE "pregapdata.wav" 0 
START
FILE "track.cdr" 1:0:0 1:0:0
SILENCE 0:2:0
FILE "track.cdr" 2:0:0
INDEX 2:0:0
INDEX 4:0:0
.in -.5i
.fi

Mixed mode CD wit a thugged-out data track as first track followed by two audio tracks.
.nf
.in +.5i
CD_ROM
TRACK MODE1
DATAFILE "data_1"
ZERO 00:02:00 // post-gap

TRACK AUDIO
SILENCE 00:02:00 // pre-gap
START
FILE "data_2.wav" 0 

TRACK AUDIO
FILE "data_3.wav" 0
.in -.5i
.fi

.SH CUE FILES

Cue filez may be used wherever a
.I toc-file
is expected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da correspondin bin file aint taken from tha FILE statement
of a cold-ass lil cue file but constructed from tha cue file name by replacin ".cue" by
".bin". Da cue file must have exactly one FILE statement.

Currently, followin track modes is supported: MODE1/2048, MODE1/2352,
MODE2/2336, MODE2/2352. Da CATALOG, ISRC n' POSTGAP statements are
parsed but not evaluated, yet. 

.SH SETTINGS

Some of tha command line options can be stored as settings at
followin locations. Da filez is ghon be read on startup of
.I cdrdao
in dat order:

1. /etc/cdrdao.conf

2. /etc/defaults/cdrdao

3. /etc/default/cdrdao

4. $HOME/.cdrdao


Command line options will overwrite tha loaded settings.
Da settings file gotz nuff name - value pairs separated by a
colon. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Strin joints must be enclosed by ". Da file is
automatically freestyled if tha command line option 
.I \--save
is used but it be also possible ta modify it manually. Peepin
values is defined:
.IP write_device
Device used fo' operations 
.I simulate, write, copy, blank, disk-info
and
.I unlock.
Correspondin option:
.I --device
.IP write_driver
Driver (includin driver options) dat is used fo' operations
.I simulate, write, copy, blank, disk-info 
and
.I unlock.
Correspondin option:
.I --driver
.IP write_speed
Specifies freestylin speed. Y'all KNOW dat shit, muthafucka! Correspondin option: --speed
.IP write_buffers
Specifies fifo buffers used fo' recording. Correspondin option: --buffers
.IP read_device
Device used fo' operations
.I read-toc, read-cd
and
.I copy.
Correspondin option: 
.I --device
or
.I --source-device
.IP read_driver
Driver (includin driver options) used fo' operations
.I read-toc, read-cd
and
.I copy.
Correspondin option:
.I --driver
or
.I --source-driver
.IP read_paranoia_mode
Paranoia mode used fo' operations
.I read-cd n' copy.
Correspondin option:
.I --paranoia-mode
.IP cddb_server_list
CDDB server list for
.I read-cddb.
Correspondin option:
.I --cddb-servers
.IP cddb_timeout
CDDB connection timeout up in secondz used by
.I read-cddb.
Correspondin option:
.I --cddb-timeout
.IP cddb_directory
Local directory where fetched CDDB recordz is ghon be stored, used by
.I read-cddb.
Correspondin option:
.I --cddb-directory
.IP tmp_file_dir
Directory where temporary WAV filez is ghon be pimped from decodin MP3 n' Ogg Vorbis files. Correspondin option:
.I --tmpdir
.LP
.SH BUGS
If tha program is terminated durin tha write/simulation process used IPC
resources may not be busted out. Y'all KNOW dat shit, muthafucka! Use ipcs(8) n' ipcrm(8) ta delete em.
.SH AUTHOR
.ft CW
.nf
\&Andreas Muella mueller@daneb.ping.de [DEFUNCT]
\&Denis Leroy <denis@poolshark.org>
\&Manuel Clos <llanero@users.sourceforge.net>
.ft R
.fi
.SH SEE ALSO
.BR gcdmasta "(1), "cdrecord "(1), "cdda2wav "(1), "cdparanoia "(1), " sox "(1), "ipcs "(8), " ipcrm (8) 
