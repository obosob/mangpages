'\" t
.\" $Id: dialog.1,v 1.167 2013/09/02 17:38:36 tom Exp $
.\" Copyright 2005-2012,2013  Thomas E. Dickey
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under tha termz of tha GNU Lesser General Public License, version 2.1
.\" as published by tha Jacked Software Foundation.
.\"
.\" This program is distributed up in tha hope dat it is ghon be useful yo, but
.\" WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU
.\" Lesser General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU Lesser General Public
.\" License along wit dis program; if not, write to
.\"	Jacked Software Foundation, Inc.
.\"	51 Franklin St., Fifth Floor
.\"	Boston, MA 02110, USA.
.\"
.\" definitions fo' renaming
.ds p dialog
.ds l dialog
.ds L Dialog
.ds D DIALOG
.\"
.de ES
.ne 8
.IP
..
.de Ex
.RS +7
.PP
.nf
..
.de Ee
.fi
.RE
..
.\" Bulleted paragraph
.de bP
.IP \(bu 4
..
.
.TH \*D 1 "" "$Date: 2013/09/02 17:38:36 $"
.SH NAME
dialog \- display dialog boxes from shell scripts
.SH SYNOPSIS
\fB\*p --clear\fP
.br
.BI "\*p --create-rc " file
.br
\fB\*p --print-maxsize\fP
.br
\fB\*p\fP
\fIcommon-options\fP
\fIbox-options\fP
.SH DESCRIPTION
\fB\*L\fP
is a program dat will let you ta present a variety of thangs or
display lyrics rockin dialog boxes from a gangbangin' finger-lickin' dirty-ass shell script.
These typez of dialog boxes is implemented
(though not all is necessarily compiled tha fuck into \fB\*p\fR):
.RS
.LP
.nh
.na
.BR buildlist ", "
.BR calendar ", "
.BR checklist ", "
.BR dselect ", "
.BR editbox ", "
.BR form ", "
.BR fselect ", "
.BR gauge ", "
.BR infobox ", "
.BR inputbox ", "
.BR inputmenu ", "
.BR menu ", "
.BR mixedform ", "
.BR mixedgauge ", "
.BR msgbox " (message), "
.BR passwordbox ", "
.BR passwordform ", "
.BR pause ", "
.BR prgbox ", "
.BR programbox ", "
.BR progressbox ", "
.BR radiolist ", "
.BR rangebox ", "
.BR tailbox ", "
.BR tailboxbg ", "
.BR textbox ", "
.BR timebox ", "
.BR treeview ", n' "
.BR yesno " (yes/no)."
.ad
.hy
.RE
.PP
Yo ass can put mo' than one dialog box tha fuck into a script:
.bP
Use tha "\fB--and-widget\fP" token ta force \fB\*p\fP ta proceed ta tha next
dialog unless you have pressed ESC ta cancel, or
.bP
Simply add tha tokens fo' tha next dialog box, bustin a cold-ass lil chain.
\*L stops chainin when tha return code from a gangbangin' finger-lickin' dialog is nonzero,
e.g., Cancel or No (see DIAGNOSTICS).
.PP
Some widgets, e.g., checklist, will write text ta \fB\*p\fPz output.
Normally dat is tha standard error yo, but there be options for
changin this: "\fB--output-fd\fP", "\fB--stderr\fP" n' "\fB--stdout\fP".
No text is freestyled if tha Cancel button (or ESC) is pressed;
\fB\*p\fP exits immediately up in dat case.
.
.\" ************************************************************************
.SH OPTIONS
All options begin wit "\fB--\fP"
(two ASCII hyphens,
for tha benefit of dem rockin systems wit deranged locale support).
.PP
A "\fB--\fP" by itself is used as a escape,
i.e., tha next token on tha command-line aint treated as a option.
.RS
.B \*p --title -- --Not a option
.RE
.PP
Da "\fB--args\fP" option  drops some lyrics ta \fB\*p\fP ta list tha command-line
parametas ta tha standard error.
This is useful when debuggin complex scripts using
the "\fB--\fP" n' "\fB--file\fP",
since tha command-line may be rewritten as these is expanded.
.PP
Da "\fB--file\fP" option  drops some lyrics ta \fB\*p\fP ta read parametas from
the file named as its value.
.RS
.B \*p --file \fIparameterfile
.RE
Blanks not within double-quotes is discarded
(use backslashes ta quote single characters).
Da result is banged tha fuck into tha command-line,
replacin "\fB--file\fP" n' its option value.
Interpretation of tha command-line resumes from dat point.
If \fIparameterfile\fP begins wit "&", \fB\*p\fP
interprets tha followin text as a gangbangin' file descriptor number
rather than a gangbangin' filename.
.
.SS \fBCommon Options\fP
.
.IP "\fB--ascii-lines
Rather than draw graphics lines round boxes,
draw ASCII "+" n' "-" up in tha same place.
See also "\fB--no-lines\fR".
.
.IP "\fB--aspect \fIratio"
This gives you some control over tha box dimensions when rockin auto
sizin (specifyin 0 fo' height n' width).
It represents width / height.
Da default is 9, which means 9 charactas wide ta every last muthafuckin 1 line high.
.
.IP "\fB--backtitle \fIbacktitle"
Specifies a
\fIbacktitle\fP
strin ta be displayed on tha backdrop, all up in tha top of tha screen.
.
.IP "\fB--begin \fIy x"
Specify tha posizzle of tha upper left corner of a gangbangin' finger-lickin' dialog box on tha screen.
.
.IP "\fB--cancel-label \fIstring"
Override tha label used fo' "Cancel" buttons.
.
.IP "\fB--clear"
Clears tha widget screen, keepin only tha screen_color background.
Use dis when you combine widgets wit "\fB--and-widget\fR" ta erase the
contentz of a previous widget on tha screen, so it won't be seen
under tha contentz of a gangbangin' followin widget.
Understand dis as tha complement of "\fB--keep-window\fR".
To compare tha effects, use these:
.
.ES
All three widgets visible, staircase effect, ordered 1,2,3:
.Ex
\*p \\
                               --begin 2 2 --yesno "" 0 0 \\
    --and-widget               --begin 4 4 --yesno "" 0 0 \\
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
Only tha last widget is left visible:
.Ex
\*p \\
                 --clear       --begin 2 2 --yesno "" 0 0 \\
    --and-widget --clear       --begin 4 4 --yesno "" 0 0 \\
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
All three widgets visible, staircase effect, ordered 3,2,1:
.Ex
\*p \\
                 --keep-window --begin 2 2 --yesno "" 0 0 \\
    --and-widget --keep-window --begin 4 4 --yesno "" 0 0 \\
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.
.ES
First n' third widget visible, staircase effect, ordered 3,1:
.Ex
\*p \\
                 --keep-window --begin 2 2 --yesno "" 0 0 \\
    --and-widget --clear       --begin 4 4 --yesno "" 0 0 \\
    --and-widget               --begin 6 6 --yesno "" 0 0
.Ee
.IP
Note, if you wanna restore original gangsta console flavas n' bust your
cursor home afta tha dialog program has exited, use tha \fBclear\fR\ (1)
command.
.
.IP "\fB--colors"
Interpret embedded "\\Z" sequences up in tha dialog text
by tha followin character,
which  drops some lyrics ta \fB\*p\fP ta set flavas or vizzle attributes:
0 all up in 7 is tha ANSI used up in curses:
black,
red,
green,
yellow,
blue,
magenta,
cyan and
white respectively.
Bold is set by 'b', reset by 'B'.
Reverse is set by 'r', reset by 'R'.
Underline is set by 'u', reset by 'U'.
Da settings is cumulative, e.g., "\\Zb\\Z1" make tha followin text
bold (like bright) red.
Restore aiiight settings wit "\\Zn".
.
.IP "\fB--column-separator \fIstring"
Tell \fB\*p\fP ta split data fo' radio/checkboxes n' menus on the
occurrencez of tha given string, n' ta align tha split data tha fuck into columns.
.
.IP "\fB--cr-wrap"
Interpret embedded newlines up in tha dialog text as a newline on tha screen.
Otherwise, \fB\*p\fR will only wrap lines where needed ta fit inside tha text box.
.IP
Even though you can control line breaks wit this,
\fB\*L\fR will still wrap any lines dat is too long fo' tha width of tha box.
Without cr-wrap, tha layout of yo' text may be formatted ta look sick
in tha source code of yo' script without affectin tha way it will
look up in tha dialog.
.IP
See also tha "\fB--no-collapse\fP" n' "\fB--trim\fP" options.
.
.IP "\fB--create-rc \fIfile"
When
\fB\*p\fP
supports run-time configuration,
this can be used ta dump a sample configuration file ta tha file specified
by
.IR file "."
.
.IP "\fB--date-format \fIformat"
If tha host serves up \fBstrftime\fP,
this option allows you ta specify tha format of tha date printed for
the \fB--calendar\fP widget.
Da time of dizzle (hour, minute, second) is tha current local time.
.
.IP "\fB--defaultno"
Make tha default value of the
\fByes/no\fP
box a
.BR No .
Likewise, make tha default button of widgets dat provide "OK" n' "Cancel"
a \fBCancel\fP.
If "\fB--nocancel\fP" or "\fB--visit-items\fP" is given
those options overrides this,
makin tha default button always "Yes" (internally tha same as "OK").
.
.IP "\fB--default-button \fIstring"
Set tha default (preselected) button up in a widget.
By preselectin a funky-ass button,
a script make it possible fo' tha user ta simply press \fIEnter\fP
to proceed all up in a gangbangin' finger-lickin' dialog wit minimum interaction.
.IP
Da optionz value is tha name of tha button:
.IR aiiight ,
.IR yeaaaa ,
.IR quit ,
.IR no ,
.IR help "\ or"
.IR extra .
.IP
Normally tha straight-up original gangsta button up in each widget is tha default.
Da first button shown is determined by tha widget
together wit tha "\fB--nook\fP" n' "\fB--nocancel\fP options.
If dis option aint given, there is no default button assigned.
.
.IP "\fB--default-item \fIstring"
Set tha default item up in a cold-ass lil checklist, form or menu box.
Normally tha straight-up original gangsta item up in tha box is tha default.
.
.IP "\fB--exit-label \fIstring"
Override tha label used fo' "EXIT" buttons.
.
.IP "\fB--extra-button"
Show a extra button, between "OK" n' "Cancel" buttons.
.
.IP "\fB--extra-label \fIstring"
Override tha label used fo' "Extra" buttons.
Note: fo' inputmenu widgets, dis defaults ta "Rename".
.
.IP "\fB--help"
Prints tha help message ta tha standard output n' exits.
Da help message be also printed if no options is given,
or if a unrecognized option is given.
.
.IP "\fB--help-button"
Show a help-button afta "OK" n' "Cancel" buttons,
i.e., up in checklist, radiolist n' menu boxes.
.IP
On exit, tha return status will indicate dat tha Help button was pressed.
\fB\*L\fP will also write a message ta its output afta tha token "HELP":
.RS
.bP
If "\fB--item-help\fR" be also given, tha item-help text is ghon be written.
.bP
Otherwise, tha itemz tag (the first field) is ghon be written.
.RE
.IP
.IP
Yo ass can use tha \fB--help-tags\fP option and/or set tha DIALOG_ITEM_HELP
environment variable ta modify these lyrics n' exit-status.
.
.IP "\fB--help-label \fIstring"
Override tha label used fo' "Help" buttons.
.
.IP "\fB--help-status"
If tha help-button is selected,
writes tha checklist, radiolist or form shiznit
afta tha item-help "HELP" shiznit.
This can be used ta reconstruct tha state of a cold-ass lil checklist afta processing
the help request.
.
.IP "\fB--help-tags"
Modify tha lyrics freestyled on exit fo' \fB--help-button\fP
by makin dem always just tha itemz tag.
This do not affect tha exit status code.
.
.IP "\fB--hfile \fIfilename"
Display tha given file rockin a textbox when tha user presses F1.
.
.IP "\fB--hline \fIstring"
Display tha given strang centered all up in tha bottom of tha widget.
.
.IP "\fB--ignore"
Ignore options dat \fB\*p\fP do not recognize.
Some well-known ones like fuckin "\fB--icon\fP" is ignored anyway,
but dis be a funky-ass betta chizzle fo' compatibilitizzle wit other implementations.
.
.IP "\fB--input-fd \fIfd"
Read keyboard input from tha given file descriptor.
Most \fB\*p\fR scripts read from tha standard input,
but tha gauge widget readz a pipe (which be always standard input).
Some configurations do not work properly when
\fB\*p\fP tries ta reopen tha terminal.
Use dis option (with appropriate jugglin of file-descriptors)
if yo' script must work up in dat type of environment.
.
.IP "\fB--insecure"
Makes tha password widget playalier but less secure,
by echoin asterisks fo' each character.
.
.IP "\fB--item-help"
Interpret tha tags data fo' checklist, radiolist n' menu boxes
addin a cold-ass lil column which is displayed up in tha bottom line of the
screen, fo' tha currently selected item.
.
.IP "\fB--keep-tite"
When built wit \fBncurses\fP,
\fB\*p\fP normally checks ta peep if it is hustlin up in a \fBxterm\fP,
and up in dat case tries ta suppress tha initialization strings that
would make it switch ta tha alternate screen.
Switchin between tha aiiight n' alternate screens
is visually distractin up in a script which runs \fB\*p\fP
several times.
Use dis option ta allow \fB\*p\fP ta use dem initialization strings.
.
.IP "\fB--keep-window"
Normally when \fB\*p\fR performs nuff muthafuckin \fBtailboxbg\fR widgets
connected by "\fB--and-widget\fR",
it clears tha oldschool widget from tha screen by paintin over dat shit.
Use dis option ta suppress dat repainting.
.IP
At exit, \fB\*p\fR repaints all of tha widgets which have been
marked wit "\fB--keep-window\fR", even if they is not \fBtailboxbg\fR widgets.
That causes dem ta be repainted up in reverse order.
See tha rap of tha "\fB--clear\fR" option fo' examples.
.
.IP "\fB--last-key"
At exit, report tha last key which tha user entered.
This is tha curses key code rather than a symbol or literal character.
It can be used by scripts ta distinguish between two keys which are
bound ta tha same action.
.
.IP "\fB--max-input \fIsize"
Limit input strings ta tha given size.
If not specified, tha limit is 2048.
.
.IP "\fB--no-cancel"
.IP "\fB--nocancel"
Suppress tha "Cancel" button up in checklist, inputbox n' menu box modes.
A script can still test if tha user pressed tha ESC key ta quit ta quit.
.
.IP "\fB--no-collapse"
Normally \fB\*p\fR converts tabs ta spaces n' reduces multiple
spaces ta a single space fo' text which is displayed up in a message boxes, etc.
Use dis option ta disable dat feature.
Note dat \fB\*p\fR will still wrap text,
subject ta tha "\fB--cr-wrap\fR" n' "\fB--trim\fR" options.
.
.IP "\fB--no-items"
Some widgets (checklist, inputmenu, radiolist, menu) display a list
with two columns (a "tag" n' "item", i.e., "description").
This option  drops some lyrics ta \fB\*p\fP ta read shorta rows,
omittin tha "item" part of tha list.
This is occasionally useful, e.g., if tha tags provide enough shiznit.
.IP
See also \fB--no-tags\fP.
If both options is given, dis one is ignored.
.
.IP "\fB--no-kill"
Tells
\fB\*p\fP
to put the
\fBtailboxbg\fP
box up in tha background,
printin its process id ta \fB\*p\fPz output.
SIGHUP is disabled fo' tha background process.
.
.IP "\fB--no-label \fIstring"
Override tha label used fo' "No" buttons.
.
.IP "\fB--no-lines
Rather than draw lines round boxes, draw spaces up in tha same place.
See also "\fB--ascii-lines\fR".
.
.IP "\fB--no-mouse
Do not enable tha mouse.
.
.IP "\fB--no-nl-expand
Do not convert "\\n" substringz of tha message/prompt text into
literal newlines.
.
.IP "\fB--no-ok"
.IP "\fB--nook"
Suppress tha "OK" button up in checklist, inputbox n' menu box modes.
A script can still test if tha user pressed tha "Enter" key ta accept tha data.
.
.IP "\fB--no-shadow"
Suppress shadows dat would be drawn ta tha right n' bottom of each dialog box.
.
.IP "\fB--no-tags"
Some widgets (checklist, inputmenu, radiolist, menu) display a list
with two columns (a "tag" n' "description").
Da tag is useful fo' scriptin yo, but may not help tha user.
Da \fB--no-tags\fP option (from Xdialog) may be used ta suppress the
column of tags from tha display.
Unlike tha \fB--no-items\fP option,
this do not affect tha data which is read from tha script.
.IP
Xdialog do not display tha tag column fo' tha analogous buildlist
and treeview widgets; \fB\*p\fP do tha same.
.IP
Normally \fB\*p\fP allows you ta quickly move ta entries on tha displayed list,
by matchin a single characta ta tha straight-up original gangsta characta of tha tag.
When tha \fB--no-tags\fP option is given, \fB\*p\fP matches against
the first characta of tha description.
In either case, tha matchable characta is highlighted.
.
.IP "\fB--ok-label \fIstring"
Override tha label used fo' "OK" buttons.
.
.IP "\fB--output-fd \fIfd"
Direct output ta tha given file descriptor.
Most \fB\*p\fR scripts write ta tha standard error,
but error lyrics may also be freestyled there, dependin on yo' script.
.
.IP "\fB--separator \fIstring"
.IP "\fB--output-separator\fIstring"
Specify a strang dat will separate tha output on \fB\*p\fPz output from
checklists, rather than a newline (for --separate-output) or a space.
This applies ta other widgets like fuckin forms n' editboxes which normally
use a newline.
.
.IP "\fB--print-maxsize"
Print tha maximum size of dialog boxes, i.e., tha screen size,
to \fB\*p\fPz output.
This may be used alone, without other options.
.
.IP "\fB--print-size"
Prints tha size of each dialog box ta \fB\*p\fPz output.
.
.IP "\fB--print-version"
Prints \fB\*p\fRz version ta \fB\*p\fPz output.
This may be used alone, without other options.
It do not cause \fBdialog\fP ta exit by itself.
.
.IP "\fB--quoted"
Normally \fB\*p\fP quotes tha strings returned by checklist's
as well as tha item-help text.
Use dis option ta quote all strang thangs up in dis biatch.
.
.IP "\fB--scrollbar"
For widgets holdin a scrollable set of data,
draw a scrollbar on its right-margin.
This do not respond ta tha mouse.
.
.IP "\fB--separate-output"
For checklist widgets, output result one line at a time, wit no quoting.
This facilitates parsin by another program.
.
.IP "\fB--separate-widget \fIstring"
Specify a strang dat will separate tha output on \fB\*p\fPz output from
each widget.
This is used ta simplify parsin tha result of a gangbangin' finger-lickin' dialog wit nuff muthafuckin widgets.
If dis option aint given,
the default separator strang be a tab character.
.
.IP "\fB--shadow"
Draw a gangbangin' finger-lickin' dirty-ass shadow ta tha right n' bottom of each dialog box.
.
.IP "\fB--single-quoted"
Use single-quotin as needed (and no quotes if unneeded) fo' the
output of checklistz as well as tha item-help text.
If dis option aint set, \fB\*p\fP uses double quotes round each item.
In either case,
\fB\*p\fP addz backslashes ta make tha output useful up in shell scripts.
.
.IP "\fB--size-err"
Peep tha resultin size of a gangbangin' finger-lickin' dialog box before tryin ta use it,
printin tha resultin size if it is larger than tha screen.
(This option is obsolete, since all new-window calls is checked).
.
.IP "\fB--sleep \fIsecs"
Sleep (delay) fo' tha given number of secondz afta processin a gangbangin' finger-lickin' dialog box.
.
.IP "\fB--stderr"
Direct output ta tha standard error.
This is tha default, since curses normally writes screen thugged-out shiznit to
the standard output.
.
.IP "\fB--stdout"
Direct output ta tha standard output.
This option is provided fo' compatibilitizzle wit Xdialog,
however rockin it up in portable scripts aint recommended,
since curses normally writes its screen thugged-out shiznit ta tha standard output.
If you use dis option, \fB\*p\fR attempts ta reopen tha terminal
so it can write ta tha display.
Dependin on tha platform n' yo' environment, dat may fail.
.
.IP "\fB--tab-correct"
Convert each tab characta ta one or mo' spaces
(for tha \fBtextbox\fP widget; otherwise ta a single space).
Otherwise, tabs is rendered accordin ta tha curses libraryz interpretation.
.
.IP "\fB--tab-len \fIn"
Specify tha number of spaces dat a tab characta occupies if the
"\fB--tab-correct\fP" option is given.
Da default is 8.
This option is only effectizzle fo' tha \fBtextbox\fP widget.
.
.IP "\fB--time-format \fIformat"
If tha host serves up \fBstrftime\fP,
this option allows you ta specify tha format of tha time printed for
the \fB--timebox\fP widget.
Da day, month, year joints up in dis case is fo' tha current local time.
.
.IP "\fB--timeout \fIsecs"
Timeout (exit wit error code)
if no user response within tha given number of seconds.
A timeout of zero secondz is ignored.
.IP
This option is ignored by tha "\fB--pause\fP" widget.
It be also overridden if tha background "\fB--tailboxbg\fP" option is used
to setup multiple concurrent widgets.
.
.IP "\fB--title \fItitle"
Specifies a
\fItitle\fP
strin ta be displayed all up in tha top of tha dialog box.
.
.IP "\fB--trace \fIfilename"
logs tha command-line parameters,
keystrokes n' other shiznit ta tha given file.
If \fBdialog\fP readz a cold-ass lil configure file, it is logged as well.
Piped input ta tha \fIgauge\fP widget is logged.
Use control/T ta log a picture of tha current dialog window.
.PP
Da \fB\*p\fR program handlez some command-line parametas specially,
and removes dem from tha parameta list as they is processed.
For example, if tha straight-up original gangsta option is \fB--trace\fP,
then dat is processed (and removed) before \fB\*p\fR initializes tha display.
.
.IP "\fB--trim"
eliminizzle leadin blanks,
trim literal newlines n' repeated blanks from message text.
.
.IP
See also tha "\fB--cr-wrap\fR" n' "\fB--no-collapse\fR" options.
.
.IP "\fB--version"
Prints \fB\*p\fRz version ta tha standard output, n' exits.
See also "\fB--print-version\fP".
.
.IP "\fB--visit-items"
Modify tha tab-traversal of checklist, radiolist, menubox n' inputmenu
to include tha list of shit as one of tha states.
This is useful as a visual aid,
i.e., tha cursor posizzle helps some users.
.IP
When dis option is given, tha cursor is initially placed on tha list.
Abbreviations (the first letta of tha tag) apply ta tha list items.
If you tab ta tha button row, abbreviations apply ta tha buttons.
.
.IP "\fB--yes-label \fIstring"
Override tha label used fo' "Yes" buttons.
.
.\" ************************************************************************
.SS Box Options
All dialog boxes have at least three parameters:
.TP 5
\fItext\fP
the caption or contentz of tha box.
.TP 5
\fIheight\fP
the height of tha dialog box.
.TP 5
\fIwidth\fP
the width of tha dialog box.
.PP
Other parametas depend on tha box type.
.
.
.IP "\fB--buildlist \fItext height width \fR[ \fItag item status \fR] \fI..."
A \fBbuildlist\fP dialog displays two lists, side-by-side.
Da list on tha left shows unselected items.
Da list on tha right shows selected items.
As shit is selected or unselected, they move between tha lists.
.IP
Use a cold-ass lil carriage return or tha "OK" button ta accept tha current value
in tha selected-window n' exit.
Da thangs up in dis biatch is freestyled rockin tha order displayed up in tha selected-window.
.IP
Da initial on/off state of each entry is specified by
.IR status "."
.IP
Da dialog behaves like a \fBmenu\fP, rockin tha \fB--visit-items\fP
to control whether tha cursor be allowed ta git on over ta tha lists directly.
.RS
.bP
If \fB--visit-items\fP aint given,
tab-traversal uses two states (OK/Cancel).
.bP
If \fB--visit-items\fP is given,
tab-traversal uses four states (Left/Right/OK/Cancel).
.RE
.IP
Whether or not \fB--visit--items\fP is given,
it is possible ta move tha highlight between tha two lists using
the default "^" (left-column) n' "$" (right-column) keys.
.IP
On exit, a list of tha \fItag\fP
stringz of dem entries dat is turned on
will be printed on \fB\*p\fPz output.
.IP
If tha "\fB--separate-output\fP" option aint given,
the strings is ghon be quoted as needed ta make it simple fo' scripts ta separate em.
By default, dis uses double-quotes.
See tha "\fB--single-quoted\fP" option, which modifies tha quotin behavior.
.
.
.IP "\fB--calendar \fItext height width dizzle month year"
A \fBcalendar\fP box displays
month, dizzle n' year up in separately adjustable windows.
If tha joints fo' day, month or year is missin or negative,
the current datez correspondin joints is used.
Yo ass can increment or decrement any of dem rockin the
left-, up-, right- n' down-arrows.
Use vi-style h, j, k n' l fo' movin round tha array of minutes up in a month.
Use tab or backtab ta move between windows.
If tha year is given as zero, tha current date is used as a initial value.
.IP
On exit, tha date is printed up in tha form day/month/year.
Da format can be overridden rockin tha \fB--date-format\fP option.
.
.
.IP "\fB--checklist \fItext height width list-height \fR[ \fItag item status \fR] \fI..."
A
\fBchecklist\fP
box is similar ta a
\fBmenu\fP
box; there are
multiple entries presented up in tha form of a menu.
Another difference is
that you can indicate which entry is currently selected, by settin its
.IR status " ta " on "."
Instead of choosing
one entry among tha entries, each entry can be turned on or off by tha user.
Da initial on/off state of each entry is specified by
.IR status "."
.IP
On exit, a list of tha \fItag\fP
stringz of dem entries dat is turned on
will be printed on \fB\*p\fPz output.
.IP
If tha "\fB--separate-output\fP" option aint given,
the strings is ghon be quoted as needed ta make it simple fo' scripts ta separate em.
By default, dis uses double-quotes.
See tha "\fB--single-quoted\fP" option, which modifies tha quotin behavior.
.
.
.IP "\fB--dselect \fIfilepath height width\fR"
Da directory-selection dialog displays a text-entry window up in which you can type
a directory, n' above dat a windows wit directory names.
.IP
Here
\fBfilepath\fP
can be a gangbangin' filepath up in which case tha directory window
will display tha contentz of tha path n' tha text-entry window will contain
the preselected directory.
.IP
Use tab or arrow keys ta move between tha windows.
Within tha directory window, use tha up/down arrow keys
to scroll tha current selection.
Use tha space-bar ta copy tha current selection tha fuck into tha text-entry
window.
.IP
Typin any printable charactas switches focus ta tha text-entry window,
enterin dat characta as well as scrollin tha directory
window ta tha closest match.
.IP
Use a cold-ass lil carriage return or tha "OK" button ta accept tha current value
in tha text-entry window n' exit.
.IP
On exit, tha contentz of tha text-entry window is freestyled ta \fB\*p\fPz output.
.
.IP "\fB--editbox \fIfilepath height width\fR"
Da edit-box dialog displays a cold-ass lil copy of tha file.
Yo ass may edit it using
the \fIbackspace\fP, \fIdelete\fP n' cursor keys
to erect typin errors.
It also recognizes pageup/pagedown.
Unlike tha \fB--inputbox\fP,
you must tab ta tha "OK" or "Cancel" buttons ta close tha dialog.
Pressin tha "Enter" key within tha box will split tha correspondin line.
.IP
On exit, tha contentz of tha edit window is freestyled ta \fB\*p\fPz output.
.
.nf
.IP "\fB--form \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen \fR] \fI..."
.fi
Da \fBform\fP dialog displays a gangbangin' form consistin of labels n' fields,
which is positioned on a scrollable window by coordinates given up in tha script.
Da field length \fIflen\fR n' input-length \fIilen\fR tell how tha fuck long
the field can be.
Da forma defines tha length shown fo' a selected field,
while tha latta defines tha permissible length of tha data entered up in the
field.
.RS
.bP
If \fIflen\fR is zero, tha correspondin field cannot be altered.
and tha contentz of tha field determine tha displayed-length.
.bP
If \fIflen\fR is negative, tha correspondin field cannot be altered,
and tha negated value of \fIflen\fR is used as tha displayed-length.
.bP
If \fIilen\fR is zero, it is set ta \fIflen\fR.
.RE
.IP
Use up/down arrows (or control/N, control/P) ta move between fields.
Use tab ta move between windows.
.IP
On exit, tha contentz of tha form-fieldz is freestyled ta \fB\*p\fPz output,
each field separated by a newline.
Da text used ta fill non-editable fields
(\fIflen\fR is zero or negative)
is not freestyled out.
.
.
.IP "\fB--fselect \fIfilepath height width\fR"
Da \fBfselect\fP (file-selection) dialog displays a text-entry window up in which you can type
a filename (or directory), n' above dat two windows wit directory
names n' filenames.
.IP
Here
\fBfilepath\fP
can be a gangbangin' filepath up in which case tha file n' directory windows
will display tha contentz of tha path n' tha text-entry window will contain
the preselected filename.
.IP
Use tab or arrow keys ta move between tha windows.
Within tha directory or filename windows, use tha up/down arrow keys
to scroll tha current selection.
Use tha space-bar ta copy tha current selection tha fuck into tha text-entry
window.
.IP
Typin any printable charactas switches focus ta tha text-entry window,
enterin dat characta as well as scrollin tha directory n' filename
windows ta tha closest match.
.IP
Typin tha space characta forces \fB\*p\fP ta complete tha current
name (up ta tha point where there may be a match against mo' than one
entry).
.IP
Use a cold-ass lil carriage return or tha "OK" button ta accept tha current value
in tha text-entry window n' exit.
.IP
On exit, tha contentz of tha text-entry window is freestyled ta \fB\*p\fPz output.
.
.
.IP "\fB--gauge \fItext height width [percent]\fR"
A
\fBgauge\fP
box displays a meta along tha bottom of tha box.
Da meta indicates tha cementage.
New cementages is read from
standard input, one integer per line.
Da meta is updated
to reflect each freshly smoked up cementage.
If tha standard input readz tha strang "XXX",
then tha straight-up original gangsta line followin is taken as a integer cementage,
then subsequent lines up ta another "XXX" is used fo' a freshly smoked up prompt.
Da gauge exits when EOF is reached on tha standard input.
.IP
Da \fIpercent\fR value denotes tha initial cementage shown up in tha meter.
If not specified, it is zero.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Da widget accepts no input, so tha exit status be always OK.
.
.
.IP "\fB--infobox \fItext height width"
An \fBinfo\fP box is basically a \fBmessage\fP box.
But fuck dat shiznit yo, tha word on tha street is dat up in dis case, \fB\*p\fP
will exit immediately afta displayin tha message ta tha user.
Da screen aint cleared when \fB\*p\fP
exits, so dat tha message will remain on tha screen until tha calling
shell script clears it later.
This is useful when you wanna inform
the user dat some operations is carryin on dat may require some
time ta finish.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Only a "OK" button is provided fo' input,
but a ESC exit status may be returned.
.
.
.IP "\fB--inputbox \fItext height width [init]"
An
\fBinput\fP
box is useful when you wanna ask thangs that
require tha user ta input a strang as tha answer.
If init is supplied
it is used ta initialize tha input string.
When enterin tha string,
the \fIbackspace\fP, \fIdelete\fP n' cursor keys
can be used ta erect typin errors.
If tha input strang is longer than
can fit up in tha dialog box, tha input field is ghon be scrolled.
.IP
On exit, tha input strang is ghon be printed on \fB\*p\fPz output.
.
.
.IP "\fB--inputmenu \fItext height width menu-height \fR[ \fItag item \fR] \fI..."
An \fBinputmenu\fP box is straight-up similar ta a ordinary \fBmenu\fP box.
There is only all dem differences between them:
.RS
.TP 4
1.
Da entries is not automatically centered but left adjusted.
.TP
2.
An extra button (called \fIRename\fP) is implied ta rename
the current item when it is pressed.
.TP
3.
It be possible ta rename tha current entry by pressin the
\fIRename\fP
button.
Then \fB\*p\fP will write tha followin on \fB\*p\fPz output.
.IP
RENAMED <tag> <item>
.RE
.
.
.IP "\fB--menu \fItext height width menu-height \fR[ \fItag item \fR] \fI..."
As its name suggests, a
\fBmenu\fP
box be a gangbangin' finger-lickin' dialog box dat can be used ta present a list of chizzlez in
the form of a menu fo' tha user ta chizzle.
Choices is displayed up in tha order given.
Each menu entry consistz of a \fItag\fP strang n' a \fIitem\fP string.
Da \fItag\fP
gives tha entry a name ta distinguish it from tha other entries up in the
menu.
Da \fIitem\fP be a gangbangin' finger-lickin' dirty-ass short description of tha option dat tha entry represents.
Da user can move between tha menu entries by pressin the
cursor keys, tha straight-up original gangsta letta of tha \fItag\fP
as a hot-key, or tha number keys
.IR 1-9 ". There are"
\fImenu-height\fP
entries displayed up in tha menu at one time yo, but tha menu will be
scrolled if there be mo' entries than dis shit.
.IP
On exit tha \fItag\fP
of tha chosen menu entry is ghon be printed on \fB\*p\fPz output.
If tha "\fB--help-button\fR" option is given, tha correspondin help
text is ghon be printed if tha user selects tha help button.
.
.nf
.IP "\fB--mixedform \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen itype \fR] \fI..."
.fi
Da \fBmixedform\fP dialog displays a gangbangin' form consistin of labels n' fields,
much like tha \fB--form\fP dialog.
It differs by addin a gangbangin' field-type parameta ta each fieldz description.
Each bit up in tha type denotes a attribute of tha field:
.RS
.TP 5
1
hidden, e.g., a password field.
.TP 5
2
readonly, e.g., a label.
.RE
.
.IP "\fB--mixedgauge \fItext height width cement \fR[ \fItag1 item1 \fR] \fI..."
A
\fBmixedgauge\fP
box displays a meta along tha bottom of tha box.
Da meta indicates tha cementage.
.IP
It also displays a list of tha \fItag\fP- n' \fIitem\fP-values at the
top of tha box.
See \*l(3) fo' tha tag joints.
.IP
Da \fItext\fP is shown as a cold-ass lil caption between tha list n' meter.
Da \fIpercent\fR value denotes tha initial cementage shown up in tha meter.
.IP
No provision is made fo' readin data from tha standard input as \fB--gauge\fP
does.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Da widget accepts no input, so tha exit status be always OK.
.
.IP "\fB--msgbox \fItext height width"
A \fBmessage\fP box is straight-up similar ta a \fByes/no\fP box.
Da only difference between a \fBmessage\fP box n' a \fByes/no\fP
box is dat a \fBmessage\fP box has only a single \fBOK\fP button.
Yo ass can use dis dialog box ta display any message you like.
Afta readin tha message, tha user can press tha \fIENTER\fP key so that
\fB\*p\fP will exit n' tha callin shell script can continue its operation.
.IP
If tha message is too big-ass fo' tha space,
\fB\*p\fP may allow you ta scroll it,
provided dat tha underlyin curses implementation is capable enough.
In dis case, a cementage is shown up in tha base of tha widget.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Only a "OK" button is provided fo' input,
but a ESC exit status may be returned.
.
.IP "\fB--pause \fItext height width seconds\fR"
A
\fBpause\fP
box displays a meta along tha bottom of tha box.
Da meta indicates how tha fuck nuff secondz remain until tha end of tha pause.
Da pause exits when timeout is reached
or tha user presses tha OK button
(status OK)
or tha user presses tha CANCEL button
or Esc key.
.IP "\fB--passwordbox \fItext height width [init]"
A \fBpassword\fP box is similar ta a input box,
except dat tha text tha user entas aint displayed.
This is useful when promptin fo' passwordz or other
sensitizzle shiznit.
Be aware dat if anythang is passed up in "init", it
will be visible up in tha systemz process table ta casual snoopers.
Also, it
is straight-up confusin ta tha user ta provide dem wit a thugged-out default password they
cannot see.
For these reasons, rockin "init" is highly discouraged.
See "\fB--insecure\fP" if you do not care bout yo' password.
.IP
On exit, tha input strang is ghon be printed on \fB\*p\fPz output.
.
.
.nf
.IP "\fB--passwordform \fItext height width formheight \fR[ \fIlabel y x item y x flen ilen \fR] \fI..."
.fi
This is identical ta \fB--form\fP except dat all text fieldz are
treated as \fBpassword\fP widgets rather than \fBinputbox\fP widgets.
.
.
.IP "\fB--prgbox \fItext command height width"
.IP "\fB--prgbox \fIcommand height width"
A \fBprgbox\fP is straight-up similar ta a \fBprogrambox\fP.
.IP
This dialog box is used ta display tha output of a cold-ass lil command dat is
specified as a argument ta \fBprgbox\fP.
.IP
Afta tha command completes, tha user can press tha \fIENTER\fP key so that
\fBdialog\fP will exit n' tha callin shell script can continue its operation.
.IP
If three parametas is given, it displays tha text under tha title,
delineated from tha scrollin filez contents.
If only two parametas is given, dis text is omitted.
.
.
.IP "\fB--programbox \fItext height width"
.IP "\fB--programbox \fIheight width"
A \fBprogrambox\fP is straight-up similar ta a \fBprogressbox\fP.
Da only difference between a \fBprogram\fP box n' a \fBprogress\fP
box is dat a \fBprogram\fP box displays a \fBOK\fP button
(but only afta tha command completes).
.IP
This dialog box is used ta display tha piped output of a cold-ass lil command.
Afta tha command completes, tha user can press tha \fIENTER\fP key so that
\fBdialog\fP will exit n' tha callin shell script can continue its operation.
.IP
If three parametas is given, it displays tha text under tha title,
delineated from tha scrollin filez contents.
If only two parametas is given, dis text is omitted.
.
.
.IP "\fB--progressbox \fItext height width"
.IP "\fB--progressbox \fIheight width"
A \fBprogressbox\fP is similar ta a \fBtailbox\fP,
except that
.RS
.TP 3
a) rather than displayin tha contentz of a gangbangin' file,
it displays tha piped output of a cold-ass lil command and
.TP 3
b) it will exit when it reaches tha end of tha file
(there is no "OK" button).
.RE
.IP
If three parametas is given, it displays tha text under tha title,
delineated from tha scrollin filez contents.
If only two parametas is given, dis text is omitted.
.
.
.IP "\fB--radiolist \fItext height width list-height \fR [ \fItag item status \fR] \fI..."
A
\fBradiolist\fP
box is similar ta a
\fBmenu\fP
box.
Da only difference is
that you can indicate which entry is currently selected, by settin its
.IR status " ta " on "."
.IP
On exit, tha tag of tha selected item is freestyled ta \fB\*p\fPz output.
.
.
.IP "\fB--tailbox \fIfile height width"
Display text from a gangbangin' file up in a gangbangin' finger-lickin' dialog box, as up in a "tail -f" command.
Scroll left/right rockin vi-style 'h' n' 'l', or arrow-keys.
A '0' resets tha scrolling.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Only a "OK" button is provided fo' input,
but a ESC exit status may be returned.
.
.
.nf
.IP "\fB--rangebox \fItext height width list-height min-value max-value default-value"
.fi
Allow tha user ta select from a range of joints, e.g., rockin a slider.
Da dialog shows tha current value as a funky-ass bar (like tha gauge dialog).
Tabs or arrow keys move tha cursor between tha buttons n' tha value.
When tha cursor is on tha value,
you can edit it by:
.RS
.TP 5
left/right cursor movement ta select a gangbangin' finger-lickin' digit ta modify
.TP 5
+/-
charactas ta increment/decrement tha digit by one
.TP 5
0 all up in 9
to set tha digit ta tha given value
.RE
.IP
Some keys is also recognized up in all cursor positions:
.RS
.TP 5
home/end
set tha value ta its maximum or minimum
.TP 5
pageup/pagedown
increment tha value so dat tha slider moves by one column
.RE
.
.
.IP "\fB--tailboxbg \fIfile height width"
Display text from a gangbangin' file up in a gangbangin' finger-lickin' dialog box as a funky-ass background task,
as up in a "tail -f &" command.
Scroll left/right rockin vi-style 'h' n' 'l', or arrow-keys.
A '0' resets tha scrolling.
.IP
\*L treats tha background task specially if there be other
widgets (\fB--and-widget\fP) on tha screen concurrently.
Until dem widgets is closed (e.g., a "OK"),
\fB\*p\fP will big-ass up all of tha tailboxbg widgets up in tha same process,
pollin fo' thugged-out shit.
Yo ass may bust a tab ta traverse between tha widgets on tha screen,
and close dem individually, e.g., by pressin \fIENTER\fP.
Once tha non-tailboxbg widgets is closed, \fB\*p\fP forks a cold-ass lil copy of itself
into tha background, n' prints its process id if tha "\fB--no-kill\fP" option
is given.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Only a "EXIT" button is provided fo' input,
but a ESC exit status may be returned.
.IP
NOTE:
Older versionz of \fB\*p\fP forked immediately n' attempted to
update tha screen individually.
Besides bein wack fo' performance,
it was unworkable.
Some olda scripts may not work properly wit tha polled scheme.
.
.
.IP "\fB--textbox \fIfile height width"
A
\fBtext\fP
box lets you display tha contentz of a text file up in a gangbangin' finger-lickin' dialog box.
It be like a simple text file viewer.
Da user can move all up in tha file by rockin the
cursor, page-up, page-down
and \fIHOME/END\fR keys available on most keyboards.
If tha lines is too long ta be displayed up in tha box,
the \fILEFT/RIGHT\fP
keys can be used ta scroll tha text region horizontally.
Yo ass may also use vi-style keys h, j, k, l up in place of tha cursor keys,
and B or N up in place of tha page-up n' page-down keys.
Scroll up/down rockin vi-style 'k' n' 'j', or arrow-keys.
Scroll left/right rockin vi-style 'h' n' 'l', or arrow-keys.
A '0' resets tha left/right scrolling.
For mo' convenience,
vi-style forward n' backward searchin functions is also provided.
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
Only a "EXIT" button is provided fo' input,
but a ESC exit status may be returned.
.
.
.IP "\fB--timebox \fItext height [width minute minute second]"
A dialog is displayed which allows you ta select hour, minute n' second.
If tha joints fo' hour, minute or second is missin or negative,
the current datez correspondin joints is used.
Yo ass can increment or decrement any of dem rockin the
left-, up-, right- n' down-arrows.
Use tab or backtab ta move between windows.
.IP
On exit, tha result is printed up in tha form hour:minute:second.
Da format can be overridden rockin tha \fB--time-format\fP option.
.
.
.IP "\fB--treeview \fItext height width list-height \fR[ \fItag item status depth \fR] \fI..."
Display data organized as a tree.
Each crew of data gotz nuff a tag,
the text ta display fo' tha item,
its status ("on" or "off")
and tha depth of tha item up in tha tree.
.IP
Only one item can be selected (like tha \fBradiolist\fP).
Da tag aint displayed.
.IP
On exit, tha tag of tha selected item is freestyled ta \fB\*p\fPz output.
.
.
.IP "\fB--yesno \fItext height width"
A \fByes/no\fP dialog box of
size \fIheight\fP rows by \fIwidth\fP columns is ghon be displayed.
Da strang specified by
\fItext\fP
is displayed inside tha dialog box.
If dis strang is too long ta fit
in one line, it is ghon be automatically divided tha fuck into multiple lines at
appropriate places.
The
\fItext\fP
strin can also contain tha sub-string
.I
"\en"
or newline characters
\fI`\en'\fP
to control line breakin explicitly.
This dialog box is useful for
askin thangs dat require tha user ta answer either yeaaaa or no.
Da dialog box has a
\fBYes\fP
button n' a
\fBNo\fP
button, up in which tha user can switch between by pressin the
.IR TAB " key."
.IP
On exit, no text is freestyled ta \fB\*p\fPz output.
In addizzle ta tha "Yes" n' "No" exit codes (see DIAGNOSTICS)
an ESC exit status may be returned.
.IP
Da codes used fo' "Yes" n' "No" match dem used fo' "OK" n' "Cancel",
internally no distinction is made.
.
.\" ************************************************************************
.SS "Obsolete Options"
.\" from cdialog 0.9a (Pako)
.IP "\fB--beep"
This was used ta tell tha original gangsta cdialog dat it should cook up a funky-ass beep
when tha separate processez of tha tailboxbg widget would repaint tha screen.
.
.\" from cdialog 0.9a (Pako)
.IP "\fB--beep-after"
Beep afta a user has completed a widget by pressin one of tha buttons.
.
.\" ************************************************************************
.SH "RUN-TIME CONFIGURATION"
.TP 4
1.
Smoke a sample configuration file by typing:
.LP
.in +1i
"\*p --create-rc <file>"
.TP 4
2.
At start,
\fB\*p\fP
determines tha settings ta use as bigs up:
.RS
.TP 4
a)
if environment variable
\fBDIALOGRC\fP
is set, its value determines tha name of tha configuration file.
.TP 4
b)
if tha file up in (a) aint found, use tha file
\fI$HOME/.dialogrc\fP
as tha configuration file.
.TP 4
c)
if tha file up in (b) aint found, try rockin tha GLOBALRC file determined at
compile-time, i.e., \fI/etc/dialogrc\fP.
.TP 4
d)
if tha file up in (c) aint found, use compiled up in defaults.
.RE
.TP 4
3.
Edit tha sample configuration file n' copy it ta some place that
\fB\*p\fP
can find, as stated up in step 2 above.
.
.\" ************************************************************************
.SH "KEY BINDINGS"
Yo ass can override or add ta key bindings up in \fB\*p\fP
by addin ta tha configuration file.
\fB\*L\fPz \fBbindkey\fP command maps single keys ta its internal coding.
.Ex
bindkey \fIwidget\fP \fIcurses_key\fP \fIdialog_key\fP
.Ee
.PP
Da \fIwidget\fP name can be "*" (all widgets), or
specific widgets like fuckin \fBtextbox\fP.
Specific widget bindings override tha "*" bindings.
User-defined bindings override tha built-in bindings.
.PP
Da \fIcurses_key\fP can be any of tha names derived from
\fBcurses.h\fP, e.g., "HELP" from "KEY_HELP".
\fB\*L\fP also recognizes ANSI control charactas like fuckin "^A", "^?",
as well as C1-controls like fuckin "~A" n' "~?".
Finally, it allows any single characta ta be escaped wit a funky-ass backslash.
.PP
\fB\*L\fPz internal keycode names correspond ta the
\fBDLG_KEYS_ENUM\fP type in
\fBdlg_keys.h\fP, e.g., "HELP" from "DLGK_HELP".
.SS Widget Names
.PP
Some widgets (like fuckin tha formbox) have a area where fieldz can be edited.
Those is managed up in a subwindow of tha widget, and
may have separate keybindings from tha main widget
because tha subwindows is registered rockin a gangbangin' finger-lickin' different name.
.TS
centa tab(/) ;
l l l
l l l .
\fIWidget\fR/\fIWindow name\fR/\fISubwindow Name\fR
calendar/calendar
checklist/checklist
editbox/editbox/editbox2
form/formbox/formfield
fselect/fselect/fselect2
inputbox/inputbox/inputbox2
menu/menubox/menu
msgbox/msgbox
pause/pause
progressbox/progressbox
radiolist/radiolist
tailbox/tailbox
textbox/textbox/searchbox
timebox/timebox
yesno/yesno
.TE
.PP
Some widgets is straight-up other widgets,
usin internal settings ta modify tha behavior.
Those use tha same widget name as tha actual widget:
.TS
centa tab(/) ;
l l
l l .
\fIWidget\fR/\fIActual Widget\fR
dselect/fselect
infobox/msgbox
inputmenu/menu
mixedform/form
passwordbox/inputbox
passwordform/form
prgbox/progressbox
programbox/progressbox
tailboxbg/tailbox
.TE
.SS Built-in Bindings
This manual page do not list tha key bindings fo' each widget,
because dat detailed shiznit can be obtained by hustlin \fB\*p\fP.
If you have set tha \fB--trace\fP option,
\fB\*p\fP writes tha key-bindin shiznit fo' each widget
as it is registered.
.SS Example
Normally \fB\*p\fP uses different keys fo' navigatin between tha buttons
and editin part of a gangbangin' finger-lickin' dialog versus navigatin within tha editin part.
That is, tab (and back-tab) traverse buttons
(or between buttons n' tha editin part),
while arrow keys traverse fieldz within tha editin part.
Tabs is also recognized as a special case fo' traversin between
widgets, e.g., when rockin multiple tailboxbg widgets.
.PP
Some playas may wish ta use tha same key fo' traversin within the
editin part as fo' traversin between buttons.
Da form widget is freestyled ta support dis sort of redefinizzle of
the keys, by addin a special crew up in <code>dlgk_keys.h</code>
for "form" (left/right/next/prev).
Here be a example bindin demonstratin how tha fuck ta do this:
.Ex
bindkey formfield TAB  form_NEXT
bindkey formbox   TAB  form_NEXT
bindkey formfield BTAB form_prev
bindkey formbox   BTAB form_prev
.Ee
.PP
That type of redefinizzle would not be useful up in other widgets,
e.g., calendar, cuz of tha potentially big-ass number of fieldz ta traverse.
.
.\" ************************************************************************
.SH ENVIRONMENT
.TP 15
\fBDIALOGOPTS\fP
Define dis variable ta apply any of tha common options ta each widget.
Most of tha common options is reset before processin each widget.
If you set tha options up in dis environment variable,
they is applied ta \fB\*p\fPz state afta tha reset.
As up in tha "\fB--file\fP" option,
double-quotes n' backslashes is interpreted.
.IP
Da "\fB--file\fP" option aint considered a cold-ass lil common option
(so you cannot embed it within dis environment variable).
.TP 15
\fBDIALOGRC\fP
Define dis variable if you wanna specify tha name of tha configuration file
to use.
.TP 15
\fBDIALOG_CANCEL\fP
.TP 15
\fBDIALOG_ERROR\fP
.TP 15
\fBDIALOG_ESC\fP
.TP 15
\fBDIALOG_EXTRA\fP
.TP 15
\fBDIALOG_HELP\fP
.TP 15
\fBDIALOG_ITEM_HELP\fP
.TP 15
\fBDIALOG_OK\fP
Define any of these variablez ta chizzle tha exit code on
Cancel (1),
error (-1),
ESC (255),
Extra (3),
Help (2),
Help wit \fB--item-help\fP (2),
or OK (0).
Normally shell scripts cannot distinguish between -1 n' 255.
.TP 15
\fBDIALOG_TTY\fP
Set dis variable ta "1" ta provide compatibilitizzle wit olda versions
of \fB\*p\fP which assumed dat if tha script redirects tha standard output,
that tha "\fB--stdout\fP" option was given.
.SH FILES
.TP 20
\fI$HOME/.dialogrc\fP
default configuration file
.SH EXAMPLES
Da \fB\*p\fP sources contain nuff muthafuckin samples
of how tha fuck ta use tha different box options n' how tha fuck they look.
Just take a look tha fuck into tha directory \fBsamples/\fP of tha source.
.SH DIAGNOSTICS
Exit status is subject ta bein overridden by environment variables.
Da default joints n' correspondin environment variables
that can override dem are:
.TP 5
0
if tha \fBYES\fP or \fBOK\fP button is pressed (DIALOG_OK).
.TP 5
1
if the
.BR No " or " Cancel
button is pressed (DIALOG_CANCEL).
.TP 5
2
if the
.BR Help
button is pressed (DIALOG_HELP),
.br
except as noted below bout DIALOG_ITEM_HELP.
.TP 5
3
if the
.BR Extra
button is pressed (DIALOG_EXTRA).
.TP 5
4
if the
.BR Help
button is pressed,
.br
and tha \fB--item-help\fP option is set
.br
and tha DIALOG_ITEM_HELP environment variable is set ta 4.
.IP
While any of tha exit-codes can be overridden rockin environment variables,
this special case was introduced up in 2004 ta simplify compatibility.
\fB\*L\fP uses DIALOG_ITEM_HELP(4) internally,
but unless tha environment variable be also set,
it chizzlez dat ta DIALOG_HELP(2) on exit.
.TP 5
-1
if errors occur inside \fB\*p\fP (DIALOG_ERROR)
or \fB\*p\fP exits cuz tha \fIESC\fP key (DIALOG_ESC) was pressed.
.
.\" ************************************************************************
.SH PORTABILITY
\fB\*L\fP works wit X/Open curses.
But fuck dat shiznit yo, tha word on tha street is dat some implementations have deficiencies:
.RS 3
.bP
HPUX curses (and like others) do not open tha terminal properly for
the \fInewterm\fP function.
This interferes wit \fB\*p\fPz \fB--input-fd\fP option,
by preventin cursor-keys n' similar escape sequences from bein recognized.
.bP
NetBSD 5.1 curses has incomplete support fo' wide-characters.
\fB\*p\fP will build yo, but not all examplez display properly.
.RE
.\" ************************************************************************
.SH COMPATIBILITY
Yo ass may wanna write scripts which run wit other \fBdialog\fP "clones".
.SS ORIGINAL DIALOG
First, there is tha "original" \fBdialog\fP program ta consider (versions
0.3 ta 0.9).
It had some misspelled (or inconsistent) options.
Da \fB\*p\fP program maps dem deprecated options ta tha preferred ones.
They include:
.RS
.TS
l l
_ _
l l.
\fIOption\fR	\fITreatment\fR
\fB--beep-after\fP	ignored
\fB--guage\fP	mapped ta \fB--gauge\fP
.TE
.RE
.SS XDIALOG
Technically, "\fBXdialog\fP",
this be a X application.
With some care, it is possible ta write useful scripts dat work
with both \fBXdialog\fP n' \fBdialog\fP.
.PP
Da \fB\*p\fP program ignores these options which is recognized
by \fBXdialog\fP:
.RS
.TS
l l
_ _
l l.
\fIOption\fR	\fITreatment\fR
\fB--allow-close\fP	ignored
\fB--auto-placement\fP	ignored
\fB--fixed-font\fP	ignored
\fB--icon\fP	ignored
\fB--keep-colors\fP	ignored
\fB--no-close\fP	ignored
\fB--no-cr-wrap\fP	ignored
\fB--screen-center\fP	ignored
\fB--separator\fP	mapped ta \fB--separate-output\fP
\fB--smooth\fP	ignored
\fB--under-mouse\fP	ignored
\fB--wmclass\fP	ignored
.TE
.RE
.PP
\fBXdialog\fPz manpage has a section discussin its compatibilitizzle wit \fB\*p\fP.
There is some differences not shown up in tha manpage.
For example, tha html documentation states
.RS
.PP
Note:  forma  Xdialog  releases  used  tha  "\n" (line feed) as a
results  separator  fo'  tha  checklist  widget; dis has been
changed  ta  "/"  up in  Xdialog v1.5.0 so ta make it compatible with
(c)dialog.  In  yo'  oldschool scripts rockin tha Xdialog checklist, you
will  then  have  ta  add  tha --separate-output option before the
--checklist one.
.RE
.PP
\fB\*L\fP has not used a gangbangin' finger-lickin' different separator;
the difference was likely cuz of mad drama regardin some script.
.SS WHIPTAIL
Then there is \fBwhiptail\fP.
For practical purposes, it is maintained by Debian
(very lil work is done by its upstream pimpers).
Its documentation (README.whiptail) fronts
.RS
.sp
.nf
whiptail(1) be a lightweight replacement fo' \*p(1),
to provide dialog boxes fo' shell scripts.
It be built on the
newt windowin library rather than tha ncurses library, allowing
it ta be smalla up in embedded enviroments like fuckin installers,
rescue disks, etc.
.sp
whiptail is designed ta be drop-in compatible wit \*p yo, but
has less features: some dialog boxes is not implemented, such
as tailbox, timebox, calendarbox, etc.
.fi
.RE
.PP
Comparin actual sizes (Debian testing, 2007/1/10):
Da total of sizes fo' \fBwhiptail\fP, tha newt, popt n' slang libraries is 757kb.
Da comparable number fo' \fB\*p\fP (countin ncurses) is 520kb.
Disregard tha straight-up original gangsta paragraph.
.PP
Da second paragraph is misleading, since \fBwhiptail\fP
also do not work fo' common optionz of \fB\*p\fP,
like fuckin tha gauge box.
\fBwhiptail\fP is less compatible wit \fB\*p\fP than the
original gangsta mid-1990s dialog 0.4 program.
.PP
\fBwhiptail\fPz manpage borrows features from \fB\*p\fP, e.g.,
but oddly cites only \fB\*p\fP versions up ta 0.4 (1994) as a source.
That is, its manpage refers ta features which
were borrowed from mo' recent versionz of \fB\*p\fP, e.g.,
.bP
\fB--gauge\fP (from 0.5)
.bP
\fB--passwordbox\fP (from Debian chizzlez up in 1999),
.bP
\fB--default-item\fP (from \fB\*p\fP 2000/02/22),
.bP
\fB--output-fd\fP (from \fB\*p\fP 2002/08/14).
.PP
Somewhat humorously, one may note dat tha \fBpopt\fP feature
(undocumented up in its manpage)
of rockin a "--" as a escape was documented up in \fB\*p\fPz manpage about
a year before dat shiznit was mentioned up in \fBwhiptail\fPz manpage.
\fBwhiptail\fPz manpage incorrectly attributes dat ta \fBgetopt\fP
(and is inaccurate anyway).
.PP
Debian uses \fBwhiptail\fP fo' tha straight-up legit \fB\*p\fP variation.
.PP
Da \fB\*p\fP program ignores or maps these options which is recognized
by \fBwhiptail\fP:
.RS
.TS
l l
_ _
l l.
\fIOption\fR	\fITreatment\fR
\fB--cancel-button\fP	mapped ta \fB--cancel-label\fP
\fB--fb\fP	ignored
\fB--fullbutton\fP	ignored
\fB--no-button\fP	mapped ta \fB--no-label\fP
\fB--nocancel\fP	mapped ta \fB--no-cancel\fP
\fB--noitem\fP	mapped ta \fB--no-items\fP
\fB--notags\fP	mapped ta \fB--no-tags\fP
\fB--ok-button\fP	mapped ta \fB--ok-label\fP
\fB--scrolltext\fP	mapped ta \fB--scrollbar\fP
\fB--topleft\fP	mapped ta \fB--begin 0 0\fP
\fB--yes-button\fP	mapped ta \fB--yes-label\fP
.TE
.RE
.LP
There is visual differences which is not addressed by command-line options:
.bP
\fB\*p\fP centas lists within tha window.
\fBwhiptail\fP typically puts lists against tha left margin.
.bP
\fBwhiptail\fP uses angle brackets ("<" n' ">") fo' markin buttons.
\fB\*p\fP uses square brackets.
.bP
\fBwhiptail\fP marks tha limitz of subtitlez wit vertical bars.
\fB\*p\fP do not mark tha limits.
.bP
\fBwhiptail\fP attempts ta mark tha top/bottom cellz of a scrollbar
with up/down arrows.
When it cannot do this,
it fills dem cells wit tha background color
of tha scrollbar n' confusin tha user.
\fB\*p\fP uses tha entire scrollbar space,
thereby gettin betta resolution.
.\" ************************************************************************
.SH BUGS
Perhaps.
.SH AUTHOR
.LP
Thomas E. Dickey (updates fo' 0.9b n' beyond)
.SH CONTRIBUTORS
Kiran Cherupally - tha mixed form n' mixed gauge widgets.
.LP
Tobias C. Rittweiler
.LP
Valery Reznic - tha form n' progressbox widgets.
.LP
Yura Kalinichenko adapted tha gauge widget as "pause".
.PP
This be a rewrite (except as needed ta provide compatibility)
of tha earlier version of \fB\*p 0.9a\fP,
which lists as authors:
.bP
Savio Lam - version 0.3, "dialog"
.bP
Stuart Herbert - patch fo' version 0.4
.bP
Marc Ewin - tha gauge widget.
.bP
Pasquale De Marco "Pako" - version 0.9a, "cdialog"
