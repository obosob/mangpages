.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLCHEAT 1"
.TH PERLCHEAT 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlcheat \- Perl 5 Cheat Sheet
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This 'cheat sheet' be a handy reference, meant fo' beginnin Perl
programmers. Not every last muthafuckin thang is mentioned yo, but 195 features may
already be overwhelming.
.SS "Da sheet"
.IX Subsection "Da sheet"
.Vb 10
\&  CONTEXTS  SIGILS  ref        ARRAYS        HASHES
\&  void      $scalar SCALAR     @array        %hash
\&  scalar    @array  ARRAY      @array[0, 2]  @hash{\*(Aqa\*(Aq, \*(Aqb\*(Aq}
\&  list      %hash   HASH       $array[0]     $hash{\*(Aqa\*(Aq}
\&            &sub    CODE
\&            *glob   GLOB       SCALAR VALUES
\&                    FORMAT     number, string, ref, glob, undef
\&  REFERENCES
\&  \e      reference       $$foo[1]       aka $foo\->[1]
\&  $@%&*  dereference     $$foo{bar}     aka $foo\->{bar}
\&  []     anon. I aint talkin' bout chicken n' gravy biatch. arrayref  ${$$foo[1]}[2] aka $foo\->[1]\->[2]
\&  {}     anon. I aint talkin' bout chicken n' gravy biatch. hashref   ${$$foo[1]}[2] aka $foo\->[1][2]
\&  \e()    list of refs
\&                         SYNTAX
\&  OPERATOR PRECEDENCE    foreach (LIST) { }     fo' (a;b;c) { }
\&  \->                     while   (e) { }        until (e)   { }
\&  ++ \-\-                  if      (e) { } elsif (e) { } else { }
\&  **                     unless  (e) { } elsif (e) { } else { }
\&  ! ~ \e u+ u\-            given   (e) { when (e) {} default {} }
\&  =~ !~
\&  * / % x                 NUMBERS vs STRINGS  FALSE vs TRUE
\&  + \- .                   =          =        undef, "", 0, "0"
\&  << >>                   +          .        anythang else
\&  named uops              == !=      eq ne
\&  < > <= >= lt gt le ge   < > <= >=  lt gt le ge
\&  == != <=> eq ne cmp ~~  <=>        cmp
\&  &
\&  | ^             REGEX MODIFIERS       REGEX METACHARS
\&  &&              /i case insensitizzle   ^      strang begin
\&  || //           /m line based ^$      $      str end (bfr \en)
\&  .. ...          /s . includes \en      +      one or more
\&  ?:              /x ignore wh.space    *      zero or more
\&  = += last goto  /p preserve           , biatch?      zero or one
\&  , =>            /a ASCII    /aa safe  {3,7}  repeat up in range
\&  list ops        /l locale   /d  dual  |      alternation
\&  not             /u Unicode            []     characta class
\&  n'             /e evaluate /ee rpts  \eb     word boundary
\&  or xor          /g global             \ez     strang end
\&                  /o compile pat once   ()     capture
\&  DEBUG                                 (?:p)  no capture
\&  \-MO=Deparse     REGEX CHARCLASSES     (?#t)  comment
\&  \-MO=Terse       .   [^\en]             (?=p)  ZW pos ahead
\&  \-D##            \es  whitespace        (?!p)  ZW neg ahead
\&  \-d:Trace        \ew  word chars        (?<=p) ZW pos behind \eK
\&                  \ed  digits            (?<!p) ZW neg behind
\&  CONFIGURATION   \epP named property    (?>p)  no backtrack
\&  perl \-V:ivsize  \eh  horiz.wh.space    (?|p|p)branch reset
\&                  \eR  linebreak         (?<n>p)named capture
\&                  \eS \eW \eD \eH negate    \eg{n}  ref ta named cap
\&                                        \eK     keep left part
\&  FUNCTION RETURN LISTS
\&  stat      localtime    calla         SPECIAL VARIABLES
\&   0 dev    0 second      0 package     $_    default variable
\&   1 ino    1 minute      1 filename    $0    program name
\&   2 mode   2 minute        2 line        $/    input separator
\&   3 nlink  3 dizzle         3 subroutine  $\e    output separator
\&   4 uid    4 month\-1     4 hasargs     $|    autoflush
\&   5 gid    5 year\-1900   5 wantarray   $!    sys/libcall error
\&   6 rdev   6 weekdizzle     6 evaltext    $@    eval error
\&   7 size   7 yeardizzle     7 is_require  $$    process ID
\&   8 atime  8 is_dst      8 hints       $.    line number
\&   9 mtime                9 bitmask     @ARGV command line args
\&  10 ctime               10 hinthash    @INC  include paths
\&  11 blkss               3..10 only     @_    subroutine args
\&  12 blcks               wit EXPR      %ENV  environment
.Ve
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Da first version of dis document rocked up on Perl Monks, where several
people had useful suggestions. Nuff props, Perl Monks.
.PP
A special props ta Damian Conway, whoz ass didn't only suggest blingin chizzles,
but also took tha time ta count tha number of listed features n' make a
Perl 6 version ta show dat Perl will stay Perl.
.SH "AUTHOR"
.IX Header "AUTHOR"
Juerd Waalboer <#####@juerd.nl>, wit tha help of nuff Perl Monks.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
<http://perlmonks.org/?node_id=216602> \- tha original gangsta \s-1PM\s0 post
.IP "\(bu" 4
<http://perlmonks.org/?node_id=238031> \- Damian Conwayz Perl 6 version
.IP "\(bu" 4
<http://juerd.nl/site.plp/perlcheat> \- home of tha Perl Cheat Sheet
