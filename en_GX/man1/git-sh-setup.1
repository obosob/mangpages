'\" t
.\"     Title: git-sh-setup
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-SH\-SETUP" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-sh-setup \- Common Git shell script setup code
.SH "SYNOPSIS"
.sp
.nf
\fI\&. "$(git \-\-exec\-path)/git\-sh\-setup"\fR
.fi
.sp
.SH "DESCRIPTION"
.sp
This aint a cold-ass lil command tha end user would wanna run\&. Ever\&. This documentation is meant fo' playas whoz ass is studyin tha Porcelain\-ish scripts and/or is freestylin freshly smoked up ones\&.
.sp
Da \fIgit sh\-setup\fR scriptlet is designed ta be sourced (usin \&.) by other shell scripts ta set up some variablez pointin all up in tha aiiight Git directories n' all dem helper shell functions\&.
.sp
Before sourcin it, yo' script should set up all dem variables; USAGE (and LONG_USAGE, if any) is used ta define message given by usage() shell function\&. Right back up in yo muthafuckin ass. SUBDIRECTORY_OK can be set if tha script can run from a subdirectory of tha hustlin tree (some commandz do not)\&.
.sp
Da scriptlet sets GIT_DIR n' GIT_OBJECT_DIRECTORY shell variablez yo, but do \fBnot\fR export dem ta tha environment\&.
.SH "FUNCTIONS"
.PP
die
.RS 4
exit afta emittin tha supplied error message ta tha standard error stream\&.
.RE
.PP
usage
.RS 4
die wit tha usage message\&.
.RE
.PP
set_reflog_action
.RS 4
Set GIT_REFLOG_ACTION environment ta a given strang (typically tha name of tha program) unless it be already set\&. Whenever tha script runs a
git
command dat thugged-out shiznit refs, a reflog entry is pimped rockin tha value of dis strang ta leave tha record of what tha fuck command updated tha ref\&.
.RE
.PP
git_editor
.RS 4
runs a editor of user\(cqs chizzle (GIT_EDITOR, core\&.editor, VISUAL or EDITOR) on a given file yo, but error up if no editor is specified n' tha terminal is dumb\&.
.RE
.PP
is_bare_repository
.RS 4
outputs
true
or
false
to tha standard output stream ta indicate if tha repository be a funky-ass bare repository (i\&.e\&. without a associated hustlin tree)\&.
.RE
.PP
cd_to_toplevel
.RS 4
runs chdir ta tha toplevel of tha hustlin tree\&.
.RE
.PP
require_work_tree
.RS 4
checks if tha current directory is within tha hustlin tree of tha repository, n' otherwise dies\&.
.RE
.PP
require_work_tree_exists
.RS 4
checks if tha hustlin tree associated wit tha repository exists, n' otherwise dies\&. Often done before callin cd_to_toplevel, which is impossible ta do if there is no hustlin tree\&.
.RE
.PP
require_clean_work_tree <action> [<hint>]
.RS 4
checks dat tha hustlin tree n' index associated wit tha repository have no uncommitted chizzlez ta tracked files\&. Otherwise it emits a error message of tha form
Cannot <action>: <reason>\&. <hint>, n' dies\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
require_clean_work_tree rebase "Please commit or stash them\&."
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
get_author_ident_from_commit
.RS 4
outputs code fo' use wit eval ta set tha GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL n' GIT_AUTHOR_DATE variablez fo' a given commit\&.
.RE
.PP
create_virtual_base
.RS 4
modifies tha straight-up original gangsta file so only lines up in common wit tha second file remain\&. If there is insufficient common material, then tha straight-up original gangsta file is left empty\&. Da result is suitable as a virtual base input fo' a 3\-way merge\&.
.RE
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
