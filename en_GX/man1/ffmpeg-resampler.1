.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FFMPEG-RESAMPLER 1"
.TH FFMPEG-RESAMPLER 1 "2015-01-03" " " " "
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ffmpeg\-resampla \- FFmpeg Resampler
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da FFmpeg resampla serves up a high-level intercourse ta the
libswresample library audio resamplin utilities. Put ya muthafuckin choppers up if ya feel dis! In particular it
allows ta big-ass up audio resampling, audio channel layout rematrixing,
and convert audio format n' packin layout.
.SH "RESAMPLER OPTIONS"
.IX Header "RESAMPLER OPTIONS"
Da audio resampla supports tha followin named options.
.PP
Options may be set by specifyin \-\fIoption\fR \fIvalue\fR up in the
FFmpeg tools, \fIoption\fR=\fIvalue\fR fo' tha aresample filter,
by settin tha value explicitly up in the
\&\f(CW\*(C`SwrContext\*(C'\fR options or rockin tha \fIlibavutil/opt.h\fR \s-1API\s0 for
programmatic use.
.IP "\fBich, in_channel_count\fR" 4
.IX Item "ich, in_channel_count"
Set tha number of input channels. Default value is 0. Right back up in yo muthafuckin ass. Settin this
value aint mandatory if tha correspondin channel layout
\&\fBin_channel_layout\fR is set.
.IP "\fBoch, out_channel_count\fR" 4
.IX Item "och, out_channel_count"
Set tha number of output channels. Default value is 0. Right back up in yo muthafuckin ass. Settin this
value aint mandatory if tha correspondin channel layout
\&\fBout_channel_layout\fR is set.
.IP "\fBuch, used_channel_count\fR" 4
.IX Item "uch, used_channel_count"
Set tha number of used input channels. Default value is 0. This option is
only used fo' special remapping.
.IP "\fBisr, in_sample_rate\fR" 4
.IX Item "isr, in_sample_rate"
Set tha input sample rate. Default value is 0.
.IP "\fBosr, out_sample_rate\fR" 4
.IX Item "osr, out_sample_rate"
Set tha output sample rate. Default value is 0.
.IP "\fBisf, in_sample_fmt\fR" 4
.IX Item "isf, in_sample_fmt"
Specify tha input sample format. Well shiiiit, it is set by default ta \f(CW\*(C`none\*(C'\fR.
.IP "\fBosf, out_sample_fmt\fR" 4
.IX Item "osf, out_sample_fmt"
Specify tha output sample format. Well shiiiit, it is set by default ta \f(CW\*(C`none\*(C'\fR.
.IP "\fBtsf, internal_sample_fmt\fR" 4
.IX Item "tsf, internal_sample_fmt"
Set tha internal sample format. Default value is \f(CW\*(C`none\*(C'\fR.
This will automatically be chosen when it aint explicitly set.
.IP "\fBicl, in_channel_layout\fR" 4
.IX Item "icl, in_channel_layout"
.PD 0
.IP "\fBocl, out_channel_layout\fR" 4
.IX Item "ocl, out_channel_layout"
.PD
Set tha input/output channel layout.
.Sp
See tha Channel Layout section up in tha \fIffmpeg\-utils\fR\|(1) manual
for tha required syntax.
.IP "\fBclev, center_mix_level\fR" 4
.IX Item "clev, center_mix_level"
Set tha centa mix level. Well shiiiit, it aint nuthin but a value expressed up in deciBel, n' must be
in tha interval [\-32,32].
.IP "\fBslev, surround_mix_level\fR" 4
.IX Item "slev, surround_mix_level"
Set tha surround mix level. Well shiiiit, it aint nuthin but a value expressed up in deciBel, n' must
be up in tha interval [\-32,32].
.IP "\fBlfe_mix_level\fR" 4
.IX Item "lfe_mix_level"
Set \s-1LFE\s0 mix tha fuck into non \s-1LFE\s0 level. Well shiiiit, it is used when there be a \s-1LFE\s0 input but no
\&\s-1LFE\s0 output. Well shiiiit, it aint nuthin but a value expressed up in deciBel, n' must
be up in tha interval [\-32,32].
.IP "\fBrmvol, rematrix_volume\fR" 4
.IX Item "rmvol, rematrix_volume"
Set rematrix volume. Default value is 1.0.
.IP "\fBrematrix_maxval\fR" 4
.IX Item "rematrix_maxval"
Set maximum output value fo' rematrixing.
This can be used ta prevent clippin vs. preventin volumn reduction
A value of 1.0 prevents cliping.
.IP "\fBflags, swr_flags\fR" 4
.IX Item "flags, swr_flags"
Set flags used by tha converter n' shit. Default value is 0.
.Sp
It supports tha followin individual flags:
.RS 4
.IP "\fBres\fR" 4
.IX Item "res"
force resampling, dis flag forces resamplin ta be used even when the
input n' output sample rates match.
.RE
.RS 4
.RE
.IP "\fBdither_scale\fR" 4
.IX Item "dither_scale"
Set tha dither scale. Default value is 1.
.IP "\fBdither_method\fR" 4
.IX Item "dither_method"
Set dither method. Y'all KNOW dat shit, muthafucka! Default value is 0.
.Sp
Supported joints:
.RS 4
.IP "\fBrectangular\fR" 4
.IX Item "rectangular"
select rectangular dither
.IP "\fBtriangular\fR" 4
.IX Item "triangular"
select triangular dither
.IP "\fBtriangular_hp\fR" 4
.IX Item "triangular_hp"
select triangular dither wit high pass
.IP "\fBlipshitz\fR" 4
.IX Item "lipshitz"
select lipshitz noise shapin dither
.IP "\fBshibata\fR" 4
.IX Item "shibata"
select shibata noise shapin dither
.IP "\fBlow_shibata\fR" 4
.IX Item "low_shibata"
select low shibata noise shapin dither
.IP "\fBhigh_shibata\fR" 4
.IX Item "high_shibata"
select high shibata noise shapin dither
.IP "\fBf_weighted\fR" 4
.IX Item "f_weighted"
select f\-weighted noise shapin dither
.IP "\fBmodified_e_weighted\fR" 4
.IX Item "modified_e_weighted"
select modified-e-weighted noise shapin dither
.IP "\fBimproved_e_weighted\fR" 4
.IX Item "improved_e_weighted"
select improved-e-weighted noise shapin dither
.RE
.RS 4
.RE
.IP "\fBresampler\fR" 4
.IX Item "resampler"
Set resamplin engine. Default value is swr.
.Sp
Supported joints:
.RS 4
.IP "\fBswr\fR" 4
.IX Item "swr"
select tha natizzle \s-1SW\s0 Resampler; filta options precision n' cheby is not
applicable up in dis case.
.IP "\fBsoxr\fR" 4
.IX Item "soxr"
select tha SoX Resampla (where available); compensation, n' filta options
filter_size, phase_shift, filter_type & kaiser_beta, is not applicable up in this
case.
.RE
.RS 4
.RE
.IP "\fBfilter_size\fR" 4
.IX Item "filter_size"
For swr only, set resamplin filta size, default value is 32.
.IP "\fBphase_shift\fR" 4
.IX Item "phase_shift"
For swr only, set resamplin phase shift, default value is 10, n' must be in
the interval [0,30].
.IP "\fBlinear_interp\fR" 4
.IX Item "linear_interp"
Use Linear Interpolation if set ta 1, default value is 0.
.IP "\fBcutoff\fR" 4
.IX Item "cutoff"
Set cutoff frequency (swr: 6dB point; soxr: 0dB point) ratio; must be a gangbangin' float
value between 0 n' 1.  Default value is 0.97 wit swr, n' 0.91 wit soxr
(which, wit a sample-rate of 44100, preserves tha entire audio crew ta 20kHz).
.IP "\fBprecision\fR" 4
.IX Item "precision"
For soxr only, tha precision up in bits ta which tha resampled signal will be
calculated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da default value of 20 (which, wit suitable dithering, is
appropriate fo' a thugged-out destination bit-depth of 16) gives SoXz 'High Quality'; a
value of 28 gives SoXz 'Straight-up High Quality'.
.IP "\fBcheby\fR" 4
.IX Item "cheby"
For soxr only, selects passband rolloff none (Chebyshev) & higher-precision
approximation fo' 'irrational' ratios. Default value is 0.
.IP "\fBasync\fR" 4
.IX Item "async"
For swr only, simple 1 parameta audio sync ta timestamps rockin stretching,
squeezing, fillin n' trimming. Right back up in yo muthafuckin ass. Settin dis ta 1 will enable fillin and
trimming, larger joints represent tha maximum amount up in samplez dat tha data
may be stretched or squeezed fo' each second.
Default value is 0, thus no compensation be applied ta make tha samplez match
the audio timestamps.
.IP "\fBfirst_pts\fR" 4
.IX Item "first_pts"
For swr only, assume tha straight-up original gangsta pts should be dis value. Da time unit is 1 / sample rate.
This allows fo' padding/trimmin all up in tha start of stream. By default, no
assumption is made bout tha straight-up original gangsta framez expected pts, so no paddin or
trimmin is done. For example, dis could be set ta 0 ta pad tha beginnin with
silence if a audio stream starts afta tha vizzle stream or ta trim any samples
with a wack pts cuz of encoder delay.
.IP "\fBmin_comp\fR" 4
.IX Item "min_comp"
For swr only, set tha minimum difference between timestamps n' audio data (in
seconds) ta trigger stretching/squeezing/fillin or trimmin of the
data ta make it match tha timestamps. Da default is that
stretching/squeezing/fillin n' trimmin is disabled
(\fBmin_comp\fR = \f(CW\*(C`FLT_MAX\*(C'\fR).
.IP "\fBmin_hard_comp\fR" 4
.IX Item "min_hard_comp"
For swr only, set tha minimum difference between timestamps n' audio data (in
seconds) ta trigger adding/droppin samplez ta make it match the
timestamps.  This option effectively be a threshold ta select between
hard (trim/fill) n' soft (squeeze/stretch) compensation. I aint talkin' bout chicken n' gravy biatch. Note that
all compensation is by default disabled all up in \fBmin_comp\fR.
Da default is 0.1.
.IP "\fBcomp_duration\fR" 4
.IX Item "comp_duration"
For swr only, set duration (in seconds) over which data is stretched/squeezed
to make it match tha timestamps. Must be a non-negatizzle double float value,
default value is 1.0.
.IP "\fBmax_soft_comp\fR" 4
.IX Item "max_soft_comp"
For swr only, set maximum factor by which data is stretched/squeezed ta make it
match tha timestamps. Must be a non-negatizzle double float value, default value
is 0.
.IP "\fBmatrix_encoding\fR" 4
.IX Item "matrix_encoding"
Select matrixed stereo encoding.
.Sp
It accepts tha followin joints:
.RS 4
.IP "\fBnone\fR" 4
.IX Item "none"
select none
.IP "\fBdolby\fR" 4
.IX Item "dolby"
select Dolby
.IP "\fBdplii\fR" 4
.IX Item "dplii"
select Dolby Pro Logic \s-1II\s0
.RE
.RS 4
.Sp
Default value is \f(CW\*(C`none\*(C'\fR.
.RE
.IP "\fBfilter_type\fR" 4
.IX Item "filter_type"
For swr only, select resamplin filta type. This only affects resampling
operations.
.Sp
It accepts tha followin joints:
.RS 4
.IP "\fBcubic\fR" 4
.IX Item "cubic"
select cubic
.IP "\fBblackman_nuttall\fR" 4
.IX Item "blackman_nuttall"
select Blackman Nuttall Windowed Sinc
.IP "\fBkaiser\fR" 4
.IX Item "kaiser"
select Kaiser Windowed Sinc
.RE
.RS 4
.RE
.IP "\fBkaiser_beta\fR" 4
.IX Item "kaiser_beta"
For swr only, set Kaiser Window Beta value. Must be a integer up in the
interval [2,16], default value is 9.
.IP "\fBoutput_sample_bits\fR" 4
.IX Item "output_sample_bits"
For swr only, set number of used output sample bits fo' dithering. Must be a integer up in the
interval [0,64], default value is 0, which means it aint used.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIffmpeg\fR\|(1), \fIffplay\fR\|(1), \fIffprobe\fR\|(1), \fIffserver\fR\|(1), \fIlibswresample\fR\|(3)
.SH "AUTHORS"
.IX Header "AUTHORS"
Da FFmpeg pimpers.
.PP
For details bout tha authorship, peep tha Git history of tha project
(git://source.ffmpeg.org/ffmpeg), e.g. by typin tha command
\&\fBgit log\fR up in tha FFmpeg source directory, or browsin the
online repository at <\fBhttp://source.ffmpeg.org\fR>.
.PP
Maintainers fo' tha specific components is listed up in tha file
\&\fI\s-1MAINTAINERS\s0\fR up in tha source code tree.
