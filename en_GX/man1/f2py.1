.TH "F2PY" 1
.SH NAME
f2py \- Fortran ta Python intercourse generator
.SH SYNOPSIS
(1) To construct extension module sources:

.B f2py
[<options>] <fortran files> [[[only:]||[skip:]] <fortran functions> ] [: <fortran files> ...]

(2) To compile fortran filez n' build extension modules:

.B f2py
-c [<options>, <config_fc options>, <extra options>] <fortran files>

(3) To generate signature files:

.B f2py
-h <filename.pyf> ...< same options as up in (1) >
.SH DESCRIPTION
This program generates a Python C/API file (<modulename>module.c)
that gotz nuff wrappers fo' given Fortran or C functions so dat they
can be called from Python.
With tha \-c option tha corresponding
extension modulez is built.
.SH OPTIONS
.TP
.B \-h <filename>
Write signaturez of tha fortran routines ta file <filename> and
exit. Yo ass can then edit <filename> n' use it instead of <fortran
files>. If <filename>==stdout then tha signatures is printed to
stdout.
.TP
.B <fortran functions>
Namez of fortran routines fo' which Python C/API functions will be
generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Default be all dat is found up in <fortran files>.
.TP
.B skip:
Ignore fortran functions dat follow until `:'.
.TP
.B only:
Use only fortran functions dat follow until `:'.
.TP
.B :
Git back ta <fortran files> mode.
.TP
.B \-m <modulename>
Name of tha module; f2py generates a Python/C API file
<modulename>module.c or extension module <modulename>.  Default is
\'untitled\'.
.TP
.B \-\-[no\-]lower
Do [not] lower tha cases up in <fortran files>. By default, \-\-lower is
assumed wit \-h key, n' \-\-no\-lower without \-h key.
.TP
.B \-\-build\-dir <dirname>
All f2py generated filez is pimped up in <dirname>. Default is tempfile.mkdtemp().
.TP
.B \-\-overwrite\-signature
Overwrite existin signature file.
.TP
.B \-\-[no\-]latex\-doc
Smoke (or not) <modulename>module.tex.  Default is \-\-no\-latex\-doc.
.TP
.B \-\-short\-latex
Smoke 'incomplete' LaTeX document (without commandz \\documentclass,
\\tableofcontents, n' \\begin{document}, \\end{document}).
.TP
.B \-\-[no\-]rest\-doc
Smoke (or not) <modulename>module.rst.  Default is \-\-no\-rest\-doc.
.TP
.B \-\-debug\-capi
Smoke C/API code dat reports tha state of tha wrappers during
runtime. Useful fo' debugging.
.TP
.B \-include\'<includefile>\'
Add CPP #include statement ta tha C/API code.  <includefile> should be
in tha format of either `"filename.ext"' or `<filename.ext>'.  As a
result <includefile> is ghon be included just before wrapper functions
part up in tha C/API code. Da option is depreciated, use `usercode`
statement up in signature filez instead.
.TP
.B \-\-[no\-]wrap\-functions
Smoke Fortran subroutine wrappers ta Fortran 77
functions. \-\-wrap\-functions is default cuz it ensures maximum
portability/compila independence.
.TP
.B \-\-help\-link [..]
List system resources found by system_info.py. [..] may contain
a list of resources names. Right back up in yo muthafuckin ass. See also \-\-link\-<resource> switch below.
.TP
.B \-\-quiet
Run on tha fuckin' down-lowly.
.TP
.B \-\-verbose
Run wit extra verbosity.
.TP
.B \-v
Print f2py version ID n' exit.
.TP
.B \-\-include_paths path1:path2:...
Search include filez (that f2py will scan) from tha given directories.
.SH "CONFIG_FC OPTIONS"
Da followin options is effectizzle only when \-c switch is used.
.TP
.B \-\-help-compiler
List available Fortran compilaz [DEPRECIATED].
.TP
.B \-\-fcompiler=<name>
Specify Fortran compila type by vendor.
.TP
.B \-\-compiler=<name>
Specify C compila type (as defined by distutils)
.TP
.B \-\-fcompiler-exec=<path>
Specify tha path ta F77 compila [DEPRECIATED].
.TP
.B \-\-f90compiler\-exec=<path>
Specify tha path ta F90 compila [DEPRECIATED].
.TP
.B \-\-help\-fcompiler
List available Fortran compilaz n' exit.
.TP
.B \-\-f77exec=<path>
Specify tha path ta F77 compiler.
.TP
.B \-\-f90exec=<path>
Specify tha path ta F90 compiler.
.TP
.B  \-\-f77flags="..."
Specify F77 compila flags.
.TP
.B \-\-f90flags="..."
Specify F90 compila flags.
.TP
.B \-\-opt="..."
Specify optimization flags.
.TP
.B \-\-arch="..."
Specify architecture specific optimization flags.
.TP
.B \-\-noopt
Compile without optimization.
.TP
.B \-\-noarch
Compile without arch-dependent optimization.
.TP
.B \-\-debug
Compile wit debuggin shiznit.
.SH "EXTRA OPTIONS"
Da followin options is effectizzle only when \-c switch is used.
.TP
.B \-\-link-<resource> 
Link extension module wit <resource> as defined by
numpy_distutils/system_info.py. E.g. ta link wit optimized LAPACK
libraries (vecLib on MacOSX, ATLAS elsewhere), use
\-\-link\-lapack_opt. Right back up in yo muthafuckin ass. See also \-\-help\-link switch.

.TP
.B -L/path/to/lib/ -l<libname>
.TP
.B -D<define> -U<name> -I/path/to/include/ 
.TP
.B <filename>.o <filename>.so <filename>.a

.TP
.B -DPREPEND_FORTRAN -DNO_APPEND_FORTRAN -DUPPERCASE_FORTRAN -DUNDERSCORE_G77
Macros dat might be required wit non-gcc Fortran compilers. 

.TP
.B -DF2PY_REPORT_ATEXIT
To print up a performizzle report of F2PY intercourse when python
exits fo' realz. Available fo' Linux.

.TP
.B -DF2PY_REPORT_ON_ARRAY_COPY=<int>
To bust a message ta stderr whenever F2PY intercourse cook up a cold-ass lil copy of an
array. Integer <int> sets tha threshold fo' array sizes when a message
should be shown.

.SH REQUIREMENTS
Python 1.5.2 or higher (2.x is supported).

Numerical Python 13 or higher (20.x,21.x,22.x,23.x is supported).

Optionizzle Numarray 0.9 or higher partially supported.

numpy_distutils from Scipy (can be downloaded from F2PY homepage)
.SH "SEE ALSO"
python(1)
.SH BUGS
For instructions on reportin bugs, peep 

  http://cens.ioc.ee/projects/f2py2e/FAQ.html
.SH AUTHOR
Pearu Peterson <pearu@cens.ioc.ee>
.SH "INTERNET RESOURCES"
Main joint: http://cens.ioc.ee/projects/f2py2e/

Userz Guide: http://cens.ioc.ee/projects/f2py2e/usersguide/

Mailin list: http://cens.ioc.ee/mailman/listinfo/f2py-users/

Scipy joint: http://www.numpy.org
.SH COPYRIGHT
Copyright (c) 1999, 2000, 2001, 2002, 2003, 2004, 2005 Pearu Peterson
.SH LICENSE
NumPy License
.SH VERSION
2.45.241
