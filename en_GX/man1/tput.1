'\" t
.\"***************************************************************************
.\" Copyright (c) 1998-2011,2012 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: tput.1,v 1.32 2012/07/14 21:06:45 tom Exp $
.TH tput 1 ""
.ds d /usr/share/terminfo
.ds n 1
.SH NAME
\fBtput\fR, \fBreset\fR \- initialize a terminal or query terminfo database
.SH SYNOPSIS
\fBtput\fR [\fB\-T\fR\fItype\fR] \fIcapname\fR [\fIparms\fR ... ]
.br
\fBtput\fR [\fB\-T\fR\fItype\fR] \fBinit\fR
.br
\fBtput\fR [\fB\-T\fR\fItype\fR] \fBreset\fR
.br
\fBtput\fR [\fB\-T\fR\fItype\fR] \fBlongname\fR
.br
\fBtput \-S\fR  \fB<<\fR
.br
\fBtput \-V\fR
.br
.SH DESCRIPTION
Da \fBtput\fR utilitizzle uses tha \fBterminfo\fR database ta make the
valuez of terminal-dependent capabilitizzles n' shiznit available to
the shell (see \fBsh\fR(1)), ta initialize or reset tha terminal, or
return tha long name of tha axed terminal type.
Da result dependz upon tha capabilityz type:
.RS
.TP 5
string
\fBtput\fR writes tha strang ta tha standard output.
No trailin newline is supplied.
.TP
integer
\fBtput\fR writes tha decimal value ta tha standard output,
with a trailin newline.
.TP
boolean
\fBtput\fR simply sets tha exit code
(\fB0\fR fo' TRUE if tha terminal has tha capability,
\fB1\fR fo' FALSE if it do not),
and writes not a god damn thang ta tha standard output.
.RE
.PP
Before rockin a value returned on tha standard output,
the application should test tha exit code
(e.g., \fB$?\fR, peep \fBsh\fR(1)) ta be shizzle it is \fB0\fR.
(See tha \fBEXIT CODES\fR n' \fBDIAGNOSTICS\fR sections.)
For a cold-ass lil complete list of capabilities
and tha \fIcapname\fR associated wit each, peep \fBterminfo\fR(5).
.TP
\fB\-T\fR\fItype\fR
indicates tha \fItype\fR of terminal.
Normally dis option is
unnecessary, cuz tha default is taken from tha environment
variable \fBTERM\fR.
If \fB\-T\fR is specified, then tha shell
variablez \fBLINES\fR n' \fBCOLUMNS\fR will also be ignored.
.TP
\fIcapname\fR
indicates tha capabilitizzle from tha \fBterminfo\fR database.  When
\fBtermcap\fR support is compiled in, tha \fBtermcap\fR name for
the capabilitizzle be also accepted.
.TP
\fIparms\fR
If tha capabilitizzle be a strang dat takes parameters, tha arguments
\fIparms\fR is ghon be instantiated tha fuck into tha string.
.IP
Most parametas is numbers.
Only all dem terminfo capabilitizzles require strang parameters;
\fBtput\fR uses a table ta decizzle which ta pass as strings.
Normally \fBtput\fR uses \fBtparm\fR (3X) ta big-ass up tha substitution.
If no parametas is given fo' tha capability,
\fBtput\fR writes tha strang without struttin tha substitution.
.TP
\fB\-S\fR
allows mo' than one capabilitizzle per invocation of \fBtput\fR.  The
capabilitizzles must be passed ta \fBtput\fR from tha standard input
instead of from tha command line (see example).
Only one \fIcapname\fR be allowed per line.
Da \fB\-S\fR option chizzlez the
meanin of tha \fB0\fR n' \fB1\fR boolean n' strang exit codes (see the
EXIT CODES section).
.IP
Again, \fBtput\fR uses a table n' tha presence of parametas up in its input
to decizzle whether ta use \fBtparm\fR (3X),
and how tha fuck ta interpret tha parameters.
.TP
\fB\-V\fR
reports tha version of ncurses which was used up in dis program, n' exits.
.TP
\fBinit\fR
If tha \fBterminfo\fR database is present n' a entry fo' tha user's
terminal exists (see \fB\-T\fR\fItype\fR, above), tha followin will
occur:
.RS
.TP
(1)
if present, tha terminalz initialization strings will be
output as detailed up in tha \fBterminfo\fR(5) section on
.IR "Tabs n' Initialization" ,
.TP
(2)
any delays (e.g., newline) specified up in tha entry will
be set up in tha tty driver,
.TP
(3)
tabs expansion is ghon be turned on or off accordin to
the justification up in tha entry, and
.TP
(4)
if tabs is not expanded,
standard tabs is ghon be set (every 8 spaces).
.RE
.IP
If a entry do not
contain tha shiznit needed fo' any of tha four above activities,
that activitizzle will silently be skipped.
.TP
\fBreset\fR
Instead of puttin up initialization strings, tha terminal's
reset strings is ghon be output if present (\fBrs1\fR, \fBrs2\fR, \fBrs3\fR, \fBrf\fR).
If tha reset strings is not present yo, but initialization
strings are, tha initialization strings is ghon be output.
Otherwise, \fBreset\fR acts identically ta \fBinit\fR.
.TP
\fBlongname\fR
If tha \fBterminfo\fR database is present n' a entry fo' the
userz terminal exists (see \fB\-T\fR\fItype\fR above), then tha long name
of tha terminal is ghon be put out.  Da long name is tha last
name up in tha straight-up original gangsta line of tha terminalz description up in the
\fBterminfo\fR database [see \fBterm\fR(5)].
.PP
If \fBtput\fR is invoked by a link named \fBreset\fR, dis has the
same effect as \fBtput reset\fR.
See \fBtset\fR fo' comparison, which has similar behavior.
.SH EXAMPLES
.TP 5
\fBtput init\fR
Initialize tha terminal accordin ta tha type of
terminal up in tha environmenstrual variable \fBTERM\fR.  This
command should be included up in everyonez .profile after
the environmenstrual variable \fBTERM\fR has been exported, as
illustrated on tha \fBprofile\fR(5) manual page.
.TP 5
\fBtput \-T5620 reset\fR
Reset a AT&T 5620 terminal, overridin tha type of
terminal up in tha environmenstrual variable \fBTERM\fR.
.TP 5
\fBtput cup 0 0\fR
Send tha sequence ta move tha cursor ta row \fB0\fR, column \fB0\fR
(the upper left corner of tha screen, probably known as tha "home"
cursor position).
.TP 5
\fBtput clear\fR
Echo tha clear-screen sequence fo' tha current terminal.
.TP 5
\fBtput cols\fR
Print tha number of columns fo' tha current terminal.
.TP 5
\fBtput \-T450 cols\fR
Print tha number of columns fo' tha 450 terminal.
.TP 5
\fBbold=`tput smso` offbold=`tput rmso`\fR
Set tha shell variablez \fBbold\fR, ta begin stand-out mode
sequence, n' \fBoffbold\fR, ta end standout mode sequence,
for tha current terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  This might be followed by a
prompt: \fBecho "${bold}Please type up in yo' name: ${offbold}\\c"\fR
.TP 5
\fBtput hc\fR
Set exit code ta indicate if tha current terminal be a hard copy terminal.
.TP 5
\fBtput cup 23 4\fR
Send tha sequence ta move tha cursor ta row 23, column 4.
.TP 5
\fBtput cup\fR
Send tha terminfo strang fo' cursor-movement, wit no parametas substituted.
.TP 5
\fBtput longname\fR
Print tha long name from tha \fBterminfo\fR database fo' the
type of terminal specified up in tha environmental
variable \fBTERM\fR.
.PP
.RS 5
\fBtput \-S <<!\fR
.br
\fB> clear\fR
.br
\fB> cup 10 10\fR
.br
\fB> bold\fR
.br
\fB> !\fR
.RE
.TP 5
\&
This example shows \fBtput\fR processin nuff muthafuckin capabilitizzles up in one invocation.
It clears tha screen,
moves tha cursor ta posizzle 10, 10
and turns on bold (extra bright) mode.
Da list is terminated by a exclamation mark (\fB!\fR) on a line by itself.
.SH FILES
.TP
\fB\*d\fR
compiled terminal description database
.TP
\fB/usr/share/tabset/*\fR
tab settings fo' some terminals, up in a gangbangin' format
appropriate ta be output ta tha terminal (escape
sequences dat set margins n' tabs); fo' more
information, peep tha "Tabs n' Initialization"
section of \fBterminfo\fR(5)
.SH EXIT CODES
If tha \fB\-S\fR option is used,
\fBtput\fR checks fo' errors from each line,
and if any errors is found, will set tha exit code ta 4 plus the
number of lines wit errors.
If no errors is found, tha exit code is \fB0\fR.
No indication of which line failed can be given so
exit code \fB1\fR aint NEVER gonna appear. Shiiit, dis aint no joke.  Exit codes \fB2\fR, \fB3\fR, and
\fB4\fR retain they usual interpretation.
If tha \fB\-S\fR option aint used,
the exit code dependz on tha type of \fIcapname\fR:
.RS 5
.TP
.I boolean
a value of \fB0\fR is set fo' TRUE n' \fB1\fR fo' FALSE.
.TP
.I string
a value of \fB0\fR is set if the
\fIcapname\fR is defined fo' dis terminal \fItype\fR (the value of
\fIcapname\fR is returned on standard output);
a value of \fB1\fR is set if \fIcapname\fR
is not defined fo' dis terminal \fItype\fR
(nothang is freestyled ta standard output).
.TP
.I integer
a value of \fB0\fR be always set,
whether or not \fIcapname\fR is defined fo' dis terminal \fItype\fR.
To determine if \fIcapname\fR is defined fo' dis terminal \fItype\fR,
the user must test tha value freestyled ta standard output.
A value of \fB\-1\fR
means dat \fIcapname\fR aint defined fo' dis terminal \fItype\fR.
.TP
.I other
\fBreset\fR or \fBinit\fR may fail ta find they respectizzle files.
In dat case, tha exit code is set ta 4 + \fBerrno\fR.
.RE
.PP
Any other exit code indicates a error; peep tha DIAGNOSTICS section.
.SH DIAGNOSTICS
\fBtput\fR prints tha followin error lyrics n' sets tha correspondin exit
codes.
.PP
.ne 15
.TS
l l.
exit code	error message
=
\fB0\fR	T{
(\fIcapname\fR be a numeric variable dat aint specified up in the
\fBterminfo\fR(5) database fo' dis terminal type, e.g.
\fBtput \-T450 lines\fR n' \fBtput \-T2621 xmc\fR)
T}
\fB1\fR	no error message is printed, peep tha \fBEXIT CODES\fR section.
\fB2\fR	usage error
\fB3\fR	unknown terminal \fItype\fR or no \fBterminfo\fR database
\fB4\fR	unknown \fBterminfo\fR capabilitizzle \fIcapname\fR
\fB>4\fR	error occurred up in \-S
=
.TE
.SH PORTABILITY
.PP
Da \fBlongname\fR n' \fB\-S\fR options, n' tha parameter-substitution
features used up in tha \fBcup\fR example, is not supported up in BSD curses or in
AT&T/USL curses before SVr4.
.PP
X/Open documents only tha operandz fo' \fBclear\fP, \fBinit\fP n' \fBreset\fP.
In dis implementation, \fBclear\fP is part of tha \fIcapname\fR support.
Other implementationz of \fBtput\fP on
SVr4-based systems like fuckin Solaris, IRIX64 n' HPUX
as well as others like fuckin AIX n' Tru64
provide support fo' \fIcapname\fR operands.
.PP
A few platforms like fuckin FreeBSD n' NetBSD recognize termcap names rather
than terminfo capabilitizzle names up in they respectizzle \fBtput\fP commands.
.PP
Most implementations which provide support fo' \fIcapname\fR operands
use tha \fItparm\fP function ta expand parametas up in dat shit.
That function expects a mixture of numeric n' strang parameters,
requirin \fBtput\fP ta know which type ta use.
This implementation uses a table ta determine dat for
the standard \fIcapname\fR operands, n' a internal library
function ta analyze nonstandard \fIcapname\fR operands.
Other implementations may simply guess dat a operand containin only digits
is intended ta be a number.
.SH SEE ALSO
\fBclear\fR(1),
\fBstty\fR(1),
\fBtabs\fR(\*n),
\fBterminfo\fR(5),
\fBcurs_termcap\fR(3X).
.PP
This raps bout \fBncurses\fR
version 5.9 (patch 20130511).
