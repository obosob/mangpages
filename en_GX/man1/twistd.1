.TH TWISTD "1" "Dec 2011" "" ""
.SH NAME
twistd \- run Twisted applications (TACs, TAPs)
.SH SYNOPSIS
.B twistd
[options]
.SH DESCRIPTION
Read a twisted.application.service.Application outta a gangbangin' file n' run dat shit.
.SH OPTIONS
\fB\-n\fR, \fB\--nodaemon\fR
Don't daemonize (stay up in foreground).
.TP
\fB\-q\fR, \fB\--quiet\fR
No-op fo' backwardz compatibility.
.TP
\fB\-p\fR, \fB\--profile\fR \fI<profile output>\fR
Run tha application under tha profiler, dumpin thangs up in dis biatch ta tha specified file.
.TP
\fB\--profiler\fR \fI<profila name>\fR
Specify tha profila ta use. Defaults ta tha 'hotshot' profiler.
.TP
\fB--savestats\fR
Save tha Stats object rather than tha text output of tha profiler.
.TP
\fB\-b\fR, \fB\--debug\fR
Run tha application up in tha Python Debugger (implies \fB\--nodaemon\fR option).
Sendin a SIGINT or SIGUSR2 signal ta tha process will drop it tha fuck into the
debugger.
.TP
\fB\-e\fR, \fB\--encrypted\fR \fI<file>\fR
Da specified tap/aos file is encrypted.
.TP
\fB--euid\fR
Set only effectizzle user-id rather than real user-id. Y'all KNOW dat shit, muthafucka! This option has no  
effect unless tha server is hustlin as root, up in which case it means not  
to shed all privileges afta bindin ports, retainin tha option ta regain 
privileges up in cases like fuckin spawnin processes. Use wit caution. I aint talkin' bout chicken n' gravy biatch. 
.TP
\fB\-o\fR, \fB\--no_save\fR
Do not save shutdown state.
.TP
\fB\--originalname\fR
Behave as though tha specified Application has no process name set, n' run
with tha standard process name (the Python binary up in most cases).
.TP
\fB\-l\fR, \fB\--logfile\fR \fI<logfile>\fR
Log ta a specified file, - fo' stdout (default: twistd.log).
Da log file is ghon be rotated on SIGUSR1.
.TP
\fB\-l\fR, \fB\--logger\fR \fI<fully qualified python name>\fR
A fully-qualified name ta a log observer factory ta use fo' tha initial log
observer n' shit. Takes precedence over --logfile n' --syslog.
.TP
\fB\--pidfile\fR \fI<pidfile>\fR
Save pid up in specified file (default: twistd.pid).
.TP
\fB\--chroot\fR \fI<directory>\fR
Chroot ta a supplied directory before hustlin (default: don't chroot).
Chrootin is done before changin tha current directory.
.TP
\fB\-d\fR, \fB\--rundir\fR \fI<directory>\fR
Change ta a supplied directory before hustlin (default: .).
.TP
\fB\-u\fR, \fB\--uid\fR \fI<uid>\fR
Da uid ta run as (default: don't chizzle).
.TP
\fB\-g\fR, \fB\--gid\fR \fI<gid>\fR
Da gid ta run as (default: don't chizzle).
.TP
\fB--umask\fR \fI<mask>\fR
Da (octal) file creation mask ta apply. (default: 0077 fo' daemons, no
change otherwise).
.TP
\fB\-r\fR, \fB\--reactor\fR \fI<reactor>\fR
Choose which reactor ta use. Right back up in yo muthafuckin ass. See \fB\--help-reactors\fR fo' a list of
possibilities.
.TP
\fB--help-reactors\fR
List tha namez of possibly available reactors.
.TP
\fB\--spew\fR
Write a mad verbose log of every last muthafuckin thang dat happens. Useful for
debuggin freezes or locks up in complex code.
.TP
\fB\-f\fR, \fB\--file\fR \fI<tap file>\fR
Read tha given .tap file (default: twistd.tap).
.TP
\fB\-s\fR, \fB\--source\fR \fI<tas file>\fR
Load a Application from tha given .tas (AOT Python source) file.
.TP
\fB\-y\fR, \fB\--python\fR \fI<python file>\fR
Use tha variable "application" from tha given Python file. This option overrides
\fB\-f\fR. This option implies \fB\--no_save\fR.
.TP
\fB\--syslog\fR
Log ta syslog instead of a gangbangin' file.
.TP
\fB\--version\fR
Print version shiznit n' exit.
.TP
\fB\--prefix\fR \fI<prefix>\fR
Use tha specified prefix when loggin ta logfile. Default is "twisted".
.PP
Note dat if \fBtwistd\fR is run as root, tha hustlin directory is \fInot\fR
searched fo' Python modules.
.SH SIGNALS
A hustlin twistd accepts SIGINT fo' a cold-ass lil clean shutdown n' SIGUSR1 ta rotate log
files.
.SH AUTHOR
Written by Moshe Zadka, based on twistdz help lyrics.
.SH "REPORTING BUGS"
To report a funky-ass bug, visit
\fIhttp://twistedmatrix.com/trac/wiki/TwistedDevelopment#DevelopmentProcess\fR
.SH COPYRIGHT
Copyright \(co 2001-2011 Twisted Matrix Laboratories.
.br
This is free software; peep tha source fo' copyin conditions. There is NO
warranty; not even fo' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
