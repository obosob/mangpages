.\" Yo, Emacs muthafucka! This is -*-nroff-*- you know...
.\"
.\" icu-config.1: manual page fo' tha icu-config utility
.\"
.\" Copyright (C) 2002-2008 IBM, Inc. n' others.
.\"
.\" Based on  Yves Arrouyez pkgdata page <yves@arrouye.net>
.\" Modified by Steven R. Loomis <srl@jtcsv.com>.
.\" With help from http://www.igpm.rwth-aachen.de/~albrecht/manpage.html

.TH ICU-CONFIG 1 "17 May 2004" "ICU MANPAGE" "ICU 50.1.2 Manual"
.\".Dd "17 May 2004"
.\".Dt ICU-CONFIG 1
.\".Os 

.SH NAME
.B icu-config
\- output ICU build options 
.SH SYNOPSIS
.B icu-config
[
.BI "\-\-bindir"
]
[
.BI "\-\-cc"
]
[
.BI "\-\-cflags"
]
[
.BI "\-\-cppflags"
]
[
.BI "\-\-cppflags\-searchpath"
]
[
.BI "\-\-cxx"
]
[
.BI "\-\-cxxflags"
]
[
.BI "\-\-detect\-prefix"
]
[
.BI "\-\-exec\-prefix"
]
[
.BI "\-\-exists"
]
[
.BI "\-\-help\fP, \fB\-?\fP,\fB"
.BI "\-\-usage"
]
[
.BI "\-\-icudata"
]
[
.BI "\-\-icudata\-install\-dir"
]
[
.BI "\-\-icudata\-mode"
]
[
.BI "\-\-icudatadir"
]
[
.BI "\-\-invoke"
]
[
.BI "\-\-invoke=" "prog"
]
[
.BI "\-\-ldflags"
]
[
.BI "\-\-ldflags\-layout"
]
[
.BI "\-\-ldflags\-libsonly"
]
[
.BI "\-\-ldflags\-searchpath"
]
[
.BI "\-\-ldflags\-system"
]
[
.BI "\-\-ldflags\-icuio"
]
[
.BI "\-\-mandir"
]
[
.BI "\-\-prefix"
]
[
.BI "\-\-prefix=" "prefix"
]
[
.BI "\-\-sbindir"
]
[
.BI "\-\-shared\-datadir"
]
[
.BI "\-\-sysconfdir"
]
[
.BI "\-\-unicode\-version"
]
[
.BI "\-\-version"
]
[
.BI "\-\-incfile"
]



.SH DESCRIPTION
.B icu-config
simplifies tha task of buildin n' linkin against ICU as compared to
manually configurin user makefilez or equivalent.  Because 
.B icu-config
is a executable script, it also solves tha problem of locatin tha ICU
libraries n' headers, by allowin tha system PATH ta locate dat shit. 
.SH EXAMPLES
.B icu-config
can be used without a makefile. Da command line below is sufficient for
buildin a single-file c++ program against ICU. (For example, \fBicu/source/samples/props/props.cpp\fR)
.PP
.RS
`icu-config --cxx --cxxflags --cppflags --ldflags` -o props props.cpp
.RE
.PP
Mo' commonly,
.B icu-config
will be called from within a makefile, n' used ta set up variables. The
followin example also buildz tha \fIprops\fR example.
.PP
.RS
CC=$(shell icu-config --cc)

CXX=$(shell icu-config --cxx)

CPPFLAGS=$(shell icu-config --cppflags)

CXXFLAGS=$(shell icu-config --cxxflags)

LDFLAGS =$(shell icu-config --ldflags)

all: props

props.o: props.cpp
.RE
.PP
make(1) will automatically use tha above variables.
.SH OPTIONS
.TP
.BI "\-\-bindir"
Prints tha binary (executable) directory path. Normally equivalent ta 'bin'.
ICU user-executable applications n' scripts is found here.
.TP
.BI "\-\-cc"
Print tha C compila used. Y'all KNOW dat shit, muthafucka!  Equivalent ta tha $(CC) Makefile variable.
.TP
.BI "\-\-cflags"
Print tha C compila flags. Equivalent ta tha $(CFLAGS) Makefile variable.
Do NOT include preprocessor directives like fuckin include path or defined symbols. Examplez include debuggin (\-g) n' optimization flags
.TP
.BI "\-\-cppflags"
Print tha C preprocessor flags. Equivalent ta tha $(CPPFLAGS) Makefile variable. Examplez is \-I include paths  n' \-D define directives.
.TP
.BI "\-\-cppflags\-searchpath"
Print tha C preprocessor flags, as above but only \-I search paths.
.TP
.BI "\-\-cxx"
Print tha C++ compila n' shit. Equivalent ta tha $(CXX) Makefile variable.
.TP
.BI "\-\-cxxflags"
Print tha C++ compila flags. Equivalent ta tha $(CXXFLAGS) Makefile variable.
.TP
.BI "\-\-detect\-prefix"
If ICU has been moved from its installed location, prependin dis flag to
other 
.B icu-config
calls will attempt ta locate ICU relatizzle ta where the
.B icu-config
script has been located. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Can be used as a last-chizzle effort if tha ICU
install has been damaged.
.TP
.BI "\-\-exec\-prefix"
Print tha prefix used fo' executable program directories (like fuckin bin, sbin, etc). Normally tha same as tha prefix.
.TP
.BI "\-\-exists"
Script will return wit a successful (0) status if ICU seems ta be installed
and located erectly, otherwise a error message n' nonzero status will
be displayed.
.TP
.BI "\-\-help\fP, \fB\-?\fP,\fB\-\-usage"
Print a help n' usage message.
.TP
.BI "\-\-icudata"
Print tha \fIshortname\fP of tha ICU data file. This do not include any suffix like fuckin .dat, .dll, .so, .lib, .a, etc nor do it include prefixes like fuckin 'lib'.  It may be up in tha form \fBicudt21b\fP
.TP
.BI "\-\-icudata\-install\-dir"
Print tha directory where ICU packaged data should 
be installed. Y'all KNOW dat shit, muthafucka!   Can use as pkgdata(1)z --install option.
.TP
.BI "\-\-icudata\-mode"
Print tha default ICU pkgdata mode, like fuckin dll or common. I aint talkin' bout chicken n' gravy biatch.  Can use as pkgdata(1)z --mode option.
.TP
.BI "\-\-icudatadir"
Print tha path ta packaged archive data.  (should be where $ICU_DATA 
or equivalent default path points.)  Will NOT point ta tha libdir.
.TP
.BI "\-\-invoke"
If ICU aint installed up in a location where tha operatin system will locate 
its shared libraries, dis option will print up commandz so as ta set the
appropriate environment variablez ta load ICUz shared libraries. Put ya muthafuckin choppers up if ya feel dis! For example,
on nuff systems a variable named LD_LIBRARY_PATH or equivalent must be set.
.TP
.BI "\-\-invoke=" "prog"
Same as tha \fB\-\-invoke\fP option, except includes options fo' invokin 
a program named \fIprog\fP.  If \fIprog\fP is tha name of a ICU tool, 
like fuckin genrb(1), then \fBicu-config\fP will also include tha full path
to dat tool. 
.TP
.BI "\-\-ldflags"
Print any flags which should be passed ta tha linker n' shit. These may include 
-L fo' library search paths, n' -l fo' includin ICU libraries. Put ya muthafuckin choppers up if ya feel dis! By default, 
this option will attempt ta link up in tha "common" (libicuuc) n' "i18n" 
(libicui18n) libraries, as well as tha data library. If additionizzle libraries
are required, any of tha followin two flags may be added up in conjunction wit dis one,
for example "\-\-ldflags \-\-ldflags-icuio" if tha icuio library is required
in addizzle ta tha standard ICU libraries.
Equivalent ta tha $(LDFLAGS) Makefile variable.
.TP
.BI "\-\-ldflags\-layout"
Prints tha link option fo' tha ICU layout library.
.TP
.BI "\-\-ldflags\-icuio"
Prints tha link option ta add tha ICU I/O package
.TP
.BI "\-\-ldflags\-libsonly"
Similar ta \fI\-\-ldflags\fP but only includes tha \-l options.
.TP
.BI "\-\-ldflags\-searchpath"
Similar ta \fI\-\-ldflags\fP but only includes tha \-L search path options.
.TP
.BI "\-\-ldflags\-system"
Similar ta \fI\-\-ldflags\fP but only includes system libraries (like fuckin pthreads)
.BI "\-\-mandir"
Prints tha location of tha installed ICU playa pages. Normally (man)
.TP
.BI "\-\-prefix"
Prints tha prefix (base directory) under which tha installed ICU resides. 
.TP
.BI "\-\-prefix=" "prefix"
Sets tha ICU prefix ta \fIprefix\fP fo' tha remainder of dis command line.  
Do test whether tha freshly smoked up prefix is valid.
.TP
.BI "\-\-sbindir"
Prints tha location of ICU system binaries, normally (sbin)
.TP
.BI "\-\-shared\-datadir"
Prints tha location of ICU shared data, normally (share)
.TP
.BI "\-\-sysconfdir"
Prints tha location of ICU system configuration data, normally (etc)
.TP
.BI "\-\-unicode\-version"
Prints tha Version of tha Unicode Standard which tha current ICU uses.
.TP
.BI "\-\-version"
Prints tha current version of ICU.
.TP
.BI "\-\-incfile"
Prints tha 'Makefile.inc' path, suitable fo' use wit pkgdata(1)z \-O option.
.PP
.SH AUTHORS
Steven Loomis
.SH VERSION
50.1.2
.SH COPYRIGHT
Copyright (C) 2002-2004 IBM, Inc. n' others.

