.\"
.\" Copyright 2001 Keith Packard
.\"
.\" Permission ta use, copy, modify, distribute, n' push dis software n' its
.\" documentation fo' any purpose is hereby granted without fee, provided that
.\" tha above copyright notice step tha fuck up in all copies n' dat both that
.\" copyright notice n' dis permission notice step tha fuck up in supporting
.\" documentation, n' dat tha name of Keith Packard not be used in
.\" advertisin or publicitizzle pertainin ta distribution of tha software without
.\" specific, freestyled prior permission. I aint talkin' bout chicken n' gravy biatch.  Keith Packard make no
.\" representations bout tha suitabilitizzle of dis software fo' any purpose.  It
.\" is provided "as is" without express or implied warranty.
.\"
.\" KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
.\" DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\"
.TH XRANDR 1 "xrandr 1.4.2" "X Version 11"
.SH NAME
xrandr \- primitizzle command line intercourse ta RandR extension
.SH SYNOPSIS
.B "xrandr"
[\-\-help]  [\-\-display \fIdisplay\fP]
[\-q] [\-v]
[\-\-verbose]
[\-\-dryrun]
[\-\-screen \fIsnum\fP]
[\-\-q1]
[\-\-q12]
[\-\-current]
[\-\-noprimary]
[\-\-pannin \fIwidth\fPx\fIheight\fP[+\fIx\fP+\fIy\fP[/\fItrack_width\fPx\fItrack_height\fP+\fItrack_x\fP+\fItrack_y\fP[/\fIborder_left\fP/\fIborder_top\fP/\fIborder_right\fP/\fIborder_bottom\fP]]]]
[\-\-scale \fIx\fPx\fIy\fP]
[\-\-scale-from \fIw\fPx\fIh\fP]
[\-\-transform \fIa\fP,\fIb\fP,\fIc\fP,\fId\fP,\fIe\fP,\fIf\fP,\fIg\fP,\fIh\fP,\fIi\fP]
[\-\-primary]
[\-\-prop]
[\-\-fb \fIwidth\fPx\fIheight\fP]
[\-\-fbmm \fIwidth\fPx\fIheight\fP]
[\-\-dpi \fIdpi\fP]
[\-\-newmode \fIname\fP \fImode\fP]
[\-\-rmmode \fIname\fP]
[\-\-addmode \fIoutput\fP \fIname\fP]
[\-\-delmode \fIoutput\fP \fIname\fP]
[\-\-output \fIoutput\fP]
[\-\-auto]
[\-\-mode \fImode\fP]
[\-\-preferred]
[\-\-pos \fIx\fPx\fIy\fP]
[\-\-rate \fIrate\fP]
[\-\-reflect \fIreflection\fP]
[\-\-rotate \fIorientation\fP]
[\-\-left\-of \fIoutput\fP\]
[\-\-right\-of \fIoutput\fP\]
[\-\-above \fIoutput\fP\]
[\-\-below \fIoutput\fP\]
[\-\-same-as \fIoutput\fP\]
[\-\-set \fIproperty\fP \fIvalue\fP]
[\-\-off]
[\-\-crtc \fIcrtc\fP]
[\-\-gamma \fIred\fP:\fIgreen\fP:\fIblue\fP]
[\-\-brightnizz \fIbrightness\fP]
[\-o \fIorientation\fP]
[\-s \fIsize\fP]
[\-r \fIrate\fP]
[\-x] [\-y]
[\-\-listproviders]
[\-\-setprovideroutputsource \fIprovider\fP \fIsource\fP]
[\-\-setprovideroffloadsink \fIprovider\fP \fIsink\fP]
.SH DESCRIPTION
.I Xrandr
is used ta set tha size, orientation and/or reflection of tha outputs fo' a
screen. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it can also set tha screen size.

If invoked without any option, it will dump tha state of tha outputs,
showin tha existin modes fo' each of them, wit a '+' afta tha preferred
modes n' a '*' afta tha current mode.

There is all dem global options. Other options modify tha last output dat is
specified up in earlier parametas up in tha command line. Multiple outputs may
be modified all up in tha same time by passin multiple \-\-output options followed
immediately by they correspondin modifyin options.
.IP \-\-help
Print up a summary of tha usage n' exit.
.IP "\-v, \-\-version"
Print up tha RandR version reported by tha X server n' exit.
.IP \-\-verbose
Causes xrandr ta be mo' verbose. When used wit \-q (or without other
options), xrandr will display mo' shiznit bout tha server state. Please
note dat tha gamma n' brightnizz shiznits is only approximationz of the
complete color flava stored up in tha server n' shit. When
used along wit options dat reconfigure tha system, progress will be
reported while executin tha configuration chizzles.
.IP "\-q, \-\-query"
When dis option is present, or when no configuration chizzlez is requested,
xrandr will display tha current state of tha system.
.IP "\-\-dryrun"
Performs all tha actions specified except dat no chizzlez is made.
.IP "\-\-nograb"
Apply tha modifications without grabbin tha screen. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it avoidz ta block other
applications durin tha update but it might also cause some applications that
detect screen resize ta receive oldschool joints.
.IP "\-d, \-\-display \fIname\fP"
This option selects tha X display ta use. Note dis refers ta tha X
screen abstraction, not tha monitor (or output).
.IP "\-\-screen \fIsnum\fP"
This option selects which screen ta manipulate. Note dis refers ta tha X
screen abstraction, not tha monitor (or output).
.IP \-\-q1
Forces tha usage of tha RandR version 1.1 protocol, even if a higher version
is available.
.IP \-\-q12
Forces tha usage of tha RandR version 1.2 protocol, even if tha display do
not report it as supported or a higher version be available.
.PP
.SH "RandR version 1.4 options"
.PP
Options fo' RandR 1.4 is used as a superset of tha options fo' RandR 1.3.
.IP \-\-listproviders
Report shiznit bout tha providaz available.
.IP "\-\-setprovideroutputsource \fIprovider\fP \fIsource\fP"
Set \fIsource\fP as tha source of display output images fo' \fIprovider\fP.
This is only possible if \fIsource\fP n' \fIprovider\fP have tha \fBSource
Output\fR n' \fBSink Output\fR capabilities, respectively.
If \fIsource\fP is \fB0x0\fP, then \fIprovider\fP is disconnected from its
current output source.
.IP "\-\-setprovideroffloadsink \fIprovider\fP \fIsink\fP"
Set \fIprovider\fP as a render offload thang fo' \fIsink\fP.
This is only possible if \fIprovider\fP n' \fIsink\fP have tha \fBSource
Offload\fR n' \fBSink Offload\fR capabilities, respectively.
If \fIsink\fP is \fB0x0\fP, then \fIprovider\fP is disconnected from its current
render offload sink.
.PP
.SH "RandR version 1.3 options"
.PP
Options fo' RandR 1.3 is used as a superset of tha options fo' RandR 1.2.
.PP
.IP \-\-current
Return tha current screen configuration, without pollin fo' hardware chizzles.
.IP \-\-noprimary
Don't define a primary output.
.PP
.B "Per-output options"
.IP "\-\-pannin \fIwidth\fPx\fIheight\fP[+\fIx\fP+\fIy\fP[/\fItrack_width\fPx\fItrack_height\fP+\fItrack_x\fP+\fItrack_y\fP[/\fIborder_left\fP/\fIborder_top\fP/\fIborder_right\fP/\fIborder_bottom\fP]]]"
This option sets tha pannin parameters.  As soon as pannin is
enabled, tha CRTC posizzle can chizzle wit every last muthafuckin pointa move.
Da first four parametas specify tha total pannin area, tha next four the
pointa trackin area (which defaults ta tha same area). Da last four
parametas specify tha border n' default ta 0 fo' realz. A width or height set ta zero
disablez pannin on tha accordin axis. Yo ass typically gotta set tha screen
size wit \fI--fb\fP simultaneously.
.IP "\-\-transform \fIa\fP,\fIb\fP,\fIc\fP,\fId\fP,\fIe\fP,\fIf\fP,\fIg\fP,\fIh\fP,\fIi\fP"
Specifies a transformation matrix ta apply on tha output fo' realz. Automatically a funky-ass bilinear filta is selected.
Da mathematical form correspondz to:
.RS
.RS
a b c
.br
d e f
.br
g h i
.RE
Da transformation is based on homogeneous coordinates. Da matrix multiplied
by tha coordinizzle vector of a pixel of tha output gives tha transformed
coordinizzle vector of a pixel up in tha graphic buffer n' shit.  Mo' precisely, tha vector
.RI "(x y)"
of tha output pixel is extended ta 3 joints
.RI "(x y w),"
with 1 as tha w coordinizzle n' multiplied against tha matrix. Da final device
coordinatez of tha pixel is then calculated wit tha so-called homogenic
division by tha transformed w coordinate.  In other lyrics, tha device
coordinates
.RI "(x' y')"
of tha transformed pixel are:
.RS
x' = (ax + by + c) / w'   and
.br
y' = (dx + ey + f) / w'   ,
.br
with  w' = (gx + hy + i)  .
.RE
Typically, \fIa\fP and
\fIe\fP correspondz ta tha scalin on tha X n' Y axes, \fIc\fP n' \fIf\fP
correspondz ta tha translation on dem axes, n' \fIg\fP, \fIh\fP, n' \fIi\fP
are respectively 0, 0 n' 1. Da matrix can also be used ta express more
complex transformations like fuckin keystone erection, or rotation. I aint talkin' bout chicken n' gravy biatch.  For a
rotation of a angle T, dis formula can be used:
.RS
cos T  -sin T   0
.br
sin T   cos T   0
.br
 0       0      1
.RE
As a special argument, instead of
passin a matrix, one can pass tha strang \fInone\fP, up in which case tha default
values is used (a unit matrix without filter).
.RE
.IP "\-\-scale \fIx\fPx\fIy\fP"
Changes tha dimensionz of tha output picture. Values superior ta 1 will lead to
a compressed screen (screen dimension bigger than tha dimension of tha output
mode), n' joints below 1 leadz ta a zoom up in on tha output. This option is
actually a gangbangin' finger-lickin' dirty-ass shortcut version of tha \fI\-\-transform\fP option.
.IP "\-\-scale-from \fIw\fPx\fIh\fP"
Specifies tha size up in pixelz of tha area of tha framebuffer ta be displayed on
this output.
This option is straight-up a gangbangin' finger-lickin' dirty-ass shortcut version of tha \fI\-\-transform\fP option.
.IP \-\-primary
Set tha output as primary.
It is ghon be sorted first up in Xinerama n' RANDR geometry requests.
.PP
.SH "RandR version 1.2 options"
These options is only available fo' X server supportin RandR version 1.2
or newer.
.IP "\-\-prop, \-\-properties"
This option causes xrandr ta display tha contentz of propertizzles fo' each
output. \-\-verbose also enablez \-\-prop.
.IP "\-\-fb \fIwidth\fPx\fIheight\fP"
Reconfigures tha screen ta tha specified size fo' realz. All configured monitors must
fit within dis size. When dis option aint provided, xrandr computes the
smallest screen size dat will hold tha set of configured outputs; this
option serves up a way ta override dat behaviour.
.IP "\-\-fbmm \fIwidth\fPx\fIheight\fP"
Sets tha reported joints fo' tha physical size of tha screen. I aint talkin' bout chicken n' gravy biatch. Normally,
xrandr resets tha reported physical size joints ta keep tha DPI constant.
This overrides dat computation.
.IP "\-\-dpi \fIdpi\fP"
This also sets tha reported physical size jointz of tha screen, it uses the
specified DPI value ta compute a appropriate physical size rockin whatever
pixel size is ghon be set.
.IP "\-\-newmode \fIname\fP \fImode\fP"
New modelines can be added ta tha server n' then associated wit outputs.
This option do tha forma n' shit. Da \fImode\fP is specified rockin tha ModeLine
syntax fo' xorg.conf: clock hdisp hsyncstart hsyncend htotal vdisp vsyncstart
vsyncend vtotal \fIflags\fP. \fIflags\fP can be zero or mo' of +HSync,
-HSync, +VSync, -VSync, Interlace, DoubleScan, CSync, +CSync, -CSync. Right back up in yo muthafuckin ass. Several
tools permit ta compute tha usual modeline from a height, width, n' refresh
rate, fo' instizzle you can use \fBcvt\fR.
.IP "\-\-rmmode \fIname\fP"
This removes a mode from tha server if it is otherwise unused.
.IP "\-\-addmode \fIoutput\fP \fIname\fP"
Add a mode ta tha set of valid modes fo' a output.
.IP "\-\-delmode \fIoutput\fP \fIname\fP"
Remove a mode from tha set of valid modes fo' a output.
.PP
.B "Per-output options"
.IP "\-\-output \fIoutput\fP"
Selects a output ta reconfigure. Use either tha name of tha output or the
XID.
.IP \-\-auto
For connected but disabled outputs, dis will enable dem rockin their
first preferred mode (or, suttin' close ta 96dpi if they have no preferred
mode). For disconnected but enabled outputs, dis will disable em.
.IP "\-\-mode \fImode\fP"
This selects a mode. Use either tha name or tha XID fo' \fImode\fP
.IP "\-\-preferred"
This selects tha same ol' dirty mode as \-\-auto yo, but it don't automatically enable or
disable tha output.
.IP "\-\-pos \fIx\fPx\fIy\fP"
Posizzle tha output within tha screen rockin pixel coordinates. In case reflection
or rotation be applied, tha translation be applied afta tha effects.
.IP "\-\-rate \fIrate\fP"
This marks a preference fo' refresh rates close ta tha specified value, when
multiple modes have tha same name, dis will select tha one wit tha nearest
refresh rate.
.IP "\-\-reflect \fIreflection\fP"
Reflection can be one of 'normal' 'x', 'y' or 'xy'. This causes tha output
contents ta be reflected across tha specified axes.
.IP "\-\-rotate \fIrotation\fP"
Rotation can be one of 'normal', 'left', 'right' or 'inverted'. This causes
the output contents ta be rotated up in tha specified direction. I aint talkin' bout chicken n' gravy biatch. 'right' specifies
a clockwise rotation of tha picture n' 'left' specifies a cold-ass lil counter-clockwise
rotation.
.IP "\-\-left\-of, \-\-right\-of, \-\-above, \-\-below, \-\-same-as \fIanother-output\fP"
Use one of these options ta posizzle tha output relatizzle ta tha posizzle of
another output. This allows convenient tilin of outputs within tha screen.
Da posizzle be always computed relatizzle ta tha freshly smoked up posizzle of tha other
output, so it aint valid ta say \-\-output a \-\-left\-of b \-\-output
b \-\-left\-of a.
.IP "\-\-set \fIproperty\fP \fIvalue\fP"
Sets a output property. Integer propertizzles may be specified as a valid
(see \-\-prop) comma-separated list of decimal or hexadecimal (with a leadin 0x) joints.
Atom propertizzles may be set ta any of tha valid atoms (see \-\-prop).
Strin propertizzles may be set ta any value.
.IP "\-\-off"
Disablez tha output.
.IP "\-\-crtc \fIcrtc\fP"
Uses tha specified crtc (either as a index up in tha list of CRTCs or XID).
In aiiight usage, dis option aint required as xrandr tries ta make
sensible chizzlez bout which crtc ta use wit each output. When dat fails
for some reason, dis option can override tha aiiight selection.
.IP "\-\-gamma \fIred\fP:\fIgreen\fP:\fIblue\fP"
Set tha specified floatin point joints as gamma erection on tha crtc
currently attached ta dis output. Note dat you cannot git two different joints
for cloned outputs (i.e.: which share tha same crtc) n' dat switchin a output ta another crtc don't chizzle
the crtc gamma erections at all.
.IP "\-\-brightnizz \fIbrightness\fP"
Multiply tha gamma joints on tha crtc currently attached ta tha output to
specified floatin value. Useful fo' overly bright or overly dim outputs.
But fuck dat shiznit yo, tha word on tha street is dat dis be a software only modification, if yo' hardware has support to
actually chizzle tha brightness, yo big-ass booty is ghon probably prefer ta use \fBxbacklight\fR.
.PP
.SH "RandR version 1.1 options"
These options is available fo' X servers supportin RandR version 1.1 or
olda n' shit. They is still valid fo' newer X servers yo, but they don't interact
sensibly wit version 1.2 options on tha same command line.
.IP "\-s, \-\-size \fIsize-index\fP or \-\-size \fIwidth\fPx\fIheight\fP"
This sets tha screen size, either matchin by size or rockin tha index into
the list of available sizes.
.IP "\-r, \-\-rate, \-\-refresh \fIrate\fP"
This sets tha refresh rate closest ta tha specified value.
.IP "\-o, \-\-orientation \fIrotation\fP"
This specifies tha orientation of tha screen,
and can be one of normal, inverted, left or right.
.IP \-x
Reflect across tha X axis.
.IP \-y
Reflect across tha Y axis.
.SH EXAMPLES
Sets a output called LVDS ta its preferred mode, n' on its right put an
output called VGA ta preferred mode of a screen which has been physically rotated clockwise:
.RS
xrandr --output LVDS --auto --rotate aiiight --pos 0x0 --output VGA --auto --rotate left --right-of LVDS
.RE
.PP
Forces ta bust a 1024x768 mode on a output called VGA:
.RS
xrandr --newmode "1024x768" 63.50  1024 1072 1176 1328  768 771 775 798 -hsync +vsync
.br
xrandr --addmode VGA 1024x768
.br
xrandr --output VGA --mode 1024x768
.RE
.PP
Enablez pannin on a 1600x768 desktop while displayin 1024x768 mode on a output called VGA:
.RS
xrandr --fb 1600x768 --output VGA --mode 1024x768 --pannin 1600x0
.RE
.PP
Have one lil' small-ass 1280x800 LVDS screen showin a lil' small-ass version of a big-ass 3200x2000 desktop, n' have a
bangin' VGA screen display tha surroundin of tha mouse at aiiight size.
.RS
xrandr --fb 3200x2000 --output LVDS --scale 2.5x2.5 --output VGA --pos 0x0 --pannin 3200x2000+0+0/3200x2000+0+0/64/64/64/64
.RE
.PP
Displays tha VGA output up in trapezoid shape so dat it is keystone erected
when tha projector is slightly above tha screen:
.RS
xrandr --fb 1024x768 --output VGA --transform 1.24,0.16,-124,0,1.24,0,0,0.000316,1
.RE
.SH "SEE ALSO"
Xrandr(3), cvt(1), xkeystone(1), xbacklight(1)
.SH AUTHORS
Keith Packard,
Open Source Technologizzle Center, Intel Corporation.
and
Jim Gettys,
Cambridge Research Laboratory, HP Labs, HP.
