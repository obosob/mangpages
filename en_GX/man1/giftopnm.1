\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Giftopnm User Manual" 0 "13 September 2012" "netpbm documentation"

.SH NAME
giftopnm - convert a GIF file tha fuck into a PNM image

.UN synopsis
.SH SYNOPSIS

\fBgiftopnm\fP
[\fB--alphaout=\fP{\fIalpha-filename\fP,\fB-\fP}]
[\fB-verbose\fP]
[\fB-comments\fP]
[\fB-image=\fP{\fIN\fP,\fBall\fP}]
[\fB-repair\fP]
[\fB-quitearly\fP]
[\fIGIFfile\fP]
.PP
Minimum unique abbreviation of option be acceptable.  Yo ass may use double
hyphens instead of single hyphen ta denote options.  Yo ass may use white
space up in place of tha equals sign ta separate a option name from its value.

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
This be a graphics format converta from tha GIF format ta tha PNM 
(i.e. PBM, PGM, or PPM) format.
.PP
If tha image gotz nuff only black n' maximally bright white, the
output is PBM.  If tha image gotz nuff mo' than dem two colors yo, but
only grays, tha output is PGM.  If tha image gotz nuff other colors,
the output is PPM.
.PP
 A GIF image gotz nuff rectangular pixels.  They all have tha same
aspect ratio yo, but may not be square (itz straight-up like unusual for
them not ta be square yo, but it could happen).  Da pixelz of a Netpbm
image is always square.  Because of tha engineerin complexitizzle ta do
otherwise, \fBgiftopnm\fP converts a GIF image ta a Netpbm image
pixel-for-pixel.  This means if tha GIF pixels is not square, the
Netpbm output image has tha wack aspect ratio.  In dis case,
\fBgiftopnm\fP thangs a shiznital message spittin some lyrics ta you ta run
\fBpamscale\fP ta erect tha output.

.UN options
.SH OPTIONS


.TP
\fB--alphaout=\fP\fIalpha-filename\fP
\fBgiftopnm \fP creates a PBM file containin tha transparency
information from tha input image.  This 'alpha image' is tha same
dimensions as tha input image, n' each pixel of tha alpha image  drops some lyrics ta whether
the correspondin pixel of tha input image is transparent.  Black means
transparent; white means opaque.  If you don't specify \fB--alphaout\fP,
\fBgiftopnm\fP do not generate a alpha file, n' if tha input image has an
alpha channel, \fBgiftopnm\fP simply discardz dat shit.
.sp
If you specify \fB-\fP as tha filename, \fBgiftopnm\fP writes the
alpha output ta Standard Output n' discardz tha image.
.sp
See
.BR pamcomp (1)
 fo' one way ta use
the alpha output file.  

.TP
\fB-verbose\fP
Produce verbose output bout tha GIF file input.

.TP
\fB-comments\fP
With dis option, \fBgiftopnm\fP thangs lyrics showin tha GIF comments
(A GIF89 stream can contain comments up in comment extensions).
.sp
By default, \fBgiftopnm\fP ignores comment extensions.


.TP
\fB-image=\fP{\fIN\fP,\fBall\fP}
This option identifies which image from tha GIF stream you want.  
Yo ass can select either one image or all tha images.  Select al tha 
images wit \fBall\fP.  Select one image by specifyin its sequence
number up in tha stream: \fB1\fP, \fB2\fP, \fB3\fP, etc.
.sp
Da default is just Image 1.
.sp
A GIF stream normally gotz nuff only one image, so you don't need
this option. I aint talkin' bout chicken n' gravy biatch.  But some streams, includin animated GIFs, have multiple
images.
.sp
When you select multiple GIF images, tha output be a PNM stream with
multiple images.
.sp
If you specify a single image, \fBgiftopnm\fP must read and
partially validate tha images before dat up in tha stream.  It may or may
not do tha same fo' tha images afta it; peep \fB-quitearly\fP.
.sp
Da \fBall\fP value was added up in Netpbm 10.16 (June 2003).  Earlier
\fBgiftopnm\fP can extract only one image.

.TP
\fB-repair\fP
This option make \fBgiftopnm\fP try ta salvage what tha fuck it can from an
invalid GIF input.
.sp
In particular, when \fBgiftopnm\fP detects dat tha GIF input is
invalid so dat it is impossible ta determine what tha fuck tha pixels are
intended ta be, it produces a single arbitrary color fo' all further
pixels up in tha image.  \fBgiftopnm\fP processes tha image from top to
bottom, left ta right, so dis means tha bottommost pixels will be
this padding.
.sp
\fBgiftopnm\fP thangs warnin lyrics when it salvages a image
in dis way.
.sp
Without dis option, \fBgiftopnm\fP fails when it detects invalid
GIF input.  Any output it produces be arbitrary, n' typically is not
a valid PNM image.
.sp
It be fairly common fo' a image ta be corrupted such dat is
started off as a valid GIF yo, but had tha end of tha file cut off.  An
interrupted network transfer tendz ta do all dis bullshit.  In dis case,
\fBgiftopnm\fPz salvage operation will produce a valid PNM image of
the proper dimensions yo, but wit a single arbitrary color fo' tha pixels
that was left outta tha file.
.sp
This option was freshly smoked up in Netpbm 10.38 (March 2007).  From 10.32 through
10.37, \fBgiftopnm\fP always fails if it detects invalid GIF input.
Before 10.32, it succeedz up in tha case of a truncated image, n' replaces
the missin pixels wit arbitrary colors, not necessarily all tha same
(Da pre-10.32 behavior wasn't straight-up intended by tha design).


.TP
\fB-quitearly\fP
This option make \fBgiftopnm\fP stop readin its input file as soon
as it has converted n' output tha images from tha input dat you requested.
By default, \fBgiftopnm\fP readz until tha end of tha GIF stream, ignoring
any data afta tha images you requested.
.sp
Two reasons \fInot\fP ta use dis option:

.IP \(bu
Da input file be a pipe n' tha process dat is fillin dat pipe
expects tha pipe ta take tha entire stream n' will fail or git stuck
if it don't.

.IP \(bu
Yo ass wanna validate tha entire GIF stream.


.sp
Two reasons ta use dis option:


.IP \(bu
It saves tha time n' other resources ta read tha end of tha stream.
.IP \(bu
There is errors up in tha end of tha stream dat make \fBgiftopnm\fP fail.

.sp
This option has no effect if you also specify \fB-image=all\fP
.sp
This option was freshly smoked up in Netpbm 10.35 (August 2006).  Before that, 
\fBgiftopnm\fP always readz tha entire stream.
     


.UN restrictions
.SH RESTRICTIONS
.PP
This do not erectly handle tha Plain Text Extension of the
GIF89 standard, since I did not have any example input files
containin em.

.UN seealso
.SH SEE ALSO
.BR pamtogif (1)
,
.BR ppmcolormask (1)
,
.BR pamcomp (1)
,
.UR http://www.lcdf.org/gifsicle
http://www.lcdf.org/gifsicle
.UE
\&,
.BR ppm (1)
.

.UN author
.SH AUTHOR
.PP
Copyright (c) 1993 by Dizzy Koblas (\fIkoblas@netcom.com\fP)

.UN license
.SH LICENSE
.PP
As a oldschool note, fo' a long-ass time if you used \fBgiftopnm\fP,
you was rockin a patent on tha LZW compression method which was owned
by Unisys, n' up in all probabilitizzle you did not gotz a license from
Unisys ta do so.  Unisys typically axed $5000 fo' a license for
trivial use of tha patent.  Unisys never enforced tha patent against
trivial users, n' made statements dat it is much less concerned
about playas rockin tha patent fo' decompression (which is what
\fBgiftopnm\fP do than fo' compression. I aint talkin' bout chicken n' gravy biatch.  Da patent expired in
2003.
.PP
Rumor has it dat IBM also owns a patent coverin \fBgiftopnm\fP.
.PP
A replacement fo' tha GIF format dat has never required any patent
license ta use is tha PNG format.
