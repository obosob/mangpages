.TH SSHFS "1" "April 2008" "SSHFS version 2.0" "User Commands"
.SH NAME
SSHFS \- filesystem client based on ssh
.SH SYNOPSIS
.SS mounting
.TP
\fBsshfs\fP [\fIuser\fP@]\fBhost\fP:[\fIdir\fP] \fBmountpoint\fP [\fIoptions\fP]
.SS unmounting
.TP
\fBfusermount -u mountpoint\fP
.SH DESCRIPTION
SSHFS (Secure SHell FileSystem) be a gangbangin' file system fo' Linux (and other
operatin systems wit a FUSE implementation, like fuckin Mac OS X or FreeBSD)
capable of operatin on filez on a remote computa rockin just a secure
shell login on tha remote computer n' shit. On tha local computa where tha SSHFS
is mounted, tha implementation make use of tha FUSE (Filesystem in
Userspace) kernel module. Da practical effect of dis is dat tha end user
can seamlessly interact wit remote filez bein securely served over SSH
just as if they was local filez on his/her computer n' shit. On tha remote
computa tha SFTP subsystem of SSH is used.
.PP
If \fIhost\fP be a numeric IPv6 address, it need ta be enclosed in
square brackets.
.SH OPTIONS
.SS "general options:"
.TP
\fB\-o\fR opt,[opt...]
mount options
.TP
\fB\-h\fR   \fB\-\-help\fR
print help
.TP
\fB\-V\fR   \fB\-\-version\fR
print version
.SS "SSHFS options:"
.TP
\fB\-p\fR PORT
equivalent ta '\-o port=PORT'
.TP
\fB\-C\fR
equivalent ta '\-o compression=yes'
.TP
\fB\-F\fR ssh_configfile
specifies alternatizzle ssh configuration file
.TP
\fB\-1\fR
equivalent ta '\-o ssh_protocol=1'
.TP
\fB\-o\fR reconnect
reconnect ta server
.TP
\fB\-o\fR delay_connect
delay connection ta server
.TP
\fB\-o\fR sshfs_sync
synchronous writes
.TP
\fB\-o\fR no_readahead
synchronous readz (no speculatizzle readahead)
.TP
\fB\-o\fR sshfs_debug
print some debuggin shiznit
.TP
\fB\-o\fR cache=BOOL
enable cachin {yes,no} (default: yes)
.TP
\fB\-o\fR cache_timeout=N
sets timeout fo' caches up in secondz (default: 20)
.TP
\fB\-o\fR cache_X_timeout=N
sets timeout fo' {stat,dir,link} cache
.TP
\fB\-o\fR workaround=LIST
colon separated list of workarounds
.RS 8
.TP
none
no workaroundz enabled
.TP
all
all workaroundz enabled
.TP
[no]rename
fix renamin ta existin file (default: off)
.TP
[no]nodelaysrv
set nodelay tcp flag up in ssh (default: off)
.TP
[no]truncate
fix truncate fo' oldschool servers (default: off)
.TP
[no]buflimit
fix buffer fillup bug up in server (default: on)
.RE
.TP
\fB\-o\fR idmap=TYPE
user/group ID mapping, possible types are:
.RS 8
.TP
none
no translation of tha ID space (default)
.TP
user
only translate UID of connectin user
.TP
file
translate UIDs/GIDs based upon tha contentz of \fBuidfile \fR and
\fBgidfile\fR
.RE
.TP
\fB\-o\fR uidfile=FILE
file containin username:uid mappings fo' \fBidmap=file\fR
.RE
.TP
\fB\-o\fR gidfile=FILE
file containin groupname:gid mappings fo' \fBidmap=file\fR
.RE
.TP
\fB\-o\fR nomap=TYPE
with idmap=file, how tha fuck ta handle missin mappings
.RS 8
.TP
ignore
don't do any re-mapping
.TP
error
return a error (default)
.RE
.TP
\fB\-o\fR ssh_command=CMD
execute CMD instead of 'ssh'
.TP
\fB\-o\fR ssh_protocol=N
ssh protocol ta use (default: 2)
.TP
\fB\-o\fR sftp_server=SERV
path ta sftp server or subsystem (default: sftp)
.TP
\fB\-o\fR directport=PORT
directly connect ta PORT bypassin ssh
\fB\-o\fR slave
communicate over stdin n' stdout bypassin network
.TP
\fB\-o\fR transform_symlinks
transform absolute symlinks ta relative
.TP
\fB\-o\fR follow_symlinks
follow symlinks on tha server
.TP
\fB\-o\fR no_check_root
don't check fo' existence of 'dir' on server
.TP
\fB\-o\fR password_stdin
read password from stdin (only fo' pam_mount!)
.TP
\fB\-o\fR SSHOPT=VAL
ssh options (see playa ssh_config)
.SS "FUSE options:"
.TP
\fB\-d\fR   \fB\-o\fR debug
enable debug output (implies \fB\-f\fR)
.TP
\fB\-f\fR
foreground operation
.TP
\fB\-s\fR
disable multi\-threaded operation
.TP
\fB\-o\fR allow_other
allow access ta other users
.TP
\fB\-o\fR allow_root
allow access ta root
.TP
\fB\-o\fR nonempty
allow mounts over non\-empty file/dir
.HP
\fB\-o\fR default_permissions
enable permission checkin by kernel
.TP
\fB\-o\fR fsname=NAME
set filesystem name
.TP
\fB\-o\fR subtype=NAME
set filesystem type
.TP
\fB\-o\fR large_read
issue big-ass read requests (2.4 only)
.TP
\fB\-o\fR max_read=N
set maximum size of read requests
.TP
\fB\-o\fR hard_remove
immediate removal (don't hide files)
.TP
\fB\-o\fR use_ino
let filesystem set inode numbers
.TP
\fB\-o\fR readdir_ino
try ta fill up in d_ino up in readdir
.TP
\fB\-o\fR direct_io
use direct I/O
.TP
\fB\-o\fR kernel_cache
cache filez up in kernel
.TP
\fB\-o\fR [no]auto_cache
enable cachin based on modification times
.TP
\fB\-o\fR umask=M
set file permissions (octal)
.TP
\fB\-o\fR uid=N
set file baller
.TP
\fB\-o\fR gid=N
set file group
.TP
\fB\-o\fR entry_timeout=T
cache timeout fo' names (1.0s)
.TP
\fB\-o\fR negative_timeout=T
cache timeout fo' deleted names (0.0s)
.TP
\fB\-o\fR attr_timeout=T
cache timeout fo' attributes (1.0s)
.TP
\fB\-o\fR ac_attr_timeout=T
auto cache timeout fo' attributes (attr_timeout)
.TP
\fB\-o\fR intr
allow requests ta be interrupted
.TP
\fB\-o\fR intr_signal=NUM
signal ta bust on interrupt (10)
.TP
\fB\-o\fR modules=M1[:M2...]
namez of modulez ta push onto filesystem stack
.TP
\fB\-o\fR max_write=N
set maximum size of write requests
.TP
\fB\-o\fR max_readahead=N
set maximum readahead
.TP
\fB\-o\fR async_read
perform readz asynchronously (default)
.TP
\fB\-o\fR sync_read
perform readz synchronously
.SS "Module options:"
.TP
[subdir]
.TP
\fB\-o\fR subdir=DIR
prepend dis directory ta all paths (mandatory)
.TP
\fB\-o\fR [no]rellinksa
transform absolute symlinks ta relative
.TP
[iconv]
.TP
\fB\-o\fR from_code=CHARSET
original gangsta encodin of file names (default: UTF-8)
.TP
\fB\-o\fR to_code=CHARSET
new encodin of tha file names (default: ISO-8859-2)
.PD
.SH "AUTHORS"
.LP
SSHFS has been freestyled by Miklos Szeredi <miklos@szeredi.hu>.
.LP
This playa page was freestyled by Bartoss Fenski <fenio@debian.org> fo' the
Debian GNU/Linux distribution (but it may be used by others).


