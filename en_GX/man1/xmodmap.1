.\" Copyright (c) 1987, 2010, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.\" Copyright 1988, 1989, 1990, 1998  Da Open Group
.\" 
.\" Permission ta use, copy, modify, distribute, n' push dis software n' its
.\" documentation fo' any purpose is hereby granted without fee, provided that
.\" tha above copyright notice step tha fuck up in all copies n' dat both that
.\" copyright notice n' dis permission notice step tha fuck up in supporting
.\" documentation.
.\" 
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\" 
.\" Except as contained up in dis notice, tha name of Da Open Group shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from Da Open Group.
.\" 
.de EX		\"Begin example
.ne 5
.if n .sp 1
.if t .sp .5
.nf
.in +.5i
..
.de EE
.fi
.in -.5i
.if n .sp 1
.if t .sp .5
..
.TH XMODMAP 1 "xmodmap 1.0.8" "X Version 11"
.SH NAME
xmodmap - utilitizzle fo' modifyin keymaps n' pointa button mappings up in X
.SH SYNOPSIS
.B xmodmap
[-options ...] [filename]
.SH DESCRIPTION
.PP
Da \fIxmodmap\fP program is used ta edit n' display tha 
keyboard \fImodifier map\fP n' \fIkeymap table\fP dat is used by client 
applications ta convert event keycodes tha fuck into keysyms.  It be probably run from 
the userz session startup script ta configure tha keyboard accordin ta 
personal tastes.
.SH OPTIONS
.PP
Da followin options may be used wit \fIxmodmap\fP:
.TP 8
.B \-display \fIdisplay\fP
This option specifies tha host n' display ta use.
.TP 8
.B \-help
This option indicates dat a funky-ass brief description of tha command line arguments
should be printed on tha standard error channel.  This is ghon be done whenever an
unhandled argument is given to
.I xmodmap.
.TP 8
.B \-grammar
This option indicates dat a help message describin tha expression grammar 
used up in filez n' wit \-e expressions should be printed on tha standard error.
.TP 8
.B \-verbose
This option indicates dat 
.I xmodmap
should print loggin shiznit as it parses its input.
.TP 8
.B \-quiet
This option turns off tha verbose logging.  This is tha default.
.TP 8
.B \-n
This option indicates dat 
.I xmodmap
should not chizzle tha mappings yo, but should display what tha fuck it would do, like
\fImake(1)\fP do when given dis option.
.TP 8
.B \-e \fIexpression\fB
This option specifies a expression ta be executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any number of expressions
may be specified from tha command line.
.TP 8
.B \-pm
This option indicates dat tha current modifier map should be printed on the
standard output.   This is tha default mode of operation if no other mode
options is specified.
.TP 8
.B \-pk
This option indicates dat tha current keymap table should be printed on the
standard output.
.TP 8
.B \-pke
This option indicates dat tha current keymap table should be printed on the
standard output up in tha form of expressions dat can be fed back to
\fIxmodmap\fP.
.TP 8
.B \-pp
This option indicates dat tha current pointa map should be printed on the
standard output.
.TP 8
.B \-
A lone dash means dat tha standard input should be used as tha input file.
.PP
Da \fIfilename\fP specifies a gangbangin' file containin \fIxmodmap\fP expressions
to be executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This file is probably kept up in tha userz home directory with
a name like \fI.xmodmaprc\fP.
.SH EXPRESSION GRAMMAR
.PP
The
.I xmodmap
program readz a list of expressions n' parses dem all before attempting
to execute any of em.  This make it possible ta refer ta keysyms dat are
bein redefined up in a natural way without havin ta worry as much bout name
conflicts.
.PP
Da list of keysym names may be found up in tha header file
\fI<X11/keysymdef.h>\fP (without tha \fIXK_\fP prefix),
supplemented by tha keysym database \fI /usr/share/X11/XKeysymDB\fP.
Keysyms matchin Unicode charactas may be specified as "U0020" ta "U007E"
and "U00A0" ta "U10FFFF" fo' all possible Unicode characters.
.TP 8
.B keycode \fINUMBER\fP = \fIKEYSYMNAME ...\fP
Da list of keysyms be assigned ta tha indicated keycode 
(which may be specified up in decimal, hex or octal n' can be determined by 
runnin the
.I xev
program).  Up ta eight keysyms may be attached ta a key, however tha last four
are not used up in any major X server implementation. I aint talkin' bout chicken n' gravy biatch.  Da first keysym is used
when no modifier key is pressed up in conjunction wit dis key, tha second with
Shift, tha third when tha Mode_switch key is used wit dis key n' tha fourth
when both tha Mode_switch n' Shift keys is used.
.TP 8
.B keycode any = \fIKEYSYMNAME ...\fP
If no existin key has tha specified list of keysyms assigned ta it,
a spare key on tha keyboard is selected n' tha keysyms is assigned ta dat shit.
Da list of keysyms may be specified up in decimal, hex or octal.
.TP 8
.B keysym \fIKEYSYMNAME\fP = \fIKEYSYMNAME ...\fP
Da \fIKEYSYMNAME\fP on tha left hand side is translated tha fuck into matchin keycodes
used ta big-ass up tha correspondin set of \fBkeycode\fP expressions.  Note that
if tha same keysym is bound ta multiple keys, tha expression is executed
for each matchin keycode.
.TP 8
.B clear \fIMODIFIERNAME\fP
This removes all entries up in tha modifier map fo' tha given modifier, where 
valid name are:
.BR Shift ,
.BR Lock ,
.BR Control ,
.BR Mod1 ,
.BR Mod2 ,
.BR Mod3 ,
.BR Mod4 ,
and \fBMod5\fP (case 
does not matta up in modifier names, although it do matta fo' all other
names).  For example, ``clear Lock'' will remove
all any keys dat was bound ta tha shift lock modifier.
.TP 8
.B add \fIMODIFIERNAME\fP = \fIKEYSYMNAME ...\fP
This addz all keys containin tha given keysyms ta tha indicated modifier map.
Da keysym names
are evaluated afta all input expressions is read ta make it easy as fuck  ta write
expressions ta swap keys (see tha EXAMPLES section).
.TP 8
.B remove \fIMODIFIERNAME\fP = \fIKEYSYMNAME ...\fP
This removes all keys containin tha given keysyms from tha indicated
modifier map.  Unlike
.B add,
the keysym names is evaluated as tha line is read in. I aint talkin' bout chicken n' gravy biatch.  This allows you to
remove keys from a modifier without havin ta worry bout whether or not they
have been reassigned.
.TP 8
.B "pointa = default"
This sets tha pointa map back ta its default settings (button 1 generates a 
code of 1 yo, button 2 generates a 2, etc.).
.TP 8
.B pointa = \fINUMBER ...\fP
This sets tha pointa map ta contain tha indicated button codes.  Da list
always starts wit tha straight-up original gangsta physical button. I aint talkin' bout chicken n' gravy biatch.  Settin a funky-ass button code ta 0
disablez events from dat button.
.PP
Lines dat begin wit a exclamation point (!) is taken as comments.
.PP
If you wanna chizzle tha bindin of a modifier key, you must also remove it
from tha appropriate modifier map.
.SH EXAMPLES
.PP
Many pointas is designed such dat tha straight-up original gangsta button is pressed rockin the
index finger of tha right hand. Y'all KNOW dat shit, muthafucka!  Muthafuckas whoz ass is left-handed frequently find
that it is mo' laid back ta reverse tha button codes dat git generated
so dat tha primary button is pressed rockin tha index finger of tha left hand.
This could be done on a 3 button pointa as bigs up:
.EX
%  xmodmap -e "pointa = 3 2 1"
.EE
.PP
Many applications support tha notion of Meta keys (similar ta Control 
keys except dat Meta is held down instead of Control).  However,
some servers aint gots a Meta keysym up in tha default keymap table, so one
needz ta be added by hand.
Da followin command will attach Meta ta tha Multi-language key (sometimes
labeled Compose Character).  It also takes advantage of tha fact dat 
applications dat need a Meta key simply need ta git tha keycode n' don't
require tha keysym ta be up in tha straight-up original gangsta column of tha keymap table.  This
means dat applications dat is lookin fo' a Multi_key (includin the
default modifier map) won't notice any chizzle.
.EX
%  xmodmap -e "keysym Multi_key = Multi_key Meta_L"
.EE
.PP
Similarly, some keyboardz have a Alt key but no Meta key.
In dat case tha followin may be useful:
.EX
%  xmodmap -e "keysym Alt_L = Meta_L Alt_L"
.EE
.PP
One of tha mo' simple, yet convenient, usez of \fIxmodmap\fP is ta set the
keyboardz "rubout" key ta generate a alternate keysym.  This frequently
involves exchangin Backspace wit Delete ta be mo' laid back ta tha user.
If tha \fIttyModes\fP resource up in \fIxterm\fP is set as well, all terminal 
emulator windows will use tha same key fo' erasin characters:
.EX
%  xmodmap -e "keysym BackSpace = Delete"
%  echo "XTerm*ttyModes:  erase ^?" | xrdb -merge
.EE
.PP
Some keyboardz do not automatically generate less than n' pimped outa than
charactas when tha comma n' period keys is shifted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This can be remedied
with \fIxmodmap\fP by resettin tha bindings fo' tha comma n' period with
the followin scripts:
.EX
!
! make shift-, be < n' shift-. be >
!
keysym comma = comma less
keysym period = period pimped outer
.EE
.PP
One of tha mo' irritatin differences between keyboardz is tha location of the
Control n' CapsLock keys.  A common use of \fIxmodmap\fP is ta swap these
two keys as bigs up:
.EX
!
! Swap Caps_Lock n' Control_L
!
remove Lock = Caps_Lock
remove Control = Control_L
keysym Control_L = Caps_Lock
keysym Caps_Lock = Control_L
add Lock = Caps_Lock
add Control = Control_L
.EE
.PP
This example can be run again n' again n' again ta swap tha keys back ta they previous 
assignments.
.PP
Da \fIkeycode\fP command is useful fo' assignin tha same keysym to
multiple keycodes.  Although unportable, it also make it possible ta write
scripts dat can reset tha keyboard ta a known state.  Da followin script
sets tha backspace key ta generate Delete (as shown above), flushes all 
existin caps lock bindings, make tha CapsLock
key be a cold-ass lil control key, make F5 generate Escape, n' make Break/Reset be a
shift lock.
.EX
!
! On tha HP, tha followin keycodes have key caps as listed:
!
!     101  Backspace
!      55  Caps
!      14  Ctrl
!      15  Break/Reset
!      86  Stop
!      89  F5
!
keycode 101 = Delete
keycode 55 = Control_R
clear Lock
add Control = Control_R
keycode 89 = Escape
keycode 15 = Caps_Lock
add Lock = Caps_Lock
.EE
.SH ENVIRONMENT
.PP
.TP 8
.B DISPLAY
to git default host n' display number.
.SH SEE ALSO
X(7), xev(1), setxkbmap(1),
XStringToKeysym(3),
\fIXlib\fP documentation on key n' pointa events
.SH BUGS
.PP
Every time a \fBkeycode\fP expression is evaluated, tha server generates
a \fIMappingNotify\fP event on every last muthafuckin client.  This can cause some thrashing.
All of tha chizzlez should be batched together n' done at once.
Clients dat receive keyboard input n' ignore \fIMappingNotify\fP events
will not notice any chizzlez made ta keyboard mappings.
.PP
.I Xmodmap
should generate "add" n' "remove" expressions automatically
whenever a keycode dat be already bound ta a modifier is chizzled.
.PP
There should be a way ta have the
.I remove
expression accept keycodes as well as keysyms fo' dem times when you straight-up
mess up yo' mappings.
.SH AUTHOR
Jim Fulton, MIT X Consortium, rewritten from a earlier version by
Dizzy Rosenthal of Sun Microsystems.

