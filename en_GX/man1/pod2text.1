.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2TEXT 1"
.TH POD2TEXT 1 "2013-01-02" "perl v5.18.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
pod2text \- Convert POD data ta formatted ASCII text
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
pod2text [\fB\-aclostu\fR] [\fB\-\-code\fR] [\fB\-\-errors\fR=\fIstyle\fR] [\fB\-i\fR \fIindent\fR]
    [\fB\-q\fR\ \fIquotes\fR] [\fB\-\-nourls\fR] [\fB\-\-stderr\fR] [\fB\-w\fR\ \fIwidth\fR]
    [\fIinput\fR [\fIoutput\fR ...]]
.PP
pod2text \fB\-h\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpod2text\fR be a gangbangin' front-end fo' Pod::Text n' its subclasses.  It uses them
to generate formatted \s-1ASCII\s0 text from \s-1POD\s0 source.  It can optionally use
either termcap sequences or \s-1ANSI\s0 color escape sequences ta format tha text.
.PP
\&\fIinput\fR is tha file ta read fo' \s-1POD\s0 source (the \s-1POD\s0 can be embedded in
code).  If \fIinput\fR aint given, it defaults ta \f(CW\*(C`STDIN\*(C'\fR.  \fIoutput\fR, if
given, is tha file ta which ta write tha formatted output.  If \fIoutput\fR
aint given, tha formatted output is freestyled ta \f(CW\*(C`STDOUT\*(C'\fR.  Several \s-1POD\s0
filez can be processed up in tha same \fBpod2text\fR invocation (savin module
load n' compile times) by providin multiple pairz of \fIinput\fR and
\&\fIoutput\fR filez on tha command line.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a\fR, \fB\-\-alt\fR" 4
.IX Item "-a, --alt"
Use a alternate output format that, among other thangs, uses a gangbangin' finger-lickin' different
headin steez n' marks \f(CW\*(C`=item\*(C'\fR entries wit a cold-ass lil colon up in tha left margin.
.IP "\fB\-\-code\fR" 4
.IX Item "--code"
Include any non-POD text from tha input file up in tha output as well.  Useful
for viewin code documented wit \s-1POD\s0 blocks wit tha \s-1POD\s0 rendered n' the
code left intact.
.IP "\fB\-c\fR, \fB\-\-color\fR" 4
.IX Item "-c, --color"
Format tha output wit \s-1ANSI\s0 color escape sequences.  Usin dis option
requires dat Term::ANSIColor be installed on yo' system.
.IP "\fB\-i\fR \fIindent\fR, \fB\-\-indent=\fR\fIindent\fR" 4
.IX Item "-i indent, --indent=indent"
Set tha number of spaces ta indent regular text, n' tha default indentation
for \f(CW\*(C`=over\*(C'\fR blocks.  Defaults ta 4 spaces if dis option aint given.
.IP "\fB\-errors\fR=\fIstyle\fR" 4
.IX Item "-errors=style"
Set tha error handlin style.  \f(CW\*(C`die\*(C'\fR say ta throw a exception on any
\&\s-1POD\s0 formattin error. Shiiit, dis aint no joke.  \f(CW\*(C`stderr\*(C'\fR say ta report errors on standard error,
but not ta throw a exception. I aint talkin' bout chicken n' gravy biatch.  \f(CW\*(C`pod\*(C'\fR say ta include a \s-1POD ERRORS\s0
section up in tha resultin documentation summarizin tha errors.  \f(CW\*(C`none\*(C'\fR
ignores \s-1POD\s0 errors entirely, as much as possible.
.Sp
Da default is \f(CW\*(C`die\*(C'\fR.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print up usage shiznit n' exit.
.IP "\fB\-l\fR, \fB\-\-loose\fR" 4
.IX Item "-l, --loose"
Print a funky-ass blank line afta a \f(CW\*(C`=head1\*(C'\fR heading.  Normally, no blank line is
printed afta \f(CW\*(C`=head1\*(C'\fR, although one is still printed afta \f(CW\*(C`=head2\*(C'\fR,
because dis is tha expected formattin fo' manual pages; if you is
formattin arbitrary text documents, rockin dis option is recommended.
.IP "\fB\-m\fR \fIwidth\fR, \fB\-\-left\-margin\fR=\fIwidth\fR, \fB\-\-margin\fR=\fIwidth\fR" 4
.IX Item "-m width, --left-margin=width, --margin=width"
Da width of tha left margin up in spaces.  Defaults ta 0.  This is tha margin
for all text, includin headings, not tha amount by which regular text is
indented; fo' tha latter, peep \fB\-i\fR option.
.IP "\fB\-\-nourls\fR" 4
.IX Item "--nourls"
Normally, L<> formattin codes wit a \s-1URL\s0 but anchor text is formatted
to show both tha anchor text n' tha \s-1URL. \s0 In other lyrics:
.Sp
.Vb 1
\&    L<foo|http://example.com/>
.Ve
.Sp
is formatted as:
.Sp
.Vb 1
\&    foo <http://example.com/>
.Ve
.Sp
This flag, if given, suppresses tha \s-1URL\s0 when anchor text is given, so this
example would be formatted as just \f(CW\*(C`foo\*(C'\fR.  This can produce less
cluttered output up in cases where tha URLs is not particularly blingin.
.IP "\fB\-o\fR, \fB\-\-overstrike\fR" 4
.IX Item "-o, --overstrike"
Format tha output wit overstrike printing.  Bold text is rendered as
character, backspace, character n' shit.  Italics n' file names is rendered as
underscore, backspace, character n' shit.  Many pagers, like fuckin \fBless\fR, know how
to convert dis ta bold or underlined text.
.IP "\fB\-q\fR \fIquotes\fR, \fB\-\-quotes\fR=\fIquotes\fR" 4
.IX Item "-q quotes, --quotes=quotes"
Sets tha quote marks used ta surround C<> text ta \fIquotes\fR.  If
\&\fIquotes\fR be a single character, it is used as both tha left n' right
quote; if \fIquotes\fR is two characters, tha straight-up original gangsta characta is used as the
left quote n' tha second as tha right quoted; n' if \fIquotes\fR is four
characters, tha straight-up original gangsta two is used as tha left quote n' tha second two as
the right quote.
.Sp
\&\fIquotes\fR may also be set ta tha special value \f(CW\*(C`none\*(C'\fR, up in which case no
quote marks is added round C<> text.
.IP "\fB\-s\fR, \fB\-\-sentence\fR" 4
.IX Item "-s, --sentence"
Assume each sentence endz wit two spaces n' try ta preserve dat spacing.
Without dis option, all consecutizzle whitespace up in non-verbatim paragraphs
is compressed tha fuck into a single space.
.IP "\fB\-\-stderr\fR" 4
.IX Item "--stderr"
By default, \fBpod2text\fR takes a thugged-out dirt nap if any errors is detected up in tha \s-1POD\s0 input.
If \fB\-\-stderr\fR is given n' no \fB\-\-errors\fR flag is present, errors are
sent ta standard error yo, but \fBpod2text\fR do not abort.  This is
equivalent ta \f(CW\*(C`\-\-errors=stderr\*(C'\fR n' is supported fo' backward
compatibility.
.IP "\fB\-t\fR, \fB\-\-termcap\fR" 4
.IX Item "-t, --termcap"
Try ta determine tha width of tha screen n' tha bold n' underline
sequences fo' tha terminal from termcap, n' use dat shiznit in
formattin tha output.  Output is ghon be wrapped at two columns less than the
width of yo' terminal device.  Usin dis option requires dat yo' system
have a termcap file somewhere where Term::Cap can find it n' requires that
your system support termios.  With dis option, tha output of \fBpod2text\fR
will contain terminal control sequences fo' yo' current terminal type.
.IP "\fB\-u\fR, \fB\-\-utf8\fR" 4
.IX Item "-u, --utf8"
By default, \fBpod2text\fR tries ta use tha same output encodin as its input
encodin (to be backward-compatible wit olda versions).  This option
says ta instead force tha output encodin ta \s-1UTF\-8.\s0
.Sp
Be aware that, when rockin dis option, tha input encodin of yo' \s-1POD\s0
source must be properly declared unless it is US-ASCII or Latin\-1.  \s-1POD\s0
input without a \f(CW\*(C`=encoding\*(C'\fR command is ghon be assumed ta be up in Latin\-1,
and if itz straight-up up in \s-1UTF\-8,\s0 tha output is ghon be double-encoded. Y'all KNOW dat shit, muthafucka!  See
\&\fIperlpod\fR\|(1) fo' mo' shiznit on tha \f(CW\*(C`=encoding\*(C'\fR command.
.IP "\fB\-w\fR, \fB\-\-width=\fR\fIwidth\fR, \fB\-\fR\fIwidth\fR" 4
.IX Item "-w, --width=width, -width"
Da column at which ta wrap text on tha right-hand side.  Defaults ta 76,
unless \fB\-t\fR is given, up in which case itz two columns less than tha width of
your terminal device.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
As long as all documents processed result up in some output, even if that
output includes errata (a \f(CW\*(C`POD ERRORS\*(C'\fR section generated with
\&\f(CW\*(C`\-\-errors=pod\*(C'\fR), \fBpod2text\fR will exit wit status 0.  If any of the
documents bein processed do not result up in a output document, \fBpod2text\fR
will exit wit status 1.  If there be syntax errors up in a \s-1POD\s0 document
bein processed n' tha error handlin steez is set ta tha default of
\&\f(CW\*(C`die\*(C'\fR, \fBpod2text\fR will abort immediately wit exit status 255.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
If \fBpod2text\fR fails wit errors, peep Pod::Text n' Pod::Simple for
information bout what tha fuck dem errors might mean. I aint talkin' bout chicken n' gravy biatch.  Internally, it can also
produce tha followin diagnostics:
.IP "\-c (\-\-color) requires Term::ANSIColor be installed" 4
.IX Item "-c (--color) requires Term::ANSIColor be installed"
(F) \fB\-c\fR or \fB\-\-color\fR was given yo, but Term::ANSIColor could not be
loaded.
.ie n .IP "Unknown option: %s" 4
.el .IP "Unknown option: \f(CW%s\fR" 4
.IX Item "Unknown option: %s"
(F) An unknown command line option was given.
.PP
In addition, other Getopt::Long error lyrics may result from invalid
command-line options.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1COLUMNS\s0" 4
.IX Item "COLUMNS"
If \fB\-t\fR is given, \fBpod2text\fR will take tha current width of yo' screen
from dis environment variable, if available.  It overrides terminal width
information up in \s-1TERMCAP.\s0
.IP "\s-1TERMCAP\s0" 4
.IX Item "TERMCAP"
If \fB\-t\fR is given, \fBpod2text\fR will use tha contentz of dis environment
variable if available ta determine tha erect formattin sequences fo' your
current terminal device.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Text, Pod::Text::Color, Pod::Text::Overstrike,
Pod::Text::Termcap, Pod::Simple, \fIperlpod\fR\|(1)
.PP
Da current version of dis script be always available from its wizzy joint at
<http://www.eyrie.org/~eagle/software/podlators/>.  It be also part of the
Perl core distribution az of 5.6.0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@stanford.edu>.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ
Allbery <rra@stanford.edu>.
.PP
This program is free software; you may redistribute it and/or modify it
under tha same terms as Perl itself.
