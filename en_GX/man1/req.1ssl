.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "REQ 1"
.TH REQ 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
req \- PKCS#10 certificate request n' certificate generatin utility.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBreq\fR
[\fB\-inform PEM|DER\fR]
[\fB\-outform PEM|DER\fR]
[\fB\-in filename\fR]
[\fB\-passin arg\fR]
[\fB\-out filename\fR]
[\fB\-passout arg\fR]
[\fB\-text\fR]
[\fB\-pubkey\fR]
[\fB\-noout\fR]
[\fB\-verify\fR]
[\fB\-modulus\fR]
[\fB\-new\fR]
[\fB\-rand file(s)\fR]
[\fB\-newkey rsa:bits\fR]
[\fB\-newkey alg:file\fR]
[\fB\-nodes\fR]
[\fB\-key filename\fR]
[\fB\-keyform PEM|DER\fR]
[\fB\-keyout filename\fR]
[\fB\-keygen_engine id\fR]
[\fB\-[digest]\fR]
[\fB\-config filename\fR]
[\fB\-subj arg\fR]
[\fB\-multivalue\-rdn\fR]
[\fB\-x509\fR]
[\fB\-days n\fR]
[\fB\-set_serial n\fR]
[\fB\-asn1\-kludge\fR]
[\fB\-no\-asn1\-kludge\fR]
[\fB\-newhdr\fR]
[\fB\-extensions section\fR]
[\fB\-reqexts section\fR]
[\fB\-utf8\fR]
[\fB\-nameopt\fR]
[\fB\-reqopt\fR]
[\fB\-subject\fR]
[\fB\-subj arg\fR]
[\fB\-batch\fR]
[\fB\-verbose\fR]
[\fB\-engine id\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBreq\fR command primarily creates n' processes certificate requests
in PKCS#10 format. Well shiiiit, it can additionally create self signed certificates
for use as root CAs fo' example.
.SH "COMMAND OPTIONS"
.IX Header "COMMAND OPTIONS"
.IP "\fB\-inform DER|PEM\fR" 4
.IX Item "-inform DER|PEM"
This specifies tha input format. Da \fB\s-1DER\s0\fR option uses a \s-1ASN1 DER\s0 encoded
form compatible wit tha PKCS#10. Da \fB\s-1PEM\s0\fR form is tha default format: it
consistz of tha \fB\s-1DER\s0\fR format base64 encoded wit additionizzle header and
foota lines.
.IP "\fB\-outform DER|PEM\fR" 4
.IX Item "-outform DER|PEM"
This specifies tha output format, tha options have tha same meanin as tha 
\&\fB\-inform\fR option.
.IP "\fB\-in filename\fR" 4
.IX Item "-in filename"
This specifies tha input filename ta read a request from or standard input
if dis option aint specified. Y'all KNOW dat shit, muthafucka! A request is only read if tha creation
options (\fB\-new\fR n' \fB\-newkey\fR) is not specified.
.IP "\fB\-passin arg\fR" 4
.IX Item "-passin arg"
the input file password source. For mo' shiznit bout tha format of \fBarg\fR
see tha \fB\s-1PASS PHRASE ARGUMENTS\s0\fR section up in \fIopenssl\fR\|(1).
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
This specifies tha output filename ta write ta or standard output by
default.
.IP "\fB\-passout arg\fR" 4
.IX Item "-passout arg"
the output file password source. For mo' shiznit bout tha format of \fBarg\fR
see tha \fB\s-1PASS PHRASE ARGUMENTS\s0\fR section up in \fIopenssl\fR\|(1).
.IP "\fB\-text\fR" 4
.IX Item "-text"
prints up tha certificate request up in text form.
.IP "\fB\-subject\fR" 4
.IX Item "-subject"
prints up tha request subject (or certificate subject if \fB\-x509\fR is
specified)
.IP "\fB\-pubkey\fR" 4
.IX Item "-pubkey"
outputs tha hood key.
.IP "\fB\-noout\fR" 4
.IX Item "-noout"
this option prevents output of tha encoded version of tha request.
.IP "\fB\-modulus\fR" 4
.IX Item "-modulus"
this option prints up tha value of tha moduluz of tha hood key
contained up in tha request.
.IP "\fB\-verify\fR" 4
.IX Item "-verify"
verifies tha signature on tha request.
.IP "\fB\-new\fR" 4
.IX Item "-new"
this option generates a freshly smoked up certificate request. Well shiiiit, it will prompt
the user fo' tha relevant field joints, n' you can put dat on yo' toast. Da actual fields
prompted fo' n' they maximum n' minimum sizes is specified
in tha configuration file n' any axed extensions.
.Sp
If tha \fB\-key\fR option aint used it will generate a freshly smoked up \s-1RSA\s0 private
key rockin shiznit specified up in tha configuration file.
.IP "\fB\-subj arg\fR" 4
.IX Item "-subj arg"
Replaces subject field of input request wit specified data n' outputs
modified request. Da arg must be formatted as
\&\fI/type0=value0/type1=value1/type2=...\fR,
charactas may be escaped by \e (backslash), no spaces is skipped.
.IP "\fB\-rand file(s)\fR" 4
.IX Item "-rand file(s)"
a file or filez containin random data used ta seed tha random number
generator, or a \s-1EGD\s0 socket (see \fIRAND_egd\fR\|(3)).
Multiple filez can be specified separated by a OS-dependent character.
Da separator is \fB;\fR fo' MS-Windows, \fB,\fR fo' OpenVMS, n' \fB:\fR for
all others.
.IP "\fB\-newkey arg\fR" 4
.IX Item "-newkey arg"
this option creates a freshly smoked up certificate request n' a freshly smoked up private
key. Da argument takes one of nuff muthafuckin forms. \fBrsa:nbits\fR, where
\&\fBnbits\fR is tha number of bits, generates a \s-1RSA\s0 key \fBnbits\fR
in size. If \fBnbits\fR is omitted, i.e. \fB\-newkey rsa\fR specified,
the default key size, specified up in tha configuration file is used.
.Sp
All other algorithms support tha \fB\-newkey alg:file\fR form, where file may be
an algorithm parameta file, pimped by tha \fBgenpkey \-genparam\fR command
or n' X.509 certificate fo' a key wit approriate algorithm.
.Sp
\&\fBparam:file\fR generates a key rockin tha parameta file or certificate \fBfile\fR,
the algorithm is determined by tha parameters. \fBalgname:file\fR use algorithm
\&\fBalgname\fR n' parameta file \fBfile\fR: tha two algorithms must match or an
error occurs. \fBalgname\fR just uses algorithm \fBalgname\fR, n' parameters,
if neccessary should be specified via \fB\-pkeyopt\fR parameter.
.Sp
\&\fBdsa:filename\fR generates a \s-1DSA\s0 key rockin tha parameters
in tha file \fBfilename\fR. \fBec:filename\fR generates \s-1EC\s0 key (usable both with
\&\s-1ECDSA\s0 or \s-1ECDH\s0 algorithms), \fBgost2001:filename\fR generates \s-1GOST R
34.10\-2001\s0 key (requires \fBccgost\fR engine configured up in tha configuration
file). If just \fBgost2001\fR is specified a parameta set should be
specified by \fB\-pkeyopt paramset:X\fR
.IP "\fB\-pkeyopt opt:value\fR" 4
.IX Item "-pkeyopt opt:value"
set tha hood key algorithm option \fBopt\fR ta \fBvalue\fR. Da precise set of
options supported dependz on tha hood key algorithm used n' its
implementation. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See \fB\s-1KEY GENERATION OPTIONS\s0\fR up in tha \fBgenpkey\fR manual page
for mo' details.
.IP "\fB\-key filename\fR" 4
.IX Item "-key filename"
This specifies tha file ta read tha private key from. Well shiiiit, it also
accepts PKCS#8 format private keys fo' \s-1PEM\s0 format files.
.IP "\fB\-keyform PEM|DER\fR" 4
.IX Item "-keyform PEM|DER"
the format of tha private key file specified up in tha \fB\-key\fR
argument. \s-1PEM\s0 is tha default.
.IP "\fB\-keyout filename\fR" 4
.IX Item "-keyout filename"
this gives tha filename ta write tha newly pimped private key to.
If dis option aint specified then tha filename present up in the
configuration file is used.
.IP "\fB\-nodes\fR" 4
.IX Item "-nodes"
if dis option is specified then if a private key is pimped it
will not be encrypted.
.IP "\fB\-[digest]\fR" 4
.IX Item "-[digest]"
this specifies tha message digest ta sign tha request wit (such as
\&\fB\-md5\fR, \fB\-sha1\fR). This overrides tha digest algorithm specified in
the configuration file. For full list of possible digests peep openssl
dgst \-h output.
.Sp
Some hood key algorithms may override dis chizzle. For instance, \s-1DSA\s0
signatures always use \s-1SHA1, GOST R 34.10\s0 signatures always use
\&\s-1GOST R 34.11\-94 \s0(\fB\-md_gost94\fR).
.IP "\fB\-config filename\fR" 4
.IX Item "-config filename"
this allows a alternatizzle configuration file ta be specified,
this overrides tha compile time filename or any specified in
the \fB\s-1OPENSSL_CONF\s0\fR environment variable.
.IP "\fB\-subj arg\fR" 4
.IX Item "-subj arg"
sets subject name fo' freshly smoked up request or supersedes tha subject name
when processin a request.
Da arg must be formatted as \fI/type0=value0/type1=value1/type2=...\fR,
charactas may be escaped by \e (backslash), no spaces is skipped.
.IP "\fB\-multivalue\-rdn\fR" 4
.IX Item "-multivalue-rdn"
this option causes tha \-subj argument ta be interpreted wit full
support fo' multivalued RDNs. Example:
.Sp
\&\fI/DC=org/DC=OpenSSL/DC=users/UID=123456+CN=Jizzy Doe\fR
.Sp
If \-multi\-rdn aint used then tha \s-1UID\s0 value is \fI123456+CN=Jizzy Doe\fR.
.IP "\fB\-x509\fR" 4
.IX Item "-x509"
this option outputs a self signed certificate instead of a cold-ass lil certificate
request. This is typically used ta generate a test certificate or
a self signed root \s-1CA.\s0 Da extensions added ta tha certificate
(if any) is specified up in tha configuration file. Unless specified
usin tha \fBset_serial\fR option \fB0\fR is ghon be used fo' tha serial
number.
.IP "\fB\-days n\fR" 4
.IX Item "-days n"
when tha \fB\-x509\fR option is bein used dis specifies tha number of
days ta certify tha certificate for. Shiiit, dis aint no joke. Da default is 30 days.
.IP "\fB\-set_serial n\fR" 4
.IX Item "-set_serial n"
serial number ta use when outputtin a self signed certificate. This
may be specified as a thugged-out decimal value or a hex value if preceded by \fB0x\fR.
It be possible ta use wack serial numbers but dis aint recommended.
.IP "\fB\-extensions section\fR" 4
.IX Item "-extensions section"
.PD 0
.IP "\fB\-reqexts section\fR" 4
.IX Item "-reqexts section"
.PD
these options specify alternatizzle sections ta include certificate
extensions (if tha \fB\-x509\fR option is present) or certificate
request extensions. This allows nuff muthafuckin different sections to
be used up in tha same configuration file ta specify requests for
a variety of purposes.
.IP "\fB\-utf8\fR" 4
.IX Item "-utf8"
this option causes field joints ta be interpreted as \s-1UTF8\s0 strings, by 
default they is interpreted as \s-1ASCII.\s0 This means dat tha field
values, whether prompted from a terminal or obtained from a
configuration file, must be valid \s-1UTF8\s0 strings.
.IP "\fB\-nameopt option\fR" 4
.IX Item "-nameopt option"
option which determines how tha fuck tha subject or issuer names is displayed. Y'all KNOW dat shit, muthafucka! The
\&\fBoption\fR argument can be a single option or multiple options separated by
commas.  Alternatively tha \fB\-nameopt\fR switch may be used mo' than once to
set multiple options. Right back up in yo muthafuckin ass. See tha \fIx509\fR\|(1) manual page fo' details.
.IP "\fB\-reqopt\fR" 4
.IX Item "-reqopt"
customise tha output format used wit \fB\-text\fR. Da \fBoption\fR argument can be
a single option or multiple options separated by commas.
.Sp
See discission of tha  \fB\-certopt\fR parameta up in tha \fBx509\fR
command.
.IP "\fB\-asn1\-kludge\fR" 4
.IX Item "-asn1-kludge"
by default tha \fBreq\fR command outputs certificate requests containing
no attributes up in tha erect PKCS#10 format yo. However certain CAs will only
accept requests containin no attributes up in a invalid form: this
option produces dis invalid format.
.Sp
Mo' precisely tha \fBAttributes\fR up in a PKCS#10 certificate request
are defined as a \fB\s-1SET OF\s0 Attribute\fR. They is \fBnot \s-1OPTIONAL\s0\fR so
if no attributes is present then they should be encoded as an
empty \fB\s-1SET OF\s0\fR. Da invalid form do not include tha empty
\&\fB\s-1SET OF\s0\fR whereas tha erect form do.
.Sp
It should be noted dat straight-up few CAs still require tha use of dis option.
.IP "\fB\-no\-asn1\-kludge\fR" 4
.IX Item "-no-asn1-kludge"
Reverses effect of \fB\-asn1\-kludge\fR
.IP "\fB\-newhdr\fR" 4
.IX Item "-newhdr"
Addz tha word \fB\s-1NEW\s0\fR ta tha \s-1PEM\s0 file header n' foota lines on tha outputed
request. Right back up in yo muthafuckin ass. Some software (Netscape certificate server) n' some CAs need all dis bullshit.
.IP "\fB\-batch\fR" 4
.IX Item "-batch"
non-interactizzle mode.
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
print extra details bout tha operations bein performed.
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBreq\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms.
.IP "\fB\-keygen_engine id\fR" 4
.IX Item "-keygen_engine id"
specifies a engine (by its unique \fBid\fR string) which would be used
for key generation operations.
.SH "CONFIGURATION FILE FORMAT"
.IX Header "CONFIGURATION FILE FORMAT"
Da configuration options is specified up in tha \fBreq\fR section of
the configuration file fo' realz. As wit all configuration filez if no
value is specified up in tha specific section (i.e. \fBreq\fR) then
the initial unnamed or \fBdefault\fR section is searched like a muthafucka.
.PP
Da options available is busted lyrics bout up in detail below.
.IP "\fBinput_password output_password\fR" 4
.IX Item "input_password output_password"
Da passwordz fo' tha input private key file (if present) and
the output private key file (if one is ghon be pimped). The
command line options \fBpassin\fR n' \fBpassout\fR override the
configuration file joints.
.IP "\fBdefault_bits\fR" 4
.IX Item "default_bits"
This specifies tha default key size up in bits, n' you can put dat on yo' toast. If not specified then
512 is used. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is used if tha \fB\-new\fR option is used. Y'all KNOW dat shit, muthafucka! Well shiiiit, it can be
overridden by rockin tha \fB\-newkey\fR option.
.IP "\fBdefault_keyfile\fR" 4
.IX Item "default_keyfile"
This is tha default filename ta write a private key to. If not
specified tha key is freestyled ta standard output. This can be
overridden by tha \fB\-keyout\fR option.
.IP "\fBoid_file\fR" 4
.IX Item "oid_file"
This specifies a gangbangin' file containin additionizzle \fB\s-1OBJECT IDENTIFIERS\s0\fR.
Each line of tha file should consist of tha numerical form of the
object identifier followed by white space then tha short name followed
by white space n' finally tha long name.
.IP "\fBoid_section\fR" 4
.IX Item "oid_section"
This specifies a section up in tha configuration file containin extra
object identifiers. Each line should consist of tha short name of the
object identifier followed by \fB=\fR n' tha numerical form. Da short
and long names is tha same when dis option is used.
.IP "\fB\s-1RANDFILE\s0\fR" 4
.IX Item "RANDFILE"
This specifies a gangbangin' filename up in which random number seed shiznit is
placed n' read from, or a \s-1EGD\s0 socket (see \fIRAND_egd\fR\|(3)).
It be used fo' private key generation.
.IP "\fBencrypt_key\fR" 4
.IX Item "encrypt_key"
If dis is set ta \fBno\fR then if a private key is generated it is
\&\fBnot\fR encrypted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This is equivalent ta tha \fB\-nodes\fR command line
option. I aint talkin' bout chicken n' gravy biatch. For compatibilitizzle \fBencrypt_rsa_key\fR be a equivalent option.
.IP "\fBdefault_md\fR" 4
.IX Item "default_md"
This option specifies tha digest algorithm ta use. Possible joints
include \fBmd5 sha1 mdc2\fR. If not present then \s-1MD5\s0 is used. Y'all KNOW dat shit, muthafucka! This
option can be overridden on tha command line.
.IP "\fBstring_mask\fR" 4
.IX Item "string_mask"
This option masks up tha use of certain strang types up in certain
fields. Most playas aint gonna need ta chizzle dis option.
.Sp
It can be set ta nuff muthafuckin joints \fBdefault\fR which be also tha default
option uses PrintableStrings, T61Strings n' BMPStrings if tha 
\&\fBpkix\fR value is used then only PrintableStrings n' BMPStrings will
be used. Y'all KNOW dat shit, muthafucka! This bigs up tha \s-1PKIX\s0 recommendation up in \s-1RFC2459.\s0 If the
\&\fButf8only\fR option is used then only UTF8Strings is ghon be used: this
is tha \s-1PKIX\s0 recommendation up in \s-1RFC2459\s0 afta 2003. Finally tha \fBnombstr\fR
option just uses PrintableStrings n' T61Strings: certain software has
problems wit BMPStrings n' UTF8Strings: up in particular Netscape.
.IP "\fBreq_extensions\fR" 4
.IX Item "req_extensions"
this specifies tha configuration file section containin a list of
extensions ta add ta tha certificate request. Well shiiiit, it can be overridden
by tha \fB\-reqexts\fR command line switch. Right back up in yo muthafuckin ass. See tha 
\&\fIx509v3_config\fR\|(5) manual page fo' detailz of the
extension section format.
.IP "\fBx509_extensions\fR" 4
.IX Item "x509_extensions"
this specifies tha configuration file section containin a list of
extensions ta add ta certificate generated when tha \fB\-x509\fR switch
is used. Y'all KNOW dat shit, muthafucka! Well shiiiit, it can be overridden by tha \fB\-extensions\fR command line switch.
.IP "\fBprompt\fR" 4
.IX Item "prompt"
if set ta tha value \fBno\fR dis disablez promptin of certificate fields
and just takes joints from tha config file directly. Well shiiiit, it also chizzlez the
expected format of tha \fBdistinguished_name\fR n' \fBattributes\fR sections.
.IP "\fButf8\fR" 4
.IX Item "utf8"
if set ta tha value \fByes\fR then field joints ta be interpreted as \s-1UTF8\s0
strings, by default they is interpreted as \s-1ASCII.\s0 This means that
the field joints, whether prompted from a terminal or obtained from a
configuration file, must be valid \s-1UTF8\s0 strings.
.IP "\fBattributes\fR" 4
.IX Item "attributes"
this specifies tha section containin any request attributes: its format
is tha same ol' dirty as \fBdistinguished_name\fR. Typically these may contain the
challengePassword or unstructuredName types. They is currently ignored
by OpenSSLz request signin utilitizzles but some CAs might want em.
.IP "\fBdistinguished_name\fR" 4
.IX Item "distinguished_name"
This specifies tha section containin tha distinguished name fieldz to
prompt fo' when generatin a cold-ass lil certificate or certificate request. Da format
is busted lyrics bout up in tha next section.
.SH "DISTINGUISHED NAME AND ATTRIBUTE SECTION FORMAT"
.IX Header "DISTINGUISHED NAME AND ATTRIBUTE SECTION FORMAT"
There is two separate formats fo' tha distinguished name n' attribute
sections. If tha \fBprompt\fR option is set ta \fBno\fR then these sections
just consist of field names n' joints: fo' example,
.PP
.Vb 3
\& CN=My fuckin Name
\& OU=My fuckin Organization
\& emailAddress=someone@somewhere.org
.Ve
.PP
This allows external programs (e.g. \s-1GUI\s0 based) ta generate a template file
with all tha field names n' joints n' just pass it ta \fBreq\fR fo' realz. An example
of dis kind of configuration file is contained up in tha \fB\s-1EXAMPLES\s0\fR section.
.PP
Alternatively if tha \fBprompt\fR option be absent or not set ta \fBno\fR then the
file gotz nuff field promptin shiznit. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it consistz of linez of tha form:
.PP
.Vb 4
\& fieldName="prompt"
\& fieldName_default="default field value"
\& fieldName_min= 2
\& fieldName_max= 4
.Ve
.PP
\&\*(L"fieldName\*(R" is tha field name bein used, fo' example commonName (or \s-1CN\s0).
Da \*(L"prompt\*(R" strang is used ta ask tha user ta enta tha relevant
details. If tha user entas not a god damn thang then tha default value is used if no
default value is present then tha field is omitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A field can
still be omitted if a thugged-out default value is present if tha user just
entas tha '.' character.
.PP
Da number of charactas entered must be between tha fieldName_min and
fieldName_max limits: there may be additionizzle restrictions based
on tha field bein used (for example ghettoName can only eva be
two charactas long n' must fit up in a PrintableString).
.PP
Some fieldz (like fuckin organizationName) can be used mo' than once
in a \s-1DN.\s0 This presents a problem cuz configuration filez will
not recognize tha same name occurrin twice. To avoid dis problem
if tha fieldName gotz nuff some charactas followed by a gangbangin' full stop
they is ghon be ignored. Y'all KNOW dat shit, muthafucka! So fo' example a second organizationName can
be input by callin it \*(L"1.organizationName\*(R".
.PP
Da actual permitted field names is any object identifier short or
long names. These is compiled tha fuck into OpenSSL n' include tha usual
values like fuckin commonName, ghettoName, localityName, organizationName,
organizationUnitName, stateOrProvinceName fo' realz. Additionally emailAddress
is include as well as name, surname, givenName initials n' dnQualifier.
.PP
Additionizzle object identifiers can be defined wit tha \fBoid_file\fR or
\&\fBoid_section\fR options up in tha configuration file fo' realz. Any additionizzle fields
will be treated as though they was a DirectoryString.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Examine n' verify certificate request:
.PP
.Vb 1
\& openssl req \-in req.pem \-text \-verify \-noout
.Ve
.PP
Smoke a private key n' then generate a cold-ass lil certificate request from it:
.PP
.Vb 2
\& openssl genrsa \-out key.pem 1024
\& openssl req \-new \-key key.pem \-out req.pem
.Ve
.PP
Da same but just rockin req:
.PP
.Vb 1
\& openssl req \-newkey rsa:1024 \-keyout key.pem \-out req.pem
.Ve
.PP
Generate a self signed root certificate:
.PP
.Vb 1
\& openssl req \-x509 \-newkey rsa:1024 \-keyout key.pem \-out req.pem
.Ve
.PP
Example of a gangbangin' file pointed ta by tha \fBoid_file\fR option:
.PP
.Vb 2
\& 1.2.3.4        shortName       A longer Name
\& 1.2.3.6        otherName       Other longer Name
.Ve
.PP
Example of a section pointed ta by \fBoid_section\fR makin use of variable
expansion:
.PP
.Vb 2
\& testoid1=1.2.3.5
\& testoid2=${testoid1}.6
.Ve
.PP
Sample configuration file promptin fo' field joints:
.PP
.Vb 6
\& [ req ]
\& default_bits           = 1024
\& default_keyfile        = privkey.pem
\& distinguished_name     = req_distinguished_name
\& attributes             = req_attributes
\& x509_extensions        = v3_ca
\&
\& dirstring_type = nobmp
\&
\& [ req_distinguished_name ]
\& ghettoName                    = Ghetto Name (2 letta code)
\& ghettoName_default            = AU
\& ghettoName_min                = 2
\& ghettoName_max                = 2
\&
\& localityName                   = Localitizzle Name (eg, hood)
\&
\& organizationalUnitName         = Organizationizzle Unit Name (eg, section)
\&
\& commonName                     = Common Name (eg, YOUR name)
\& commonName_max                 = 64
\&
\& emailAddress                   = Email Address
\& emailAddress_max               = 40
\&
\& [ req_attributes ]
\& challengePassword              = A challenge password
\& challengePassword_min          = 4
\& challengePassword_max          = 20
\&
\& [ v3_ca ]
\&
\& subjectKeyIdentifier=hash
\& authorityKeyIdentifier=keyid:always,issuer:always
\& basicConstraints = CA:true
.Ve
.PP
Sample configuration containin all field joints:
.PP
.Vb 1
\& RANDFILE               = $ENV::HOME/.rnd
\&
\& [ req ]
\& default_bits           = 1024
\& default_keyfile        = keyfile.pem
\& distinguished_name     = req_distinguished_name
\& attributes             = req_attributes
\& prompt                 = no
\& output_password        = mypass
\&
\& [ req_distinguished_name ]
\& C                      = GB
\& ST                     = Test State or Province
\& L                      = Test Locality
\& O                      = Organization Name
\& OU                     = Organizationizzle Unit Name
\& CN                     = Common Name
\& emailAddress           = test@email.address
\&
\& [ req_attributes ]
\& challengePassword              = A challenge password
.Ve
.SH "NOTES"
.IX Header "NOTES"
Da header n' foota lines up in tha \fB\s-1PEM\s0\fR format is normally:
.PP
.Vb 2
\& \-\-\-\-\-BEGIN CERTIFICATE REQUEST\-\-\-\-\-
\& \-\-\-\-\-END CERTIFICATE REQUEST\-\-\-\-\-
.Ve
.PP
some software (some versionz of Netscape certificate server) instead needs:
.PP
.Vb 2
\& \-\-\-\-\-BEGIN NEW CERTIFICATE REQUEST\-\-\-\-\-
\& \-\-\-\-\-END NEW CERTIFICATE REQUEST\-\-\-\-\-
.Ve
.PP
which is produced wit tha \fB\-newhdr\fR option but is otherwise compatible.
Either form be accepted transparently on input.
.PP
Da certificate requests generated by \fBXenroll\fR wit \s-1MSIE\s0 have extensions
added. Y'all KNOW dat shit, muthafucka! Well shiiiit, it includes tha \fBkeyUsage\fR extension which determines tha type of
key (signature only or general purpose) n' any additionizzle OIDs entered
by tha script up in a extendedKeyUsage extension.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Da followin lyrics is frequently axed about:
.PP
.Vb 2
\&        Usin configuration from /some/path/openssl.cnf
\&        Unable ta load config info
.Ve
.PP
This is followed some time lata by...
.PP
.Vb 2
\&        unable ta find \*(Aqdistinguished_name\*(Aq up in config
\&        problems makin Certificate Request
.Ve
.PP
Da first error message is tha clue: it can't find tha configuration
file biaaatch! Certain operations (like examinin a cold-ass lil certificate request) don't
need a cold-ass lil configuration file so its use aint enforced. Y'all KNOW dat shit, muthafucka! Generation of
certificates or requests however do need a cold-ass lil configuration file. This
could be regarded as a funky-ass bug.
.PP
Another puzzlin message is this:
.PP
.Vb 2
\&        Attributes:
\&            a0:00
.Ve
.PP
this is displayed when no attributes is present n' tha request includes
the erect empty \fB\s-1SET OF\s0\fR structure (the \s-1DER\s0 encodin of which is 0xa0
0x00). If you just see:
.PP
.Vb 1
\&        Attributes:
.Ve
.PP
then tha \fB\s-1SET OF\s0\fR is missin n' tha encodin is technologically invalid (but
it is tolerated). Right back up in yo muthafuckin ass. See tha description of tha command line option \fB\-asn1\-kludge\fR
for mo' shiznit.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
Da variable \fB\s-1OPENSSL_CONF\s0\fR if defined allows a alternatizzle configuration
file location ta be specified, it is ghon be overridden by tha \fB\-config\fR command
line switch if it is present. For compatibilitizzle reasons tha \fB\s-1SSLEAY_CONF\s0\fR
environment variable serves tha same ol' dirty purpose but its use is discouraged.
.SH "BUGS"
.IX Header "BUGS"
OpenSSLz handlin of T61Strings (aka TeletexStrings) is broken: it effectively
treats dem as \s-1ISO\-8859\-1 \s0(Latin 1), Netscape n' \s-1MSIE\s0 have similar behaviour.
This can cause problems if you need charactas dat aren't available in
PrintableStrings n' you don't wanna or can't use BMPStrings.
.PP
As a cold-ass lil consequence of tha T61Strin handlin tha only erect way ta represent
accented charactas up in OpenSSL is ta bust a BMPString: unfortunately Netscape
currently chokes on these n' you can put dat on yo' toast. If you gotta use accented charactas wit Netscape
and \s-1MSIE\s0 then you currently need ta use tha invalid T61Strin form.
.PP
Da current promptin aint straight-up bumpin'. Well shiiiit, it don't allow you ta confirm what
you've just entered. Y'all KNOW dat shit, muthafucka! Other thangs like extensions up in certificate requests are
statically defined up in tha configuration file. Right back up in yo muthafuckin ass. Some of these: like a email
address up in subjectAltName should be input by tha user.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIx509\fR\|(1), \fIca\fR\|(1), \fIgenrsa\fR\|(1),
\&\fIgendsa\fR\|(1), \fIconfig\fR\|(5),
\&\fIx509v3_config\fR\|(5)
