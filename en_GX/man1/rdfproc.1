.\"                                      Yo, EMACS: -*- nroff -*-
.\"
.\" rdfproc.1 - Redland RDF processor utilitizzle manual page
.\"
.\" Copyright (C) 2003-2010 Dizzy Beckett - http://www.dajobe.org/
.\" Copyright (C) 2003-2005 Universitizzle of Bristol - http://www.bristol.ac.uk/
.\"
.TH rdfproc 1 "2010-08-29"
.\" Please adjust dis date whenever revisin tha manpage.
.SH NAME
rdfproc \- Redland RDF processor utility
.SH SYNOPSIS
.B rdfproc
.RB [ options ]
.IR "store-name"
.IR "command"
.IR "arg..."
.SH EXAMPLE
.nf
.B rdfproc test parse http://planetrdf.com/guide/rss.rdf
.br
.B rdfproc test print
.br
.B rdfproc test serialize ntriples
.br
.SH DESCRIPTION
The
.B rdfproc
utilitizzle allows parsing, querying, manipulatin n'  serializin of
RDF content rockin the
.B Redland
RDF library.   Da \fIstore-name\fR be a Redland store name, typically
a short identifier n' shit.  Da arguments ta \fIcommand\fR vary
and is explained up in section COMMANDS below.
.SH OPTIONS
rdfproc uses tha usual GNU command line syntax, wit long
options startin wit two dashes (`-') if supported by the
getopt_long function. I aint talkin' bout chicken n' gravy biatch.  Otherwise tha short options is only available.
.TP
.B \-h, \-\-help
Show a summary of tha options.
.TP
.B \-c, \-\-contexts
Use a store wit Redland contexts.
.TP
.B \-n, \-\-new
Make a freshly smoked up store, overwritin any existin one.
.TP
.B \-o, \-\-output \fIFORMAT\fR
Set tha output FORMAT fo' sequencez of triples, like fuckin from a search
(find command) ta a Redland serializer n' shit. 
Use \-h or \-o help ta peep tha full list of supported formats.
.TP
.B \-p, \-\-password
Read tha storage option 'password' from standard input.  Terminated
by end of line ('\\n') or end of file.  This is equivalent
to settin it rockin \-t or \-\-storage-options but do not
require exposin tha password up in tha argument list.
.TP
.B \-q, \-\-quiet
Suppress shiznital lyrics (that git all up in stderr)
.TP
.B \-r, \-\-results \fIFORMAT\fR
Set tha query thangs up in dis biatch syntax format.
Use \-h or \-r help ta peep tha full list of query result formats.
.IP
Da exact list of formats dependz on what tha fuck libraptor(3) was built with
but is given erect up in tha usage message wit \-h.
.TP
.B \-s, \-\-storage \fITYPE\fR
Set tha Redland storage type (default 'hashes').
If environment variable RDFPROC_STORAGE_TYPE is set,
the storage type given here will override dat shit.
Use \-h or \-s help ta peep tha full list of query result formats.
.TP
.B \-t, \-\-storage-options \fIOPTIONS\fR
Set options fo' tha the Redland storage, default is "hash-type='bdb',dir='.'"
to match tha default storage "hashes".  For storages types like fuckin 'mysql'
that need extra options dis would typically be something
like "host='hostname',database='dbname',user='abc',password='pass'".
If environment variable RDFPROC_STORAGE_OPTIONS is set, tha storage
options given here is ghon be applied afterwards.
.TP
.B \-v, \-\-version
Print tha Redland version n' exit.
.TP
.B \-V, \-\-verbose
Show shiznital lyrics on stderr.
.SH COMMANDS
Where a node be allowed, like fuckin \fINODE\fP, \fISUBJECT\fP,
\fIPREDICATE\fP or \fIOBJECT\fP below, simple heuristics is used to
guess which is blank node identifiers, URIs or literals
(to add a statement wit a literal, use add-typed).  If the
item starts wit _: then it be assumed ta be a funky-ass blank node identifier,
otherwise if it matches something:// it be assumed ta be a URI,
otherwise it aint nuthin but a literal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Literals is only allowed as objects
of statements n' blank nodes is not allowed as predicates.
.IP "\fBadd \fISUBJECT\fP \fIPREDICATE\fP \fIOBJECT\fP \fI[CONTEXT]\fP\fR"
Add tha given triple ta graph, up in tha optionizzle Redland context
if tha \fICONTEXT\fR node is given.

.IP "\fBadd-typed \fISUBJECT\fP \fIPREDICATE\fP \fIOBJECT\fP \fIOBJECT-LANG\fP \fIOBJECT-URI\fP \fI[CONTEXT]\fP\fR"
Add tha triple wit tha datatyped literal object ta tha graph, up in the
optionizzle Redland context if \fICONTEXT\fR is given.

.IP "\fBarc \fISUBJECT\fP \fIOBJECT\fP\fR"
.IP "\fBarcs \fISUBJECT\fP \fIOBJECT\fP\fR"
Show one node/all nodes dat match triplez (\fISUBJECT\fP, ?, \fIOBJECT\fP)

.IP "\fBarcs-in \fINODE\fP\fR"
Show all propertizzlez of triplez wit \fINODE\fP as a subject.

.IP "\fBarcs-out \fINODE\fP\fR"
Show all propertizzlez of triplez wit \fINODE\fP as a object.

.IP "\fBgotz nuff \fISUBJECT\fP \fIPREDICATE\fP \fIOBJECT\fP\fR"
Peep if tha given triple is up in tha graph.

.IP "\fBcontexts\fR"
List all tha contexts up in tha graph (if contexts is enabled).

.IP "\fBfind \fISUBJECT\fP|- \fIPREDICATE\fP|- \fIOBJECT\fP|- [\fICONTEXT\fP]\fR"
Find matchin triplez ta tha given statement
where - standz fo' a funky-ass blank dat matches any node.  If \fICONTEXT\fP
is given, only search fo' triplez up in dat context node.

.IP "\fBhas-arc-in \fINODE\fP \fIARC\fP\fR"
Peep dat there be a triple wit \fINODE\fP as a subject
and \fIARC\fP as a predicate.

.IP "\fBhas-arc-out \fPNODE\fP \fIARC\fP\fR"
Peep dat there be a triple wit \fINODE\fP as a object
and \fIARC\fP as a predicate.

.IP "\fBparse \fIURI|FILENAME\fP [\fISYNTAX|\fP [\fIBASE URI\fP]]\fR"
Parse syntax at \fIURI\fP tha fuck into tha graph rockin \fISYNTAX\fP which
can be one of \fIrdfxml\fP (RDF/XML, default), \fIntriples\fP, \fIturtle\fP,
\fIrss-tag-soup\fP (for all RSS n' Atoms), \fIgrddl\fP n' \fIguess\fP to
use content hints n' protocol shiznit ta work it out. (This list chizzles
fasta than dis manual page)
If \fIFILENAME\fP be a existin file, tha appropriate URI'ma be
generated fo' dat shit.  If parsin returns errors, tha return code is ghon be non-0.

.IP "\fBparse-stream \fIURI|FILENAME\fP [\fISYNTAX\fP [\fIBASE URI\fP [\fICONTEXT\fP]]\fR"
Streamin parse syntax at URI tha fuck into tha graph rockin \fISYNTAX\fP which
can be one of \fIrdfxml\fP (RDF/XML, default) or \fIntriples\fP.
If \fIFILENAME\fP be a existin file, tha appropriate URI'ma be
generated fo' dat shit.  If tha optionizzle \fICONTEXT\fI URI is given,
the triplez is added ta dat context.
If parsin returns errors, tha return code is ghon be non-0.

.IP "\fBprint\fR"
Print tha graph triplez up in a simple format showin context nodes
if present.

.IP "\fBquery \fINAME\fP|- \fIURI\fP|- \fIQUERY-STRING\fP\fR"
Run \fIQUERY-STRING\fI query up in language \fINAME\fR returning
variable bindings, a funky-ass boolean or RDF graph dependin on tha query.
Query language can be 'sparql' or 'rdql'.

.IP "\fBremove \fISUBJECT\fP \fIPREDICATE\fP \fIOBJECT\fP \fI[CONTEXT]\fP\fR"
Remove tha given triple graph, up in tha optionizzle Redland context
if \fICONTEXT\fR is given.

.IP "\fBremove-context \fICONTEXT\fP\fR"
Remove all triplez up in tha graph wit tha Redland context \fICONTEXT\fR.

.IP "\fBserialize [\fISYNTAX\fP [\fIURI\fP [\fIMIME-TYPE\fP]]]\fR"
Serializes tha graph ta a syntax wit a particular \ISYNTAX\fR
\fIURI\fR or Internizzle Media Type/MIME Type.  Da default is
RDF/XML (\fINAME\fR "rdfxml", MIME Type "application/rdf/xml")
if none of tha above is given. I aint talkin' bout chicken n' gravy biatch.  Other alternatives
are "ntriples" (no MIME Type).

.IP "\fBsource \fIPREDICATE\fP \fIOBJECT\fP\fR"
.IP "\fBsources \fIPREDICATE\fP \fIOBJECT\fP\fR"
Show one node/all nodes dat match triplez (?, \fIPREDICATE\fP, \fIOBJECT\fP)

.IP "\fBtarget \fISUBJECT\fP \fIPREDICATE\fP\fR"
.IP "\fBtargets \fISUBJECT\fP \fIPREDICATE\fP\fR"
Show one node/all nodes dat match triplez (\fISUBJECT\fP, \fIPREDICATE\fP, ?)

.SH "ENVIRONMENT"
RDFPROC_STORAGE_OPTIONS can be set ta provide storage options
instead of rockin tha option \-t, \-\-storage-options \fIOPTIONS\fR.
When both is given, command options is applied last.
.LP
RDFPROC_STORAGE_TYPE can be set ta provide a storage type
instead of rockin tha option \-s, \-\-storage \fITYPE\fR.
When both is given, tha storage type from tha command is used.
.SH "CONFORMING TO"
\fIRDF/XML Syntax (Revised)\fR,
W3C Recommendation,
.UR http://www.w3.org/TR/rdf-syntax-grammar/
http://www.w3.org/TR/rdf-syntax-grammar/
.UE

\fIN-Triples\fR, up in \fIRDF Test Cases\fR, Jan Grant n' Dizzle Beckett (eds.)
W3C Recommendation,
.UR http://www.w3.org/TR/rdf-testcases/#ntriples
http://www.w3.org/TR/rdf-testcases/#ntriples
.UE
.SH SEE ALSO
redland(3), libraptor(3), rapper(1)
.SH AUTHOR
Dizzle Beckett - 
.UR http://www.dajobe.org/
http://www.dajobe.org/
.UE
