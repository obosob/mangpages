.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLOS400 1"
.TH PERLOS400 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlos400 \- Perl version 5 on OS/400
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout various featurez of \s-1IBM\s0z \s-1OS/400\s0 operating
system dat will affect how tha fuck Perl version 5 (hereafta just Perl) is
compiled and/or runs.
.PP
By far tha easiest way ta build Perl fo' \s-1OS/400\s0 is ta use tha \s-1PASE
\&\s0(Portable Application Solutions Environment), fo' mo' shiznit see
<http://www.iseries.ibm.com/developer/factory/pase/index.html>
This environment allows one ta use \s-1AIX\s0 APIs while programming, n' it
provides a runtime dat allows \s-1AIX\s0 binaries ta execute directly on the
PowerPC iSeries.
.SS "Compilin Perl fo' \s-1OS/400 PASE\s0"
.IX Subsection "Compilin Perl fo' OS/400 PASE"
Da recommended way ta build Perl fo' tha \s-1OS/400 PASE\s0 is ta build the
Perl 5 source code (release 5.8.1 or later) under \s-1AIX.\s0
.PP
Da trick is ta give a special parameta ta tha Configure shell script
when hustlin it on \s-1AIX:\s0
.PP
.Vb 1
\&  sh Configure \-DPASE ...
.Ve
.PP
Da default installation directory of Perl under \s-1PASE\s0 is /QOpenSys/perl.
This can be modified if needed wit Configure parameta \-Dprefix=/some/dir.
.PP
Startin from \s-1OS/400 V5R2\s0 tha \s-1IBM\s0 Visual Age compila is supported
on \s-1OS/400 PASE,\s0 so it is possible ta build Perl natively on \s-1OS/400.  \s0
Da easier way, however, is ta compile up in \s-1AIX,\s0 as just busted lyrics about.
.PP
If you don't wanna install tha compiled Perl up in \s-1AIX\s0 tha fuck into /QOpenSys
(for packagin it before copyin it ta \s-1PASE\s0), you can bust a Configure
parameter: \-Dinstallprefix=/tmp/QOpenSys/perl.  This will cause the
\&\*(L"make install\*(R" ta install every last muthafuckin thang tha fuck into dat directory, while the
installed filez still be thinkin they is (will be) up in /QOpenSys/perl.
.PP
If buildin natively on \s-1PASE,\s0 please do tha build under tha /QOpenSys
directory, since Perl is happier when built on a cold-ass lil case sensitizzle filesystem.
.SS "Installin Perl up in \s-1OS/400 PASE\s0"
.IX Subsection "Installin Perl up in OS/400 PASE"
If yo ass is compilin on \s-1AIX,\s0 simply do a \*(L"make install\*(R" on tha \s-1AIX\s0 box.
Once tha install finishes, tar up tha /QOpenSys/perl directory.  Transfer
the tarbizzle ta tha \s-1OS/400\s0 rockin \s-1FTP\s0 wit tha followin commands:
.PP
.Vb 3
\&  > binary
\&  > joint namefmt 1
\&  > put perl.tar /QOpenSys
.Ve
.PP
Once you have it on, simply brang up a \s-1PASE\s0 shell n' extract tha tarball.
.PP
If yo ass is compilin up in \s-1PASE,\s0 then \*(L"make install\*(R" is tha only thang you
will need ta do.
.PP
Da default path fo' perl binary is /QOpenSys/perl/bin/perl.  You'll
wanna symlink /QOpenSys/usr/bin/perl ta dis file so you don't have
to modify yo' path.
.SS "Usin Perl up in \s-1OS/400 PASE\s0"
.IX Subsection "Usin Perl up in OS/400 PASE"
Perl up in \s-1PASE\s0 may be used up in tha same manner as you would use Perl on \s-1AIX.\s0
.PP
Scripts startin wit #!/usr/bin/perl should work if you have
/QOpenSys/usr/bin/perl symlinked ta yo' perl binary.  This will not
work if you've done a setuid/setgid or have environment variable
PASE_EXEC_QOPENSYS=\*(L"N\*(R".  If you have V5R1, you gonna need ta git the
latest PTFs ta have dis feature.  Scripts startin with
#!/QOpenSys/perl/bin/perl should always work.
.SS "Known Problems"
.IX Subsection "Known Problems"
When compilin up in \s-1PASE,\s0 there is no \*(L"oslevel\*(R" command. Y'all KNOW dat shit, muthafucka!  Therefore,
you may wanna create a script called \*(L"oslevel\*(R" dat echoes the
level of \s-1AIX\s0 dat yo' version of \s-1PASE\s0 runtime supports, n' you can put dat on yo' toast.  If you is
unsure, consult yo' documentation or use \*(L"4.3.3.0\*(R".
.PP
If you have test cases dat fail, check fo' tha existence of spool files.
Da test case may be tryin ta bust a syscall dat aint implemented
in \s-1PASE. \s0 To avoid tha \s-1SIGILL,\s0 try settin tha \s-1PASE_SYSCALL_NOSIGILL\s0
environment variable or gotz a handlez fo' tha \s-1SIGILL. \s0 If you can
compile programs fo' \s-1PASE,\s0 run tha config script n' edit config.sh
when it gives you tha option. I aint talkin' bout chicken n' gravy biatch.  If you wanna remove \fIfchdir()\fR, which
aint implement up in V5R1, simply chizzle tha line dat says:
.PP
d_fchdir='define'
.PP
to
.PP
d_fchdir='undef'
.PP
and then compile Perl.  Da places where \fIfchdir()\fR is used have
alternatives fo' systems dat aint gots \fIfchdir()\fR available.
.SS "Perl on \s-1ILE\s0"
.IX Subsection "Perl on ILE"
There exists a port of Perl ta tha \s-1ILE\s0 environment.  This port, however,
is based like a oldschool release of Perl, Perl 5.00502 (August 1998).
(Az of July 2002 tha sickest fuckin release of Perl is 5.8.0, n' even 5.6.1
has been up since April 2001.)  If you need ta run Perl on \s-1ILE,\s0 though,
you may need dis olda port: <http://www.cpan.org/ports/#os400>
Note dat any Perl release lata than 5.00502 has not been ported ta \s-1ILE.\s0
.PP
If you need ta use Perl up in tha \s-1ILE\s0 environment, you may wanna consider
usin \fIQp2RunPase()\fR ta booty-call tha \s-1PASE\s0 version of Perl.
.SH "AUTHORS"
.IX Header "AUTHORS"
Jarkko Hietaniemi <jhi@iki.fi>
Bryan Logan <bryanlog@us.ibm.com>
Dizzy Larson <larson1@us.ibm.com>
