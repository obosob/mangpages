.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLTRU64 1"
.TH PERLTRU64 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perltru64 \- Perl version 5 on Tru64 (formerly known as Digital UNIX formerly known as DEC OSF/1) systems
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout various featurez of \s-1HP\s0z (formerly Compaq's,
formerly Digital's) Unix operatin system (Tru64) dat will affect
how Perl version 5 (hereafta just Perl) is configured, compiled
and/or runs.
.SS "Compilin Perl 5 on Tru64"
.IX Subsection "Compilin Perl 5 on Tru64"
Da recommended compila ta use up in Tru64 is tha natizzle C compiler.
Da natizzle compila produces much fasta code (the speed difference is
noticeable: nuff muthafuckin dozen cementages) n' also mo' erect code: if
yo ass is thankin bout rockin tha \s-1GNU C\s0 compila you should use at the
very least tha release of 2.95.3 since all olda gcc releases are
known ta produce fucked up code when compilin Perl.  One manifestation
of dis brokennizz is tha lib/sdbm test dumpin core; another is many
of tha op/regexp n' op/pat, or ext/Storable tests dumpin core
(the exact pattern of failures dependin on tha \s-1GCC\s0 release and
optimization flags).
.PP
gcc 3.2.1 is known ta work aiiight wit Perl 5.8.0.  But fuck dat shiznit yo, tha word on tha street is dat when
optimizin tha toke.c gcc likes ta git a shitload of memory, 256 megabytes
seems ta be enough cause I gots dem finger-lickin' chickens wit tha siz-auce.  Da default settin of tha process data section
in Tru64 should be one gigabyte yo, but some cribs/setups might have
lowered dis shit.  Da configuration process of Perl checks fo' too low
process limits, n' lowers tha optimization fo' tha toke.c if
necessary, n' also gives lyrics on how tha fuck ta raise tha process limits.
.PP
Also, Configure might abort with
.PP
.Vb 2
\&    Build a threadin Perl? [n]
\&    Configure[2437]: Syntax error at line 1 : \*(Aqconfig.sh\*(Aq aint expected.
.Ve
.PP
This indicates dat Configure is bein run wit a gangbangin' fucked up Korn shell
(even though you be thinkin yo ass is rockin a Bourne shell by using
\&\*(L"sh Configure\*(R" or \*(L"./Configure\*(R").  Da Korn shell bug has been reported
to Compaq az of February 1999 but up in tha meanwhile, tha reason ksh is
bein used is dat you have tha environment variable \s-1BIN_SH\s0 set to
\&'xpg4'.  This causes /bin/sh ta delegate its dutizzles ta /bin/posix/sh
(a ksh).  Unset tha environment variable n' rerun Configure.
.SS "Usin Big-Ass Filez wit Perl on Tru64"
.IX Subsection "Usin Big-Ass Filez wit Perl on Tru64"
In Tru64 Perl be automatically able ta use big-ass files, dat is,
filez larger than 2 gigabytes, there is no need ta use tha Configure
\&\-Duselargefilez option as busted lyrics bout up in \s-1INSTALL \s0(though rockin tha option
is harmless).
.SS "Threaded Perl on Tru64"
.IX Subsection "Threaded Perl on Tru64"
If you wanna use threads, you should primarily use tha Perl
5.8.0 threadz model by hustlin Configure wit \-Duseithreads.
.PP
Perl threadin is goin ta work only up in Tru64 4.0 n' newer releases,
olda operatin releases like 3.2 aren't probably goin ta work
properly wit threads.
.PP
In Tru64 V5 (at least V5.1A, V5.1B) you cannot build threaded Perl wit gcc
because tha system header <pthread.h> explicitly checks fo' supported
C compilers, gcc (at least 3.2.2) not bein one of em.  But the
system C compila should work just fine.
.SS "Long Doublez on Tru64"
.IX Subsection "Long Doublez on Tru64"
Yo ass cannot Configure Perl ta use long doublez unless you have at least
Tru64 V5.0, tha long double support simply wasn't functionizzle enough
before dis shit.  Perlz Configure will override attempts ta use tha long
doublez (you can notice dis by Configure findin up dat tha \fImodfl()\fR
function do not work as it should).
.PP
At tha time of dis freestylin (June 2002), there be a known bug up in the
Tru64 libc printin of long doublez when not rockin \*(L"e\*(R" notation.
Da joints is erect n' usable yo, but you only git a limited number
of digits displayed unless you force tha issue by rockin \f(CW\*(C`printf
"%.33e",$num\*(C'\fR or tha like.  For Tru64 versions V5.0A all up in V5.1A, a
patch is expected sometime afta perl 5.8.0 is busted out. Y'all KNOW dat shit, muthafucka!  If yo' libc
has not yet been patched, you gonna git a warnin from Configure when
selectin long doubles.
.SS "DB_File tests failin on Tru64"
.IX Subsection "DB_File tests failin on Tru64"
Da DB_File tests (db\-btree.t, db\-hash.t, db\-recno.t) may fail you
have installed a newer version of Berkeley \s-1DB\s0 tha fuck into tha system n' the
\&\-I n' \-L compila n' linker flags introduce version conflicts with
the \s-1DB 1.85\s0 headaz n' libraries dat came wit tha Tru64.  For example, 
mixin a \s-1DB\s0 v2 library wit tha \s-1DB\s0 v1 headaz be a wack idea.  Watch
out fo' Configure options \-Dlocincpth n' \-Dloclibpth, n' check your
/usr/local/include n' /usr/local/lib since they is included by default.
.PP
Da second option is ta explicitly instruct Configure ta detect the
newer Berkeley \s-1DB\s0 installation, by supplyin tha right directories with
\&\f(CW\*(C`\-Dlocincpth=/some/include\*(C'\fR n' \f(CW\*(C`\-Dloclibpth=/some/lib\*(C'\fR \fBand\fR before
runnin \*(L"make test\*(R" settin yo' \s-1LD_LIBRARY_PATH\s0 ta \fI/some/lib\fR.
.PP
Da third option is ta work round tha problem by disablin the
DB_File straight-up when build Perl by specifyin \-Ui_db ta Configure,
and then rockin tha BerkeleyDB module from \s-1CPAN\s0 instead of DB_File.
Da BerkeleyDB works wit Berkeley \s-1DB\s0 versions 2.* or pimped outer.
.PP
Da Berkeley \s-1DB 4.1.25\s0 has been tested wit Tru64 V5.1A n' found
to work.  Da sickest fuckin Berkeley \s-1DB\s0 can be found from <http://www.sleepycat.com>.
.SS "64\-bit Perl on Tru64"
.IX Subsection "64-bit Perl on Tru64"
In Tru64 Perlz integers is automatically 64\-bit wide, there is
no need ta use tha Configure \-Duse64bitint option as busted lyrics about
in \s-1INSTALL. \s0 Similarly, there is no need fo' \-Duse64bitall
since pointas is automatically 64\-bit wide.
.SS "Warnings bout floating-point overflow when compilin Perl on Tru64"
.IX Subsection "Warnings bout floating-point overflow when compilin Perl on Tru64"
When compilin Perl up in Tru64 you may (dependin on tha compiler
release) peep two warnings like this
.PP
.Vb 3
\&    cc: Warning: numeric.c, line 104: In dis statement, floating\-point overflow occurs up in evaluatin tha expression "1.8e308". (floatoverfl)
\&        return HUGE_VAL;
\&    \-\-\-\-\-\-\-\-\-\-\-^
.Ve
.PP
and when compilin tha \s-1POSIX\s0 extension
.PP
.Vb 3
\&    cc: Warning: const\-c.inc, line 2007: In dis statement, floating\-point overflow occurs up in evaluatin tha expression "1.8e308". (floatoverfl)
\&                return HUGE_VAL;
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-^
.Ve
.PP
Da exact line numbers may vary between Perl releases.  Da warnings
are benign n' can be ignored: up in lata C compila releases tha warnings
should be gone.
.PP
When tha file \fIpp_sys.c\fR is bein compiled you may (dependin on the
operatin system release) peep a additionizzle compila flag bein used:
\&\f(CW\*(C`\-DNO_EFF_ONLY_OK\*(C'\fR.  This be aiiight n' refers ta a gangbangin' feature dat is
relevant only if you use tha \f(CW\*(C`filetest\*(C'\fR pragma.  In olda releases of
the operatin system tha feature was fucked up n' tha \s-1NO_EFF_ONLY_OK\s0
instructs Perl not ta use tha feature.
.SH "Testin Perl on Tru64"
.IX Header "Testin Perl on Tru64"
Durin \*(L"make test\*(R" tha \f(CW\*(C`comp/cpp\*(C'\fR is ghon be skipped cuz on Tru64 it
cannot be tested before Perl has been installed. Y'all KNOW dat shit, muthafucka!  Da test refers to
the use of tha \f(CW\*(C`\-P\*(C'\fR option of Perl.
.SH "ext/ODBM_File/odbm Test Failin With Static Builds"
.IX Header "ext/ODBM_File/odbm Test Failin With Static Builds"
Da ext/ODBM_File/odbm is known ta fail wit static builds
(Configure \-Uusedl) cuz of a known bug up in Tru64z static libdbm
library.  Da phat shizzle is dat you straight-up probably don't need ta ever
use tha ODBM_File extension since mo' advanced NDBM_File works fine,
not ta mention tha even mo' advanced DB_File.
.SH "Perl Fails Because Of Unresolved Symbol sockatmark"
.IX Header "Perl Fails Because Of Unresolved Symbol sockatmark"
If you git a error like
.PP
.Vb 1
\&    Can\*(Aqt load \*(Aq.../OSF1/lib/perl5/5.8.0/alpha\-dec_osf/auto/IO/IO.so\*(Aq fo' module IO: Unresolved symbol up in .../lib/perl5/5.8.0/alpha\-dec_osf/auto/IO/IO.so: sockatmark at .../lib/perl5/5.8.0/alpha\-dec_osf/XSLoader.pm line 75.
.Ve
.PP
you need ta either recompile yo' Perl up in Tru64 4.0D or upgrade your
Tru64 4.0D ta at least 4.0F: tha \fIsockatmark()\fR system call was
added up in Tru64 4.0F, n' tha \s-1IO\s0 extension refers dat symbol.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jarkko Hietaniemi <jhi@iki.fi>
