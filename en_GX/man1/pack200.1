." Copyright (c) 2004, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH pack200 1 "16 Mar 2012"

.LP
.SH "Name"
pack200 \- JAR Packin tool
.LP
.SH "SYNOPSIS"
.LP
.LP
\f4pack200\fP\f2 [ \fP\f2options\fP ] \f2output\-file\fP \f2JAR\-file\fP
.LP
.LP
Options may be up in any order n' shit. Da last option on tha command line or up in a propertizzles file supersedes all previously specified options.
.LP
.RS 3
.TP 3
options 
Command\-line options. 
.TP 3
output\-file 
Name of tha output file. 
.TP 3
JAR\-file 
Name of tha input file. 
.RE

.LP
.SH "DESCRIPTION"
.LP
.LP
Da \f2pack200\fP tool be a Java application dat transforms a JAR file tha fuck into a cold-ass lil compressed \f2pack200\fP file rockin tha Java \f2gzip\fP compressor. Shiiit, dis aint no joke. Da \f2pack200\fP filez is highly compressed filez dat can be directly deployed, savin bandwidth n' reducin downlizzle time.
.LP
.LP
Da \f2pack200\fP tool uses nuff muthafuckin options ta fine\-tune n' set tha compression engine.
.LP
.SS 
Typical usage:
.LP
.LP
\f2% pack200 myarchive.pack.gz myarchive.jar\fP
.LP
.LP
In dis example, \f2myarchive.pack.gz\fP is produced rockin tha default \f2pack200\fP settings.
.LP
.SH "OPTIONS"
.LP
.LP
\f4\-r \-\-repack\fP
.LP
.LP
Produces a JAR file by packin tha file \f2myarchive.jar\fP n' unpackin dat shit. Da resultin file can be used as a input ta tha \f2jarsigner(1)\fP tool.
.LP
.LP
\f2% pack200 \-\-repack myarchive\-packer.jar myarchive.jar\fP
.LP
.LP
\f2% pack200 \-\-repack myarchive.jar\fP
.LP
.LP
\f4\-g \-\-no\-gzip\fP
.LP
.LP
Produces a \f2pack200\fP file. With dis option a suitable compressor must be used, n' tha target system must bust a cold-ass lil correspondin decompresser.
.LP
.LP
\f2% pack200 \-\-no\-gzip myarchive.pack myarchive.jar\fP
.LP
.LP
\f4\-G \-\-strip\-debug\fP
.LP
.LP
Strips attributes used fo' debuggin from tha output. These include \f2SourceFile\fP, \f2LineNumberTable\fP, \f2LocalVariableTable\fP n' \f2LocalVariableTypeTable\fP. Removin these attributes reduces tha size of both downloadz n' installations but reduces tha usefulnizz of debuggers.
.LP
.LP
\f4\-\-keep\-file\-order\fP
.LP
.LP
Preserve tha order of filez up in tha input file; dis is tha default behavior.
.LP
.LP
\f4\-O \-\-no\-keep\-file\-order\fP
.LP
.LP
Da packer will reorder n' transmit all elements fo' realz. Additionally, tha packer may remove JAR directory names. This will reduce tha downlizzle size; however, certain JAR file optimizations, like fuckin indexing, may not work erectly.
.LP
.LP
\f4\-Svalue \-\-segment\-limit=\fP\f2value\fP
.LP
.LP
Da value is tha estimated target size N (in bytes) of each archive segment. If a single input file requires
.br
more than N bytes, it is ghon be given its own archive segment fo' realz. As a special case, a value of \f2\-1\fP will produce a single big-ass segment wit all input files, while a value of \f20\fP will produce one segment fo' each class. Larger archive segments result up in less fragmentation n' betta compression yo, but processin dem requires mo' memory.
.LP
.LP
Da size of each segment is estimated by countin tha size of each input file ta be transmitted up in tha segment, along wit tha size of its name n' other transmitted properties.
.LP
.LP
Da default is \-1, which means tha packer will always create a single segment output file. In cases where mad big-ass output filez is generated, playas is straight fuckin encouraged ta use segmentin or break up tha input file tha fuck into smalla JARs.
.LP
.LP
A 10MB JAR packed without dis limit will typically pack bout 10% smalla yo, but tha packer may require a larger Java heap (about ten times tha segment limit).
.LP
.LP
\f4\-Evalue \-\-effort=\fP\f2value\fP
.LP
.LP
If tha value is set ta a single decimal digit, tha packer will use tha indicated amount of effort up in compressin tha archive. Level \f21\fP may produce somewhat larger size n' fasta compression speed, while level \f29\fP will take much longer but may produce betta compression. I aint talkin' bout chicken n' gravy biatch. Da special value \f20\fP instructs tha packer ta copy all up in tha original gangsta JAR file directly wit no compression. I aint talkin' bout chicken n' gravy biatch. Da JSR 200 standard requires any unpacker ta KNOW dis special case as a pass\-all up in of tha entire archive.
.LP
.LP
Da default is \f25\fP, investin a modest amount of time ta produce reasonable compression.
.LP
.LP
\f4\-Hvalue \-\-deflate\-hint=\fP\f2value\fP
.LP
.LP
Overrides tha default, which preserves tha input shiznit yo, but may cause tha transmitted archive ta be larger n' shit. Da possible joints are:
.LP
.RS 3
.TP 3
true 
.TP 3
false 
In either case, tha packer will set tha deflation hint accordingly up in tha output archive, n' aint gonna transmit tha individual deflation hintz of archive elements, n' you can put dat on yo' toast. 
.RE

.LP
.RS 3
.TP 3
keep 
Preserve deflation hints observed up in tha input JAR. (This is tha default.) 
.RE

.LP
.LP
\f4\-mvalue \-\-modification\-time=\fP\f2value\fP
.LP
.LP
Da possible joints are:
.LP
.RS 3
.TP 3
latest 
Da packer will attempt ta determine tha sickest fuckin modification time, among all tha available entries up in tha original gangsta archive, or tha sickest fuckin modification time of all tha available entries up in dat segment. This single value is ghon be transmitted as part of tha segment n' applied ta all tha entries up in each segment. This can marginally decrease tha transmitted size of tha archive all up in tha expense of settin all installed filez ta a single date. 
.TP 3
keep 
Preserves modification times observed up in tha input JAR. (This is tha default.) 
.RE

.LP
.LP
\f4\-Pfile \-\-pass\-file=\fP\f2file\fP
.LP
.LP
Indicates dat a gangbangin' file should be passed all up in bytewise wit no compression. I aint talkin' bout chicken n' gravy biatch. By repeatin tha option, multiple filez may be specified. Y'all KNOW dat shit, muthafucka! There is no pathname transformation, except dat tha system file separator is replaced by tha JAR file separator "\f2/\fP". Da resultin file names must match exactly as strings wit they occurrences up in tha JAR file. If file be a gangbangin' finger-lickin' directory name, all filez under dat directory is ghon be passed.
.LP
.LP
\f4\-Uaction \-\-unknown\-attribute=\fP\f2action\fP
.LP
.LP
Overrides tha default behavior; i.e., tha classfile containin tha unknown attribute is ghon be passed all up in wit tha specified action. I aint talkin' bout chicken n' gravy biatch. Da possible joints fo' actions are:
.LP
.RS 3
.TP 3
error 
Da \f2pack200\fP operation as a whole will fail wit a suitable explanation. I aint talkin' bout chicken n' gravy biatch. 
.TP 3
strip 
Da attribute is ghon be dropped. Y'all KNOW dat shit, muthafucka! Note: Removin tha required VM attributes may cause Class Loader failures. 
.TP 3
pass 
Upon encounterin dis attribute, tha entire class is ghon be transmitted as though it aint nuthin but a resource. 
.RE

.LP
.LP
\f4\-Cattribute\-name=\fP\f2layout\fP \f3\-\-class\-attribute=\fP\f2attribute\-name=action\fP
.br
\f4\-Fattribute\-name=\fP\f2layout\fP \f3\-\-field\-attribute=\fP\f2attribute\-name=action\fP
.br
\f4\-Mattribute\-name=\fP\f2layout\fP \f3\-\-method\-attribute=\fP\f2attribute\-name=action\fP
.br
\f4\-Dattribute\-name=\fP\f2layout\fP \f3\-\-code\-attribute=\fP\f2attribute\-name=action\fP
.LP
.LP
With tha above four options, tha attribute layout can be specified fo' a cold-ass lil class entity, like fuckin Class attribute, Field attribute, Method attribute, n' Code attribute. Da attribute\-name is tha name of tha attribute fo' which tha layout or action is bein defined. Y'all KNOW dat shit, muthafucka! Da possible joints fo' action are:
.LP
.RS 3
.TP 3
some\-layout\-strin 
Da layout language is defined up in tha JSR 200 justification. I aint talkin' bout chicken n' gravy biatch. 
.LP
Example: \f2\-\-class\-attribute=SourceFile=RUH\fP  
.TP 3
error 
Upon encounterin dis attribute, tha pack200 operation will fail wit a suitable explanation. I aint talkin' bout chicken n' gravy biatch. 
.TP 3
strip 
Upon encounterin dis attribute, tha attribute is ghon be removed from tha output. Note: removin VM\-required attributes may cause Class Loader failures. 
.RE

.LP
.LP
Example: \f2\-\-class\-attribute=CompilationID=pass\fP will cause tha class file containin dis attribute ta be passed all up in without further action by tha packer.
.LP
.LP
\f4\-f\fP\f2 \fP\f2pack.properties\fP \f3\-\-config\-file=\fP\f2pack.properties\fP
.LP
.LP
A configuration file, containin Java propertizzles ta initialize tha packer, may be specified on tha command line.
.LP
.LP
\f2% pack200 \-f pack.propertizzles myarchive.pack.gz myarchive.jar\fP
.br
\f2% mo' pack.properties\fP
.br
\f2# Generic propertizzles fo' tha packer.\fP
.br
\f2modification.time=latest\fP
.br
\f2deflate.hint=false\fP
.br
\f2keep.file.order=false\fP
.br
\f2# This option will cause tha filez bearin freshly smoked up attributes to\fP
.br
\f2# be reported as a error rather than passed uncompressed.\fP
.br
\f2unknown.attribute=error\fP
.br
\f2# Chizzle tha segment limit ta be unlimited.\fP
.br
\f2segment.limit=\-1\fP
.LP
.LP
\f4\-v \-\-verbose\fP
.LP
.LP
Outputs minimal lyrics. Multiple justification of dis option will output mo' verbose lyrics.
.LP
.LP
\f4\-q \-\-quiet\fP
.LP
.LP
Specifies on tha down-low operation wit no lyrics.
.LP
.LP
\f4\-lfilename \-\-log\-file=\fP\f2filename\fP
.LP
.LP
Specifies a log file ta output lyrics.
.LP
.LP
\f4\-? \-h \-\-help\fP
.LP
.LP
Prints help shiznit bout dis command.
.LP
.LP
\f4\-V \-\-version\fP
.LP
.LP
Prints version shiznit bout dis command.
.LP
.LP
\f4\-J\fP\f2option\fP
.LP
.LP
Passes \f2option\fP ta tha Java launcher called by \f2pack200\fP. For example, \f2\-J\-Xms48m\fP sets tha startup memory ta 48 megabytes fo' realz. Although it do not begin wit \f2\-X\fP, it aint a standard option of \f2pack200\fP. Well shiiiit, it aint nuthin but a cold-ass lil common convention fo' \f2\-J\fP ta pass options ta tha underlyin VM executin applications freestyled up in Java.
.LP
.SH "EXIT STATUS"
.LP
.LP
Da followin exit joints is returned:
.LP
.LP
\f2\ 0\fP fo' successful completion;
.LP
.LP
\f2>0\fP if a error occurs.
.LP
.SH "SEE ALSO"
.LP
.RS 3
.TP 2
o
unpack200(1) 
.TP 2
o
.na
\f2Java SE Documentation\fP @
.fi
http://docs.oracle.com/javase/7/docs/index.html 
.TP 2
o
.na
\f2Java Deployment Guide \- Pack200\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment\-guide/pack200.html 
.TP 2
o
jar(1) \- Java Archive Tool 
.TP 2
o
jarsigner(1) \- JAR Signer tool 
.TP 2
o
\f2attributes(5)\fP playa page 
.RE

.LP
.SH "NOTES"
.LP
.LP
This command should not be trippin wit \f2pack(1)\fP. They is distinctly separate shizzle.
.LP
.LP
Da Java SE API Justification provided wit tha JDK is tha supersedin authority, up in case of discrepancies.
.LP
 
