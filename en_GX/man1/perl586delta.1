.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL586DELTA 1"
.TH PERL586DELTA 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl586delta \- what tha fuck is freshly smoked up fo' perl v5.8.6
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout differences between tha 5.8.5 release and
the 5.8.6 release.
.SH "Incompatible Chizzles"
.IX Header "Incompatible Chizzles"
There is no chizzlez incompatible wit 5.8.5.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
Da perl interpreta is now mo' tolerant of UTF\-16\-encoded scripts.
.PP
On Win32, Perl can now use non-IFS compatible LSPs, which allows Perl to
work up in conjunction wit firewalls like fuckin McAfee Guardian. I aint talkin' bout chicken n' gravy biatch. For full details
see tha file \fI\s-1README\s0.win32\fR, particularly if you hustlin Win95.
.SH "Modulez n' Pragmata"
.IX Header "Modulez n' Pragmata"
.IP "\(bu" 4
With tha \f(CW\*(C`base\*(C'\fR pragma, a intermediate class wit no fieldz used ta messes
up private fieldz up in tha base class. This has been fixed.
.IP "\(bu" 4
Cwd upgraded ta version 3.01 (as part of tha freshly smoked up PathTools distribution)
.IP "\(bu" 4
Devel::PPPort upgraded ta version 3.03
.IP "\(bu" 4
File::Spec upgraded ta version 3.01 (as part of tha freshly smoked up PathTools distribution)
.IP "\(bu" 4
Encode upgraded ta version 2.08
.IP "\(bu" 4
ExtUtils::MakeMaker remains at version 6.17, as lata stable releases currently
available on \s-1CPAN\s0 have some thangs wit core modulez on some core platforms.
.IP "\(bu" 4
I18N::LangTags upgraded ta version 0.35
.IP "\(bu" 4
Math::BigInt upgraded ta version 1.73
.IP "\(bu" 4
Math::BigRat upgraded ta version 0.13
.IP "\(bu" 4
MIME::Base64 upgraded ta version 3.05
.IP "\(bu" 4
POSIX::sigprocmask function can now retrieve tha current signal mask without
also settin dat shit.
.IP "\(bu" 4
Time::HiRes upgraded ta version 1.65
.SH "Utilitizzle Chizzles"
.IX Header "Utilitizzle Chizzles"
Perl has a freshly smoked up \-dt command-line flag, which enablez threadz support up in the
debugger.
.SH "Performizzle Enhancements"
.IX Header "Performizzle Enhancements"
\&\f(CW\*(C`reverse sort ...\*(C'\fR is now optimized ta sort up in reverse, avoidin the
generation of a temporary intermediate list.
.PP
\&\f(CW\*(C`for (reverse @foo)\*(C'\fR now iterates up in reverse, avoidin tha generation of a
temporary reversed list.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
Da regexp engine is now mo' robust when given invalid utf8 input, as is
sometimes generated by buggy \s-1XS\s0 modules.
.PP
\&\f(CW\*(C`foreach\*(C'\fR on threads::shared array used ta be able ta crash Perl. This bug
has now been fixed.
.PP
A regexp up in \f(CW\*(C`STDOUT\*(C'\fRz destructor used ta coredump, cuz tha regexp pad
was already freed. Y'all KNOW dat shit, muthafucka! This has been fixed.
.PP
\&\f(CW\*(C`goto &\*(C'\fR is now mo' robust \- bugs up in deep recursion n' chained \f(CW\*(C`goto &\*(C'\fR
have been fixed.
.PP
Usin \f(CW\*(C`delete\*(C'\fR on a array no longer leaks memory fo' realz. A \f(CW\*(C`pop\*(C'\fR of a item from a
shared array reference no longer causes a leak.
.PP
\&\f(CW\*(C`eval_sv()\*(C'\fR failin a taint test could corrupt tha stack \- dis has been
fixed.
.PP
On platforms wit 64 bit pointas numeric comparison operators used to
erroneously compare tha addressez of references dat is overloaded, rather
than rockin tha overloaded joints, n' you can put dat on yo' toast. This has been fixed.
.PP
\&\f(CW\*(C`read\*(C'\fR tha fuck into a UTF8\-encoded buffer wit a offset off tha end of tha buffer
no longer mis-calculates buffer lengths.
.PP
Although Perl has promised since version 5.8 dat \f(CW\*(C`sort()\*(C'\fR would be
stable, tha two cases \f(CW\*(C`sort {$b cmp $a}\*(C'\fR n' \f(CW\*(C`sort {$b <=> $a}\*(C'\fR could
produce non-stable sorts, n' you can put dat on yo' toast.   This is erected up in perl5.8.6.
.PP
Localisin \f(CW$^D\fR no longer generates a gangbangin' finger-lickin' diagnostic message bout valid \-D
flags.
.SH "New or Chizzled Diagnostics"
.IX Header "New or Chizzled Diagnostics"
For \-t n' \-T,
   Too late fo' \*(L"\-T\*(R" option
has been chizzled ta tha mo' informative
   \*(L"\-T\*(R" is on tha #! line, it must also be used on tha command line
.SH "Changed Internals"
.IX Header "Changed Internals"
From now on all applications embeddin perl will behave as if perl
were compiled wit \-DPERL_USE_SAFE_PUTENV.  See \*(L"Environment access\*(R" in
the \fI\s-1INSTALL\s0\fR file fo' details.
.PP
Most \f(CW\*(C`C\*(C'\fR source filez now have comments all up in tha top explainin they purpose,
which should help mah playas wishin ta git a overview of tha implementation.
.SH "New Tests"
.IX Header "New Tests"
There is hella mo' tests fo' tha \f(CW\*(C`B\*(C'\fR suite of modules.
.SH "Reportin Bugs"
.IX Header "Reportin Bugs"
If you find what tha fuck you be thinkin be a funky-ass bug, you might check tha articles
recently posted ta tha comp.lang.perl.misc newsgroup n' tha perl
bug database at http://bugs.perl.org.  There may also be
information at http://www.perl.org, tha Perl Home Page.
.PP
If you believe you have a unreported bug, please run tha \fBperlbug\fR
program included wit yo' release.  Be shizzle ta trim yo' bug down
to a tiny but sufficient test case.  Yo crazy-ass bug report, along wit the
output of \f(CW\*(C`perl \-V\*(C'\fR, is ghon be busted off ta perlbug@perl.org ta be
analysed by tha Perl portin crew.  Yo ass can browse n' search
the Perl 5 bugs at http://bugs.perl.org/
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da \fIChanges\fR file fo' exhaustizzle details on what tha fuck chizzled.
.PP
Da \fI\s-1INSTALL\s0\fR file fo' how tha fuck ta build Perl.
.PP
Da \fI\s-1README\s0\fR file fo' general stuff.
.PP
Da \fIArtistic\fR n' \fICopying\fR filez fo' copyright shiznit.
