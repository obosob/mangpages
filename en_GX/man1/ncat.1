'\" t
.\"     Title: Ncat
.\"    Author: [see tha "Authors" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 04/10/2014
.\"    Manual: Ncat Reference Guide
.\"    Source: Ncat
.\"  Language: Gangsta
.\"
.TH "NCAT" "1" "04/10/2014" "Ncat" "Ncat Reference Guide"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ncat \- Concatenate n' redirect sockets
.SH "SYNOPSIS"
.HP \w'\fBncat\fR\ 'u
\fBncat\fR [\fIOPTIONS\fR...] [\fIhostname\fR] [\fIport\fR]
.SH "DESCRIPTION"
.PP
Ncat be a gangbangin' feature\-packed networkin utilitizzle which readz n' writes data across networks from tha command line\&. Ncat was freestyled fo' tha Nmap Project n' is tha culmination of tha currently splintered crew of Netcat incarnations\&. Well shiiiit, it is designed ta be a reliable back\-end tool ta instantly provide network connectivitizzle ta other applications n' users\&. Ncat aint gonna only work wit IPv4 n' IPv6 but serves up tha user wit a virtually limitless number of potential uses\&.
.PP
Among Ncat\*(Aqs vast number of features there is tha mobilitizzle ta chain Ncats together; redirection of TCP, UDP, n' SCTP ports ta other cribs; SSL support; n' proxy connections via SOCKS4 or HTTP proxies (with optionizzle proxy authentication as well)\&. Right back up in yo muthafuckin ass. Some general principlez apply ta most applications n' thus hit you wit tha capabilitizzle of instantly addin networkin support ta software dat would normally never support it\&.
.SH "OPTIONS SUMMARY"
.PP
.if n \{\
.RS 4
.\}
.nf
Ncat 6\&.45 ( http://nmap\&.org/ncat )
Usage: ncat [options] [hostname] [port]

Options takin a time assume seconds\& fo' realz. Append \*(Aqms\*(Aq fo' milliseconds,
\*(Aqs\*(Aq fo' seconds, \*(Aqm\*(Aq fo' minutes, or \*(Aqh\*(Aq fo' minutes (e\&.g\&. 500ms)\&.
  \-4                         Use IPv4 only
  \-6                         Use IPv6 only
  \-U, \-\-unixsock             Use Unix domain sockets only
  \-C, \-\-crlf                 Use CRLF fo' EOL sequence
  \-c, \-\-sh\-exec <command>    Executes tha given command via /bin/sh
  \-e, \-\-exec <command>       Executes tha given command
      \-\-lua\-exec <filename>  Executes tha given Lua script
  \-g hop1[,hop2,\&.\&.\&.]         Loose source routin hop points (8 max)
  \-G <n>                     Loose source routin hop pointa (4, 8, 12, \&.\&.\&.)
  \-m, \-\-max\-conns <n>        Maximum <n> simultaneous connections
  \-h, \-\-help                 Display dis help screen
  \-d, \-\-delay <time>         Wait between read/writes
  \-o, \-\-output <filename>    Dump session data ta a gangbangin' file
  \-x, \-\-hex\-dump <filename>  Dump session data as hex ta a gangbangin' file
  \-i, \-\-idle\-timeout <time>  Idle read/write timeout
  \-p, \-\-source\-port port     Specify source port ta use
  \-s, \-\-source addr          Specify source address ta use (doesn\*(Aqt affect \-l)
  \-l, \-\-listen               Bind n' listen fo' incomin connections
  \-k, \-\-keep\-open            Accept multiple connections up in listen mode
  \-n, \-\-nodns                Do not resolve hostnames via DNS
  \-t, \-\-telnet               Answer Telnet negotiations
  \-u, \-\-udp                  Use UDP instead of default TCP
      \-\-sctp                 Use SCTP instead of default TCP
  \-v, \-\-verbose              Set verbositizzle level (can be used nuff muthafuckin times)
  \-w, \-\-wait <time>          Connect timeout
      \-\-append\-output        Append rather than clobber specified output files
      \-\-send\-only            Only bust data, ignorin received; quit on EOF
      \-\-recv\-only            Only receive data, never bust anything
      \-\-allow                Allow only given hosts ta connect ta Ncat
      \-\-allowfile            A file of hosts allowed ta connect ta Ncat
      \-\-deny                 Deny given hosts from connectin ta Ncat
      \-\-denyfile             A file of hosts denied from connectin ta Ncat
      \-\-broker               Enable Ncat\*(Aqs connection brokerin mode
      \-\-chat                 Start a simple Ncat chat server
      \-\-proxy <addr[:port]>  Specify address of host ta proxy through
      \-\-proxy\-type <type>    Specify proxy type ("http" or "socks4" or "socks5")
      \-\-proxy\-auth <auth>    Authenticate wit HTTP or SOCKS proxy server
      \-\-ssl                  Connect or listen wit SSL
      \-\-ssl\-cert             Specify SSL certificate file (PEM) fo' listening
      \-\-ssl\-key              Specify SSL private key (PEM) fo' listening
      \-\-ssl\-verify           Verify trust n' domain name of certificates
      \-\-ssl\-trustfile        PEM file containin trusted SSL certificates
      \-\-version              Display Ncat\*(Aqs version shiznit n' exit

See tha ncat(1) manpage fo' full options, descriptions n' usage examples
.fi
.if n \{\
.RE
.\}
.sp
.SH "CONNECT MODE AND LISTEN MODE"
.\" connect mode (Ncat)
.\" client mode (Ncat)
.\" listen mode (Ncat)
.\" server mode (Ncat)
.PP
Ncat operates up in one of two primary modes: connect mode n' listen mode\&. Other modes, like fuckin tha HTTP proxy server, act as special casez of these two\&. In connect mode, Ncat works as a cold-ass lil client\&. In listen mode it aint nuthin but a server\&.
.PP
In connect mode, the
\fB\fIhostname\fR\fR
and
\fB\fIport\fR\fR
arguments tell what tha fuck ta connect to\&.
\fB\fIhostname\fR\fR
is required, n' may be a hostname or IP address\&. If
\fB\fIport\fR\fR
is supplied, it must be a thugged-out decimal port number\&. If omitted, it defaults ta 31337\&..\" default port of Ncat.\" 31337
.PP
In listen mode,
\fB\fIhostname\fR\fR
and
\fB\fIport\fR\fR
control tha address tha server will bind to\&. Both arguments is optionizzle up in listen mode\&. If
\fB\fIhostname\fR\fR
is omitted, it defaults ta listenin on all available addresses over IPv4 n' IPv6\&. If
\fB\fIport\fR\fR
is omitted, it defaults ta 31337\&.
.SH "PROTOCOL OPTIONS"
.PP
\fB\-4\fR (IPv4 only) .\" -4 (Ncat option)
.RS 4
Force tha use of IPv4 only\&.
.RE
.PP
\fB\-6\fR (IPv6 only) .\" -6 (Ncat option)
.RS 4
Force tha use of IPv6 only\&.
.RE
.PP
\fB\-U\fR, \fB\-\-unixsock\fR (Use Unix domain sockets) .\" --unixsock (Ncat option) .\" -U (Ncat option)
.RS 4
Use Unix domain sockets rather than network sockets\&. This option may be used on its own fo' stream sockets, or combined with
\fB\-\-udp\fR
for datagram sockets\& fo' realz. A description of
\fB\-U\fR
mode is in
the section called \(lqUNIX DOMAIN SOCKETS\(rq\&.
.RE
.PP
\fB\-u\fR, \fB\-\-udp\fR (Use UDP) .\" -u (Ncat option) .\" --udp (Ncat option)
.RS 4
Use UDP fo' tha connection (the default is TCP)\&.
.RE
.PP
\fB\-\-sctp\fR (Use SCTP) .\" --sctp (Ncat option)
.RS 4
Use SCTP fo' tha connection (the default is TCP)\&. Right back up in yo muthafuckin ass. SCTP support is implemented up in TCP\-compatible mode\&.
.RE
.SH "CONNECT MODE OPTIONS"
.PP
\fB\-g \fR\fB\fIhop1\fR\fR\fB[,\fIhop2\fR,\&.\&.\&.]\fR (Loose source routing) .\" -g (Ncat option)
.RS 4
Sets hops fo' IPv4 loose source routing\&. Yo ass can use
\fB\-g\fR
once wit a cold-ass lil comma\-separated list of hops, use
\fB\-g\fR
multiple times wit single hops ta build tha list, or combine tha two\& yo. Hops can be given as IP addresses or hostnames\&.
.RE
.PP
\fB\-G \fR\fB\fIptr\fR\fR (Set source routin pointer) .\" -G (Ncat option)
.RS 4
Sets tha IPv4 source route
\(lqpointer\(rq
for use with
\fB\-g\fR\&. Da argument must be a multiple of 4 n' no mo' than 28\&. Not all operatin systems support settin dis pointa ta anythang other than four\&.
.RE
.PP
\fB\-p \fR\fB\fIport\fR\fR, \fB\-\-source\-port \fR\fB\fIport\fR\fR (Specify source port) .\" --source-port (Ncat option) .\" -p (Ncat option)
.RS 4
Set tha port number fo' Ncat ta bind to\&.
.RE
.PP
\fB\-s \fR\fB\fIhost\fR\fR, \fB\-\-source \fR\fB\fIhost\fR\fR (Specify source address) .\" --source (Ncat option) .\" -s (Ncat option)
.RS 4
Set tha address fo' Ncat ta bind to\&.
.RE
.SH "LISTEN MODE OPTIONS"
.PP
See
the section called \(lqACCESS CONTROL OPTIONS\(rq
for shiznit on limitin tha hosts dat may connect ta tha listenin Ncat process\&.
.PP
\fB\-l\fR, \fB\-\-listen\fR (Listen fo' connections) .\" --listen (Ncat option) .\" -l (Ncat option)
.RS 4
Listen fo' connections rather than connectin ta a remote machine
.RE
.PP
\fB\-m \fR\fB\fInumconns\fR\fR, \fB\-\-max\-conns \fR\fB\fInumconns\fR\fR (Specify maximum number of connections) .\" --max-conns (Ncat option) .\" -m (Ncat option)
.RS 4
Da maximum number of simultaneous connections accepted by a Ncat instance\&. 100 is tha default (60 on Windows)\&.
.RE
.PP
\fB\-k\fR, \fB\-\-keep\-open\fR (Accept multiple connections) .\" --keep-open (Ncat option) .\" -k (Ncat option)
.RS 4
Normally a listenin server accepts only one connection n' then quits when tha connection is closed\&. This option make it accept multiple simultaneous connections n' wait fo' mo' connections afta they have all been closed\&. Well shiiiit, it must be combined with
\fB\-\-listen\fR\&. In dis mode there is no way fo' Ncat ta know when its network input is finished, so it will keep hustlin until interrupted\&. This also means dat it aint NEVER gonna close its output stream, so any program readin from Ncat n' lookin fo' end\-of\-file will also hang\&.
.RE
.PP
\fB\-\-broker\fR (Connection brokering) .\" --broker (Ncat option)
.RS 4
Allow multiple partizzles ta connect ta a cold-ass lil centralised Ncat server n' rap wit each other\&. Ncat can broker communication between systems dat is behind a NAT or otherwise unable ta directly connect\&. This option is used up in conjunction with
\fB\-\-listen\fR, which causes the
\fB\-\-listen\fR
port ta have broker mode enabled\&.
.RE
.PP
\fB\-\-chat\fR (Ad\-hoc \(lqchat server\(rq) .\" --chat (Ncat option)
.RS 4
The
\fB\-\-chat\fR
option enablez chat mode, intended fo' tha exchange of text between nuff muthafuckin users\&. In chat mode, connection brokerin is turned on\&. Ncat prefixes each message received wit a ID before relayin it ta tha other connections\&. Da ID is unique fo' each connected client\&. This helps distinguish whoz ass busted what\& fo' realz. Additionally, non\-printin charactas like fuckin control charactas is escaped ta keep dem from bustin damage ta a terminal\&.
.RE
.SH "SSL OPTIONS"
.PP
\fB\-\-ssl\fR (Use SSL) .\" --ssl (Ncat option)
.RS 4
In connect mode, dis option transparently negotiates a SSL session wit a SSL server ta securely encrypt tha connection\&. This is particularly handy fo' rappin' ta SSL enabled HTTP servers, etc\&.
.sp
In server mode, dis option listens fo' incomin SSL connections, rather than plain untunneled traffic\&.
.RE
.PP
\fB\-\-ssl\-verify\fR (Verify server certificates) .\" --ssl-verify (Ncat option)
.RS 4
In client mode,
\fB\-\-ssl\-verify\fR
is like
\fB\-\-ssl\fR
except dat it also requires verification of tha server certificate\&. Ncat comes wit a thugged-out default set of trusted certificates up in tha file
ca\-bundle\&.crt.\" ca-bundle.crt\&. Right back up in yo muthafuckin ass. Some operatin systems provide a thugged-out default list of trusted certificates; these will also be used if available\&. Use
\fB\-\-ssl\-trustfile\fR
to give a cold-ass lil custom list\&. Use
\fB\-v\fR
one or mo' times ta git details bout verification failures\&.
.\" revoked certificates
Ncat do not check fo' revoked certificates.\" certification revocation\&.
.sp
This option has no effect up in server mode\&.
.RE
.PP
\fB\-\-ssl\-cert \fR\fB\fIcertfile\&.pem\fR\fR (Specify SSL certificate) .\" --ssl-cert (Ncat option)
.RS 4
This option gives tha location of a PEM\-encoded certificate filez used ta authenticate tha server (in listen mode) or tha client (in connect mode)\&. Use it up in combination with
\fB\-\-ssl\-key\fR\&.
.RE
.PP
\fB\-\-ssl\-key \fR\fB\fIkeyfile\&.pem\fR\fR (Specify SSL private key) .\" --ssl-key (Ncat option)
.RS 4
This option gives tha location of tha PEM\-encoded private key file dat goes wit tha certificate named with
\fB\-\-ssl\-cert\fR\&.
.RE
.PP
\fB\-\-ssl\-trustfile \fR\fB\fIcert\&.pem\fR\fR (List trusted certificates) .\" --ssl-trustfile (Ncat option)
.RS 4
This option sets a list of certificates dat is trusted fo' purposez of certificate verification\&. Well shiiiit, it has no effect unless combined with
\fB\-\-ssl\-verify\fR\&. Da argument ta dis option is tha name of a PEM.\" PEM (Privacy Enhanced Mail)
file containin trusted certificates\&. Typically, tha file will contain certificatez of certification authorities, though it may also contain server certificates directly\&. When dis option is used, Ncat do not use its default certificates\&.
.RE
.SH "PROXY OPTIONS"
.PP
\fB\-\-proxy \fR\fB\fIhost\fR\fR\fB[:\fR\fB\fIport\fR\fR\fB]\fR (Specify proxy address) .\" --proxy (Ncat option)
.RS 4
Requests proxyin through
\fIhost\fR:\fIport\fR, rockin tha protocol specified by
\fB\-\-proxy\-type\fR\&.
.sp
If no port is specified, tha proxy protocol\*(Aqs well\-known port is used (1080 fo' SOCKS n' 3128 fo' HTTP)\&. But fuck dat shiznit yo, tha word on tha street is dat when specifyin a IPv6 HTTP proxy server rockin tha IP address rather than tha hostname, tha port number MUST be specified as well\&. If tha proxy requires authentication, use
\fB\-\-proxy\-auth\fR\&.
.RE
.PP
\fB\-\-proxy\-type \fR\fB\fIproto\fR\fR (Specify proxy protocol) .\" --proxy-type (Ncat option)
.RS 4
In connect mode, dis option requests tha protocol
\fIproto\fR
to connect all up in tha proxy host specified by
\fB\-\-proxy\fR\&. In listen mode, dis option has Ncat act as a proxy server rockin tha specified protocol\&.
.sp
Da currently available protocols up in connect mode are
http
(CONNECT) and
socks4
(SOCKSv4)\&. Da only server currently supported is
http\&. If dis option aint used, tha default protocol is
http\&.
.RE
.PP
\fB\-\-proxy\-auth \fR\fB\fIuser\fR\fR\fB[:\fIpass\fR]\fR (Specify proxy credentials) .\" --proxy-auth (Ncat option)
.RS 4
In connect mode, gives tha credentials dat is ghon be used ta connect ta tha proxy server\&. In listen mode, gives tha credentials dat is ghon be required of connectin clients\&. For use with
\fB\-\-proxy\-type http\fR, tha form should be user:pass\&. For
\fB\-\-proxy\-type socks4\fR, it should be a username only\&.
.RE
.SH "COMMAND EXECUTION OPTIONS"
.PP
\fB\-e \fR\fB\fIcommand\fR\fR, \fB\-\-exec \fR\fB\fIcommand\fR\fR (Execute command) .\" --exec (Ncat option) .\" -e (Ncat option)
.RS 4
Execute tha specified command afta a cold-ass lil connection has been established\&. Da command must be specified as a gangbangin' full pathname\& fo' realz. All input from tha remote client is ghon be busted ta tha application n' responses busted back ta tha remote client over tha socket, thus makin yo' command\-line application interactizzle over a socket\&. Combined with
\fB\-\-keep\-open\fR, Ncat will handle multiple simultaneous connections ta yo' specified port/application like inetd\&. Ncat will only accept a maximum, definable, number of simultaneous connections controlled by the
\fB\-m\fR
option\&. By default dis is set ta 100 (60 on Windows)\&.
.RE
.PP
\fB\-c \fR\fB\fIcommand\fR\fR, \fB\-\-sh\-exec \fR\fB\fIcommand\fR\fR (Execute command via sh) .\" --sh-exec (Ncat option) .\" -c (Ncat option)
.RS 4
Same as
\fB\-e\fR, except it tries ta execute tha command via
/bin/sh\&. This means you don\*(Aqt gotta specify tha full path fo' tha command, n' shell facilitizzles like environment variablez is available\&.
.RE
.PP
\fB\-\-lua\-exec \fR\fB\fIfile\fR\fR (Execute a \&.lua script) .\" --lua-exec (Ncat option)
.RS 4
Runs tha specified file as a Lua script afta a cold-ass lil connection has been established, rockin a funky-ass built\-in interpreter\&. Both tha script\*(Aqs standard input n' tha standard output is repimped up ta tha connection data streams\&.
.RE
.PP
All exec options add tha followin variablez ta tha child\*(Aqs environment:
.PP
\fBNCAT_REMOTE_ADDR\fR, \fBNCAT_REMOTE_PORT\fR
.RS 4
.\" NCAT_REMOTE_ADDR> environment variable
.\" NCAT_REMOTE_PORT> environment variable
Da IP address n' port number of tha remote host\&. In connect mode, it\*(Aqs tha target\*(Aqs address; up in listen mode, it\*(Aqs tha client\*(Aqs address\&.
.RE
.PP
\fBNCAT_LOCAL_ADDR\fR, \fBNCAT_LOCAL_PORT\fR
.RS 4
.\" NCAT_LOCAL_ADDR> environment variable
.\" NCAT_LOCAL_PORT> environment variable
Da IP address n' port number of tha local end of tha connection\&.
.RE
.PP
\fBNCAT_PROTO\fR
.RS 4
.\" NCAT_PROTO> environment variable
Da protocol up in use: one of
TCP,
UDP, and
SCTP\&.
.RE
.SH "ACCESS CONTROL OPTIONS"
.PP
\fB\-\-allow \fR\fB\fIhost\fR\fR\fB[,\fIhost\fR,\&.\&.\&.]\fR (Allow connections) .\" --allow (Ncat option)
.RS 4
Da list of hosts specified is ghon be tha only hosts allowed ta connect ta tha Ncat process\& fo' realz. All other connection attempts is ghon be disconnected\&. In case of a cold-ass lil conflict between
\fB\-\-allow\fR
and
\fB\-\-deny\fR,
\fB\-\-allow\fR
takes precedence\& yo. Host justifications follow tha same syntax used by Nmap\&.
.RE
.PP
\fB\-\-allowfile \fR\fB\fIfile\fR\fR (Allow connections from file) .\" --allowfile (Ncat option)
.RS 4
This has tha same ol' dirty functionalitizzle as
\fB\-\-allow\fR, except dat tha allowed hosts is provided up in a new\-line delimited allow file, rather than directly on tha command line\&.
.RE
.PP
\fB\-\-deny \fR\fB\fIhost\fR\fR\fB[,\fIhost\fR,\&.\&.\&.]\fR (Deny connections) .\" --deny (Ncat option)
.RS 4
Issue Ncat wit a list of hosts dat aint gonna be allowed ta connect ta tha listenin Ncat process\&. Right back up in yo muthafuckin ass. Specified hosts gonna git they session silently terminated if they try ta connect\&. In case of a cold-ass lil conflict between
\fB\-\-allow\fR
and
\fB\-\-deny\fR,
\fB\-\-allow\fR
takes precedence\& yo. Host justifications follow tha same syntax used by Nmap\&.
.RE
.PP
\fB\-\-denyfile \fR\fB\fIfile\fR\fR (Deny connections from file) .\" --denyfile (Ncat option)
.RS 4
This is tha same ol' dirty functionalitizzle as
\fB\-\-deny\fR, except dat excluded hosts is provided up in a new\-line delimited deny file, rather than directly on tha command line\&.
.RE
.SH "TIMING OPTIONS"
.PP
These options accept a
time
parameter\&. This is specified up in secondz by default, though you can append
ms,
s,
m, or
h
to tha value ta specify milliseconds, seconds, minutes, or hours\&.
.PP
\fB\-d \fR\fB\fItime\fR\fR, \fB\-\-delay \fR\fB\fItime\fR\fR (Specify line delay) .\" --delay (Ncat option) .\" -d (Ncat option)
.RS 4
Set tha delay interval fo' lines sent\&. This effectively limits tha number of lines dat Ncat will bust up in tha specified period\&. This may be useful fo' low\-bandwidth cribs, or have other uses like fuckin copin wit buggin
\fBiptablez \-\-limit\fR
options\&.
.RE
.PP
\fB\-i \fR\fB\fItime\fR\fR, \fB\-\-idle\-timeout \fR\fB\fItime\fR\fR (Specify idle timeout) .\" --idle-timeout (Ncat option) .\" -i (Ncat option)
.RS 4
Set a gangbangin' fixed timeout fo' idle connections\&. If tha idle timeout is reached, tha connection is terminated\&.
.RE
.PP
\fB\-w \fR\fB\fItime\fR\fR, \fB\-\-wait \fR\fB\fItime\fR\fR (Specify connect timeout) .\" --wait (Ncat option) .\" -w (Ncat option)
.RS 4
Set a gangbangin' fixed timeout fo' connection attempts\&.
.RE
.SH "OUTPUT OPTIONS"
.PP
\fB\-o \fR\fB\fIfile\fR\fR, \fB\-\-output \fR\fB\fIfile\fR\fR (Save session data) .\" --output (Ncat option) .\" -o (Ncat option)
.RS 4
Dump session data ta a gangbangin' file
.RE
.PP
\fB\-x \fR\fB\fIfile\fR\fR, \fB\-\-hex\-dump \fR\fB\fIfile\fR\fR (Save session data up in hex) .\" --hex-dump (Ncat option) .\" -x (Ncat option)
.RS 4
Dump session data up in hex ta a gangbangin' file\&.
.RE
.PP
\fB\-\-append\-output\fR (Append output) .\" --append-output (Ncat option)
.RS 4
Issue Ncat with
\fB\-\-append\-ouput\fR
along with
\fB\-o\fR
and/or
\fB\-x\fR
and it will append tha resulted output rather than truncatin tha specified output files\&.
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR (Be verbose) .\" --verbose (Ncat option) .\" -v (Ncat option)
.RS 4
Issue Ncat with
\fB\-v\fR
and it is ghon be verbose n' display all kindz of useful connection based shiznit\&. Use mo' than once (\fB\-vv\fR,
\fB\-vvv\fR\&.\&.\&.) fo' pimped outa verbosity\&.
.RE
.SH "MISC OPTIONS"
.PP
\fB\-C\fR, \fB\-\-crlf\fR (Use CRLF as EOL) .\" --crlf (Ncat option) .\" -C (Ncat option)
.RS 4
This option  drops some lyrics ta Ncat ta convert LF.\" LF line ending
line endings ta CRLF.\" CRLF line ending
when takin input from standard input\&..\" standard input
This is useful fo' rappin' ta some stringent servers directly from a terminal up in one of tha nuff common plain\-text protocols dat use CRLF fo' end\-of\-line\&.
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR (Help screen) .\" --help (Ncat option) .\" -h (Ncat option)
.RS 4
Displays a gangbangin' finger-lickin' dirty-ass short help screen wit common options n' parameters, n' then exits\&.
.RE
.PP
\fB\-\-recv\-only\fR (Only receive data) .\" --recv-only (Ncat option)
.RS 4
If dis option is passed, Ncat will only receive data n' aint gonna try ta bust anything\&.
.RE
.PP
\fB\-\-send\-only\fR (Only bust data) .\" --send-only (Ncat option)
.RS 4
If dis option is passed, then Ncat will only bust data n' will ignore anythang received\&. This option also causes Ncat ta close tha network connection n' terminizzle afta EOF is received on standard input\&.
.RE
.PP
\fB\-t\fR, \fB\-\-telnet\fR (Answer Telnet negotiations) .\" -t (Ncat option)
.RS 4
Handle DO/DONT WILL/WONT Telnet negotiations\&. This make it possible ta script Telnet sessions wit Ncat\&.
.RE
.PP
\fB\-\-version\fR (Display version) .\" --version (Ncat option)
.RS 4
Displays tha Ncat version number n' exits\&.
.RE
.SH "UNIX DOMAIN SOCKETS"
.PP
The
\fB\-U\fR
option (same as
\fB\-\-unixsock\fR) causes Ncat ta use Unix domain sockets rather than network sockets\&. Unix domain sockets exist as a entry up in tha filesystem\&. Yo ass must give tha name of a socket ta connect ta or ta listen on\&. For example, ta cook up a cold-ass lil connection,
.PP
\fBncat \-U ~/unixsock\fR
.PP
To listen on a socket:
.PP
\fBncat \-l \-U ~/unixsock\fR
.PP
Listen mode will create tha socket if it don\*(Aqt exist\&. Da socket will continue ta exist afta tha program ends\&.
.PP
Both stream n' datagram domain sockets is supported\&. Use
\fB\-U\fR
on its own fo' stream sockets, or combine it with
\fB\-\-udp\fR
for datagram sockets\&. Datagram sockets require a source socket ta connect from\&. By default, a source socket wit a random filename is ghon be pimped as needed, n' deleted when tha program ends\&. Use the
\fB\-\-source\fR
with a path ta bust a source socket wit a specific name\&.
.SH "EXAMPLES"
.PP
Connect ta example\&.org on TCP port 8080\&.
.RS 4
\fBncat example\&.org 8080\fR
.RE
.PP
Listen fo' connections on TCP port 8080\&.
.RS 4
\fBncat \-l 8080\fR
.RE
.PP
Redirect TCP port 8080 on tha local machine ta host on port 80\&.
.RS 4
\fBncat \-\-sh\-exec "ncat example\&.org 80" \-l 8080 \-\-keep\-open\fR
.RE
.PP
Bind ta TCP port 8081 n' attach /bin/bash fo' tha ghetto ta access freely\&.
.RS 4
\fBncat \-\-exec "/bin/bash" \-l 8081 \-\-keep\-open\fR
.RE
.PP
Bind a gangbangin' finger-lickin' dirty-ass shell ta TCP port 8081, limit access ta hosts on a local network, n' limit tha maximum number of simultaneous connections ta 3\&.
.RS 4
\fBncat \-\-exec "/bin/bash" \-\-max\-conns 3 \-\-allow 192\&.168\&.0\&.0/24 \-l 8081 \-\-keep\-open\fR
.RE
.PP
Connect ta smtphost:25 all up in a SOCKS4 server on port 1080\&.
.RS 4
\fBncat \-\-proxy socks4host \-\-proxy\-type socks4 \-\-proxy\-auth user smtphost 25\fR
.RE
.PP
Smoke a HTTP proxy server on localhost port 8888\&.
.RS 4
\fBncat \-l \-\-proxy\-type http localhost 8888\fR
.RE
.PP
Send a gangbangin' file over TCP port 9899 from host2 (client) ta host1 (server)\&.
.RS 4
HOST1$
\fBncat \-l 9899 > outputfile\fR
.sp
HOST2$
\fBncat HOST1 9899 < inputfile\fR
.RE
.PP
Transfer up in tha other direction, turnin Ncat tha fuck into a \(lqone file\(rq server\&.
.RS 4
HOST1$
\fBncat \-l 9899 < inputfile\fR
.sp
HOST2$
\fBncat HOST1 9899 > outputfile\fR
.RE
.SH "EXIT CODE"
.PP
Da exit code reflects whether a cold-ass lil connection was made n' completed successfully\&. 0 means there was no error\&. 1 means there was a network error of some kind, fo' example
\(lqConnection refused\(rq
or
\(lqConnection reset\(rq\&. 2 is reserved fo' all other errors, like a invalid option or a nonexistent file\&.
.SH "BUGS"
.PP
Like its authors, Ncat isn\*(Aqt perfect\&. But you can help make it betta by bustin  bug reports or even freestylin patches\&. If Ncat don\*(Aqt behave tha way you expect, first upgrade ta tha sickest fuckin version available from
\m[blue]\fB\%http://nmap.org\fR\m[]\&. If tha problem persists, do some research ta determine whether it has already been discovered n' addressed\&. Try Googlin tha error message or browsin the
nmap\-dev
archives at
\m[blue]\fB\%http://seclists.org/\fR\m[]\&.
.\" nmap-dev mailin list
Read dis full manual page as well\&. If not a god damn thang comez of this, mail a funky-ass bug report to
<dev@nmap\&.org>\&. Please include every last muthafuckin thang you have hustled bout tha problem, as well as what tha fuck version of Ncat yo ass is hustlin n' what tha fuck operatin system version it is hustlin on\&. Problem reports n' Ncat usage thangs busted ta dev@nmap\&.org is far mo' likely ta be answered than dem busted ta Fyodor directly\&.
.PP
Code patches ta fix bugs is even betta than bug reports\&. Basic instructions fo' bustin patch filez wit yo' chizzlez is available at
\m[blue]\fB\%https://svn.nmap.org/nmap/HACKING\fR\m[]\&. Patches may be busted to
nmap\-dev
(recommended) or ta Fyodor directly\&.
.SH "AUTHORS"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Chris Gibstone
<chris@linuxops\&.net>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Kris Katterjohn
<katterjohn@gmail\&.com>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Mixter
<mixter@gmail\&.com>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Fyodor
<fyodor@nmap\&.org>
(\m[blue]\fB\%http://insecure.org\fR\m[])
.RE
.PP
Da original gangsta Netcat was freestyled by *Hobbit*
<hobbit@avian\&.org>\&. While Ncat isn\*(Aqt built on any code from the
\(lqtraditional\(rq
Netcat (or any other implementation), Ncat is most definitely based on Netcat up in spirit n' functionality\&.
.SH "LEGAL NOTICES"
.SS "Ncat Copyright n' Licensing"
.\" copyright
.\" GNU General Public License
.PP
Ncat is (C) 2005\(en2012 Insecure\&.Com LLC\&. Well shiiiit, it is distributed as free n' open source software under tha same license terms as our Nmap software\&. Precise terms n' further details is available
from \m[blue]\fB\%http://nmap.org/man/man-legal.html\fR\m[]\&.
.SS "Creatizzle Commons License fo' dis Ncat Guide"
.PP
This
Ncat Reference Guide
is (C) 2005\(en2012 Insecure\&.Com LLC\&. Well shiiiit, it is hereby placed under version 3\&.0 of the
\m[blue]\fBCreatizzle Commons Attribution License\fR\m[]\&\s-2\u[1]\d\s+2\&. This allows you redistribute n' modify tha work as you desire, as long as you credit tha original gangsta source\& fo' realz. Alternatively, you may chizzle ta treat dis document as fallin under tha same license as Ncap itself (discussed previously)\&.
.SS "Source Code Availabilitizzle n' Communitizzle Contributions"
.PP
Source is provided ta dis software cuz we believe playas gotz a right ta know exactly what tha fuck a program is goin ta do before they run it\&. This also allows you ta audit tha software fo' securitizzle holez (none done been found so far)\&.
.PP
Source code also allows you ta port Nmap (which includes Ncat) ta freshly smoked up platforms, fix bugs, n' add freshly smoked up features\&. Yo ass is highly encouraged ta bust yo' chizzlez to
<dev@nmap\&.org>
for possible incorporation tha fuck into tha main distribution\&. By bustin  these chizzlez ta Fyodor or one of tha Insecure\&.Org pimpment mailin lists, it be assumed dat yo ass is offerin tha Nmap Project (Insecure\&.Com LLC) tha unlimited, non\-exclusive right ta reuse, modify, n' relicense tha code\&. Nmap will always be available open source,.\" open source
but dis is blingin cuz tha inabilitizzle ta relicense code has caused devastatin problems fo' other Jacked Software projects (like fuckin KDE n' NASM)\&. We also occasionally relicense tha code ta third partizzles as discussed up in tha Nmap playa page\&. If you wish ta specify special license conditionz of yo' contributions, just say so when you bust them\&.
.SS "No Warranty.\" warranty (lack of)"
.PP
This program is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. Right back up in yo muthafuckin ass. See tha GNU General Public License v2\&.0 fo' mo' details at
\m[blue]\fB\%http://www.gnu.org/licenses/gpl-2.0.html\fR\m[], or up in the
COPYING
file included wit Nmap\&.
.SS "Inappropriate Usage"
.PP
Ncat should never be installed wit special privileges (e\&.g\&. suid root)\&..\" suid
That would open up a major securitizzle vulnerabilitizzle as other playas on tha system (or attackers) could use it fo' privilege escalation\&.
.SS "Third\-Jam Software"
.PP
This thang includes software pimped by the
\m[blue]\fBApache Software Foundation\fR\m[]\&\s-2\u[2]\d\s+2\& fo' realz. A modified version of the
\m[blue]\fBLibpcap portable packet capture library\fR\m[]\&\s-2\u[3]\d\s+2.\" libpcap
is distributed along wit Ncat\&. Da Windows version of Ncat utilized tha Libpcap\-derived
\m[blue]\fBWinPcap library\fR\m[]\&\s-2\u[4]\d\s+2.\" WinPcap
instead\&. Certain raw networkin functions use the
\m[blue]\fBLibdnet\fR\m[]\&\s-2\u[5]\d\s+2.\" libdnet
networkin library, which was freestyled by Dug Song\&..\" Song, Dug
A modified version is distributed wit Ncat\&. Ncat can optionally link wit the
\m[blue]\fBOpenSSL cryptography toolkit\fR\m[]\&\s-2\u[6]\d\s+2.\" OpenSSL
for SSL version detection support\& fo' realz. All of tha third\-party software busted lyrics bout up in dis paragraph is freely redistributable under BSD\-style software licenses\&.
.SH "NOTES"
.IP " 1." 4
Creatizzle Commons Attribution License
.RS 4
\%http://creativecommons.org/licenses/by/3.0/
.RE
.IP " 2." 4
Apache Software Foundation
.RS 4
\%http://www.apache.org
.RE
.IP " 3." 4
Libpcap portable packet capture library
.RS 4
\%http://www.tcpdump.org
.RE
.IP " 4." 4
WinPcap library
.RS 4
\%http://www.winpcap.org
.RE
.IP " 5." 4
Libdnet
.RS 4
\%http://libdnet.sourceforge.net
.RE
.IP " 6." 4
OpenSSL cryptography toolkit
.RS 4
\%http://www.openssl.org
.RE
