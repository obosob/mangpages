." Copyright (c) 2001, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH orbd 1 "16 Mar 2012"

.LP
.SH "Name"
orbd \- Da Object Request Broker Daemon
.LP
.LP
\f3orbd\fP is used ta enable clients ta transparently locate n' invoke persistent objects on servers up in tha CORBA environment.
.LP
.LP
\f3See also:\fP 
.na
\f2Namin Service\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlNaming.html
.LP
.SH "SYNOPSIS"
.LP
.nf
\f3
.fl
orbd <\fP\f3options\fP\f3>
.fl
\fP
.fi

.LP
.SH "DESCRIPTION"
.LP
.LP
Da Server Manager included wit tha \f3orbd\fP tool is used ta enable clients ta transparently locate n' invoke persistent objects on servers up in tha CORBA environment. Da persistent servers, while publishin tha persistent object references up in tha Namin Service, include tha port number of tha ORBD up in tha object reference instead of tha port number of tha Server n' shit. Da inclusion of a ORBD port number up in tha object reference fo' persistent object references has tha followin advantages:
.LP
.RS 3
.TP 2
o
Da object reference up in tha Namin Service remains independent of tha server game cycle. For example, tha object reference could be published by tha server up in tha Namin Service when it is first installed, n' then, independent of how tha fuck nuff times tha server is started or shutdown, tha ORBD will always return tha erect object reference ta tha invokin client. 
.TP 2
o
Da client need ta lookup tha object reference up in tha Namin Service only once, n' can keep re\-usin dis reference independent of tha chizzlez introduced cuz of server game cycle. 
.RE

.LP
.LP
To access ORBDz Server Manager, tha server must be started rockin servertool(1), which be a cold-ass lil command\-line intercourse fo' application programmers ta register, unregister, startup, n' shutdown a persistent server n' shit. For mo' shiznit on tha Server Manager, peep tha section up in dis document titled \f2Server Manager\fP.
.LP
.LP
When \f2orbd\fP starts up, it also starts a namin service. For mo' shiznit on tha namin service, link ta 
.na
\f2Namin Service\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlNaming.html.
.LP
.SH "OPTIONS"
.LP
.SS 
Required Options
.LP
.RS 3
.TP 3
\-ORBInitialPort nameserverport 
Specifies tha port on which tha name server should be started. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Once started, \f2orbd\fP will listen fo' incomin requests on dis port. Note dat when rockin Solaris software, you must become root ta start a process on a port under 1024. For dis reason, we recommend dat you bust a port number pimped outa than or equal ta 1024. (required) 
.RE

.LP
.LP

.LP
.SS 
OTHER OPTIONS
.LP
.RS 3
.TP 3
\-port port 
Specifies tha activation port where ORBD should be started, n' where ORBD is ghon be acceptin requests fo' persistent objects, n' you can put dat on yo' toast. Da default value fo' dis port is 1049. This port number be added ta tha port field of tha persistent Interoperable Object References (IOR). (optional) 
.RE

.LP
.RS 3
.TP 3
\-defaultdb directory 
Specifies tha base where tha ORBD persistent storage directory \f2orb.db\fP is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If dis option aint specified, tha default value is "./orb.db". (optional) 
.RE

.LP
.RS 3
.TP 3
\-serverPollingTime millisecondz 
Specifies how tha fuck often ORBD checks fo' tha game of persistent servers registered via \f2servertool\fP. Da default value is 1,000 ms. Da value specified fo' \f2milliseconds\fP must be a valid positizzle integer n' shit. (optional) 
.RE

.LP
.RS 3
.TP 3
\-serverStartupDelay millisecondz 
Specifies how tha fuck long ORBD waits before bustin  a location forward exception afta a persistent server dat is registered via \f2servertool\fP is restarted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da default value is 1,000 ms. Da value specified fo' \f2milliseconds\fP must be a valid positizzle integer n' shit. (optional) 
.RE

.LP
.RS 3
.TP 3
\-Joption 
Pass \f2option\fP ta tha Java virtual machine, where \f2option\fP is one of tha options busted lyrics bout on tha reference page fo' java(1). For example, \f3\-J\-Xms48m\fP sets tha startup memory ta 48 megabytes. Well shiiiit, it aint nuthin but a cold-ass lil common convention fo' \f3\-J\fP ta pass options ta tha underlyin virtual machine. 
.TP 3
 
.RE

.LP
.SH "Startin n' Stoppin tha Namin Service"
.LP
.LP
A Namin Service be a CORBA steez dat allows 
.na
\f2CORBA objects\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlGlossary.html#CORBA%20object ta be named by meanz of bindin a name ta a object reference. Da 
.na
\f2name binding\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlGlossary.html#name%20bindin may be stored up in tha namin service, n' a cold-ass lil client may supply tha name ta obtain tha desired object reference.
.LP
.LP
Prior ta hustlin a cold-ass lil client or a server, yo big-ass booty is ghon start ORBD. ORBD includes a persistent Namin Service n' a transient Namin Service, both of which is a implementation of tha COS Namin Service.
.LP
.LP
Da \f4Persistent\fP\f3 Namin Service\fP serves up persistence fo' namin contexts, n' you can put dat on yo' toast. This means dat dis shiznit is persistent across steez shutdowns n' startups, n' is recoverable up in tha event of a steez failure. If ORBD is restarted, tha Persistent Namin Service will restore tha namin context graph, so dat tha bindin of all clients' n' servers' names remains intact (persistent).
.LP
.LP
\ 
.LP
.LP
For backward compatibility, \f2tnameserv\fP, a \f4Transient\fP\f3 Namin Service\fP shipped wit olda versionz of tha JDK, be also included up in dis release of J2SE fo' realz. A transient namin steez retains namin contexts as long as it is hustlin. If there be a steez interruption, tha namin context graph is lost.
.LP
.LP
Da \f2\-ORBInitialPort\fP argument be a required command\-line argument fo' \f2orbd\fP, n' is used ta set tha port number on which tha Namin Service will run. I aint talkin' bout chicken n' gravy biatch. Da followin instructions assume you can use port 1050 fo' tha Java\ IDL Object Request Broker Daemon. I aint talkin' bout chicken n' gravy biatch. When rockin Solaris software, you must become root ta start a process on a port under 1024. For dis reason, we recommend dat you bust a port number pimped outa than or equal ta 1024. Yo ass can substitute a gangbangin' finger-lickin' different port if necessary.
.LP
.LP
To start \f2orbd\fP from a UNIX command shell, enter:
.LP
.nf
\f3
.fl
  orbd \-ORBInitialPort 1050&
.fl
\fP
.fi

.LP
.LP
From a MS\-DOS system prompt (Windows), enter:
.LP
.nf
\f3
.fl
  start orbd \-ORBInitialPort 1050
.fl
\fP
.fi

.LP
.LP
Now dat ORBD is hustlin, you can run yo' server n' client applications. When hustlin tha client n' server applications, they must be made aware of tha port number (and machine name, if applicable) where tha Namin Service is hustlin. One way ta do dis is ta add tha followin code ta yo' application:
.LP
.nf
\f3
.fl
        Propertizzles props = freshly smoked up Properties();
.fl
        props.put("org.omg.CORBA.ORBInitialPort", "1050");
.fl
        props.put("org.omg.CORBA.ORBInitialHost", "MyHost");
.fl
        ORB orb = ORB.init(args, props);
.fl
\fP
.fi

.LP
.LP
In dis example, tha Namin Service is hustlin on port 1050 on host "MyHost" fo' realz. Another way is ta specify tha port number and/or machine name when hustlin tha server or client application from tha command line. For example, you would start yo' "HelloApplication" wit tha followin command line:
.LP
.nf
\f3
.fl
     java HelloApplication \-ORBInitialPort 1050 \-ORBInitialHost MyHost
.fl
\fP
.fi

.LP
.LP
To stop tha namin service, use tha relevant operatin system command, like fuckin \f2pkill orbd\fP on Solaris, or \f2Ctrl+C\fP up in tha DOS window up in which \f2orbd\fP is hustlin. Note dat names registered wit tha namin steez may disappear when tha steez is terminated if tha namin steez is transient. Da Java IDL namin steez will run until it is explicitly stopped.
.LP
.LP
For mo' shiznit on tha Namin Service included wit ORBD, peep 
.na
\f2Namin Service\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlNaming.html.
.LP
.SH "Server Manager"
.LP
.LP
To access ORBDz Server Manager n' run a persistent server, tha server must be started rockin servertool(1), which be a cold-ass lil command\-line intercourse fo' application programmers ta register, unregister, startup, n' shutdown a persistent server n' shit. When a server is started rockin \f2servertool\fP, it must be started on tha same host n' port on which \f2orbd\fP is executing. If tha server is run on a gangbangin' finger-lickin' different port, tha shiznit stored up in tha database fo' local contexts is ghon be invalid n' tha steez aint gonna work properly.
.LP
.SS 
Server Manager: a Example
.LP
.LP
Usin tha 
.na
\f2sample tutorial\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlExample.html fo' our demonstration, you would run tha \f2idlj\fP compila n' \f2javac\fP compila as shown up in tha tutorial. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. To run tha Server Manager, follow these steps fo' hustlin tha application:
.LP
.LP
Start \f2orbd\fP.
.LP
.LP
To start \f2orbd\fP from a UNIX command shell, enter:
.LP
.LP
\ 
.LP
.nf
\f3
.fl
  orbd \-ORBInitialPort 1050 
.fl
\fP
.fi

.LP
.LP
From a MS\-DOS system prompt (Windows), enter:
.LP
.nf
\f3
.fl
  start orbd \-ORBInitialPort 1050
.fl
\fP
.fi

.LP
.LP
Note dat \f21050\fP is tha port on which you want tha name server ta run. I aint talkin' bout chicken n' gravy biatch. \f2\-ORBInitialPort\fP be a required command\-line argument. When rockin Solaris software, you must become root ta start a process on a port under 1024. For dis reason, we recommend dat you bust a port number pimped outa than or equal ta 1024.
.LP
.LP
Start tha \f2servertool\fP:
.LP
.LP
To start tha Wuz crackalackin' server, enter:
.LP
.nf
\f3
.fl
  servertool \-ORBInitialPort 1050
.fl
\fP
.fi

.LP
.LP
Make shizzle tha name server (\f2orbd\fP) port is tha same ol' dirty as up in tha previous step, fo' example, \f2\-ORBInitialPort 1050\fP. Da \f2servertool\fP must be started on tha same port as tha name server.
.LP
.LP
Da \f2servertool\fP command line intercourse appears.
.LP
.LP

.LP
.LP
Start tha Wuz crackalackin' server from tha \f2servertool\fP prompt:
.LP
.nf
\f3
.fl
  servertool  > regista \-server HelloServer \-classpath . \-applicationName
.fl
                HelloServerApName
.fl
\fP
.fi

.LP
.LP
Da \f2servertool\fP registas tha server, assigns it tha name of "HelloServerApName", n' displays its server id, along wit a listin of all registered servers.
.LP
.LP

.LP
.LP
Run tha client application from another terminal window or prompt:
.LP
.LP
\ 
.LP
.nf
\f3
.fl
  java HelloClient \-ORBInitialPort 1050 \-ORBInitialHost localhost
.fl
\fP
.fi

.LP
.LP
For dis example, you can omit \f2\-ORBInitialHost localhost\fP since tha name server is hustlin on tha same host as tha Wuz crackalackin' client. If tha name server is hustlin on a gangbangin' finger-lickin' different host, use \f2\-ORBInitialHost\fP \f2nameserverhost\fP ta specify tha host on which tha IDL name server is hustlin.
.LP
.LP
Specify tha name server (\f2orbd\fP) port as done up in tha previous step, fo' example, \f2\-ORBInitialPort 1050\fP.
.LP
.LP
\ 
.LP
.LP
\ 
.LP
.LP
When you have finished fuckin wit wit tha Server Manager, be shizzle ta shut down or bust a cap up in tha name server (\f2orbd\fP) n' \f2servertool\fP.
.LP
.LP
To shut down \f2orbd\fP from a DOS prompt, select tha window dat is hustlin tha server n' enta \f2Ctrl+C\fP ta shut it down. I aint talkin' bout chicken n' gravy biatch. To shut down \f2orbd\fPfrom a Unix shell, find tha process, n' bust a cap up in dat shit. Da server will continue ta wait fo' invocations until it is explicitly stopped.
.LP
.LP
To shut down tha \f2servertool\fP, type \f2quit\fP n' press tha \f2Enter\fP key on tha keyboard.
.LP
.SH "See Also"
.LP
.RS 3
.TP 2
o
.na
\f2Namin Service\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/idl/jidlNaming.html
.br
.TP 2
o
servertool(1) 
.RE

.LP
.br

.LP
 
