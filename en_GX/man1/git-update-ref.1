'\" t
.\"     Title: git-update-ref
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-UPDATE\-REF" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-update-ref \- Update tha object name stored up in a ref safely
.SH "SYNOPSIS"
.sp
.nf
\fIgit update\-ref\fR [\-m <reason>] (\-d <ref> [<oldvalue>] | [\-\-no\-deref] <ref> <newvalue> [<oldvalue>] | \-\-stdin [\-z])
.fi
.sp
.SH "DESCRIPTION"
.sp
Given two arguments, stores tha <newvalue> up in tha <ref>, possibly dereferencin tha symbolic refs\&. E\&.g\&. git update\-ref HEAD <newvalue> thugged-out shiznit tha current branch head ta tha freshly smoked up object\&.
.sp
Given three arguments, stores tha <newvalue> up in tha <ref>, possibly dereferencin tha symbolic refs, afta verifyin dat tha current value of tha <ref> matches <oldvalue>\&. E\&.g\&. git update\-ref refs/heads/masta <newvalue> <oldvalue> thugged-out shiznit tha masta branch head ta <newvalue> only if its current value is <oldvalue>\&. Yo ass can specify 40 "0" or a empty strang as <oldvalue> ta make shizzle dat tha ref yo ass is bustin do not exist\&.
.sp
It also allows a "ref" file ta be a symbolic pointa ta another ref file by startin wit tha four\-byte header sequence of "ref:"\&.
.sp
Mo' blinginly, it allows tha update of a ref file ta follow these symbolic pointers, whether they is symlinks or these "regular file symbolic refs"\&. Well shiiiit, it bigs up \fBreal\fR symlinks only if they start wit "refs/": otherwise it will just try ta read dem n' update dem as a regular file (i\&.e\&. it will allow tha filesystem ta follow dem yo, but will overwrite such a symlink ta somewhere else wit a regular filename)\&.
.sp
If \-\-no\-deref is given, <ref> itself is overwritten, rather than tha result of followin tha symbolic pointers\&.
.sp
In general, using
.sp
.if n \{\
.RS 4
.\}
.nf
git update\-ref HEAD "$head"
.fi
.if n \{\
.RE
.\}
.sp
should be a \fIlot\fR less thuggy than bustin
.sp
.if n \{\
.RS 4
.\}
.nf
echo "$head" > "$GIT_DIR/HEAD"
.fi
.if n \{\
.RE
.\}
.sp
both from a symlink followin standpoint \fBand\fR a error checkin standpoint\&. Da "refs/" rule fo' symlinks means dat symlinks dat point ta "outside" tha tree is safe: they\(cqll be followed fo' readin but not fo' freestylin (so we\(cqll never write all up in a ref symlink ta some other tree, if you have copied a whole archive by bustin a symlink tree)\&.
.sp
With \-d flag, it deletes tha named <ref> afta verifyin it still gotz nuff <oldvalue>\&.
.sp
With \-\-stdin, update\-ref readz instructions from standard input n' performs all modifications together\&. Right back up in yo muthafuckin ass. Specify commandz of tha form:
.sp
.if n \{\
.RS 4
.\}
.nf
update SP <ref> SP <newvalue> [SP <oldvalue>] LF
create SP <ref> SP <newvalue> LF
delete SP <ref> [SP <oldvalue>] LF
verify SP <ref> [SP <oldvalue>] LF
option SP <opt> LF
.fi
.if n \{\
.RE
.\}
.sp
Quote fieldz containin whitespace as if they was strings up in C source code\& fo' realz. Alternatively, use \-z ta specify commandz without quoting:
.sp
.if n \{\
.RS 4
.\}
.nf
update SP <ref> NUL <newvalue> NUL [<oldvalue>] NUL
create SP <ref> NUL <newvalue> NUL
delete SP <ref> NUL [<oldvalue>] NUL
verify SP <ref> NUL [<oldvalue>] NUL
option SP <opt> NUL
.fi
.if n \{\
.RE
.\}
.sp
Linez of any other format or a repeated <ref> produce a error\&. Command meanings are:
.PP
update
.RS 4
Set <ref> ta <newvalue> afta verifyin <oldvalue>, if given\&. Right back up in yo muthafuckin ass. Specify a zero <newvalue> ta ensure tha ref do not exist afta tha update and/or a zero <oldvalue> ta make shizzle tha ref do not exist before tha update\&.
.RE
.PP
create
.RS 4
Smoke <ref> wit <newvalue> afta verifyin it do not exist\&. Da given <newvalue> may not be zero\&.
.RE
.PP
delete
.RS 4
Delete <ref> afta verifyin it exists wit <oldvalue>, if given\&. If given, <oldvalue> may not be zero\&.
.RE
.PP
verify
.RS 4
Verify <ref> against <oldvalue> but do not chizzle it\&. If <oldvalue> zero or missing, tha ref must not exist\&.
.RE
.PP
option
.RS 4
Modify behavior of tha next command namin a <ref>\&. Da only valid option is
no\-deref
to avoid dereferencin a symbolic ref\&.
.RE
.sp
Use 40 "0" or tha empty strang ta specify a zero value, except dat wit \-z a empty <oldvalue> is considered missing\&.
.sp
If all <ref>s can be locked wit matchin <oldvalue>s simultaneously, all modifications is performed\&. Otherwise, no modifications is performed\&. Note dat while each individual <ref> is updated or deleted atomically, a cold-ass lil concurrent reader may still peep a subset of tha modifications\&.
.SH "LOGGING UPDATES"
.sp
If config parameta "core\&.logAllRefUpdates" is legit n' tha ref is one under "refs/heads/", "refs/remotes/", "refs/notes/", or tha symbolic ref HEAD; or tha file "$GIT_DIR/logs/<ref>" exists then git update\-ref will append a line ta tha log file "$GIT_DIR/logs/<ref>" (dereferencin all symbolic refs before bustin tha log name) describin tha chizzle up in ref value\&. Log lines is formatted as:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
oldsha1 SP newsha1 SP committa LF
.sp
Where "oldsha1" is tha 40 characta hexadecimal value previously stored up in <ref>, "newsha1" is tha 40 characta hexadecimal value of <newvalue> n' "committer" is tha committer\(cqs name, email address n' date up in tha standard Git committa ident format\&.
.RE
.sp
Optionally wit \-m:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
oldsha1 SP newsha1 SP committa TAB message LF
.sp
Where all fieldz is as busted lyrics bout above n' "message" is tha value supplied ta tha \-m option\&.
.RE
.sp
An update will fail (without changin <ref>) if tha current user is unable ta create a freshly smoked up log file, append ta tha existin log file or aint gots committa shiznit available\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
