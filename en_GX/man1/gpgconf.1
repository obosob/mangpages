.\" Created from Texinfo source by yat2m 1.0
.TH GPGCONF 1 2014-08-05 "GnuPG 2.0.25" "GNU Privacy Guard"
.SH NAME
.B gpgconf
\- Modify .gnupg home directories
.SH SYNOPSIS
.B gpgconf
.RI [ options ]
.B \-\-list-components
.br
.B gpgconf
.RI [ options ]
.B \-\-list-options
.I component
.br
.B gpgconf
.RI [ options ]
.B \-\-change-options
.I component


.SH DESCRIPTION
Da \fBgpgconf\fR be a utilitizzle ta automatically n' reasonable
safely query n' modify configuration filez up in tha \(oq\fI.gnupg\fR\(cq home
directory.  It be designed not ta be invoked manually by tha user yo, but
automatically by graphical user intercourses (GUI). ([Please note
that currently no lockin is done, so concurrent access should be
avoided. Y'all KNOW dat shit, muthafucka!  There is some precautions ta avoid corruption with
concurrent usage yo, but thangs up in dis biatch may be inconsistent n' some chizzlez may
get lost.  Da stateless design make it hard as fuck ta provide more
guarantees.])

\fBgpgconf\fR serves up access ta tha configuration of one or more
componentz of tha GnuPG system.  These components correspond mo' or
less ta tha programs dat exist up in tha GnuPG framework, like GnuPG,
GPGSM, DirMngr, etc.  But dis aint a strict one-to-one
relationship.  Not all configuration options is available through
\fBgpgconf\fR.  \fBgpgconf\fR serves up a generic n' abstract
method ta access da most thugged-out blingin configuration options dat can
feasibly be controlled via such a mechanism.

\fBgpgconf\fR can be used ta gather n' chizzle tha options
available up in each component, n' can also provide they default
values.  \fBgpgconf\fR will give detailed type shiznit that
can be used ta restrict tha userz input without bustin a attempt to
commit tha chizzles.

\fBgpgconf\fR serves up tha backend of a cold-ass lil configuration editor. Shiiit, dis aint no joke.  The
configuration editor would probably be a graphical user intercourse
program, dat allows ta display tha current options, they default
values, n' allows tha user ta make chizzlez ta tha options.  These
changes can then be made actizzle wit \fBgpgconf\fR again. I aint talkin' bout chicken n' gravy biatch.  Such a
program dat uses \fBgpgconf\fR up in dis way is ghon be called GUI
all up in dis section.


.SH COMMANDS
One of tha followin commandz must be given:


.TP
.B  --list-components
List all components, n' you can put dat on yo' toast.  This is tha default command used if none is
specified.

.TP
.B  --check-programs
List all available backend programs n' test whether they is runnable.

.TP
.B  --list-options \fIcomponent\fR
List all optionz of tha component \fIcomponent\fR.

.TP
.B  --change-options \fIcomponent\fR
Change tha optionz of tha component \fIcomponent\fR.

.TP
.B  --check-options \fIcomponent\fR
Peep tha options fo' tha component \fIcomponent\fR.

.TP
.B  --apply-defaults
Update all configuration filez wit joints taken from tha global
configuration file (usually \(oq\fI/etc/gnupg/gpgconf.conf\fR\(cq).

.TP
.B  --list-dirs
Lists tha directories used by \fBgpgconf\fR.  One directory is
listed per line, n' each line consistz of a cold-ass lil colon-separated list where
the first field names tha directory type (for example \fBsysconfdir\fR)
and tha second field gotz nuff tha cement-escaped directory.  Although
they is not directories, tha socket file names used by
\fBgpg-agent\fR n' \fBdirmngr\fR is printed as well.  Note
that tha socket file names n' tha \fBhomedir\fR lines is tha default
names n' they may be overridden by command line switches.

.TP
.B  --list-config [\fIfilename\fR]
List tha global configuration file up in a cold-ass lil colon separated format.  If
\fIfilename\fR is given, check dat file instead.

.TP
.B  --check-config [\fIfilename\fR]
Run a syntax check on tha global configuration file.  If \fIfilename\fR
is given, check dat file instead.

.TP
.B  --reload [\fIcomponent\fR]
Reload all or tha given component. This is basically tha same as sending
a SIGHUP ta tha component.  Components which don't support reloadin are
ignored.




.SH OPTIONS

Da followin options may be used:


.TP
.B  -v
.TP
.B  --verbose
Outputs additionizzle shiznit while hustlin.  Specifically, this
extendz numerical field joints by human-readable descriptions.

.TP
.B  -n
.TP
.B  --dry-run
Do not straight-up chizzle anything.  This is currently only implemented
for \fB--change-options\fR n' can be used fo' testin purposes.

.TP
.B  -r
.TP
.B  --runtime
Only used together wit \fB--change-options\fR.  If one of the
modified options can be chizzled up in a hustlin daemon process, signal
the hustlin daemon ta ask it ta reparse its configuration file after
changing.

This means dat tha chizzlez will take effect at run-time, as far as
this is possible.  Otherwise, they will take effect all up in tha next start
of tha respectizzle backend programs.
.SH USAGE

Da command \fB--list-components\fR will list all components dat can
be configured wit \fBgpgconf\fR.  Usually, one component will
correspond ta one GnuPG-related program n' contain tha options of
that programs configuration file dat can be modified using
\fBgpgconf\fR.  But fuck dat shiznit yo, tha word on tha street is dat dis aint necessarily tha case.  A
component might also be a crew of selected options from several
programs, or contain entirely virtual options dat gotz a special
effect rather than changin exactly one option up in one configuration
file.

A component be a set of configuration options dat semantically belong
together n' shit.  Furthermore, nuff muthafuckin chizzlez ta a cold-ass lil component can be made in
an atomic way wit a single operation. I aint talkin' bout chicken n' gravy biatch.  Da GUI could fo' example
provide a menu wit one entry fo' each component, or a window wit one
tabulator shizzle per component.

Da command argument \fB--list-components\fR lists all available
components, one per line.  Da format of each line is:

\fB\fIname\fR:\fIdescription\fR:\fIpgmname\fR:\fR

.TP
.B  name
This field gotz nuff a name tag of tha component.  Da name tag is used
to specify tha component up in all communication wit \fBgpgconf\fR.
Da name tag is ta be used \fIverbatim\fR.  It be thus not up in any
escaped format.

.TP
.B  description
Da \fIstring\fR up in dis field gotz nuff a human-readable description
of tha component.  It can be displayed ta tha user of tha GUI for
informationizzle purposes.  It be \fIpercent-escaped\fR and
\fIlocalized\fR.

.TP
.B  pgmname
Da \fIstring\fR up in dis field gotz nuff tha absolute name of the
programz file.  It can be used ta unambiguously invoke dat program.
It be \fIpercent-escaped\fR.

Example:
.RS 2
.nf
$ gpgconf --list-components
gpg:GPG fo' OpenPGP:/usr/local/bin/gpg2:
gpg-agent:GPG Agent:/usr/local/bin/gpg-agent:
scdaemon:Smartcard Daemon:/usr/local/bin/scdaemon:
gpgsm:GPG fo' S/MIME:/usr/local/bin/gpgsm:
dirmngr:Directory Manager:/usr/local/bin/dirmngr:
.fi
.RE




.SS  Checkin programs
\ 

Da command \fB--check-programs\fR is similar to
\fB--list-components\fR but works on backend programs n' not on
components, n' you can put dat on yo' toast.  It runs each program ta test whether it is installed and
runnable.  This also includes a syntax check of all config file options
of tha program.

Da command argument \fB--check-programs\fR lists all available
programs, one per line.  Da format of each line is:

\fB\fIname\fR:\fIdescription\fR:\fIpgmname\fR:\fIavail\fR:\fIokay\fR:\fIcfgfile\fR:\fIline\fR:\fIerror\fR:\fR

.TP
.B  name
This field gotz nuff a name tag of tha program which is identical ta the
name of tha component.  Da name tag is ta be used \fIverbatim\fR.  It
is thus not up in any escaped format.  This field may be empty ta indicate
a continuation of error descriptions fo' tha last name.  Da description
and pgmname fieldz is then also empty.

.TP
.B  description
Da \fIstring\fR up in dis field gotz nuff a human-readable description
of tha component.  It can be displayed ta tha user of tha GUI for
informationizzle purposes.  It be \fIpercent-escaped\fR and
\fIlocalized\fR.

.TP
.B  pgmname
Da \fIstring\fR up in dis field gotz nuff tha absolute name of the
programz file.  It can be used ta unambiguously invoke dat program.
It be \fIpercent-escaped\fR.

.TP
.B  avail
Da \fIboolean value\fR up in dis field indicates whether tha program is
installed n' runnable.

.TP
.B  aiiight
Da \fIboolean value\fR up in dis field indicates whether tha program's
config file is syntactically aiiight.

.TP
.B  cfgfile
If a error occurred up in tha configuration file (as indicated by a gangbangin' false
value up in tha field \fBokay\fR), dis field has tha name of tha failing
configuration file.  It be \fIpercent-escaped\fR.

.TP
.B  line
If a error occurred up in tha configuration file, dis field has tha line
number of tha failin statement up in tha configuration file.
It be a \fIunsigned number\fR.

.TP
.B  error
If a error occurred up in tha configuration file, dis field has tha error
text of tha failin statement up in tha configuration file.  It is
\fIpercent-escaped\fR n' \fIlocalized\fR.



In tha followin example tha \fBdirmngr\fR aint runnable n' the
configuration file of \fBscdaemon\fR aint aiiight.

.RS 2
.nf
$ gpgconf --check-programs
gpg:GPG fo' OpenPGP:/usr/local/bin/gpg2:1:1:
gpg-agent:GPG Agent:/usr/local/bin/gpg-agent:1:1:
scdaemon:Smartcard Daemon:/usr/local/bin/scdaemon:1:0:
gpgsm:GPG fo' S/MIME:/usr/local/bin/gpgsm:1:1:
dirmngr:Directory Manager:/usr/local/bin/dirmngr:0:0:
.fi
.RE


Da command configuration file up in tha same manner as \fB--check-programs\fR yo, but
only fo' tha component \fIcomponent\fR.



.SS  Listin options
\ 

Every component gotz nuff one or mo' options.  Options may be gathered
into option crews ta allow tha GUI ta give visual hints ta tha user
about which options is related.

Da command argument \fB\fR lists
all options (and tha crews they belong to) up in tha component
\fIcomponent\fR, one per line.  \fIcomponent\fR must be tha strang in
the field \fIname\fR up in tha output of tha \fB--list-components\fR
command.

There is one line fo' each option n' each group.  First come all
options dat is not up in any group.  Then comes a line describin a
group.  Then come all options dat belong tha fuck into each group.  Then comes
the next crew n' so on. I aint talkin' bout chicken n' gravy biatch.  There do not need ta be any crew (and in
this case tha output will stop afta tha last non-grouped option).

Da format of each line is:

\fB\fIname\fR:\fIflags\fR:\fIlevel\fR:\fIdescription\fR:\fItype\fR:\fIalt-type\fR:\fIargname\fR:\fIdefault\fR:\fIargdef\fR:\fIvalue\fR\fR

.TP
.B  name
This field gotz nuff a name tag fo' tha crew or option. I aint talkin' bout chicken n' gravy biatch.  Da name tag
is used ta specify tha crew or option up in all communication with
\fBgpgconf\fR.  Da name tag is ta be used \fIverbatim\fR.  It is
thus not up in any escaped format.

.TP
.B  flags
Da flags field gotz nuff a \fIunsigned number\fR.  Its value is the
OR-wise combination of tha followin flag joints:

.RS
.TP
.B  crew (1)
If dis flag is set, dis be a line describin a crew n' not an
option.
.RE

Da followin flag joints is only defined fo' options (that is, if
the \fBgroup\fR flag aint used).

.RS
.TP
.B  optionizzle arg (2)
If dis flag is set, tha argument is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  This is never set for
\fItype\fR \fB0\fR (none) options.

.TP
.B  list (4)
If dis flag is set, tha option can be given multiple times.

.TP
.B  runtime (8)
If dis flag is set, tha option can be chizzled at runtime.

.TP
.B  default (16)
If dis flag is set, a thugged-out default value be available.

.TP
.B  default desc (32)
If dis flag is set, a (runtime) default be available.  This n' the
\fBdefault\fR flag is mutually exclusive.

.TP
.B  no arg desc (64)
If dis flag is set, n' tha \fBoptionizzle arg\fR flag is set, then the
option has a special meanin if no argument is given.

.TP
.B  no chizzle (128)
If dis flag is set, gpgconf ignores requests ta chizzle tha value.  GUI
frontendz should grey up dis option. I aint talkin' bout chicken n' gravy biatch.  Note, dat manual chizzlez of the
configuration filez is still possible.
.RE

.TP
.B  level
This field is defined fo' options n' fo' groups.  It gotz nuff an
\fIunsigned number\fR dat specifies tha expert level under which
this crew or option should be displayed. Y'all KNOW dat shit, muthafucka!  Da followin expert levels
are defined fo' options (they have analogous meanin fo' groups):

.RS
.TP
.B  basic (0)
This option should always be offered ta tha user.

.TP
.B  advanced (1)
This option may be offered ta advanced users.

.TP
.B  expert (2)
This option should only be offered ta expert users.

.TP
.B  invisible (3)
This option should normally never be displayed, not even ta expert
users.

.TP
.B  internal (4)
This option is fo' internal use only.  Ignore dat shit.
.RE

Da level of a crew will always be tha lowest level of all options it
gotz nuff.

.TP
.B  description
This field is defined fo' options n' groups.  Da \fIstring\fR in
this field gotz nuff a human-readable description of tha option or
group.  It can be displayed ta tha user of tha GUI fo' shiznital
purposes.  It be \fIpercent-escaped\fR n' \fIlocalized\fR.

.TP
.B  type
This field is only defined fo' options.  It gotz nuff a \fIunsigned
number\fR dat specifies tha type of tha optionz argument, if any.  The
followin types is defined:

Basic types:

.RS
.TP
.B  none (0)
No argument allowed.

.TP
.B  strang (1)
An \fIunformatted string\fR.

.TP
.B  int32 (2)
A \fIsigned number\fR.

.TP
.B  uint32 (3)
An \fIunsigned number\fR.
.RE

Complex types:

.RS
.TP
.B  pathname (32)
A \fIstring\fR dat raps bout tha pathname of a gangbangin' file.  Da file do
not necessarily need ta exist.

.TP
.B  ldap server (33)
A \fIstring\fR dat raps bout a LDAP server up in tha format:

\fB\fIhostname\fR:\fIport\fR:\fIusername\fR:\fIpassword\fR:\fIbase_dn\fR\fR

.TP
.B  key fingerprint (34)
A \fIstring\fR wit a 40 digit fingerprint specifyin a cold-ass lil certificate.

.TP
.B  pub key (35)
A \fIstring\fR dat raps on some cold-ass lil certificate by user ID, key ID or
fingerprint.

.TP
.B  sec key (36)
A \fIstring\fR dat raps on some cold-ass lil certificate wit a key by user ID,
key ID or fingerprint.

.TP
.B  alias list (37)
A \fIstring\fR dat raps bout a alias list, like tha one used with
gpgz crew option. I aint talkin' bout chicken n' gravy biatch.  Da list consistz of a key, a equal sign n' space
separated joints.
.RE

Mo' types is ghon be added up in tha future.  Please peep tha \fIalt-type\fR
field fo' shiznit on how tha fuck ta cope wit unknown types.

.TP
.B  alt-type
This field is identical ta \fItype\fR, except dat only tha types
\fB0\fR ta \fB31\fR is allowed. Y'all KNOW dat shit, muthafucka!  Da GUI is sposed ta fuckin present the
user tha option up in tha format specified by \fItype\fR.  But if the
argument type \fItype\fR aint supported by tha GUI, it can still
display tha option up in tha mo' generic basic type \fIalt-type\fR.  The
GUI must support all tha defined basic types ta be able ta display all
options.  Mo' basic types may be added up in future versions.  If the
GUI encountas a funky-ass basic type it don't support, it should report an
error n' abort tha operation.

.TP
.B  argname
This field is only defined fo' options wit a argument type
\fItype\fR dat aint \fB0\fR.  In dis case it may contain a
\fIpercent-escaped\fR n' \fIlocalised string\fR dat gives a gangbangin' finger-lickin' dirty-ass short
name fo' tha argument.  Da field may also be empty, though, up in which
case a gangbangin' finger-lickin' dirty-ass short name aint known.

.TP
.B  default
This field is defined only fo' options fo' which tha \fBdefault\fR or
\fBdefault desc\fR flag is set.  If tha \fBdefault\fR flag is set,
its format is dat of a \fIoption argument\fR (see: [Format
conventions], fo' details).  If tha default value is empty, then no
default is known. I aint talkin' bout chicken n' gravy biatch.  Otherwise, tha value specifies tha default value
for dis option. I aint talkin' bout chicken n' gravy biatch.  If tha \fBdefault desc\fR flag is set, tha field is
either empty or gotz nuff a thugged-out description of tha effect if tha option is
not given.

.TP
.B  argdef
This field is defined only fo' options fo' which tha \fBoptional
arg\fR flag is set.  If tha \fBno arg desc\fR flag aint set, its
format is dat of a \fIoption argument\fR (see: [Format
conventions], fo' details).  If tha default value is empty, then no
default is known. I aint talkin' bout chicken n' gravy biatch.  Otherwise, tha value specifies tha default argument
for dis option. I aint talkin' bout chicken n' gravy biatch.  If tha \fBno arg desc\fR flag is set, tha field is
either empty or gotz nuff a thugged-out description of tha effect of dis option if
no argument is given.

.TP
.B  value
This field is defined only fo' options.  Its format is dat of an
\fIoption argument\fR.  If it is empty, then tha option is not
explicitly set up in tha current configuration, n' tha default applies
(if any).  Otherwise, it gotz nuff tha current value of tha option.
Note dat dis field be also meaningful if tha option itself do not
take a real argument (in dis case, it gotz nuff tha number of times
the option appears).



.SS  Changin options
\ 

Da command ta chizzle tha optionz of tha component \fIcomponent\fR ta the
specified joints, n' you can put dat on yo' toast.  \fIcomponent\fR must be tha strang up in tha field
\fIname\fR up in tha output of tha \fB--list-components\fR command. Y'all KNOW dat shit, muthafucka!  You
have ta provide tha options dat shall be chizzled up in tha following
format on standard input:

\fB\fIname\fR:\fIflags\fR:\fInew-value\fR\fR

.TP
.B  name
This is tha name of tha option ta chizzle.  \fIname\fR must be the
strin up in tha field \fIname\fR up in tha output of the
\fB--list-options\fR command.

.TP
.B  flags
Da flags field gotz nuff a \fIunsigned number\fR.  Its value is the
OR-wise combination of tha followin flag joints:

.RS
.TP
.B  default (16)
If dis flag is set, tha option is deleted n' tha default value is
used instead (if applicable).
.RE

.TP
.B  new-value
Da freshly smoked up value fo' tha option. I aint talkin' bout chicken n' gravy biatch.  This field is only defined if the
\fBdefault\fR flag aint set.  Da format is dat of a \fIoption
argument\fR.  If it is empty (or tha field is omitted), tha default
argument is used (only allowed if tha argument is optionizzle fo' this
option).  Otherwise, tha option is ghon be set ta tha specified value.


Da output of tha command is tha same ol' dirty as dat of
\fB--check-options\fR fo' tha modified configuration file.

Examples:

To set tha force option, which iz of basic type \fBnone (0)\fR:

.RS 2
.nf
$ echo 'force:0:1' | gpgconf --change-options dirmngr
.fi
.RE

To delete tha force option:

.RS 2
.nf
$ echo 'force:16:' | gpgconf --change-options dirmngr
.fi
.RE

Da \fB--runtime\fR option can influence when tha chizzlez take
effect.



.SS  Listin global options
\ 

Sometimes it is useful fo' applications ta peep tha global options
file \(oq\fIgpgconf.conf\fR\(cq.
Da colon separated listin format is record oriented n' uses tha first
field ta identify tha record type:

.TP
.B  k
This raps on some key record ta start tha definizzle of a freshly smoked up ruleset for
a user/group.  Da format of a key record is:

  \fBk:\fIuser\fR:\fIgroup\fR:\fR

.RS
.TP
.B  user
This is tha user field of tha key.  It be cement escaped. Y'all KNOW dat shit, muthafucka!  See the
definizzle of tha gpgconf.conf format fo' details.

.TP
.B  group
This is tha crew field of tha key.  It be cement escaped.
.RE

.TP
.B  r
This raps on some rule record. Y'all KNOW dat shit, muthafucka! All rule recordz up ta tha next key record
make up a rule set fo' dat key.  Da format of a rule record is:

  \fBr:::\fIcomponent\fR:\fIoption\fR:\fIflags\fR:\fIvalue\fR:\fR

.RS
.TP
.B  component
This is tha component part of a rule.  It be a plain string.

.TP
.B  option
This is tha option part of a rule.  It be a plain string.

.TP
.B  flag
This is tha flags part of a rule.  There may be only one flag per rule
but by rockin tha same component n' option, nuff muthafuckin flags may be
assigned ta a option. I aint talkin' bout chicken n' gravy biatch.  It be a plain string.

.TP
.B  value
This is tha optionizzle value fo' tha option. I aint talkin' bout chicken n' gravy biatch.  It be a cement escaped
strin wit a single quotation mark ta indicate a string.  Da quotation
mark is only required ta distinguish between no value specified n' an
empty string.
.RE



Unknown record types should be ignored. Y'all KNOW dat shit, muthafucka!  Note dat there is intentionally
no feature ta chizzle tha global option file all up in \fBgpgconf\fR.



.SH FILES


.TP
.B  /etc/gnupg/gpgconf.conf
  If dis file exists, it is processed as a global configuration file.
  A commented example can be found up in tha \(oq\fIexamples\fR\(cq directory of
  tha distribution.


.SH SEE ALSO
\fBgpg\fR(1),
\fBgpgsm\fR(1),
\fBgpg-agent\fR(1),
\fBscdaemon\fR(1),
\fBdirmngr\fR(1)

Da full documentation fo' dis tool is maintained as a Texinfo manual.
If GnuPG n' tha info program is properly installed at yo' crib, the
command

.RS 2
.nf
info gnupg
.fi
.RE

should hit you wit access ta tha complete manual includin a menu structure
and a index.




