'\" t
.TH "SYSTEMD\-ANALYZE" "1" "" "systemd 208" "systemd-analyze"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-analyze \- Analyze system boot\-up performance
.SH "SYNOPSIS"
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] [time]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] blame
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] critical\-chain [\fIUNIT\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] deal [>\ file\&.svg]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] dot [\fIPATTERN\fR...] [>\ file\&.dot]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] dump
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] set\-log\-level [\fILEVEL\fR]
.SH "DESCRIPTION"
.PP
\fBsystemd\-analyze\fR
may be used ta determine system boot\-up performizzle statistics n' retrieve other state n' tracin shiznit from tha system n' steez manager\&.
.PP
\fBsystemd\-analyze time\fR
prints tha time dropped up in tha kernel before userspace has been reached, tha time dropped up in tha initial RAM disk (initrd) before aiiight system userspace has been reached, n' tha time aiiight system userspace took ta initialize\&. Note dat these measurements simply measure tha time passed up ta tha point where all system skillz done been spawned yo, but not necessarily until they straight-up finished initialization or tha disk is idle\&.
.PP
\fBsystemd\-analyze blame\fR
prints a list of all hustlin units, ordered by tha time they took ta initialize\&. This shiznit may be used ta optimize boot\-up times\&. Note dat tha output might be misleadin as tha initialization of one steez might be slow simply cuz it waits fo' tha initialization of another steez ta complete\&.
.PP
\fBsystemd\-analyze critical\-chain [\fR\fB\fIUNIT\&.\&.\&.\fR\fR\fB]\fR
prints a tree of tha time\-critical chain of units (for each of tha specified
\fIUNIT\fRs or fo' tha default target otherwise)\&. Da time afta tha unit be actizzle or started is printed afta tha "@" character\&. Da time tha unit takes ta start is printed afta tha "+" character\&. Note dat tha output might be misleadin as tha initialization of one steez might depend on socket activation n' cuz of tha parallel execution of units\&.
.PP
\fBsystemd\-analyze plot\fR
prints a SVG graphic detailin which system skillz done been started at what tha fuck time, highlightin tha time they dropped on initialization\&.
.PP
\fBsystemd\-analyze dot\fR
generates textual dependency graph description up in dot format fo' further processin wit tha GraphViz
\fBdot\fR(1)
tool\&. Use a cold-ass lil command line like
\fBsystemd\-analyze dot | dot \-Tsvg > systemd\&.svg\fR
to generate a graphical dependency tree\&. Unless
\fB\-\-order\fR
or
\fB\-\-require\fR
is passed, tha generated graph will show both orderin n' requirement dependencies\&. Optionizzle pattern globbin steez justifications (e\&.g\&.
*\&.target) may be given all up in tha end\& fo' realz. A unit dependency is included up in tha graph if any of these patterns match either tha origin or destination node\&.
.PP
\fBsystemd\-analyze dump\fR
outputs a (usually straight-up long) human\-readable serialization of tha complete server state\&. Its format is subject ta chizzle without notice n' should not be parsed by applications\&.
.PP
\fBsystemd\-analyze set\-log\-level \fR\fB\fILEVEL\fR\fR
changes tha current log level of the
\fBsystemd\fR
daemon to
\fILEVEL\fR
(accepts tha same ol' dirty joints as
\fB\-\-log\-level=\fR
busted lyrics bout in
\fBsystemd\fR(1))\&.
.PP
If no command is passed,
\fBsystemd\-analyze time\fR
is implied\&.
.SH "OPTIONS"
.PP
Da followin options is understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short help text n' exits\&.
.RE
.PP
\fB\-\-user\fR
.RS 4
Shows performizzle data of user sessions instead of tha system manager\&.
.RE
.PP
\fB\-\-order\fR, \fB\-\-require\fR
.RS 4
When used up in conjunction wit the
\fBdot\fR
command (see above), selects which dependencies is shown up in tha dependency graph\&. If
\fB\-\-order\fR
is passed, only dependenciez of type
\fIAfter=\fR
or
\fIBefore=\fR
are shown\&. If
\fB\-\-require\fR
is passed, only dependenciez of type
\fIRequires=\fR,
\fIRequiresOverridable=\fR,
\fIRequisite=\fR,
\fIRequisiteOverridable=\fR,
\fIWants=\fR
and
\fIConflicts=\fR
are shown\&. If neither is passed, dis shows dependenciez of all these types\&.
.RE
.PP
\fB\-\-from\-pattern=\fR, \fB\-\-to\-pattern=\fR
.RS 4
When used up in conjunction wit the
\fBdot\fR
command (see above), dis selects which relationshizzlez is shown up in tha dependency graph\&. They both require
\fBglob\fR(7)
patterns as arguments, which is matched against left\-hand n' right\-hand, respectively, nodez of a relationshizzle\&. Each of these can be used mo' than once, which means a unit name must match one of tha given joints\&.
.RE
.PP
\fB\-\-fuzz=\fR\fItimespan\fR
.RS 4
When used up in conjunction wit the
\fBcritical\-chain\fR
command (see above), also show units, which finished
\fItimespan\fR
earlier, than tha sickest fuckin unit up in tha same level\&. Da unit of
\fItimespan\fR
is secondz unless specified wit a gangbangin' finger-lickin' different unit, e\&.g\&. "50ms"\&.
.RE
.PP
\fB\-\-no\-pager\fR
.RS 4
Do not pipe output tha fuck into a pager\&.
.RE
.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&.
.SH "EXAMPLES"
.PP
This plots all dependenciez of any unit whose name starts with
"avahi\-daemon\&.":
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze dot \*(Aqavahi\-daemon\&.*\*(Aq | dot \-Tsvg > avahi\&.svg
$ eog avahi\&.svg
.fi
.if n \{\
.RE
.\}
.PP
This plots tha dependencies between all known target units:
.sp
.if n \{\
.RS 4
.\}
.nf
systemd\-analyze dot \-\-to\-pattern=\*(Aq*\&.target\*(Aq \-\-from\-pattern=\*(Aq*\&.target\*(Aq | dot \-Tsvg > targets\&.svg
$ eog targets\&.svg
.fi
.if n \{\
.RE
.\}
.SH "ENVIRONMENT"
.PP
\fI$SYSTEMD_PAGER\fR
.RS 4
Pager ta use when
\fB\-\-no\-pager\fR
is not given; overrides
\fI$PAGER\fR\&. Right back up in yo muthafuckin ass. Settin dis ta a empty strang or tha value
"cat"
is equivalent ta passing
\fB\-\-no\-pager\fR\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemctl\fR(1)
