\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Pnmcolormap User Manual" 0 "23 October 2005" "netpbm documentation"

.SH NAME

pnmcolormap - create quantization color map fo' a Netpbm image

.UN synopsis
.SH SYNOPSIS

\fBpnmcolormap\fP

[\fB-center\fP|\fB-meancolor\fP|\fB-meanpixel\fP]

[\fB-spreadbrightness\fP|\fB-spreadluminosity\fP]

[\fB-sort\fP]

[\fB-square\fP] 

\fIncolors\fP|\fBall\fP

[\fIpnmfile\fP]

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBpnmcolormap\fP readz a PNM or PAM image as input, chizzles
\fIncolors\fP flavas ta dopest represent tha image n' writes a PNM
color map definin dem as output.  A PAM image may straight-up contain
tuplez of any kind yo, but \fBpnmcolormap\fPz concept of tha tuple joints
that dopest represent tha ones present up in tha image may not make sense if
the tuple type aint RGB or GRAYSCALE.  Da design of tha program, and
the rest of dis manual, assumes tha tuplez represent colors.
.PP
Yo ass can use dis map as input ta \fBpnmremap\fP on tha same input
image ta quantize tha flavas up in dat image, I.e. produce a similar
image wit fewer colors.  \fBpnmquant\fP do both tha \fBpnmcolormap\fP
and \fBpnmremap\fP steps fo' yo thugged-out ass.
.PP
A PNM colormap be a PNM image of any dimensions dat gotz nuff at
least one pixel of each color up in tha set of flavas it represents, n' you can put dat on yo' toast.  The
ones \fBpnmcolormap\fP generates have exactly one pixel of each color,
except where paddin is necessary wit tha \fB-square\fP option.
.PP
Da quantization method is Heckbertz 'median cut'.
See 
.UR #quant
QUANTIZATION METHOD
.UE
\&.
.PP
Da output image iz of tha same format (PBM, PGM, PPM, PAM) as the
input image.  Note dat a cold-ass lil colormap of a PBM image aint hella
interesting.
.PP
Da colormap generally has tha same ol' dirty maxval as tha input image yo, but
\fBpnmcolormap\fP may reduce it if there be too nuff flavas up in the
input, as part of its quantization algorithm.
.PP
\fBpnmcolormap\fP works on a multi-image input stream.  In that
case, it produces one colormap dat applies ta all of tha flavas in
all of tha input images.  All tha images must have tha same format,
depth, n' maxval (but may have different height n' width).  This is
useful if you need ta quantize a funky-ass bunch of images dat will form a
movie or otherwise be used together -- you generally want dem all to
draw from tha same palette, whereas computin a cold-ass lil colormap separately
from each image would make tha same color up in two images map to
different colors.  Before Netpbm 10.31 (December 2005), \fBpnmcolormap\fP
ignored any image afta tha first.
.PP
If you wanna create a cold-ass lil colormap without basin it on tha flavas in
an input image, \fBpamseq\fP, \fBppmmake\fP, n' \fBpnmcat\fP can
be useful.

.UN parameters
.SH PARAMETERS
.PP
Da single parameter, which is required, is tha number of flavas you want
in tha output colormap.  \fBpnmcolormap\fP may produce a cold-ass lil color map wit slightly fewer flavas than dis shit.  Yo ass may
specify \fBall\fP ta git a cold-ass lil colormap of every last muthafuckin color up in tha input image (no quantization).

.UN options
.SH OPTIONS
.PP
All options can be abbreviated ta they shortest unique prefix.  You
may use two hyphens instead of one ta designate a option. I aint talkin' bout chicken n' gravy biatch.  Yo ass may
use either white space or a equals sign between a option name and
its value.


.TP
\fB-sort\fP
This option causes tha output colormap ta be sorted by tha red
component intensity, then tha green, then tha blue up in ascendin order.
This be a insertion sort, so it aint straight-up fast on big-ass colormaps.
Sortin is useful cuz it allows you ta compare two setz of colors.

.TP
\fB-square\fP
By default, \fBpnmcolormap\fP produces as tha color map a PPM
image wit one row n' wit one column fo' each color up in tha colormap.
This option causes \fBpnmcolormap\fP instead ta produce a PPM image
that is within one row or column of bein square, wit tha last pixel
duplicated as necessary ta create a fuckin shitload of pixels which is such an
almost-slick square.

.TP
\fB-verbose\fP
This option causes \fBpnmcolormap\fP ta display lyrics to
Standard Error bout tha quantization..TP
\fB-center\fP

.TP
\fB-meancolor\fP

.TP
\fB-meanpixel\fP

.TP
\fB-spreadbrightness\fP

.TP
\fB-spreadluminosity\fP
These options control tha quantization algorithm.  See 
.UR #quant
QUANTIZATION METHOD
.UE
\&.




.UN quant
.SH QUANTIZATION METHOD
.PP
A quantization method be a way ta chizzle which colors, bein fewer
in number than up in tha input, you want up in tha output.
\fBpnmcolormap\fP uses Heckbertz 'median cut' quantization
method.
.PP
This method involves separatin all tha flavas into
\&'boxes,' each holdin flavas dat represent bout tha same
number of pixels.  Yo ass start wit one box n' split boxes up in two until
the number of boxes is tha same ol' dirty as tha number of flavas you want in
the output, n' chizzle one color ta represent each box.
.PP
When you split a funky-ass box, you do it so dat all tha flavas up in one
sub-box is 'greater' than all tha flavas up in tha other.
\&'Greater,' fo' a particular box, means it is brighta up in the
color component (red, green, blue) which has tha phattest spread in
that box.  \fBpnmcolormap\fP gives you two ways ta define
\&'largest spread.': 1) phattest spread of brightness; 2)
largest spread of contribution ta tha luminositizzle of tha color.
E.g. red is weighted much mo' than blue.  Select among these wit the
\fB-spreadbrightness\fP n' \fB-spreadluminosity\fP options.  The
default is \fB-spreadbrightness\fP.
.PP
\fBpnmcolormap\fP serves up three wayz of choosin a cold-ass lil color to
represent a funky-ass box: 1) tha centa color - tha color halfway between the
greatest n' least flavas up in tha box, rockin tha above definizzle of
\&'greater'; 2) tha mean of tha flavas (each component
averaged separately by brightness) up in tha box; 3) tha mean weighted by
the number of pixelz of a cold-ass lil color up in tha image.
.PP
Note dat up in all three methods, there may be flavas up in tha output
which do not step tha fuck up in tha input at all.
.PP
Select among these wit tha \fB-center\fP, \fB-meancolor\fP, and
\fB-meanpixel\fP options.  Da default is \fB-center\fP.

.UN references
.SH REFERENCES

\&'Color Image Quantization fo' Frame Buffer Display' by Pizzle Heckbert,
SIGGRAPH '82 Proceedings, page 297.

.UN seealso
.SH SEE ALSO
.BR pnmremap (1)
,
.BR pnmquant (1)
,
.BR ppmquantall (1)
,
.BR pamdepth (1)
,
.BR ppmdither (1)
,
.BR pamseq (1)
,
.BR ppmmake (1)
,
.BR pnmcat (1)
,
.BR ppm (1)


.UN history
.SH HISTORY
.PP
Before Netpbm 10.15 (April 2003), \fBpnmcolormap\fP used a lot
more memory fo' big-ass images cuz it kept tha entire input image in
memory.  Now, it processes it a row at a time yo, but cuz it
sometimes must make multiple passes all up in tha image, it first copies
the input tha fuck into a temporary seekable file if it aint already up in a seekable
file.
.PP
\fBpnmcolormap\fP first rocked up in Netpbm 9.23 (January 2002).
Before that, its function was available only as part of tha function
of \fBpnmquant\fP (which was derived from tha much older
\fBppmquant\fP).  Color quantization straight-up has two main subfunctions, so
Netpbm 9.23 split it up tha fuck into two separate programs:
\fBpnmcolormap\fP n' \fBpnmremap\fP n' then Netpbm 9.24 replaced
\fBpnmquant\fP wit a program dat simply calls \fBpnmcolormap\fP and
\fBpnmremap\fP.

.UN author
.SH AUTHOR

Copyright (C) 1989, 1991 by Jef Poskanzer.
