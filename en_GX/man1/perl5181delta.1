.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5181DELTA 1"
.TH PERL5181DELTA 1 "2014-02-18" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5181delta \- what tha fuck is freshly smoked up fo' perl v5.18.1
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout differences between tha 5.18.0 release n' tha 5.18.1
release.
.PP
If yo ass is upgradin from a earlier release like fuckin 5.16.0, first read
perl5180delta, which raps bout differences between 5.16.0 n' 5.18.0.
.SH "Incompatible Chizzles"
.IX Header "Incompatible Chizzles"
There is no chizzlez intentionally incompatible wit 5.18.0
If any exist, they is bugs, n' we request dat you submit a
report.  See \*(L"Reportin Bugs\*(R" below.
.SH "Modulez n' Pragmata"
.IX Header "Modulez n' Pragmata"
.SS "Updated Modulez n' Pragmata"
.IX Subsection "Updated Modulez n' Pragmata"
.IP "\(bu" 4
B has been upgraded from 1.42 ta 1.42_01, fixin bugs related ta lexical
subroutines.
.IP "\(bu" 4
Digest::SHA has been upgraded from 5.84 ta 5.84_01, fixin a cold-ass lil crashin bug.
[\s-1RT\s0 #118649]
.IP "\(bu" 4
Module::CoreList has been upgraded from 2.89 ta 2.96.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "\s-1AIX\s0" 4
.IX Item "AIX"
A rarely-encounted configuration bug up in tha \s-1AIX\s0 hints file has been erected.
.IP "MidnightBSD" 4
.IX Item "MidnightBSD"
Afta a patch ta tha relevant hints file, perl should now build erectly on
MidnightBSD 0.4\-RELEASE.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Startin up in v5.18.0, a cold-ass lil construct like \f(CW\*(C`/[#](?{})/x\*(C'\fR would have its \f(CW\*(C`#\*(C'\fR
incorrectly interpreted as a cold-ass lil comment.  Da code block would be skipped,
unparsed. Y'all KNOW dat shit, muthafucka!  This has been erected.
.IP "\(bu" 4
A number of memory leaks related ta tha new, experimenstrual regexp bracketed
characta class feature done been plugged.
.IP "\(bu" 4
Da \s-1OP\s0 allocation code now returns erectly aligned memory up in all cases
for \f(CW\*(C`struct pmop\*(C'\fR. Previously it could return memory only aligned ta a
4\-byte boundary, which aint erect fo' a ithreadz build wit 64 bit IVs
on some 32 bit platforms. Notably, dis caused tha build ta fail straight-up
on sparc GNU/Linux. [\s-1RT\s0 #118055]
.IP "\(bu" 4
Da debuggerz \f(CW\*(C`man\*(C'\fR command been fixed. Y'all KNOW dat shit, muthafucka! Dat shiznit was fucked up in tha v5.18.0
release. Da \f(CW\*(C`man\*(C'\fR command be aliased ta tha names \f(CW\*(C`doc\*(C'\fR n' \f(CW\*(C`perldoc\*(C'\fR \-
all now work again.
.IP "\(bu" 4
\&\f(CW@_\fR is now erectly visible up in tha debugger, fixin a regression
introduced up in v5.18.0z debugger n' shit. [\s-1RT\s0 #118169]
.IP "\(bu" 4
Fixed a lil' small-ass number of regexp constructions dat could either fail to
match or crash perl when tha strang bein matched against was
allocated above tha 2GB line on 32\-bit systems. [\s-1RT\s0 #118175]
.IP "\(bu" 4
Perl v5.16 inadvertently introduced a funky-ass bug whereby calls ta XSUBs dat were
not visible at compile time was treated as lvalues n' could be assigned
to, even when tha subroutine was not a lvalue sub.  This has been fixed.
[perl #117947]
.IP "\(bu" 4
Perl v5.18 inadvertently introduced a funky-ass bug whereby dual-vars (i.e.
variablez wit both strang n' numeric joints, like fuckin \f(CW$!\fR ) where the
truthnizz of tha variable was determined by tha numeric value rather than
the strang value. [\s-1RT\s0 #118159]
.IP "\(bu" 4
Perl v5.18 inadvertently introduced a funky-ass bug whereby interpolatin mixed up\-
and down-graded \s-1UTF\-8\s0 strings up in a regex could result up in malformed \s-1UTF\-8\s0
in tha pattern: specifically if a thugged-out downgraded characta up in tha range
\&\f(CW\*(C`\ex80..\exff\*(C'\fR followed a \s-1UTF\-8\s0 string, e.g.
.Sp
.Vb 3
\&    utf8::upgrade(  mah $u = "\ex{e5}");
\&    utf8::downgrade(my $d = "\ex{e5}");
\&    /$u$d/
.Ve
.Sp
[perl #118297].
.IP "\(bu" 4
Lexical constants (\f(CW\*(C`my sub a() { 42 }\*(C'\fR) no longer crash when inlined.
.IP "\(bu" 4
Parameta prototypes attached ta lexical subroutines is now bigged up when
compilin sub calls without parentheses.  Previously, tha prototypes were
honoured only fo' calls \fIwith\fR parentheses. [\s-1RT\s0 #116735]
.IP "\(bu" 4
Syntax errors up in lexical subroutines up in combination wit calls ta tha same
subroutines no longer cause crashes at compile time.
.IP "\(bu" 4
Da dtrace sub-entry probe now works wit lexical subs, instead of
crashin [perl #118305].
.IP "\(bu" 4
Undefinin a inlinable lexical subroutine (\f(CW\*(C`my sub foo() { 42 } undef
&foo\*(C'\fR) would result up in a cold-ass lil crash if warnings was turned on.
.IP "\(bu" 4
Deep recursion warnings no longer crash lexical subroutines. [\s-1RT\s0 #118521]
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.18.1 represents approximately 2 monthz of pimpment since Perl 5.18.0
and gotz nuff approximately 8,400 linez of chizzlez across 60 filez from 12
authors.
.PP
Perl continues ta flourish tha fuck into its third decade props ta a vibrant hood
of playas n' pimpers. Da followin playas is known ta have contributed the
improvements dat became Perl 5.18.1:
.PP
Chris 'BinGOs' Williams, Craig A. Berry, Dagfinn Ilmari Mannsa\*oker, David
Mitchell, Father Chrysostomos, Karl Williamson, Lukas Mai, Nicholas Clark,
Peta Martini, Ricardo Signes, Shlomi Fish, Tony Cook.
.PP
Da list above be almost certainly incomplete as it be automatically generated
from version control history. In particular, it do not include tha names of
the (very much appreciated) contributors whoz ass reported thangs ta tha Perl bug
tracker.
.PP
Many of tha chizzlez included up in dis version originated up in tha \s-1CPAN\s0 modules
included up in Perlz core. We grateful ta tha entire \s-1CPAN\s0 hood for
helpin Perl ta flourish.
.PP
For a mo' complete list of all of Perlz oldschool contributors, please see
the \fI\s-1AUTHORS\s0\fR file up in tha Perl source distribution.
.SH "Reportin Bugs"
.IX Header "Reportin Bugs"
If you find what tha fuck you be thinkin be a funky-ass bug, you might check tha articlez recently
posted ta tha comp.lang.perl.misc newsgroup n' tha perl bug database at
http://rt.perl.org/perlbug/ .  There may also be shiznit at
http://www.perl.org/ , tha Perl Home Page.
.PP
If you believe you have a unreported bug, please run tha perlbug program
included wit yo' release.  Be shizzle ta trim yo' bug down ta a tiny but
sufficient test case.  Yo crazy-ass bug report, along wit tha output of \f(CW\*(C`perl \-V\*(C'\fR,
will be busted off ta perlbug@perl.org ta be analysed by tha Perl portin crew.
.PP
If tha bug yo ass is reportin has securitizzle implications, which make it
inappropriate ta bust ta a publicly archived mailin list, then please bust it
to perl5\-security\-report@perl.org.  This points ta a cold-ass lil closed subscription
unarchived mailin list, which includes all tha core committers, whoz ass will be
able ta help assess tha impact of issues, figure up a resolution, n' help
co-ordinizzle tha release of patches ta mitigate or fix tha problem across all
platforms on which Perl is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Please only use dis address for
securitizzle thangs up in tha Perl core, not fo' modulez independently distributed on
\&\s-1CPAN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da \fIChanges\fR file fo' a explanation of how tha fuck ta view exhaustizzle details on
what chizzled.
.PP
Da \fI\s-1INSTALL\s0\fR file fo' how tha fuck ta build Perl.
.PP
Da \fI\s-1README\s0\fR file fo' general stuff.
.PP
Da \fIArtistic\fR n' \fICopying\fR filez fo' copyright shiznit.
