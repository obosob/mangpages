'\" t
.TH "SYSTEMCTL" "1" "" "systemd 208" "systemctl"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemctl \- Control tha systemd system n' steez manager
.SH "SYNOPSIS"
.HP \w'\fBsystemctl\fR\ 'u
\fBsystemctl\fR [OPTIONS...] COMMAND [NAME...]
.SH "DESCRIPTION"
.PP
\fBsystemctl\fR
may be used ta introspect n' control tha state of the
\fBsystemd\fR(1)
system n' steez manager\&.
.PP
For Unit Commandz the
\fINAME\fR
represents full name of unit\&.
.sp
.if n \{\
.RS 4
.\}
.nf
systemctl start foo\&.service
    
.fi
.if n \{\
.RE
.\}
.sp
For Unit File Commandz the
\fINAME\fR
represents full name of tha unit file, or absolute path ta tha unit file\&.
.sp
.if n \{\
.RS 4
.\}
.nf
systemctl start /path/to/foo\&.service
    
.fi
.if n \{\
.RE
.\}
.sp
While hustlin wit skillz/service files,
\fBsystemctl\fR
is able ta append \&.service suffix when it is missing\&.
.sp
.if n \{\
.RS 4
.\}
.nf
systemctl start foo
    
.fi
.if n \{\
.RE
.\}
.SH "OPTIONS"
.PP
Da followin options is understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short help text n' exits\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short version strang n' exits\&.
.RE
.PP
\fB\-t\fR, \fB\-\-type=\fR
.RS 4
Da argument should be a cold-ass lil comma\-separated list of unit types such as
\fBservice\fR
and
\fBsocket\fR\&.
.sp
If one of tha arguments be a unit type, when listin units, limit display ta certain unit types\&. Otherwise, unitz of all types is ghon be shown\&.
.sp
As a special case, if one of tha arguments is
\fBhelp\fR, a list of allowed joints is ghon be printed n' tha program will exit\&.
.RE
.PP
\fB\-\-state=\fR
.RS 4
Da argument should be a cold-ass lil comma\-separated list of unit LOAD, SUB, or ACTIVE states\&. When listin units, show only dem up in specified states\&.
.RE
.PP
\fB\-p\fR, \fB\-\-property=\fR
.RS 4
When showin unit/job/manager propertizzles wit the
\fBshow\fR
command, limit display ta certain propertizzles as specified as argument\&. If not specified, all set propertizzles is shown\&. Da argument should be a cold-ass lil comma\-separated list of property names, such as
"MainPID"\&. If specified mo' than once, all propertizzles wit tha specified names is shown\&.
.RE
.PP
\fB\-a\fR, \fB\-\-all\fR
.RS 4
When listin units, show all loaded units, regardless of they state, includin inactizzle units\&. When showin unit/job/manager properties, show all propertizzles regardless whether they is set or not\&.
.sp
To list all units installed on tha system, use the
\fBlist\-unit\-files\fR
command instead\&.
.RE
.PP
\fB\-\-reverse\fR
.RS 4
Show reverse dependencies between units with
\fBlist\-dependencies\fR, i\&.e\&. units wit dependenciez of type
\fIWants=\fR
or
\fIRequires=\fR
on tha given unit\&.
.RE
.PP
\fB\-\-after\fR
.RS 4
With
\fBlist\-dependencies\fR, show tha units dat is ordered before tha specified unit\&. In other lyrics, list tha units dat is up in the
\fIAfter=\fR
directizzle of tha specified unit, have tha specified unit up in their
\fIBefore=\fR
directive, or is otherwise implicit dependenciez of tha specified unit\&.
.RE
.PP
\fB\-\-before\fR
.RS 4
With
\fBlist\-dependencies\fR, show tha units dat is ordered afta tha specified unit\&. In other lyrics, list tha units dat is up in the
\fIBefore=\fR
directizzle of tha specified unit, have tha specified unit up in their
\fIAfter=\fR
directive, or otherwise depend on tha specified unit\&.
.RE
.PP
\fB\-l\fR, \fB\-\-full\fR
.RS 4
Do not ellipsize unit names, process tree entries, n' truncate unit descriptions up in tha output of
\fBlist\-units\fR
and
\fBlist\-jobs\fR\&.
.RE
.PP
\fB\-\-fail\fR
.RS 4
If tha axed operation conflicts wit a pendin unfinished thang, fail tha command\&. If dis aint specified, tha axed operation will replace tha pendin thang, if necessary\&. Do not confuse with
\fB\-\-failed\fR\&.
.RE
.PP
\fB\-\-show\-types\fR
.RS 4
When showin sockets, show tha type of tha socket\&.
.RE
.PP
\fB\-\-irreversible\fR
.RS 4
Mark dis transaction\*(Aqs thangs as irreversible\&. This prevents future conflictin transactions from replacin these thangs\&. Da thangs can still be shut down rockin the
\fBcancel\fR
command\&.
.RE
.PP
\fB\-\-ignore\-dependencies\fR
.RS 4
When enqueuin a freshly smoked up thang, ignore all its dependencies n' execute it immediately\&. If passed, no required unitz of tha unit passed is ghon be pulled in, n' no orderin dependencies is ghon be honored\&. This is mostly a thugged-out debuggin n' rescue tool fo' tha administrator n' should not be used by applications\&.
.RE
.PP
\fB\-i\fR, \fB\-\-ignore\-inhibitors\fR
.RS 4
When system shutdown or a chill state is requested, ignore inhibitor locks\& fo' realz. Applications can establish inhibitor locks ta avoid dat certain blingin operations (like fuckin CD burnin or suchlike) is interrupted by system shutdown or a chill state\& fo' realz. Any user may take these locks n' privileged playas may override these locks\&. If any locks is taken, shutdown n' chill state requests will normally fail (regardless of whether privileged or not) n' a list of actizzle locks is printed\&. But fuck dat shiznit yo, tha word on tha street is dat if
\fB\-\-ignore\-inhibitors\fR
is specified, tha locks is ignored n' not printed, n' tha operation attempted anyway, possibly requirin additionizzle privileges\&.
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
Suppress output ta standard output in
\fBsnapshot\fR,
\fBis\-active\fR,
\fBis\-failed\fR,
\fBenable\fR
and
\fBdisable\fR\&.
.RE
.PP
\fB\-\-no\-block\fR
.RS 4
Do not synchronously wait fo' tha axed operation ta finish\&. If dis aint specified, tha thang is ghon be verified, enqueued and
\fBsystemctl\fR
will wait until it is completed\&. By passin dis argument, it is only verified n' enqueued\&.
.RE
.PP
\fB\-\-no\-legend\fR
.RS 4
Do not print a legend, i\&.e\&. tha column headaz n' tha foota wit hints\&.
.RE
.PP
\fB\-\-no\-pager\fR
.RS 4
Do not pipe output tha fuck into a pager\&.
.RE
.PP
\fB\-\-system\fR
.RS 4
Talk ta tha systemd system manager\&. (Default)
.RE
.PP
\fB\-\-user\fR
.RS 4
Talk ta tha systemd manager of tha callin user\&.
.RE
.PP
\fB\-\-no\-wall\fR
.RS 4
Do not bust wall message before halt, power\-off, reboot\&.
.RE
.PP
\fB\-\-global\fR
.RS 4
When used with
\fBenable\fR
and
\fBdisable\fR, operate on tha global user configuration directory, thus enablin or disablin a unit file globally fo' all future loginz of all users\&.
.RE
.PP
\fB\-\-no\-reload\fR
.RS 4
When used with
\fBenable\fR
and
\fBdisable\fR, do not implicitly reload daemon configuration afta executin tha chizzles\&.
.RE
.PP
\fB\-\-no\-ask\-password\fR
.RS 4
When used with
\fBstart\fR
and related commands, disablez askin fo' passwords\&. Background skillz may require input of a password or passphrase string, fo' example ta unlock system hard disks or cryptographic certificates\&. Unless dis option is specified n' tha command is invoked from a terminal,
\fBsystemctl\fR
will query tha user on tha terminal fo' tha necessary secrets\&. Use dis option ta switch dis behavior off\&. In dis case, tha password must be supplied by some other means (for example graphical password agents) or tha steez might fail\&. This also disablez queryin tha user fo' authentication fo' privileged operations\&.
.RE
.PP
\fB\-\-kill\-who=\fR
.RS 4
When used with
\fBkill\fR, chizzle which processes ta bust a signal to\&. Must be one of
\fBmain\fR,
\fBcontrol\fR
or
\fBall\fR
to select whether ta bust a cap up in only tha main process, tha control process or all processez of tha unit\&. Da main process of tha unit is tha one dat defines tha game\-time of it\& fo' realz. A control process of a unit is one dat is invoked by tha manager ta induce state chizzlez of it\&. For example, all processes started cuz of the
\fIExecStartPre=\fR,
\fIExecStop=\fR
or
\fIExecReload=\fR
settingz of steez units is control processes\&. Note dat there is only one control process per unit at a time, as only one state chizzle is executed at a time\&. For skillz of type
\fIType=forking\fR
the initial process started by tha manager for
\fIExecStart=\fR
is a cold-ass lil control process, while tha process ultimately forked off by dat one is then considered tha main process of tha unit (if it can be determined)\&. This is different fo' steez unitz of other types, where tha process forked off by tha manager for
\fIExecStart=\fR
is always tha main process itself\& fo' realz. A steez unit consistz of no or one main process, no or one control process plus any number of additionizzle processes\&. Not all unit types manage processez of these types however\&. For example fo' mount units control processes is defined (which is tha invocations of
/usr/bin/mount
and
/usr/bin/umount) yo, but no main process is defined\&. If omitted, defaults to
\fBall\fR\&.
.RE
.PP
\fB\-s\fR, \fB\-\-signal=\fR
.RS 4
When used with
\fBkill\fR, chizzle which signal ta bust ta selected processes\&. Must be one of tha well known signal specifiers such as
\fBSIGTERM\fR,
\fBSIGINT\fR
or
\fBSIGSTOP\fR\&. If omitted, defaults to
\fBSIGTERM\fR\&.
.RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
When used with
\fBenable\fR, overwrite any existin conflictin symlinks\&.
.sp
When used with
\fBhalt\fR,
\fBpoweroff\fR,
\fBreboot\fR
or
\fBkexec\fR, execute tha selected operation without shuttin down all units\&. But fuck dat shiznit yo, tha word on tha street is dat all processes is ghon be capped forcibly n' all file systems is unmounted or remounted read\-only\&. This is hence a thugged-out drastic but relatively safe option ta request a immediate reboot\&. If
\fB\-\-force\fR
is specified twice fo' these operations, they is ghon be executed immediately without terminatin any processes or umountin any file systems\&. Warning: specifying
\fB\-\-force\fR
twice wit any of these operations might result up in data loss\&.
.RE
.PP
\fB\-\-root=\fR
.RS 4
When used with
\fBenable\fR/\fBdisable\fR/\fBis\-enabled\fR
(and related commands), use alternatizzle root path when lookin fo' unit files\&.
.RE
.PP
\fB\-\-runtime\fR
.RS 4
When used with
\fBenable\fR,
\fBdisable\fR, (and related commands), make chizzlez only temporarily, so dat they is lost on tha next reboot\&. This gonna git tha effect dat chizzlez is not made up in subdirectories of
/etc
but in
/run, wit identical immediate effects, however, since tha latta is lost on reboot, tha chizzlez is lost too\&.
.sp
Similarly, when used with
\fBset\-property\fR, make chizzlez only temporarily, so dat they is lost on tha next reboot\&.
.RE
.PP
\fB\-H\fR, \fB\-\-host\fR
.RS 4
Execute operation remotely\&. Right back up in yo muthafuckin ass. Specify a hostname, or username n' hostname separated by
"@", ta connect to\&. This will use SSH ta rap ta tha remote systemd instance\&.
.RE
.PP
\fB\-P\fR, \fB\-\-privileged\fR
.RS 4
Acquire privileges via PolicyKit before executin tha operation\&.
.RE
.PP
\fB\-n\fR, \fB\-\-lines=\fR
.RS 4
When used with
\fBstatus\fR, controls tha number of journal lines ta show, countin from da most thugged-out recent ones\&. Takes a positizzle integer argument\&. Defaults ta 10\&.
.RE
.PP
\fB\-o\fR, \fB\-\-output=\fR
.RS 4
When used with
\fBstatus\fR, controls tha formattin of tha journal entries dat is shown\&. For tha available chizzles, see
\fBjournalctl\fR(1)\&. Defaults to
"short"\&.
.RE
.PP
\fB\-\-plain\fR
.RS 4
When used with
\fBlist\-dependencies\fR, tha output is printed as a list instead of a tree\&.
.RE
.SH "COMMANDS"
.PP
Da followin commandz is understood:
.SS "Unit Commands"
.PP
\fBlist\-units\fR
.RS 4
List known units (subject ta limitations specified with
\fB\-t\fR)\&.
.sp
This is tha default command\&.
.RE
.PP
\fBlist\-sockets\fR
.RS 4
List socket units ordered by tha listenin address\&. Produces output similar to
.sp
.if n \{\
.RS 4
.\}
.nf
LISTEN           UNIT                        ACTIVATES
/dev/initctl     systemd\-initctl\&.socket      systemd\-initctl\&.service
\&.\&.\&.
[::]:22          sshd\&.socket                 sshd\&.service
kobject\-uevent 1 systemd\-udevd\-kernel\&.socket systemd\-udevd\&.service

5 sockets listed\&.
.fi
.if n \{\
.RE
.\}
.sp
Note: cuz tha addresses might gotz nuff spaces, dis output aint suitable fo' programmatic consumption\&.
.sp
See also tha options
\fB\-\-show\-types\fR,
\fB\-\-all\fR, and
\fB\-\-failed\fR\&.
.RE
.PP
\fBstart \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Start (activate) one or mo' units specified on tha command line\&.
.RE
.PP
\fBstop \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Quit (deactivate) one or mo' units specified on tha command line\&.
.RE
.PP
\fBreload \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Asks all units listed on tha command line ta reload they configuration\&. Note dat dis will reload tha service\-specific configuration, not tha unit configuration file of systemd\&. If you want systemd ta reload tha configuration file of a unit, use the
\fBdaemon\-reload\fR
command\&. In other lyrics: fo' tha example case of Apache, dis will reload Apache\*(Aqs
httpd\&.conf
in tha wizzy server, not the
apache\&.service
systemd unit file\&.
.sp
This command should not be trippin wit the
\fBdaemon\-reload\fR
command\&.
.RE
.PP
\fBrestart \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Restart one or mo' units specified on tha command line\&. If tha units is not hustlin yet, they is ghon be started\&.
.RE
.PP
\fBtry\-restart \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Restart one or mo' units specified on tha command line if tha units is hustlin\&. This do not a god damn thang if units is not hustlin\&. Note that, fo' compatibilitizzle wit Red Hat init scripts,
\fBcondrestart\fR
is equivalent ta dis command\&.
.RE
.PP
\fBreload\-or\-restart \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Reload one or mo' units if they support it\&. If not, restart dem instead\&. If tha units is not hustlin yet, they is ghon be started\&.
.RE
.PP
\fBreload\-or\-try\-restart \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Reload one or mo' units if they support it\&. If not, restart dem instead\&. This do not a god damn thang if tha units is not hustlin\&. Note that, fo' compatibilitizzle wit SysV init scripts,
\fBforce\-reload\fR
is equivalent ta dis command\&.
.RE
.PP
\fBisolate \fR\fB\fINAME\fR\fR
.RS 4
Start tha unit specified on tha command line n' its dependencies n' stop all others\&.
.sp
This is similar ta changin tha runlevel up in a traditionizzle init system\&. The
\fBisolate\fR
command will immediately stop processes dat is not enabled up in tha freshly smoked up unit, possibly includin tha graphical environment or terminal yo ass is currently using\&.
.sp
Note dat dis be allowed only on units where
\fBAllowIsolate=\fR
is enabled\&. Right back up in yo muthafuckin ass. See
\fBsystemd.unit\fR(5)
for details\&.
.RE
.PP
\fBkill \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Send a signal ta one or mo' processez of tha unit\&. Use
\fB\-\-kill\-who=\fR
to select which process ta kill\&. Use
\fB\-\-signal=\fR
to select tha signal ta send\&.
.RE
.PP
\fBis\-actizzle \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Peep whether any of tha specified units is actizzle (i\&.e\&. hustlin)\&. Returns a exit code
\fB0\fR
if at least one be active, or non\-zero otherwise\&. Unless
\fB\-\-quiet\fR
is specified, dis will also print tha current unit state ta standard output\&.
.RE
.PP
\fBis\-failed \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Peep whether any of tha specified units is up in a "failed" state\&. Returns a exit code
\fB0\fR
if at least one has failed, non\-zero otherwise\&. Unless
\fB\-\-quiet\fR
is specified, dis will also print tha current unit state ta standard output\&.
.RE
.PP
\fBstatus [\fR\fB\fINAME\fR\fR\fB\&.\&.\&.|\fR\fB\fIPID\fR\fR\fB\&.\&.\&.]\fR
.RS 4
Show terse runtime status shiznit bout one or mo' units, followed by most recent log data from tha journal\&. If no units is specified, show all units (subject ta limitations specified with
\fB\-t\fR)\&. If a PID is passed, show shiznit bout tha unit tha process belongs to\&.
.sp
This function is intended ta generate human\-readable output\&. If yo ass is lookin fo' computer\-parsable output, use
\fBshow\fR
instead\&.
.RE
.PP
\fBshow [\fR\fB\fINAME\fR\fR\fB\&.\&.\&.|\fR\fB\fIJOB\fR\fR\fB\&.\&.\&.]\fR
.RS 4
Show propertizzlez of one or mo' units, thangs, or tha manager itself\&. If no argument is specified, propertizzlez of tha manager is ghon be shown\&. If a unit name is specified, propertizzlez of tha unit is shown, n' if a thang id is specified, propertizzlez of tha thang is shown\&. By default, empty propertizzles is suppressed\&. Use
\fB\-\-all\fR
to show dem too\&. To select specific propertizzles ta show, use
\fB\-\-property=\fR\&. This command is intended ta be used whenever computer\-parsable output is required\&. Use
\fBstatus\fR
if yo ass is lookin fo' formatted human\-readable output\&.
.RE
.PP
\fBset\-property \fR\fB\fINAME\fR\fR\fB \fR\fB\fIASSIGNMENT\fR\fR\fB\&.\&.\&.\fR
.RS 4
Set tha specified unit propertizzles at runtime where dis is supported\&. This allows changin configuration parameta propertizzles like fuckin resource control settings at runtime\&. Not all propertizzles may be chizzled at runtime yo, but nuff resource control settings (primarily dem in
\fBsystemd.resource-control\fR(5)) may\&. Da chizzlez is applied instantly, n' stored on disk fo' future boots, unless
\fB\-\-runtime\fR
is passed, up in which case tha settings only apply until tha next reboot\&. Da syntax of tha property assignment bigs up closely tha syntax of assignments up in unit files\&.
.sp
Example:
\fBsystemctl set\-property foobar\&.service CPUShares=777\fR
.sp
Note dat dis command allows changin multiple propertizzles all up in tha same time, which is preferable over settin dem individually\&. Like unit file configuration settings, assignin tha empty list ta list parametas will reset tha list\&.
.RE
.PP
\fBhelp \fR\fB\fINAME\fR\fR\fB\&.\&.\&.|\fR\fB\fIPID\fR\fR\fB\&.\&.\&.\fR
.RS 4
Show manual pages fo' one or mo' units, if available\&. If a PID is given, tha manual pages fo' tha unit tha process belongs ta is shown\&.
.RE
.PP
\fBreset\-failed [\fR\fB\fINAME\fR\fR\fB\&.\&.\&.]\fR
.RS 4
Reset the
"failed"
state of tha specified units, or if no unit name is passed, reset tha state of all units\&. When a unit fails up in some way (i\&.e\&. process exitin wit non\-zero error code, terminatin abnormally or timin out), it will automatically enta the
"failed"
state n' its exit code n' status is recorded fo' introspection by tha administrator until tha steez is restarted or reset wit dis command\&.
.RE
.PP
\fBlist\-dependencies \fR\fB\fINAME\fR\fR
.RS 4
Shows required n' wanted unitz of tha specified unit\&. If no unit is specified,
default\&.target
is implied\&. Target units is recursively expanded\&. When
\fB\-\-all\fR
is passed, all other units is recursively expanded as well\&.
.RE
.SS "Unit File Commands"
.PP
\fBlist\-unit\-files\fR
.RS 4
List installed unit files\&.
.RE
.PP
\fBenable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Enable one or mo' unit filez or unit file instances, as specified on tha command line\&. This will create a fuckin shitload of symlinks as encoded up in the
"[Install]"
sectionz of tha unit files\& fo' realz. Afta tha symlinks done been pimped, tha systemd configuration is reloaded (in a way dat is equivalent to
\fBdaemon\-reload\fR) ta ensure tha chizzlez is taken tha fuck into account immediately\&. Note dat dis do
\fInot\fR
have tha effect of also startin any of tha units bein enabled\&. If dis is desired, a separate
\fBstart\fR
command must be invoked fo' tha unit\& fo' realz. Also note dat up in case of instizzle enablement, symlinks named tha same as instances is pimped up in tha install location, however they all point ta tha same template unit file\&.
.sp
This command will print tha actions executed\&. This output may be suppressed by passing
\fB\-\-quiet\fR\&.
.sp
Note dat dis operation creates only tha suggested symlinks fo' tha units\&. While dis command is tha recommended way ta manipulate tha unit configuration directory, tha administrator is free ta make additionizzle chizzlez manually by placin or removin symlinks up in tha directory\&. This is particularly useful ta create configurations dat deviate from tha suggested default installation\&. In dis case, tha administrator must make shizzle ta invoke
\fBdaemon\-reload\fR
manually as necessary ta ensure tha chizzlez is taken tha fuck into account\&.
.sp
Enablin units should not be trippin wit startin (activating) units, as done by the
\fBstart\fR
command\&. Enablin n' startin units is orthogonal: units may be enabled without bein started n' started without bein enabled\&. Enablin simply hooks tha unit tha fuck into various suggested places (for example, so dat tha unit be automatically started on boot or when a particular kind of hardware is plugged in)\&. Right back up in yo muthafuckin ass. Startin straight-up spawns tha daemon process (in case of steez units), or bindz tha socket (in case of socket units), n' so on\&.
.sp
Dependin on whether
\fB\-\-system\fR,
\fB\-\-user\fR,
\fB\-\-runtime\fR, or\fB\-\-global\fR, is specified, dis enablez tha unit fo' tha system, fo' tha callin user only, fo' only dis boot of tha system, or fo' all future loginz of all users, or only dis boot\&. Note dat up in tha last case, no systemd daemon configuration is reloaded\&.
.sp
Using
\fBenable\fR
on maxed units thangs up in dis biatch up in a error\&.
.RE
.PP
\fBdisable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Disablez one or mo' units\&. This removes all symlinks ta tha specified unit filez from tha unit configuration directory, n' hence undoes tha chizzlez made by
\fBenable\fR\&. Note however dat dis removes all symlinks ta tha unit filez (i\&.e\&. includin manual additions), not just dem straight-up pimped by
\fBenable\fR\&. This call implicitly reloadz tha systemd daemon configuration afta completin tha disablin of tha units\&. Note dat dis command do not implicitly stop tha units dat is bein disabled\&. If dis is desired, a additional
\fBstop\fR
command should be executed afterwards\&.
.sp
This command will print tha actions executed\&. This output may be suppressed by passing
\fB\-\-quiet\fR\&.
.sp
This command honors
\fB\-\-system\fR,
\fB\-\-user\fR,
\fB\-\-runtime\fR,
\fB\-\-global\fR
in a similar way as
\fBenable\fR\&.
.RE
.PP
\fBis\-enabled \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Checks whether any of tha specified unit filez is enabled (as with
\fBenable\fR)\&. Returns a exit code of 0 if at least one is enabled, non\-zero otherwise\&. Prints tha current enable status (see table)\&. To suppress dis output, use
\fB\-\-quiet\fR\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \& is\-enabled output
.TS
allbox tab(:);
lB lB lB.
T{
Printed string
T}:T{
Meaning
T}:T{
Return value
T}
.T&
l l l
l ^ ^
l l l
l ^ ^
l l l
l ^ ^
l l l
l l l.
T{
"enabled"
T}:T{
Enabled all up in a symlink up in \&.wants directory (permanently or just up in /run)
T}:T{
0
T}
T{
"enabled\-runtime"
T}::
T{
"linked"
T}:T{
Made available all up in a symlink ta tha unit file (permanently or just up in /run)
T}:T{
1
T}
T{
"linked\-runtime"
T}::
T{
"masked"
T}:T{
Disabled entirely (permanently or just up in /run)
T}:T{
1
T}
T{
"masked\-runtime"
T}::
T{
"static"
T}:T{
Unit aint enabled yo, but has no provisions fo' enablin up in [Install] section
T}:T{
0
T}
T{
"disabled"
T}:T{
Unit aint enabled
T}:T{
1
T}
.TE
.sp 1
.RE
.PP
\fBreenable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Reenable one or mo' unit files, as specified on tha command line\&. This be a cold-ass lil combination of
\fBdisable\fR
and
\fBenable\fR
and is useful ta reset tha symlinks a unit is enabled wit ta tha defaults configured up in the
"[Install]"
section of tha unit file\&.
.RE
.PP
\fBpreset \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Reset one or mo' unit files, as specified on tha command line, ta tha defaults configured up in tha preset policy files\&. This has tha same ol' dirty effect as
\fBdisable\fR
or
\fBenable\fR, dependin how tha fuck tha unit is listed up in tha preset files\&. For mo' shiznit on tha preset policy format, see
\fBsystemd.preset\fR(5)\&. For mo' shiznit on tha concept of presets, please consult the
\m[blue]\fBPreset\fR\m[]\&\s-2\u[1]\d\s+2
document\&.
.RE
.PP
\fBmask \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Mask one or mo' unit files, as specified on tha command line\&. This will link these units to
/dev/null, makin it impossible ta start them\&. This be a stronger version of
\fBdisable\fR, since it prohibits all kindz of activation of tha unit, includin enablement n' manual activation\&. Use dis option wit care\&. This honors the
\fB\-\-runtime\fR
option ta only mask temporarily until tha next reboot of tha system\&.
.RE
.PP
\fBunmask \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Unmask one or mo' unit files, as specified on tha command line\&. This will undo tha effect of
\fBmask\fR\&.
.RE
.PP
\fBlink \fR\fB\fIFILENAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Link a unit file dat aint up in tha unit file search paths tha fuck into tha unit file search path\&. This requires a absolute path ta a unit file\&. Da effect of dis can be undone with
\fBdisable\fR\&. Da effect of dis command is dat a unit file be available for
\fBstart\fR
and other commandz although it aint installed directly up in tha unit search path\&.
.RE
.PP
\fBget\-default\fR
.RS 4
Git tha default target specified via
default\&.target
link\&.
.RE
.PP
\fBset\-default \fR\fB\fINAME\fR\fR
.RS 4
Set tha default target ta boot into\&. Command links
default\&.target
to tha given unit\&.
.RE
.SS "Thang Commands"
.PP
\fBlist\-jobs\fR
.RS 4
List thangs dat is up in progress\&.
.RE
.PP
\fBcancel \fR\fB\fIJOB\fR\fR\fB\&.\&.\&.\fR
.RS 4
Cancel one or mo' thangs specified on tha command line by they numeric thang IDs\&. If no thang ID is specified, quit all pendin thangs\&.
.RE
.SS "Snapshot Commands"
.PP
\fBsnapshot [\fR\fB\fINAME\fR\fR\fB]\fR
.RS 4
Smoke a snapshot\&. If a snapshot name is specified, tha freshly smoked up snapshot is ghon be named afta it\&. If none is specified, a automatic snapshot name is generated\&. In either case, tha snapshot name used is printed ta standard output, unless
\fB\-\-quiet\fR
is specified\&.
.sp
A snapshot refers ta a saved state of tha systemd manager\&. Well shiiiit, it is implemented itself as a unit dat is generated dynamically wit dis command n' has dependencies on all units actizzle all up in tha time\& fo' realz. At a lata time, tha user may return ta dis state by rockin the
\fBisolate\fR
command on tha snapshot unit\&.
.sp
Snapshots is only useful fo' savin n' restorin which units is hustlin or is stopped, they do not save/restore any other state\&. Right back up in yo muthafuckin ass. Snapshots is dynamic n' lost on reboot\&.
.RE
.PP
\fBdelete \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
Remove a snapshot previously pimped with
\fBsnapshot\fR\&.
.RE
.SS "Environment Commands"
.PP
\fBshow\-environment\fR
.RS 4
Dump tha systemd manager environment block\&. Da environment block is ghon be dumped up in straight\-forward form suitable fo' sourcin tha fuck into a gangbangin' finger-lickin' dirty-ass shell script\&. This environment block is ghon be passed ta all processes tha manager spawns\&.
.RE
.PP
\fBset\-environment \fR\fB\fIVARIABLE=VALUE\fR\fR\fB\&.\&.\&.\fR
.RS 4
Set one or mo' systemd manager environment variables, as specified on tha command line\&.
.RE
.PP
\fBunset\-environment \fR\fB\fIVARIABLE\fR\fR\fB\&.\&.\&.\fR
.RS 4
Unset one or mo' systemd manager environment variables\&. If only a variable name is specified, it is ghon be removed regardless of its value\&. If a variable n' a value is specified, tha variable is only removed if it has tha specified value\&.
.RE
.SS "Manager Lifecycle Commands"
.PP
\fBdaemon\-reload\fR
.RS 4
Reload systemd manager configuration\&. This will reload all unit filez n' recreate tha entire dependency tree\&. While tha daemon is bein reloaded, all sockets systemd listens on on behalf of user configuration will stay accessible\&.
.sp
This command should not be trippin wit the
\fBreload\fR
command\&.
.RE
.PP
\fBdaemon\-reexec\fR
.RS 4
Reexecute tha systemd manager\&. This will serialize tha manager state, reexecute tha process n' deserialize tha state again\&. This command iz of lil use except fo' debuggin n' package upgrades\&. Right back up in yo muthafuckin ass. Sometimes, it might be helpful as a heavy\-weight
\fBdaemon\-reload\fR\&. While tha daemon is bein reexecuted, all sockets systemd listenin on behalf of user configuration will stay accessible\&.
.RE
.SS "System Commands"
.PP
\fBdefault\fR
.RS 4
Enta default mode\&. This is mostly equivalent to
\fBisolate default\&.target\fR\&.
.RE
.PP
\fBrescue\fR
.RS 4
Enta rescue mode\&. This is mostly equivalent to
\fBisolate rescue\&.target\fR yo, but also prints a wall message ta all users\&.
.RE
.PP
\fBemergency\fR
.RS 4
Enta emergency mode\&. This is mostly equivalent to
\fBisolate emergency\&.target\fR yo, but also prints a wall message ta all users\&.
.RE
.PP
\fBhalt\fR
.RS 4
Shut down n' halt tha system\&. This is mostly equivalent to
\fBstart halt\&.target \-\-irreversible\fR yo, but also prints a wall message ta all users\&. If combined with
\fB\-\-force\fR, shutdown of all hustlin skillz is skipped, however all processes is capped n' all file systems is unmounted or mounted read\-only, immediately followed by tha system halt\&. If
\fB\-\-force\fR
is specified twice, tha operation is immediately executed without terminatin any processes or unmountin any file systems\&. This may result up in data loss\&.
.RE
.PP
\fBpoweroff\fR
.RS 4
Shut down n' power\-off tha system\&. This is mostly equivalent to
\fBstart poweroff\&.target \-\-irreversible\fR yo, but also prints a wall message ta all users\&. If combined with
\fB\-\-force\fR, shutdown of all hustlin skillz is skipped, however all processes is capped n' all file systems is unmounted or mounted read\-only, immediately followed by tha powerin off\&. If
\fB\-\-force\fR
is specified twice, tha operation is immediately executed without terminatin any processes or unmountin any file systems\&. This may result up in data loss\&.
.RE
.PP
\fBreboot\fR
.RS 4
Shut down n' reboot tha system\&. This is mostly equivalent to
\fBstart reboot\&.target \-\-irreversible\fR yo, but also prints a wall message ta all users\&. If combined with
\fB\-\-force\fR, shutdown of all hustlin skillz is skipped, however all processes is capped n' all file systems is unmounted or mounted read\-only, immediately followed by tha reboot\&. If
\fB\-\-force\fR
is specified twice, tha operation is immediately executed without terminatin any processes or unmountin any file systems\&. This may result up in data loss\&.
.RE
.PP
\fBkexec\fR
.RS 4
Shut down n' reboot tha system via kexec\&. This is mostly equivalent to
\fBstart kexec\&.target \-\-irreversible\fR yo, but also prints a wall message ta all users\&. If combined with
\fB\-\-force\fR, shutdown of all hustlin skillz is skipped, however all processes is capped n' all file systems is unmounted or mounted read\-only, immediately followed by tha reboot\&.
.RE
.PP
\fBexit\fR
.RS 4
Ask tha systemd manager ta quit\&. This is only supported fo' user steez managers (i\&.e\&. up in conjunction wit the
\fB\-\-user\fR
option) n' will fail otherwise\&.
.RE
.PP
\fBsuspend\fR
.RS 4
Suspend tha system\&. This will trigger activation of tha special
suspend\&.target
target\&.
.RE
.PP
\fBhibernate\fR
.RS 4
Hibernate tha system\&. This will trigger activation of tha special
hibernate\&.target
target\&.
.RE
.PP
\fBhybrid\-sleep\fR
.RS 4
Hibernate n' suspend tha system\&. This will trigger activation of tha special
hybrid\-sleep\&.target
target\&.
.RE
.PP
\fBswitch\-root \fR\fB\fIROOT\fR\fR\fB [\fR\fB\fIINIT\fR\fR\fB]\fR
.RS 4
Switches ta a gangbangin' finger-lickin' different root directory n' executes a freshly smoked up system manager process below it\&. This is intended fo' usage up in initial RAM disks ("initrd"), n' will transizzle from tha initrd\*(Aqs system manager process (a\&.k\&.a "init" process) ta tha main system manager process\&. This call takes two arguments: tha directory dat is ta become tha freshly smoked up root directory, n' tha path ta tha freshly smoked up system manager binary below it ta execute as PID 1\&. If tha latta is omitted or tha empty string, a systemd binary will automatically be searched fo' n' used as init\&. If tha system manager path is omitted or equal ta tha empty string, tha state of tha initrd\*(Aqs system manager process is passed ta tha main system manager, which allows lata introspection of tha state of tha skillz involved up in tha initrd boot\&.
.RE
.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&.
.SH "ENVIRONMENT"
.PP
\fI$SYSTEMD_PAGER\fR
.RS 4
Pager ta use when
\fB\-\-no\-pager\fR
is not given; overrides
\fI$PAGER\fR\&. Right back up in yo muthafuckin ass. Settin dis ta a empty strang or tha value
"cat"
is equivalent ta passing
\fB\-\-no\-pager\fR\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemadm\fR(1),
\fBjournalctl\fR(1),
\fBloginctl\fR(1),
\fBsystemd.unit\fR(5),
\fBsystemd.resource-management\fR(5),
\fBsystemd.special\fR(7),
\fBwall\fR(1),
\fBsystemd.preset\fR(5)
.SH "NOTES"
.IP " 1." 4
Preset
.RS 4
\%http://freedesktop.org/wiki/Software/systemd/Preset
.RE
