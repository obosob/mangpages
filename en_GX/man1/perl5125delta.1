.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5125DELTA 1"
.TH PERL5125DELTA 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5125delta \- what tha fuck is freshly smoked up fo' perl v5.12.5
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout differences between tha 5.12.4 release and
the 5.12.5 release.
.PP
If yo ass is upgradin from a earlier release like fuckin 5.12.3, first read
perl5124delta, which raps bout differences between 5.12.3 and
5.12.4.
.SH "Security"
.IX Header "Security"
.ie n .SS """Encode"" decode_xs n\-byte heap-overflow (\s-1CVE\-2011\-2939\s0)"
.el .SS "\f(CWEncode\fP decode_xs n\-byte heap-overflow (\s-1CVE\-2011\-2939\s0)"
.IX Subsection "Encode decode_xs n-byte heap-overflow (CVE-2011-2939)"
A bug up in \f(CW\*(C`Encode\*(C'\fR could, on certain inputs, cause tha heap ta overflow.
This problem has been erected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Bug reported by Robert Zacek.
.ie n .SS """File::Glob::bsd_glob()"" memory error wit \s-1GLOB_ALTDIRFUNC \s0(\s-1CVE\-2011\-2728\s0)."
.el .SS "\f(CWFile::Glob::bsd_glob()\fP memory error wit \s-1GLOB_ALTDIRFUNC \s0(\s-1CVE\-2011\-2728\s0)."
.IX Subsection "File::Glob::bsd_glob() memory error wit GLOB_ALTDIRFUNC (CVE-2011-2728)."
Callin \f(CW\*(C`File::Glob::bsd_glob\*(C'\fR wit tha unsupported flag \s-1GLOB_ALTDIRFUNC\s0 would 
cause a access violation / segfault.  A Perl program dat accepts a gangbangin' flags value from
an external source could expose itself ta denial of steez or arbitrary code
execution attacks.  There is no known exploits up in tha wild. Y'all KNOW dat shit, muthafucka!  Da problem has been
corrected by explicitly disablin all unsupported flags n' settin unused function
pointas ta null.  Bug reported by Cle\*'ment Lecigne.
.SS "Heap buffer overrun up in 'x' strang repeat operator (\s-1CVE\-2012\-5195\s0)"
.IX Subsection "Heap buffer overrun up in 'x' strang repeat operator (CVE-2012-5195)"
Poorly freestyled perl code dat allows a attacker ta specify tha count to
perlz 'x' strang repeat operator can already cause a memory exhaustion
denial-of-service battle fo' realz. A flaw up in versionz of perl before 5.15.5 can
escalate dat tha fuck into a heap buffer overrun; coupled wit versionz of glibc
before 2.16, it possibly allows tha execution of arbitrary code.
.PP
This problem has been fixed.
.SH "Incompatible Chizzles"
.IX Header "Incompatible Chizzles"
There is no chizzlez intentionally incompatible wit 5.12.4. If any
exist, they is bugs n' reports is welcome.
.SH "Modulez n' Pragmata"
.IX Header "Modulez n' Pragmata"
.SS "Updated Modules"
.IX Subsection "Updated Modules"
\fIB::Concise\fR
.IX Subsection "B::Concise"
.PP
B::Concise no longer produces mangled output wit tha \fB\-tree\fR option
[perl #80632].
.PP
\fIcharnames\fR
.IX Subsection "charnames"
.PP
A regression introduced up in Perl 5.8.8 has been fixed, dat caused
\&\f(CWcharnames::viacode(0)\fR ta return \f(CW\*(C`undef\*(C'\fR instead of tha strang \*(L"\s-1NULL\*(R"\s0
[perl #72624].
.PP
\fIEncode has been upgraded from version 2.39 ta version 2.39_01.\fR
.IX Subsection "Encode has been upgraded from version 2.39 ta version 2.39_01."
.PP
See \*(L"Security\*(R".
.PP
\fIFile::Glob has been upgraded from version 1.07 ta version 1.07_01.\fR
.IX Subsection "File::Glob has been upgraded from version 1.07 ta version 1.07_01."
.PP
See \*(L"Security\*(R".
.PP
\fIUnicode::UCD\fR
.IX Subsection "Unicode::UCD"
.PP
Da documentation fo' tha \f(CW\*(C`upper\*(C'\fR function now straight-up say \*(L"upper\*(R", not
\&\*(L"lower\*(R".
.PP
\fIModule::CoreList\fR
.IX Subsection "Module::CoreList"
.PP
Module::CoreList has been updated ta version 2.50_02 ta add data for
this release.
.SH "Changes ta Existin Documentation"
.IX Header "Changes ta Existin Documentation"
.SS "perlebcdic"
.IX Subsection "perlebcdic"
Da perlebcdic document gotz nuff a helpful table ta use up in \f(CW\*(C`tr///\*(C'\fR to
convert between \s-1EBCDIC\s0 n' Latin1/ASCII.  Unfortunately, tha table was the
inverse of tha one it raps about.  This has been erected.
.SS "perlunicode"
.IX Subsection "perlunicode"
Da section on
User-Defined Case Mappings had
some wack markup n' unclear sentences, makin partz of it unreadable.  This
has been rectified.
.SS "perluniprops"
.IX Subsection "perluniprops"
This document has been erected ta take non-ASCII platforms tha fuck into account.
.SH "Installation n' Configuration Improvements"
.IX Header "Installation n' Configuration Improvements"
.SS "Platform Specific Chizzles"
.IX Subsection "Platform Specific Chizzles"
.IP "Mac \s-1OS X\s0" 4
.IX Item "Mac OS X"
There done been configuration n' test fixes ta make Perl build cleanly on
Lion n' Mountain Lion.
.IP "NetBSD" 4
.IX Item "NetBSD"
Da NetBSD hints file was erected ta be compatible wit NetBSD 6.*
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
\&\f(CW\*(C`chop\*(C'\fR now erectly handlez charactas above \*(L"\ex{7fffffff}\*(R"
[perl #73246].
.IP "\(bu" 4
\&\f(CW\*(C`($<,$>) = (...)\*(C'\fR stopped hustlin properly up in 5.12.0.  It be supposed
to cook up a single \f(CW\*(C`setreuid()\*(C'\fR call, rather than callin \f(CW\*(C`setruid()\*(C'\fR and
\&\f(CW\*(C`seteuid()\*(C'\fR separately.  Consequently it did not work properly.  This has
been fixed [perl #75212].
.IP "\(bu" 4
Fixed a regression of \fIkill()\fR when a match variable is used fo' the
process \s-1ID\s0 ta bust a cap up in [perl #75812].
.IP "\(bu" 4
\&\f(CW\*(C`UNIVERSAL::VERSION\*(C'\fR no longer leaks memory.  It started leakin up in Perl
5.10.0.
.IP "\(bu" 4
Da C\-level \f(CW\*(C`my_strftime\*(C'\fR functions no longer leaks memory.  This fixes a
memory leak up in \f(CW\*(C`POSIX::strftime\*(C'\fR [perl #73520].
.IP "\(bu" 4
\&\f(CW\*(C`caller\*(C'\fR no longer leaks memory when called from tha \s-1DB\s0 package if
\&\f(CW@DB::args\fR was assigned ta afta tha straight-up original gangsta call ta \f(CW\*(C`caller\*(C'\fR.  Carp
was triggerin dis bug [perl #97010].
.IP "\(bu" 4
Passin ta \f(CW\*(C`index\*(C'\fR a offset beyond tha end of tha strang when tha string
is encoded internally up in \s-1UTF8\s0 no longer causes panics [perl #75898].
.IP "\(bu" 4
Syntax errors up in \f(CW\*(C`(?{...})\*(C'\fR blocks up in regular expressions no longer
cause panic lyrics [perl #2353].
.IP "\(bu" 4
Perl 5.10.0 introduced some faulty logic dat made \*(L"U*\*(R" up in tha middle of
a pack template equivalent ta \*(L"U0\*(R" if tha input strang was empty.  This has
been fixed [perl #90160].
.SH "Errata"
.IX Header "Errata"
.ie n .SS "\fIsplit()\fP n' @_"
.el .SS "\fIsplit()\fP n' \f(CW@_\fP"
.IX Subsection "split() n' @_"
\&\fIsplit()\fR no longer modifies \f(CW@_\fR when called up in scalar or void context.
In void context it now produces a \*(L"Useless use of split\*(R" warning.
This is straight-up a cold-ass lil chizzle introduced up in perl 5.12.0 yo, but dat shiznit was missed from
that releasez perl5120delta.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.12.5 represents approximately 17 monthz of pimpment since Perl 5.12.4
and gotz nuff approximately 1,900 linez of chizzlez across 64 filez from 18
authors.
.PP
Perl continues ta flourish tha fuck into its third decade props ta a vibrant hood
of playas n' pimpers. Da followin playas is known ta have contributed the
improvements dat became Perl 5.12.5:
.PP
Andy Dougherty, Chris 'BinGOs' Williams, Craig A. Berry, Dizzy Mitchell,
Dominic Hargreaves, Father Chrysostomos, Florian Ragwitz, George Greer, Goro
Fuji, Jizzy Vincent, Karl Williamson, Leon Brocard, Nicholas Clark, Rafael
Garcia-Suarez, Reini Urban, Ricardo Signes, Steve Hay, Tony Cook.
.PP
Da list above be almost certainly incomplete as it be automatically generated
from version control history. In particular, it do not include tha names of
the (very much appreciated) contributors whoz ass reported thangs ta tha Perl bug
tracker.
.PP
Many of tha chizzlez included up in dis version originated up in tha \s-1CPAN\s0 modules
included up in Perlz core. We grateful ta tha entire \s-1CPAN\s0 hood for
helpin Perl ta flourish.
.PP
For a mo' complete list of all of Perlz oldschool contributors, please see
the \fI\s-1AUTHORS\s0\fR file up in tha Perl source distribution.
.SH "Reportin Bugs"
.IX Header "Reportin Bugs"
If you find what tha fuck you be thinkin be a funky-ass bug, you might check tha articles
recently posted ta tha comp.lang.perl.misc newsgroup n' tha perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , tha Perl Home Page.
.PP
If you believe you have a unreported bug, please run tha \fBperlbug\fR
program included wit yo' release.  Be shizzle ta trim yo' bug down
to a tiny but sufficient test case.  Yo crazy-ass bug report, along wit the
output of \f(CW\*(C`perl \-V\*(C'\fR, is ghon be busted off ta perlbug@perl.org ta be
analysed by tha Perl portin crew.
.PP
If tha bug yo ass is reportin has securitizzle implications, which make it
inappropriate ta bust ta a publicly archived mailin list, then please send
it ta perl5\-security\-report@perl.org. This points ta a cold-ass lil closed subscription
unarchived mailin list, which includes all tha core committers, whoz ass be able
to help assess tha impact of issues, figure up a resolution, n' help
co-ordinizzle tha release of patches ta mitigate or fix tha problem across all
platforms on which Perl is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Please only use dis address for
securitizzle thangs up in tha Perl core, not fo' modulez independently
distributed on \s-1CPAN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da \fIChanges\fR file fo' a explanation of how tha fuck ta view exhaustizzle details
on what tha fuck chizzled.
.PP
Da \fI\s-1INSTALL\s0\fR file fo' how tha fuck ta build Perl.
.PP
Da \fI\s-1README\s0\fR file fo' general stuff.
.PP
Da \fIArtistic\fR n' \fICopying\fR filez fo' copyright shiznit.
