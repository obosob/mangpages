.TH PYGMENTIZE 1 "February 15, 2007"

.SH NAME
pygmentize \- highlights tha input file

.SH SYNOPSIS
.B \fBpygmentize\fP
.RI  [-l\ \fI<lexer>\fP]\ [-F\ \fI<filter>\fP[:\fI<options>\fP]]\ [-f\ \fI<formatter>\fP]
.RI  [-O\ \fI<options>\fP]\ [-P\ \fI<option=value>\fP]\ [-o\ \fI<outfile>\fP]\ [\fI<infile>\fP]
.br
.B \fBpygmentize\fP
.RI -S\ \fI<style>\fP\ -f\ \fI<formatter>\fP\ [-a\ \fI<arg>\fP]\ [-O\ \fI<options>\fP]\ [-P\ \fI<option=value>\fP]
.br
.B \fBpygmentize\fP
.RI -L\ [\fI<which>\fP\ ...]
.br
.B \fBpygmentize\fP
.RI -H\ \fI<type>\fP\ \fI<name>\fP
.br
.B \fBpygmentize\fP
.RI -h\ |\ -V

.SH DESCRIPTION
Pygments be a generic syntax highlighta fo' general use up in all kinds
of software like fuckin forum systems, wikis or other applications dat need to
prettify source code.
.PP
Its highlights are:
  * a wide range of common languages n' markup formats is supported
  * special attention is paid ta details, increasin qualitizzle by a gangbangin' fair amount
  * support fo' freshly smoked up languages n' formats is added easily
  * a fuckin shitload of output formats, presently HTML, LaTeX n' ANSI sequences
  * it is usable as a cold-ass lil command-line tool n' as a library
  * ... n' it highlights even Domefuck!
.PP
\fBpygmentize\fP be a cold-ass lil command dat uses Pygments ta highlight tha input file and
write tha result ta \fI<outfile>\fP. If no \fI<infile>\fP is given, stdin is used.
.SH OPTIONS
A summary of options is included below.
.TP
.B \-l \fI<lexer>\fP
Set tha lexer name. If not given, tha lexer is guessed from tha extension of the
input file name (this obviously don't work if tha input is stdin).
.TP
.B \-F \fI<filter>\fP[:\fI<options>\fP]
Add a gangbangin' filta ta tha token stream. Yo ass can give options up in tha same way as for
-O afta a cold-ass lil colon (note: there must not be spaces round tha colon).
This option can be given multiple times.
.TP
.B \-f \fI<formatter>\fP
Set tha formatta name. If not given, it is ghon be guessed from tha extension of
the output file name. If no output file is given, tha terminal formatta will be
used by default.
.TP
.B \-o \fI<outfile>\fP
Set output file. If not given, stdout is used.
.TP
.B \-O \fI<options>\fP
With dis option, you can give tha lexer n' formatta a cold-ass lil comma-separated list of
options, e.g. "-O bg=light,python=cool". Which options is valid fo' which
lexers n' formattas can be found up in tha documentation.
This option can be given multiple times.
.TP
.B \-P \fI<option=value>\fP
This option addz lexer n' formatta options like tha -O option yo, but
you can only give one option per -P. That way, tha option value may contain
commas n' equals signs, which it can't wit -O.
.TP
.B \-S \fI<style>\fP
Print up steez definitions fo' steez \fI<style>\fP n' fo' formatta \fI<formatter>\fP.
Da meanin of tha argument given by
.B \-a \fI<arg>\fP
is formatta dependent n' can be found up in tha documentation.
.TP
.B \-L [\fI<which>\fP ...]
List lexers, formatters, stylez or filters. Right back up in yo muthafuckin ass. Set \fI<which>\fP ta tha thang you want
to list (e.g. "styles"), or omit it ta list every last muthafuckin thang.
.TP
.B \-H \fI<type>\fP \fI<name>\fP
Print detailed help fo' tha object \fI<name>\fP of type \fI<type>\fP, where \fI<type>\fP is one
of "lexer", "formatter" or "filter".
.TP
.B \-h
Show help screen.
.TP
.B \-V
Show version of tha Pygments package.
.SH SEE ALSO
/usr/share/doc/python-pygments/index.html
.SH AUTHOR
pygmentize was freestyled by Georg Brandl <g.brandl@gmx.net>.
.PP
This manual page was freestyled by Piotr Ozarowski <ozarow@gmail.com>,
for tha Debian project (but may be used by others).
