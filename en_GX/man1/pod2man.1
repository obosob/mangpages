.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2MAN 1"
.TH POD2MAN 1 "2013-01-02" "perl v5.18.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
pod2man \- Convert POD data ta formatted *roff input
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
pod2man [\fB\-\-center\fR=\fIstring\fR] [\fB\-\-date\fR=\fIstring\fR] [\fB\-\-errors\fR=\fIstyle\fR]
    [\fB\-\-fixed\fR=\fIfont\fR] [\fB\-\-fixedbold\fR=\fIfont\fR] [\fB\-\-fixeditalic\fR=\fIfont\fR]
    [\fB\-\-fixedbolditalic\fR=\fIfont\fR] [\fB\-\-name\fR=\fIname\fR] [\fB\-\-nourls\fR]
    [\fB\-\-official\fR] [\fB\-\-quotes\fR=\fIquotes\fR] [\fB\-\-release\fR[=\fIversion\fR]]
    [\fB\-\-section\fR=\fImanext\fR] [\fB\-\-stderr\fR] [\fB\-\-utf8\fR] [\fB\-\-verbose\fR]
    [\fIinput\fR [\fIoutput\fR] ...]
.PP
pod2man \fB\-\-help\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpod2man\fR be a gangbangin' front-end fo' Pod::Man, rockin it ta generate *roff input
from \s-1POD\s0 source.  Da resultin *roff code is suitable fo' display on a
terminal rockin \fInroff\fR\|(1), normally via \fIman\fR\|(1), or printin rockin \fItroff\fR\|(1).
.PP
\&\fIinput\fR is tha file ta read fo' \s-1POD\s0 source (the \s-1POD\s0 can be embedded in
code).  If \fIinput\fR aint given, it defaults ta \f(CW\*(C`STDIN\*(C'\fR.  \fIoutput\fR, if
given, is tha file ta which ta write tha formatted output.  If \fIoutput\fR
aint given, tha formatted output is freestyled ta \f(CW\*(C`STDOUT\*(C'\fR.  Several \s-1POD\s0
filez can be processed up in tha same \fBpod2man\fR invocation (savin module
load n' compile times) by providin multiple pairz of \fIinput\fR and
\&\fIoutput\fR filez on tha command line.
.PP
\&\fB\-\-section\fR, \fB\-\-release\fR, \fB\-\-center\fR, \fB\-\-date\fR, n' \fB\-\-official\fR can
be used ta set tha headaz n' footas ta use; if not given, Pod::Man will
assume various defaults, n' you can put dat on yo' toast.  See below or Pod::Man fo' details.
.PP
\&\fBpod2man\fR assumes dat yo' *roff formattas gotz a gangbangin' fixed-width font
named \f(CW\*(C`CW\*(C'\fR.  If yours is called suttin' else (like \f(CW\*(C`CR\*(C'\fR), use
\&\fB\-\-fixed\fR ta specify dat shit.  This generally only mattas fo' troff output
for printing.  Similarly, you can set tha fonts used fo' bold, italic, and
bold italic fixed-width output.
.PP
Besides tha obvious pod conversions, Pod::Man, n' therefore pod2man also
takes care of formattin \fIfunc()\fR, func(n), n' simple variable references
like \f(CW$foo\fR or \f(CW@bar\fR so you don't gotta use code escapes fo' them; complex
expressions like \f(CW$fred{\*(Aqstuff\*(Aq}\fR will still need ta be escaped, though.
It also translates dashes dat aren't used as hyphens tha fuck into en dashes, makes
long dashes\*(--like this\*(--into proper em dashes, fixes \*(L"paired quotes,\*(R" and
takes care of nuff muthafuckin other troff-specific tweaks.  See Pod::Man for
complete shiznit.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c\fR \fIstring\fR, \fB\-\-center\fR=\fIstring\fR" 4
.IX Item "-c string, --center=string"
Sets tha centered page header ta \fIstring\fR.  Da default is \*(L"User
Contributed Perl Documentation\*(R" yo, but also peep \fB\-\-official\fR below.
.IP "\fB\-d\fR \fIstring\fR, \fB\-\-date\fR=\fIstring\fR" 4
.IX Item "-d string, --date=string"
Set tha left-hand foota strang ta dis value.  By default, tha modification
date of tha input file is ghon be used, or tha current date if input be reppin
\&\f(CW\*(C`STDIN\*(C'\fR.
.IP "\fB\-errors\fR=\fIstyle\fR" 4
.IX Item "-errors=style"
Set tha error handlin style.  \f(CW\*(C`die\*(C'\fR say ta throw a exception on any
\&\s-1POD\s0 formattin error. Shiiit, dis aint no joke.  \f(CW\*(C`stderr\*(C'\fR say ta report errors on standard error,
but not ta throw a exception. I aint talkin' bout chicken n' gravy biatch.  \f(CW\*(C`pod\*(C'\fR say ta include a \s-1POD ERRORS\s0
section up in tha resultin documentation summarizin tha errors.  \f(CW\*(C`none\*(C'\fR
ignores \s-1POD\s0 errors entirely, as much as possible.
.Sp
Da default is \f(CW\*(C`die\*(C'\fR.
.IP "\fB\-\-fixed\fR=\fIfont\fR" 4
.IX Item "--fixed=font"
Da fixed-width font ta use fo' verbatim text n' code.  Defaults to
\&\f(CW\*(C`CW\*(C'\fR.  Some systems may want \f(CW\*(C`CR\*(C'\fR instead. Y'all KNOW dat shit, muthafucka!  Only mattas fo' \fItroff\fR\|(1)
output.
.IP "\fB\-\-fixedbold\fR=\fIfont\fR" 4
.IX Item "--fixedbold=font"
Bold version of tha fixed-width font.  Defaults ta \f(CW\*(C`CB\*(C'\fR.  Only matters
for \fItroff\fR\|(1) output.
.IP "\fB\-\-fixeditalic\fR=\fIfont\fR" 4
.IX Item "--fixeditalic=font"
Italic version of tha fixed-width font (actually, suttin' of a misnomer,
since most fixed-width fonts only have a oblique version, not a italic
version).  Defaults ta \f(CW\*(C`CI\*(C'\fR.  Only mattas fo' \fItroff\fR\|(1) output.
.IP "\fB\-\-fixedbolditalic\fR=\fIfont\fR" 4
.IX Item "--fixedbolditalic=font"
Bold italic (probably straight-up oblique) version of tha fixed-width font.
Pod::Man don't assume you have this, n' defaults ta \f(CW\*(C`CB\*(C'\fR.  Some
systems (like fuckin Solaris) have dis font available as \f(CW\*(C`CX\*(C'\fR.  Only matters
for \fItroff\fR\|(1) output.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Print up usage shiznit.
.IP "\fB\-l\fR, \fB\-\-lax\fR" 4
.IX Item "-l, --lax"
No longer used. Y'all KNOW dat shit, muthafucka!  \fBpod2man\fR used ta check its input fo' validitizzle as a
manual page yo, but dis should now be done by \fIpodchecker\fR\|(1) instead.
Accepted fo' backward compatibility; dis option no longer do anything.
.IP "\fB\-n\fR \fIname\fR, \fB\-\-name\fR=\fIname\fR" 4
.IX Item "-n name, --name=name"
Set tha name of tha manual page ta \fIname\fR.  Without dis option, tha manual
name is set ta tha uppercased base name of tha file bein converted unless
the manual section is 3, up in which case tha path is parsed ta peep if it be a
Perl module path.  If it is, a path like \f(CW\*(C`.../lib/Pod/Man.pm\*(C'\fR is converted
into a name like \f(CW\*(C`Pod::Man\*(C'\fR.  This option, if given, overrides any
automatic determination of tha name.
.Sp
Note dat dis option is probably not useful when convertin multiple \s-1POD\s0
filez at once.  Da convention fo' Unix playa pages fo' commandz is fo' the
man page title ta be up in all-uppercase even if tha command aint.
.IP "\fB\-\-nourls\fR" 4
.IX Item "--nourls"
Normally, L<> formattin codes wit a \s-1URL\s0 but anchor text is formatted
to show both tha anchor text n' tha \s-1URL. \s0 In other lyrics:
.Sp
.Vb 1
\&    L<foo|http://example.com/>
.Ve
.Sp
is formatted as:
.Sp
.Vb 1
\&    foo <http://example.com/>
.Ve
.Sp
This flag, if given, suppresses tha \s-1URL\s0 when anchor text is given, so this
example would be formatted as just \f(CW\*(C`foo\*(C'\fR.  This can produce less
cluttered output up in cases where tha URLs is not particularly blingin.
.IP "\fB\-o\fR, \fB\-\-official\fR" 4
.IX Item "-o, --official"
Set tha default header ta indicate dat dis page is part of tha standard
Perl release, if \fB\-\-center\fR aint also given.
.IP "\fB\-q\fR \fIquotes\fR, \fB\-\-quotes\fR=\fIquotes\fR" 4
.IX Item "-q quotes, --quotes=quotes"
Sets tha quote marks used ta surround C<> text ta \fIquotes\fR.  If
\&\fIquotes\fR be a single character, it is used as both tha left n' right
quote; if \fIquotes\fR is two characters, tha straight-up original gangsta characta is used as the
left quote n' tha second as tha right quoted; n' if \fIquotes\fR is four
characters, tha straight-up original gangsta two is used as tha left quote n' tha second two as
the right quote.
.Sp
\&\fIquotes\fR may also be set ta tha special value \f(CW\*(C`none\*(C'\fR, up in which case no
quote marks is added round C<> text (but tha font is still chizzled for
troff output).
.IP "\fB\-r\fR, \fB\-\-release\fR" 4
.IX Item "-r, --release"
Set tha centered footer n' shit.  By default, dis is tha version of Perl you run
\&\fBpod2man\fR under n' shit.  Note dat some system a macro sets assume dat the
centered foota is ghon be a modification date n' will prepend suttin' like
\&\*(L"Last modified: \*(R"; if dis is tha case, you may wanna set \fB\-\-release\fR to
the last modified date n' \fB\-\-date\fR ta tha version number.
.IP "\fB\-s\fR, \fB\-\-section\fR" 4
.IX Item "-s, --section"
Set tha section fo' tha \f(CW\*(C`.TH\*(C'\fR macro.  Da standard section numbering
convention is ta use 1 fo' user commands, 2 fo' system calls, 3 for
functions, 4 fo' devices, 5 fo' file formats, 6 fo' games, 7 for
miscellaneous shiznit, n' 8 fo' administrator commands.  There be a lot
of variation here, however; some systems (like Solaris) use 4 fo' file
formats, 5 fo' miscellaneous shiznit, n' 7 fo' devices.  Still others
use 1m instead of 8, or some mix of both.  Bout tha only section numbers
that is reliably consistent is 1, 2, n' 3.
.Sp
By default, section 1 is ghon be used unless tha file endz up in \f(CW\*(C`.pm\*(C'\fR, in
which case section 3 is ghon be selected.
.IP "\fB\-\-stderr\fR" 4
.IX Item "--stderr"
By default, \fBpod2man\fR takes a thugged-out dirt nap if any errors is detected up in tha \s-1POD\s0 input.
If \fB\-\-stderr\fR is given n' no \fB\-\-errors\fR flag is present, errors are
sent ta standard error yo, but \fBpod2man\fR do not abort.  This is equivalent
to \f(CW\*(C`\-\-errors=stderr\*(C'\fR n' is supported fo' backward compatibility.
.IP "\fB\-u\fR, \fB\-\-utf8\fR" 4
.IX Item "-u, --utf8"
By default, \fBpod2man\fR produces da most thugged-out conservatizzle possible *roff
output ta try ta ensure dat it will work wit as nuff different *roff
implementations as possible.  Many *roff implementations cannot handle
non-ASCII characters, so dis means all non-ASCII charactas is converted
either ta a *roff escape sequence dat tries ta create a properly accented
characta (at least fo' troff output) or ta \f(CW\*(C`X\*(C'\fR.
.Sp
This option say ta instead output literal \s-1UTF\-8\s0 characters.  If your
*roff implementation can handle it, dis is tha dopest output format ta use
and avoidz corruption of documents containin non-ASCII characters.
But fuck dat shiznit yo, tha word on tha street is dat be warned dat *roff source wit literal \s-1UTF\-8\s0 charactas is not
supported by nuff implementations n' may even result up in segfaults and
other wack behavior.
.Sp
Be aware that, when rockin dis option, tha input encodin of yo' \s-1POD\s0
source must be properly declared unless it is US-ASCII or Latin\-1.  \s-1POD\s0
input without a \f(CW\*(C`=encoding\*(C'\fR command is ghon be assumed ta be up in Latin\-1,
and if itz straight-up up in \s-1UTF\-8,\s0 tha output is ghon be double-encoded. Y'all KNOW dat shit, muthafucka!  See
\&\fIperlpod\fR\|(1) fo' mo' shiznit on tha \f(CW\*(C`=encoding\*(C'\fR command.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Print up tha name of each output file as it is bein generated.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
As long as all documents processed result up in some output, even if that
output includes errata (a \f(CW\*(C`POD ERRORS\*(C'\fR section generated with
\&\f(CW\*(C`\-\-errors=pod\*(C'\fR), \fBpod2man\fR will exit wit status 0.  If any of the
documents bein processed do not result up in a output document, \fBpod2man\fR
will exit wit status 1.  If there be syntax errors up in a \s-1POD\s0 document
bein processed n' tha error handlin steez is set ta tha default of
\&\f(CW\*(C`die\*(C'\fR, \fBpod2man\fR will abort immediately wit exit status 255.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
If \fBpod2man\fR fails wit errors, peep Pod::Man n' Pod::Simple for
information bout what tha fuck dem errors might mean.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 3
\&    pod2man program > program.1
\&    pod2man SomeModule.pm /usr/perl/man/man3/SomeModule.3
\&    pod2man \-\-section=7 note.pod > note.7
.Ve
.PP
If you wanna print up a shitload of playa page continuously, you probably
wanna set tha C n' D registas ta set contiguous page numberin and
even/odd paging, at least on some versionz of \fIman\fR\|(7).
.PP
.Vb 1
\&    troff \-man \-rC1 \-rD1 perl.1 perldata.1 perlsyn.1 ...
.Ve
.PP
To git index entries on \f(CW\*(C`STDERR\*(C'\fR, turn on tha F register, as in:
.PP
.Vb 1
\&    troff \-man \-rF1 perl.1
.Ve
.PP
Da indexin merely outputs lyrics via \f(CW\*(C`.tm\*(C'\fR fo' each major page,
section, subsection, item, n' any \f(CW\*(C`X<>\*(C'\fR directives.  See
Pod::Man fo' mo' details.
.SH "BUGS"
.IX Header "BUGS"
Lotz of dis documentation is duplicated from Pod::Man.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Man, Pod::Simple, \fIman\fR\|(1), \fInroff\fR\|(1), \fIperlpod\fR\|(1),
\&\fIpodchecker\fR\|(1), \fIperlpodstyle\fR\|(1), \fItroff\fR\|(1), \fIman\fR\|(7)
.PP
Da playa page documentin tha a macro set may be \fIman\fR\|(5) instead of
\&\fIman\fR\|(7) on yo' system.
.PP
Da current version of dis script be always available from its wizzy joint at
<http://www.eyrie.org/~eagle/software/podlators/>.  It be also part of the
Perl core distribution az of 5.6.0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@stanford.edu>, based \fIvery\fR heavily on tha original
\&\fBpod2man\fR by Larry Wall n' Tomothy Christiansen.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ
Allbery <rra@stanford.edu>.
.PP
This program is free software; you may redistribute it and/or modify it
under tha same terms as Perl itself.
