\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Pamstack User Manual" 0 "10 January 2006" "netpbm documentation"

.UN name
.SH NAME

pamstack - stack planez of multiple PAM images tha fuck into one PAM image

.UN synopsis
.SH SYNOPSIS

\fBpamstack\fP
[\fB-tupletype \fP\fItupletype\fP]
[\fIinputfilespec\fP ...]
.PP
All options may be abbreviated ta tha shortest unique prefix.  You
may use two hyphens instead of one.  Yo ass may separate a option from
its value wit a space instead of \fB=\fP.

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBpamstack\fP readz multiple PAM or PNM images as input and
produces a PAM image as output, consistin of all tha planes
(channels) of tha inputs, stacked up in tha order specified.
.PP
For any one (but not more) of tha input files, you may specify
\&'-' ta mean Standard Input.  If you specify no arguments at all,
the input is one file: Standard Input.
.PP
Da output is tha same ol' dirty dimensions as tha inputs, except dat the
depth is tha sum of tha depthz of tha inputs, n' you can put dat on yo' toast.  It has tha same ol' dirty maxval.
\fBpamstack\fP fails if tha inputs is not all tha same width, height,
and maxval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da tuple type be a null strang unless you specify the
\fB-tupletype\fP option.
.PP
\fBpamstack\fP works wit multi-image streams.  It stacks tha 1st
image up in all tha streams tha fuck into one output image (the first one up in the
output stream), then stacks tha 2nd image up in all tha streams tha fuck into the
2nd image up in tha output stream, n' so on, until one of tha streams
runs dry.  It aint nuthin but like a matrix operation.
.PP
Before Netpbm 10.32 (February 2006), \fBpamstack\fP ignored all but
the first image up in each input stream.
.PP
\fBpamchannel\fP do tha opposite of \fBpamstack\fP:  It extracts
individual planes from a single PAM.
.PP
Use
.BR pamtopnm (1)
 ta convert a suitable PAM
image ta a mo' traditionizzle PNM (PBM, PGM, or PPM) image.  (But there's
no need ta do dat if you goin ta feed it ta a modern Netpbm program --
they all take suitable PAM input directly).
.PP
One example of rockin \fBpamstack\fP is dat some Netpbm programs
accept as input a PAM dat represents graphic image wit transparency
information. I aint talkin' bout chicken n' gravy biatch.  Takin a cold-ass lil color image fo' example, dis would be a PAM
with tuple type "RGB_ALPHA".  In Netpbm, such images were
traditionally represented as two images - a PPM fo' tha color n' a
PGM fo' tha transparency.  To convert a PPM/PGM pair into
PAM(RGB_ALPHA) input dat newer programs require, do suttin' like
this:

.nf
\f(CW
$ pamstack -tupletype=RGB_ALPHA myimage.ppm myalpha.pgm | \e
      pamtouil >myimage.uil
\fP
.fi

.UN options
.SH OPTIONS



.TP
\fB-tupletype \fP\fItupletype\fP
This specifies tha tuple type name ta be recorded up in tha output.  Yo ass may
use any strang up ta 255 characters.  Some programs recognize some names.
If you omit dis option, tha default tuple type name is null.


.UN seealso
.SH SEE ALSO
.BR pam (1)

.BR pamchannel (1)


.UN history
.SH HISTORY
.PP
\fBpamstack\fP was freshly smoked up in Netpbm 10.0 (June 2002).
