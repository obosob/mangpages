'\" t
.\"     Title: git-remote
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-REMOTE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-remote \- manage set of tracked repositories
.SH "SYNOPSIS"
.sp
.nf
\fIgit remote\fR [\-v | \-\-verbose]
\fIgit remote add\fR [\-t <branch>] [\-m <master>] [\-f] [\-\-[no\-]tags] [\-\-mirror=<fetch|push>] <name> <url>
\fIgit remote rename\fR <old> <new>
\fIgit remote remove\fR <name>
\fIgit remote set\-head\fR <name> (\-a | \-\-auto | \-d | \-\-delete | <branch>)
\fIgit remote set\-branches\fR [\-\-add] <name> <branch>\&...
\fIgit remote set\-url\fR [\-\-push] <name> <newurl> [<oldurl>]
\fIgit remote set\-url \-\-add\fR [\-\-push] <name> <newurl>
\fIgit remote set\-url \-\-delete\fR [\-\-push] <name> <url>
\fIgit remote\fR [\-v | \-\-verbose] \fIshow\fR [\-n] <name>\&...
\fIgit remote prune\fR [\-n | \-\-dry\-run] <name>\&...
\fIgit remote\fR [\-v | \-\-verbose] \fIupdate\fR [\-p | \-\-prune] [(<group> | <remote>)\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
Manage tha set of repositories ("remotes") whose branches you track\&.
.SH "OPTIONS"
.PP
\-v, \-\-verbose
.RS 4
Be a lil mo' verbose n' show remote url afta name\&. NOTE: This must be placed between
remote
and
subcommand\&.
.RE
.SH "COMMANDS"
.sp
With no arguments, shows a list of existin remotes\&. Right back up in yo muthafuckin ass. Several subcommandz is available ta big-ass up operations on tha remotes\&.
.PP
\fIadd\fR
.RS 4
Addz a remote named <name> fo' tha repository at <url>\&. Da command
git fetch <name>
can then be used ta create n' update remote\-trackin branches <name>/<branch>\&.
.sp
With
\-f
option,
git fetch <name>
is run immediately afta tha remote shiznit is set up\&.
.sp
With
\-\-tags
option,
git fetch <name>
imports every last muthafuckin tag from tha remote repository\&.
.sp
With
\-\-no\-tags
option,
git fetch <name>
does not import tags from tha remote repository\&.
.sp
With
\-t <branch>
option, instead of tha default glob refspec fo' tha remote ta track all branches under the
refs/remotes/<name>/
namespace, a refspec ta track only
<branch>
is pimped\&. Yo ass can give mo' than one
\-t <branch>
to track multiple branches without grabbin all branches\&.
.sp
With
\-m <master>
option, a symbolic\-ref
refs/remotes/<name>/HEAD
is set up ta point at remote\(cqs
<master>
branch\&. Right back up in yo muthafuckin ass. See also tha set\-head command\&.
.sp
When a gangbangin' fetch mirror is pimped with
\-\-mirror=fetch, tha refs aint gonna be stored up in the
\fIrefs/remotes/\fR
namespace yo, but rather every last muthafuckin thang in
\fIrefs/\fR
on tha remote is ghon be directly mirrored into
\fIrefs/\fR
in tha local repository\&. This option only make sense up in bare repositories, cuz a gangbangin' fetch would overwrite any local commits\&.
.sp
When a push mirror is pimped with
\-\-mirror=push, then
git push
will always behave as if
\-\-mirror
was passed\&.
.RE
.PP
\fIrename\fR
.RS 4
Rename tha remote named <old> ta <new>\& fo' realz. All remote\-trackin branches n' configuration settings fo' tha remote is updated\&.
.sp
In case <old> n' <new> is tha same, n' <old> be a gangbangin' file under
$GIT_DIR/remotes
or
$GIT_DIR/branches, tha remote is converted ta tha configuration file format\&.
.RE
.PP
\fIremove\fR, \fIrm\fR
.RS 4
Remove tha remote named <name>\& fo' realz. All remote\-trackin branches n' configuration settings fo' tha remote is removed\&.
.RE
.PP
\fIset\-head\fR
.RS 4
Sets or deletes tha default branch (i\&.e\&. tha target of tha symbolic\-ref
refs/remotes/<name>/HEAD) fo' tha named remote\& yo. Havin a thugged-out default branch fo' a remote aint required yo, but allows tha name of tha remote ta be specified up in lieu of a specific branch\&. For example, if tha default branch for
origin
is set to
master, then
origin
may be specified wherever you would normally specify
origin/master\&.
.sp
With
\-d
or
\-\-delete, tha symbolic ref
refs/remotes/<name>/HEAD
is deleted\&.
.sp
With
\-a
or
\-\-auto, tha remote is queried ta determine its
HEAD, then tha symbolic\-ref
refs/remotes/<name>/HEAD
is set ta tha same branch\&. e\&.g\&., if tha remote
HEAD
is pointed at
next, "git remote set\-head origin \-a" will set tha symbolic\-ref
refs/remotes/origin/HEAD
to
refs/remotes/origin/next\&. This will only work if
refs/remotes/origin/next
already exists; if not it must be fetched first\&.
.sp
Use
<branch>
to set tha symbolic\-ref
refs/remotes/<name>/HEAD
explicitly\&. e\&.g\&., "git remote set\-head origin master" will set tha symbolic\-ref
refs/remotes/origin/HEAD
to
refs/remotes/origin/master\&. This will only work if
refs/remotes/origin/master
already exists; if not it must be fetched first\&.
.RE
.PP
\fIset\-branches\fR
.RS 4
Changes tha list of branches tracked by tha named remote\&. This can be used ta track a subset of tha available remote branches afta tha initial setup fo' a remote\&.
.sp
Da named branches is ghon be interpreted as if specified wit the
\-t
option on the
\fIgit remote add\fR
command line\&.
.sp
With
\-\-add, instead of replacin tha list of currently tracked branches, addz ta dat list\&.
.RE
.PP
\fIset\-url\fR
.RS 4
Changes URL remote points to\&. Right back up in yo muthafuckin ass. Sets first URL remote points ta matchin regex <oldurl> (first URL if no <oldurl> is given) ta <newurl>\&. If <oldurl> don\(cqt match any URL, error occurs n' not a god damn thang is chizzled\&.
.sp
With
\fI\-\-push\fR, push URLs is manipulated instead of fetch URLs\&.
.sp
With
\fI\-\-add\fR, instead of changin some URL, freshly smoked up URL be added\&.
.sp
With
\fI\-\-delete\fR, instead of changin some URL, all URLs matchin regex <url> is deleted\&. Tryin ta delete all non\-push URLs be a error\&.
.RE
.PP
\fIshow\fR
.RS 4
Gives some shiznit bout tha remote <name>\&.
.sp
With
\-n
option, tha remote headz is not queried first with
git ls\-remote <name>; cached shiznit is used instead\&.
.RE
.PP
\fIprune\fR
.RS 4
Deletes all stale remote\-trackin branches under <name>\&. These stale branches have already been removed from tha remote repository referenced by <name> yo, but is still locally available up in "remotes/<name>"\&.
.sp
With
\-\-dry\-run
option, report what tha fuck branches is ghon be pruned yo, but do not straight-up prune them\&.
.RE
.PP
\fIupdate\fR
.RS 4
Fetch thugged-out shiznit fo' a named set of remotes up in tha repository as defined by remotes\&.<group>\&. If a named crew aint specified on tha command line, tha configuration parameta remotes\&.default is ghon be used; if remotes\&.default aint defined, all remotes which aint gots tha configuration parameta remote\&.<name>\&.skipDefaultUpdate set ta legit is ghon be updated\&. (See
\fBgit-config\fR(1))\&.
.sp
With
\-\-prune
option, prune all tha remotes dat is updated\&.
.RE
.SH "DISCUSSION"
.sp
Da remote configuration be  bigged up  rockin tha remote\&.origin\&.url n' remote\&.origin\&.fetch configuration variables\&. (See \fBgit-config\fR(1))\&.
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Add a freshly smoked up remote, fetch, n' check up a funky-ass branch from it
.sp
.if n \{\
.RS 4
.\}
.nf
$ git remote
origin
$ git branch \-r
  origin/HEAD \-> origin/master
  origin/master
$ git remote add stagin git://git\&.kernel\&.org/\&.\&.\&./gregkh/staging\&.git
$ git remote
origin
staging
$ git fetch staging
\&.\&.\&.
From git://git\&.kernel\&.org/pub/scm/linux/kernel/git/gregkh/staging
 * [new branch]      masta     \-> staging/master
 * [new branch]      staging\-linus \-> staging/staging\-linus
 * [new branch]      staging\-next \-> staging/staging\-next
$ git branch \-r
  origin/HEAD \-> origin/master
  origin/master
  staging/master
  staging/staging\-linus
  staging/staging\-next
$ git checkout \-b stagin staging/master
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Imitate
\fIgit clone\fR
but track only selected branches
.sp
.if n \{\
.RS 4
.\}
.nf
$ mkdir project\&.git
$ cd project\&.git
$ git init
$ git remote add \-f \-t masta \-m masta origin git://example\&.com/git\&.git/
$ git merge origin
.fi
.if n \{\
.RE
.\}
.sp
.RE
.SH "SEE ALSO"
.sp
\fBgit-fetch\fR(1) \fBgit-branch\fR(1) \fBgit-config\fR(1)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
