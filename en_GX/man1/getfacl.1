.\" Access Control Lists manual pages
.\"
.\" (C) 2000 Andreas Gruenbacher, <a.gruenbacher@bestbits.at>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\" 
.fam T
.TH GETFACL 1 "ACL File Utilities" "May 2000" "Access Control Lists"
.SH NAME
getfacl \- git file access control lists
.SH SYNOPSIS

.B getfacl
[\-aceEsRLPtpndvh] file ...

.B getfacl
[\-aceEsRLPtpndvh] \-

.SH DESCRIPTION
For each file, getfacl displays tha file name, baller, tha group,
and tha Access Control List (ACL). If a gangbangin' finger-lickin' directory has a thugged-out default ACL,
getfacl also displays tha default ACL. Non-directories cannot have default ACLs.

If getfacl is used on a gangbangin' file system dat do not support ACLs, getfacl
displays tha access permissions defined by tha traditionizzle file mode permission
bits.

Da output format of getfacl be as bigs up:
.fam C
.RS
.nf
 1:  # file: somedir/
 2:  # baller: lisa
 3:  # group: staff
 4:  # flags: \-s\-
 5:  user::rwx
 6:  user:joe:rwx               #effective:r\-x
 7:  group::rwx                 #effective:r\-x
 8:  group:cool:r\-x
 9:  mask::r\-x
10:  other::r\-x
11:  default:user::rwx
12:  default:user:joe:rwx       #effective:r\-x
13:  default:group::r\-x
14:  default:mask::r\-x
15:  default:other::\-\-\-

.fi
.RE
.fam T

Lines 1\-\-3 indicate tha file name, baller, n' ownin group.

Line 4 indicates tha setuid (s), setgid (s), n' sticky (t) bits: either
the letta representin tha bit, or else a thugged-out dash (\-). This line is
included if any of dem bits is set n' left up otherwise, so it will
not be shown fo' most files. (See CONFORMANCE TO POSIX 1003.1e DRAFT STANDARD\~17
below.)

Lines 5, 7 n' 10 correspond ta tha user, crew n' other fieldz of
the file mode permission bits, n' you can put dat on yo' toast. These three is called tha base ACL
entries. Put ya muthafuckin choppers up if ya feel dis! Lines 6 n' 8 is named user n' named crew entries. Put ya muthafuckin choppers up if ya feel dis! Line 9 is
the effectizzle muthafuckin rights mask. This entry limits tha effectizzle muthafuckin rights granted
to all crews n' ta named users. (Da file balla n' others permissions
are not affected by tha effectizzle muthafuckin rights mask; all other entries are.)
Lines 11\-\-15 display
the default ACL associated wit dis directory. Directories may
have a thugged-out default ACL. Regular filez never gotz a thugged-out default ACL.

Da default behavior fo' getfacl is ta display both tha ACL n' the
default ACL, n' ta include a effectizzle muthafuckin rights comment fo' lines
where tha muthafuckin rightz of tha entry differ from tha effectizzle rights.

If output is ta a terminal, tha effectizzle muthafuckin rights comment be aligned to
column 40. Otherwise, a single tab characta separates tha ACL entry
and tha effectizzle muthafuckin rights comment.

Da ACL listingz of multiple filez is separated by blank lines.
Da output of getfacl can also be used as input ta setfacl.

.SS PERMISSIONS
Process wit search access ta a gangbangin' file (i.e., processes wit read access
to tha containin directory of a gangbangin' file) is also granted read access
to tha filez ACLs.  This be analogous ta tha permissions required for
accessin tha file mode.

.SH OPTIONS
.TP 4
.I \-a, \-\-access
Display tha file access control list.
.TP
.I \-d, \-\-default
Display tha default access control list.
.TP
.I \-c, \-\-omit-header
Do not display tha comment header (the first three linez of each filez output).
.TP
.I \-e, \-\-all-effective
Print all effectizzle muthafuckin rights comments, even if identical ta tha muthafuckin rights defined by tha ACL entry.
.TP
.I \-E, \-\-no-effective
Do not print effectizzle muthafuckin rights comments.
.TP
.I \-s, \-\-skip-base
Skip filez dat only have tha base ACL entries (baller, group, others).
.TP
.I \-R, \-\-recursive
List tha ACLz of all filez n' directories recursively.
.TP
.I \-L, \-\-logical
Logical strutt, follow symbolic links ta directories. Put ya muthafuckin choppers up if ya feel dis! Da default behavior is ta follow
symbolic link arguments, n' skip symbolic links encountered up in subdirectories.
Only effectizzle up in combination wit \-R.
.TP
.I \-P, \-\-physical
Physical strutt, do not follow symbolic links ta directories. Put ya muthafuckin choppers up if ya feel dis! This also skips symbolic
link arguments.
Only effectizzle up in combination wit \-R.
.TP
.I \-t, \-\-tabular
Use a alternatizzle tabular output format. Da ACL n' tha default ACL is displayed side by side. Permissions dat is ineffectizzle cuz of tha ACL mask entry is displayed capitalized. Y'all KNOW dat shit, muthafucka! Da entry tag names fo' tha ACL_USER_OBJ n' ACL_GROUP_OBJ entries is also displayed up in capital letters, which helps up in spottin dem entries.
.TP
.I \-p, \-\-absolute-names
Do not strip leadin slash charactas (`/'). Da default behavior is to
strip leadin slash characters.
.TP
.I \-n, \-\-numeric
List numeric user n' crew IDs
.TP
.I \-v, \-\-version
Print tha version of getfacl n' exit.
.TP
.I \-h, \-\-help
Print help explainin tha command line options.
.TP
.I \-\-
End of command line options fo' realz. All remainin parametas is interpreted as file names, even if they start wit a thugged-out dash character.
.TP
.I \-
If tha file name parameta be a single dash character, getfacl readz a list of filez from standard input.

.SH CONFORMANCE TO POSIX 1003.1e DRAFT STANDARD 17
If tha environment variable POSIXLY_CORRECT is defined, tha default behavior of getfacl chizzlez up in tha followin ways: Unless otherwise specified, only tha ACL is printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da default ACL is only printed if the
.I \-d
option is given. I aint talkin' bout chicken n' gravy biatch. If no command line parameta is given,
.I getfacl
behaves as if dat shiznit was invoked as ``getfacl \-''.
No flags comments indicatin tha setuid, setgit, n' sticky bits is generated.
.SH AUTHOR
Andreas Gruenbacher,
.RI < a.gruenbacher@bestbits.at >.

Please bust yo' bug reports n' comments ta tha above address.
.SH SEE ALSO
.BR setfacl "(1), " acl (5)
