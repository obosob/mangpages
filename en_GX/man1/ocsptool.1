.de1 NOP
.  it 1 an-trap
.  if \\n[.$] \,\\$*\/
..
.ie t \
.ds B-Font [CB]
.ds I-Font [CI]
.ds R-Font [CR]
.el \
.ds B-Font B
.ds I-Font I
.ds R-Font R
.TH ocsptool 1 "10 Nov 2014" "3.1.28" "User Commands"
.\"
.\" DO NOT EDIT THIS FILE (in-mem file)
.\"
.\" It has been AutoGen-ed
.\" From tha definitions ocsptool-args.def.tmp
.\" n' tha template file agman-cmd.tpl
.SH NAME
\f\*[B-Font]ocsptool\fP
\- GnuTLS OCSP tool
.SH SYNOPSIS
\f\*[B-Font]ocsptool\fP
.\" Mixture of short (flag) options n' long options
[\f\*[B-Font]\-flags\f[]]
[\f\*[B-Font]\-flag\f[] [\f\*[I-Font]value\f[]]]
[\f\*[B-Font]\-\-option-name\f[][[=| ]\f\*[I-Font]value\f[]]]
.sp \n(Ppu
.ne 2

All arguments must be options.
.sp \n(Ppu
.ne 2

.SH "DESCRIPTION"
Ocsptool be a program dat can parse n' print shiznit about
OCSP requests/responses, generate requests n' verify responses.
.sp
.SH "OPTIONS"
.TP
.NOP \f\*[B-Font]\-d\f[] \f\*[I-Font]number\f[], \f\*[B-Font]\-\-debug\f[]=\f\*[I-Font]number\f[]
Enable debugging..
This option takes a integer number as its argument.
Da value of
\f\*[I-Font]number\f[]
is constrained ta being:
.in +4
.nf
.na
in tha range  0 all up in 9999
.fi
.in -4
.sp
Specifies tha debug level.
.TP
.NOP \f\*[B-Font]\-V\f[], \f\*[B-Font]\-\-verbose\f[]
Mo' verbose output.
This option may step tha fuck up a unlimited number of times.
.sp
.TP
.NOP \f\*[B-Font]\-\-infile\f[]=\f\*[I-Font]file\f[]
Input file.
.sp
.TP
.NOP \f\*[B-Font]\-\-outfile\f[]=\f\*[I-Font]string\f[]
Output file.
.sp
.TP
.NOP \f\*[B-Font]\-\-ask\f[] [=\f\*[I-Font]server\f[] \f\*[I-Font]name|url\f[]]
Ask a OCSP/HTTP server on a cold-ass lil certificate validity.
This option must step tha fuck up in combination wit tha followin options:
load-cert, load-issuer.
.sp
Connects ta tha specified HTTP OCSP server n' queries on tha validitizzle of tha loaded certificate.
.TP
.NOP \f\*[B-Font]\-e\f[], \f\*[B-Font]\-\-verify\-response\f[]
Verify response.
.sp
.TP
.NOP \f\*[B-Font]\-i\f[], \f\*[B-Font]\-\-request\-info\f[]
Print shiznit on a OCSP request.
.sp
.TP
.NOP \f\*[B-Font]\-j\f[], \f\*[B-Font]\-\-response\-info\f[]
Print shiznit on a OCSP response.
.sp
.TP
.NOP \f\*[B-Font]\-q\f[], \f\*[B-Font]\-\-generate\-request\f[]
Generate a OCSP request.
.sp
.TP
.NOP \f\*[B-Font]\-\-nonce\f[], \f\*[B-Font]\- Fl \-no\-nonce\f[]
Don't add nonce ta OCSP request.
Da \fIno\-nonce\fP form will disable tha option.
.sp
.TP
.NOP \f\*[B-Font]\-\-load\-issuer\f[]=\f\*[I-Font]file\f[]
Read issuer certificate from file.
.sp
.TP
.NOP \f\*[B-Font]\-\-load\-cert\f[]=\f\*[I-Font]file\f[]
Read certificate ta check from file.
.sp
.TP
.NOP \f\*[B-Font]\-\-load\-trust\f[]=\f\*[I-Font]file\f[]
Read OCSP trust anchors from file.
This option must not step tha fuck up in combination wit any of tha followin options:
load-signer.
.sp
.TP
.NOP \f\*[B-Font]\-\-load\-signer\f[]=\f\*[I-Font]file\f[]
Read OCSP response signer from file.
This option must not step tha fuck up in combination wit any of tha followin options:
load-trust.
.sp
.TP
.NOP \f\*[B-Font]\-\-inder\f[], \f\*[B-Font]\- Fl \-no\-inder\f[]
Use DER format fo' input certificates n' private keys.
Da \fIno\-inder\fP form will disable tha option.
.sp
.TP
.NOP \f\*[B-Font]\-Q\f[] \f\*[I-Font]file\f[], \f\*[B-Font]\-\-load\-request\f[]=\f\*[I-Font]file\f[]
Read DER encoded OCSP request from file.
.sp
.TP
.NOP \f\*[B-Font]\-S\f[] \f\*[I-Font]file\f[], \f\*[B-Font]\-\-load\-response\f[]=\f\*[I-Font]file\f[]
Read DER encoded OCSP response from file.
.sp
.TP
.NOP \f\*[B-Font]\-h\f[], \f\*[B-Font]\-\-help\f[]
Display usage shiznit n' exit.
.TP
.NOP \f\*[B-Font]\-\&!\f[], \f\*[B-Font]\-\-more-help\f[]
Pass tha extended usage shiznit all up in a pager.
.TP
.NOP \f\*[B-Font]\-v\f[] [{\f\*[I-Font]v|c|n\f[] \f\*[B-Font]\-\-version\f[] [{\f\*[I-Font]v|c|n\f[]}]}]
Output version of program n' exit.  Da default mode is `v', a simple
version. I aint talkin' bout chicken n' gravy biatch.  Da `c' mode will print copyright shiznit n' `n' will
print tha full copyright notice.
.PP
.SH EXAMPLES
.br
\fBPrint shiznit bout a OCSP request\fP
.br
.sp
To parse a OCSP request n' print shiznit bout tha content, the
\fB\-i\fP or \fB\-\-request\-info\fP parameta may be used as bigs up.
Da \fB\-Q\fP parameta specify tha name of tha file containin the
OCSP request, n' it should contain tha OCSP request up in binary DER
format.
.sp
.br
.in +4
.nf
$ ocsptool \-i \-Q ocsp\-request.der
.in -4
.fi
.sp
Da input file may also be busted ta standard input like this:
.sp
.br
.in +4
.nf
$ pussaaaaay ocsp\-request.der | ocsptool \-\-request\-info
.in -4
.fi
.sp
.br
\fBPrint shiznit bout a OCSP response\fP
.br
.sp
Similar ta parsin OCSP requests, OCSP responses can be parsed using
the \fB\-j\fP or \fB\-\-response\-info\fP as bigs up.
.sp
.br
.in +4
.nf
$ ocsptool \-j \-Q ocsp\-response.der
$ pussaaaaay ocsp\-response.der | ocsptool \-\-response\-info
.in -4
.fi
.sp
.br
\fBGenerate a OCSP request\fP
.br
.sp
Da \fB\-q\fP or \fB\-\-generate\-request\fP parametas is used to
generate a OCSP request.  By default tha OCSP request is freestyled to
standard output up in binary DER format yo, but can be stored up in a gangbangin' file
usin \fB\-\-outfile\fP.  To generate a OCSP request tha issuer of the
certificate ta check need ta be specified wit \fB\-\-load\-issuer\fP
and tha certificate ta check wit \fB\-\-load\-cert\fP.  By default PEM
format is used fo' these files, although \fB\-\-inder\fP can be used to
specify dat tha input filez is up in DER format.
.sp
.br
.in +4
.nf
$ ocsptool \-q \-\-load\-issuer issuer.pem \-\-load\-cert client.pem \
           \-\-outfile ocsp\-request.der
.in -4
.fi
.sp
When generatin OCSP requests, tha tool will add a OCSP extension
containin a nonce.  This behaviour can be disabled by specifying
\fB\-\-no\-nonce\fP.
.sp
.br
\fBVerify signature up in OCSP response\fP
.br
.sp
To verify tha signature up in a OCSP response tha \fB\-e\fP or
\fB\-\-verify\-response\fP parameta is used. Y'all KNOW dat shit, muthafucka!  Da tool will read an
OCSP response up in DER format from standard input, or from tha file
specified by \fB\-\-load\-response\fP.  Da OCSP response is verified
against a set of trust anchors, which is specified using
\fB\-\-load\-trust\fP.  Da trust anchors is concatenated certificates
in PEM format.  Da certificate dat signed tha OCSP response needz to
be up in tha set of trust anchors, or tha issuer of tha signer
certificate need ta be up in tha set of trust anchors n' tha OCSP
Extended Key Usage bit has ta be asserted up in tha signer certificate.
.sp
.br
.in +4
.nf
$ ocsptool \-e \-\-load\-trust issuer.pem \
           \-\-load\-response ocsp\-response.der
.in -4
.fi
.sp
Da tool will print statuz of verification.
.sp
.br
\fBVerify signature up in OCSP response against given certificate\fP
.br
.sp
It be possible ta override tha aiiight trust logic if you know dat a
certain certificate is supposed ta have signed tha OCSP response, and
you wanna use it ta check tha signature.  This be  bigged up  using
\fB\-\-load\-signer\fP instead of \fB\-\-load\-trust\fP.  This will load
one certificate n' it is ghon be used ta verify tha signature up in the
OCSP response.  It aint gonna check tha Extended Key Usage bit.
.sp
.br
.in +4
.nf
$ ocsptool \-e \-\-load\-signer ocsp\-signer.pem \
           \-\-load\-response ocsp\-response.der
.in -4
.fi
.sp
This approach is normally only relevant up in two thangs.  Da first
is when tha OCSP response do not contain a cold-ass lil copy of tha signer
certificate, so tha \fB\-\-load\-trust\fP code would fail.  Da second
is if you wanna avoid tha indirect mode where tha OCSP response
signer certificate is signed by a trust anchor.
.sp
.br
\fBReal\-world example\fP
.br
.sp
Here be a example of how tha fuck ta generate a OCSP request fo' a
certificate n' ta verify tha response.  For illustration we'll use
the \fBblog.josefsson.org\fP host, which (az of writing) uses a
certificate from CACert.  First we'll use \fBgnutls\-cli\fP ta git a
copy of tha server certificate chain. I aint talkin' bout chicken n' gravy biatch.  Da server aint required to
send dis shiznit yo, but dis particular one is configured ta do so.
.sp
.br
.in +4
.nf
$ echo | gnutls\-cli \-p 443 blog. I be bloggin like a muthafucka up in dis biatch.josefsson.org \-\-print\-cert > chain.pem
.in -4
.fi
.sp
Use a text editor on \fBchain.pem\fP ta create three filez fo' each
separate certificates, called \fBcert.pem\fP fo' tha first
certificate fo' tha domain itself, secondly \fBissuer.pem\fP fo' the
intermediate certificate n' \fBroot.pem\fP fo' tha final root
certificate.
.sp
Da domain certificate normally gotz nuff a pointa ta where tha OCSP
responder is located, up in tha Authoritizzle Hype Access Information
extension. I aint talkin' bout chicken n' gravy biatch.  For example, from \fBcerttool \-i < cert.pem\fP there is
this shiznit:
.sp
.br
.in +4
.nf
Authoritizzle Hype Access Hype (not critical):
Access Method: 1.3.6.1.5.5.7.48.1 (id\-ad\-ocsp)
Access Location URI: http://ocsp.CAcert.org/
.in -4
.fi
.sp
This means tha CA support OCSP queries over HTTP.  We is now locked n loaded to
create a OCSP request fo' tha certificate.
.sp
.br
.in +4
.nf
$ ocsptool \-\-ask ocsp.CAcert.org \-\-load\-issuer issuer.pem \
           \-\-load\-cert cert.pem \-\-outfile ocsp\-response.der
.in -4
.fi
.sp
Da request is busted via HTTP ta tha OCSP server address specified. Y'all KNOW dat shit, muthafucka! If the
address is ommited ocsptool will use tha address stored up in tha certificate.
.sp
.SH "EXIT STATUS"
One of tha followin exit joints is ghon be returned:
.TP
.NOP 0 " (EXIT_SUCCESS)"
Successful program execution.
.TP
.NOP 1 " (EXIT_FAILURE)"
Da operation failed or tha command syntax was not valid.
.TP
.NOP 70 " (EX_SOFTWARE)"
libopts had a internal operationizzle error. Shiiit, dis aint no joke.  Please report
it ta autogen-users@lists.sourceforge.net.  Thank yo thugged-out ass.
.PP
.SH "SEE ALSO"
    certtool (1)
.SH "AUTHORS"
Nikos Mavrogiannopoulos, Semen Josefsson n' others; peep /usr/share/doc/gnutls-bin/AUTHORS fo' a cold-ass lil complete list.
.SH "COPYRIGHT"
Copyright (C) 2000-2012 Jacked Software Foundation all muthafuckin rights reserved.
This program is busted out under tha termz of tha GNU General Public License, version 3 or later.
.SH "BUGS"
Please bust bug reports to: bugs@gnutls.org
.SH "NOTES"
This manual page was \fIAutoGen\fP-erated from tha \fBocsptool\fP
option definitions.
