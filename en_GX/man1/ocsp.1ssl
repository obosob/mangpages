.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OCSP 1"
.TH OCSP 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ocsp \- Online Certificate Status Protocol utility
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBocsp\fR
[\fB\-out file\fR]
[\fB\-issuer file\fR]
[\fB\-cert file\fR]
[\fB\-serial n\fR]
[\fB\-signer file\fR]
[\fB\-signkey file\fR]
[\fB\-sign_other file\fR]
[\fB\-no_certs\fR]
[\fB\-req_text\fR]
[\fB\-resp_text\fR]
[\fB\-text\fR]
[\fB\-reqout file\fR]
[\fB\-respout file\fR]
[\fB\-reqin file\fR]
[\fB\-respin file\fR]
[\fB\-nonce\fR]
[\fB\-no_nonce\fR]
[\fB\-url \s-1URL\s0\fR]
[\fB\-host host:n\fR]
[\fB\-path\fR]
[\fB\-CApath dir\fR]
[\fB\-CAfile file\fR]
[\fB\-trusted_first\fR]
[\fB\-VAfile file\fR]
[\fB\-validity_period n\fR]
[\fB\-status_age n\fR]
[\fB\-noverify\fR]
[\fB\-verify_other file\fR]
[\fB\-trust_other\fR]
[\fB\-no_intern\fR]
[\fB\-no_signature_verify\fR]
[\fB\-no_cert_verify\fR]
[\fB\-no_chain\fR]
[\fB\-no_cert_checks\fR]
[\fB\-port num\fR]
[\fB\-index file\fR]
[\fB\-CA file\fR]
[\fB\-rsigner file\fR]
[\fB\-rkey file\fR]
[\fB\-rutha file\fR]
[\fB\-resp_no_certs\fR]
[\fB\-nmin n\fR]
[\fB\-ndays n\fR]
[\fB\-resp_key_id\fR]
[\fB\-nrequest n\fR]
[\fB\-md5|\-sha1|...\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da Online Certificate Status Protocol (\s-1OCSP\s0) enablez applications to
determine tha (revocation) state of a identified certificate (\s-1RFC 2560\s0).
.PP
Da \fBocsp\fR command performs nuff common \s-1OCSP\s0 tasks. Well shiiiit, it can be used
to print up requests n' responses, create requests n' bust queries
to a \s-1OCSP\s0 responder n' behave like a mini \s-1OCSP\s0 server itself.
.SH "OCSP CLIENT OPTIONS"
.IX Header "OCSP CLIENT OPTIONS"
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
specify output filename, default is standard output.
.IP "\fB\-issuer filename\fR" 4
.IX Item "-issuer filename"
This specifies tha current issuer certificate. This option can be used
multiple times. Da certificate specified up in \fBfilename\fR must be in
\&\s-1PEM\s0 format. This option \fB\s-1MUST\s0\fR come before any \fB\-cert\fR options.
.IP "\fB\-cert filename\fR" 4
.IX Item "-cert filename"
Add tha certificate \fBfilename\fR ta tha request. Da issuer certificate
is taken from tha previous \fBissuer\fR option, or a error occurs if no
issuer certificate is specified.
.IP "\fB\-serial num\fR" 4
.IX Item "-serial num"
Same as tha \fBcert\fR option except tha certificate wit serial number
\&\fBnum\fR be added ta tha request. Da serial number is interpreted as a
decimal integer unless preceded by \fB0x\fR. Negatizzle integers can also
be specified by precedin tha value by a \fB\-\fR sign.
.IP "\fB\-signer filename\fR, \fB\-signkey filename\fR" 4
.IX Item "-signer filename, -signkey filename"
Sign tha \s-1OCSP\s0 request rockin tha certificate specified up in tha \fBsigner\fR
option n' tha private key specified by tha \fBsignkey\fR option. I aint talkin' bout chicken n' gravy biatch. If
the \fBsignkey\fR option aint present then tha private key is read
from tha same file as tha certificate. If neither option is specified then
the \s-1OCSP\s0 request aint signed.
.IP "\fB\-sign_other filename\fR" 4
.IX Item "-sign_other filename"
Additionizzle certificates ta include up in tha signed request.
.IP "\fB\-nonce\fR, \fB\-no_nonce\fR" 4
.IX Item "-nonce, -no_nonce"
Add a \s-1OCSP\s0 nonce extension ta a request or disable \s-1OCSP\s0 nonce addition.
Normally if a \s-1OCSP\s0 request is input rockin tha \fBrespin\fR option no
nonce be added: rockin tha \fBnonce\fR option will force addizzle of a nonce.
If a \s-1OCSP\s0 request is bein pimped (usin \fBcert\fR n' \fBserial\fR options)
a nonce be automatically added specifyin \fBno_nonce\fR overrides all dis bullshit.
.IP "\fB\-req_text\fR, \fB\-resp_text\fR, \fB\-text\fR" 4
.IX Item "-req_text, -resp_text, -text"
print up tha text form of tha \s-1OCSP\s0 request, response or both respectively.
.IP "\fB\-reqout file\fR, \fB\-respout file\fR" 4
.IX Item "-reqout file, -respout file"
write up tha \s-1DER\s0 encoded certificate request or response ta \fBfile\fR.
.IP "\fB\-reqin file\fR, \fB\-respin file\fR" 4
.IX Item "-reqin file, -respin file"
read \s-1OCSP\s0 request or response file from \fBfile\fR. These option is ignored
if \s-1OCSP\s0 request or response creation is implied by other options (for example
with \fBserial\fR, \fBcert\fR n' \fBhost\fR options).
.IP "\fB\-url responder_url\fR" 4
.IX Item "-url responder_url"
specify tha responder \s-1URL.\s0 Both \s-1HTTP\s0 n' \s-1HTTPS \s0(\s-1SSL/TLS\s0) URLs can be specified.
.IP "\fB\-host hostname:port\fR, \fB\-path pathname\fR" 4
.IX Item "-host hostname:port, -path pathname"
if tha \fBhost\fR option is present then tha \s-1OCSP\s0 request is busted ta tha host
\&\fBhostname\fR on port \fBport\fR. \fBpath\fR specifies tha \s-1HTTP\s0 path name ta use
or \*(L"/\*(R" by default.
.IP "\fB\-CAfile file\fR, \fB\-CApath pathname\fR" 4
.IX Item "-CAfile file, -CApath pathname"
file or pathname containin trusted \s-1CA\s0 certificates. These is used ta verify
the signature on tha \s-1OCSP\s0 response.
.IP "\fB\-trusted_first\fR" 4
.IX Item "-trusted_first"
Use certificates up in \s-1CA\s0 file or \s-1CA\s0 directory over certificates provided
in tha response or residin up in other certificates file when buildin tha trust
chain ta verify responder certificate.
This is mainly useful up in environments wit Bridge \s-1CA\s0 or Cross-Certified CAs.
.IP "\fB\-verify_other file\fR" 4
.IX Item "-verify_other file"
file containin additionizzle certificates ta search when attemptin ta locate
the \s-1OCSP\s0 response signin certificate. Right back up in yo muthafuckin ass. Some respondaz omit tha actual signer's
certificate from tha response: dis option can be used ta supply tha necessary
certificate up in such cases.
.IP "\fB\-trust_other\fR" 4
.IX Item "-trust_other"
the certificates specified by tha \fB\-verify_other\fR option should be explicitly
trusted n' no additionizzle checks is ghon be performed on em. This is useful
when tha complete responder certificate chain aint available or trustin a
root \s-1CA\s0 aint appropriate.
.IP "\fB\-VAfile file\fR" 4
.IX Item "-VAfile file"
file containin explicitly trusted responder certificates. Equivalent ta the
\&\fB\-verify_other\fR n' \fB\-trust_other\fR options.
.IP "\fB\-noverify\fR" 4
.IX Item "-noverify"
don't attempt ta verify tha \s-1OCSP\s0 response signature or tha nonce joints, n' you can put dat on yo' toast. This
option will normally only be used fo' debuggin since it disablez all verification
of tha respondaz certificate.
.IP "\fB\-no_intern\fR" 4
.IX Item "-no_intern"
ignore certificates contained up in tha \s-1OCSP\s0 response when searchin fo' the
signers certificate. With dis option tha signers certificate must be specified
with either tha \fB\-verify_other\fR or \fB\-VAfile\fR options.
.IP "\fB\-no_signature_verify\fR" 4
.IX Item "-no_signature_verify"
don't check tha signature on tha \s-1OCSP\s0 response. Right back up in yo muthafuckin ass. Since dis option tolerates invalid
signatures on \s-1OCSP\s0 responses it will normally only be used fo' testin purposes.
.IP "\fB\-no_cert_verify\fR" 4
.IX Item "-no_cert_verify"
don't verify tha \s-1OCSP\s0 response signers certificate at all. Right back up in yo muthafuckin ass. Since dis option allows
the \s-1OCSP\s0 response ta be signed by any certificate it should only be used for
testin purposes.
.IP "\fB\-no_chain\fR" 4
.IX Item "-no_chain"
do not use certificates up in tha response as additionizzle untrusted \s-1CA\s0
certificates.
.IP "\fB\-no_cert_checks\fR" 4
.IX Item "-no_cert_checks"
don't big-ass up any additionizzle checks on tha \s-1OCSP\s0 response signers certificate.
That is do not make any checks ta peep if tha signers certificate be authorised
to provide tha necessary status shiznit: as a result dis option should
only be used fo' testin purposes.
.IP "\fB\-validity_period nsec\fR, \fB\-status_age age\fR" 4
.IX Item "-validity_period nsec, -status_age age"
these options specify tha range of times, up in seconds, which is ghon be tolerated
in a \s-1OCSP\s0 response. Each certificate status response includes a \fBnotBefore\fR time and
an optionizzle \fBnotAfter\fR time. Da current time should fall between these two joints yo, but
the interval between tha two times may be only all dem seconds. In practice tha \s-1OCSP\s0
responder n' clients clocks may not be precisely synchronised n' so such a cold-ass lil check
may fail. To avoid dis tha \fB\-validity_period\fR option can be used ta specify an
acceptable error range up in seconds, tha default value is 5 minutes.
.Sp
If tha \fBnotAfter\fR time is omitted from a response then dis means dat freshly smoked up status
information is immediately available. In dis case tha age of tha \fBnotBefore\fR field
is checked ta peep it aint olda than \fBage\fR secondz old. Y'all KNOW dat shit, muthafucka! By default dis additional
check aint performed.
.IP "\fB\-md5|\-sha1|\-sha256|\-ripemod160|...\fR" 4
.IX Item "-md5|-sha1|-sha256|-ripemod160|..."
this option sets digest algorithm ta use fo' certificate identification
in tha \s-1OCSP\s0 request. By default \s-1SHA\-1\s0 is used. Y'all KNOW dat shit, muthafucka! See openssl dgst \-h output for
the list of available algorithms.
.SH "OCSP SERVER OPTIONS"
.IX Header "OCSP SERVER OPTIONS"
.IP "\fB\-index indexfile\fR" 4
.IX Item "-index indexfile"
\&\fBindexfile\fR be a text index file up in \fBca\fR format containin certificate revocation
information.
.Sp
If tha \fBindex\fR option is specified tha \fBocsp\fR utilitizzle is up in responder mode, otherwise
it is up in client mode. Da request(s) tha responder processes can be either specified on
the command line (usin \fBissuer\fR n' \fBserial\fR options), supplied up in a gangbangin' file (usin the
\&\fBrespin\fR option) or via external \s-1OCSP\s0 clients (if \fBport\fR or \fBurl\fR is specified).
.Sp
If tha \fBindex\fR option is present then tha \fB\s-1CA\s0\fR n' \fBrsigner\fR options must also be
present.
.IP "\fB\-CA file\fR" 4
.IX Item "-CA file"
\&\s-1CA\s0 certificate correspondin ta tha revocation shiznit up in \fBindexfile\fR.
.IP "\fB\-rsigner file\fR" 4
.IX Item "-rsigner file"
Da certificate ta sign \s-1OCSP\s0 responses with.
.IP "\fB\-rutha file\fR" 4
.IX Item "-rutha file"
Additionizzle certificates ta include up in tha \s-1OCSP\s0 response.
.IP "\fB\-resp_no_certs\fR" 4
.IX Item "-resp_no_certs"
Don't include any certificates up in tha \s-1OCSP\s0 response.
.IP "\fB\-resp_key_id\fR" 4
.IX Item "-resp_key_id"
Identify tha signer certificate rockin tha key \s-1ID,\s0 default is ta use tha subject name.
.IP "\fB\-rkey file\fR" 4
.IX Item "-rkey file"
Da private key ta sign \s-1OCSP\s0 responses with: if not present tha file specified up in the
\&\fBrsigner\fR option is used.
.IP "\fB\-port portnum\fR" 4
.IX Item "-port portnum"
Port ta listen fo' \s-1OCSP\s0 requests on. I aint talkin' bout chicken n' gravy biatch. Da port may also be specified rockin tha \fBurl\fR
option.
.IP "\fB\-nrequest number\fR" 4
.IX Item "-nrequest number"
Da \s-1OCSP\s0 server will exit afta receivin \fBnumber\fR requests, default unlimited.
.IP "\fB\-nmin minutes\fR, \fB\-ndays days\fR" 4
.IX Item "-nmin minutes, -ndays days"
Number of minutes or minutes when fresh revocation shiznit be available: used up in the
\&\fBnextUpdate\fR field. Y'all KNOW dat shit, muthafucka! If neither option is present then tha \fBnextUpdate\fR field is 
omitted meanin fresh revocation shiznit is immediately available.
.SH "OCSP Response verification."
.IX Header "OCSP Response verification."
\&\s-1OCSP\s0 Response bigs up tha rulez specified up in \s-1RFC2560.\s0
.PP
Initially tha \s-1OCSP\s0 responder certificate is located n' tha signature on
the \s-1OCSP\s0 request checked rockin tha responder certificatez hood key.
.PP
Then a aiiight certificate verify is performed on tha \s-1OCSP\s0 responder certificate
buildin up a cold-ass lil certificate chain up in tha process. Da locationz of tha trusted
certificates used ta build tha chain can be specified by tha \fBCAfile\fR
and \fBCApath\fR options or they is ghon be looked fo' up in tha standard OpenSSL
certificates directory.
.PP
If tha initial verify fails then tha \s-1OCSP\s0 verify process halts wit an
error.
.PP
Otherwise tha issuin \s-1CA\s0 certificate up in tha request is compared ta tha \s-1OCSP\s0
responder certificate: if there be a match then tha \s-1OCSP\s0 verify succeeds.
.PP
Otherwise tha \s-1OCSP\s0 responder certificatez \s-1CA\s0 is checked against tha issuing
\&\s-1CA\s0 certificate up in tha request. If there be a match n' tha OCSPSigning
extended key usage is present up in tha \s-1OCSP\s0 responder certificate then the
\&\s-1OCSP\s0 verify succeeds.
.PP
Otherwise tha root \s-1CA\s0 of tha \s-1OCSP\s0 respondaz \s-1CA\s0 is checked ta peep if it
is trusted fo' \s-1OCSP\s0 signing. If it is tha \s-1OCSP\s0 verify succeeds.
.PP
If none of these checks is successful then tha \s-1OCSP\s0 verify fails.
.PP
What dis effectively means if dat if tha \s-1OCSP\s0 responder certificate is
authorised directly by tha \s-1CA\s0 it is issuin revocation shiznit about
(and it is erectly configured) then verification will succeed.
.PP
If tha \s-1OCSP\s0 responder be a \*(L"global responder\*(R" which can give details about
multiple CAs n' has its own separate certificate chain then its root
\&\s-1CA\s0 can be trusted fo' \s-1OCSP\s0 signing. For example:
.PP
.Vb 1
\& openssl x509 \-in ocspCA.pem \-addtrust OCSPSignin \-out trustedCA.pem
.Ve
.PP
Alternatively tha responder certificate itself can be explicitly trusted
with tha \fB\-VAfile\fR option.
.SH "NOTES"
.IX Header "NOTES"
As noted, most of tha verify options is fo' testin or debuggin purposes.
Normally only tha \fB\-CApath\fR, \fB\-CAfile\fR n' (if tha responder be a 'global
\&\s-1VA\s0') \fB\-VAfile\fR options need ta be used.
.PP
Da \s-1OCSP\s0 server is only useful fo' test n' demonstration purposes: it is
not straight-up usable as a gangbangin' full \s-1OCSP\s0 responder n' shit. Well shiiiit, it gotz nuff only a hella
simple \s-1HTTP\s0 request handlin n' can only handle tha \s-1POST\s0 form of \s-1OCSP\s0
queries. Put ya muthafuckin choppers up if ya feel dis! Well shiiiit, it also handlez requests serially meanin it cannot respond to
new requests until it has processed tha current one. Da text index file
format of revocation be also inefficient fo' big-ass quantitizzlez of revocation
data.
.PP
It be possible ta run tha \fBocsp\fR application up in responder mode via a \s-1CGI\s0
script rockin tha \fBrespin\fR n' \fBrespout\fR options.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Smoke a \s-1OCSP\s0 request n' write it ta a gangbangin' file:
.PP
.Vb 1
\& openssl ocsp \-issuer issuer.pem \-cert c1.pem \-cert c2.pem \-reqout req.der
.Ve
.PP
Send a query ta a \s-1OCSP\s0 responder wit \s-1URL\s0 http://ocsp.myhost.com/ save tha 
response ta a gangbangin' file n' print it up in text form
.PP
.Vb 2
\& openssl ocsp \-issuer issuer.pem \-cert c1.pem \-cert c2.pem \e
\&     \-url http://ocsp.myhost.com/ \-resp_text \-respout resp.der
.Ve
.PP
Read up in a \s-1OCSP\s0 response n' print up text form:
.PP
.Vb 1
\& openssl ocsp \-respin resp.der \-text
.Ve
.PP
\&\s-1OCSP\s0 server on port 8888 rockin a standard \fBca\fR configuration, n' a separate
responder certificate fo' realz. All requests n' responses is printed ta a gangbangin' file.
.PP
.Vb 2
\& openssl ocsp \-index demoCA/index.txt \-port 8888 \-rsigner rcert.pem \-CA demoCA/cacert.pem
\&        \-text \-out log.txt
.Ve
.PP
As above but exit afta processin one request:
.PP
.Vb 2
\& openssl ocsp \-index demoCA/index.txt \-port 8888 \-rsigner rcert.pem \-CA demoCA/cacert.pem
\&     \-nrequest 1
.Ve
.PP
Query status shiznit rockin internally generated request:
.PP
.Vb 2
\& openssl ocsp \-index demoCA/index.txt \-rsigner rcert.pem \-CA demoCA/cacert.pem
\&     \-issuer demoCA/cacert.pem \-serial 1
.Ve
.PP
Query status shiznit rockin request read from a gangbangin' file, write response ta a
second file.
.PP
.Vb 2
\& openssl ocsp \-index demoCA/index.txt \-rsigner rcert.pem \-CA demoCA/cacert.pem
\&     \-reqin req.der \-respout resp.der
.Ve
