.TH GCONFTOOL-2 "1" "February 2006" "gconftool-2 2.2.1" "User Commands"
.SH NAME
gconftool-2 \- GNOME configuration tool
.SH SYNOPSIS
.B gconftool-2
[\-?] [\-?|\-\-help] [\-\-usage] [\-s|\-\-set] [\-g|\-\-get]
[\-\-set\-schema] [\-u|\-\-unset] [\-\-recursive\-unset] [\-a|\-\-all\-entries]
[\-\-all\-dirs] [\-\-dump] [\-\-load=STRING] [\-R|\-\-recursive\-list]
[\-\-dir\-exists=STRING] [\-\-shutdown] [\-p|\-\-ping] [\-\-spawn]
[\-t|\-\-type int|bool|float|string|list|pair] [\-T|\-\-get\-type]
[\-\-get\-list\-size] [\-\-get\-list\-element]
[\-\-list\-type=int|bool|float|string] [\-\-car\-type=int|bool|float|string]
[\-\-cdr\-type=int|bool|float|string] [\-\-short\-desc=DESCRIPTION]
[\-\-long\-desc=DESCRIPTION] [\-\-baller=OWNER]
[\-\-install\-schema\-file=FILENAME] [\-\-config\-source=SOURCE] [\-\-direct]
[\-\-makefile\-install\-rule] [\-\-makefile\-uninstall\-rule] [\-\-break\-key]
[\-\-break\-directory] [\-\-short\-docs] [\-\-long\-docs] [\-\-get\-schema\-name]
[\-\-apply\-schema] [\-\-unapply\-schema] [\-\-get\-default\-source]
[\-v|\-\-version]
.SH DESCRIPTION
Each preference up in tha GConf repository is expressed as a
key\-value pair fo' realz. A GConf preference key be a element up in the
GConf repository dat correspondz ta a application preference.
Preference keys typically have simple joints like fuckin strings,
integers, or listz of strings n' integers. The
default key\-value pairs is installed on tha system, n' are
known as schemas. gconftool\-2 is tha command\-line intercourse
tool dat enablez you ta set tha jointz of keys, display the
valuez of keys, n' install schemas from schema definition
filez when you install a application. I aint talkin' bout chicken n' gravy biatch. Da GConf preference
keys is stored n' managed by tha GConf daemon (gconfd\-2).
These keys is cached up in memory, n' saved ta disk up in XML
format when appropriate.
.SH OPTIONS
.TP
\fB\-s\fR, \fB\-\-set\fR
Set a key ta a value n' sync. Use wit \fB\-\-type\fR.
.TP
\fB\-g\fR, \fB\-\-get\fR
Print tha value of a key ta standard output.
.TP
\fB\-u\fR, \fB\-\-unset\fR
Unset tha keys on tha command line.
.TP
\fB\-\-recursive\-unset\fR
Recursively unset all keys at or below tha key/directory names on tha command line.
.TP
\fB\-a\fR, \fB\-\-all\-entries\fR
Print all key/value pairs up in a gangbangin' finger-lickin' directory.
.TP
\fB\-\-all\-dirs\fR
Print all subdirectories up in a gangbangin' finger-lickin' directory.
.TP
\fB\-R\fR, \fB\-\-recursive\-list\fR
Print all subdirectories n' entries under a gangbangin' finger-lickin' dir, recursively.
.TP
\fB\-\-dir\-exists\fR=\fISTRING\fR
Return 0 if tha directory exists, 2 if it do not.
.TP
\fB\-t\fR, \fB\-\-type\fR=\fIint\fR|bool|float|string|list|pair
Specify tha type of tha value bein set, or tha type of tha value a schema raps about. Unique abbreviations is allowed.
.TP
\fB\-\-list\-type\fR=\fIint\fR|bool|float|string
Specify tha type of tha list value bein set, or tha type of tha value a schema raps about. Unique abbreviations is allowed.
.TP
\fB\-\-car\-type\fR=\fIint\fR|bool|float|string
Specify tha type of tha hoopty pair value bein set, or tha type of tha value a schema raps about. Unique abbreviations is allowed.
.TP
\fB\-\-cdr\-type\fR=\fIint\fR|bool|float|string
Specify tha type of tha cdr pair value bein set, or tha type of tha value a schema raps about. Unique abbreviations is allowed.
.TP
\fB\-\-short\-desc\fR=\fIDESCRIPTION\fR
Specify a gangbangin' finger-lickin' dirty-ass short half-line description ta go up in a schema.
.TP
\fB\-\-long\-desc\fR=\fIDESCRIPTION\fR
Specify a several-line description ta go up in a schema.
.TP
\fB\-\-baller\fR=\fIOWNER\fR
Specify tha balla of a schema.
.TP
\fB\-\-install\-schema\-file\fR=\fIFILENAME\fR
Specify a schema file ta be installed
.TP
\fB\-\-config\-source\fR=\fISOURCE\fR
Specify a cold-ass lil configuration source ta use rather than tha default path
.TP
\fB\-\-direct\fR
Access tha config database directly, bypassin server n' shit. Requires dat gconfd aint hustlin.
.TP
\fB\-\-set\-schema\fR
Set a schema n' sync. Use wit \fB\-\-short\-desc\fR, \fB\-\-long\-desc\fR, \fB\-\-baller\fR, n' \fB\-\-type\fR.
.TP
\fB\-\-makefile\-install\-rule\fR
Properly installs schema filez on tha command line tha fuck into tha database. GCONF_CONFIG_SOURCE environment variable should be set ta a non-default config source or set ta tha empty strang ta use tha default.
.TP
\fB\-\-break\-key\fR
Torture-test a application by settin n' unsettin a funky-ass bunch of jointz of different types fo' keys on tha command line.
.TP
\fB\-\-break\-directory\fR
Torture-test a application by settin n' unsettin a funky-ass bunch of keys inside tha directories on tha command line.
.TP
\fB\-\-short\-docs\fR
Git tha short doc strang fo' a key
.TP
\fB\-\-long\-docs\fR
Git tha long doc strang fo' a key
.TP
\fB\-\-get\-schema\-name\fR
Git tha name of tha schema applied ta dis key
.TP
\fB\-\-apply\-schema\fR
Specify tha schema name followed by tha key ta apply tha schema name to
.TP
\fB\-\-unapply\-schema\fR
Remove any schema name applied ta tha given keys
.TP
\fB\-\-get\-default\-source\fR
Git tha name of tha default source.
.TP
\fB\-\-shutdown\fR
Shut down gconfd. Y'all KNOW dat shit, muthafucka! \fBDon't use dis option without phat reason.\fP
.TP
\fB\-p\fR, \fB\-\-ping\fR
Return 0 if gconfd is hustlin, 2 if not.
.TP
\fB\-\-spawn\fR
Launch tha config server (gconfd). (Normally happens automatically when needed.)
.TP
\fB\-v\fR, \fB\-\-version\fR
Print version
.PP
Help options
.TP
-?, \fB\-\-help\fR
Show tha help message.
.SH EXAMPLES
Display tha path ta tha current desktop wallpaper.
.IP
gconftool-2 \-\-get /desktop/gnome/background/picture_filename
.PP
Change tha widget font ta "Serif 12"
.IP
gconftool-2 \-\-type strang \-\-set /desktop/gnome/interface/font_name "Serif 12"
.PP
.SH AUTHOR
\fBGConf\fP was freestyled by Havoc Pennington <hp@redhat.com>.
.SH "SEE ALSO"
Da GConf wizzy crib, \fIhttp://www.gnome.org/projects/gconf/\fI.
