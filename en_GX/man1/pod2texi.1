.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "POD2TEXI 1"
.TH POD2TEXI 1 "2013-02-22" "perl v5.16.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
pod2texi \- convert Pod ta Texinfo
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  pod2texi [OPTION]... POD...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Translate Pod file(s) ta Texinfo.  There is two basic modes of
operation. I aint talkin' bout chicken n' gravy biatch.  First, by default, each pod is translated ta a standalone
Texinfo manual.
.PP
Second, if \f(CW\*(C`\-\-base\-level\*(C'\fR is set higher than 0, each pod is translated
to a gangbangin' file suitable fo' \f(CW@include\fR, n' one mo' file wit all the
\&\f(CW@include\fRs is generated, intended ta be \f(CW@include\fRd up in turn within a
hand-written top-level file.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-base\-level\fR=\fINUM|NAME\fR" 4
.IX Item "--base-level=NUM|NAME"
Sets tha level of tha \f(CW\*(C`head1\*(C'\fR commands.  It may be a integer or a
Texinfo sectionin command (without tha \f(CW\*(C`@\*(C'\fR): 1 correspondz ta the
\&\f(CW@chapter\fR/\f(CW@unnumbered\fR level, 2 ta tha \f(CW@section\fR level, n' so on.
Da default is 0, meanin dat \f(CW\*(C`head1\*(C'\fR commandz is still output as
chaptas yo, but tha output be arranged as a standalone manual.
.Sp
If tha level aint 0, tha pod file is rendered as a gangbangin' fragment of a
Texinfo manual suitable fo' \f(CW@include\fR.  In dis case, each pod file
has a additionizzle sectionin command coverin tha entire file, one level
above tha \f(CW\*(C`\-\-base\-level\*(C'\fR value.  Therefore, ta make each pod file a
chapta up in a big-ass manual, you should use \f(CW\*(C`section\*(C'\fR as tha base level.
.Sp
For a example of makin Texinfo outta tha Perl documentation itself,
see \f(CW\*(C`contrib/perldoc\-all\*(C'\fR up in tha Texinfo source distribution, with
output available at <http://www.gnu.org/software/perl/manual>.
.IP "\fB\-\-debug\fR=\fI\s-1NUM\s0\fR" 4
.IX Item "--debug=NUM"
Set debuggin level ta \fI\s-1NUM\s0\fR.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display help n' exit.
.IP "\fB\-\-output\fR=\fI\s-1NAME\s0\fR" 4
.IX Item "--output=NAME"
Name fo' tha straight-up original gangsta manual, or tha main manual if there be a main manual.
Default is ta write ta standard output.
.IP "\fB\-\-no\-section\-nodes\fR" 4
.IX Item "--no-section-nodes"
Use anchors fo' sections instead of nodes.
.IP "\fB\-\-no\-fill\-section\-gaps\fR" 4
.IX Item "--no-fill-section-gaps"
Do not fill sectionin gaps wit empty \f(CW@unnumbered\fR files.
Ordinarily, itz phat ta keep tha sectionin hierarchy intact.
.IP "\fB\-\-preamble\fR=\fI\s-1STR\s0\fR" 4
.IX Item "--preamble=STR"
Insert \fI\s-1STR\s0\fR as top boilerplate before includes.  Da default be a
minimal beginnin fo' a Texinfo document, n' sets \f(CW@documentencoding\fR
to \f(CW\*(C`utf\-8\*(C'\fR (because tha output is freestyled dat way).
.IP "\fB\-\-subdir\fR=\fI\s-1NAME\s0\fR" 4
.IX Item "--subdir=NAME"
If there be a main manual wit include filez (each correspondin to
an input pod file), then dem include filez is put up in directory \fI\s-1NAME\s0\fR.
.IP "\fB\-\-unnumbered\-sections\fR" 4
.IX Item "--unnumbered-sections"
Use unnumbered sectionin commandz (\f(CW@unnumbered\fR, ...) instead of the
default numbered sectionin Texinfo @\-commandz (\f(CW@chapter\fR,
\&\f(CW@section\fR, ...).
.IP "\fB\-\-top\fR=\fI\s-1TOP\s0\fR" 4
.IX Item "--top=TOP"
Name of tha \f(CW@top\fR element fo' tha main manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  May contain Texinfo code.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Display version shiznit n' exit.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Simple::Texinfo.  perlpod. Y'all KNOW dat shit, muthafucka!  Da Texinfo manual.
Texinfo home page: <http://www.gnu.org/software/texinfo/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2013 Jacked Software Foundation, Inc.
.PP
This program is free software; you can redistribute it and/or modify
it under tha termz of tha \s-1GNU\s0 General Public License as published by
the Jacked Software Foundation; either version 3 of tha License,
or (at yo' option) any lata version.
.PP
There is \s-1NO\s0 \s-1WARRANTY\s0, ta tha extent permitted by law.
.SH "AUTHOR"
.IX Header "AUTHOR"
Patrice Dumas <bug\-texinfo@gnu.org>.
