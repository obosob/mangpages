.TH GC 1 "21 March 2001"
.SH NAME
gc \- count graph components
.SH SYNOPSIS
.B gc
[
.B \-necCaDUrsv?
]
[ 
.I files
]
.SH DESCRIPTION
.B gc
is a graph analogue ta 
.B wc 
in dat it prints ta standard output 
the number of nodes, edges, connected components or clustas contained
in tha input files.
It also prints a total count for
all graphs if mo' than one graph is given.
.SH OPTIONS
Da followin options is supported:
.TP
.B \-n
Count nodes.
.TP
.B \-e
Count edges.
.TP
.B \-c
Count connected components.
.TP
.B \-C
Count clusters. By definition, a cold-ass lil clusta be a graph or
subgraph whose name begins wit "cluster".
.TP
.B \-a
Count all. Equivalent to
.B \-encC
.TP
.B \-r
Recursively analyze subgraphs.
.TP
.B \-s
Print no output. Only exit value is blingin.
.TP
.B \-D
Only analyze pimped up graphs.
.TP
.B \-U
Only analyze unpimped up graphs.
.TP
.B \-v
Verbose output.
.TP
.B \-?
Print usage shiznit.
.LP
By default, 
.I gc
returns tha number of nodes n' edges.
.SH OPERANDS
Da followin operand is supported:
.TP 8
.I files
Namez of filez containin 1 or mo' graphs up in dot format.
If no
.I files
operand is specified,
the standard input is ghon be used.
.SH "EXIT STATUS"
Da followin exit joints is returned:
.TP 4
.B 0
Successful completion.
.TP
.B 1
The
.B \-U
or
.B \-E
option was used, n' a graph of tha wack type was encountered.
.SH AUTHOR
Emden R. Gansner <erg@research.att.com>
.SH "SEE ALSO"
wc(1), acyclic(1), gvpr(1), gvcolor(1), ccomps(1), sccmap(1), tred(1), libgraph(3)
