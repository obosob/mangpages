.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ECPARAM 1"
.TH ECPARAM 1 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ecparam \- EC parameta manipulation n' generation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl ecparam\fR
[\fB\-inform DER|PEM\fR]
[\fB\-outform DER|PEM\fR]
[\fB\-in filename\fR]
[\fB\-out filename\fR]
[\fB\-noout\fR]
[\fB\-text\fR]
[\fB\-C\fR]
[\fB\-check\fR]
[\fB\-name arg\fR]
[\fB\-list_curve\fR]
[\fB\-conv_form arg\fR]
[\fB\-param_enc arg\fR]
[\fB\-no_seed\fR]
[\fB\-rand file(s)\fR]
[\fB\-genkey\fR]
[\fB\-engine id\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used ta manipulate or generate \s-1EC\s0 parameta files.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-inform DER|PEM\fR" 4
.IX Item "-inform DER|PEM"
This specifies tha input format. Da \fB\s-1DER\s0\fR option uses a \s-1ASN.1 DER\s0 encoded
form compatible wit \s-1RFC 3279\s0 EcpkParameters. Da \s-1PEM\s0 form is tha default
format: it consistz of tha \fB\s-1DER\s0\fR format base64 encoded wit additionizzle 
header n' foota lines.
.IP "\fB\-outform DER|PEM\fR" 4
.IX Item "-outform DER|PEM"
This specifies tha output format, tha options have tha same meanin as tha 
\&\fB\-inform\fR option.
.IP "\fB\-in filename\fR" 4
.IX Item "-in filename"
This specifies tha input filename ta read parametas from or standard input if
this option aint specified.
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
This specifies tha output filename parametas to. Right back up in yo muthafuckin ass. Standard output is used
if dis option aint present. Da output filename should \fBnot\fR be tha same
as tha input filename.
.IP "\fB\-noout\fR" 4
.IX Item "-noout"
This option inhibits tha output of tha encoded version of tha parameters.
.IP "\fB\-text\fR" 4
.IX Item "-text"
This option prints up tha \s-1EC\s0 parametas up in human readable form.
.IP "\fB\-C\fR" 4
.IX Item "-C"
This option converts tha \s-1EC\s0 parametas tha fuck into C code. Da parametas can then
be loaded by callin tha \fB\f(BIget_ec_group_XXX()\fB\fR function.
.IP "\fB\-check\fR" 4
.IX Item "-check"
Validate tha elliptic curve parameters.
.IP "\fB\-name arg\fR" 4
.IX Item "-name arg"
Use tha \s-1EC\s0 parametas wit tha specified 'short' name. Use \fB\-list_curves\fR
to git a list of all currently implemented \s-1EC\s0 parameters.
.IP "\fB\-list_curves\fR" 4
.IX Item "-list_curves"
If dis options is specified \fBecparam\fR will print up a list of all
currently implemented \s-1EC\s0 parametas names n' exit.
.IP "\fB\-conv_form\fR" 4
.IX Item "-conv_form"
This specifies how tha fuck tha points on tha elliptic curve is converted
into octet strings. Possible joints are: \fBcompressed\fR (the default
value), \fBuncompressed\fR n' \fBhybrid\fR. For mo' shiznit regarding
the point conversion forms please read tha X9.62 standard.
\&\fBNote\fR Cuz of patent thangs tha \fBcompressed\fR option is disabled
by default fo' binary curves n' can be enabled by defining
the preprocessor macro \fB\s-1OPENSSL_EC_BIN_PT_COMP\s0\fR at compile time.
.IP "\fB\-param_enc arg\fR" 4
.IX Item "-param_enc arg"
This specifies how tha fuck tha elliptic curve parametas is encoded.
Possible value are: \fBnamed_curve\fR, i.e. tha ec parametas are
specified by a \s-1OID,\s0 or \fBexplicit\fR where tha ec parametas are
explicitly given (see \s-1RFC 3279\s0 fo' tha definizzle of tha 
\&\s-1EC\s0 parametas structures). Da default value is \fBnamed_curve\fR.
\&\fBNote\fR tha \fBimplicitlyCA\fR alternatizzle ,as specified up in \s-1RFC 3279,\s0
is currently not implemented up in OpenSSL.
.IP "\fB\-no_seed\fR" 4
.IX Item "-no_seed"
This option inhibits dat tha 'seed' fo' tha parameta generation
is included up in tha ECParametas structure (see \s-1RFC 3279\s0).
.IP "\fB\-genkey\fR" 4
.IX Item "-genkey"
This option will generate a \s-1EC\s0 private key rockin tha specified parameters.
.IP "\fB\-rand file(s)\fR" 4
.IX Item "-rand file(s)"
a file or filez containin random data used ta seed tha random number
generator, or a \s-1EGD\s0 socket (see \fIRAND_egd\fR\|(3)).
Multiple filez can be specified separated by a OS-dependent character.
Da separator is \fB;\fR fo' MS-Windows, \fB,\fR fo' OpenVMS, n' \fB:\fR for
all others.
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBecparam\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms.
.SH "NOTES"
.IX Header "NOTES"
\&\s-1PEM\s0 format \s-1EC\s0 parametas use tha header n' foota lines:
.PP
.Vb 2
\& \-\-\-\-\-BEGIN EC PARAMETERS\-\-\-\-\-
\& \-\-\-\-\-END EC PARAMETERS\-\-\-\-\-
.Ve
.PP
OpenSSL is currently not able ta generate freshly smoked up crews n' therefore
\&\fBecparam\fR can only create \s-1EC\s0 parametas from known (named) curves.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To create \s-1EC\s0 parametas wit tha crew 'prime192v1':
.PP
.Vb 1
\&  openssl ecparam \-out ec_param.pem \-name prime192v1
.Ve
.PP
To create \s-1EC\s0 parametas wit explicit parameters:
.PP
.Vb 1
\&  openssl ecparam \-out ec_param.pem \-name prime192v1 \-param_enc explicit
.Ve
.PP
To validate given \s-1EC\s0 parameters:
.PP
.Vb 1
\&  openssl ecparam \-in ec_param.pem \-check
.Ve
.PP
To create \s-1EC\s0 parametas n' a private key:
.PP
.Vb 1
\&  openssl ecparam \-out ec_key.pem \-name prime192v1 \-genkey
.Ve
.PP
To chizzle tha point encodin ta 'compressed':
.PP
.Vb 1
\&  openssl ecparam \-in ec_in.pem \-out ec_out.pem \-conv_form compressed
.Ve
.PP
To print up tha \s-1EC\s0 parametas ta standard output:
.PP
.Vb 1
\&  openssl ecparam \-in ec_param.pem \-noout \-text
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIec\fR\|(1), \fIdsaparam\fR\|(1)
.SH "HISTORY"
.IX Header "HISTORY"
Da ecparam command was first introduced up in OpenSSL 0.9.8.
.SH "AUTHOR"
.IX Header "AUTHOR"
Nils Larsch fo' tha OpenSSL project (http://www.openssl.org)
