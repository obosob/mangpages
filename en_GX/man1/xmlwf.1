.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please bust any bug reports, improvements, comments, patches, 
.\" etc. ta Steve Cheng <steve@ggi-project.org>.
.TH "XMLWF" "1" "24 January 2003" "" ""
.SH NAME
xmlwf \- Determines if a XML document is well-formed
.SH SYNOPSIS

\fBxmlwf\fR [ \fB-s\fR]  [ \fB-n\fR]  [ \fB-p\fR]  [ \fB-x\fR]  [ \fB-e \fIencoding\fB\fR]  [ \fB-w\fR]  [ \fB-d \fIoutput-dir\fB\fR]  [ \fB-c\fR]  [ \fB-m\fR]  [ \fB-r\fR]  [ \fB-t\fR]  [ \fB-v\fR]  [ \fBfile ...\fR] 

.SH "DESCRIPTION"
.PP
\fBxmlwf\fR uses tha Expat library to
determine if a XML document is well-formed. Y'all KNOW dat shit, muthafucka!  It is
non-validating.
.PP
If you do not specify any filez on tha command-line, n' you
have a recent version of \fBxmlwf\fR, the
input file is ghon be read from standard input.
.SH "WELL-FORMED DOCUMENTS"
.PP
A well-formed document must adhere ta the
followin rules:
.TP 0.2i
\(bu
Da file begins wit a XML declaration. I aint talkin' bout chicken n' gravy biatch.  For instance,
<?xml version="1.0" standalone="yes"?>.
\fBNOTE:\fR
\fBxmlwf\fR do not currently
check fo' a valid XML declaration.
.TP 0.2i
\(bu
Every start tag is either empty (<tag/>)
or has a cold-ass lil correspondin end tag.
.TP 0.2i
\(bu
There is exactly one root element.  This element must contain
all other elements up in tha document.  Only comments, white
space, n' processin instructions may come afta tha close
of tha root element.
.TP 0.2i
\(bu
All elements nest properly.
.TP 0.2i
\(bu
All attribute joints is enclosed up in quotes (either single
or double).
.PP
If tha document has a DTD, n' it strictly complies wit that
DTD, then tha document be also considered \fBvalid\fR.
\fBxmlwf\fR be a non-valipimpin parser --
it do not check tha DTD.  But fuck dat shiznit yo, tha word on tha street is dat it do support
external entitizzles (see tha \fB-x\fR option).
.SH "OPTIONS"
.PP
When a option includes a argument, you may specify tha argument either
separately ("\fB-d\fR output") or concatenated wit the
option ("\fB-d\fRoutput").  \fBxmlwf\fR
supports both.
.TP
\fB-c\fR
If tha input file is well-formed n' \fBxmlwf\fR
doesn't encounta any errors, tha input file is simply copied to
the output directory unchanged.
This implies no namespaces (turns off \fB-n\fR) and
requires \fB-d\fR ta specify a output file.
.TP
\fB-d output-dir\fR
Specifies a gangbangin' finger-lickin' directory ta contain transformed
representationz of tha input files.
By default, \fB-d\fR outputs a cold-ass lil canonical representation
(busted lyrics bout below).
Yo ass can select different output formats rockin \fB-c\fR
and \fB-m\fR.

Da output filenames will
be exactly tha same as tha input filenames or "STDIN" if tha input is
comin from standard input.  Therefore, you must be careful dat the
output file do not go tha fuck into tha same directory as tha input
file.  Otherwise, \fBxmlwf\fR will delete the
input file before it generates tha output file (just like hustlin
cat < file > file up in most shells).

Two structurally equivalent XML documents gotz a funky-ass byte-for-byte
identical canonical XML representation.
Note dat ignorable white space is considered dope and
is treated equivalently ta data.
Mo' on canonical XML can be found at
http://www.jclark.com/xml/canonxml.html .
.TP
\fB-e encoding\fR
Specifies tha characta encodin fo' tha document, overriding
any document encodin declaration. I aint talkin' bout chicken n' gravy biatch.  \fBxmlwf\fR
supports four built-in encodings:
US-ASCII,
UTF-8,
UTF-16, and
ISO-8859-1.
Also peep tha \fB-w\fR option.
.TP
\fB-m\fR
Outputs some strange sort of XML file dat straight-up
raps bout tha input file, includin characta positions.
Requires \fB-d\fR ta specify a output file.
.TP
\fB-n\fR
Turns on namespace processing.  (describe namespaces)
\fB-c\fR disablez namespaces.
.TP
\fB-p\fR
Tells xmlwf ta process external DTDs n' parameter
entities.

Normally \fBxmlwf\fR never parses parameter
entities. Put ya muthafuckin choppers up if ya feel dis!  \fB-p\fR  drops some lyrics ta it ta always parse em.
\fB-p\fR implies \fB-x\fR.
.TP
\fB-r\fR
Normally \fBxmlwf\fR memory-maps tha XML file
before parsing; dis can result up in fasta parsin on many
platforms.
\fB-r\fR turns off memory-mappin n' uses aiiight file
IO calls instead.
Of course, memory-mappin be automatically turned off
when readin from standard input.

Use of memory-mappin can cause some platforms ta report
substantially higher memory usage for
\fBxmlwf\fR yo, but dis appears ta be a matta of
the operatin system reportin memory up in a strange way; there is
not a leak up in \fBxmlwf\fR.
.TP
\fB-s\fR
Prints a error if tha document aint standalone. 
A document is standalone if it has no external subset n' no
references ta parameta entities.
.TP
\fB-t\fR
Turns on timings.  This  drops some lyrics ta Expat ta parse tha entire file,
but not big-ass up any processing.
This gives a gangbangin' fairly accurate scam of tha raw speed of Expat itself
without client overhead.
\fB-t\fR turns off most of tha output options
(\fB-d\fR, \fB-m\fR, \fB-c\fR,
\&...).
.TP
\fB-v\fR
Prints tha version of tha Expat library bein used, includin some
information on tha compile-time configuration of tha library, and
then exits.
.TP
\fB-w\fR
Enablez support fo' Windows code pages.
Normally, \fBxmlwf\fR will throw a error if it
runs across a encodin dat it aint equipped ta handle itself.  With
\fB-w\fR, xmlwf will try ta bust a Windows code
page.  See also \fB-e\fR.
.TP
\fB-x\fR
Turns on parsin external entities.

Non-valipimpin parsers is not required ta resolve external
entities, or even expand entitizzles at all.
Expat always expandz internal entitizzles (?),
but external entitizzle parsin must be enabled explicitly.

External entitizzles is simply entitizzles dat obtain their
data from outside tha XML file currently bein parsed.

This be a example of a internal entity:

.nf
<!ENTITY vers '1.0.2'>
.fi

And here is some examplez of external entities:

.nf
<!ENTITY header SYSTEM "header-&vers;.xml">  (parsed)
<!ENTITY logo SYSTEM "logo.png" PNG>         (unparsed)
.fi
.TP
\fB--\fR
(Two hyphens.)
Terminates tha list of options.  This is only needed if a gangbangin' filename
starts wit a hyphen. I aint talkin' bout chicken n' gravy biatch.  For example:

.nf
xmlwf -- -myfile.xml
.fi

will run \fBxmlwf\fR on tha file
\fI-myfile.xml\fR.
.PP
Older versionz of \fBxmlwf\fR do not support
readin from standard input.
.SH "OUTPUT"
.PP
If a input file aint well-formed,
\fBxmlwf\fR prints a single line describing
the problem ta standard output.  If a gangbangin' file is well formed,
\fBxmlwf\fR outputs nothing.
Note dat tha result code is \fBnot\fR set.
.SH "BUGS"
.PP
Accordin ta tha W3C standard, a XML file without a
declaration all up in tha beginnin aint considered well-formed.
But fuck dat shiznit yo, tha word on tha street is dat \fBxmlwf\fR allows dis ta pass.
.PP
\fBxmlwf\fR returns a 0 - noerr result,
even if tha file aint well-formed. Y'all KNOW dat shit, muthafucka!  There is no phat way for
a program ta use \fBxmlwf\fR ta quickly
check a gangbangin' file -- it must parse \fBxmlwf\fR's
standard output.
.PP
Da errors should git all up in standard error, not standard output.
.PP
There should be a way ta git \fB-d\fR ta bust its
output ta standard output rather than forcin tha user ta send
it ta a gangbangin' file.
.PP
I have no clue why mah playas would wanna use the
\fB-d\fR, \fB-c\fR, and
\fB-m\fR options.  If one of mah thugs could explain it to
me, I'd like ta add dis shiznit ta dis manpage.
.SH "ALTERNATIVES"
.PP
Here is some XML validators on tha web:

.nf
http://www.hcrc.ed.ac.uk/~richard/xml-check.html
http://www.stg.brown.edu/service/xmlvalid/
http://www.scripting.com/frontier5/xml/code/xmlValidator.html
http://www.xml.com/pub/a/tools/ruwf/check.html
.fi
.SH "SEE ALSO"
.PP

.nf
Da Expat home page:        http://www.libexpat.org/
Da W3 XML justification:   http://www.w3.org/TR/REC-xml
.fi
.SH "AUTHOR"
.PP
This manual page was freestyled by Scott Bronston <bronson@rinspin.com> for
the Debian GNU/Linux system (but may be used by others).  Permission is
granted ta copy, distribute and/or modify dis document under
the termz of tha GNU Jacked Documentation
License, Version 1.1.
