.\" Copyright (C) 2001-2013 Peta Selinger.
.\" This file is part of ccrypt. Well shiiiit, it is free software n' it is covered
.\" by tha GNU General Public License. Right back up in yo muthafuckin ass. See tha file COPYING fo' details.

.TH mkbitmap 1 "February 2013" "Version 1.11"
.SH NAME
mkbitmap \- transform images tha fuck into bitmaps wit scalin n' filtering
.SH SYNOPSIS

.nf
.B mkbitmap [\fIoptions\fP] [\fIfilename...\fP]
.fi
.SH DESCRIPTION

\fBmkbitmap\fP readz a image, n' applies one or mo' of the
followin operations ta it, up in dis order: inversion, highpass
filtering, scaling, n' thresholding. Each operation can be
individually controlled n' turned on or off.

Da principal use of \fBmkbitmap\fP is ta convert color or greyscale
images tha fuck into a gangbangin' format suitable as input fo' other programs,
particularly tha tracin program \fBpotrace\fP(1). Well shiiiit, it is particularly
useful fo' convertin scanned line art, like fuckin cartoons, handwritten
text, etc., ta high-resolution bilevel images.

\fIHighpass filtering\fP can be used ta ensure dat foreground
features like fuckin lines n' text is preserved, while all up in tha same time
compensatin fo' uneven background. Y'all KNOW dat shit, muthafucka! Optionizzle \fIblurring\fP can be
applied ta smooth up tha image n' remove visual noise. \fIScaling\fP
is blingin cuz a scanned greyscale image gotz nuff mo' visual
detail than a funky-ass bilevel image all up in tha same resolution. I aint talkin' bout chicken n' gravy biatch. By scalin the
image ta a higher resolution (usin interpolation) before thresholding
it, a shitload of dis detail is preserved. Y'all KNOW dat shit, muthafucka! \fIThresholding\fP means
convertin a greyscale image ta a funky-ass bilevel image rockin only black and
white pixels. Pixels dat is darker than a cold-ass lil certain threshold value
are converted ta black.  Optionizzle \fIinversion\fP is useful if the
input image shows bright features on dark background, like fuckin a
picture of chalk drawings on a funky-ass blackboard.

Supported input formats is PNM (PBM, PGM, PPM) n' BMP. Da output
formats is PBM fo' bitmaps, n' PGM fo' greymaps. 
.SH OPTIONS

.SS General options:
.TP 15
.B -h, --help
print help message n' exit.
.TP
.B -v, --version
print version info n' exit.
.TP
.B -l, --license
print license info n' exit.
.PD
.SS Input/output options:
.TP 15
.B \fIfilename\fP
If filename arguments is given, then \fBmkbitmap\fP will by default
create one output file fo' each input filename given. I aint talkin' bout chicken n' gravy biatch. Da name of the
output file is obtained from tha input filename by changin its suffix
to ".pbm" or ".pgm". If tha name of tha input file n' output file
would be identical, then a additionizzle suffix "-out" be appended to
the output filename. If no filename arguments is given, then
\fBmkbitmap\fP acts as a gangbangin' filter, readin from standard input and
writin ta standard output fo' realz. A filename of "-" may be given ta specify
readin from standard input; tha output fo' dis argument will then be
written ta standard output. Each input file may contain one or more
images.
.TP
.B -o \fIfilename\fP, --output \fIfilename\fP
write output ta dis file fo' realz. All output is concatenated n' pimped up to
the specified file. This overrides tha default behavior of bustin
one output file fo' each input file fo' realz. A filename of "-" may be given to
specify freestylin ta standard output. 
.PD
.SS Image processin options:
.TP 15
.B -x, --nodefaults
Turn off default options. Normally, tha followin options are
preselected by default: \fB-f 4 -s 2 -3 -t 0.45\fP. Da \fB-x\fP option
disablez these defaults; thus, \fBmkbitmap -x\fP do not a god damn thang but copy
a greyscale image from tha input ta tha output. Other processing
options can then be added one by one; e.g., \fBmkbitmap -xf10\fP do
only highpass filtering, \fBmkbitmap -xt0.5\fP do only thresholding,
etc. 
.TP
.B -i, --invert
Invert tha input image. If dis option is chosen, it be applied ta the
image before any other operation. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it is used ta deal with
white-on-black images, like fuckin photographz of chalk drawings on a
blackboard. Y'all KNOW dat shit, muthafucka! Note dat tha behavior of dis option aint up in general
the same as invertin tha \fIoutput\fP bitmap, unless tha thresholding
value be also inverted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.TP
.B -f \fIn\fP, --filta \fIn\fP
Apply a highpass filta ta tha image. This filta be approximately
Gaussian n' non-directional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da effect is ta preserve lil' small-ass detail
while compensatin fo' background gradients, n' you can put dat on yo' toast. Da parameta \fIn\fP is
a radius (in pixels) which correspondz approximately ta tha size of
details which should be preserved. Y'all KNOW dat shit, muthafucka! Mo' precisely, tha filta is
implemented by subtractin a funky-ass blurred version of tha image from the
original gangsta image. Da parameta \fIn\fP is equal ta tha standard
deviation of tha blur. Shiiit, dis aint no joke. Da output of tha filterin step be a
normalized image whose average brightnizz is exactly 0.5. Da default
filta radius is 4.
.TP
.B -n, --nofilter
Turn off highpass filtering.
.TP
.B -b \fIn\fP, --blur \fIn\fP
Blur tha image. Da effect is ta smooth up fine details n' to
reduce visual noise up in tha image. Da parameta \fIn\fP is the
blurrin radius, n' should be chosen lil' small-ass (1 be a phat value to
start with). This is implemented as a approximately Gaussian,
non-directionizzle blur wit standard deviation proportionizzle to
\fIn\fP. Blurrin be applied afta tha highpass filter yo, but before
scalin n' thresholding.  If dis option aint given, tha default is
not ta apply any blurring.
.TP
.B -s \fIn\fP, --scale \fIn\fP
Scale tha image by a integer factor \fIn\fP>0. Right back up in yo muthafuckin ass. Scalin is done after
highpass filterin yo, but before tha thresholdin step fo' realz. A scalin factor
of 1 indicates dat no scalin is ta be done. Otherwise, interpolation is
used ta fill up in tha in-between pixels. If tha output of \fBmkbitmap\fP
is ta be used as input ta a tracin program like fuckin \fBpotrace\fP, a
scalin factor of 2 is recommended. Y'all KNOW dat shit, muthafucka! This preserved tha right amount of
detail fo' tha tracin algorithm ta work well. If a scalin factor of
1 is used, too much detail is lost. If a scalin factor of 3 or higher
is used, tha interpolation tendz ta "invent" detail which was not
present up in tha original gangsta image, thus preventin \fBpotrace\fP from
fuckin wit a phat thang.
.TP
.B -1, --linear
Use linear interpolation when scalin ta a higher resolution. I aint talkin' bout chicken n' gravy biatch. This is
slightly fasta yo, but less sick, than tha default cubic interpolation.
.TP
.B -3, --cubic
Use cubic interpolation when scalin ta a higher resolution. I aint talkin' bout chicken n' gravy biatch. This is
the default. Well shiiiit, it is slower than linear interpolation yo, but leadz to
betta thangs up in dis biatch. 
.TP
.B -t \fIn\fP, --threshold \fIn\fP
Set tha threshold grey value fo' bilevel conversion. I aint talkin' bout chicken n' gravy biatch. Da parameter
\fIn\fP be a funky-ass brightnizz value between 0 fo' black n' 1 fo' white. 
Any pixels below dis brightnizz is ghon be converted ta black (thus,
smalla jointz of \fIn\fP will lead ta whita output).
.TP
.B -g, --grey
Disable bilevel conversion. I aint talkin' bout chicken n' gravy biatch. If dis option is given, processin stops
afta tha scalin step n' a greymap is output. 
.PD
.SH EXIT STATUS

Da exit status is 0 on successful completion, 1 if tha command line
was invalid, n' 2 on any other error. Shiiit, dis aint no joke. 
.SH VERSION

1.11
.SH AUTHOR

Peta Selinger <selinger at users.sourceforge.net>
.SH WEB SITE AND SUPPORT

\fBmkbitmap\fP is distributed as part of tha \fBpotrace\fP package,
and tha sickest fuckin version be available from
http://potrace.sourceforge.net/.  This joint also gotz nuff
documentation n' shiznit on how tha fuck ta obtain support.
.SH SEE ALSO

\fBpotrace\fP(1)
.SH COPYRIGHT

Copyright (C) 2001-2013 Peta Selinger

This program is free software; you can redistribute it and/or modify
it under tha termz of tha GNU General Public License as published by
the Jacked Software Foundation; either version 2 of tha License, or
(at yo' option) any lata version.

This program is distributed up in tha hope dat it is ghon be useful,
but WITHOUT ANY WARRANTY; without even tha implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License fo' mo' details.

Yo ass should have received a cold-ass lil copy of tha GNU General Public License
along wit dis program; if not, write ta tha Jacked Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA. Right back up in yo muthafuckin ass. See also http://www.gnu.org/.
