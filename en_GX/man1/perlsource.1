.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLSOURCE 1"
.TH PERLSOURCE 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlsource \- A guide ta tha Perl source tree
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout tha layout of tha Perl source tree. If you is
hackin on tha Perl core, dis will help you find what tha fuck you looking
for.
.SH "FINDING YOUR WAY AROUND"
.IX Header "FINDING YOUR WAY AROUND"
Da Perl source tree is big-ass yo. Herez a shitload of tha thang you gonna find in
it:
.SS "C code"
.IX Subsection "C code"
Da C source code n' header filez mostly live up in tha root of the
source tree. There is all dem platform-specific directories which
contain C code. In addition, a shitload of tha modulez shipped wit Perl
include C or \s-1XS\s0 code.
.PP
See perlinterp fo' mo' details on tha filez dat make up tha Perl
interpreter, as well as details on how tha fuck it works.
.SS "Core modules"
.IX Subsection "Core modules"
Modulez shipped as part of tha Perl core live up in four subdirectories.
Two of these directories contain modulez dat live up in tha core, n' two
contain modulez dat can also be busted out separately on \s-1CPAN.\s0 Modules
which can be busted out on cpan is known as \*(L"dual-life\*(R" modules.
.IP "\(bu" 4
\&\fIlib/\fR
.Sp
This directory gotz nuff pure-Perl modulez which is only busted out as
part of tha core. This directory gotz nuff \fIall\fR of tha modulez and
their tests, unlike other core modules.
.IP "\(bu" 4
\&\fIext/\fR
.Sp
This directory gotz nuff XS-usin modulez which is only busted out as
part of tha core. These modulez generally have they \fIMakefile.PL\fR and
are laid up mo' like a typical \s-1CPAN\s0 module.
.IP "\(bu" 4
\&\fIdist/\fR
.Sp
This directory is fo' dual-life modulez where tha blead source is
canonical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Note dat some modulez up in dis directory may not yet have
been busted out separately on \s-1CPAN.\s0
.IP "\(bu" 4
\&\fIcpan/\fR
.Sp
This directory gotz nuff dual-life modulez where tha \s-1CPAN\s0 module is
canonical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Do not patch these modulez directly dawwwwg! Chizzlez ta these
modulez should be submitted ta tha maintainer of tha \s-1CPAN\s0 module. Once
those chizzlez is applied n' busted out, tha freshly smoked up version of tha module
will be incorporated tha fuck into tha core.
.PP
For some dual-life modules, it has not yet been determined if tha \s-1CPAN\s0
version or tha blead source is canonical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Until dat is done, them
modulez should be up in \fIcpan/\fR.
.SS "Tests"
.IX Subsection "Tests"
Da Perl core has a extensive test suite. If you add freshly smoked up tests (or new
modulez wit tests), you may need ta update tha \fIt/TEST\fR file so that
the tests is run.
.IP "\(bu" 4
Module tests
.Sp
Tests fo' core modulez up in tha \fIlib/\fR directory is right next ta the
module itself. For example, our crazy asses have \fIlib/strict.pm\fR and
\&\fIlib/strict.t\fR.
.Sp
Tests fo' modulez up in \fIext/\fR n' tha dual-life modulez is up in \fIt/\fR
subdirectories fo' each module, like a standard \s-1CPAN\s0 distribution.
.IP "\(bu" 4
\&\fIt/base/\fR
.Sp
Tests fo' tha absolute basic functionalitizzle of Perl. This includes
\&\f(CW\*(C`if\*(C'\fR, basic file readz n' writes, simple regexes, etc. These is run
first up in tha test suite n' if any of dem fail, suttin' is \fIreally\fR
broken.
.IP "\(bu" 4
\&\fIt/cmd/\fR
.Sp
Tests fo' basic control structures, \f(CW\*(C`if/else\*(C'\fR, \f(CW\*(C`while\*(C'\fR, subroutines,
etc.
.IP "\(bu" 4
\&\fIt/comp/\fR
.Sp
Tests fo' basic thangz of how tha fuck Perl parses n' compilez itself.
.IP "\(bu" 4
\&\fIt/io/\fR
.Sp
Tests fo' built-in \s-1IO\s0 functions, includin command line arguments.
.IP "\(bu" 4
\&\fIt/mro/\fR
.Sp
Tests fo' perlz method resolution order implementations (see mro).
.IP "\(bu" 4
\&\fIt/op/\fR
.Sp
Tests fo' perlz built up in functions dat don't fit tha fuck into any of the
other directories.
.IP "\(bu" 4
\&\fIt/opbasic/\fR
.Sp
Tests fo' perlz built up in functions which, like dem up in \fIt/op/\fR, do not fit
into any of tha other directories yo, but which, up in addition, cannot use
\&\fIt/test.pl\fR,as dat program dependz on functionalitizzle which the
test file itself is testing.
.IP "\(bu" 4
\&\fIt/re/\fR
.Sp
Tests fo' regex related functions or behaviour. Shiiit, dis aint no joke. (These used ta live in
t/op).
.IP "\(bu" 4
\&\fIt/run/\fR
.Sp
Tests fo' featurez of how tha fuck perl straight-up runs, includin exit codes and
handlin of PERL* environment variables.
.IP "\(bu" 4
\&\fIt/uni/\fR
.Sp
Tests fo' tha core support of Unicode.
.IP "\(bu" 4
\&\fIt/win32/\fR
.Sp
Windows-specific tests.
.IP "\(bu" 4
\&\fIt/porting/\fR
.Sp
Tests tha state of tha source tree fo' various common errors. For
example, it tests dat all dem fools dat is listed up in tha git log has a
correspondin entry up in tha \fI\s-1AUTHORS\s0\fR file.
.IP "\(bu" 4
\&\fIt/lib/\fR
.Sp
Da oldschool home fo' tha module tests, you shouldn't put anythang freshly smoked up in
here, so peek-a-boo, clear tha way, I be comin' thru fo'sho. There is still some bits n' pieces hangin round up in here that
need ta be moved. Y'all KNOW dat shit, muthafucka! Perhaps you could move them?  Thanks!
.IP "\(bu" 4
\&\fIt/x2p\fR
.Sp
A test suite fo' tha s2p converter.
.SS "Documentation"
.IX Subsection "Documentation"
All of tha core documentation intended fo' end playas lives up in \fIpod/\fR.
Individual modulez up in \fIlib/\fR, \fIext/\fR, \fIdist/\fR, n' \fIcpan/\fR usually
have they own documentation, either up in tha \fIModule.pm\fR file or an
accompanyin \fIModule.pod\fR file.
.PP
Finally, documentation intended fo' core Perl pimpers lives up in the
\&\fIPorting/\fR directory.
.SS "Hackin tools n' documentation"
.IX Subsection "Hackin tools n' documentation"
Da \fIPorting\fR directory gotz nuff a grab ounce ta tha bounce of code n' documentation
intended ta help portas work on Perl. Right back up in yo muthafuckin ass. Some of tha highlights include:
.IP "\(bu" 4
\&\fIcheck*\fR
.Sp
These is scripts which will check tha source thangs like \s-1ANSI C\s0
violations, \s-1POD\s0 encodin issues, etc.
.IP "\(bu" 4
\&\fIMaintainers\fR, \fIMaintainers.pl\fR, n' \fIMaintainers.pm\fR
.Sp
These filez contain shiznit on whoz ass maintains which modules. Run
\&\f(CW\*(C`perl Porting/Maintainers \-M Module::Name\*(C'\fR ta smoke up more
information on some thugged-out dual-life module.
.IP "\(bu" 4
\&\fIpodtidy\fR
.Sp
Tidies a pod file. It aint nuthin but a phat scam ta run dis on a pod file you've
patched.
.SS "Build system"
.IX Subsection "Build system"
Da Perl build system starts wit tha \fIConfigure\fR script up in tha root
directory.
.PP
Platform-specific piecez of tha build system also live in
platform-specific directories like \fIwin32/\fR, \fIvms/\fR, etc.
.PP
Da \fIConfigure\fR script is ultimately responsible fo' generatin a
\&\fIMakefile\fR.
.PP
Da build system dat Perl uses is called metaconfig. This system is
maintained separately from tha Perl core.
.PP
Da metaconfig system has its own git repository. Please peep its \s-1README\s0
file up in <http://perl5.git.perl.org/metaconfig.git/> fo' mo' details.
.PP
Da \fICross\fR directory gotz nuff various filez related to
cross-compilin Perl. Right back up in yo muthafuckin ass. See \fICross/README\fR fo' mo' details.
.SS "\fI\s-1AUTHORS\s0\fP"
.IX Subsection "AUTHORS"
This file lists mah playas whoz contributed ta Perl. If you submit a
patch, you should add yo' name ta dis file as part of tha patch.
.SS "\fI\s-1MANIFEST\s0\fP"
.IX Subsection "MANIFEST"
Da \fI\s-1MANIFEST\s0\fR file up in tha root of tha source tree gotz nuff a list of
every file up in tha Perl core, as well as a funky-ass brief description of each
file.
.PP
Yo ass can git a overview of all tha filez wit dis command:
.PP
.Vb 1
\&  % perl \-lne \*(Aqprint if /^[^\e/]+\e.[ch]\es+/\*(Aq MANIFEST
.Ve
