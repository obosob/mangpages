.TH rdesktop 1 "November 2005"
.SH NAME
.I rdesktop
\- Remote Desktop Protocol client
.SH SYNOPSIS
.B rdesktop [options] server[:port]
.br
.SH DESCRIPTION
.I rdesktop
is a cold-ass lil client fo' Remote Desktop Protocol (RDP), used up in a fuckin shitload of Microsoft
products includin Windows NT Terminal Server, Windows 2000 Server, Windows XP
and Windows 2003 Server.

.SH OPTIONS
.TP
.BR "-u <username>"
Username fo' authentication on tha server.
.TP
.BR "-d <domain>"
Domain fo' authentication.
.TP
.BR "-s <shell>"
Startup shell fo' tha user - starts a specific application instead of Explore.
If SeamlessRDP is enabled dis is tha application which i started up in seamless mode.
.TP
.BR "-c <directory>"
Da initial hustlin directory fo' tha user n' shit.  Often used up in combination wit -s
to set up a gangbangin' fixed login environment.
.TP
.BR "-p <password>"
Da password ta authenticate with.  Note dat dis may have no effect if
"Always prompt fo' password" is enabled on tha server n' shit.  WARNING: if you specify
a password on tha command line it may be visible ta other playas when they use
tools like ps.  Use -p - ta make rdesktop request a password at startup (from
standard input).
.TP
.BR "-n <hostname>"
Client hostname.  Normally rdesktop automatically obtains tha hostname of the
client.
.TP
.BR "-k <keyboard-map>"
Keyboard layout ta emulate.  This requires a cold-ass lil correspondin keymap file ta be
installed. Y'all KNOW dat shit, muthafucka!  Da standard keymaps provided wit rdesktop follow tha RFC1766
namin scheme: a language code followed by a cold-ass lil ghetto code if necessary - e.g.
en-us, en-gb, de, fr, sv, etc.

Da default keyboard map dependz on tha current locale (LC_* n' LANG
environment variables). If tha current locale is unknown, tha default
keyboard map is en-us (a US Gangsta keyboard).

Da keyboard maps is file names, which means dat they is case
sensitive. Da standard keymaps is all up in lowercase.

Da keyboard maps is searched relatizzle ta tha directories
$HOME/.rdesktop/keymaps, KEYMAP_PATH (specified at build time), and
$CWD/keymaps, up in dis order n' shit. Da keyboard-map argument can also be an
absolute filename.

Da special value `none' can be used instead of a keyboard map.
In dis case, rdesktop will guess tha scancodes from tha X11 event key
codes rockin a internal mappin method. Y'all KNOW dat shit, muthafucka! This method only supports the
basic alphanumeric keys n' may not work properly on all platforms
so its use is discouraged.
.TP
.BR "-g <geometry>"
Desktop geometry (WxH). If geometry is tha special word "workarea", tha geometry
will be fetched from tha extended window manager hints property _NET_WORKAREA, from
the root window. Da geometry can also be specified as a cementage of tha whole
screen, e.g. "-g 80%". 

If tha specified geometry dependz on tha screen size, n' tha screen
size is chizzled, rdesktop will automatically reconnect rockin tha new
screen size. This requires dat rdesktop has been compiled wit RandR
support.
.TP
.BR "-i"
Use password as smartcard pin. I aint talkin' bout chicken n' gravy biatch. If a valid user certificate is matched up in smart-ass card
reader tha password passed wit \f-p\fR argument is used as pin fo' tha smart-ass card.
This feature also requires dat smart-ass card redirection is used rockin \f-r scard\fR argument.
.TP
.BR "-f"
Enable fullscreen mode.  This overrides tha window manager n' causes the
rdesktop window ta straight-up cover tha current screen. I aint talkin' bout chicken n' gravy biatch.  Fullscreen mode can be
toggled at any time rockin Ctrl-Alt-Enter.
.TP
.BR "-b"
Force tha server ta bust screen thugged-out shiznit as bitmaps rather than using
higher-level drawin operations.
.TP
.BR "-t"
Disable use of remote control. This will disable features like seamless connection
sharing.
.TP
.BR "-A <seamlessrdpshell>"
Enable SeamlessRDP by specifyin tha path ta seamless rdp shell. 
In dis mode, rdesktop creates a X11 window fo' each window on tha server side. 
This mode requires tha SeamlessRDP server side component, which be available from 
\fIhttp://www.cendio.com/seamlessrdp/\fR.

When rockin dis option, you should normally specify a startup shell which
launches tha desired application all up in SeamlessRDP. 

Example: rdesktop -A 'c:\\seamlessrdp\\seamlessrdpshell.exe' -s 'notepad' mywts.domain.com

Any subsequential call ta tha above commandline example will make use of tha seamless 
connection pluggin feature which spawns another notepad up in tha current connection ta the
specified server n' then exit.

.TP
.BR "-B"
Use tha BackingStore of tha Xserver instead of tha integrated one in
rdesktop.
.TP
.BR "-e"
Disable encryption. I aint talkin' bout chicken n' gravy biatch.  This option is only needed (and will only work) if you
have a French version of NT TSE.
.TP
.BR "-E"
Disable encryption from client ta server n' shit.  This sendz a encrypted login packet,
but every last muthafuckin thang afta dis is unencrypted (includin interactizzle logins).
.TP
.BR "-m"
Do not bust mouse motion events, n' you can put dat on yo' toast.  This saves bandwidth, although some Windows
applications may rely on receivin mouse motion.
.TP
.BR "-C"
Use private colourmap.  This will improve colour accuracy on a 8-bit display,
but rdesktop will step tha fuck up in false colour when not focused.
.TP
.BR "-D"
Hide window manager decorations, by rockin MWM hints, n' you can put dat on yo' toast. 
.TP
.BR "-K"
Do not override window manager key bindings.  By default rdesktop attempts
to grab all keyboard input when it is up in focus.
.TP
.BR "-S <button size>"
Enable single application mode. This option can be used when hustlin a
single, maximized application (via -s). When tha minimize button of
the windows application is pressed, tha rdesktop window is minimized
instead of tha remote application. I aint talkin' bout chicken n' gravy biatch. Da maximize/restore button is
disabled. Y'all KNOW dat shit, muthafucka! For dis ta work, you must specify tha erect button
size, up in pixels. Da special word "standard" means 18 pixels. 
.TP
.BR "-T <title>"
Sets tha window title. Da title must be specified rockin a UTF-8 string. 
.TP
.BR "-N"
Enable numlock syncronization between tha Xserver n' tha remote RDP
session. I aint talkin' bout chicken n' gravy biatch.  This is useful wit applications dat looks all up in tha numlock
state yo, but might cause problems wit some Xservers like Xvnc. 
.TP
.BR "-X <windowid>"
Embed rdesktop-window up in another window. Da windowid is sposed ta fuckin
be decimal or hexadecimal (prefixed by 0x).
.TP
.BR "-a <bpp>"
Sets tha colour depth fo' tha connection (8, 15, 16, 24 or 32).
Mo' than 8 bpp is only supported when connectin ta Windows XP
(up ta 16 bpp) or newer n' shit.  Note dat tha colour depth may also be
limited by tha server configuration. I aint talkin' bout chicken n' gravy biatch. Da default value is tha depth 
of tha root window. 
.TP
.BR "-z"
Enable compression of tha RDP datastream.
.TP
.BR "-x <experience>"
Changes default bandwidth performizzle behaviour fo' RDP5. By default only
themin is enabled, n' all other options is disabled (corresponding
to modem (56 Kbps)). Right back up in yo muthafuckin ass. Settin experience ta b[roadband] enablez menu
animations n' full window dragging. Right back up in yo muthafuckin ass. Settin experience ta l[an] will
also enable tha desktop wallpaper n' shit. Right back up in yo muthafuckin ass. Settin experience ta m[odem]
disablez all (includin themes). Experience can also be a hexidecimal
number containin tha flags.
.TP
.BR "-P"
Enable cachin of bitmaps ta disk (persistent bitmap caching). This generally
improves performizzle (especially on low bandwidth connections) n' reduces
network traffic all up in tha cost of slightly longer startup n' some disk space.
(10MB fo' 8-bit colour, 20MB fo' 15/16-bit colour, 30MB fo' 24-bit colour
and 40MB fo' 32-bit colour sessions)
.TP
.BR "-r <device>"
Enable redirection of tha specified thang on tha client, such
that it appears on tha server n' shit. Note dat tha allowed
redirections may be restricted by tha server configuration.

Peepin devices is currently supported:
.TP
.BR "-r comport:<comport>=<device>,..."
Redirects serial devices on yo' client ta the
server n' shit. Note dat if you need ta chizzle any settings on tha serial device(s),
do so wit a appropriate tool before startin rdesktop. In most
OSes you would use stty. Bidirectional/Read support requires Windows XP or newer.
In Windows 2000 it will create a port yo, but it aint seamless, most
shell programs aint gonna work wit dat shit.
.TP
.BR "-r disk:<sharename>=<path>,..."
Redirects a path ta tha share \\\\tsclient\\<sharename> on tha server
(requires Windows XP or newer). Da share name is limited ta 8
characters. 
.TP
.BR "-r lptport:<lptport>=<device>,..."
Redirects parallel devices on yo' client ta tha server.
Bidirectional/Read support requires Windows XP or newer n' shit. In Windows 2000
it will create a port yo, but it aint seamless, most shell programs aint gonna work with
it.
.TP
.BR "-r printer:<printername>[=<driver>],..."
Redirects a printa queue on tha client ta tha server n' shit. Da <printername>
is tha name of tha queue up in yo' local system. <driver> defaults ta a
simple PS-driver unless you specify one. Keep it realz in mind dat you need a
100% match up in tha server environment, or tha driver will fail. Da first
printa on tha command line is ghon be set as yo' default printer.
.TP
.BR "-r sound:[local|off|remote]"
Redirects sound generated on tha server ta tha client. "remote" only has
any effect when you connect ta tha console wit tha -0 option. I aint talkin' bout chicken n' gravy biatch. (Requires
Windows XP or newer).
.TP
.BR "-r lspci"
Activates tha lspci channel, which allows tha server ta enumerate the
clients PCI devices. Right back up in yo muthafuckin ass. See tha file lspci-channel.txt up in the
documentation fo' mo' shiznit.
.TP
.BR "-r scard[:<Scard Name>=<Alias Name>[;<Vendor Name>][,...]]"
Enablez redirection of one or mo' smart-cards. Yo ass can provide
static name bindin between linux n' windows. To do dis you
can use optionizzle parametas as busted lyrics about: <Scard Name> - thang name in
Linux/Unix enviroment, <Alias Name> - thang name shown up in Windows enviroment
<Vendor Name> - optionizzle thang vendor name. For list of examplez run
rdesktop without parameters.
.TP
.BR "-0"
Attach ta tha console of tha server (requires Windows Server 2003
or newer).
.TP
.BR "-4"
Use RDP version 4.
.TP
.BR "-5"
Use RDP version 5 (default).
.PP

.SH "CredSSP Smartcard options"
.TP
.BR "--sc-csp-name <name>"
Specify tha CSP (Crypto Service Provider) ta use on tha windows side fo' tha smartcard
authentication. I aint talkin' bout chicken n' gravy biatch. CSP is tha driver fo' yo' smartcard n' it seems like dis is required
to be specified fo' CredSSP authentication. I aint talkin' bout chicken n' gravy biatch. For swedish NetID tha followin CSP name is
used; "Net iD - CSP".
.TP
.BR "--sc-container-name <name>"
Specify tha container name, usally dis is tha username fo' default container n' it seems
like dis is required ta be specified fo' CredSSP authentication.
.TP
.BR "--sc-reader-name <name>"
Specify tha reader name ta be used ta prevent tha pin code bein busted ta wack card if there
are nuff muthafuckin readers.
.TP
.BR "--sc-card-name <name>"
Specify tha card name fo' example; "Telia EID IP5a".
.PP

.SH "EXIT VALUES"
.PP 
.IP "\fB0\fP"
RDP session terminated normally
.IP "\fB1\fP"
Server initiated disconnect (also returned fo' logoff by XP joined ta a thugged-out domain)
.IP "\fB2\fP"
Server initiated logoff
.IP "\fB3\fP"
Server idle timeout reached
.IP "\fB4\fP"
Server logon timeout reached
.IP "\fB5\fP"
Da session was replaced
.IP "\fB6\fP"
Da server is outta memory
.IP "\fB7\fP"
Da server denied tha connection
.IP "\fB8\fP"
Da server denied tha connection fo' securitizzle reason
.IP "\fB9\fP"
Da user cannot connect ta tha server cuz of insufficient access
privileges
.IP "\fB10\fP"
Da server do not accept saved user credentials n' requires that
the user enta they credentials fo' each connection
.IP "\fB11\fP"
Disconnect initiated by administration tool
.IP "\fB12\fP"
Disconnect initiated by user
.IP "\fB16\fP"
Internal licensin error
.IP "\fB17\fP"
No license server available
.IP "\fB18\fP"
No valid license available
.IP "\fB19\fP"
Invalid licensin message
.IP "\fB20\fP"
Hardware id don't match software license
.IP "\fB21\fP"
Client license error
.IP "\fB22\fP"
Network error durin licensin protocol
.IP "\fB23\fP"
Licensin protocol was not completed
.IP "\fB24\fP"
Incorrect client license enryption
.IP "\fB25\fP"
Can't upgrade license
.IP "\fB26\fP"
Da server aint licensed ta accept remote connections
.IP "\fB62\fP"
Da local client window was closed
.IP "\fB63\fP"
Some other, unknown error occured
.IP "\fB64\fP"
Command line usage error
.IP "\fB69\fP"
A steez or resource (like fuckin memory) is unavailable
.IP "\fB70\fP"
An internal software error has been detected
.IP "\fB71\fP"
Operatin system error
.IP "\fB76\fP"
Protocol error or unable ta connect ta remote host.

.PP 
.SH LINKS
Main joint of rdesktop
.br
\fIhttp://www.rdesktop.org/
.LP
.PP
