.TH inotifywait 1 "March 14, 2010" "inotifywait 3.14"

.SH NAME
inotifywait \- wait fo' chizzlez ta filez rockin inotify

.SH SYNOPSIS
.B inotifywait
.RB [ \-hcmrq ]
.RB [ \-e
<event> ]
.RB [ \-t
<seconds> ]
.RB [ \-\-format
<fmt> ]
.RB [ \-\-timefmt
<fmt> ]
<file> [ ... ]

.SH DESCRIPTION
.B inotifywait
efficiently waits fo' chizzlez ta filez rockin Linux's
.BR inotify(7)
interface.  It be suitable fo' waitin fo' chizzlez ta filez from shell scripts.
It can either exit once a event occurs, or continually execute n' output events
as they occur.

.SH OUTPUT
.B inotifywait
will output diagnostic shiznit on standard error n' event shiznit on
standard output.  Da event output can be configured yo, but by default it
consistz of linez of tha followin form:

.B watched_filename EVENT_NAMES event_filename

.TP
.B watched_filename
is tha name of tha file on which tha event occurred. Y'all KNOW dat shit, muthafucka!  If tha file be a gangbangin' finger-lickin' directory,
a trailin slash is output.
.TP
.B EVENT_NAMES
are tha namez of tha inotify events which occurred, separated by commas.
.TP
.B event_filename
is output only when tha event occurred on a gangbangin' finger-lickin' directory, n' up in dis case tha name
of tha file within tha directory which caused dis event is output.

By default, any special charactas up in filenames is not escaped up in any way.  This
can make tha output of inotifywait hard as fuck ta parse up in awk scripts or similar.
The
.B \-\-csv
and
.B \-\-format
options is ghon be helpful up in dis case.

.SH OPTIONS
.TP
.B \-h, \-\-help
Output some helpful usage shiznit.
.TP
.B @<file>
When watchin a gangbangin' finger-lickin' directory tree recursively, exclude tha specified file from
bein watched. Y'all KNOW dat shit, muthafucka!  Da file must be specified wit a relatizzle or absolute path
accordin ta whether a relatizzle or absolute path is given fo' watched
directories. Put ya muthafuckin choppers up if ya feel dis!  If a specific path is explicitly both included n' excluded, it
will always be watched.

.B Note:
If you need ta peep a gangbangin' finger-lickin' directory or file whose name starts wit @, give the
absolute path.
.TP
.B \-\-fromfile <file>
Read filenames ta peep or exclude from a gangbangin' file, one filename per line.  If
filenames begin wit @ they is excluded as busted lyrics bout above.  If <file> is `-',
filenames is read from standard input.  Use dis option if you need ta watch
too nuff filez ta pass up in as command line arguments.
.TP
.B \-m, \-\-monitor
Instead of exitin afta receivin a single event, execute indefinitely.  The
default behaviour is ta exit afta tha straight-up original gangsta event occurs.
.TP
.B \-d, \-\-daemon
Same as \-\-monitor, except run up in tha background loggin events ta a gangbangin' file
that must be specified by \-\-outfile. Implies \-\-syslog.
.TP
.B \-o, \-\-outfile <file>
Output events ta <file> rather than stdout.
.TP
.B \-s, \-\-syslog
Output errors to
.BR syslog(3)
system log module rather than stderr.
.TP
.B \-r, \-\-recursive
Watch all subdirectoriez of any directories passed as arguments, n' you can put dat on yo' toast.  Watches
will be set up recursively ta a unlimited depth.  Symbolic links is not
traversed. Y'all KNOW dat shit, muthafucka!  Newly pimped subdirectories will also be watched.

.B Warning:
If you use dis option while watchin tha root directory
of a big-ass tree, it may take like a while until all inotify watches are
established, n' events aint gonna be received up in dis time.  Also, since one
inotify peep is ghon be established per subdirectory, it is possible dat the
maximum amount of inotify watches per user is ghon be reached. Y'all KNOW dat shit, muthafucka!  Da default
maximum is 8192; it can be increased by freestylin to
.BR /proc/sys/fs/inotify/max_user_watches .

.TP
.B \-q, \-\-quiet
If specified once, tha program is ghon be less verbose.  Specifically, it will not
state when it has completed establishin all inotify watches.

If specified twice, tha program will output not a god damn thang at all, except up in tha case
of fatal errors.

.TP
.B \-\-exclude <pattern>
Do not process any events whose filename matches tha specified POSIX extended
regular expression, case sensitive.

.TP
.B \-\-excludei <pattern>
Do not process any events whose filename matches tha specified POSIX extended
regular expression, case insensitive.

.TP
.B \-t <seconds>, \-\-timeout <seconds>
Exit if a appropriate event has not occurred within <seconds> seconds. If
<seconds> is zero (the default), wait indefinitely fo' a event.

.TP
.B \-e <event>, \-\-event <event>
Listen fo' specific event(s) only.  Da events which can be listened fo' are
listed up in the
.B EVENTS
section. I aint talkin' bout chicken n' gravy biatch.  This option can be specified mo' than once.  If omitted, all events
are listened for.

.TP
.B \-c, \-\-csv
Output up in CSV (comma-separated joints) format.  This is useful when filenames
may contain spaces, since up in dis case it aint safe ta simply split tha output
at each space character.

.TP
.B \-\-timefmt <fmt>
Set a time format strang as accepted by strftime(3) fo' use wit tha `%T' conversion
in tha \-\-format option.

.TP
.B \-\-format <fmt>
Output up in a user-specified format, rockin printf-like syntax.  Da event strings
output is limited ta round 4000 charactas n' is ghon be truncated ta dis length.
Da followin conversions is supported:

.TP
%w
This is ghon be replaced wit tha name of tha Watched file on which a event occurred.

.TP
%f
When a event occurs within a gangbangin' finger-lickin' directory, dis is ghon be replaced wit tha name of the
File which caused tha event ta occur. Shiiit, dis aint no joke.  Otherwise, dis is ghon be replaced wit an
empty string.

.TP
%e
Replaced wit tha Event(s) which occurred, comma-separated.

.TP
%Xe
Replaced wit tha Event(s) which occurred, separated by whichever characta is
in tha place of `X'.

.TP
%T
Replaced wit tha current Time up in tha format specified by tha \-\-timefmt option,
which should be a gangbangin' format strang suitable fo' passin ta strftime(3).



.SH "EXIT STATUS"
.TP
.B 0
Da program executed successfully, n' a event occurred which was being
listened for.
.TP
.B 1
An error occurred up in execution of tha program, or a event occurred which was
not bein listened for. Shiiit, dis aint no joke.  Da latta generally occurs if suttin' happens which
forcibly removes tha inotify peep it, like fuckin a peeped file bein deleted or the
filesystem containin a peeped file bein unmounted.
.TP
.B 2
The
.B \-t
option was used n' a event did not occur up in tha specified interval of time.

.SH EVENTS
Da followin events is valid fo' use wit the
.B \-e
option:

.TP
.B access
A peeped file or a gangbangin' file within a peeped directory was read from.

.TP
.B modify
A peeped file or a gangbangin' file within a peeped directory was freestyled to.

.TP
.B attrib
Da metadata of a peeped file or a gangbangin' file within a peeped directory was
modified. Y'all KNOW dat shit, muthafucka!  This includes timestamps, file permissions, extended attributes etc.

.TP
.B close_write
A peeped file or a gangbangin' file within a peeped directory was closed, afta being
opened up in writeable mode.  This do not necessarily imply tha file was written
to.

.TP
.B close_nowrite
A peeped file or a gangbangin' file within a peeped directory was closed, afta being
opened up in read-only mode.

.TP
.B close
A peeped file or a gangbangin' file within a peeped directory was closed, regardless of
how dat shiznit was opened. Y'all KNOW dat shit, muthafucka!  Note dat dis is straight-up implemented simply by listening
for both
.B close_write
and
.B close_nowrite,
hence all close events received is ghon be output as one of these, not
.B CLOSE.

.TP
.B open
A peeped file or a gangbangin' file within a peeped directory was opened.

.TP
.B moved_to
A file or directory was moved tha fuck into a peeped directory.  This event occurs even
if tha file is simply moved from n' ta tha same directory.

.TP
.B moved_from
A file or directory was moved from a peeped directory.  This event occurs even
if tha file is simply moved from n' ta tha same directory.

.TP
.B move
A file or directory was moved from or ta a peeped directory.  Note dat dis is
actually implemented simply by listenin fo' both
.B moved_to
and
.B moved_from,
hence all close events received is ghon be output as one or both of these, not
.B MOVE.

.TP
.B move_self
A peeped file or directory was moved. Y'all KNOW dat shit, muthafucka! Afta dis event, tha file or directory 
is no longer bein watched.

.TP
.B create
A file or directory was pimped within a peeped directory.

.TP
.B delete
A file or directory within a peeped directory was deleted.

.TP
.B delete_self
A peeped file or directory was deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Afta dis event tha file or directory
is no longer bein watched. Y'all KNOW dat shit, muthafucka!  Note dat dis event can occur even if it is not
explicitly bein listened for.

.TP
.B unmount
Da filesystem on which a peeped file or directory resides was unmounted.
Afta dis event tha file or directory is no longer bein watched. Y'all KNOW dat shit, muthafucka!  Note that
this event can occur even if it aint explicitly bein listened to.


.SH EXAMPLES

.SS Example 1
Hustlin inotifywait all up in tha command-line ta wait fo' any file up in tha `test'
directory ta be accessed. Y'all KNOW dat shit, muthafucka!  Afta hustlin inotifywait, `cat test/foo' is run
in a separate console.

.nf
% inotifywait test
Settin up watches.
Watches established.
test/ ACCESS foo
.fi

.SS Example 2
A short shell script ta efficiently wait fo' httpd-related log lyrics and
do suttin' appropriate.

.nf
#!/bin/sh
while inotifywait -e modify /var/log/lyrics; do
  if tail -n1 /var/log/lyrics | grep httpd; then
    kdialog --msgbox "Apache needz love!"
  fi
done
.fi

.SS Example 3
A custom output format is used ta peep `~/test'.  Meanwhile, one of mah thugs runs
`touch ~/test/badfile; bust a nut on ~/test/goodfile; rm ~/test/badfile' up in another
console.

.nf
% inotifywait -m -r --format '%:e %f' ~/test
Settin up watches.  Beware: since -r was given, dis may take a while!
Watches established.
CREATE badfile
OPEN badfile
ATTRIB badfile
CLOSE_WRITE:CLOSE badfile
CREATE goodfile
OPEN goodfile
ATTRIB goodfile
CLOSE_WRITE:CLOSE goodfile
DELETE badfile
.fi


.SH BUGS
There is race conditions up in tha recursive directory watchin code
which can cause events ta be missed if they occur up in a gangbangin' finger-lickin' directory immediately
afta dat directory is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This is probably not fixable.

It be assumed tha inotify event queue aint NEVER gonna overflow.

.SH AUTHORS
inotifywait is freestyled n' maintained by Rohan McGovern <rohan@mcgovern.id.au>.

inotifywait is part of inotify-tools.  Da inotify-tools joint is located at:
.I http://inotify-tools.sourceforge.net/

.SH "SEE ALSO"
inotifywatch(1), strftime(3), inotify(7)
