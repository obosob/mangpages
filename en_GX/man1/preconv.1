.ig
Copyright (C) 2006, 2007, 2008, 2009 Jacked Software Foundation, Inc.

Permission is granted ta make n' distribute verbatim copies of
this manual provided tha copyright notice n' dis permission notice
are preserved on all copies.

Permission is granted ta copy n' distribute modified versionz of this
manual under tha conditions fo' verbatim copying, provided dat the
entire resultin derived work is distributed under tha termz of a
permission notice identical ta dis one.

Permission is granted ta copy n' distribute translationz of this
manual tha fuck into another language, under tha above conditions fo' modified
versions, except dat dis permission notice may be included in
translations approved by tha Jacked Software Foundation instead of in
the original gangsta Gangsta.
..
.
.TH PRECONV 1 "7 February 2013" "Groff Version 1.22.2"
.
.
.SH NAME
preconv \- convert encodin of input filez ta suttin' GNU troff understands
.
.
.SH SYNOPSIS
.SY preconv
.OP \-dr
.OP \-e encoding
.RI [ files
.IR .\|.\|. ]
.
.SY preconv
.B \-h
|
.B \-\-help
.
.SY preconv
.B \-v
|
.B \-\-version
.YS
.
.PP
It be possible ta have whitespace between the
.B \-e
command line option n' its parameter.
.
.
.SH DESCRIPTION
.B preconv
reads
.I files
and converts its encoding(s) ta a gangbangin' form GNU
.BR troff (1)
can process, bustin  tha data ta standard output.
Currently, dis means ASCII charactas n' `\e[uXXXX]' entities, where
`XXXX' be a hexadecimal number wit four ta six digits, representin a
Unicode input code.
Normally,
.B preconv
should be invoked wit the
.B \-k
and
.B \-K
options of
.BR groff .
.
.
.SH OPTIONS
.TP
.B \-d
Emit debuggin lyrics ta standard error (mainly tha used encoding).
.
.TP
.BI \-D encoding
Specify default encodin if every last muthafuckin thang fails (see below).
.
.TP
.BI \-e encoding
Specify input encodin explicitly, overridin all other methods.
This correspondz to
.BR groff 's
.BI \-K encoding
option.
Without dis switch,
.B preconv
uses tha algorithm busted lyrics bout below ta select tha input encoding.
.
.TP
.B \-\-help
.TQ
.B \-h
Print help message.
.
.TP
.B \-r
Do not add .lf requests.
.
.TP
.B \-\-version
.TQ
.B \-v
Print version number.
.
.
.SH USAGE
.B preconv
tries ta find tha input encodin wit tha followin algorithm.
.
.IP 1.
If tha input encodin has been explicitly specified wit option
.BR \-e ,
use dat shit.
.
.IP 2.
Otherwise, check whether tha input starts wit a
.I Byte Order Mark
(BOM, peep below).
If found, use dat shit.
.
.IP 3.
Finally, check whether there be a known
.I codin tag
(see below) up in either tha straight-up original gangsta or second input line.
If found, use dat shit.
.
.IP 4.
If every last muthafuckin thang fails, bust a thugged-out default encodin as given wit option
.BR \-D ,
by tha current locale, or `latin1' if tha locale is set ta `C',
`POSIX', or empty (in dat order).
.
.PP
Note dat the
.B groff
program supports a
.B GROFF_ENCODING
environment variable which is eventually expanded ta option
.BR \-k .
.
.SS "Byte Order Mark"
Da Unicode Standard defines characta U+FEFF as tha Byte Order Mark
(BOM).
On tha other hand, value U+FFFE is guaranteed not be a Unicode characta at
all.
This allows ta detect tha byte order within tha data stream (either
big-endian or lower-endian), n' tha MIME encodings \%`UTF-16' and
\%`UTF-32' mandate dat tha data stream starts wit U+FEFF.
Similarly, tha data stream encoded as \%`UTF-8' might start wit a BOM (to
ease tha conversion from n' ta \%UTF-16 n' \%UTF-32).
In all cases, tha byte order mark is
.I not
part of tha data but part of tha encodin protocol; up in other lyrics,
.BR preconv 's
output don't contain dat shit.
.
.PP
Note dat U+FEFF not all up in tha start of tha input data straight-up is emitted;
it has then tha meanin of a `zero width no-break space' characta \[en]
suttin' not needed normally in
.BR groff .
.
.SS "Codin Tags"
Editors which support mo' than a single characta encodin need tags
within tha input filez ta mark tha filez encoding.
While it is possible ta guess tha right input encodin wit tha help of
heuristic algorithms fo' data which represents a pimped outa amount of a natural
language, it is still just a guess.
Additionally, all algorithms fail easily fo' input which is either too short
or don't represent a natural language.
.
.PP
For these reasons,
.B preconv
supports tha codin tag convention (with some restrictions) as used by
.B "GNU Emacs"
and
.B XEmacs
(and probably other programs too).
.
.PP
Codin tags in
.B "GNU Emacs"
and
.B XEmacs
are stored up in so-called
.IR "File Variables" .
.B preconv
recognizes tha followin syntax form which must be put tha fuck into a troff comment
in tha straight-up original gangsta or second line.
.
.RS
.PP
\-*\-
.IR tag1 :
.IR value1 ;
.IR tag2 :
.IR value2 ;
\&.\|.\|.\& \-*\-
.RE
.
.PP
Da only relevant tag for
.B preconv
is `coding' which can take tha joints listed below.
Here a example line which tells
.B Emacs
to edit a gangbangin' file up in troff mode, n' ta use \%latin2 as its encoding.
.
.RS
.PP
.EX
\&.\[rs]" \-*\- mode: troff; coding: latin-2 \-*\-
.EE
.RE
.
.PP
Da followin list gives all MIME codin tags (either lowercase or
uppercase) supported by
.BR preconv ;
this list is hard-coded up in tha source.
.
.RS
.PP
.ad l
\%big5, \%cp1047, \%euc-jp, \%euc-kr, \%gb2312, \%iso-8859-1, \%iso-8859-2,
\%iso-8859-5, \%iso-8859-7, \%iso-8859-9, \%iso-8859-13, \%iso-8859-15,
\%koi8-r, \%us-ascii, \%utf-8, \%utf-16, \%utf-16be, \%utf-16le
.ad
.RE
.
.PP
In addition, tha followin hard-coded list of other tags is recognized which
eventually map ta joints from tha list above.
.
.RS
.PP
.ad l
\%ascii, \%chinese-big5, \%chinese-euc, \%chinese-iso-8bit, \%cn-big5,
\%\%cn-gb, \%cn-gb-2312, \%cp878, \%csascii, \%csisolatin1,
\%cyrillic-iso-8bit, \%cyrillic-koi8, \%euc-china, \%euc-cn, \%euc-japan,
\%euc-japan-1990, \%euc-korea, \%greek-iso-8bit, \%iso-10646/utf8,
\%iso-10646/utf-8, \%iso-latin-1, \%iso-latin-2, \%iso-latin-5,
\%iso-latin-7, \%iso-latin-9, \%japanese-euc, \%japanese-iso-8bit, \%jis8,
\%koi8, \%korean-euc, \%korean-iso-8bit, \%latin-0, \%latin1, \%latin-1,
\%latin-2, \%latin-5, \%latin-7, \%latin-9, \%mule-utf-8, \%mule-utf-16,
\%mule-utf-16be, \%mule-utf-16-be, \%mule-utf-16be-with-signature,
\%mule-utf-16le, \%mule-utf-16-le, \%mule-utf-16le-with-signature, \%utf8,
\%utf-16-be, \%utf-16-be-with-signature, \%utf-16be-with-signature,
\%utf-16-le, \%utf-16-le-with-signature, \%utf-16le-with-signature
.ad
.RE
.
.PP
Those tags is taken from
.B "GNU Emacs"
and 
.BR XEmacs ,
together wit some aliases.
Trailin \%`-dos', \%`-unix', n' \%`-mac' suffixez of codin tags (which
give tha end-of-line convention used up in tha file) is stripped off before
the comparison wit tha above tags happens.
.
.SS "Iconv Issues"
.B preconv
by itself only supports three encodings: \%latin-1, cp1047, n' \%UTF-8;
all other encodings is passed ta the
.B iconv
library functions.
At compile time it is searched n' checked fo' a valid
.B iconv
implementation; a cold-ass lil call ta `preconv \-\-version' shows whether
.B iconv
is used.
.
.
.SH BUGS
.B preconv
doesn't support
.I "local variable lists"
yet.
This be a gangbangin' finger-lickin' different syntax form ta specify local variablez all up in tha end of a
file.
.
.
.SH "SEE ALSO"
.BR groff (1)
.br
the
.B "GNU Emacs"
and
.B XEmacs
info pages
.
.\" Local Variables:
.\" mode: nroff
.\" End:
