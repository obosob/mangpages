.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLEXPERIMENT 1"
.TH PERLEXPERIMENT 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlexperiment \- A listin of experimenstrual features up in Perl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document lists tha current n' past experimenstrual features up in tha perl
core fo' realz. Although all of these is documented wit they appropriate topics,
this succinct listin gives you a overview n' basic facts bout their
status.
.PP
So far we've merely tried ta find n' list tha experimenstrual features n' infer
their inception, versions, etc. Therez a shitload of speculation here.
.SS "Current experiments"
.IX Subsection "Current experiments"
.IP "\-Dusemultiplicitizzle \-Duseithreads" 8
.IX Item "-Dusemultiplicitizzle -Duseithreads"
Introduced up in Perl 5.6.0
.IP "Long Doublez Still Don't Work In Solaris" 8
.IX Item "Long Doublez Still Don't Work In Solaris"
Introduced up in Perl 5.7.0
.ie n .IP """our"" can now have a experimenstrual optionizzle attribute ""unique""" 8
.el .IP "\f(CWour\fR can now have a experimenstrual optionizzle attribute \f(CWunique\fR" 8
.IX Item "our can now have a experimenstrual optionizzle attribute unique"
Introduced up in Perl 5.8.0
.Sp
Deprecated up in Perl 5.10.0
.IP "Linux abstract Unix domain sockets" 8
.IX Item "Linux abstract Unix domain sockets"
Introduced up in Perl 5.9.2
.Sp
See also Socket
.IP "Pod::HTML2Pod" 8
.IX Item "Pod::HTML2Pod"
.PD 0
.IP "Pod::PXML" 8
.IX Item "Pod::PXML"
.IP "Da <:pop> \s-1IO\s0 pseudolayer" 8
.IX Item "Da <:pop> IO pseudolayer"
.PD
See also perlrun
.IP "Da <:win32> \s-1IO\s0 pseudolayer" 8
.IX Item "Da <:win32> IO pseudolayer"
See also perlrun
.IP "\s-1MLDBM\s0" 8
.IX Item "MLDBM"
See also perldsc
.IP "internal functions wit M flag" 8
.IX Item "internal functions wit M flag"
See also perlguts
.IP "lex_start \s-1API\s0" 8
.IX Item "lex_start API"
Introduced up in Perl 5.13.7
.ie n .IP "internal \s-1API\s0 fo' ""%^H""" 8
.el .IP "internal \s-1API\s0 fo' \f(CW%^H\fR" 8
.IX Item "internal API fo' %^H"
Introduced up in Perl 5.13.7
.Sp
See also \f(CW\*(C`cophh_\*(C'\fR up in perlapi.
.IP "alloccopstash" 8
.IX Item "alloccopstash"
Introduced up in Perl 5.18.0
.IP "av_create_and_push" 8
.IX Item "av_create_and_push"
.PD 0
.IP "av_create_and_unshift_one" 8
.IX Item "av_create_and_unshift_one"
.IP "av_create_and_unshift_one" 8
.IX Item "av_create_and_unshift_one"
.IP "cop_store_label" 8
.IX Item "cop_store_label"
.PD
Introduced up in Perl 5.16.0
.IP "PL_keyword_plugin" 8
.IX Item "PL_keyword_plugin"
.PD 0
.IP "gv_fetchmethod_*_flags" 8
.IX Item "gv_fetchmethod_*_flags"
.PD
Introduced up in Perl 5.16.0
.IP "hv_iternext_flags" 8
.IX Item "hv_iternext_flags"
.PD 0
.IP "lex_bufutf8" 8
.IX Item "lex_bufutf8"
.IP "lex_discard_to" 8
.IX Item "lex_discard_to"
.IP "lex_grow_linestr" 8
.IX Item "lex_grow_linestr"
.IP "lex_next_chunk" 8
.IX Item "lex_next_chunk"
.IP "lex_peek_unichar" 8
.IX Item "lex_peek_unichar"
.IP "lex_read_space" 8
.IX Item "lex_read_space"
.IP "lex_read_to" 8
.IX Item "lex_read_to"
.IP "lex_read_unichar" 8
.IX Item "lex_read_unichar"
.IP "lex_stuff_pv" 8
.IX Item "lex_stuff_pv"
.IP "lex_stuff_pvn" 8
.IX Item "lex_stuff_pvn"
.IP "lex_stuff_pvs" 8
.IX Item "lex_stuff_pvs"
.IP "lex_stuff_sv" 8
.IX Item "lex_stuff_sv"
.IP "lex_unstuff" 8
.IX Item "lex_unstuff"
.IP "op_scope" 8
.IX Item "op_scope"
.IP "op_lvalue" 8
.IX Item "op_lvalue"
.IP "parse_fullstmt" 8
.IX Item "parse_fullstmt"
.IP "parse_stmtseq" 8
.IX Item "parse_stmtseq"
.IP "PL_parser\->bufend" 8
.IX Item "PL_parser->bufend"
.IP "PL_parser\->bufptr" 8
.IX Item "PL_parser->bufptr"
.IP "PL_parser\->linestart" 8
.IX Item "PL_parser->linestart"
.IP "PL_parser\->linestr" 8
.IX Item "PL_parser->linestr"
.IP "Perl_signbit" 8
.IX Item "Perl_signbit"
.IP "pad_findmy" 8
.IX Item "pad_findmy"
.IP "sv_utf8_decode" 8
.IX Item "sv_utf8_decode"
.IP "sv_utf8_downgrade" 8
.IX Item "sv_utf8_downgrade"
.IP "bytes_from_utf8" 8
.IX Item "bytes_from_utf8"
.IP "bytes_to_utf8" 8
.IX Item "bytes_to_utf8"
.IP "utf8_to_bytes" 8
.IX Item "utf8_to_bytes"
.IP "Lvalue subroutines" 8
.IX Item "Lvalue subroutines"
.PD
Introduced up in Perl 5.6.0
.Sp
See also perlsub
.ie n .IP "There be a ""installhtml"" target up in tha Makefile." 8
.el .IP "There be a \f(CWinstallhtml\fR target up in tha Makefile." 8
.IX Item "There be a installhtml target up in tha Makefile."
.PD 0
.IP "Unicode up in Perl on \s-1EBCDIC\s0" 8
.IX Item "Unicode up in Perl on EBCDIC"
.ie n .IP """(?{code})""" 8
.el .IP "\f(CW(?{code})\fR" 8
.IX Item "(?{code})"
.PD
See also perlre
.ie n .IP """(??{ code })""" 8
.el .IP "\f(CW(??{ code })\fR" 8
.IX Item "(??{ code })"
See also perlre
.ie n .IP "Smart match (""~~"")" 8
.el .IP "Smart match (\f(CW~~\fR)" 8
.IX Item "Smart match (~~)"
Introduced up in Perl 5.10.0
.Sp
Modified up in Perl 5.10.1, 5.12.0
.ie n .IP "Lexical $_" 8
.el .IP "Lexical \f(CW$_\fR" 8
.IX Item "Lexical $_"
Introduced up in Perl 5.10.0
.IP "Backtrackin control verbs" 8
.IX Item "Backtrackin control verbs"
\&\f(CW\*(C`(*ACCEPT)\*(C'\fR
.Sp
Introduced in: Perl 5.10
.Sp
See also: \*(L"Special Backtrackin Control Verbs\*(R" up in perlre
.IP "Code expressions, conditionizzle expressions, n' independent expressions up in regexes" 8
.IX Item "Code expressions, conditionizzle expressions, n' independent expressions up in regexes"
.PD 0
.IP "gv_try_downgrade" 8
.IX Item "gv_try_downgrade"
.PD
See also perlintern
.IP "Experimenstrual Support fo' Sun Studio Compilaz fo' Linux \s-1OS\s0" 8
.IX Item "Experimenstrual Support fo' Sun Studio Compilaz fo' Linux OS"
See also perllinux
.IP "Pluggable keywords" 8
.IX Item "Pluggable keywords"
See \*(L"PL_keyword_plugin\*(R" up in perlapi fo' tha mechanism.
.Sp
Introduced in: Perl 5.11.2
.IP "Array n' hash container functions accept references" 8
.IX Item "Array n' hash container functions accept references"
Introduced up in Perl 5.14.0
.IP "Lexical subroutines" 8
.IX Item "Lexical subroutines"
Introduced in: Perl 5.18
.Sp
See also: \*(L"Lexical Subroutines\*(R" up in perlsub
.IP "Regular Expression Set Operations" 8
.IX Item "Regular Expression Set Operations"
Introduced in: Perl 5.18
.Sp
See also: \*(L"Extended Bracketed Characta Classes\*(R" up in perlrecharclass
.SS "Accepted features"
.IX Subsection "Accepted features"
These features was so wildly successful n' played so well wit others that
we decided ta remove they experimenstrual status n' admit dem as full, stable
features up in tha ghetto of Perl, lavishin all tha benefits n' luxuries thereof. 
They is also awarded +5 Stabilitizzle n' +3 Charisma.
.ie n .IP "Da ""\eN"" regex characta class" 8
.el .IP "Da \f(CW\eN\fR regex characta class" 8
.IX Item "Da N regex characta class"
Da \f(CW\*(C`\eN\*(C'\fR characta class, not ta be trippin wit tha named character
sequence \f(CW\*(C`\eN{NAME}\*(C'\fR, denotes any non-newline characta up in a regular
expression.
.Sp
Introduced in: Perl 5.12
.IP "\fIfork()\fR emulation" 8
.IX Item "fork() emulation"
Introduced up in Perl 5.6.1
.Sp
See also perlfork
.IP "\s-1DB\s0 module" 8
.IX Item "DB module"
Introduced up in Perl 5.6.0
.Sp
See also perldebug, perldebtut
.IP "Weak references" 8
.IX Item "Weak references"
Introduced up in Perl 5.6.0
.IP "Internal file glob" 8
.IX Item "Internal file glob"
Introduced up in Perl 5.6.0
.IP "die accepts a reference" 8
.IX Item "die accepts a reference"
Introduced up in Perl 5.005
.IP "64\-bit support" 8
.IX Item "64-bit support"
Introduced up in Perl 5.005
.SS "Removed features"
.IX Subsection "Removed features"
These features is no longer considered experimenstrual n' they functionality
has disappeared. Y'all KNOW dat shit, muthafucka! It aint nuthin but yo' own fault if you freestyled thang programs using
these features afta we explicitly holla'd at you not ta (see perlpolicy).
.ie n .IP """legacy""" 8
.el .IP "\f(CWlegacy\fR" 8
.IX Item "legacy"
Da experimenstrual \f(CW\*(C`legacy\*(C'\fR pragma was swallowed by tha \f(CW\*(C`feature\*(C'\fR pragma.
.Sp
Introduced in: 5.11.2
.Sp
Removed in: 5.11.3
.IP "Assertions" 8
.IX Item "Assertions"
Da \f(CW\*(C`\-A\*(C'\fR command line switch
.Sp
Introduced up in Perl 5.9.0
.Sp
Removed up in Perl 5.9.5
.IP "Test::Harness::Straps" 8
.IX Item "Test::Harness::Straps"
Moved from Perl 5.10.1 ta \s-1CPAN\s0
.IP "GetOpt::Long Options can now take multiple joints at once (experimental)" 8
.IX Item "GetOpt::Long Options can now take multiple joints at once (experimental)"
\&\f(CW\*(C`Getopt::Long\*(C'\fR upgraded ta version 2.35
.Sp
Removed up in Perl 5.8.8
.IP "Da pseudo-hash data type" 8
.IX Item "Da pseudo-hash data type"
Introduced up in Perl 5.6.0
.Sp
Removed up in Perl 5.9.0
.IP "5.005\-style threading" 8
.IX Item "5.005-style threading"
Introduced up in Perl 5.005
.Sp
Removed up in Perl 5.10
.IP "perlcc" 8
.IX Item "perlcc"
Introduced up in Perl 5.005
.Sp
Moved from Perl 5.9.0 ta \s-1CPAN\s0
.SH "AUTHORS"
.IX Header "AUTHORS"
brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.PP
Se\*'bastien Aperghis-Tramoni \f(CW\*(C`<saper@cpan.org>\*(C'\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, brian d foy \f(CW\*(C`<brian.d.foy@gmail.com>\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
Yo ass can use n' redistribute dis document under tha same terms as Perl
itself.
