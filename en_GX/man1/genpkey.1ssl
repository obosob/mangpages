.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GENPKEY 1"
.TH GENPKEY 1 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
genpkey \- generate a private key
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBgenpkey\fR
[\fB\-out filename\fR]
[\fB\-outform PEM|DER\fR]
[\fB\-pass arg\fR]
[\fB\-cipher\fR]
[\fB\-engine id\fR]
[\fB\-paramfile file\fR]
[\fB\-algorithm alg\fR]
[\fB\-pkeyopt opt:value\fR]
[\fB\-genparam\fR]
[\fB\-text\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBgenpkey\fR command generates a private key.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
the output filename. If dis argument aint specified then standard output is
used.
.IP "\fB\-outform DER|PEM\fR" 4
.IX Item "-outform DER|PEM"
This specifies tha output format \s-1DER\s0 or \s-1PEM.\s0
.IP "\fB\-pass arg\fR" 4
.IX Item "-pass arg"
the output file password source. For mo' shiznit bout tha format of \fBarg\fR
see tha \fB\s-1PASS PHRASE ARGUMENTS\s0\fR section up in \fIopenssl\fR\|(1).
.IP "\fB\-cipher\fR" 4
.IX Item "-cipher"
This option encrypts tha private key wit tha supplied cipher n' shiznit fo' realz. Any algorithm
name accepted by \fIEVP_get_cipherbyname()\fR be aaight like fuckin \fBdes3\fR.
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBgenpkey\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms. If used dis option should precede all other
options.
.IP "\fB\-algorithm alg\fR" 4
.IX Item "-algorithm alg"
hood key algorithm ta use like fuckin \s-1RSA, DSA\s0 or \s-1DH.\s0 If used dis option must
precede any \fB\-pkeyopt\fR options. Da options \fB\-paramfile\fR n' \fB\-algorithm\fR
are mutually exclusive.
.IP "\fB\-pkeyopt opt:value\fR" 4
.IX Item "-pkeyopt opt:value"
set tha hood key algorithm option \fBopt\fR ta \fBvalue\fR. Da precise set of
options supported dependz on tha hood key algorithm used n' its
implementation. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See \fB\s-1KEY GENERATION OPTIONS\s0\fR below fo' mo' details.
.IP "\fB\-genparam\fR" 4
.IX Item "-genparam"
generate a set of parametas instead of a private key. If used dis option must
precede n' \fB\-algorithm\fR, \fB\-paramfile\fR or \fB\-pkeyopt\fR options.
.IP "\fB\-paramfile filename\fR" 4
.IX Item "-paramfile filename"
Some hood key algorithms generate a private key based on a set of parameters.
They can be supplied rockin dis option. I aint talkin' bout chicken n' gravy biatch. If dis option is used tha hood key
algorithm used is determined by tha parameters. If used dis option must
precede n' \fB\-pkeyopt\fR options. Da options \fB\-paramfile\fR n' \fB\-algorithm\fR
are mutually exclusive.
.IP "\fB\-text\fR" 4
.IX Item "-text"
Print a (unencrypted) text representation of private n' hood keys and
parametas along wit tha \s-1PEM\s0 or \s-1DER\s0 structure.
.SH "KEY GENERATION OPTIONS"
.IX Header "KEY GENERATION OPTIONS"
Da options supported by each algorith n' indeed each implementation of an
algorithm can vary. Da options fo' tha OpenSSL implementations is detailed
below.
.SH "RSA KEY GENERATION OPTIONS"
.IX Header "RSA KEY GENERATION OPTIONS"
.IP "\fBrsa_keygen_bits:numbits\fR" 4
.IX Item "rsa_keygen_bits:numbits"
Da number of bits up in tha generated key. If not specified 1024 is used.
.IP "\fBrsa_keygen_pubexp:value\fR" 4
.IX Item "rsa_keygen_pubexp:value"
Da \s-1RSA\s0 hood exponent value. This can be a big-ass decimal or
hexadecimal value if preceded by \fB0x\fR. Default value is 65537.
.SH "DSA PARAMETER GENERATION OPTIONS"
.IX Header "DSA PARAMETER GENERATION OPTIONS"
.IP "\fBdsa_paramgen_bits:numbits\fR" 4
.IX Item "dsa_paramgen_bits:numbits"
Da number of bits up in tha generated parameters. If not specified 1024 is used.
.SH "DH PARAMETER GENERATION OPTIONS"
.IX Header "DH PARAMETER GENERATION OPTIONS"
.IP "\fBdh_paramgen_prime_len:numbits\fR" 4
.IX Item "dh_paramgen_prime_len:numbits"
Da number of bits up in tha prime parameta \fBp\fR.
.IP "\fBdh_paramgen_generator:value\fR" 4
.IX Item "dh_paramgen_generator:value"
Da value ta use fo' tha generator \fBg\fR.
.SH "EC PARAMETER GENERATION OPTIONS"
.IX Header "EC PARAMETER GENERATION OPTIONS"
.IP "\fBec_paramgen_curve:curve\fR" 4
.IX Item "ec_paramgen_curve:curve"
the \s-1EC\s0 curve ta use.
.SH "GOST2001 KEY GENERATION AND PARAMETER OPTIONS"
.IX Header "GOST2001 KEY GENERATION AND PARAMETER OPTIONS"
Gost 2001 support aint enabled by default. To enable dis algorithm,
one should load tha ccgost engine up in tha OpenSSL configuration file.
See \s-1README\s0.gost file up in tha engines/ccgost directiry of tha source
distribution fo' mo' details.
.PP
Use of a parameta file fo' tha \s-1GOST R 34.10\s0 algorithm is optional.
Parametas can be specified durin key generation directly as well as
durin generation of parameta file.
.IP "\fBparamset:name\fR" 4
.IX Item "paramset:name"
Specifies \s-1GOST R 34.10\-2001\s0 parameta set accordin ta \s-1RFC 4357.\s0
Parameta set can be specified rockin abbreviated name, object short name or
numeric \s-1OID.\s0 Peepin parameta sets is supported:
.Sp
.Vb 7
\&  paramset   OID               Usage
\&  A          1.2.643.2.2.35.1  Signature
\&  B          1.2.643.2.2.35.2  Signature
\&  C          1.2.643.2.2.35.3  Signature
\&  XA         1.2.643.2.2.36.0  Key exchange
\&  XB         1.2.643.2.2.36.1  Key exchange
\&  test       1.2.643.2.2.35.0  Test purposes
.Ve
.SH "NOTES"
.IX Header "NOTES"
Da use of tha genpkey program is encouraged over tha algorithm specific
utilitizzles cuz additionizzle algorithm options n' \s-1ENGINE\s0 provided algorithms
can be used.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Generate a \s-1RSA\s0 private key rockin default parameters:
.PP
.Vb 1
\& openssl genpkey \-algorithm RSA \-out key.pem
.Ve
.PP
Encrypt output private key rockin 128 bit \s-1AES\s0 n' tha passphrase \*(L"hello\*(R":
.PP
.Vb 1
\& openssl genpkey \-algorithm RSA \-out key.pem \-aes\-128\-cbc \-pass pass:hello
.Ve
.PP
Generate a 2048 bit \s-1RSA\s0 key rockin 3 as tha hood exponent:
.PP
.Vb 2
\& openssl genpkey \-algorithm RSA \-out key.pem \-pkeyopt rsa_keygen_bits:2048 \e
\&                                                \-pkeyopt rsa_keygen_pubexp:3
.Ve
.PP
Generate 1024 bit \s-1DSA\s0 parameters:
.PP
.Vb 2
\& openssl genpkey \-genparam \-algorithm DSA \-out dsap.pem \e
\&                                                \-pkeyopt dsa_paramgen_bits:1024
.Ve
.PP
Generate \s-1DSA\s0 key from parameters:
.PP
.Vb 1
\& openssl genpkey \-paramfile dsap.pem \-out dsakey.pem
.Ve
.PP
Generate 1024 bit \s-1DH\s0 parameters:
.PP
.Vb 2
\& openssl genpkey \-genparam \-algorithm DH \-out dhp.pem \e
\&                                        \-pkeyopt dh_paramgen_prime_len:1024
.Ve
.PP
Generate \s-1DH\s0 key from parameters:
.PP
.Vb 1
\& openssl genpkey \-paramfile dhp.pem \-out dhkey.pem
.Ve
