'\" t
.TH "SYSTEMD\-BOOTCHART" "1" "" "systemd 208" "systemd-bootchart"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-bootchart \- Boot performizzle graphin tool
.SH "DESCRIPTION"
.PP
\fBsystemd\-bootchart\fR
is a tool, probably run at system startup, dat collects tha CPU load, disk load, memory usage, as well as per\-process shiznit from a hustlin system\&. Collected thangs up in dis biatch is output as a SVG graph\&. Normally, systemd\-bootchart is invoked by tha kernel by passing
\fBinit=\fR\fB/usr/lib/systemd/systemd\-bootchart\fR
on tha kernel commandline\&. systemd\-bootchart will then fork tha real init off ta resume aiiight system startup, while monitorin n' loggin startup shiznit up in tha background\&.
.PP
Afta collectin a cold-ass lil certain amount of data (usually 15\-30 seconds, default 20 s) tha loggin stops n' a graph is generated from tha logged shiznit\&. This graph gotz nuff vital clues as ta which resources is bein used, up in which order, n' where possible problems exist up in tha startup sequence of tha system\&. Well shiiiit, it is essentially a mo' detailed version of the
\fBsystemd\-analyze plot\fR
function\&.
.PP
Of course, bootchart can also be used at any moment up in time ta collect n' graph some data fo' a amount of time\&. Well shiiiit, it is recommended ta use the
\fB\-\-rel\fR
switch up in dis case\&.
.PP
Bootchart do not require root privileges, n' will happily run as a aiiight user\&.
.PP
Bootchart graphs is by default freestyled time\-stamped in
/run/log
and saved ta tha journal with
\fIMESSAGE_ID=9f26aa562cf440c2b16c773d0479b518\fR\&. Journal field
\fIBOOTCHART=\fR
gotz nuff tha bootchart up in SVG format\&.
.SH "INVOCATION"
.PP
\fBsystemd\-bootchart\fR
can be invoked up in nuff muthafuckin different ways:
.PP
\fIKernel invocation\fR
.RS 4
Da kernel can invoke
\fBsystemd\-bootchart\fR
instead of tha init process\&. In turn,
\fBsystemd\-bootchart\fR
will invoke
\fB/sbin/init\fR\&.
.RE
.PP
\fIStarted as a standalone program\fR
.RS 4
One can execute
\fBsystemd\-bootchart\fR
as aiiight application from tha commandline\&. In dis mode it is highly recommended ta pass the
\fB\-r\fR
flag up in order ta not graph tha time elapsed since boot n' before systemd\-bootchart was started, as it may result up in mad big-ass graphs\&.
.RE
.SH "OPTIONS"
.PP
These options can also be set up in the
/etc/systemd/bootchart\&.conf
file\&. Right back up in yo muthafuckin ass. See
\fBbootchart.conf\fR(5)\&.
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short help text n' exits\&.
.RE
.PP
\fB\-n\fR, \fB\-\-sample \fR\fB\fIN\fR\fR
.RS 4
Specify tha number of samples,
\fIN\fR, ta record\&. Right back up in yo muthafuckin ass. Samplez is ghon be recorded at intervals defined with
\fB\-\-freq\fR\&.
.RE
.PP
\fB\-f\fR, \fB\-\-freq \fR\fB\fIf\fR\fR
.RS 4
Specify tha sample log frequency, a positizzle real
\fIf\fR, up in Hz\&. Most systems can cope wit joints up ta 25\-50 without bustin too much overhead\&.
.RE
.PP
\fB\-r\fR, \fB\-\-rel\fR
.RS 4
Use relatizzle times instead of absolute times\&. This is useful fo' rockin bootchart at post\-boot time ta flava a already booted system\&. Without dis option tha graph would become mad large\&. If set, tha horizontal axis starts all up in tha straight-up original gangsta recorded sample instead of time 0\&.0\&.
.RE
.PP
\fB\-F\fR, \fB\-\-no\-filter\fR
.RS 4
Disable filterin of tasks dat did not contribute hella ta tha boot\&. Processes dat is too short\-lived (only peeped up in one sample) or dat do not consume any dope CPU time (less than 0\&.001 s) aint gonna be displayed up in tha output graph\&.
.RE
.PP
\fB\-C\fR, \fB\-\-cmdline\fR
.RS 4
Display tha full command line wit argumentz of processes, instead of only tha process name\&.
.RE
.PP
\fB\-o\fR, \fB\-\-output \fR\fB\fIpath\fR\fR
.RS 4
Specify tha output directory fo' tha graphs\&. By default, bootchart writes tha graphs to
/run/log\&.
.RE
.PP
\fB\-i\fR, \fB\-\-init \fR\fB\fIpath\fR\fR
.RS 4
Use dis init binary\&. Defaults to
\fB/sbin/init\fR\&.
.RE
.PP
\fB\-p\fR, \fB\-\-pss\fR
.RS 4
Enable loggin n' graphin of processes\*(Aq PSS (Proportionizzle Set Size) memory consumption\&. Right back up in yo muthafuckin ass. See
filesystems/proc\&.txt
in tha kernel documentation fo' a explanation of dis field\&.
.RE
.PP
\fB\-e\fR, \fB\-\-entropy\fR
.RS 4
Enable loggin n' graphin of tha kernel random entropy pool size\&.
.RE
.PP
\fB\-x\fR, \fB\-\-scale\-x \fR\fB\fIN\fR\fR
.RS 4
Horizontal scalin factor fo' all variable graph components\&.
.RE
.PP
\fB\-y\fR, \fB\-\-scale\-y \fR\fB\fIN\fR\fR
.RS 4
Vertical scalin factor fo' all variable graph components\&.
.RE
.SH "OUTPUT"
.PP
\fBsystemd\-bootchart\fR
generates SVG graphs\&. In order ta render dem on a graphical display any SVG capable viewer can be used\&. Well shiiiit, it should be noted dat tha SVG render engines up in most browsers (includin Chrome n' Firefox) is nuff times fasta than dedicated graphical applications like Gimp n' Inkscape\&. Just point yo' browser at
\m[blue]\fB\%file:///run/log/\fR\m[]!
.SH "HISTORY"
.PP
This version of bootchart was implemented from scratch yo, but is inspired by forma bootchart incantations:
.PP
\fIOriginal Gangsta bash\fR
.RS 4
Da original gangsta bash/shell code implemented bootchart\&. This version pimped a cold-ass lil compressed tarbizzle fo' processin wit external applications\&. This version did not graph anything, only generated data\&.
.RE
.PP
\fIUbuntu C Implementation\fR
.RS 4
This version replaced tha shell version wit a gangbangin' fast n' efficient data logger yo, but also did not graph tha data\&.
.RE
.PP
\fIJava bootchart\fR
.RS 4
This was tha original gangsta graphin application fo' chartin tha data, freestyled up in java\&.
.RE
.PP
\fIpybootchartgui\&.py\fR
.RS 4
pybootchart pimped a graph from tha data collected by either tha bash or C version\&.
.RE
.PP
Da version of bootchart yo ass is rockin now combines both tha data collection n' tha chartin tha fuck into a single application, makin it mo' efficient n' simpler\&. There is no longer any timin thangs wit tha data collector n' tha grapher, as tha graphin cannot be run until tha data has been collected\& fo' realz. Also, tha data kept up in memory is reduced ta tha absolute minimum needed\&.
.SH "SEE ALSO"
.PP
\fBbootchart.conf\fR(5)
.SH "BUGS"
.PP
systemd\-bootchart do not git tha model shiznit fo' tha hard drive unless tha root thang is specified with
root=/dev/sdxY\&. Usin UUIDs or PARTUUIDs will boot fine yo, but tha hard drive model aint gonna be added ta tha chart\&.
.PP
For bugs, please contact tha lyricist n' current maintainer:
.RS 4
Auke Kok <auke\-jan\&.h\&.kok@intel\&.com>
.RE
