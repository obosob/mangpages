." Copyright (c) 2004, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH jstatd 1 "16 Mar 2012"

.LP
.SH "Name"
jstatd \- Virtual Machine jstat Daemon
.LP
.SH "SYNOPSIS"
.LP
.nf
\f3
.fl
jstatd [ \fP\f4options\fP\f3 ]\fP
.br
\f3
.fl
\fP
.fi

.LP
.SH "PARAMETERS"
.LP
.RS 3
.TP 3
options 
Command\-line options. Da options may be up in any order n' shit. If there be redundant or contradictory options, tha last option specified will take precedence. 
.RE

.LP
.SH "DESCRIPTION"
.LP
.LP
Da \f3jstatd\fP tool be a RMI server application dat monitors fo' tha creation n' termination of instrumented HotSpot Java virtual machines (JVMs) n' serves up a intercourse ta allow remote monitorin tools ta attach ta JVMs hustlin on tha local host.
.LP
.LP
Da \f3jstatd\fP server requires tha presence of a RMI registry on tha local host. Da \f3jstatd\fP server will attempt ta attach ta tha RMI registry on tha default port, or on tha port indicated by tha \f2\-p port\fP option. I aint talkin' bout chicken n' gravy biatch. If a RMI registry aint found, one is ghon be pimped within tha \f3jstatd\fP application bound ta tha port indicated by tha \f2\-p port\fP option or ta tha default RMI registry port if \f2\-p port\fP is omitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Creation of a internal RMI registry can be inhibited by specifyin tha \f2\-nr\fP option.
.LP
.LP
\f3NOTE:\fP This utilitizzle is unsupported n' may or may not be available up in future versionz of tha JDK. Well shiiiit, it aint currently available on tha Windows 98 n' Windows ME platforms.
.LP
.SH "OPTIONS"
.LP
.LP
Da \f3jstatd\fP command supports tha followin options:
.LP
.RS 3
.TP 3
\-nr 
Do not attempt ta create a internal RMI registry within tha \f2jstatd\fP process when a existin RMI registry aint found. Y'all KNOW dat shit, muthafucka! 
.TP 3
\-p\  port 
Port number where tha RMI registry is sposed ta fuckin be found, or, if not found, pimped if \f2\-nr\fP aint specified. Y'all KNOW dat shit, muthafucka! 
.TP 3
\-n\  rminame 
Name ta which tha remote RMI object is bound up in tha RMI registry. Da default name is \f2JStatRemoteHost\fP. If multiple \f3jstatd\fP servers is started on tha same host, tha name of tha exported RMI object fo' each server can be made unique by specifyin dis option. I aint talkin' bout chicken n' gravy biatch. But fuck dat shiznit yo, tha word on tha street is dat bustin so will require dat tha unique server name be included up in tha monitorin clientz \f2hostid\fP n' \f2vmid\fP strings. 
.TP 3
\-Joption 
Pass \f2option\fP ta tha \f3java\fP launcher called by \f3javac\fP. For example, \f3\-J\-Xms48m\fP sets tha startup memory ta 48 megabytes. Well shiiiit, it aint nuthin but a cold-ass lil common convention fo' \f3\-J\fP ta pass options ta tha underlyin VM executin applications freestyled up in Java. 
.RE

.LP
.SH "SECURITY"
.LP
.LP
Da \f3jstatd\fP server can only monitor JVMs fo' which it has tha appropriate natizzle access permissions. Therefor tha \f3jstatd\fP process must be hustlin wit tha same user credentials as tha target JVMs. Right back up in yo muthafuckin ass. Some user credentials, like fuckin tha \f2root\fP user up in UNIX(TM) based systems, have permission ta access tha instrumentation exported by any JVM on tha system fo' realz. A \f3jstatd\fP process hustlin wit such credentials can monitor any JVM on tha system yo, but introduces additionizzle securitizzle concerns.
.LP
.LP
Da \f3jstatd\fP server do not provide any authentication of remote clients, n' you can put dat on yo' toast. Therefore, hustlin a \f3jstatd\fP server process exposes tha instrumentation export by all JVMs fo' which tha \f3jstatd\fP process has access permissions ta any user on tha network. This exposure may be undesireable up in yo' environment n' local securitizzle policies should be considered before startin tha \f3jstatd\fP process, particularly up in thang environments or on unsecure networks.
.LP
.LP
Da \f3jstatd\fP server installs a instizzle of RMISecurityPolicy if no other securitizzle manager has been installed n' therefore requires a securitizzle policy file ta be specified. Y'all KNOW dat shit, muthafucka! Da policy file must conform ta tha default policy implementationz 
.na
\f2Policy File Syntax\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html.
.LP
.LP
Da followin policy file will allow tha \f3jstatd\fP server ta run without any securitizzle exceptions. This policy is less liberal then grantin all permissions ta all codebases yo, but is mo' liberal than a policy dat grants tha minimal permissions ta run tha \f3jstatd\fP server.
.LP
.nf
\f3
.fl
grant codebase "file:${java.home}/../lib/tools.jar" {\fP
.br
\f3
.fl
   permission java.security.AllPermission;\fP
.br
\f3
.fl
};\fP
.br
\f3
.fl
\fP
.fi

.LP
.LP
To use dis policy, copy tha text tha fuck into a gangbangin' file called \f2jstatd.all.policy\fP n' run tha \f3jstatd\fP server as bigs up:
.LP
.nf
\f3
.fl
jstatd \-J\-Djava.security.policy=jstatd.all.policy\fP
.br
\f3
.fl
\fP
.fi

.LP
.LP
For cribs wit mo' restrictizzle securitizzle practices, it is possible ta bust a cold-ass lil custom policy file ta limit access ta specific trusted hosts or networks, though such steez is subject ta IP addreess spoofin attacks. If yo' securitizzle concerns cannot be addressed wit a cold-ass lil customized policy file, then tha safest action is ta not run tha \f3jstatd\fP server n' use tha \f3jstat\fP n' \f3jps\fP tools locally.
.LP
.SH "REMOTE INTERFACE"
.LP
.LP
Da intercourse exported by tha \f3jstatd\fP process is proprietary n' is guaranteed ta chizzle. Users n' pimpers is discouraged from freestylin ta dis intercourse.
.LP
.SH "EXAMPLES"
.LP
.LP
Here is some examplez of startin \f3jstatd\fP. Note dat tha \f3jstatd\fP scripts automatically start tha server up in tha background.
.LP
.SS 
Usin Internal RMI Registry
.LP
.LP
This example demonstrates startin \f3jstatd\fP wit a internal RMI registry. This example assumes dat no other server is bound ta tha default RMI Registry port (port 1099).
.LP
.nf
\f3
.fl
jstatd \-J\-Djava.security.policy=all.policy
.fl
\fP
.fi

.LP
.SS 
Usin External RMI Registry
.LP
.LP
This example demonstrates startin \f3jstatd\fP wit a external RMI registry.
.LP
.nf
\f3
.fl
rmiregistry&
.fl
jstatd \-J\-Djava.security.policy=all.policy
.fl
\fP
.fi

.LP
.LP
This example demonstrates startin \f3jstatd\fP wit a external RMI registry server on port 2020.
.LP
.nf
\f3
.fl
rmiregistry 2020&
.fl
jstatd \-J\-Djava.security.policy=all.policy \-p 2020
.fl
\fP
.fi

.LP
.LP
This example demonstrates startin \f3jstatd\fP wit a external RMI registry on port 2020, bound ta name AlternateJstatdServerName.
.LP
.nf
\f3
.fl
rmiregistry 2020&
.fl
jstatd \-J\-Djava.security.policy=all.policy \-p 2020 \-n AlternateJstatdServerName
.fl
\fP
.fi

.LP
.SS 
Inhibitin creation of a in\-process RMI registry
.LP
.LP
This example demonstrates startin \f3jstatd\fP such dat it aint gonna create a RMI registry if one aint found. Y'all KNOW dat shit, muthafucka! This example assumes a RMI registry be already hustlin. If it is not, a appropriate error message is emitted.
.LP
.nf
\f3
.fl
jstatd \-J\-Djava.security.policy=all.policy \-nr
.fl
\fP
.fi

.LP
.SS 
Enablin RMI loggin capabilities.
.LP
.LP
This example demonstrates startin \f3jstatd\fP wit RMI loggin capabilitizzles enabled. Y'all KNOW dat shit, muthafucka! This technique is useful as a shitshootin aid or fo' monitorin server activities.
.LP
.nf
\f3
.fl
jstatd \-J\-Djava.security.policy=all.policy \-J\-Djava.rmi.server.logCalls=true
.fl
\fP
.fi

.LP
.SH "SEE ALSO"
.LP
.RS 3
.TP 2
o
java(1) \- tha Java Application Launcher 
.TP 2
o
jps(1) \- tha Java Process Status Application 
.TP 2
o
jstat(1) \- tha Java Virtual Machine Statistics Monitorin Tool 
.TP 2
o
.na
\f2rmiregistry\fP @
.fi
http://docs.oracle.com/javase/7/docs/technotes/tools/index.html#rmi \- tha Java Remote Object Registry 
.RE

.LP
 
