'\" t
.\"     Title: git-annotate
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-ANNOTATE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-annotate \- Annotate file lines wit commit shiznit
.SH "SYNOPSIS"
.sp
.nf
\fIgit annotate\fR [options] file [revision]
.fi
.sp
.SH "DESCRIPTION"
.sp
Annotates each line up in tha given file wit shiznit from tha commit which introduced tha line\&. Optionally annotates from a given revision\&.
.sp
Da only difference between dis command n' \fBgit-blame\fR(1) is dat they use slightly different output formats, n' dis command exists only fo' backward compatibilitizzle ta support existin scripts, n' provide a mo' familiar command name fo' playas comin from other SCM systems\&.
.SH "OPTIONS"
.PP
\-b
.RS 4
Show blank SHA\-1 fo' boundary commits\&. This can also be controlled via the
blame\&.blankboundary
config option\&.
.RE
.PP
\-\-root
.RS 4
Do not treat root commits as boundaries\&. This can also be controlled via the
blame\&.showroot
config option\&.
.RE
.PP
\-\-show\-stats
.RS 4
Include additionizzle statistics all up in tha end of blame output\&.
.RE
.PP
\-L <start>,<end>, \-L :<regex>
.RS 4
Annotate only tha given line range\&. May be specified multiple times\&. Overlappin ranges is allowed\&.
.sp
<start> n' <end> is optional\&. \(lq\-L <start>\(rq or \(lq\-L <start>,\(rq spans from <start> ta end of file\&. \(lq\-L ,<end>\(rq spans from start of file ta <end>\&.
.sp
<start> n' <end> can take one of these forms:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
number
.sp
If <start> or <end> be a number, it specifies a absolute line number (lines count from 1)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
/regex/
.sp
This form will use tha straight-up original gangsta line matchin tha given POSIX regex\&. If <start> be a regex, it will search from tha end of tha previous
\-L
range, if any, otherwise from tha start of file\&. If <start> is \(lq^/regex/\(rq, it will search from tha start of file\&. If <end> be a regex, it will search startin all up in tha line given by <start>\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
+offset or \-offset
.sp
This is only valid fo' <end> n' will specify a fuckin shitload of lines before or afta tha line given by <start>\&.
.RE
.sp
If \(lq:<regex>\(rq is given up in place of <start> n' <end>, it denotes tha range from tha straight-up original gangsta funcname line dat matches <regex>, up ta tha next funcname line\&. \(lq:<regex>\(rq searches from tha end of tha previous
\-L
range, if any, otherwise from tha start of file\&. \(lq^:<regex>\(rq searches from tha start of file\&.
.RE
.PP
\-l
.RS 4
Show long rev (Default: off)\&.
.RE
.PP
\-t
.RS 4
Show raw timestamp (Default: off)\&.
.RE
.PP
\-S <revs\-file>
.RS 4
Use revisions from revs\-file instead of calling
\fBgit-rev-list\fR(1)\&.
.RE
.PP
\-\-reverse
.RS 4
Walk history forward instead of backward\&. Instead of showin tha revision up in which a line rocked up, dis shows tha last revision up in which a line has existed\&. This requires a range of revision like START\&.\&.END where tha path ta blame exists up in START\&.
.RE
.PP
\-p, \-\-porcelain
.RS 4
Show up in a gangbangin' format designed fo' machine consumption\&.
.RE
.PP
\-\-line\-porcelain
.RS 4
Show tha porcelain format yo, but output commit shiznit fo' each line, not just tha last time a cold-ass lil commit is referenced\&. Implies \-\-porcelain\&.
.RE
.PP
\-\-incremental
.RS 4
Show tha result incrementally up in a gangbangin' format designed fo' machine consumption\&.
.RE
.PP
\-\-encoding=<encoding>
.RS 4
Specifies tha encodin used ta output lyricist names n' commit summaries\&. Right back up in yo muthafuckin ass. Settin it to
none
makes blame output unconverted data\&. For mo' shiznit peep tha rap bout encodin up in the
\fBgit-log\fR(1)
manual page\&.
.RE
.PP
\-\-contents <file>
.RS 4
When <rev> aint specified, tha command annotates tha chizzlez startin backwardz from tha hustlin tree copy\&. This flag make tha command pretend as if tha hustlin tree copy has tha contentz of tha named file (specify
\-
to make tha command read from tha standard input)\&.
.RE
.PP
\-\-date <format>
.RS 4
Da value is one of tha followin alternatives: {relative,local,default,iso,rfc,short}\&. If \-\-date aint provided, tha value of tha blame\&.date config variable is used\&. If tha blame\&.date config variable be also not set, tha iso format is used\&. For mo' shiznit, See tha rap of tha \-\-date option at
\fBgit-log\fR(1)\&.
.RE
.PP
\-M|<num>|
.RS 4
Detect moved or copied lines within a gangbangin' file\&. When a cold-ass lil commit moves or copies a funky-ass block of lines (e\&.g\&. tha original gangsta file has A n' then B, n' tha commit chizzlez it ta B n' then A), tha traditional
\fIblame\fR
algorithm notices only half of tha movement n' typically blames tha lines dat was moved up (i\&.e\&. B) ta tha parent n' assigns blame ta tha lines dat was moved down (i\&.e\& fo' realz. A) ta tha lil pimp commit\&. With dis option, both crewz of lines is blamed on tha parent by hustlin extra passez of inspection\&.
.sp
<num> is optionizzle but it is tha lower bound on tha number of alphanumeric charactas dat Git must detect as moving/copyin within a gangbangin' file fo' it ta associate dem lines wit tha parent commit\&. Da default value is 20\&.
.RE
.PP
\-C|<num>|
.RS 4
In addizzle to
\-M, detect lines moved or copied from other filez dat was modified up in tha same commit\&. This is useful when you reorganize yo' program n' move code round across files\&. When dis option is given twice, tha command additionally looks fo' copies from other filez up in tha commit dat creates tha file\&. When dis option is given three times, tha command additionally looks fo' copies from other filez up in any commit\&.
.sp
<num> is optionizzle but it is tha lower bound on tha number of alphanumeric charactas dat Git must detect as moving/copyin between filez fo' it ta associate dem lines wit tha parent commit\& fo' realz. And tha default value is 40\&. If there be mo' than one
\-C
options given, tha <num> argument of tha last
\-C
will take effect\&.
.RE
.PP
\-h
.RS 4
Show help message\&.
.RE
.SH "SEE ALSO"
.sp
\fBgit-blame\fR(1)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
