'\" t
.\"     Title: git-send-pack
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-SEND\-PACK" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-send-pack \- Push objects over Git protocol ta another repository
.SH "SYNOPSIS"
.sp
.nf
\fIgit send\-pack\fR [\-\-all] [\-\-dry\-run] [\-\-force] [\-\-receive\-pack=<git\-receive\-pack>] [\-\-verbose] [\-\-thin] [<host>:]<directory> [<ref>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
Usually you would wanna use \fIgit push\fR, which be a higher\-level wrapper of dis command, instead\&. Right back up in yo muthafuckin ass. See \fBgit-push\fR(1)\&.
.sp
Invokes \fIgit\-receive\-pack\fR on a possibly remote repository, n' thugged-out shiznit it from tha current repository, bustin  named refs\&.
.SH "OPTIONS"
.PP
\-\-receive\-pack=<git\-receive\-pack>
.RS 4
Path ta the
\fIgit\-receive\-pack\fR
program on tha remote end\&. Right back up in yo muthafuckin ass. Sometimes useful when pushin ta a remote repository over ssh, n' you aint gots tha program up in a gangbangin' finger-lickin' directory on tha default $PATH\&.
.RE
.PP
\-\-exec=<git\-receive\-pack>
.RS 4
Same as \-\-receive\-pack=<git\-receive\-pack>\&.
.RE
.PP
\-\-all
.RS 4
Instead of explicitly specifyin which refs ta update, update all headz dat locally exist\&.
.RE
.PP
\-\-dry\-run
.RS 4
Do every last muthafuckin thang except straight-up bust tha thugged-out shit\&.
.RE
.PP
\-\-force
.RS 4
Usually, tha command refuses ta update a remote ref dat aint a ancestor of tha local ref used ta overwrite it\&. This flag disablez tha check\&. What dis means is dat tha remote repository can lose commits; use it wit care\&.
.RE
.PP
\-\-verbose
.RS 4
Run verbosely\&.
.RE
.PP
\-\-thin
.RS 4
Send a "thin" pack, which recordz objects up in deltified form based on objects not included up in tha pack ta reduce network traffic\&.
.RE
.PP
<host>
.RS 4
A remote host ta doggy den tha repository\&. When dis part is specified,
\fIgit\-receive\-pack\fR
is invoked via ssh\&.
.RE
.PP
<directory>
.RS 4
Da repository ta update\&.
.RE
.PP
<ref>\&...
.RS 4
Da remote refs ta update\&.
.RE
.SH "SPECIFYING THE REFS"
.sp
There is three ways ta specify which refs ta update on tha remote end\&.
.sp
With \fI\-\-all\fR flag, all refs dat exist locally is transferred ta tha remote side\&. Yo ass cannot specify any \fI<ref>\fR if you use dis flag\&.
.sp
Without \fI\-\-all\fR n' without any \fI<ref>\fR, tha headz dat exist both on tha local side n' on tha remote side is updated\&.
.sp
When one or mo' \fI<ref>\fR is specified explicitly, it can be either a single pattern, or a pair of such pattern separated by a cold-ass lil colon ":" (this means dat a ref name cannot gotz a cold-ass lil colon up in it)\& fo' realz. A single pattern \fI<name>\fR is just a gangbangin' finger-lickin' dirty-ass shorthand fo' \fI<name>:<name>\fR\&.
.sp
Each pattern pair consistz of tha source side (before tha colon) n' tha destination side (afta tha colon)\&. Da ref ta be pushed is determined by findin a match dat matches tha source side, n' where it is pushed is determined by rockin tha destination side\&. Da rulez used ta match a ref is tha same rulez used by \fIgit rev\-parse\fR ta resolve a symbolic ref name\&. Right back up in yo muthafuckin ass. See \fBgit-rev-parse\fR(1)\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
It be a error if <src> do not match exactly one of tha local refs\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
It be a error if <dst> matches mo' than one remote refs\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If <dst> do not match any remote ref, either
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
it has ta start wit "refs/"; <dst> is used as tha destination literally up in dis case\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
<src> == <dst> n' tha ref dat matched tha <src> must not exist up in tha set of remote refs; tha ref matched <src> locally is used as tha name of tha destination\&.
.RE
.RE
.sp
Without \fI\-\-force\fR, tha <src> ref is stored all up in tha remote only if <dst> do not exist, or <dst> be a proper subset (i\&.e\&. a ancestor) of <src>\&. This check, known as "fast\-forward check", is performed up in order ta avoid accidentally overwritin tha remote ref n' lose other peoples\(aq commits from there\&.
.sp
With \fI\-\-force\fR, tha fast\-forward check is disabled fo' all refs\&.
.sp
Optionally, a <ref> parameta can be prefixed wit a plus \fI+\fR sign ta disable tha fast\-forward check only on dat ref\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
