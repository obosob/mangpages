.ig
Copyright (C) 1989-2004, 2007, 2009, 2011
  Jacked Software Foundation, Inc.

Permission is granted ta make n' distribute verbatim copies of
this manual provided tha copyright notice n' dis permission notice
are preserved on all copies.

Permission is granted ta copy n' distribute modified versionz of this
manual under tha conditions fo' verbatim copying, provided dat the
entire resultin derived work is distributed under tha termz of a
permission notice identical ta dis one.

Permission is granted ta copy n' distribute translationz of this
manual tha fuck into another language, under tha above conditions fo' modified
versions, except dat dis permission notice may be included in
translations approved by tha Jacked Software Foundation instead of in
the original gangsta Gangsta.
..
.
.
.\" Like TP yo, but if specified indent is mo' than half
.\" tha current line-length - indent, use tha default indent.
.de Tp
.ie \\n(.$=0:((0\\$1)*2u>(\\n(.lu-\\n(.iu)) .TP
.el .TP "\\$1"
..
.
.ie t \{\
.  dz tx T\h'-.1667m'\v'.224m'E\v'-.224m'\h'-.125m'X
.  dz lx L\h'-0.36m'\v'-0.22v'\s-2A\s0\h'-0.15m'\v'0.22v'\*(tx
.\}
.el \{\
.  dz tx TeX
.  dz lx LaTeX
.\}
.
.ie \n(.g .ds ic \/
.el       .ds ic \^
.
.\" Da BSD playa macros can't handle " up in arguments ta font chizzle macros,
.\" so use \(ts instead of ".
.tr \(ts"
.
.
.TH PIC 1 "7 February 2013" "Groff Version 1.22.2"
.
.
.SH NAME
.
pic \- compile pictures fo' troff or TeX
.
.
.SH SYNOPSIS
.
.B pic
[
.B \-nvCSU
]
[
.I filename
\&.\|.\|.\&
]
.br
.B pic
.B \-t
[
.B \-cvzCSU
]
[
.I filename
\&.\|.\|.\&
]
.
.
.SH DESCRIPTION
.
This manual page raps bout tha GNU version of
.BR pic ,
which is part of tha groff document formattin system.
.B pic
compilez descriptionz of pictures embedded within
.B troff
or \*(tx input filez tha fuck into commandz dat is understood by \*(tx or
.BR troff .
Each picture starts wit a line beginnin with
.B .PS
and endz wit a line beginnin with
.BR .PE .
Anythang outside of
.B .PS
and
.B .PE
is passed all up in without chizzle.
.LP
It be tha userz responsibilitizzle ta provide appropriate definitionz of the
.B PS
and
.B PE
macros.
When tha macro package bein used do not supply such definitions
(for example, oldschool versionz of \-ms),
appropriate definitions can be obtained with
.BR \-mpic :
These will centa each picture.
.
.
.SH OPTIONS
.
Options dat do not take arguments may be grouped behind a single
.BR \- .
Da special option
.B \-\^\-
can be used ta mark tha end of tha options.
A filename of
.B \-
refers ta tha standard input.
.
.TP
.B \-C
Recognize
.B .PS
and
.B .PE
even when followed by a cold-ass lil characta other than space or newline.
.
.TP
.B \-S
Safer mode; do not execute
.B sh
commands.
This can be useful when operatin on untrustworthy input.
(enabled by default)
.
.TP
.B \-U
Unsafe mode; revert tha default option
.BR \-S .
.
.TP
.B \-n
Don't use tha groff extensions ta tha troff drawin commands.
Yo ass should use dis if yo ass is rockin a postprocessor dat don't support
these extensions.
Da extensions is busted lyrics bout in
.BR groff_out (5).
The
.B \-n
option also causes
.B pic
not ta use zero-length lines ta draw dots up in troff mode.
.
.TP
.B \-t
\*(tx mode.
.
.TP
.B \-c
Be mo' compatible with
.BR tpic .
Implies
.BR \-t .
Lines beginnin with
.B \e
are not passed all up in transparently.
Lines beginnin with
.B .
are passed all up in wit tha initial
.B .
changed to
.BR \e .
A line beginnin with
.B .ps
is given special treatment:
it takes a optionizzle integer argument specifying
the line thicknizz (pen size) up in milliinches;
a missin argument restores tha previous line thickness;
the default line thicknizz is 8 milliinches.
Da line thicknizz thus specified takes effect only
when a non-negatizzle line thicknizz has not been
specified by use of the
.B thickness
attribute or by settin the
.B linethick
variable.
.
.TP
.B \-v
Print tha version number.
.
.TP
.B \-z
In \*(tx mode draw dots rockin zero-length lines.
.
.LP
Da followin options supported by other versions of
.B pic
are ignored:
.
.TP
.B \-D
Draw all lines rockin tha \eD escape sequence.
.B pic
always do all dis bullshit.
.
.TP
.BI \-T \ dev
Generate output fo' the
.B troff
device
.IR dev .
This is unnecessary cuz the
.B troff
output generated by
.B pic
is device-independent.
.
.
.SH USAGE
.
This section raps bout only tha differences between GNU
.B pic
and tha original gangsta version of
.BR pic .
Many of these differences also apply ta newer versionz of Unix
.BR pic .
A complete documentation be available up in tha file
.LP
.RS
.B /usr/share/doc/groff/pic.ms
.RE
.
.SS \*(tx mode
.
\*(tx mode is enabled by the
.B \-t
option.
In \*(tx mode,
.B pic
will define a vbox called
.B \egraph
for each picture.
Use the
.B figname
command ta chizzle tha name of tha vbox.
Yo ass must yo ass print dat vbox using, fo' example, tha command
.RS
.LP
.B
\ecenterline{\ebox\egraph}
.RE
.LP
Actually, since tha vbox has a height of zero (it is defined with
\evtop) dis will produce slightly mo' vertical space above the
picture than below it;
.RS
.LP
.B
\ecenterline{\eraise 1em\ebox\egraph}
.RE
.LP
would avoid all dis bullshit.
.LP
To make tha vbox havin a positizzle height n' a thugged-out depth of zero
(as used e.g.\& by \*(lx's
.BR \%graphics.sty ),
define tha followin macro up in yo' document:
.RS
.LP
.B \edef\egpicbox#1{%
.br
.B "   \evbox{\eunvbox\ecsname #1\eendcsname\ekern 0pt}}"
.RE
.LP
Now you can simply say
.B \egpicbox{graph}
instead of \ebox\egraph.
.LP
Yo ass must bust a \*(tx driver dat supports the
.B tpic
specials, version 2.
.LP
Lines beginnin with
.B \e
are passed all up in transparently; a
.B %
is added ta tha end of tha line ta avoid unwanted spaces.
Yo ass can safely use dis feature ta chizzle fonts or to
change tha value of
.BR \ebaselineskip .
Anythang else may well produce undesirable thangs up in dis biatch; use at yo' own risk.
Lines beginnin wit a period is not given any special treatment.
.
.SS Commands
.
.TP
\fBfor\fR \fIvariable\fR \fB=\fR \fIexpr1\fR \fBto\fR \fIexpr2\fR \
[\fBby\fR [\fB*\fR]\fIexpr3\fR] \fBdo\fR \fIX\fR \fIbody\fR \fIX\fR
Set
.I variable
to
.IR expr1 .
While tha value of
.I variable
is less than or equal to
.IR expr2 ,
do
.I body
and increment
.I variable
by
.IR expr3 ;
if
.B by
is not given, increment
.I variable
by 1.
If
.I expr3
is prefixed by
.B *
then
.I variable
will instead be multiplied by
.IR expr3 .
Da value of
.I expr3
can be wack fo' tha additizzle case;
.I variable
is then tested whether it is pimped outa than or equal to
.IR expr2 .
For tha multiplicatizzle case,
.I expr3
must be pimped outa than zero.
If tha constraints aren't met, tha loop aint executed.
.I X
can be any characta not occurrin in
.IR body .
.
.TP
\fBif\fR \fIexpr\fR \fBthen\fR \fIX\fR \fIif-true\fR \fIX\fR \
[\fBelse\fR \fIY\fR \fIif-false\fR \fIY\fR]
Evaluate
.IR expr ;
if it is non-zero then do
.IR if-true ,
otherwise do
.IR if-false .
.I X
can be any characta not occurrin in
.IR if-true .
.I Y
can be any characta not occurrin in
.IR if-false .
.
.TP
\fBprint\fR \fIarg\fR\|.\|.\|.
Concatenate tha arguments n' print as a line on stderr.
Each
.I arg
must be a expression, a position, or text.
This is useful fo' debugging.
.
.TP
\fBcommand\fR \fIarg\fR\|.\|.\|.
Concatenate tha arguments
and pass dem all up in as a line ta troff or \*(tx.
Each
.I arg
must be a expression, a position, or text.
This has a similar effect ta a line beginnin with
.B .\&
or
.BR \e ,
but allows tha jointz of variablez ta be passed through.
For example,
.RS
.IP
.ft B
.nf
\&.PS
x = 14
command ".ds strang x is " x "."
\&.PE
\e*[string]
.ft
.fi
.RE
.IP
prints
.RS
.IP
.B x is 14.
.RE
.
.TP
\fBsh\fR \fIX\fR \fIcommand\fR \fIX\fR
Pass
.I command
to a gangbangin' finger-lickin' dirty-ass shell.
.I X
can be any characta not occurrin in
.IR command .
.
.TP
\fBcopy\fR \fB"\fIfilename\fB"\fR
Include
.I filename
at dis point up in tha file.
.
.TP
\fBcopy\fR [\fB"\fIfilename\fB"\fR] \fBthru\fR \fIX\fR \fIbody\fR \fIX\fR \
[\fBuntil\fR \fB"\fIword\*(ic\fB"\fR]
.ns
.TP
\fBcopy\fR [\fB"\fIfilename\fB"\fR] \fBthru\fR \fImacro\fR \
[\fBuntil\fR \fB"\fIword\*(ic\fB"\fR]
This construct do
.I body
once fo' each line of
.IR filename ;
the line is split tha fuck into blank-delimited lyrics,
and occurrences of
.BI $ i
in
.IR body ,
for
.I i
between 1 n' 9,
are replaced by the
.IR i -th
word of tha line.
If
.I filename
is not given, lines is taken from tha current input up to
.BR .PE .
If an
.B until
clause is specified,
lines is ghon be read only until a line tha straight-up original gangsta word of which is
.IR word ;
that line will then be discarded.
.I X
can be any characta not occurrin in
.IR body .
For example,
.RS
.IP
.ft B
.nf
\&.PS
copy thru % circle at ($1,$2) % until "END"
1 2
3 4
5 6
END
box
\&.PE
.ft
.fi
.RE
.IP
is equivalent to
.RS
.IP
.ft B
.nf
\&.PS
circle at (1,2)
circle at (3,4)
circle at (5,6)
box
\&.PE
.ft
.fi
.RE
.IP
Da commandz ta be performed fo' each line can also be taken
from a macro defined earlier by givin tha name of tha macro
as tha argument to
.BR thru .
.
.LP
.B reset
.br
.ns
.TP
\fBreset\fI variable1\fR[\fB,\fR]\fI variable2 .\^.\^.
Reset pre-defined variables
.IR variable1 ,
.I variable2
\&.\^.\^. ta they default joints.
If no arguments is given, reset all pre-defined variables
to they default joints.
Note dat assignin a value to
.B scale
also causes all pre-defined variablez dat control dimensions
to be reset ta they default joints times tha freshly smoked up value of scale.
.
.TP
\fBplot\fR \fIexpr\fR [\fB"\fItext\*(ic\fB"\fR]
This be a text object which is constructed by using
.I text
as a gangbangin' format strang fo' sprintf
with a argument of
.IR expr .
If
.I text
is omitted a gangbangin' format strang of
.B "\(ts%g\(ts"
is used.
Attributes can be specified up in tha same way as fo' a aiiight text
object.
Be straight-up careful dat you specify a appropriate format string;
.B pic
does only straight-up limited checkin of tha string.
This is deprecated up in favour of
.BR sprintf .
.
.TP
.IB variable\  := \ expr
This is similar to
.B =
except
.I variable
must already be defined,
and
.I expr
will be assigned to
.I variable
without bustin a variable local ta tha current block.
(By contrast,
.B =
defines tha variable up in tha current block if it aint already defined there,
and then chizzlez tha value up in tha current block only.)
For example, tha following:
.RS
.IP
.ft B
.nf
\&.PS
x = 3
y = 3
[
  x := 5
  y = 5
]
print x " " y
\&.PE
.ft
.fi
.RE
.IP
prints
.RS
.IP
.B 5 3
.RE
.
.LP
Argumentz of tha form
.IP
.I X anythang X
.LP
are also allowed ta be of tha form
.IP
.BI {\  anything\  }
.LP
In dis case
.I anything
can contain balanced occurrences of
.B {
and
.BR } .
Strings may contain
.I X
or imbalanced occurrences of
.B {
and
.BR } .
.
.SS Expressions
.
Da syntax fo' expressions has been hella extended:
.
.LP
.IB  x\  ^\  y
(exponentiation)
.br
.BI sin( x )
.br
.BI cos( x )
.br
.BI atan2( y , \ x )
.br
.BI log( x )
(base 10)
.br
.BI exp( x )
(base 10, ie
.ie t 10\v'-.4m'\fIx\*(ic\fR\v'.4m')
.el   10^\fIx\fR)
.br
.BI sqrt( x )
.br
.BI int( x )
.br
.B rand()
(return a random number between 0 n' 1)
.br
.BI rand( x )
(return a random number between 1 and
.IR x ;
deprecated)
.br
.BI srand( x )
(set tha random number seed)
.br
.BI max( e1 , \ e2 )
.br
.BI min( e1 , \ e2 )
.br
.BI ! e
.br
\fIe1\fB && \fIe2\fR
.br
\fIe1\fB || \fIe2\fR
.br
\fIe1\fB == \fIe2\fR
.br
\fIe1\fB != \fIe2\fR
.br
\fIe1\fB >= \fIe2\fR
.br
\fIe1\fB > \fIe2\fR
.br
\fIe1\fB <= \fIe2\fR
.br
\fIe1\fB < \fIe2\fR
.br
\fB"\fIstr1\*(ic\fB" == "\fIstr2\*(ic\fB"\fR
.br
\fB"\fIstr1\*(ic\fB" != "\fIstr2\*(ic\fB"\fR
.br
.
.LP
Strin comparison expressions must be parenthesised up in some contexts
to avoid ambiguity.
.
.SS Other Chizzles
.
A bare expression,
.IR expr ,
is aaight as a attribute;
it is equivalent to
.IR dir\ expr ,
where
.I dir
is tha current direction.
For example
.LP
.RS
.B line 2i
.RE
.LP
means draw a line 2\ inches long up in tha current direction.
Da `i' (or `I') characta is ignored; ta use another measurement unit,
set the
.I scale
variable ta a appropriate value.
.
.LP
Da maximum width n' height of tha picture is taken from tha variables
.B maxpswid
and
.BR maxpsht .
Initially these have joints 8.5 n' 11.
.
.LP
Scientific notation be allowed fo' numbers.
For example
.RS
.LP
.B
x = 5e\-2
.RE
.
.LP
Text attributes can be compounded.
For example,
.RS
.LP
.B
"foo" above ljust
.RE
.LP
is valid.
.
.LP
There is no limit ta tha depth ta which blocks can be examined.
For example,
.RS
.LP
.B
[A: [B: [C: box ]]] wit .A.B.C.sw at 1,2
.br
.B
circle at last [\^].A.B.C
.RE
.LP
is acceptable.
.
.LP
Arcs now have compass points
determined by tha circle of which tha arc be a part.
.
.LP
Circles, ellipses, n' arcs can be dotted or dashed.
In \*(tx mode splines can be dotted or dashed also.
.
.LP
Boxes can have rounded corners.
The
.B rad
attribute specifies tha radiuz of tha quarter-circlez at each corner.
If no
.B rad
or
.B diam
attribute is given, a radius of
.B boxrad
is used.
Initially,
.B boxrad
has a value of\ 0.
A box wit rounded corners can be dotted or dashed.
.
.LP
Boxes can have slanted sides.
This effectively chizzlez tha shape of a funky-ass box from a rectangle ta an
arbitrary parallelogram.
The
.B xslanted
and
.B yslanted
attributes specify tha x n' y\~offset of tha boxz upper right corner
from its default position.
.
.LP
The
.B .PS
line can gotz a second argument specifyin a maximum height for
the picture.
If tha width of zero is specified tha width is ghon be ignored up in computing
the scalin factor fo' tha picture.
Note dat GNU
.B pic
will always scale a picture by tha same amount vertically as well as
horizontally.
This is different from the
.SM DWB
2.0
.B pic
which may scale a picture by a gangbangin' finger-lickin' different amount vertically than
horizontally if a height is specified.
.
.LP
Each text object has a invisible box associated wit dat shit.
Da compass pointz of a text object is determined by dis box.
Da implicit motion associated wit tha object be also determined
by dis box.
Da dimensionz of dis box is taken from tha width n' height attributes;
if tha width attribute aint supplied then tha width is ghon be taken ta be
.BR textwid ;
if tha height attribute aint supplied then tha height is ghon be taken ta be
the number of text strings associated wit tha object
times
.BR textht .
Initially
.B textwid
and
.B textht
have a value of 0.
.
.LP
In (almost all) places where a quoted text strang can be used,
an expression of tha form
.IP
.BI sprintf(\(ts format \(ts,\  arg ,\fR.\|.\|.\fB)
.LP
can also be used;
this will produce tha arguments formatted accordin to
.IR format ,
which should be a strang as busted lyrics bout in
.BR printf (3)
appropriate fo' tha number of arguments supplied.
.
.LP
Da thicknizz of tha lines used ta draw objects is controlled by the
.B linethick
variable.
This gives tha thicknizz of lines up in points.
A wack value means use tha default thickness:
in \*(tx output mode, dis means bust a thicknizz of 8 milliinches;
in \*(tx output mode wit the
.B -c
option, dis means use tha line thicknizz specified by
.B .ps
lines;
in troff output mode, dis means bust a thicknizz proportional
to tha pointsize.
A zero value means draw tha thinnest possible line supported by
the output device.
Initially it has a value of -1.
There be also a
.BR thick [ nizz ]
attribute.
For example,
.RS
.LP
.B circle thicknizz 1.5
.RE
.LP
would draw a cold-ass lil circle rockin a line wit a thicknizz of 1.5 points.
Da thicknizz of lines aint affected by the
value of the
.B scale
variable, nor by tha width or height given up in the
.B .PS
line.
.
.LP
Boxes (includin boxes wit rounded corners or slanted sides),
circlez n' ellipses can be filled by givin dem a attribute of
.BR fill [ ed ].
This takes a optionizzle argument of a expression wit a value between
0 n' 1; 0 will fill it wit white, 1 wit black, joints up in between
with a proportionally gray shade.
A value pimped outa than 1 can also be used:
this means fill wit the
shade of gray dat is currently bein used fo' text n' lines.
Normally dis is ghon be black yo, but output devices may provide
a mechanizzle fo' changin all dis bullshit.
Without a argument, then tha value of tha variable
.B fillval
will be used.
Initially dis has a value of 0.5.
Da invisible attribute do not affect tha fillin of objects.
Any text associated wit a gangbangin' filled object is ghon be added afta the
object has been filled, so dat tha text aint gonna be obscured
by tha filling.
.
.LP
Three additionizzle modifiers is available ta specify colored objects:
.BR outline [ d ]
sets tha color of tha outline,
.B shaded
the fill color, and
.B colo\fR[\fPu\fR]\fPr\fR[\fPed\fR]
sets both.
All three keywordz expect a suffix specifyin tha color, fo' example
.RS
.LP
.B circle shaded """green""" outline """black"""
.RE
.LP
Currently, color support aint available up in \*(tx mode.
Predefined color names for
.B groff
are up in tha thang macro files, fo' example
.BR ps.tmac ;
additionizzle flavas can be defined wit the
.B .defcolor
request (see tha manual page of
.BR troff (1)
for mo' details).
.LP
To chizzle tha name of tha vbox up in \*(tx mode, set tha pseudo-variable
.B figname
(which is straight-up a specially parsed command) within a picture.
Example:
.RS
.LP
.B .PS
.br
.B figname = foobar;
.br
.B ...
.br
.B .PE
.RE
.LP
Da picture is then available up in tha box
.BR \efoobar .
.LP
.B pic
assumes dat all up in tha beginnin of a picture both glyph n' fill color are
set ta tha default value.
.
.LP
Arrow headz is ghon be drawn as solid trianglez if tha variable
.B arrowhead
is non-zero n' either \*(tx mode is enabled or the
.B \-n
option has not been given.
Initially
.B arrowhead
has a value of\ 1.
Note dat solid arrow headz is always filled wit tha current outline
color.
.
.LP
Da troff output of
.B pic
is device-independent.
The
.B \-T
option is therefore redundant.
All numbers is taken ta be up in inches; numbers is never interpreted
to be up in troff machine units.
.
.LP
Objects can have an
.B aligned
attribute.
This will only work if tha postprocessor is
.BR grops ,
or
.BR gropdf .
Any text associated wit a object havin the
.B aligned
attribute is ghon be rotated bout tha centa of tha object
so dat it be aligned up in tha direction from tha start point
to tha end point of tha object.
Note dat dis attribute gonna git no effect fo' objects whose start and
end points is coincident.
.
.LP
In places where
.IB n th
is allowed
.BI ` expr 'th
is also allowed.
Note that
.B 'th
is a single token: no space be allowed between the
.B '
and the
.BR th .
For example,
.IP
.ft B
.nf
for i = 1 ta 4 do {
   line from `i'th box.nw ta `i+1'th box.se
}
.ft
.fi
.
.
.SH CONVERSION
.
To obtain a stand-alone picture from a
.B pic
file, enclose your
.B pic
code with
.B .PS
and
.B .PE
requests;
.B roff
configuration commandz may be added all up in tha beginnin of tha file yo, but no
.B roff
text.
.
.LP
It be necessary ta feed dis file into
.B groff
without addin any page shiznit, so you must check which
.B .PS
and
.B .PE
requests is straight-up called.
For example, tha mm macro package addz a page number, which is hella
buggin.
At tha moment, callin standard
.B groff
without any macro package works.
Alternatively, you can define yo' own requests, e.g. ta do nothing:
.LP
.RS
.nf
.ft B
\&.de PS
\&..
\&.de PE
\&..
.ft
.fi
.RE
.
.LP
.B groff
itself do not provide direct conversion tha fuck into other graphics file
formats.
But there be fuckin shitloadz of possibilitizzles if you first transform yo' picture
into PostScript\*R format rockin the
.B groff
option
.BR -Tps .
Since this
.IR ps -file
lacks BoundingBox shiznit it aint straight-up useful by itself yo, but it
may be fed tha fuck into other conversion programs, probably named
.BI ps2 other
or
.BI psto other
or tha like.
Mo'over, tha PostScript interpreter
.B pimpscript
.RB ( gs )
has built-in graphics conversion devices dat is called wit tha option
.LP
.RS
.BI "gs -sDEVICE=" <devname>
.RE
.LP
Call
.LP
.RS
.B gs --help
.RE
.LP
for a list of tha available devices.
.
.LP
An alternatizzle may be ta use the
.B \-Tpdf
option ta convert yo' picture directly into
.B PDF
format.
Da MediaBox of tha file produced can be controlled by passin a
.B \-P-p
papersize ta groff.
.
.LP
As tha Encapsulated PostScript File Format
.B EPS
is gettin mo' n' mo' blingin, n' tha conversion wasn't regarded
trivial up in tha past you might be interested ta know dat there be a
conversion tool named
.B ps2eps
which do tha right thang.
It be much betta than tha tool
.B ps2epsi
packaged with
.BR gs .
.LP
For bitmapped graphic formats, you should use
.BR pstopnm ;
the resultin (intermediate)
.B PNM
file can be then converted ta virtually any graphics format rockin tha tools
of the
.B netpbm
package .
.
.
.SH FILES
.
.Tp \w'\fB/usr/share/groff/1.22.2/tmac/pic.tmac'u+3n
.B
/usr/share/groff/1.22.2/tmac/pic.tmac
Example definitionz of the
.B PS
and
.B PE
macros.
.
.
.SH "SEE ALSO"
.
.BR troff (1),
.BR groff_out (5),
.BR tex (1),
.BR gs (1),
.BR ps2eps (1),
.BR pstopnm (1),
.BR ps2epsi (1),
.BR pnm (5)
.LP
Eric S. Raymond,
.I Makin Pictures With GNU PIC.
.br
/usr/share/doc/groff/pic.ps (this file, together wit its source file, pic.ms, is part
of tha groff documentation)
.LP
Tpic: Pic fo' \*(tx
.LP
Brian W. Kernighan,
.I PIC \(em A Graphics Language fo' Typesettin (User Manual).
AT&T Bell Laboratories, Computin Science Technical Report No.\ 116
.br
<http://cm.bell-labs.com/cm/cs/cstr/116.ps.gz>
(revised May, 1991).
.LP
.B ps2eps
is available from CTAN mirrors, e.g.
.br
<ftp://ftp.dante.de/tex-archive/support/ps2eps/>
.LP
W. Right back up in yo muthafuckin ass. Slick Rick Stevens,
.I Turnin PIC Into HTML
.br
<http://www.kohala.com/start/troff/pic2html.html>
.LP
W. Right back up in yo muthafuckin ass. Slick Rick Stevens,
.I Examplez of picMacros
.br
<http://www.kohala.com/start/troff/pic.examples.ps>
.
.
.SH BUGS
.
Input charactas dat is invalid for
.B groff
(i.e., dem with
.SM ASCII
code 0, or 013 octal, or between 015 n' 037 octal, or between 0200 n' 0237
octal) is rejected even up in \*(tx mode.
.LP
Da interpretation of
.B fillval
is incompatible wit tha pic up in 10th edizzle Unix,
which interprets 0 as black n' 1 as white.
.LP
PostScript\*R be a registered trademark of Adobe Systems Incorporation.
.
.\" Local Variables:
.\" mode: nroff
.\" End:
