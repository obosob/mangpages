.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GIJ 1"
.TH GIJ 1 "2014-09-11" "gcc-4.8.3" "GNU"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
gij \- GNU interpreta fo' Java bytecode
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gij [\fB\s-1OPTION\s0\fR] ... \fI\s-1JARFILE\s0\fR [\fI\s-1ARGS\s0\fR...]
.PP
gij [\fB\-jar\fR] [\fB\s-1OPTION\s0\fR] ... \fI\s-1CLASS\s0\fR [\fI\s-1ARGS\s0\fR...]
  [\fB\-cp\fR \fIpath\fR] [\fB\-classpath\fR \fIpath\fR]
  [\fB\-D\fR\fIname\fR[=\fIvalue\fR]...]
  [\fB\-ms=\fR\fInumber\fR] [\fB\-mx=\fR\fInumber\fR]
  [\fB\-X\fR\fIargument\fR] [\fB\-verbose\fR] [\fB\-verbose:class\fR]
  [\fB\-\-showversion\fR] [\fB\-\-version\fR] [\fB\-\-help\fR][\fB\-?\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`gij\*(C'\fR be a Java bytecode interpreta included wit \f(CW\*(C`libgcj\*(C'\fR.
\&\f(CW\*(C`gij\*(C'\fR aint available on every last muthafuckin platform; portin it requires a
small amount of assembly programmin which has not been done fo' all the
targets supported by \fBgcj\fR.
.PP
Da primary argument ta \f(CW\*(C`gij\*(C'\fR is tha name of a cold-ass lil class or, with
\&\f(CW\*(C`\-jar\*(C'\fR, a jar file.  Options before dis argument is interpreted
by \f(CW\*(C`gij\*(C'\fR; remainin options is passed ta tha interpreted program.
.PP
If a cold-ass lil class name is specified n' dis class aint gots a \f(CW\*(C`main\*(C'\fR
method wit tha appropriate signature (a \f(CW\*(C`static void\*(C'\fR method with
a \f(CW\*(C`String[]\*(C'\fR as its sole argument), then \f(CW\*(C`gij\*(C'\fR will print an
error n' exit.
.PP
If a jar file is specified then \f(CW\*(C`gij\*(C'\fR will use shiznit up in it to
determine which class' \f(CW\*(C`main\*(C'\fR method is ghon be invoked.
.PP
\&\f(CW\*(C`gij\*(C'\fR will invoke tha \f(CW\*(C`main\*(C'\fR method wit all tha remaining
command-line options.
.PP
Note dat \f(CW\*(C`gij\*(C'\fR aint limited ta interpretin code.  Because
\&\f(CW\*(C`libgcj\*(C'\fR includes a cold-ass lil class loader which can dynamically load shared
objects, it is possible ta give \f(CW\*(C`gij\*(C'\fR tha name of a cold-ass lil class which has
been compiled n' put tha fuck into a gangbangin' finger-lickin' dirty-ass shared library on tha class path.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-cp\fR \fIpath\fR" 4
.IX Item "-cp path"
.PD 0
.IP "\fB\-classpath\fR \fIpath\fR" 4
.IX Item "-classpath path"
.PD
Set tha initial class path.  Da class path is used fo' finding
class n' resource files.  If specified, dis option overrides the
\&\f(CW\*(C`CLASSPATH\*(C'\fR environment variable.  Note dat dis option is
ignored if \f(CW\*(C`\-jar\*(C'\fR is used.
.IP "\fB\-D\fR\fIname\fR\fB[=\fR\fIvalue\fR\fB]\fR" 4
.IX Item "-Dname[=value]"
This defines a system property named \fIname\fR wit value \fIvalue\fR.
If \fIvalue\fR aint specified then it defaults ta tha empty string.
These system propertizzles is initialized all up in tha programz startup n' can
be retrieved at runtime rockin tha \f(CW\*(C`java.lang.System.getProperty\*(C'\fR
method.
.IP "\fB\-ms=\fR\fInumber\fR" 4
.IX Item "-ms=number"
Equivalent ta \f(CW\*(C`\-Xms\*(C'\fR.
.IP "\fB\-mx=\fR\fInumber\fR" 4
.IX Item "-mx=number"
Equivalent ta \f(CW\*(C`\-Xmx\*(C'\fR.
.IP "\fB\-noverify\fR" 4
.IX Item "-noverify"
Do not verify compliizzle of bytecode wit tha \s-1VM\s0 justification. I aint talkin' bout chicken n' gravy biatch. In addition,
this option disablez type verification which is otherwise performed on BC-ABI
compiled code.
.IP "\fB\-X\fR" 4
.IX Item "-X"
.PD 0
.IP "\fB\-X\fR\fIargument\fR" 4
.IX Item "-Xargument"
.PD
Supplyin \f(CW\*(C`\-X\*(C'\fR by itself will cause \f(CW\*(C`gij\*(C'\fR ta list all the
supported \f(CW\*(C`\-X\*(C'\fR options.  Currently these options is supported:
.RS 4
.IP "\fB\-Xms\fR\fIsize\fR" 4
.IX Item "-Xmssize"
Set tha initial heap size.
.IP "\fB\-Xmx\fR\fIsize\fR" 4
.IX Item "-Xmxsize"
Set tha maximum heap size.
.IP "\fB\-Xss\fR\fIsize\fR" 4
.IX Item "-Xsssize"
Set tha thread stack size.
.RE
.RS 4
.Sp
Unrecognized \f(CW\*(C`\-X\*(C'\fR options is ignored, fo' compatibilitizzle with
other runtimes.
.RE
.IP "\fB\-jar\fR" 4
.IX Item "-jar"
This indicates dat tha name passed ta \f(CW\*(C`gij\*(C'\fR should be interpreted
as tha name of a jar file, not a cold-ass lil class.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
.PD 0
.IP "\fB\-?\fR" 4
.IX Item "-?"
.PD
Print help, then exit.
.IP "\fB\-\-showversion\fR" 4
.IX Item "--showversion"
Print version number n' continue.
.IP "\fB\-\-fullversion\fR" 4
.IX Item "--fullversion"
Print detailed version shiznit, then exit.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print version number, then exit.
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
.PD 0
.IP "\fB\-verbose:class\fR" 4
.IX Item "-verbose:class"
.PD
Each time a cold-ass lil class is initialized, print a gangbangin' finger-lickin' dirty-ass short message on standard error.
.PP
\&\f(CW\*(C`gij\*(C'\fR also recognizes n' ignores tha followin options, for
compatibilitizzle wit existin application launch scripts:
\&\f(CW\*(C`\-client\*(C'\fR, \f(CW\*(C`\-server\*(C'\fR, \f(CW\*(C`\-hotspot\*(C'\fR, \f(CW\*(C`\-jrockit\*(C'\fR,
\&\f(CW\*(C`\-agentlib\*(C'\fR, \f(CW\*(C`\-agentpath\*(C'\fR, \f(CW\*(C`\-debug\*(C'\fR, \f(CW\*(C`\-d32\*(C'\fR,
\&\f(CW\*(C`\-d64\*(C'\fR, \f(CW\*(C`\-javaagent\*(C'\fR, \f(CW\*(C`\-noclassgc\*(C'\fR, \f(CW\*(C`\-verify\*(C'\fR,
and \f(CW\*(C`\-verifyremote\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgcc\fR\|(1), \fIgcj\fR\|(1), \fIgcjh\fR\|(1), \fIjcf\-dump\fR\|(1), \fIgfdl\fR\|(7),
and tha Info entries fo' \fIgcj\fR n' \fIgcc\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001\-2013 Jacked Software Foundation, Inc.
.PP
Permission is granted ta copy, distribute and/or modify dis document
under tha termz of tha \s-1GNU\s0 Jacked Documentation License, Version 1.3 or
any lata version published by tha Jacked Software Foundation; wit no
Invariant Sections, tha Front-Cover Texts bein (a) (see below), and
with tha Back-Cover Texts bein (b) (see below).
A copy of tha license is included up in the
man page \fIgfdl\fR\|(7).
.PP
(a) Da \s-1FSF\s0z Front-Cover Text is:
.PP
.Vb 1
\&     A GNU Manual
.Ve
.PP
(b) Da \s-1FSF\s0z Back-Cover Text is:
.PP
.Vb 3
\&     Yo ass have freedom ta copy n' modify dis GNU Manual, like GNU
\&     software.  Copies published by tha Jacked Software Foundation raise
\&     fundz fo' GNU pimpment.
.Ve
