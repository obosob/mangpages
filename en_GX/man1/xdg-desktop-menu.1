'\" t
.\"     Title: xdg-desktop-menu
.\"    Author: Kevin Krammer
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/21/2014
.\"    Manual: xdg-desktop-menu Manual
.\"    Source: xdg-utils 1.0
.\"  Language: Gangsta
.\"
.TH "XDG\-DESKTOP\-MENU" "1" "10/21/2014" "xdg-utils 1.0" "xdg-desktop-menu Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
xdg-desktop-menu \- command line tool fo' (un)installin desktop menu items
.SH "SYNOPSIS"
.HP \w'\fBxdg\-desktop\-menu\fR\ 'u
\fBxdg\-desktop\-menu\fR install [\fB\-\-noupdate\fR] [\fB\-\-novendor\fR] [\fB\-\-mode\ \fR\fB\fImode\fR\fR] \fIdirectory\-file(s)\fR \fIdesktop\-file(s)\fR
.HP \w'\fBxdg\-desktop\-menu\fR\ 'u
\fBxdg\-desktop\-menu\fR uninstall [\fB\-\-noupdate\fR] [\fB\-\-mode\ \fR\fB\fImode\fR\fR] \fIdirectory\-file(s)\fR \fIdesktop\-file(s)\fR
.HP \w'\fBxdg\-desktop\-menu\fR\ 'u
\fBxdg\-desktop\-menu\fR forceupdate [\fB\-\-mode\ \fR\fB\fImode\fR\fR]
.HP \w'\fBxdg\-desktop\-menu\fR\ 'u
\fBxdg\-desktop\-menu\fR {\fB\-\-help\fR | \fB\-\-manual\fR | \fB\-\-version\fR}
.SH "DESCRIPTION"
.PP
Da xdg\-desktop\-menu program can be used ta install freshly smoked up menu entries ta tha desktop\*(Aqs application menu\&.
.PP
Da application menu works accordin ta tha XDG Desktop Menu Justification at
\m[blue]\fB\%http://www.freedesktop.org/wiki/Specifications/menu-spec\fR\m[]
.SH "COMMANDS"
.PP
install
.RS 4
Install one or mo' applications up in a submenu of tha desktop menu system\&.
.sp
\fIdesktop\-file\fR: A desktop file represents a single menu entry up in tha menu\&. Desktop filez is defined by tha freedesktop\&.org Desktop Entry Justification\&. Da most blingin aspectz of *\&.desktop filez is summarized below\&.
.sp
Menu entries can be added ta tha menu system up in two different ways\&. They can either be added ta a predefined submenu up in tha menu system based on one or mo' category keywords, or they can be added ta a freshly smoked up submenu\&.
.sp
To add a menu entry ta a predefined submenu tha desktop file dat represents tha menu entry must gotz a Categories= entry dat lists one or mo' keywords\&. Da menu item is ghon be included up in a appropriate submenu based on tha included keywords\&.
.sp
To add menu shit ta a freshly smoked up submenu tha desktop\-filez must be preceded by a gangbangin' finger-lickin' directory\-file dat raps bout tha submenu\&. If multiple desktop\-filez is specified, all entries is ghon be added ta tha same menu\&. If entries is installed ta a menu dat has been pimped wit a previous call to
\fBxdg\-desktop\-menu\fR
the entries is ghon be installed up in addizzle ta any already existin entries\&.
.sp
\fIdirectory\-file\fR: Da *\&.directory file indicated by
\fIdirectory\-file\fR
represents a submenu\&. Da directory file serves up tha name n' icon fo' a submenu\&. Da name of tha directory file is used ta identify tha submenu\&.
.sp
If multiple directory filez is provided each file will represent a submenu within tha menu dat precedes it, bustin a nested menu hierarchy (sub\-sub\-menus)\&. Da menu entries theyselves is ghon be added ta tha last submenu\&.
.sp
Directory filez follow tha syntax defined by tha freedesktop\&.org Desktop Entry Justification\&.
.RE
.PP
uninstall
.RS 4
Remove applications or submenus from tha desktop menu system previously installed with
\fBxdg\-desktop\-menu install\fR\&.
.sp
A submenu n' tha associated directory file is only removed when tha submenu no longer gotz nuff any menu entries\&.
.RE
.PP
forceupdate
.RS 4
Force a update of tha menu system\&.
.sp
This command is only useful if tha last call ta xdg\-desktop\-menu included the
\fB\-\-noupdate\fR
option\&.
.RE
.SH "OPTIONS"
.PP
\fB\-\-noupdate\fR
.RS 4
Postpone uppimpin tha menu system\&. If multiple thugged-out shiznit ta tha menu system is made up in sequence dis flag can be used ta indicate dat additionizzle chizzlez will follow n' dat it aint necessary ta update tha menu system right away\&.
.RE
.PP
\fB\-\-novendor\fR
.RS 4
Normally, xdg\-desktop\-menu checks ta ensure dat any *\&.directory n' *\&.desktop filez ta be installed has a vendor prefix\&. This option can be used ta disable dat check\&.
.sp
A vendor prefix consistz of alpha charactas ([a\-zA\-Z]) n' is terminated wit a thugged-out dash ("\-")\&. Companies n' crews is encouraged ta bust a word or phrase, preferably tha crews name, fo' which they hold a trademark as they vendor prefix\&. Da purpose of tha vendor prefix is ta prevent name conflicts\&.
.RE
.PP
\fB\-\-mode\fR \fImode\fR
.RS 4
\fImode\fR
can be
\fIuser\fR
or
\fIsystem\fR\&. In user mode tha file is (un)installed fo' tha current user only\&. In system mode tha file is (un)installed fo' all playas on tha system\&. Usually only root be allowed ta install up in system mode\&.
.sp
Da default is ta use system mode when called by root n' ta use user mode when called by a non\-root user\&.
.RE
.PP
\fB\-\-help\fR
.RS 4
Show command synopsis\&.
.RE
.PP
\fB\-\-manual\fR
.RS 4
Show dis manual page\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Show tha xdg\-utils version shiznit\&.
.RE
.SH "DESKTOP FILES"
.PP
An application item up in tha application menu is represented by a *\&.desktop file\& fo' realz. A *\&.desktop file consistz of a
\fI[Desktop Entry]\fR
header followed by several
\fIKey\fR=\fIValue\fR
lines\&.
.PP
A *\&.desktop file can provide a name n' description fo' a application up in nuff muthafuckin different languages\&. This is done by addin a language code as used by LC_MESSAGES up in square brackets behind the
\fIKey\fR\&. This way one can specify different joints fo' tha same
\fIKey\fR
dependin on tha currently selected language\&.
.PP
Da followin keys is often used:
.PP
Type=Application
.RS 4
This be a mandatory field dat indicates dat tha *\&.desktop file raps bout a application launcher\&.
.RE
.PP
Name=\fIApplication Name\fR
.RS 4
Da name of tha application\&. For example
\fIMozilla\fR
.RE
.PP
GenericName=\fIGeneric Name\fR
.RS 4
A generic description of tha application\&. For example
\fIWeb Browser\fR
.RE
.PP
Comment=\fIComment\fR
.RS 4
Optionizzle field ta specify a tooltip fo' tha application\&. For example
\fISmoke up joints on tha Internet\fR
.RE
.PP
Icon=\fIIcon File\fR
.RS 4
Da icon ta use fo' tha application\&. This can either be a absolute path ta a image file or a icon\-name\&. If a icon\-name is provided a image lookup by name is done up in tha user\*(Aqs current icon theme\&. The
\fBxdg\-icon\-resource\fR
command can be used ta install image filez tha fuck into icon themes\&. Da advantage of rockin a icon\-name instead of a absolute path is dat wit a icon\-name tha application icon can be provided up in nuff muthafuckin different sizes as well as up in nuff muthafuckin differently themed styles\&.
.RE
.PP
Exec=\fICommand Line\fR
.RS 4
Da command line ta start tha application\&. If tha application can open filez tha %f placeholda should be specified\&. When a gangbangin' file is dropped on tha application launcher tha %f is replaced wit tha file path of tha dropped file\&. If multiple filez can be specified on tha command line tha %F placeholda should be used instead of %f\&. If tha application be able ta open URLs up in addizzle ta local filez then %u or %U can be used instead of %f or %F\&.
.RE
.PP
Categories=\fICategories\fR
.RS 4
A list of categories separated by semi\-colons\& fo' realz. A category be a keyword dat raps bout n' classifies tha application\&. By default applications is organized up in tha application menu based on category\&. When menu entries is explicitly assigned ta a freshly smoked up submenu it aint necessary ta list any categories\&.
.sp
When rockin categories it is recommended ta include one of tha followin categories: AudioVideo, Development, Ejaculation, Game, Graphics, Network, Office, Settings, System, Utility\&.
.sp
See Appendix A of tha XDG Desktop Menu Justification fo' shiznit bout additionizzle categories:
\m[blue]\fB\%http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html#category-registry\fR\m[]
.RE
.PP
MimeType=\fIMimetypes\fR
.RS 4
A list of mimetypes separated by semi\-colons\&. This field is used ta indicate which file types tha application be able ta open\&.
.RE
.PP
For a cold-ass lil complete overview of tha *\&.desktop file format please visit
\m[blue]\fB\%http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec\fR\m[]
.SH "DIRECTORY FILES"
.PP
Da appearizzle of submenu up in tha application menu is provided by a *\&.directory file\&. In particular it serves up tha title of tha submenu n' a possible icon\& fo' realz. A *\&.directory file consistz of a
\fI[Desktop Entry]\fR
header followed by several
\fIKey\fR=\fIValue\fR
lines\&.
.PP
A *\&.directory file can provide a title (name) fo' tha submenu up in nuff muthafuckin different languages\&. This is done by addin a language code as used by LC_MESSAGES up in square brackets behind the
\fIKey\fR\&. This way one can specify different joints fo' tha same
\fIKey\fR
dependin on tha currently selected language\&.
.PP
Da followin keys is relevant fo' submenus:
.PP
Type=Directory
.RS 4
This be a mandatory field dat indicates dat tha *\&.directory file raps on some submenu\&.
.RE
.PP
Name=\fIMenu Name\fR
.RS 4
Da title of submenu\&. For example
\fIMozilla\fR
.RE
.PP
Comment=\fIComment\fR
.RS 4
Optionizzle field ta specify a tooltip fo' tha submenu\&.
.RE
.PP
Icon=\fIIcon File\fR
.RS 4
Da icon ta use fo' tha submenu\&. This can either be a absolute path ta a image file or a icon\-name\&. If a icon\-name is provided a image lookup by name is done up in tha user\*(Aqs current icon theme\&. The
\fBxdg\-icon\-resource\fR
command can be used ta install image filez tha fuck into icon themes\&. Da advantage of rockin a icon\-name instead of a absolute path is dat wit a icon\-name tha submenu icon can be provided up in nuff muthafuckin different sizes as well as up in nuff muthafuckin differently themed styles\&.
.RE
.SH "ENVIRONMENT VARIABLES"
.PP
xdg\-desktop\-menu honours tha followin environment variables:
.PP
XDG_UTILS_DEBUG_LEVEL
.RS 4
Settin dis environment variable ta a non\-zero numerical value make xdg\-desktop\-menu do mo' verbose reportin on stderr\&. Right back up in yo muthafuckin ass. Settin a higher value increases tha verbosity\&.
.RE
.PP
XDG_UTILS_INSTALL_MODE
.RS 4
This environment variable can be used by tha user or administrator ta override tha installation mode\&. Valid joints are
\fIuser\fR
and
\fIsystem\fR\&.
.RE
.SH "EXIT CODES"
.PP
An exit code of 0 indicates success while a non\-zero exit code indicates failure\&. Da followin failure codes can be returned:
.PP
\fB1\fR
.RS 4
Error up in command line syntax\&.
.RE
.PP
\fB2\fR
.RS 4
One of tha filez passed on tha command line did not exist\&.
.RE
.PP
\fB3\fR
.RS 4
A required tool could not be found\&.
.RE
.PP
\fB4\fR
.RS 4
Da action failed\&.
.RE
.PP
\fB5\fR
.RS 4
No permission ta read one of tha filez passed on tha command line\&.
.RE
.SH "SEE ALSO"
.PP
\fBxdg-desktop-icon\fR(1),
\fBxdg-icon-resource\fR(1),
\fBxdg-mime\fR(1)
.SH "EXAMPLES"
.PP
Da company ShinyThings Inc\&. has pimped a application named "WebMirror" n' wanna add it ta tha application menu\&. Da company will use "shinythings" as its vendor id\&. In order ta add tha application ta tha menu there need ta be a \&.desktop file wit a suitable
\fICategories\fR
entry:
.sp
.if n \{\
.RS 4
.\}
.nf
shinythings\-webmirror\&.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror
  Icon=webmirror

  Name=WebMirror
  Name[nl]=WebSpiegel

  Categories=Network;WebDevelopment;
.fi
.if n \{\
.RE
.\}
.PP
Now tha xdg\-desktop\-menu tool can be used ta add tha shinythings\-webmirror\&.desktop file ta tha desktop application menu:
.sp
.if n \{\
.RS 4
.\}
.nf
xdg\-desktop\-menu install \&./shinythings\-webmirror\&.desktop
.fi
.if n \{\
.RE
.\}
.PP
Note dat fo' tha purpose of dis example tha menu shit is available up in two languages, Gangsta n' Dutch\&. Da language code fo' Dutch is nl\&.
.PP
In tha next example tha company ShinyThings Inc\&. will add its own submenu ta tha desktop application menu consistin of a "WebMirror" menu item n' a "WebMirror Admin Tool" menu item\&.
.PP
First tha company need ta create two \&.desktop filez dat describe tha two menu items\&. Right back up in yo muthafuckin ass. Since tha shit is ta be added ta a freshly smoked up submenu it aint necessary ta include a Categories= line:
.sp
.if n \{\
.RS 4
.\}
.nf
shinythings\-webmirror\&.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror
  Icon=shinythings\-webmirror

  Name=WebMirror
  Name[nl]=WebSpiegel


shinythings\-webmirror\-admin\&.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror\-admintool
  Icon=shinythings\-webmirror\-admintool

  Name=WebMirror Admin Tool
  Name[nl]=WebSpiegel Administratie Tool
.fi
.if n \{\
.RE
.\}
.PP
In addizzle a \&.directory file need ta be pimped ta provide a title n' icon fo' tha sub\-menu itself:
.sp
.if n \{\
.RS 4
.\}
.nf
shinythings\-webmirror\&.directory:

  [Desktop Entry]
  Encoding=UTF\-8

  Icon=shinythings\-webmirror\-menu

  Name=WebMirror
  Name[nl]=WebSpiegel
.fi
.if n \{\
.RE
.\}
.PP
These file can now be installed with:
.sp
.if n \{\
.RS 4
.\}
.nf
xdg\-desktop\-menu install \&./shinythings\-webmirror\&.directory \e
      \&./shinythings\-webmirror\&.desktop \&./shinythings\-webmirror\-admin\&.desktop
.fi
.if n \{\
.RE
.\}
.PP
Da menu entries could also be installed one by one:
.sp
.if n \{\
.RS 4
.\}
.nf
xdg\-desktop\-menu install \-\-noupdate \&./shinythings\-webmirror\&.directory \e
      \&./shinythings\-webmirror\&.desktop
xdg\-desktop\-menu install \-\-noupdate \&./shinythings\-webmirror\&.directory \e
      \&./shinythings\-webmirror\-admin\&.desktop
xdg\-desktop\-menu forceupdate
.fi
.if n \{\
.RE
.\}
.PP
Although tha result is tha same ol' dirty it is slightly mo' efficient ta install all filez all up in tha same time\&.
.PP
Da *\&.desktop n' *\&.directory filez reference icons wit tha names webmirror, webmirror\-admin n' webmirror\-menu which should also be installed\&. In dis example tha icons is installed up in two different sizes, once wit a size of 22x22 pixels n' once wit a size of 64x64 pixels:
.sp
.if n \{\
.RS 4
.\}
.nf
xdg\-icon\-resource install \-\-size 22 \&./wmicon\-22\&.png shinythings\-webmirror
xdg\-icon\-resource install \-\-size 22 \&./wmicon\-menu\-22\&.png shinythings\-webmirror\-menu
xdg\-icon\-resource install \-\-size 22 \&./wmicon\-admin\-22\&.png shinythings\-webmirror\-admin
xdg\-icon\-resource install \-\-size 64 \&./wmicon\-64\&.png shinythings\-webmirror
xdg\-icon\-resource install \-\-size 64 \&./wmicon\-menu\-64\&.png shinythings\-webmirror\-menu
xdg\-icon\-resource install \-\-size 64 \&./wmicon\-admin\-64\&.png shinythings\-webmirror\-admin
.fi
.if n \{\
.RE
.\}
.sp
.SH "AUTHORS"
.PP
\fBKevin Krammer\fR
.RS 4
Author.
.RE
.PP
\fBJeremy White\fR
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2006
.br
