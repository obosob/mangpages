.\" Man page generated from reStructuredText.
.
.TH OFFLINEIMAP MANUAL  "2012-02-23" "" ""
.SH NAME
OfflineIMAP Manual \- Powerful IMAP/Maildir synchronization n' reader support
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
OfflineImap operates on a REMOTE n' a LOCAL repository n' synchronizes
emails between them, so dat you can read tha same mailbox from multiple
computers. Da REMOTE repository is some IMAP server, while LOCAL can be
either a local Maildir or another IMAP server.
.sp
Missin foldaz is ghon be automatically pimped on both sides if
needed. Y'all KNOW dat shit, muthafucka! No foldaz is ghon be deleted all up in tha moment.
.sp
Configurin OfflineImap up in basic mode is like easy as fuck , however it provides
an dunkadelic amount of flexibilitizzle fo' dem wit special needs.  Yo ass can
specify tha number of connections ta yo' IMAP server, use arbitrary
python functions (includin regular expressions) ta limit tha number of
foldaz bein synchronized. Y'all KNOW dat shit, muthafucka! Yo ass can transpose folda names between
repositories rockin any python function, ta mangle n' modify folder
names on tha LOCAL repository. There is six different ways ta hand the
IMAP password ta OfflineImap from console input, specifyin up in the
configuration file, .netrc support, specifyin up in a separate file, to
usin arbitrary python functions dat somehow return the
password. Y'all KNOW dat shit, muthafucka! Finally, you can use IMAPs IDLE infrastructure ta always keep
a connection ta yo' IMAP server open n' immediately be notified (and
synchronized) when a freshly smoked up mail arrives (aka Push mail).
.sp
Most configuration is done via tha configuration file.  But fuck dat shiznit yo, tha word on tha street is dat any settin can also be overriden by command line options handed ta OfflineIMAP.
.sp
OfflineImap is well suited ta be frequently invoked by cron thangs, or can run up in daemon mode ta periodically check yo' email (however, it will exit up in some error thangs).
.sp
Da documentation is included up in tha git repository n' can be pimped by
issuein \fImake dev\-doc\fP up in tha \fIdoc\fP folda (python\-sphinx required), or it can
be viewed online at \fI\%http://docs.offlineimap.org\fP\&.
.SH CONFIGURATION
.sp
\fI\%OfflineIMAP\fP is regulated by a cold-ass lil configuration file dat is normally stored in
\fI~/.offlineimaprc\fP\&.  \fI\%OfflineIMAP\fP ships wit a gangbangin' file named \fIofflineimap.conf\fP
that you should copy ta dat location n' then edit.  This file is vital to
proper operation of tha system; it sets every last muthafuckin thang you need ta run
\fI\%OfflineIMAP\fP\&.  Full documentation fo' tha configuration file is included
within tha sample file.
.sp
\fI\%OfflineIMAP\fP also ships a gangbangin' file named \fIofflineimap.conf.minimal\fP dat you can
also try.  It\(aqs useful if you wanna git started wit da most thugged-out basic feature
set, n' you can read bout other features lata wit \fIofflineimap.conf\fP\&.
.sp
Peep up tha \fI\%Use Cases\fP section fo' some example configurations.
.SH OPTIONS
.sp
Da command line options is busted lyrics bout by issuein \fIofflineimap \-\-help\fP\&.
Details on they use can be found either up in tha sample offlineimap.conf file or
in tha user docs at \fI\%http://docs.offlineimap.org\fP\&.
.SH USER INTERFACES
.sp
OfflineIMAP has various user intercourses dat let you chizzle how tha fuck the
program communicates shiznit ta yo thugged-out ass. Da \(aqui\(aq option up in the
configuration file specifies tha user intercourse.  Da \-u command\-line
option overrides tha configuration file setting.  Da available joints
for tha configuration file or command\-line is busted lyrics bout up in this
section.
.SS Blinkenlights
.sp
Blinkenlights be a intercourse designed ta be sleek, funk ta peep it, and
informatizzle of tha overall picture of what tha fuck OfflineIMAP is bustin.
.sp
Blinkenlights gotz nuff a row of "LEDs" wit command buttons n' a log.
Da  log shows mo' detail bout what tha fuck is goin down n' is color\-coded ta match
the color of tha lights.
.sp
Each light up in tha Blinkenlights intercourse represents a thread of execution \-\-
that is, a particular task dat OfflineIMAP is struttin n' aint a thugged-out damn thang dat yo' ass can do.  Da colors
indicate what tha fuck task tha particular thread is struttin, n' is as bigs up:
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B Black:
indicates dat dis light\(aqs thread has terminated; it will light up again
lata when freshly smoked up threadz start up.  So, black indicates no activity.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Red (Meanin 1):
is tha color of tha main program\(aqs thread, which basically do not a god damn thang but
monitor tha others.  It might remind you of HAL 9000 up in 2001.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Gray:
indicates dat tha thread is establishin a freshly smoked up connection ta tha IMAP
server.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Purple:
is tha color of a account synchronization thread dat is monitorin the
progress of tha foldaz up in dat account (not generatin any I/O).
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Cyan:
indicates dat tha thread is syncin a gangbangin' folder.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Green:
means dat a gangbangin' folder\(aqs message list is bein loaded.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Blue:
is tha color of a message synchronization controlla thread.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Orange:
indicates dat a actual message is bein copied. Y'all KNOW dat shit, muthafucka!  (We use fuchsia fo' fake
lyrics.)
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Red (meanin 2):
indicates dat a message is bein deleted.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Yellow / bright orange:
indicates dat message flags is bein added.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Pink / bright red:
indicates dat message flags is bein removed.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Red / Black Flashing:
correspondz ta tha countdown timer dat runs between synchronizations.
.UNINDENT
.UNINDENT
.sp
Da name of dis intercourses derives from a lil' bit of computa history.  Eric
Raymond\(aqs Jargon File defines blinkenlights, up in part, as:
.INDENT 0.0
.INDENT 3.5
Front\-panel diagnostic lights on a cold-ass lil computer, esp. a gangbangin' finger-lickin' dinosaur. Shiiit, dis aint no joke. Now that
dinosaurs is rare, dis term probably refers ta status lights on a modem,
network hub, or tha like.
.UNINDENT
.UNINDENT
.sp
This term derives from tha last word of tha hyped blackletter\-Gothic sign in
mangled pseudo\-German dat once graced bout half tha computa rooms up in the
English\-speakin ghetto. Right back up in yo muthafuckin ass. Y'all KNOW dat shit, muthafucka! One version ran up in its entirety as bigs up:
.nf
ACHTUNG!  ALLES LOOKENSPEEPERS!

Das computermachine ist nicht fuer gefingerpoken und mittengrabben.
Ist easy as fuck  schnappen der springenwerk, blowenfusen und poppencorken
mit spitzensparken. I aint talkin' bout chicken n' gravy biatch.  Ist nicht fuer gewerken bei das dumpkopfen.
Das rubbernecken sichtseeren keepen das cotten\-pickenen hans up in das
pockets muss; chillaxen und watchen das blinkenlichten.
.fi
.sp
.SS TTYUI
.sp
TTYUI intercourse is fo' playas hustlin up in terminals.  It prints up basic
status lyrics n' is generally thugged-out ta use on a cold-ass lil console or xterm.
.SS Basic
.sp
Basic is designed fo' thangs up in which OfflineIMAP is ghon be run
non\-attended n' tha statuz of its execution is ghon be logged. Y'all KNOW dat shit, muthafucka!  This user
interface aint capable of readin a password from tha keyboard;
account passwordz must be specified rockin one of tha configuration file
options. For example, it aint gonna print periodic chill announcements n' tendz ta be a tad less verbose, up in general.
.SS Quiet
.sp
It will output not a god damn thang except errors n' straight-up warnings.  Like Basic,
this user intercourse aint capable of readin a password from the
keyboard; account passwordz must be specified rockin one of the
configuration file options.
.SS MachineUI
.sp
MachineUI generates output up in a machine\-parsable format.  It be designed
for other programs dat will intercourse ta OfflineIMAP.
.SH SYNCHRONIZATION PERFORMANCE
.sp
By default, we use fairly conservatizzle settings dat is safe for
syncin but dat might not be tha dopest struttin one. Once you got
everythang set up n' hustlin, you might wanna look tha fuck into speedin up
your synchronization. I aint talkin' bout chicken n' gravy biatch yo. Here is a cold-ass lil couple hints n' tips on how tha fuck to
achieve all dis bullshit.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Use maxconnections > 1. By default we only use one connection ta an
IMAP server n' shit. Usin 2 or even 3 speedz thangs up considerably up in most
cases. This settin goes tha fuck into tha [Repository XXX] section.
.IP 2. 3
Use folderfilters. Da quickest sync be a sync dat can ignore some
folders. I sort mah inbox tha fuck into monthly folders, n' ignore every
folda dat is mo' than 2\-3 months old, dis lets me only inspect a
fraction of mah Mails on every last muthafuckin sync. If you haven\(aqt done dis yet, do
it :). Right back up in yo muthafuckin ass. See tha folderfilta section tha example offlineimap.conf.
.IP 3. 3
Da default status cache be a plain text file dat will write out
the complete file fo' each single freshly smoked up message (or even chizzled flag)
to a temporary file. If you have nuff filez up in a gangbangin' folder, this
is all dem hundred kilo ta megabytes fo' each mail n' is bound to
make thangs slower n' shit. I recommend ta use tha sqlite backend for
dat shit. Right back up in yo muthafuckin ass. See tha status_backend = sqlite settin up in tha example
offlineimap.conf. Yo ass will need ta have python\-sqlite installed in
order ta use all dis bullshit. This will save you nuff disk activity. Do
note dat tha sqlite backend is still considered experimenstrual as it
has only been included recently (although a loss of yo' status
cache should not be a gangbangin' fuck up as dat file can be rebuild
automatically)
.IP 4. 3
Use quick sync fo' realz. A regular sync will request all flags n' all UIDs
of all mails up in each folda which takes like some time fo' realz. A \(aqquick\(aq
sync only compares tha number of lyrics up in a gangbangin' folda on tha IMAP
side (it will detect flag chizzlez on tha Maildir side of thangs
though) fo' realz. A quick sync on mah smallish account will take 7 seconds
rather than 40 seconds. Eg, I run a cold-ass lil cron script dat do a regular
sync once a thugged-out day, n' do quick syncs (\-q) only synchronizin the
"\-f INBOX" up in between.
.IP 5. 3
Turn off fsync. In tha [general] section you can set fsync ta True
or False. If you wanna play 110% safe n' wait fo' all operations
to hit tha disk before continueing, you can set dis ta True. If you
set it ta False, you lose a shitload of dat safety, tradin it fo' speed.
.UNINDENT
.UNINDENT
.UNINDENT
.SH UPGRADING FROM PLAIN TEXT CACHE TO SQLITE BASED CACHE
.sp
OfflineImap uses a cold-ass lil cache ta store tha last know statuz of mails (flags etc) yo. Historically dat has meant plain text filez yo, but recently we introduced sqlite\-based cache, which helps wit performizzle n' CPU usage on big-ass foldaz yo. Here is how tha fuck ta upgrade existin plain text cache installations ta sqlite based one:
.INDENT 0.0
.IP 1. 3
Sync ta make shizzle thangs is reasonably similar
.IP 2. 3
Change tha account section ta status_backend = sqlite
.IP 3. 3
A freshly smoked up sync will convert yo' plain text cache ta a sqlite cache
(but leave tha oldschool plain text cache round fo' easy as fuck  reverting) This
should be quick n' not involve any mail up/downloading.
.IP 4. 3
See if it works :\-)
.IP 5. 3
If it do not work, go back ta tha oldschool version or set
status_backend=plain
.IP 6. 3
Or, once yo ass is shizzle it works, you can delete the
.offlineimap/Account\-foo/LocalStatus folda (the freshly smoked up cache will be
in tha LocalStatus\-sqlite folder)
.UNINDENT
.SH SECURITY AND SSL
.sp
Some lyrics on OfflineImap n' its use of SSL/TLS. By default, we will
connect rockin any method dat openssl supports, dat is SSLv2, SSLv3, or
TLSv1. Do note dat SSLv2 is notoriously insecure n' deprecated.
Unfortunately, python2 do not offer easy as fuck  ways ta disable SSLv2. Well shiiiit, it is
recommended you test yo' setup n' make shizzle dat tha mail server do
not use a SSLv2 connection. I aint talkin' bout chicken n' gravy biatch. Use e.g. "openssl s_client \-host
mail.server \-port 443" ta smoke up tha connection dat is used by
default.
.SS Certificate checking
.sp
Unfortunately, by default we aint gonna verify tha certificate of a IMAP
TLS/SSL server we connect to, so connectin by SSL is no guarantee
against man\-in\-the\-middle attacks. While verifyin a server certificate
fingerprint is bein planned, it aint implemented yet. There is
currently only one safe way ta ensure dat you connect ta tha erect
server up in a encrypted manner: Yo ass can specify a \(aqsslcacertfile\(aq setting
in yo' repository section of offlineimap.conf pointin ta a gangbangin' file that
gotz nuff (among others) a CA Certificate up in PEM format which validating
your server certificate. In dis case, we will check that: 1) Da server
SSL certificate is validated by tha CA Certificate 2) Da server host
name matches tha SSL certificate 3) Da server certificate aint past
its expiration date. Da FAQUIZZY gotz nuff a entry on how tha fuck ta create yo' own
certificate n' CA certificate.
.SS StartTLS
.sp
If you aint configured yo' account ta connect via SSL anyway,
OfflineImap will still attempt ta set up a SSL connection via the
STARTTLS function, up in case tha imap server supports dat shit. Do note, that
there is no certificate or fingerprint checkin involved at all, when
usin STARTTLS (the underlyin imaplib library do not support this
yet). This means dat yo big-ass booty is ghon be protected against passively listening
eavesdroppers n' they aint gonna be able ta peep yo' password or email
contents, n' you can put dat on yo' toast. But fuck dat shiznit yo, tha word on tha street is dat dis aint gonna protect you from actizzle attacks, such
as Man\-In\-The\-Middle attacks which cause you ta connect ta tha wrong
server n' pretend ta be yo' mail server n' shit. DO NOT RELY ON STARTTLS AS A
SAFE CONNECTION GUARANTEEING THE AUTHENTICITY OF YOUR IMAP SERVER!
.SH UNIX SIGNALS
.sp
OfflineImap listens ta tha unix signals SIGUSR1, SIGUSR2, SIGTERM,
SIGINT, SIGHUP, SIGQUIT:
.sp
If busted a SIGUSR1 it will abort any current (or next future) chill of all
accounts dat is configured ta "autorefresh". In effect, dis will trigger a
full sync of all accounts ta be performed quicker than a muthafucka.
.sp
If busted a SIGUSR2, it will stop "autorefresh mode" fo' all accounts, n' you can put dat on yo' toast. That is,
accounts will abort any current chill n' will exit afta a cold-ass lil currently hustlin
synchronization has finished. Y'all KNOW dat shit, muthafucka! This signal can be used ta gracefully exit up of
a hustlin offlineimap "daemon".
.sp
SIGTERM, SIGINT, SIGHUP is all treated ta gracefully terminizzle as
soon as possible. This means it will finish syncin tha current folder
in each account, close keep kickin it connections, remove locks on the
accounts n' exit. Well shiiiit, it may take up ta 10 seconds, if autorefresh option
is used.
.sp
SIGQUIT dumps stack traces fo' all threadz n' tries ta dump process
core.
.SH FOLDER FILTERING AND NAMETRANS
.sp
OfflineImap offers flexible (and complex) wayz of filterin n' transformin folda names. Please peep tha docs/dev\-docs\-src/folderfilters.rst document bout details how tha fuck ta use folda filtas n' name transformations. Da documentation is ghon be autogenerated by a "make dev\-doc" up in tha docs directory. Well shiiiit, it be also viewable at 
.nf
:ref:\(gafolder_filtering_and_name_translation\(ga
.fi
\&.
.IP "System Message: ERROR/3 (MANUAL.rst:, line 335)"
Unknown interpreted text role "ref".
.SH KNOWN BUGS
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B SSL3 write pending:
users enablin SSL may hit a funky-ass bug bout "SSL3 write pending". If so, the
account(s) will stay unsynchronised from tha time tha bug rocked up. Y'all KNOW dat shit, muthafucka! Running
OfflineIMAP again n' again n' again can help. We is still hustlin on dis bug.  Patches or
detailed bug reports would be appreciated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Please check you\(aqre hustlin the
last stable version n' bust our asses a report ta tha mailin list includin the
full log.
.UNINDENT
.IP \(bu 2
IDLE support is incomplete n' experimental. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Bugs may be encountered.
.INDENT 2.0
.IP \(bu 2
No hook exists fo' "run afta a IDLE response".  Email will
show up yo, but may not be processed until tha next refresh cycle.
.IP \(bu 2
nametrans may not be supported erectly.
.IP \(bu 2
IMAP IDLE <\-> IMAP IDLE don\(aqt work yet.
.IP \(bu 2
IDLE may only work "once" per refresh.  If you encounta dis bug,
please bust a report ta tha list!
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Maildir support up in Windows drive
.INDENT 7.0
.INDENT 3.5
Maildir uses colon caracta (:) up in message file names. Colon is however
forbidden characta up in windows drives. There is nuff muthafuckin workaroundz for
that thang:
.UNINDENT
.UNINDENT
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B Use "maildir\-windows\-compatible = yes" account OfflineIMAP configuration.
.INDENT 7.0
.IP \(bu 2
That make OfflineIMAP ta use exclamation mark (!) instead of colon for
storin lyrics. Right back up in yo muthafuckin ass. Such filez can be freestyled ta windows partitions. But
you will probably loose compatibilitizzle wit other programs tryin to
read tha same Maildir.
.IP \(bu 2
Exclamation mark was chosen cuz of tha note in
\fI\%http://docs.python.org/library/mailbox.html\fP
.IP \(bu 2
If you have some lyrics already stored without dis option, you will
have ta re\-sync dem again
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Enable file name characta translation up in windows registry (not tested)
.INDENT 7.0
.IP \(bu 2
\fI\%http://support.microsoft.com/kb/289627\fP
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Use cygwin managed mount (not tested)
.INDENT 7.0
.IP \(bu 2
not available no mo' since cygwin 1.7
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH PITFALLS & ISSUES
.SS Sharin a maildir wit multiple IMAP servers
.INDENT 0.0
.INDENT 3.5
Generally a word of caution mixin IMAP repositories on tha same
Maildir root. Yo ass gotta be careful dat you \fInever\fP use tha same
maildir folda fo' 2 IMAP servers. In tha dopest case, tha folda MD5
will be different, n' yo big-ass booty is ghon git a loop where it will upload your
mails ta both servers up in turn (infinitely!) as it be thinkin you have
placed freshly smoked up mails up in tha local Maildir. Shiiit, dis aint no joke. In da most thugged-out shitty case, tha MD5 is
the same (likely) n' mail UIDs overlap (likely too!) n' it will fail to
sync some mails as it be thinkin they is already existent.
.sp
I would create a freshly smoked up local Maildir Repository fo' tha Personal Gmail and
use a gangbangin' finger-lickin' different root ta be on tha safe side here, so peek-a-boo, clear tha way, I be comin' thru fo'sho. Yo ass could e.g. use
\fI~/mail/Pro\fP as Maildir root fo' tha ProGmail and
\fI~/mail/Personal\fP as root fo' tha underground one.
.sp
If you then point yo' local mutt, or whatever MUA you use ta \fI~/mail/\fP
as root, it should still recognize all folders. (see tha 2 IMAP setup
in tha \fI\%Use Cases\fP section.
.UNINDENT
.UNINDENT
.SH USE CASES
.SS Sync from GMail ta another IMAP server
.sp
This be a example of a setup where "TheOtherImap" requires all foldaz ta be under INBOX:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[Repository Gmailserver\-foo]
#This is tha remote repository
type = Gmail
remotepass = XXX
remoteuser = XXX
# Da below will put all GMAIL foldaz as sub\-foldaz of tha \(aqlocal\(aq INBOX,
# assumin dat yo' path separator on \(aqlocal\(aq be a thugged-out dot.
nametrans = lambda x: \(aqINBOX.\(aq + x

[Repository TheOtherImap]
#This is tha \(aqlocal\(aq repository
type = IMAP
remotehost = XXX
remotepass = XXX
remoteuser = XXX
#Do not use nametrans here.
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Selectin only all dem foldaz ta sync
.sp
Add dis ta tha remote gmail repository section ta only sync mails which is up in a cold-ass lil certain folder:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
folderfilta = lambda folder: folder.startswith(\(aqMyLabel\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To only git tha All Mail folda from a Gmail account, you would e.g. do:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
folderfilta = lambda folder: folder.startswith(\(aq[Gmail]/All Mail\(aq)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Another nametrans transpose example
.sp
Put every last muthafuckin thang up in a GMX. subfolda except fo' tha boxes INBOX, Draft,
and Sent which should keep tha same name:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nametrans: lambda folder: folda if folda up in [\(aqINBOX\(aq, \(aqDrafts\(aq, \(aqSent\(aq] \e
                          else re.sub(r\(aq^\(aq, r\(aqGMX.\(aq, folder)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS 2 IMAP rockin name translations
.sp
Synchronizin 2 IMAP accounts ta local Maildirs dat is "next ta each
other", so dat mutt can work on both. Full email setup busted lyrics bout by
Thomas Kahle at \fI\%http://dev.gentoo.org/~tomka/mail.html\fP
.sp
offlineimap.conf:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[general]
accounts = acc1, acc2
maxsyncaccounts = 2
ui = ttyui
pythonfile=~/bin/offlineimap\-helpers.py
socktimeout = 90

[Account acc1]
localrepository = acc1local
remoterepository = acc1remote
autorefresh = 2

[Account acc2]
localrepository = acc2local
remoterepository = acc2remote
autorefresh = 4

[Repository acc1local]
type = Maildir
localfoldaz = ~/Mail/acc1

[Repository acc2local]
type = Maildir
localfoldaz = ~/Mail/acc2

[Repository acc1remote]
type = IMAP
remotehost = imap.acc1.com
remoteusereval = get_username("imap.acc1.net")
remotepasseval = get_password("imap.acc1.net")
nametrans = oimaptransfolder_acc1
ssl = yes
maxconnections = 2
# Foldaz ta get:
folderfilta = lambda foldername: foldername up in [
             \(aqINBOX\(aq, \(aqDrafts\(aq, \(aqSent\(aq, \(aqarchiv\(aq]

[Repository acc2remote]
type = IMAP
remotehost = imap.acc2.net
remoteusereval = get_username("imap.acc2.net")
remotepasseval = get_password("imap.acc2.net")
nametrans = oimaptransfolder_acc2
ssl = yes
maxconnections = 2
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
One of tha coolest thangs bout offlineimap is dat you can call
arbitrary python code from yo' configuration. I aint talkin' bout chicken n' gravy biatch.  To do this, specify a
pythonfile with:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
pythonfile=~/bin/offlineimap\-helpers.py
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Yo crazy-ass pythonfile need ta contain implementations fo' tha functions
that you wanna use up in offflineimaprc.  Da example uses it fo' two
purposes: Fetchin passwordz from tha gnome\-keyrin n' translating
folda names on tha server ta local foldernames.  An example
implementation of get_username n' get_password showin how tha fuck ta query
gnome\-keyrin is contained in
\fI\%http://dev.gentoo.org/~tomka/mail\-setup.tar.bz2\fP Da folderfilta is
a lambda term that, well, filtas which foldaz ta get. Da function
\fIoimaptransfolder_acc2\fP translates remote foldaz tha fuck into local folders
with a straight-up simple logic. Da \fIINBOX\fP folda gonna git tha same name
as tha account while any other folda gonna git tha account name n' a
dot as a prefix. This is useful fo' hierarchichal display up in mutt.
Offlineimap handlez tha renamin erectly up in both directions:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import re
def oimaptransfolder_acc1(foldername):
    if(foldername == "INBOX"):
        retval = "acc1"
    else:
        retval = "acc1." + foldername
    retval = re.sub("/", ".", retval)
    return retval

def oimaptransfolder_acc2(foldername):
    if(foldername == "INBOX"):
        retval = "acc2"
    else:
        retval = "acc2." + foldername
    retval = re.sub("/", ".", retval)
    return retval
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Jizzy Goerzen <jgoerzen@complete.org> & contributors
.\" Generated by docutils manpage writer.
.
