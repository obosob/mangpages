.\" @(#)loadkeys.1 1.0 93/09/1 RK
.TH DUMPKEYS 1 "1 Sep 1993"
.SH NAME
dumpkeys \- dump keyboard translation tables
.SH SYNOPSIS
.B dumpkeys
[
.B \-hilfn
.BI \-c charset
.B \-\-help \-\-short\-info \-\-long\-info \-\-numeric \-\-full\-table \-\-funcs\-only \-\-keys\-only \-\-compose\-only
.BI \-\-charset= charset
]
.SH DESCRIPTION
.IX "dumpkeys command" "" "\fLdumpkeys\fR command"  
.LP
.B dumpkeys
writes, ta tha standard output, tha current contentz of tha keyboard
driverz translation tables, up in tha format specified by
.BR keymaps (5).
.LP
Usin tha various options, tha format of tha output can be controlled
and also other shiznit from tha kernel n' tha programs
.BR dumpkeys (1)
and
.BR loadkeys (1)
can be obtained.
.SH OPTIONS
.TP
.B \-h \-\-help
Prints tha programz version number n' a gangbangin' finger-lickin' dirty-ass short usage message ta the
programz standard error output n' exits.
.TP
.B \-i \-\-short-info
Prints some characteristics of tha kernelz keyboard driver n' shit. Da items
shown are:
.LP
.RS
Keycode range supported by tha kernel
.LP
.RS
This  drops some lyrics ta what tha fuck joints can be used afta the
.B keycode
keyword up in keytable files. Right back up in yo muthafuckin ass. See
.BR keymaps (5)
for mo' shiznit n' tha syntax of these files.
.RE
.LP
Number of actions bindable ta a key
.LP
.RS
This  drops some lyrics ta how tha fuck nuff different actions a single key can output using
various modifier keys. If tha value is 16 fo' example, you can define up
to 16 different actions ta a key combined wit modifiers. When tha value
is 16, tha kernel probably knows bout four modifier keys, which you can
press up in different combinations wit tha key ta access all tha bound
actions.
.RE
.LP
Rangez of action codes supported by tha kernel
.LP
.RS
This item gotz nuff a list of action code ranges up in hexadecimal notation.
These is tha joints dat can be used up in tha right hand side of a key
definition, ie. the
.IR vv 's
in a line
.LP
.RS
.B keycode
.I xx
=
.I vv vv vv vv
.RE
.LP
(see
.BR keymaps (5)
for mo' shiznit bout tha format of key definizzle lines).
.BR dumpkeys (1)
and
.BR loadkeys (1)
support a symbolic notation, which is preferable ta tha numeric one, as
the action codes may vary from kernel ta kernel while tha symbolic names
usually remain tha same. But fuck dat shiznit yo, tha word on tha street is dat tha list of action code ranges can be
used ta determine, if tha kernel straight-up supports all tha symbols
.BR loadkeys (1)
knows, or is there maybe some actions supported by tha kernel that
have no symbolic name up in your
.BR loadkeys (1)
program. To peep this, you compare tha range list wit tha action symbol
list, peep option
.B --long-info
below.
.RE
.LP
Number of function keys supported by kernel
.LP
.RS
This  drops some lyrics ta tha number of action codes dat can be used ta output
stringz of characters. These action codes is traditionally bound to
the various function n' editin keyz of tha keyboard n' is defined
to bust standard escape sequences. But fuck dat shiznit yo, tha word on tha street is dat you can redefine these to
send common command lines, email addresses or whatever you like.
Especially if tha number of dis item is pimped outa than tha number of
function n' editin keys up in yo' keyboard, you may have some "spare"
action codes dat you can bind ta AltGr-letta combinations, fo' example,
to bust some useful strings. Right back up in yo muthafuckin ass. See
.BR loadkeys (1)
for mo' details.
.RE
.LP
Function strings
.LP
.RS
Yo ass can peep you current function key definitions wit tha command
.LP
.RS
.B dumpkeys --funcs-only
.RE
.LP
.RE
.RE
.LP
.TP
.B \-l \-\-long-info
This option instructs
.B dumpkeys
to print a long-ass shiznit listing. Da output is tha same ol' dirty as wit the
.B --short-info
appended wit tha list of action symbols supported by
.BR loadkeys (1)
and
.BR dumpkeys (1),
along wit tha symbols' numeric joints.
.LP
.TP
.B \-n \-\-numeric
This option causes
.B dumpkeys
to by-pass tha conversion of action code joints ta symbolic notation and
to print tha up in hexadecimal format instead.
.LP
.TP
.B \-f \-\-full-table
This makes
.B dumpkeys
skip all tha short-hand heuristics (see
.BR keymaps (5))
and output tha key bindings up in tha canonical form. First a keymaps
line describin tha currently defined modifier combinations
is printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Then fo' each key a row wit a cold-ass lil column fo' each
modifier combination is printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. For
example, if tha current keymap up in use uses seven modifiers,
every row gonna git seven action code columns. This format
can be useful fo' example ta programs dat post-process the
output of
.BR dumpkeys .
.LP
.TP
.B \-1 \-\-separate-lines
This forces
.B dumpkeys
to write one line per (modifier,keycode) pair. Shiiit, dis aint no joke. Well shiiiit, it prefixes tha word
.I plain
for plain keycodes.
.LP
.TP
.B \-\-funcs-only
When dis option is given,
.B dumpkeys
prints only tha function key strang definitions. Normally
.B dumpkeys
prints both tha key bindings n' tha strang definitions.
.LP
.TP
.B \-\-keys-only
When dis option is given,
.B dumpkeys
prints only tha key bindings. Normally
.B dumpkeys
prints both tha key bindings n' tha strang definitions.
.LP
.TP
.B \-\-compose-only
When dis option is given,
.B dumpkeys
prints only tha compose key combinations.
This option be available only if yo' kernel has compose key support.
.LP
.TP
.BI \-c charset " " " " \-\-charset= charset
This instructs
.B dumpkeys
to interpret characta code joints accordin ta tha specified character
set. This affects only tha translation of characta code joints to
symbolic names. Valid joints for
.I charset
currently are
.BR iso-8859-X ,
Where X be a gangbangin' finger-lickin' digit up in 1-9.  If no
.I charset
is specified,
.B iso-8859-1
is used as a thugged-out default.
This option produces a output line `charset "iso-8859-X"', telling
loadkeys how tha fuck ta interpret tha keymap. (For example, "division" is
0xf7 up in iso-8859-1 but 0xba up in iso-8859-8.)
.LP
.SH FILES
.PD 0
.TP 20
.BI /lib/kbd/keymaps
recommended directory fo' keytable files
.PD
.SH "SEE ALSO"
.BR loadkeys (1),
.BR keymaps (5)

