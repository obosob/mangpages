.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL584DELTA 1"
.TH PERL584DELTA 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl584delta \- what tha fuck is freshly smoked up fo' perl v5.8.4
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout differences between tha 5.8.3 release and
the 5.8.4 release.
.SH "Incompatible Chizzles"
.IX Header "Incompatible Chizzles"
Many minor bugs done been fixed. Y'all KNOW dat shit, muthafucka! Scripts which happen ta rely on previously
erroneous behaviour will consider these fixes as incompatible chizzlez :\-)
Yo ass be advised ta big-ass up sufficient acceptizzle testin on dis release
to satisfy yo ass dat dis do not affect you, before puttin this
release tha fuck into thang.
.PP
Da diagnostic output of Carp has been chizzled slightly, ta add a space after
the comma between arguments, n' you can put dat on yo' toast. This make it much easier fo' tools such as
web browsers ta wrap it yo, but might confuse any automatic tools which perform
detailed parsin of Carp output.
.PP
Da internal dump output has been improved, so dat non-printable characters
like fuckin newline n' backspace is output up in \f(CW\*(C`\ex\*(C'\fR notation, rather than
octal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. This might just confuse non-robust tools which parse tha output of
modulez like fuckin Devel::Peek.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.SS "Malloc wrapping"
.IX Subsection "Malloc wrapping"
Perl can now be built ta detect attempts ta assign pathologically big-ass chunks
of memory.  Previously such assignments would suffer from integer wrap-around
durin size calculations causin a misallocation, which would crash perl, and
could theoretically be used fo' \*(L"stack smashing\*(R" attacks.  Da wrapping
defaults ta enabled on platforms where we know it works (most \s-1AIX\s0
configurations, BSDi, Darwin, \s-1DEC OSF/1,\s0 FreeBSD, \s-1HP/UX, GNU\s0 Linux, OpenBSD,
Solaris, \s-1VMS\s0 n' most Win32 compilers) n' defaults ta disabled on other
platforms.
.SS "Unicode Characta Database 4.0.1"
.IX Subsection "Unicode Characta Database 4.0.1"
Da copy of tha Unicode Characta Database included up in Perl 5.8 has
been updated ta 4.0.1 from 4.0.0.
.SS "suidperl less insecure"
.IX Subsection "suidperl less insecure"
Pizzle Szabo has analysed n' patched \f(CW\*(C`suidperl\*(C'\fR ta remove existin known
insecurities. Put ya muthafuckin choppers up if ya feel dis! Currently there be no known holez up in \f(CW\*(C`suidperl\*(C'\fR yo, but previous
experience shows dat we cannot be Kool & Tha Gang dat these was tha last. Yo ass may
no longer invoke tha set uid perl directly, so ta preserve backwards
compatibilitizzle wit scripts dat invoke #!/usr/bin/suidperl tha only set uid
binary is now \f(CW\*(C`sperl5.8.\*(C'\fR\fIn\fR (\f(CW\*(C`sperl5.8.4\*(C'\fR fo' dis release). \f(CW\*(C`suidperl\*(C'\fR
is installed as a hard link ta \f(CW\*(C`perl\*(C'\fR; both \f(CW\*(C`suidperl\*(C'\fR n' \f(CW\*(C`perl\*(C'\fR will
invoke \f(CW\*(C`sperl5.8.4\*(C'\fR automatically tha set uid binary, so dis chizzle should
be straight-up transparent.
.PP
For freshly smoked up projects tha core perl crew would straight fuckin recommend dat you use
dedicated, single purpose securitizzle tools like fuckin \f(CW\*(C`sudo\*(C'\fR up in preference to
\&\f(CW\*(C`suidperl\*(C'\fR.
.SS "format"
.IX Subsection "format"
In addizzle ta bug fixes, \f(CW\*(C`format\*(C'\fRz features done been enhanced. Y'all KNOW dat shit, muthafucka! See
perlform
.SH "Modulez n' Pragmata"
.IX Header "Modulez n' Pragmata"
Da (mis)use of \f(CW\*(C`/tmp\*(C'\fR up in core modulez n' documentation has been tidied up.
Some modulez available both within tha perl core n' independently from \s-1CPAN
\&\s0(\*(L"dual-life modules\*(R") aint yet had these chizzlez applied; tha chizzles
will be integrated tha fuck into future stable perl releases as tha modulez are
updated on \s-1CPAN.\s0
.SS "Updated modules"
.IX Subsection "Updated modules"
.IP "Attribute::Handlezs" 4
.IX Item "Attribute::Handlezs"
.PD 0
.IP "B" 4
.IX Item "B"
.IP "Benchmark" 4
.IX Item "Benchmark"
.IP "\s-1CGI\s0" 4
.IX Item "CGI"
.IP "Carp" 4
.IX Item "Carp"
.IP "Cwd" 4
.IX Item "Cwd"
.IP "Exporter" 4
.IX Item "Exporter"
.IP "File::Find" 4
.IX Item "File::Find"
.IP "\s-1IO\s0" 4
.IX Item "IO"
.IP "IPC::Open3" 4
.IX Item "IPC::Open3"
.IP "Local::Maketext" 4
.IX Item "Local::Maketext"
.IP "Math::BigFloat" 4
.IX Item "Math::BigFloat"
.IP "Math::BigInt" 4
.IX Item "Math::BigInt"
.IP "Math::BigRat" 4
.IX Item "Math::BigRat"
.IP "MIME::Base64" 4
.IX Item "MIME::Base64"
.IP "ODBM_File" 4
.IX Item "ODBM_File"
.IP "\s-1POSIX\s0" 4
.IX Item "POSIX"
.IP "Shell" 4
.IX Item "Shell"
.IP "Socket" 4
.IX Item "Socket"
.PD
There is experimenstrual support fo' Linux abstract Unix domain sockets.
.IP "Storable" 4
.IX Item "Storable"
.PD 0
.IP "Switch" 4
.IX Item "Switch"
.PD
Synced wit its \s-1CPAN\s0 version 2.10
.IP "Sys::Syslog" 4
.IX Item "Sys::Syslog"
\&\f(CW\*(C`syslog()\*(C'\fR can now use numeric constants fo' facilitizzle names n' priorities,
in addizzle ta strings.
.IP "Term::ANSIColor" 4
.IX Item "Term::ANSIColor"
.PD 0
.IP "Time::HiRes" 4
.IX Item "Time::HiRes"
.IP "Unicode::UCD" 4
.IX Item "Unicode::UCD"
.IP "Win32" 4
.IX Item "Win32"
.PD
Win32.pm/Win32.xs has moved from tha libwin32 module ta core Perl
.IP "base" 4
.IX Item "base"
.PD 0
.IP "open" 4
.IX Item "open"
.IP "threads" 4
.IX Item "threads"
.PD
Detached threadz is now also supported on Windows.
.IP "utf8" 4
.IX Item "utf8"
.SH "Performizzle Enhancements"
.IX Header "Performizzle Enhancements"
.PD 0
.IP "\(bu" 4
.PD
Accelerated Unicode case mappings (\f(CW\*(C`/i\*(C'\fR, \f(CW\*(C`lc\*(C'\fR, \f(CW\*(C`uc\*(C'\fR, etc).
.IP "\(bu" 4
In place sort optimised (eg \f(CW\*(C`@a = sort @a\*(C'\fR)
.IP "\(bu" 4
Unnecessary assignment optimised away in
.Sp
.Vb 3
\&  mah $s = undef;
\&  mah @a = ();
\&  mah %h = ();
.Ve
.IP "\(bu" 4
Optimised \f(CW\*(C`map\*(C'\fR up in scalar context
.SH "Utilitizzle Chizzles"
.IX Header "Utilitizzle Chizzles"
Da Perl debugger (\fIlib/perl5db.pl\fR) can now save all debugger commandz for
sourcin later, n' can display tha parent inheritizzle tree of a given class.
.SH "Installation n' Configuration Improvements"
.IX Header "Installation n' Configuration Improvements"
Da build process on both \s-1VMS\s0 n' Windows has had nuff muthafuckin minor improvements
made. On Windows Borlandz C compila can now compile perl wit PerlIO and/or
\&\s-1USE_LARGE_FILES\s0 enabled.
.PP
\&\f(CW\*(C`perl.exe\*(C'\fR on Windows now has a \*(L"Camel\*(R" logo icon. I aint talkin' bout chicken n' gravy biatch. Da use of a cold-ass lil camel with
the topic of Perl be a trademark of O'Reilly n' Associates Inc., n' is used
with they permission (ie distribution of tha source, compilin a Windows
executable from it, n' rockin dat executable locally). Use of tha supplied
camel fo' anythang other than a perl executablez icon is specifically not
covered, n' mah playas wishin ta redistribute perl binaries \fIwith\fR tha icon
should check directly wit O'Reilly beforehand.
.PP
Perl should build cleanly on Stratus \s-1VOS\s0 once more.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
Mo' utf8 bugs fixed, notably up in how tha fuck \f(CW\*(C`chomp\*(C'\fR, \f(CW\*(C`chop\*(C'\fR, \f(CW\*(C`send\*(C'\fR, and
\&\f(CW\*(C`syswrite\*(C'\fR n' interact wit utf8 data. Concatenation now works erectly
when \f(CW\*(C`use bytes;\*(C'\fR is up in scope.
.PP
Pragmata is now erectly propagated tha fuck into (?{...}) constructions up in regexps.
Code such as
.PP
.Vb 1
\&   mah $x = qr{ ... (??{ $x }) ... };
.Ve
.PP
will now (correctly) fail under use strict. (As tha inner \f(CW$x\fR be and
has always referred ta \f(CW$::x\fR)
.PP
Da \*(L"const up in void context\*(R" warnin has been suppressed fo' a cold-ass lil constant up in an
optimised-away boolean expression like fuckin \f(CW\*(C`5 || print;\*(C'\fR
.PP
\&\f(CW\*(C`perl \-i\*(C'\fR could \f(CW\*(C`fchmod(stdin)\*(C'\fR by mistake. This is straight-up if stdin is
attached ta a terminal, n' perl is hustlin as root. Now fixed.
.SH "New or Chizzled Diagnostics"
.IX Header "New or Chizzled Diagnostics"
\&\f(CW\*(C`Carp\*(C'\fR n' tha internal diagnostic routines used by \f(CW\*(C`Devel::Peek\*(C'\fR have been
made clearer, as busted lyrics bout up in \*(L"Incompatible Chizzles\*(R"
.SH "Changed Internals"
.IX Header "Changed Internals"
Some bugs done been fixed up in tha hash internals. Restricted hashes and
their place holdaz is now allocated n' deleted at slightly different times,
but dis should not be visible ta user code.
.SH "Future Directions"
.IX Header "Future Directions"
Code freeze fo' tha next maintenizzle release (5.8.5) is ghon be on 30th June
2004, wit release by mid July.
.SH "Platform Specific Problems"
.IX Header "Platform Specific Problems"
This release is known not ta build on Windows 95.
.SH "Reportin Bugs"
.IX Header "Reportin Bugs"
If you find what tha fuck you be thinkin be a funky-ass bug, you might check tha articles
recently posted ta tha comp.lang.perl.misc newsgroup n' tha perl
bug database at http://bugs.perl.org.  There may also be
information at http://www.perl.org, tha Perl Home Page.
.PP
If you believe you have a unreported bug, please run tha \fBperlbug\fR
program included wit yo' release.  Be shizzle ta trim yo' bug down
to a tiny but sufficient test case.  Yo crazy-ass bug report, along wit the
output of \f(CW\*(C`perl \-V\*(C'\fR, is ghon be busted off ta perlbug@perl.org ta be
analysed by tha Perl portin crew.  Yo ass can browse n' search
the Perl 5 bugs at http://bugs.perl.org/
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da \fIChanges\fR file fo' exhaustizzle details on what tha fuck chizzled.
.PP
Da \fI\s-1INSTALL\s0\fR file fo' how tha fuck ta build Perl.
.PP
Da \fI\s-1README\s0\fR file fo' general stuff.
.PP
Da \fIArtistic\fR n' \fICopying\fR filez fo' copyright shiznit.
