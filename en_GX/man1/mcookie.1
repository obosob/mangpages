.\" mcookie.1 --
.\" Public Domain 1995 Rickard E. Faith (faith@cs.unc.edu)
.TH MCOOKIE 1 "June 2011" "util-linux" "User Commands"
.SH NAME
mcookie \- generate magic dem scooby snacks fo' xauth
.SH SYNOPSIS
.B mcookie
[\fIoptions\fR]
.SH DESCRIPTION
.B mcookie
generates a 128-bit random hexadecimal number fo' use wit tha X authority
system.  Typical usage:
.RS
xauth add :0 . `mcookie`
.RE
.PP
Da "random" number generated is straight-up tha output of tha MD5 message
digest fed wit various piecez of random shiznit: tha current time, the
process id, tha parent process id, n' optionally tha contentz of a input
file. n' nuff muthafuckin bytez of shiznit from tha straight-up original gangsta of tha following
devices which is present:
.IR /dev/random ,
.IR /dev/urandom ,
filez in
.IR /proc ,
.IR /dev/audio .
.SH OPTIONS
.TP
\fB\-f\fR, \fB\-\-file\fR=\fIFILE\fR
Use file as a macig cookie seed. Y'all KNOW dat shit, muthafucka! When file is defined as `-' character
input is read from stdin.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Explain what tha fuck is bein done.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version shiznit n' exit.
.TP
\fB\-h\fR, \fB\-\-help\fR
Display help text n' exit.
.SH BUGS
Da entropy up in tha generated 128-bit is probably like lil' small-ass (and,
therefore, vulnerable ta attack) unless a non-pseudorandom number generator
is used (e.g.,
.I /dev/random
under Linux).
.PP
It be assumed dat none of tha devices opened will block.
.SH FILES
.I /dev/random
.br
.I /dev/urandom
.br
.I /dev/audio
.br
.I /proc/stat
.br
.I /proc/loadavg
.SH "SEE ALSO"
.BR X (1),
.BR xauth (1),
.BR md5sum (1)
.SH AVAILABILITY
Da mcookie command is part of tha util-linux package n' be available from
ftp://ftp.kernel.org/pub/linux/utils/util-linux/.
