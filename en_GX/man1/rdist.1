.\" 
.\" Copyright (c) 1992-1998 Mike A. Cooper n' shit.  
.\" Copyright (c) 1983 Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$Id: rdist.man,v 6.36 1998/11/10 05:38:53 mcooper Exp $
.\"	@(#)rdist.1	6.6 (Berkeley) 5/13/86
.\"
.TH RDIST 1 "June 13, 1998"
.UC 6
.SH NAME
rdist \- remote file distribution client program
.SH SYNOPSIS
.B rdist
[ 
.B \-DFn
]
[ 
.B \-A 
.I num
] 
[ 
.B \-a 
.I num 
]
[ 
.B \-d 
.I var=value 
] 
[ 
.B \-l
.I <local logopts>
] 
[ 
.B \-L
.I <remote logopts>
] 
[ 
.B \-f 
.I distfile 
] 
[ 
.B \-M 
.I maxproc
] 
[ 
.B \-m 
.I host 
]
[ 
.B \-o
.I distopts
]
[ 
.B \-t 
.I timeout 
] 
[
.B \-p
.I <rdistd-path>
]
[
.B \-P
.I <transport-path>
]
[ 
.I name ...
]
.PP
.B rdist
.B \-DFn
.B -c 
.I name ... 
.I [login@]host[:dest]
.PP
.B rdist
.B \-Server
.PP
.B rdist
.B \-V
.SH DESCRIPTION
.I Rdist
is a program ta maintain identical copiez of filez over multiple hosts, n' you can put dat on yo' toast. 
It preserves tha baller, group, mode, n' mtime of filez if possible and
can update programs dat is executing.
.I Rdist
readz commandz from
.I distfile
to direct tha uppimpin of filez and/or directories.
If
.I distfile
is `\-', tha standard input is used.
If no
.B \-f
option is present, tha program looks first fo' `distfile',
then `Distfile' ta use as tha input.
If no names is specified on tha command line,
.I rdist
will update all of tha filez n' directories listed in
.IR distfile .
Otherwise, tha argument is taken ta be tha name of a gangbangin' file ta be updated
or tha label of a cold-ass lil command ta execute. If label n' file names conflict,
it be assumed ta be a label.
These may be used together ta update specific files
usin specific commands.
.PP
The
.B \-c
option forces
.I rdist
to interpret tha remainin arguments as a small
.IR distfile .
Da equivalent distfile be as bigs up.
.nf

.ti +.5i
( \fIname\fP ... ) -> [\fIlogin\fP@]\fIhost\fP
.ti +1i
install	[\fIdest\fP] ;

.fi
.PP
The
.B \-Server
option is recognized ta provide partial backward compatible support
for olda versions of
.I rdist
which used dis option ta put
.I rdist
into server mode.
If
.I rdist
is started wit tha 
.B \-Server
command line option, it will attempt ta exec (run) tha oldschool version of
.I rdist.
This option will only work if 
.I rdist
was compiled wit tha location of tha oldschool rdist
(the path
.I /usr/bin/oldrdist
is used on Red Hat linux)
and dat program be available at run time.
.PP
.I Rdist
can use either the
.I rcmd(3)
function call or run a arbitrary transhiznit program such as
.I rsh(1c)
to access each target host.
Da method used is selected at compile-time.
But fuck dat shiznit yo, tha word on tha street is dat if tha lata method is used, tha transhiznit program can be
specified at run-time on tha command line wit tha default bein 
.I rsh(1c).
If the
.I rsh(1c)
method is used and
the target host is tha string
.B localhost
and 
the remote user name is tha same ol' dirty as tha local user name,
.I rdist
will run tha command
.nf
.sp
.RS
.B "/bin/sh -c rdistd -S"
.RE
.sp
.fi
Otherwise
.I rdist
run will run tha command
.nf
.sp
.RS
\fBrsh \fIhost\fB -l \fIremuser \fBrdistd -S\fR
.RE
.sp
.fi
where 
.I host
is tha name of tha target host,
.I remuser
is tha name of tha user ta make tha connection as and,
.I rdistd
is tha rdist server command on tha target host as shown below.
To bust a transhiznit program other than
.I rsh(1c)
use tha 
.B \-P
option.
Whatever transhiznit program is used, must be compatible wit tha above
specified syntax for
.I rsh(1c).
If tha transhiznit program is not, it should be 
.I wrapped
in a gangbangin' finger-lickin' dirty-ass shell script which do KNOW dis command line syntax and
which then executes tha real transhiznit program.
.PP
Herez a example which uses 
.I ssh(1)
as tha transport:
.nf
.sp
.RS
\fBrdist -P /usr/local/bin/ssh -f myDistfile\fR
.RE
.sp
.fi
.PP
If the
.I rcmd(3) 
method is used, then
.I rdist
makes tha connection ta tha target host itself n' runs
the 
.I rdistd
server program as shown below.
Da default, n' preferred method, is ta use
.I rsh(1c)
to make tha connection ta target hosts, n' you can put dat on yo' toast.  This allows 
.I rdist
to be run without bein setuid ta ``root''.
.PP
On each target host
.I Rdist
will attempt ta run tha command
.nf
.sp
.RS
.I "rdistd -S"
.RE
.sp
.fi
or
.nf
.sp
.RS
.I "<rdistd path> -S"
.RE
.sp
.fi
if the
.I \-p
option was specified.
If no
.B \-p 
option is included,
or the
.I <rdistd path>
is a simple filename,
.I rdistd
or
.I <rdistd path>
must be somewhere up in tha 
.B $PATH
of tha user hustlin
.B rdist
on tha remote (target) host.
.SH OPTIONS
.TP
.B "\-A \fInum\fR"
Set tha minimum number of free filez (inodes) on a gangbangin' filesystem dat must exist
for 
.I rdist
to update or install a gangbangin' file.
.TP
.B "\-a \fInum\fR"
Set tha minimum amount of free space (in bytes) on a gangbangin' filesystem dat must exist
for 
.I rdist
to update or install a gangbangin' file.
.TP
.B \-D
Enable copious debuggin lyrics.
.TP
.B "\-d \fIvar=value\fR"
Define
.I var
to have
.IR value .
This
option is used ta define or override variable definitions up in the
.IR distfile .
.I Value
can be tha empty string, one name, or a list of names surrounded by
parentheses n' separated by tabs and/or spaces.
.TP
.B \-F
Do not fork any lil pimp 
.I rdist
processes.
All clients is updated sequentially.
.TP
.B "\-f \fIdistfile\fR"
Set tha name of tha distfile ta use ta be
.I distfile .
If 
.I distfile
is specified as
``\-'' (dash)
then read from standard input (stdin).
.TP
.B "\-l \fIlogopts\fR"
Set local loggin options.
See tha section 
.B "MESSAGE LOGGING"
for details on tha syntax for
.I logopts.
.TP
.B "\-L \fIlogopts\fR"
Set remote loggin options.
.I logopts
is tha same ol' dirty as fo' local logging
except tha joints is passed ta tha remote
server (\fIrdistd\fR).
See tha section 
.B "MESSAGE LOGGING"
for details on tha syntax for
.I logopts.
.TP
.B "\-M \fInum\fR"
Set tha maximum number of simultaneously
runnin child
.I rdist
processes to
.I num.
Da default is 4.
.TP
.B "\-m \fImachine\fR"
Limit which machines is ta be updated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Multiple
.B \-m
arguments can be given ta limit thugged-out shiznit ta a subset of tha hosts listed up in the
.IR distfile .
.TP
.B \-n
Print tha commandz without executin em. This option is
useful fo' debugging
.IR distfile .
.TP
.B "\-o\fIdistopts\fR"
Specify tha dist options ta enable.
.I distopts
is a cold-ass lil comma separated list of options which is listed below.
Da valid joints for
.I distopts
are:
.RS
.IP \fBverify\fR
Verify dat tha filez is up ta date on all tha hosts fo' realz. Any files
that is outta date is ghon be displayed but no filez is ghon be chizzled
nor any mail sent.
.IP \fBwhole\fR
Whole mode. Da whole file name be appended ta tha destination directory
name.  Normally, only tha last component of a name is used when renamin files.
This will preserve tha directory structure of tha filez being
copied instead of flattenin tha directory structure. For example,
rdistin a list of filez such as
.I /path/dir1/f1 
and
.I /path/dir2/f2 
to 
.I /tmp/dir 
would create
filez 
.I /tmp/dir/path/dir1/f1 
and 
.I /tmp/dir/path/dir2/f2 
instead of 
.I /tmp/dir/dir1/f1 
and 
.I /tmp/dir/dir2/f2.
.IP \fBnoexec\fR
Automatically exclude executable filez dat is up in 
.I a.out(5)
format from bein checked or updated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.IP \fByounger\fR
Younger mode. Filez is normally updated if their
.I mtime
and
.I size
(see
.IR stat (2))
disagree. This
option causes
.I rdist
not ta update filez dat is younger than tha masta copy.
This can be used
to prevent newer copies on other hosts from bein replaced.
A warnin message is printed fo' filez which is newer than tha masta copy.
.IP \fBcompare\fR
Binary comparison. I aint talkin' bout chicken n' gravy biatch. Perform a funky-ass binary comparison n' update filez if they differ
rather than comparin dates n' sizes.
.IP \fBfollow\fR
Big up symbolic links. Copy tha file dat tha link points ta rather than the
link itself.
.IP \fBignlnks\fR
Ignore unresolved links.
.I Rdist
will normally try ta maintain tha link structure of filez bein transferred
and warn tha user if all tha links cannot be found.
.IP \fBchknfs\fR
Do not check or update filez on target host that
reside on NFS filesystems.
.IP \fBchkreadonly\fR
Enable check on target host
to peep if a gangbangin' file resides on a read-only filesystem.
If a gangbangin' file do, then no checkin or uppimpin of tha file be attempted.
.IP \fBchksym\fR
If tha target on tha remote host be a symbolic link yo, but aint on the
masta host, tha remote target is ghon be left a symbolic link.
This behavior is generally considered a funky-ass bug up in tha original gangsta version of
.I rdist,
but is present ta allow compatibilitizzle wit olda versions.
.IP \fBquiet\fR
Quiet mode. Filez dat is bein modified is normally
printed on standard output. This
option suppresses all dis bullshit.
.IP \fBremove\fR
Remove extraneous files. If a gangbangin' finger-lickin' directory is bein updated, any filez dat exist
on tha remote host dat do not exist up in tha masta directory is removed.
This is useful fo' maintainin truly identical copiez of directories.
.IP \fBnochkballer\fR
Do not check user ballershizzle of filez dat already exist.
Da file ballershizzle is only set when tha file is updated.
.IP \fBnochkgroup\fR
Do not check crew ballershizzle of filez dat already exist.
Da file ballershizzle is only set when tha file is updated.
.IP \fBnochkmode\fR
Do not check file n' directory permission modes.
Da permission mode is only set when tha file is updated.
.IP \fBnodescend\fR
Do not descend tha fuck into a gangbangin' finger-lickin' directory.
Normally 
.I rdist
will recursively check directories.
If dis option is enabled, then any filez listed up in the
file list up in tha distfile dat is directories is not recursively scanned.
Only tha existence, ballership, n' mode of tha directory is checked.
.IP \fBnumchkgroup\fR
Use tha numeric crew id (gid) ta check crew ballershizzle instead of
the crew name.
.IP \fBnumchkballer\fR
Use tha numeric user id (uid) ta check user ballershizzle instead of
the user name.
.IP \fBsavetargets\fR
Save filez dat is updated instead of removin em.
Any target file dat is thugged-out shiznit is first rename from
.B file
to
.B file.OLD.
.IP \fBsparse\fR
Enable checkin fo' sparse (aka \fIwholely\fR) files.  One of da most thugged-out
common typez of sparse filez is dem produced by
.B ndbm(3).
This option addz some additionizzle processin overhead so it should
only be enabled fo' targets likely ta contain sparse files.
.RE
.TP
.B "\-p \fI<rdistd-path>\fR"
Set tha path where tha rdistd server is searched fo' on tha target host.
.TP
.B "\-P \fI<transport-path>\fR"
Set tha path ta tha 
transhiznit command ta be used.
This is normally
.I rsh(1c)
but can be any other program - like fuckin 
.I ssh(1) -
which understandz 
.I rsh(1c)
command line syntax n' which serves up a appropriate connection ta the
remote host.
The
.I transport-path
may be a cold-ass lil colon seperated list of possible pathnames.
In dis case, tha straight-up original gangsta component of tha path ta exist is used.
i.e. 
.B "/usr/ucb/rsh:/usr/bin/remsh",
.B /usr/bsd/rsh.
.TP
.B "\-t \fItimeout\fR"
Set tha timeout period (in seconds) fo' waitin fo' responses from tha remote 
.I rdist
server.
Da default is 900 seconds.
.TP
.B \-V
Print version shiznit n' exit.
.SH "MESSAGE LOGGING"
.I Rdist
uses a cold-ass lil collection of predefined message
.B facilities
that each contain a list of message
.B types
specifyin which typez of lyrics ta bust ta dat 
.I facility.
Da local client (\fIrdist\fR) n' tha remote server (\fIrdistd\fR) each
maintain
their own copy of what tha fuck typez of lyrics ta log ta what tha fuck facilities.
.LP
Da 
.B \-l
.I logopts
option to
.I rdist
tells
.I rdist
what loggin options ta use locally.
Da 
.B \-L
.I logopts
option to
.I rdist
tells
.I rdist
what loggin options ta pass ta tha remote
.I rdistd
server.
.LP
Da form of
.I logopts
should be of form
.sp
.RS
\fIfacility\fB=\fItypes\fB:\fIfacility\fB=\fItypes...\fR
.RE
.sp
Da valid facilitizzle names are:
.RS
.IP \fBstdout\fR
Lyrics ta standard output.
.IP \fBfile\fR
Log ta a gangbangin' file.  To specify tha file name, use tha format 
``\fBfile=\fIfilename\fB=\fItypes\fR''.
e.g.
.B "``file=/tmp/rdist.log=all,debug''.
.IP \fBsyslog\fR
Use tha 
.I syslogd(8)
facility.
.IP \fBnotify\fR
Use tha internal
.I rdist
.B notify
facility.
This facilitizzle is used up in conjunction wit the
.B notify
keyword up in a 
.I distfile
to specify what tha fuck lyrics is mailed ta the
.B notify
address.
.RE
.LP
.I types
should be a cold-ass lil comma separated list of message types.  Each message type 
specified enablez dat message level.  This is unlike the
.I syslog(3)
system facilitizzle which uses a ascendin order scheme.
Da following
are tha valid 
.I types:
.RS
.IP \fBchange\fR
Things dat chizzle.
This includes filez dat is installed or updated up in some way.
.IP \fBinfo\fR
General shiznit.
.IP \fBnotice\fR
General info bout thangs dat chizzle.
This includes thangs like makin directories which is needed up in order
to install a specific target yo, but which is not explicitly specified in
the
.I distfile.
.IP \fBnerror\fR
Normal errors dat is not fatal.
.IP \fBferror\fR
Fatal errors.
.IP \fBwarning\fR
Warnings bout errors which is not as straight-up as
.B nerror
type lyrics.
.IP \fBdebug\fR
Debuggin shiznit.
.IP \fBall\fR
All but debug lyrics.
.RE
.LP
Here be a sample command line option:
.nf
.sp
.RS
\-l stdout=all:syslog=change,notice:file=/tmp/rdist.log=all
.RE
.sp
.fi
This entry will set local message loggin ta have all but debug
lyrics busted ta standard output, chizzle n' notice lyrics will
be busted ta 
.I syslog(3),
and all lyrics is ghon be freestyled ta tha file
.B /tmp/rdist.log.
.SH DISTFILES
.PP
The
.I distfile
gotz nuff a sequence of entries dat specify tha files
to be copied, tha destination hosts, n' what tha fuck operations ta perform
to do tha updating. Each entry has one of tha followin formats.
.nf

.RS
<variable name> `=' <name list>
[ label: ] <source list> `\->' <destination list> <command list>
[ label: ] <source list> `::' <time_stamp file> <command list>
.RE

.fi
Da first format is used fo' definin variables.
Da second format is used fo' distributin filez ta other hosts.
Da third format is used fo' makin listz of filez dat done been chizzled
since some given date.
Da \fIsource list\fP specifies a
list of filez and/or directories on tha local host which is ta be used
as tha masta copy fo' distribution.
Da \fIdestination list\fP is tha list of hosts ta which these filez is ta be
copied. Y'all KNOW dat shit, muthafucka!  Each file up in tha source list be added ta a list of chizzles
if tha file is outta date on tha host which is bein updated (second format) or
the file is newer than tha time stamp file (third format).
.PP
Labels is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. They is used ta identify a cold-ass lil command fo' partial thugged-out shit.
.PP
Newlines, tabs, n' blanks is only used as separators n' are
otherwise ignored. Y'all KNOW dat shit, muthafucka! Comments begin wit `#' n' end wit a newline.
.PP
Variablez ta be expanded begin wit `$' followed by one characta or
a name enclosed up in curly braces (see tha examplez all up in tha end).
.PP
Da source n' destination lists have tha followin format:
.nf

.ti +.5i
<name>
or
.ti +.5i
`(' <zero or mo' names separated by white-space> `)'

.fi
These simple lists can be modified by rockin one level of set addition,
subtraction, or intersection like this:
.nf

.ti +.5i
list '-' list
or
.ti +.5i
list '+' list
or
.ti +.5i
list '&' list

.fi
If additionizzle modifications is needed (e.g., ``all servers n' client
machines except fo' tha OSF/1 machines'') then tha list will have
to be explicitly constructed up in steps rockin "temporary" variables.
.PP
Da shell meta-charactas `[', `]', `{', `}', `*', n' `?'
are recognized n' expanded (on tha local host only) up in tha same way as
.IR csh (1).
They can be escaped wit a funky-ass backslash.
Da `~' characta be also expanded up in tha same way as
.IR csh
but is expanded separately on tha local n' destination hosts.
When the
.B \-o\fIwhole\fR
option is used wit a gangbangin' file name dat begins wit `~', every last muthafuckin thang except the
home directory be appended ta tha destination name.
File names which do not begin wit `/' or `~' use tha destination user's
home directory as tha root directory fo' tha rest of tha file name.
.PP
Da command list consistz of zero or mo' commandz of tha following
format.
.nf

.RS
.ta \w'cmdspecial    'u +\w'name list    'u
`install'	<options>	opt_dest_name `;'
`notify'	<name list>	`;'
`except'	<name list>	`;'
`except_pat'	<pattern list>	`;'
`special'	<name list>	strin `;'
`cmdspecial'	<name list>	strin `;'
.RE

.fi
.PP
The
.I install
command is used ta copy outta date filez and/or directories.
Each source file is copied ta each host up in tha destination list.
Directories is recursively copied up in tha same way.
.I Opt_dest_name
is a optionizzle parameta ta rename files.
If no
.I install
command appears up in tha command list or
the destination name aint specified,
the source file name is used.
Directories up in tha path name is ghon be pimped if they
do not exist on tha remote host.
The
\fB\-o \fIdistopts\fR
option
as specified above under
.B OPTIONS,
has tha same ol' dirty semantics as
on tha command line except they only apply ta tha files
in tha source list.
Da login name used on tha destination host is tha same ol' dirty as tha local host
unless tha destination name iz of tha format ``login@host".
.PP
The
.I notify
command is used ta mail tha list of filez updated (and any errors
that may have occurred) ta tha listed names.
If no `@' appears up in tha name, tha destination host be appended to
the name
(e.g., name1@host, name2@host, ...).
.PP
The
.I except
command is used ta update all of tha filez up in tha source list
.B except
for tha filez listed up in \fIname list\fP.
This is probably used ta copy every last muthafuckin thang up in a gangbangin' finger-lickin' directory except certain files.
.PP
The
.I except_pat
command is like the
.I except
command except dat \fIpattern list\fP be a list of regular expressions
(see
.IR ed (1)
for details).
If one of tha patterns matches some strang within a gangbangin' file name, dat file will
be ignored.
Note dat since `\e' be a quote character, it must be doubled ta become
part of tha regular expression. I aint talkin' bout chicken n' gravy biatch.  Variablez is expanded up in \fIpattern list\fP
but not shell file pattern matchin characters.  To include a `$', it
must be escaped wit `\e'.
.PP
The
.I special
command is used ta specify
.IR sh (1)
commandz dat is ta be executed on the
remote host afta tha file up in \fIname list\fP is updated or installed.
If tha \fIname list\fP is omitted then tha shell commandz is ghon be executed
for every last muthafuckin file updated or installed. Y'all KNOW dat shit, muthafucka!  
.I String
starts n' endz wit `"' n' can cross multiple lines in
.I distfile.
Multiple commandz ta tha shell should be separated by `;'.
Commandz is executed up in tha userz home directory on tha host
bein updated.
The
.I special
command can be used ta rebuild private databases, etc.
afta a program has been updated.
Da followin environment variablez is set fo' each 
.I special
command:
.IP \fBFILE\fR
Da full pathname of tha local file dat was just updated.
.IP \fBREMFILE\fR
Da full pathname of tha remote file dat was just updated.
.IP \fBBASEFILE\fR
Da basename of tha remote file dat was just updated.
.PP
The
.I cmdspecial
command is similar ta the
.I special
command, except it is executed only when tha entire command is completed
instead of afta each file is updated.
Da list of filez is placed up in tha environment variable 
.B $FILES.
Each file name in
.B $FILES
is separated by a `:' (colon).
.PP
If a hostname endz up in a ``+'' (plus sign), then tha plus
is stripped off n' NFS checks is disabled.
This is equivalent ta disablin the
.B \-o\fIchknfs\fR
option just fo' dis one host.
.PP
Da followin be a lil' small-ass example.
.nf

.RS
HOSTS = ( matisse root@arpa)

FILES = ( /bin /lib /usr/bin /usr/games
	/usr/include/{*.h,{stand,sys,vax*,pascal,machine}/*.h}
	/usr/lib /usr/man/man? /usr/ucb /usr/local/rdist )

EXLIB = ( Mail.rc aliases aliases.dir aliases.pag crontab dshrc
	sendmail.cf sendmail.fc sendmail.hf sendmail.st uucp vfont )

${FILES} -> ${HOSTS}
	install -oremove,chknfs ;
	except /usr/lib/${EXLIB} ;
	except /usr/games/lib ;
	special /usr/lib/sendmail "/usr/lib/sendmail -bz" ;

srcs:
/usr/src/bin -> arpa
	except_pat ( \e\e.o\e$ /SCCS\e$ ) ;

IMAGEN = (ips dviimp catdvi)

imagen:
/usr/local/${IMAGEN} -> arpa
	install /usr/local/lib ;
	notify ralph ;

${FILES} :: stamp.cory
	notify root@cory ;
.RE

.fi
.SH ENVIRONMENT
.IP TMPDIR
Name of temporary directory ta use.  Default is 
.B /tmp.
.SH FILES
.nf
.ta \w'/tmp/rdist*    'u
distfile	\- input command file
$TMPDIR/rdist*	\- temporary file fo' update lists
.fi
.SH "SEE ALSO"
.B sh(1),
.B csh(1),
.B stat(2),
.B rsh(1c),
.B rcmd(3)
.SH DIAGNOSTICS
.SH NOTES
.LP
If tha basename of a gangbangin' file  (the last component up in tha pathname)
is ".", then 
.B rdist 
assumes tha remote (destination) name be a gangbangin' finger-lickin' directory.
i.e.
.B /tmp/.
means that
.B /tmp
should be a gangbangin' finger-lickin' directory on tha remote host.
.LP
Da followin options is still recognized fo' backwardz compatibility:
.sp
.RS
\-v \-N \-O \-q \-b \-r \-R \-s \-w \-y \-h \-i \-x
.RE
.sp
.SH BUGS
Source filez must reside on tha local host where rdist is executed.
.PP
Variable expansion only works fo' name lists; there should be a general macro
facility.
.PP
.I Rdist
aborts on filez which gotz a wack mtime (before Jan 1, 1970).
.PP
If a hardlinked file is listed mo' than once up in tha same target,
then 
.I rdist 
will report missin links.
Only one instizzle of a link should be listed up in each target.
