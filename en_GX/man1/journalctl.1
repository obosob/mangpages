'\" t
.TH "JOURNALCTL" "1" "" "systemd 208" "journalctl"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
journalctl \- Query tha systemd journal
.SH "SYNOPSIS"
.HP \w'\fBjournalctl\fR\ 'u
\fBjournalctl\fR [OPTIONS...] [MATCHES...]
.SH "DESCRIPTION"
.PP
\fBjournalctl\fR
may be used ta query tha contentz of the
\fBsystemd\fR(1)
journal as freestyled by
\fBsystemd-journald.service\fR(8)\&.
.PP
If called without parameters, it will show tha full contentz of tha journal, startin wit tha crazy oldschool entry collected\&.
.PP
If one or mo' match arguments is passed, tha output is filtered accordingly\& fo' realz. A match is up in tha format
"FIELD=VALUE", e\&.g\&.
"_SYSTEMD_UNIT=httpd\&.service", referrin ta tha componentz of a structured journal entry\&. Right back up in yo muthafuckin ass. See
\fBsystemd.journal-fields\fR(7)
for a list of well\-known fields\&. If multiple matches is specified matchin different fields, tha log entries is filtered by both, i\&.e\&. tha resultin output will show only entries matchin all tha specified matchez of dis kind\&. If two matches apply ta tha same field, then they is automatically matched as alternatives, i\&.e\&. tha resultin output will show entries matchin any of tha specified matches fo' tha same field\&. Finally, tha character
"+"
may appears as a separate word between other terms on tha command line\&. This causes all matches before n' afta ta be combined up in a gangbangin' finger-lickin' disjunction (i\&.e\&. logical OR)\&.
.PP
As shortcuts fo' all dem typez of field/value matches, file paths may be specified\&. If a gangbangin' file path refers ta a executable file, dis is equivalent ta an
"_EXE="
match fo' tha canonicalized binary path\&. Right back up in yo muthafuckin ass. Similarly, if a path refers ta a thang node, dis is equivalent ta a
"_KERNEL_DEVICE="
match fo' tha device\&.
.PP
Additionizzle contraints may be added rockin options
\fB\-\-boot\fR,
\fB\-\-unit=\fR, etc, ta futher limit what tha fuck entries is ghon be shown (logical AND)\&.
.PP
Output is interleaved from all accessible journal files, whether they is rotated or currently bein written, n' regardless of whether they belong ta tha system itself or is accessible user journals\&.
.PP
Da set of journal filez which is ghon be used can be modified rockin the
\fB\-\-user\fR,
\fB\-\-system\fR,
\fB\-\-directory\fR, and
\fB\-\-file\fR
options, peep below\&.
.PP
All playas is granted access ta they private per\-user journals\&. But fuck dat shiznit yo, tha word on tha street is dat by default, only root n' playas whoz ass is thugz of the
"systemd\-journal"
group git access ta tha system journal n' tha journalz of other users\&.
.PP
Da output is paged through
\fBless\fR
by default, n' long lines is "truncated" ta screen width\&. Da hidden part can be viewed by rockin tha left\-arrow n' right\-arrow keys\&. Pagin can be disabled, see
\fB\-\-no\-pager\fR
and section Environment below\&.
.PP
When outputin ta a tty, lines is colored accordin ta priority: linez of level ERROR n' higher is colored red, linez of level NOTICE n' higher is highlighted, n' other lines is displayed normally\&.
.SH "OPTIONS"
.PP
Da followin options is understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short help text n' exits\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short version strang n' exits\&.
.RE
.PP
\fB\-\-no\-pager\fR
.RS 4
Do not pipe output tha fuck into a pager\&.
.RE
.PP
\fB\-l\fR, \fB\-\-full\fR
.RS 4
Show all (printable) fieldz up in full\&.
.RE
.PP
\fB\-a\fR, \fB\-\-all\fR
.RS 4
Show all fieldz up in full, even if they include unprintable charactas or is straight-up long\&.
.RE
.PP
\fB\-f\fR, \fB\-\-follow\fR
.RS 4
Show only da most thugged-out recent journal entries, n' continuously print freshly smoked up entries as they is appended ta tha journal\&.
.RE
.PP
\fB\-e\fR, \fB\-\-pager\-end\fR
.RS 4
Immediately jump ta tha end of tha journal inside tha implied pager tool\&. This implies
\fB\-n1000\fR
to guarantee dat tha pager aint gonna buffer logz of unbounded size\&. This may be overridden wit a explicit
\fB\-n\fR
with some other numeric value on tha command line\&. Note dat dis option is only supported fo' the
\fBless\fR(1)
pager\&.
.RE
.PP
\fB\-n\fR, \fB\-\-lines=\fR
.RS 4
Show da most thugged-out recent journal events n' limit tha number of events shown\&. If
\fB\-\-follow\fR
is used, dis option is implied\&. Da argument, a positizzle integer, is optional, n' defaults ta 10\&.
.RE
.PP
\fB\-\-no\-tail\fR
.RS 4
Show all stored output lines, even up in follow mode\&. Undoes tha effect of
\fB\-\-lines=\fR\&.
.RE
.PP
\fB\-r\fR, \fB\-\-reverse\fR
.RS 4
Reverse output, so tha newest entries is displayed first\&.
.RE
.PP
\fB\-o\fR, \fB\-\-output=\fR
.RS 4
Controls tha formattin of tha journal entries dat is shown\&. Takes one of tha followin options:
.PP
\fBshort\fR
.RS 4
is tha default n' generates a output dat is mostly identical ta tha formattin of funky-ass syslog files, showin one line per journal entry\&.
.RE
.PP
\fBshort\-iso\fR
.RS 4
is straight-up similar yo, but shows ISO 8601 wallclock timestamps\&.
.RE
.PP
\fBshort\-precise\fR
.RS 4
is straight-up similar yo, but shows timestamps wit full microsecond precision\&.
.RE
.PP
\fBshort\-monotonic\fR
.RS 4
is straight-up similar yo, but shows monotonic timestamps instead of wallclock timestamps\&.
.RE
.PP
\fBverbose\fR
.RS 4
shows tha full\-structured entry shit wit all fields\&.
.RE
.PP
\fBexport\fR
.RS 4
serializes tha journal tha fuck into a funky-ass binary (but mostly text\-based) stream suitable fo' backups n' network transfer (see
\m[blue]\fBJournal Export Format\fR\m[]\&\s-2\u[1]\d\s+2
for mo' shiznit)\&.
.RE
.PP
\fBjson\fR
.RS 4
formats entries as JSON data structures, one per line (see
\m[blue]\fBJournal JSON Format\fR\m[]\&\s-2\u[2]\d\s+2
for mo' shiznit)\&.
.RE
.PP
\fBjson\-pretty\fR
.RS 4
formats entries as JSON data structures yo, but formats dem up in multiple lines up in order ta make dem mo' readable fo' humans\&.
.RE
.PP
\fBjson\-sse\fR
.RS 4
formats entries as JSON data structures yo, but wraps dem up in a gangbangin' format suitable for
\m[blue]\fBServer\-Sent Events\fR\m[]\&\s-2\u[3]\d\s+2\&.
.RE
.PP
\fBcat\fR
.RS 4
generates a straight-up terse output only showin tha actual message of each journal entry wit no metadata, not even a timestamp\&.
.RE
.RE
.PP
\fB\-x\fR, \fB\-\-catalog\fR
.RS 4
Augment log lines wit explanation texts from tha message catalog\&. This will add explanatory help texts ta log lyrics up in tha output where dis be available\&. These short help texts will explain tha context of a error or log event, possible solutions, as well as pointas ta support forums, pimper documentation, n' any other relevant manuals\&. Note dat help texts is not available fo' all lyrics yo, but only fo' selected ones\&. For mo' shiznit on tha message catalog, please refer ta the
\m[blue]\fBMessage Catalog Developer Documentation\fR\m[]\&\s-2\u[4]\d\s+2\&.
.sp
Note: when attaching
\fBjournalctl\fR
output ta bug reports, please do
\fInot\fR
use
\fB\-x\fR\&.
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
Suppresses any warnin message regardin inaccessible system journals when run as aiiight user\&.
.RE
.PP
\fB\-m\fR, \fB\-\-merge\fR
.RS 4
Show entries interleaved from all available journals, includin remote ones\&.
.RE
.PP
\fB\-b \fR\fB[\fIID\fR]\fR\fB[\fI\(+-offset\fR]\fR, \fB\-\-boot=\fR\fB[\fIID\fR]\fR\fB[\fI\(+-offset\fR]\fR
.RS 4
Show lyrics from a specific boot\&. This will add a match for
"_BOOT_ID="\&.
.sp
Da argument may be empty, up in which case logs fo' tha current boot is ghon be shown\&.
.sp
If tha boot ID is omitted, a positive
\fIoffset\fR
will look up tha boots startin from tha beginnin of tha journal, n' a equal\-or\-less\-than zero
\fIoffset\fR
will look up boots startin from tha end of tha journal\&. Thus,
\fB1\fR
means tha straight-up original gangsta boot found up in tha journal up in tha chronological order,
\fB2\fR
the second n' so on; while
\fB\-0\fR
is tha last boot,
\fB\-1\fR
the boot before that, n' so on\& fo' realz. An empty
\fIoffset\fR
is equivalent ta specifying
\fB\-0\fR, except when tha current boot aint tha last boot (e\&.g\&. cuz
\fB\-\-directory\fR
was specified ta peep logs from a gangbangin' finger-lickin' different machine)\&.
.sp
If tha 32 character
\fIID\fR
is specified, it may optionally be followed by
\fIoffset\fR
which identifies tha boot relatizzle ta tha one given by boot
\fIID\fR\&. Negatizzle joints mean earlier boots n' a positizzle joints mean lata boots\&. If
\fIoffset\fR
is not specified, a value of zero be assumed n' tha logs fo' tha boot given by
\fIID\fR
are shown\&.
.RE
.PP
\fB\-\-list\-boots\fR
.RS 4
Show a tabular list of boot numbers (relatizzle ta current boot), they IDs, n' tha timestampz of tha straight-up original gangsta n' last message pertainin ta tha boot\&.
.RE
.PP
\fB\-k\fR, \fB\-\-dmesg\fR
.RS 4
Show only kernel lyrics\&. This implies
\fB\-b\fR
and addz tha match
"_TRANSPORT=kernel"\&.
.RE
.PP
\fB\-u\fR, \fB\-\-unit=\fR
.RS 4
Show lyrics fo' tha specified systemd unit\&. This will add a match fo' lyrics from tha unit ("_SYSTEMD_UNIT=") n' additionizzle matches fo' lyrics from systemd n' lyrics bout coredumps fo' tha specified unit\&.
.sp
This parameta can be specified multiple times\&.
.RE
.PP
\fB\-\-user\-unit=\fR
.RS 4
Show lyrics fo' tha specified user session unit\&. This will add a match fo' lyrics from tha unit ("_SYSTEMD_USER_UNIT="
and
"_UID=") n' additionizzle matches fo' lyrics from session systemd n' lyrics bout coredumps fo' tha specified unit\&.
.sp
This parameta can be specified multiple times\&.
.RE
.PP
\fB\-p\fR, \fB\-\-priority=\fR
.RS 4
Filta output by message prioritizzles or prioritizzle ranges\&. Takes either a single numeric or textual log level (i\&.e\&. between 0/"emerg"
and 7/"debug"), or a range of numeric/text log levels up in tha form FROM\&.\&.TO\&. Da log levels is tha usual syslog log levels as documented in
\fBsyslog\fR(3), i\&.e\&.
"emerg"
(0),
"alert"
(1),
"crit"
(2),
"err"
(3),
"warning"
(4),
"notice"
(5),
"info"
(6),
"debug"
(7)\&. If a single log level is specified, all lyrics wit dis log level or a lower (hence mo' blingin) log level is shown\&. If a range is specified, all lyrics within tha range is shown, includin both tha start n' tha end value of tha range\&. This will add
"PRIORITY="
matches fo' tha specified priorities\&.
.RE
.PP
\fB\-c\fR, \fB\-\-cursor=\fR
.RS 4
Start showin entries from tha location up in tha journal specified by tha passed cursor\&.
.RE
.PP
\fB\-\-after\-cursor=\fR
.RS 4
Start showin entries from tha location up in tha journal
\fIafter\fR
the location specified by tha dis cursor\&. Da cursor is shown when the
\fB\-\-show\-cursor\fR
option is used\&.
.RE
.PP
\fB\-\-show\-cursor\fR
.RS 4
Da cursor is shown afta tha last entry afta two dashes:
.sp
.if n \{\
.RS 4
.\}
.nf
\-\- cursor: s=0639\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
Da format of dis tha cursor is private n' subject ot chizzle\&.
.RE
.PP
\fB\-\-since=\fR, \fB\-\-until=\fR
.RS 4
Start showin entries on or newer than tha specified date, or on or olda than tha specified date, respectively\&. Date justifications should be of tha format
"2012\-10\-30 18:17:16"\&. If tha time part is omitted,
"00:00:00"
is assumed\&. If only tha secondz component is omitted,
":00"
is assumed\&. If tha date component is omitted, tha current dizzle be assumed\& fo' realz. Alternatively tha strings
"yesterday",
"todizzle",
"tomorrow"
are understood, which refer ta 00:00:00 of tha dizzle before tha current day, tha current day, or tha dizzle afta tha current day, respectively\&.
"now"
refers ta tha current time\&. Finally, relatizzle times may be specified, prefixed with
"\-"
or
"+", referrin ta times before or afta tha current time, respectively\&.
.RE
.PP
\fB\-F\fR, \fB\-\-field=\fR
.RS 4
Print all possible data joints tha specified field can take up in all entriez of tha journal\&.
.RE
.PP
\fB\-\-system\fR, \fB\-\-user\fR
.RS 4
Show lyrics from system skillz n' tha kernel (with
\fB\-\-system\fR)\&. Right back up in yo muthafuckin ass. Show lyrics from steez of current user (with
\fB\-\-user\fR)\&. If neither is specified, show all lyrics dat tha user can see\&.
.RE
.PP
\fB\-D \fR\fB\fIDIR\fR\fR, \fB\-\-directory=\fR\fB\fIDIR\fR\fR
.RS 4
Takes a gangbangin' finger-lickin' directory path as argument\&. If specified, journalctl will operate on tha specified journal directory
\fIDIR\fR
instead of tha default runtime n' system journal paths\&.
.RE
.PP
\fB\-\-file=\fR\fB\fIGLOB\fR\fR
.RS 4
Takes a gangbangin' file glob as argument\&. If specified, journalctl will operate on tha specified journal filez matching
\fIGLOB\fR
instead of tha default runtime n' system journal paths\&. May be specified multiple times, up in which case filez is ghon be suitably interleaved\&.
.RE
.PP
\fB\-\-root=\fR\fB\fIROOT\fR\fR
.RS 4
Takes a gangbangin' finger-lickin' directory path as argument\&. If specified, journalctl will operate on catalog file hierarchy underneath tha specified directory instead of tha root directory (e\&.g\&.
\fB\-\-update\-catalog\fR
will create
\fIROOT\fR/var/lib/systemd/catalog/database)\&.
.RE
.PP
\fB\-\-new\-id128\fR
.RS 4
Instead of showin journal contents, generate a freshly smoked up 128 bit ID suitable fo' identifyin lyrics\&. This is intended fo' usage by pimpers whoz ass need a freshly smoked up identifier fo' a freshly smoked up message they introduce n' wanna make recognizable\&. This will print tha freshly smoked up ID up in three different formats which can be copied tha fuck into source code or similar\&.
.RE
.PP
\fB\-\-header\fR
.RS 4
Instead of showin journal contents, show internal header shiznit of tha journal fieldz accessed\&.
.RE
.PP
\fB\-\-disk\-usage\fR
.RS 4
Shows tha current disk usage of all journal files\&.
.RE
.PP
\fB\-\-list\-catalog \fR\fB[\fI128\-bit\-ID\&.\&.\&.\fR]\fR\fB \fR
.RS 4
List tha contentz of tha message catalog, as table of message IDs plus they short description strings\&.
.sp
If any
\fI128\-bit\-ID\fRs is specified, only dem entries is shown\&.
.RE
.PP
\fB\-\-dump\-catalog \fR\fB[\fI128\-bit\-ID\&.\&.\&.\fR]\fR\fB \fR
.RS 4
Show tha contentz of tha message catalog, wit entries separated by a line consistin of two dashes n' tha id (the format is tha same ol' dirty as
\&.catalog
files\&.
.sp
If any
\fI128\-bit\-ID\fRs is specified, only dem entries is shown\&.
.RE
.PP
\fB\-\-update\-catalog\fR
.RS 4
Update tha message catalog index\&. This command need ta be executed each time freshly smoked up catalog filez is installed, removed or updated ta rebuild tha binary catalog index\&.
.RE
.PP
\fB\-\-setup\-keys\fR
.RS 4
Instead of showin journal contents, generate a freshly smoked up key pair fo' Forward Secure Sealin (FSS)\&. This will generate a sealin key n' a verification key\&. Da sealin key is stored up in tha journal data directory n' shall remain on tha host\&. Da verification key should be stored externally\&. Refer ta the
\fBSeal=\fR
option in
\fBjournald.conf\fR(5)
for shiznit on Forward Secure Sealin n' fo' a link ta a refereed scholarly paper detailin tha cryptographic theory it is based on\&.
.RE
.PP
\fB\-\-force\fR
.RS 4
When \-\-setup\-keys is passed n' Forward Secure Sealin has already been set up, recreate FSS keys\&.
.RE
.PP
\fB\-\-interval=\fR
.RS 4
Specifies tha chizzle interval fo' tha sealin key when generatin a FSS key pair with
\fB\-\-setup\-keys\fR\&. Right back up in yo muthafuckin ass. Shorta intervals increase CPU consumption but shorten tha time range of undetectable journal alterations\&. Defaults ta 15min\&.
.RE
.PP
\fB\-\-verify\fR
.RS 4
Peep tha journal file fo' internal consistency\&. If tha file has been generated wit FSS enabled n' tha FSS verification key has been specified with
\fB\-\-verify\-key=\fR, authenticitizzle of tha journal file is verified\&.
.RE
.PP
\fB\-\-verify\-key=\fR
.RS 4
Specifies tha FSS verification key ta use fo' the
\fB\-\-verify\fR
operation\&.
.RE
.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&.
.SH "ENVIRONMENT"
.PP
\fI$SYSTEMD_PAGER\fR
.RS 4
Pager ta use when
\fB\-\-no\-pager\fR
is not given; overrides
\fI$PAGER\fR\&. Right back up in yo muthafuckin ass. Settin dis ta a empty strang or tha value
"cat"
is equivalent ta passing
\fB\-\-no\-pager\fR\&.
.RE
.SH "EXAMPLES"
.PP
Without arguments, all collected logs is shown unfiltered:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl
.fi
.if n \{\
.RE
.\}
.PP
With one match specified, all entries wit a gangbangin' field matchin tha expression is shown:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service
.fi
.if n \{\
.RE
.\}
.PP
If two different fieldz is matched, only entries matchin both expressions all up in tha same time is shown:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _PID=28097
.fi
.if n \{\
.RE
.\}
.PP
If two matches refer ta tha same field, all entries matchin either expression is shown:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _SYSTEMD_UNIT=dbus\&.service
.fi
.if n \{\
.RE
.\}
.PP
If tha separator
"+"
is used, two expressions may be combined up in a logical OR\&. Da followin will show all lyrics from tha Avahi steez process wit tha PID 28097 plus all lyrics from tha D\-Bus steez (from any of its processes):
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _PID=28097 + _SYSTEMD_UNIT=dbus\&.service
.fi
.if n \{\
.RE
.\}
.PP
Show all logs generated by tha D\-Bus executable:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl /usr/bin/dbus\-daemon
.fi
.if n \{\
.RE
.\}
.PP
Show all logz of tha kernel thang node
/dev/sda:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl /dev/sda
.fi
.if n \{\
.RE
.\}
.PP
Show all kernel logs from previous boot:
.sp
.if n \{\
.RS 4
.\}
.nf
journalctl \-k \-b \-1
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-journald.service\fR(8),
\fBsystemctl\fR(1),
\fBsystemd.journal-fields\fR(7),
\fBjournald.conf\fR(5)
.SH "NOTES"
.IP " 1." 4
Journal Export Format
.RS 4
\%http://www.freedesktop.org/wiki/Software/systemd/export
.RE
.IP " 2." 4
Journal JSON Format
.RS 4
\%http://www.freedesktop.org/wiki/Software/systemd/json
.RE
.IP " 3." 4
Server-Sent Events
.RS 4
\%https://developer.mozilla.org/en-US/docs/Server-sent_events/Using_server-sent_events
.RE
.IP " 4." 4
Message Catalog Developer Documentation
.RS 4
\%http://www.freedesktop.org/wiki/Software/systemd/catalog
.RE
