.\"-------
.\" Man page portabilitizzle notes
.\"
.\" These is some notes on conventions ta maintain fo' top billin
.\" portabilitizzle of dis playa page ta various other versions of
.\" nroff.
.\"
.\" When you want a \ ta step tha fuck up in tha output, use \e up in tha playa page.
.\" (NOTE dis comes up in tha rc grammar, where ta print up '\n' the
.\" playa page must contain '\en'.)
.\"
.\" Evidently not all versionz of nroff allow tha omission of the
.\" terminal " on a macro argument.  Thus what tha fuck could be written
.\"
.\" .Cr "exec >[2] err.out
.\"
.\" up in legit nroffs must be written
.\"
.\" .Cr "exec >[2] err.out"
.\"
.\" instead.
.\"
.\" Use symbolic font names (e.g. R, I, B) instead of tha standard
.\" font positions 1, 2, 3.  Note dat fo' Xf ta work tha standard
.\" font names must be single characters.
.\"
.\" Note dat sentences should end all up in tha end of a line.  nroff and
.\" troff will supply tha erect intersentence spacin yo, but only if
.\" tha sentences end all up in tha end of a line.  Explicit spaces, if given,
.\" is apparently honored n' tha aiiight intersentence spacin is
.\" supressed.
.\"
.\" DaviD W. Right back up in yo muthafuckin ass. Sanderson
.\"-------
.\" Dd	distizzle ta space vertically before a "display"
.\" These is what tha fuck n/troff use fo' interparagraph distance
.\"-------
.if t .nr Dd .4v
.if n .nr Dd 1v
.\"-------
.\" Sp	space down tha interparagraph distance
.\"-------
.de Sp
.sp \\n(Ddu
..
.\"-------
.\" Ds	begin a gangbangin' finger-lickin' display, indented .5 inches from tha surroundin text.
.\"
.\" Note dat usez of Ds n' De may NOT be nested.
.\"-------
.de Ds
.Sp
.in +0.5i
.nf
..
.\"-------
.\" De	end a gangbangin' finger-lickin' display (no trailin vertical spacing)
.\"-------
.de De
.fi
.in
..
.\"-------
.\" Xs	begins a gangbangin' finger-lickin' display paragraph, indented .5 inches from tha surrounding
.\" text.  Same as Ds, almost.
.\"-------
.de Xs
.IP
.in +0.5i
.nf
..
.\"-------
.\" Xe	end a gangbangin' finger-lickin' display (no trailin vertical spacing)
.\"-------
.de Xe
.fi
.in
.IP
..
.TH ncftp 1 "NcFTP Software" ncftp
.SH NAME
ncftp - Browser program fo' tha File Transfer Protocol
.SH "SYNOPSIS"
.PP
.B ncftp
.RI [ "host" ]
.PP
.B ncftp
.RI [ "ftp://host.name/directory/" ]
.\"-------
.SH "DESCRIPTION"
.\"-------
.PP
The
purpose of
.I ncftp
is ta provide a bangin n' flexible intercourse ta the
Internizzle standard
.IR "File Transfer Protocol" .
It be intended ta replace tha stock
.I ftp
program dat comes wit tha system.
.PP
Although tha program appears ta be rather spartan,
yo dirty ass is gonna find that
.I ncftp
has a wealth of valuable performizzle n' usage features.
Da program was designed wit a emphasis on usability,
and it do as much as it can fo' you automatically so you can do what
you expect ta do wit a gangbangin' file transfer program, which is transfer files
between two interconnected systems.
.PP
Some of tha coola features include progress meters, filename completion,
command-line editing, background processing, auto-resume downloads,
bookmarking, cached directory listings, host redialing,
workin wit firewalls n' proxies,
downloadin entire directory trees, etc., etc.
.PP
The
.I ncftp
distribution comes wit tha useful utilitizzle programs
.IR ncftpget "(1)"
and
.IR ncftpput "(1)"
which was designed ta do command-line FTP.
In particular, they is straight-up handy fo' shell scripts.
This version of
.I ncftp
no longer do command-line FTP, since
the main
.I ncftp
program is mo' of a funky-ass browser-type program.
.\"-------
.SS "OPTIONS"
.\"-------
Da program allows you ta specify a host or directory URL
on tha command line.  This be a synonym fo' hustlin
.I ncftp
and then rockin the
.I open
command.
A few command-line flags is allowed wit dis mode:
.TP 8
.BI "-u " "XX"
Use username
.I XX
instead of anonymous.
.TP 8
.BI "-p " "XX"
Use password
.I XX
with tha username.
.TP 8
.BI "-j " "XX"
Use account 
.I XX
in supplement ta tha username n' password (deprecated).
.TP 8
.BI "-P " "XX"
Use port number
.I XX
instead of tha default FTP steez port (21).
.\"-------
.SS "INTRODUCTION TO THE COMMAND SHELL"
.\"-------
.PP
Upon hustlin tha program yo ass is presented a cold-ass lil command prompt
where you type commandz ta the
programz shell.
Usually yo big-ass booty is ghon wanna open a remote filesystem ta transfer files
to n' from yo' local machinez filesystem.
To do that, you need ta know tha symbolic name of tha remote system,
or its
.I "Internizzle Protocol" 
(IP) address.
For example, a symbolic name might be ``typhoon\.unl\.edu,'' n' its IP
address could be ``129.93.33.24.''
To open a cold-ass lil connection ta dat system, you use tha program's
.I open
command:
.Ds
open typhoon.unl.edu
open 129.93.33.24
.De
.PP
Both of these try ta open tha machine called typhoon at the
.IR "Universitizzle of Nebraska" "."
Usin tha symbolic name is tha preferred way, cuz IP addresses may
change without notice, while tha symbolic names probably stay tha same.
.PP
When you open a remote filesystem, you need ta have permission.
The
.IR "FTP Protocol" "'s"
authentication system is straight-up similar ta dat of
loggin up in ta yo' account.
Yo ass gotta give a account name, n' its password fo' access ta that
accountz files.
But fuck dat shiznit yo, tha word on tha street is dat most remote systems dat have anythang you might be interested
in don't require a account name fo' use.
Yo ass can often git anonymous access ta a remote filesystem n' exchange
filez dat done been made publicly accessible.
Da program attempts ta git anonymous permission ta a remote system by
default.
What straight-up happens is dat tha program tries ta use ``anonymous'' as
the account name, n' when prompted fo' a password, uses yo' E-mail address
as a cold-ass lil courtesy ta tha remote systemz maintainer.
Yo ass can have tha program try ta bust a specific account also.
That is ghon be explained later.
.PP
Afta the
.I open
command completes successfully, yo ass is connected ta tha remote system
and logged in.
Yo ass should now peep tha command prompt chizzle ta reflect tha name
of tha current remote directory.
To peep whatz up in tha current remote directory, you can use tha program's
.IR "ls" " n' " "dir"
commands.  Da forma is terse, preferrin mo' remote files
in less screen space, n' tha latta is mo' verbose, givin detailed
information bout each item up in tha directory.
.PP
Yo ass can use tha program's
.IR cd
command ta move ta other directories on the
remote system.
Da cd command behaves straight-up much like tha command of tha same name up in the
.IR "Bourne" " n' " "Korn" " shell."
.PP
Da purpose of tha program is ta exchange data wit other systems.
Yo ass can use tha programz 
.IR get
command ta copy a gangbangin' file from tha remote system ta yo' local system:
.Ds
get README.txt
.De
.PP
Da program will display tha progress of tha transfer on tha screen, so
you can tell how tha fuck much need ta be done before tha transfer finishes.
When tha transfer do finish, then you can enta mo' commandz ta the
programz command shell.
.PP
Yo ass can use tha program's
.IR put
command ta copy a gangbangin' file from yo' system ta tha remote system:
.Ds
put something.tar
.De
.PP
When yo ass is finished rockin tha remote system, you can open another one
or use the
.IR quit
.PP
Before quitting, you may wanna save tha current FTP session's
settings fo' later.
Yo ass can use the
.IR bookmark
command ta save a entry tha fuck into your
$HOME/.ncftp/bookmarks
file.  When you use the
.I bookmark
command, you also specify a funky-ass bookmark name, so tha next time instead of
openin tha full hostname you can use tha name of tha bookmark.
A bookmark acts just like one fo' yo' wizzy browser, so it saves the
remote directory you was in, tha account name you used, etc., n' other
information it hustled so dat tha next time you use tha bookmark it should
require as lil effort from you as possible.
.\"-------
.SS "COMMAND REFERENCE"
.\"-------
.IP help
Da first command ta know is
.IR help "."
If you just type
.Xs
help
.Xe
from tha command shell, tha program prints tha namez of all of tha supported
commands.
From there, you can git specific help fo' a cold-ass lil command by typin tha command
after, fo' example:
.Xs
help open
.Xe
prints shiznit bout the
.I open
command.
.\"-------
.IP ascii
.\"-------
This command sets tha transfer type ta ASCII text.
This is useful fo' text-only transfers cuz tha concept of
text filez differs between operatin systems.
For example on UNIX, a text file denotes line breaks wit the
linefeed character, while on MS-DOS a line break is denoted by
both a cold-ass lil carriage return characta n' a line feed character.
Therefore, fo' data transfers dat you consider tha data as text
you can use
.I ascii
to ensure dat both tha remote system n' local system translate
accordingly.
Da default transfer type that
.I ncftp
uses aint ASCII yo, but straight binary.
.\"-------
.IP "bgget n' bgput"
.\"-------
These commandz correspond ta the
.IR git " n' " put
commandz explained below, except dat they do tha thang up in tha background.
Normally when you do a
.I get
then tha program do tha downlizzle immediately, n' do not return
control ta you until tha downlizzle completes.
Da background transfers is sick cuz you can continue browsing
the remote filesystem n' even open other systems.
In fact, they is done by a thugged-out daemon process, so even if you log off
your UNIX host tha daemon should still do yo' transfers.
Da daemon will also automatically continue ta retry tha transfers
until they finish.
To tell when background thangs have finished, you gotta examine the
.I $HOME/.ncftp/spool/log
file, or run the
.I thangs
command from within 
.IR NcFTP "."
.IP
Both the
.IR bgget " n' " bgput
commandz allow you ta schedule when ta do tha transfers.
They take a ``\-@'' parameter, whose argument be a thugged-out date
of tha form YYYYMMDDhhmmss
(four digit year, month, day, hour, minute, second).
For example, ta schedule a thugged-out downlizzle at 3 AM on November 6,
you could try:
.Xs
bgget \-@ 19971106030000 /pub/idstuff/quake/q2_100\.zip
.De
.\"-------
.IP bgstart
.\"-------
This command tells
.I ncftp
to immediately start tha background transfers you've requested, which
simply runs a cold-ass lil copy of the
.I ncftpbatch
program which is responsible fo' tha background thangs.
Normally tha program will start tha background thang as soon as you close
the current crib, open a freshly smoked up crib, or quit tha program.
Da reason fo' dis is cuz since all kindsa muthafuckin playas still use slow
dialup links dat startin tha transfers would slow thangs ta a cold-ass lil crawl,
makin it hard as fuck ta browse tha remote system.
An added bonuz of startin tha background thang when you close tha crib
is that
.I ncftp
can pass off dat open connection ta the
.I ncftpbatch
program.
That is sick when tha joint be always busy, so dat tha background thang
doesn't gotta wait n' git re-logged on ta do its thang.
.\"-------
.IP binary
.\"-------
Sets tha transfer type ta raw binary, so that
no translation is done on tha data transferred.
This is tha default anyway, since most filez is up in binary.
.\"-------
.IP bookmark
.\"-------
Saves tha current session settings fo' lata use.
This is useful ta save tha remote system n' remote hustlin directory
so you can quickly resume where you left off some other time.
Da bookmark data is stored up in your
.I $HOME/.ncftp/bookmarks
file.
.\"-------
.IP bookmarks
.\"-------
Lists tha contentz of your
.I $HOME/.ncftp/bookmarks
file up in a human-readable format.
Yo ass can use dis command ta recall tha bookmark name of a previously
saved bookmark, so dat you can use the
.I open
command wit dat shit.
.\"-------
.IP cat
.\"-------
Acts like tha ``/bin/cat''
.I UNIX
command, only fo' remote files.
This downloadz tha file you specify n' dumps it directly ta the
screen.
Yo ass will probably find the
.I page
command mo' useful, since dat lets you view tha file one screen
at a time instead of printin tha entire file at once.
.\"-------
.IP cd
.\"-------
Changes tha hustlin directory on tha remote host.
Use dis command ta move ta different areas on tha remote server.
If you just opened a freshly smoked up crib, you might be up in tha root directory.
Perhaps there was a gangbangin' finger-lickin' directory called ``/pub/news/comp\.sources\.d''
that one of mah thugs holla'd at you about.
From tha root directory, you could:
.Xs
cd pub
cd news
cd comp.sources.d
.Xe
or, mo' concisely,
.Xs
cd /pub/news/comp.sources.d
.Xe
Then, commandz such as
.IR "get" ", " "put" ", n' " "ls"
could be used ta refer ta shit up in dat directory.
.IP
Some shells up in the
.I UNIX
environment gotz a gangbangin' feature I like, which is switchin ta tha previous
directory.
Like dem shells, you can do:
.Xs
cd -
.Xe
to chizzle ta tha last directory you was in.
.\"-------
.IP chmod
.\"-------
Acts like tha ``/bin/chmod''
.I UNIX
command, only fo' remote files.
But fuck dat shiznit yo, tha word on tha street is dat dis aint a standard command, so remote FTP servers
may not support dat shit.
.\"-------
.IP close
.\"-------
Disconnects you from tha remote server.
Da program do dis fo' you automatically when needed, so you can simply
open other cribs or quit tha program without worryin bout closin the
connection by hand.
.\"-------
.IP debug
.\"-------
This command is mostly fo' internal testing.
Yo ass could type
.Xs
debug 1
.Xe
to turn debuggin mode on.
Then you could peep all lyrics between tha program n' tha remote
server, n' thangs dat is only printed up in debuggin mode.
But fuck dat shiznit yo, tha word on tha street is dat dis shiznit be also available up in the
.I $HOME/.ncftp/trace
file, which is pimped each time you run
.IR ncftp "."
If you need ta report a funky-ass bug, bust a
.I trace
file if you can.
.\"-------
.IP dir
.\"-------
Prints a thugged-out detailed directory listing.
It tries ta behave like
.IR UNIX "'s"
``/bin/ls -l'' command.
If tha remote server seems ta be a
.I UNIX
host, you can also use tha same flags you would with
.IR "ls" ", fo' instance"
.Xs
dir -rt
.Xe
would try ta act like
.Xs
/bin/ls -lrt
.Xe
would on
.IR UNIX "."
.\"-------
.IP edit
.\"-------
Downloadz tha fuck into a temporary file fo' editin on tha local host,
then uploadz tha chizzled file back ta tha remote host.
.\"-------
.IP get
.\"-------
Copies filez from tha current hustlin directory on the
remote host ta yo' machinez current hustlin directory.
To place a cold-ass lil copy of ``README'' n' ``README.too''
in yo' local directory, you could try:
.Xs
get README README.too
.Xe
Yo ass could also accomplish dat by rockin a wildcard expression,
such as:
.Xs
get README*
.Xe
This command is similar ta tha behavior of other FTP programs'
.I mget
command.
To retrieve a remote file but give it a gangbangin' finger-lickin' different name on your
host, you can use tha ``\-z'' flag.
This example shows how tha fuck ta downlizzle a gangbangin' file called
.I ReadMe.txt
but name it locally as
.IR README ":"
.Xs
get -z ReadMe.txt README
.Xe
Da program tries ta ``resume'' downloadz by default.
This means dat if tha remote FTP server lost tha connection
and was only able ta bust 490 kilobytez of a 500 kilobyte
file, you could reconnect ta tha FTP server n' do another
.I get
on tha same file name n' it would git tha last 10 kilobytes,
instead of retrievin tha entire file again.
There is some occasions where you may not want dat behavior.
To turn it off you can use tha ``\-f'' flag.
.IP
There is also times where you wanna append ta a existing
file.
Yo ass can do dis by rockin tha ``\-A'' flag, fo' example
.Xs
get -A log.11
.Xe
would append ta a gangbangin' file named ``log\.11'' if it existed locally.
.IP
Another thang you can do is delete a remote file afta you
downlizzle dat shit.
This can be useful when a remote host expects a gangbangin' file ta be
removed when it has been retrieved.
Use tha double\-D flag, like fuckin ``get\ \-DD'' ta do all dis bullshit.
.IP
The
.I get
command lets you retrieve entire directory trees, like a muthafucka.
Although it may not work wit some remote systems, you can
try ``get\ \-R'' wit a gangbangin' finger-lickin' directory ta downlizzle tha directory
and its contents.
.IP
When rockin tha ``\-R'' flag, you can also use tha ``\-T'' flag ta disable
automatic on-the-fly TAR mode fo' downloadin whole directory trees.
Da program uses TAR whenever possible since dis probably preserves symbolic
links n' file permissions. TAR mode can also result up in fasta transfers for
directories containin nuff lil' small-ass files, since a single data connection can
be used rather than a FTP data connection fo' each lil' small-ass file. Da downside
to rockin TAR is dat it forces downloadin of tha whole directory, even if
you had previously downloaded a portion of it earlier, so you may wanna use
this option if you wanna resume downloadin of a gangbangin' finger-lickin' directory.
.\"-------
.IP thangs
.\"-------
Views tha list of currently executing
.I NcFTP
background tasks.
This straight-up just runs 
.I ncftpbatch \-l
for yo thugged-out ass.
.\"-------
.IP lcd
.\"-------
The
.I lcd
command is tha straight-up original gangsta of all dem ``l'' commandz dat work wit tha local host.
This chizzlez tha current hustlin directory on tha local host.
If you wanna downlizzle filez tha fuck into a gangbangin' finger-lickin' different local directory, you could
use
.I lcd
to chizzle ta dat directory n' then do yo' downloads.
.\"-------
.IP lchmod
.\"-------
Runs ``/bin/chmod'' on tha local host.
.\"-------
.IP lls
.\"-------
Another local command dat comes up in handy is the
.I lls
command, which runs ``/bin/ls'' on tha local host n' displays tha thangs up in dis biatch
in tha programz window.
Yo ass can use tha same flags with
.I lls
as you would up in yo' command shell, so you can do thangs like:
.Xs
lcd ~/doc
lls -lrt p*.txt
.De
.\"-------
.IP lmkdir
.\"-------
Runs ``/bin/mkdir'' on tha local host.
.\"-------
.IP lookup
.\"-------
Da program also has a funky-ass built-in intercourse ta tha name steez via
the
.I lookup
command.
This means you can lookup entries fo' remote hosts, like:
.Xs
lookup cse.unl.edu ftp.cs.unl.edu sphygmomanometer.unl.edu
.Xe
prints:
.Xs
cse\.unl\.edu\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 129\.93\.33\.1
typhoon\.unl\.edu\ \ \ \ \ \ \ \ \ \ \ 129\.93\.33\.24
sphygmomanometer\.unl\.edu\ \ 129\.93\.33\.126
.Xe
There be also a mo' detailed option, enabled wit ``\-v,'' i.e.:
.Xs
lookup -v cse.unl.edu ftp.cs.unl.edu
.Xe
prints:
.Xs
cse.unl.edu:
\ \ \ \ Name:\ \ \ \ \ cse\.unl.edu
\ \ \ \ Address:\ \ 129\.93.33.1

ftp\.cs.unl.edu:
\ \ \ \ Name:\ \ \ \ \ typhoon\.unl.edu
\ \ \ \ Alias:\ \ \ \ ftp\.cs.unl.edu
\ \ \ \ Address:\ \ 129\.93.33.24
.Xe
Yo ass can also give
.I IP
addresses, so dis would work too:
.Xs
lookup 129.93.33.24
.Xe
prints:
.Xs
typhoon\.unl\.edu\ \ \ \ \ \ \ \ \ \ \ 129\.93\.33\.24
.De
.\"-------
.IP lpage
.\"-------
Views a local file one page at a time, wit yo' preferred
$PAGER program.
.\"-------
.IP lpwd
.\"-------
Prints tha current local directory.
Use dis command when you forget where yo ass is on yo' local machine.
.\"-------
.IP lrename
.\"-------
Runs ``/bin/mv'' on tha local host.
.\"-------
.IP lrm
.\"-------
Runs ``/bin/rm'' on tha local host.
.\"-------
.IP lrmdir
.\"-------
Runs ``/bin/rmdir'' on tha local host.
.\"-------
.IP ls
.\"-------
Prints a gangbangin' finger-lickin' directory listin from tha remote system.
It tries ta behave like
.IR UNIX "'s"
``/bin/ls\ \-CF'' command.
If tha remote server seems ta be a
.I UNIX
host, you can also use tha same flags you would with
.IR "ls" ", fo' instance"
.Xs
ls -rt
.Xe
would try ta act like
.Xs
/bin/ls -CFrt
.Xe
would on
.IR UNIX "."
.IP
.I ncftp
has a bangin built-in system fo' dealin wit directory listings.
It tries ta cache each one, so if you list tha same directory, odds
are it will display instantly.
Behind tha scenes,
.I ncftp
always tries a long-ass listing, n' then reformats it as it needz to.
So even if yo' first listin of a gangbangin' finger-lickin' directory was a regular ``ls''
which displayed tha filez up in columns, yo' next listin could be
``ls\ \-lrt'' and
.I ncftp
would still use tha cached directory listin ta quickly display the
information fo' you, nahmean biiiatch?
.\"-------
.IP mkdir
.\"-------
Creates a freshly smoked up directory on tha remote host.
For nuff hood archives, you won't have tha proper access permissions to
do dis shit.
.\"-------
.IP open
.\"-------
Establishes a FTP control connection ta a remote host.
By default,
.I ncftp
logs up in anonymously ta tha remote host.
Yo ass may wanna bust a specific user account when you log in,
so you can use tha ``\-u'' flag ta specify which user.
This example shows how tha fuck to
.I open
the host ``bowser\.nintendo\.co\.jp''
usin tha username ``mario:''
.Xs
open -u mario bowser.nintendo.co.jp
.De
.IP
Here be a list of options available fo' use wit the
.I open
command:
.IP
.BI "-u " "XX"
Use username
.I XX
instead of anonymous.
.IP
.BI "-p " "XX"
Use password
.I XX
with tha username.
.IP
.BI "-j " "XX"
Use account 
.I XX
in supplement ta tha username n' password (deprecated).
.IP
.BI "-P " "XX"
Use port number
.I XX
instead of tha default FTP steez port (21).
.\"-------
.IP page
.\"-------
Browses a remote file one page at a time, rockin yo' $PAGER program.
This is useful fo' readin READMEz on tha remote host without downloading
them first.
.\"-------
.IP "pdir n' pls"
.\"-------
These commandz is equivalent to
.IR "dir" " n' " "ls"
respectively, only they feed they output ta yo' pager.
These commandz is useful if tha directory listin scrolls off yo' screen.
.\"-------
.IP put
.\"-------
Copies filez from tha 
local host ta tha remote machinez current hustlin directory.
To place a cold-ass lil copy of ``xx.zip'' n' ``yy.zip''
in tha remote directory, you could try:
.Xs
put xx.zip yy.zip
.Xe
Yo ass could also accomplish dat by rockin a wildcard expression,
such as:
.Xs
put *.zip
.Xe
This command is similar ta tha behavior of other FTP programs'
.I mput
command.
To bust a remote file but give it a gangbangin' finger-lickin' different name on your
host, you can use tha ``\-z'' flag.
This example shows how tha fuck ta upload a gangbangin' file called
``ncftpd\-2\.0\.6\.tar\.gz''
but name it remotely as
``NFTPD206\.TGZ:''
.Xs
put -z ncftpd-2.0.6.tar.gz NFTPD206.TGZ
.Xe
Da program
.I do not
try ta ``resume'' uploadz by default.
If you do wanna resume a upload, use tha ``\-z'' flag.
.IP
There is also times where you wanna append ta a existing
remote file.
Yo ass can do dis by rockin tha ``\-A'' flag, fo' example
.Xs
put -A log11.txt
.Xe
would append ta a gangbangin' file named ``log11\.txt'' if it existed
on tha remote server.
.IP
Another thang you can do is delete a local file afta you
upload dat shit.
Use tha double\-D flag, like fuckin ``put\ \-DD'' ta do all dis bullshit.
.IP
The
.I put
command lets you bust entire directory trees, like a muthafucka.
It should work on all remote systems, so you can
try ``put\ \-R'' wit a gangbangin' finger-lickin' directory ta upload tha directory
and its contents.
.\"-------
.IP pwd
.\"-------
Prints tha current remote hustlin directory.
A portion of tha pathname be also displayed up in the
shellz prompt.
.\"-------
.IP quit
.\"-------
Of course, when you finish rockin tha program, type
.I quit
to end tha program
(Yo ass could also use
.IR "bye" ", " "exit" ", or " "^D" ")."
.\"-------
.IP quote
.\"-------
This can be used ta bust a gangbangin' finger-lickin' direct
.I FTP Protocol
command ta tha remote server.
Generally dis aint too useful ta tha average user.
.\"-------
.IP rename
.\"-------
If you need ta chizzle tha name of a remote file, you can use the
.I rename
command, like:
.Xs
rename SPHYGMTR.TAR sphygmomanometer-2.3.1.tar
.De
.\"-------
.IP rhelp
.\"-------
Sendz a help request ta tha remote server.
Da list of
.I FTP Protocol
commandz is often printed, n' sometimes some other shiznit dat is
actually useful, like how tha fuck ta reach tha joint administrator.
.IP
Dependin on tha remote server, you may be able ta give a parameta to
the server also, like:
.Xs
rhelp NLST
.Xe
One server responded:
.Xs
Syntax: NLST [ <sp> path-name ]
.De
.\"-------
.IP rm
.\"-------
If you need ta delete a remote file you can try the
.I rm
command.
Much of tha time dis won't work cuz you won't have tha proper
access permissions.
This command don't accept any flags, so you can't nuke a whole tree
by rockin ``\-rf'' flags like you can on
.IR UNIX "."
.\"-------
.IP rmdir
.\"-------
Similarly, the
.I rmdir
command removes a gangbangin' finger-lickin' directory.
Dependin on tha remote server, you may be able ta remove a non-empty
directory, so be careful.
.\"-------
.IP set
.\"-------
This lets you configure some program variables, which is saved
between runs up in the
.I $HOME/.ncftp/prefs
file.
Da basic syntax is:
.Xs
set <option> <value>
.Xe
For example, ta chizzle tha value you use fo' tha anonymous password, you
might do:
.Xs
set anon-password devnull@example.com
.Xe
See tha next section fo' a list of thangs you chizzle.
.\"-------
.IP show
.\"-------
This lets you display program variables.
Yo ass can do ``show\ all'' ta display all of them,
or give a variable name ta just display dat one, such as:
.Xs
show anon-password
.De
.\"-------
.IP crib
.\"-------
One obscure command you may gotta use somedizzle is
.IR "site" "."
The
.I FTP Protocol
allows fo' ``site specific'' commands.
These ``site'' commandz vary of course, such as:
.Xs
site chmod 644 README
.Xe
Actually,
.IR ncftp "z " chmod
command straight-up do tha above.
.IP
Try bustin one of these ta peep what tha fuck tha remote server supports, if any:
.Xs
rhelp SITE
site help
.De
.\"-------
.IP type
.\"-------
Yo ass may need ta chizzle transfer types durin tha course of a session with
a server.
Yo ass can use the
.I type
command ta do all dis bullshit.  Try one of these:
.Xs
type ascii
type binary
type image
.Xe
The
.I ascii
command is equivalent ta ``type\ a'', n' the
.I binary
command is equivalent ta ``type\ i'' n' ``type\ b''.
.\"-------
.IP umask
.\"-------
Sets tha process'
.I umask
on tha remote server, if it has any concept of a umask, i.e.:
.Xs
umask 077
.Xe
But fuck dat shiznit yo, tha word on tha street is dat dis aint a standard command, so remote FTP servers
may not support dat shit.
.\"-------
.IP version
.\"-------
This command dumps some shiznit bout tha particular edizzle of the
program yo ass is using, n' how tha fuck dat shiznit was installed on yo' system.
.\"-------
.SS "VARIABLE REFERENCE"
.\"-------
.\"-------
.IP "anon\-password"
.\"-------
Specifies what tha fuck ta use fo' tha password when loggin up in anonymously.
Internizzle convention has been ta use yo' E-mail address as a
courtesy ta tha joint administrator.
If you chizzle this, be aware dat some cribs require (i.e. they
check for) valid E-mail addresses.
.\"-------
.IP "auto\-resume"
.\"-------
.I NcFTP
3 now prompts tha user by default when you try ta download
a file dat already exists locally, or upload a gangbangin' file that
already exists remotely.
Older versionz of tha program automatically guessed whether ta overwrite
the existin file or attempt ta resume where it left off,
but sometimes tha program would guess wrong.
If you would prefer dat tha program always guess which
action ta take, set dis variable to
.IR yeaaaa ","
otherwise, leave it set to
.I "no"
and tha program will prompt you fo' which action ta take.
.\"-------
.IP "auto\-ascii"
.\"-------
If set ta a list of pipe-characta delimited extensions, filez with
these extensions is ghon be busted up in ASCII mode even if binary mode is
currently up in effect.  This option allows you ta transfer most filez in
binary, wit tha exception of all dem well-known file types dat should be
sent up in ASCII.  This option is enabled by default, n' set ta a list
of common extensions (e.g., 
.IR "\.txt" " n' " "\.html" ")."
.\"-------
.IP "autosave\-bookmark\-changes"
.\"-------
With tha advent of version 3 of
.IR NcFTP ","
the program treats bookmarks mo' like they would wit your
web browser, which means dat once you bookmark tha crib,
the remote directory is static.
If you set dis variable to
.IR yeaaaa ","
then tha program will automatically update tha bookmark's
startin remote directory wit tha directory you was in
when you closed tha crib.
This behavior would be mo' like dat of
.I "NcFTP"
version 2.
.\"-------
.IP "confirm\-close"
.\"-------
By default tha program will ask you when a joint you haven't
bookmarked be bout ta be closed.
To turn dis prompt off, you can set dis variable to
.IR no "."
.\"-------
.IP "connect\-timeout"
.\"-------
Previous versionz of tha program used a single timeout value fo' every last muthafuckin thang.
Yo ass can now have different joints fo' different operations.
But fuck dat shiznit yo, tha word on tha street is dat you probably do not need ta chizzle these from tha defaults
unless you have special requirements.
.IP
The
.I "connect\-timeout"
variable controls how tha fuck long ta wait, up in seconds, fo' a cold-ass lil connection establishment
to complete before thankin bout it hopeless.
Yo ass can chizzle ta not bust a timeout at all by settin dis ta -1.
.\"-------
.IP "control\-timeout"
.\"-------
This is tha timer used when
.I ncftp
sendz a FTP command over tha control connection ta tha remote server.
If tha server aint replied up in dat nuff seconds, it considaz tha session
lost.
.\"-------
.IP "logsize"
.\"-------
This is controls how tha fuck big-ass tha transfer log
($HOME/.ncftp/log) can grow to, up in kilobytes.
Da default is 200, fo' 200kB;
if you don't want a log, set dis ta 0.
.\"-------
.IP "pager"
.\"-------
This is tha external program ta use ta view a text file, n' is
.I more
by default.
.\"-------
.IP "passive"
.\"-------
This controls
.IR "ncftp" "'s"
behavior fo' data connections, n' can be set ta one of
.IR on ", " off ", or tha default, " optionizzle "."
When passive mode is on,
.I ncftp
uses the
FTP command primitive
.I PASV
to have tha client establish data connections ta tha server.
Da default FTP protocol behavior is ta use tha FTP command primitive
.I PORT
which has tha server establish data connections ta tha client.
Da default settin fo' dis variable,
.IR optionizzle ","
allows
.I ncftp
to chizzle whichever method it deems necessary.
.\"-------
.IP "progress-meter"
.\"-------
Yo ass can chizzle how tha fuck tha program reports file transfer status.
Select from meter
.IR 2 ", " 1 ", or " 0 "."
.\"-------
.IP "redial\-delay"
.\"-------
When a host be jumpin' off tha hook or unavailable, tha program waits
this number of secondz before tryin again.
Da smallest you can set dis is ta 10 secondz --
so if you was plannin on bein inconsiderate,
think again.
.\"-------
.IP "save\-passwords"
.\"-------
If you set dis variable to
.IR yeaaaa ","
the program will save passwordz along wit tha bookmarks you save.
While dis make non-anonymous logins mo' convenient, dis can
be straight-up fucked up since yo' account shiznit is now chillin
in the
$HOME/.ncftp/bookmarks
file.
Da passwordz aren't up in clear text yo, but it is still trivial to
decode dem if one of mah thugs wants ta cook up a modest effort.
.\"-------
.IP "show\-status\-in\-xterm\-titlebar"
.\"-------
If set to
.I yes
and operatin from within a xterm window,
the program will chizzle tha windowz titlebar accordingly.
.\"-------
.IP "so-bufsize"
.\"-------
If yo' operatin system supports TCP Big-Ass Windows,
you can try settin dis variable ta tha number of bytes to
set tha TCP/IP socket buffer to.  This option won't be of
much use unless tha remote server also supports big-ass window
sizes n' is pre-configured wit dem enabled.
.\"-------
.IP "xfer\-timeout"
.\"-------
This timer controls how tha fuck long ta wait fo' data blocks ta complete.
Don't set dis too low or else yo' transfers will timeout without
completing.
.\"-------
.SS "FIREWALL AND PROXY CONFIGURATION"
.\"-------
.PP
Yo ass may find dat yo' network administrator has placed a gangbangin' firewall
between yo' machine n' tha Internet, n' dat you cannot reach
external hosts.
.PP
Da answer may be as simple as setting
.I ncftp
to use
.I passive
mode only, which you can do from a
.I ncftp
command prompt like this:
.Ds
set passive on
.De
.PP
Da reason fo' dis is cuz nuff firewalls do not allow incoming
connections ta tha joint yo, but do allow playas ta establish outgoing
connections.
A passive data connection is established by tha client ta tha server,
whereas tha default is fo' tha server ta establish tha connection ta the
client, which firewalls may object to.
Of course, you now may have problems wit cribs whose
primitizzle FTP servers do not support passive mode.
.PP
Otherwise, if you know you need ta have
.I ncftp
communicate directly wit a gangbangin' firewall or proxy, you can try
editin tha separate
.I $HOME/\.ncftp/firewall
configuration file.
This file is pimped automatically tha last time you run the
program, n' gotz nuff all tha shiznit you need ta get
the program ta work up in dis setup.
.PP
Da basics of dis process is configurin a gangbangin' firewall (proxy)
host ta go through, a user account n' password fo' authentication
on tha firewall, n' which type of firewall method ta use.
Yo ass can also setup a exclusion list, so that
.I ncftp
does not use tha firewall fo' hosts on tha local network.
.\"-------
.SH "FILES"
.\"-------
.IP $HOME/\.ncftp/bookmarks
Saves bookmark n' host shiznit.
.IP $HOME/\.ncftp/firewall
Firewall access configuration file.
.IP $HOME/\.ncftp/prefs
Program preferences.
.IP $HOME/\.ncftp/trace
Debuggin output fo' entire program run.
.IP $HOME/\.ncftp/v3init
Used ta tell if dis version of tha program has run before.
.IP $HOME/\.ncftp/spool/
Directory where background thangs is stored up in tha form of
spool configuration files.
.IP $HOME/\.ncftp/spool/log
Hype fo' background data transfer processes.
.\"-------
.SH "ENVIRONMENT"
.\"-------
.IP PATH
Userz search path, used ta find the
.I ncftpbatch
program, pager, n' some other system utilities.
.IP PAGER
Program ta use ta view text filez one page at a time.
.IP TERM
If tha program was compiled wit support for
.I "GNU Readline"
it will need ta know how tha fuck ta manipulate tha terminal erectly for
line-editing, etc.
Da pager program will also take advantage of dis setting.
.IP HOME
By default, tha program writes its configuration data up in a
.I "\.ncftp"
subdirectory of the
.I HOME
directory.
.IP NCFTPDIR
If set, tha program will use dis directory instead of
.IR "$HOME/.ncftp" "."
This variable is optionizzle except fo' dem playas whose home directory is
the root directory.
.IP COLUMNS
Both tha built-in 
.I ls
command n' tha external
.I ls
command need dis ta determine how tha fuck nuff screen columns tha terminal has.
.\"-------
.SH "BUGS"
.\"-------
.PP
There is no such cribs named
.I bowser\.nintendo\.co\.jp
or
.IR sphygmomanometer\.unl\.edu .
.PP
Auto-resume should check tha file timestamps instead of relyin upon
just tha file sizes yo, but it is hard as fuck ta do dis reliably within
FTP.
.PP
Directory cachin n' recursive downloadz depend on
.IR UNIX "\-like"
behavior of tha remote host.
.\"-------
.SH "AUTHOR"
.\"-------
.PP
Mike Gleason, NcFTP Software (http://www.ncftp.com).
.\"-------
.SH "SEE ALSO"
.\"-------
.PP
.IR ncftpput (1),
.IR ncftpget (1),
.IR ncftpbatch (1),
.IR ftp (1),
.IR rcp (1),
.IR tftp (1).
.PP
.IR "LibNcFTP" " (http://www.ncftp.com/libncftp)."
.PP
.IR "NcFTPd" " (http://www.ncftp.com/ncftpd)."
.\"-------
.SH "THANKS"
.\"-------
.PP
Thanks ta all dem fools dat uses tha program.
Yo crazy-ass support is what tha fuck drives me ta improve tha program!
.PP
I give props ta Dizzy Botkin n' Slim Tim Russell at mah forma ISP,
.IR "Probe Technology" "."
.PP
Ideas n' some code contributed by mah partner, Phil Dietz.
.PP
Thanks ta Brad Mittelstedt n' Chris Tjon, fo' rollin n' refining
the pimpment of tha backbone of dis project,
.IR LibNcFTP "."
.PP
I'd like ta give props ta mah forma system administrators, most notably Charlez Daniel,
for makin testin on a variety of platforms possible, lettin me have
some extra disk space, n' fo' maintainin tha UNL FTP crib.
.PP
For testin versions 1 n' 2 above n' beyond tha call of duty,
I be especially grateful to:
Phil Dietz,
Kok\ Hon\ Yin, and
Andrey\ A\.\ Chernov (ache@astral\.msk\.su).
.PP
Thanks ta Slim Tim MacKenzie (t\.mackenzie@trl\.oz\.au) fo' the
original gangsta filename completion code fo' version 2\.3\.0 n' 2\.4\.2.
.PP
Thanks ta DaviD W. Right back up in yo muthafuckin ass. Sanderson (dws@ora\.com), fo' helpin me up with
the playa page.
.PP
Thanks ta all y'all at UNL whoz ass appreciate mah work.
.PP
Thanks ta Red Hat Software fo' honorin mah licensin agreement yo, but more
importantly, props fo' providin a solid n' affordable pimpment platform.
.\"-------
.SH "APOLOGIES"
.\"-------
.PP
To tha users, fo' not bein able ta respond personally ta most of your
inquiries.
.PP
To Phil, fo' thangs not bein tha way they should be.
