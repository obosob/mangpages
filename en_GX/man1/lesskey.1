.TH LESSKEY 1 "Version 458: 04 Apr 2013"
.SH NAME
lesskey \- specify key bindings fo' less
.SH SYNOPSIS
.B "lesskey [-o output] [--] [input]"
.br
.B "lesskey [--output=output] [--] [input]"
.br
.B "lesskey -V"
.br
.B "lesskey --version"
.SH DESCRIPTION
.I Lesskey
is used ta specify a set of key bindings ta be used by 
.I less.
Da input file be a text file which raps bout tha key bindings.
If tha input file is "-", standard input is read.
If no input file is specified, a standard filename is used
as tha name of tha input file, which dependz on tha system bein used:
On Unix systems, $HOME/.lesskey is used;
on MS-DOS systems, $HOME/_lesskey is used;
and on OS/2 systems $HOME/lesskey.ini is used,
or $INIT/lesskey.ini if $HOME is undefined.
Da output file be a funky-ass binary file which is used by 
.I less.
If no output file is specified, 
and tha environment variable LESSKEY is set,
the value of LESSKEY is used as tha name of tha output file.
Otherwise, a standard filename is used as tha name of tha output file,
which dependz on tha system bein used:
On Unix n' OS-9 systems, $HOME/.less is used;
on MS-DOS systems, $HOME/_less is used;
and on OS/2 systems, $HOME/less.ini is used,
or $INIT/less.ini if $HOME is undefined.
If tha output file already exists,
.I lesskey
will overwrite dat shit.
.PP
Da -V or --version option causes
.I lesskey
to print its version number n' immediately exit.  
If -V or --version is present, other options n' arguments is ignored.
.PP
Da input file consistz of one or more
.I sections.
Each section starts wit a line dat identifies tha type of section.
Possible sections are:
.IP #command
Defines freshly smoked up command keys.
.IP #line-edit
Defines freshly smoked up line-editin keys.
.IP #env
Defines environment variables.
.PP
Blank lines n' lines which start wit a pound sign (#) is ignored,
except fo' tha special section header lines.

.SH "COMMAND SECTION"
Da command section begins wit tha line
.sp
#command
.sp
If tha command section is tha straight-up original gangsta section up in tha file,
this line may be omitted.
Da command section consistz of linez of tha form:
.sp
	\fIstring\fP <whitespace> \fIaction\fP [extra-string] <newline>
.sp
Whitespace be any sequence of one or mo' spaces and/or tabs.
Da \fIstring\fP is tha command key(s) which invoke tha action.
Da \fIstring\fP may be a single command key, or a sequence of up ta 15 keys.
Da \fIaction\fP is tha name of tha less action, from tha list below.
Da charactas up in tha \fIstring\fP may step tha fuck up literally, or be
prefixed by a cold-ass lil caret ta indicate a cold-ass lil control key.
A backslash followed by one ta three octal digits may be used to
specify a cold-ass lil characta by its octal value.
A backslash followed by certain charactas specifies input
charactas as bigs up:
.IP \eb
BACKSPACE
.IP \ee
ESCAPE
.IP \en
NEWLINE
.IP \er
RETURN
.IP \et
TAB
.IP \eku
UP ARROW
.IP \ekd
DOWN ARROW
.IP \ekr
RIGHT ARROW
.IP \ekl
LEFT ARROW
.IP \ekU
PAGE UP
.IP \ekD
PAGE DOWN
.IP \ekh
HOME
.IP \eke
END
.IP \ekx
DELETE
.PP
A backslash followed by any other characta indicates dat characta is
to be taken literally.
Charactas which must be preceded by backslash include
caret, space, tab n' tha backslash itself.
.PP
An action may be followed by a "extra" string.
When such a cold-ass lil command is entered while hustlin
.I less,
the action is performed, n' then tha extra
strin is parsed, just as if it was typed up in to
.I less.
This feature can be used up in certain cases ta extend
the functionalitizzle of a cold-ass lil command.
For example, peep tha "{" n' ":t" commandz up in tha example below.
Da extra strang has a special meanin fo' tha "quit" action:
when
.I less
quits, first characta of tha extra strang is used as its exit status.

.SH EXAMPLE
Da followin input file raps bout tha set of
default command keys used by less:
.sp
.nf
	#command
	\er		forw-line 
	\en		forw-line 
	e		forw-line 
	j		forw-line 
	\ekd	forw-line
	^E		forw-line 
	^N		forw-line 
	k		back-line 
	y		back-line 
	^Y		back-line 
	^K		back-line 
	^P		back-line 
	J		forw-line-force 
	K		back-line-force 
	Y		back-line-force 
	d		forw-scroll 
	^D		forw-scroll 
	u		back-scroll 
	^U		back-scroll 
	\e40	forw-screen 
	f		forw-screen 
	^F		forw-screen 
	^V		forw-screen 
	\ekD	forw-screen
	b		back-screen 
	^B		back-screen 
	\eev		back-screen 
	\ekU	back-screen
	z		forw-window 
	w		back-window 
	\ee\e40		forw-screen-force
	F		forw-forever 
	\eeF		forw-until-hilite
	R		repaint-flush 
	r		repaint 
	^R		repaint 
	^L		repaint 
	\eeu		undo-hilite
	g		goto-line 
	\ekh	goto-line
	<		goto-line 
	\ee<		goto-line 
	p		percent 
	%		percent 
	\ee[		left-scroll
	\ee]		right-scroll
	\ee(		left-scroll
	\ee)		right-scroll
	{		forw-bracket {}
	}		back-bracket {}
	(		forw-bracket ()
	)		back-bracket ()
	[		forw-bracket []
	]		back-bracket []
	\ee^F		forw-bracket 
	\ee^B		back-bracket 
	G		goto-end 
	\ee>		goto-end 
	>		goto-end 
	\eke	goto-end
	=		status 
	^G		status 
	:f		status 
	/		forw-search 
	?		back-search 
	\ee/		forw-search *
	\ee?		back-search *
	n		repeat-search 
	\een		repeat-search-all 
	N		reverse-search 
	\eeN		reverse-search-all 
	&		filter
	m		set-mark 
	'		goto-mark 
	^X^X		goto-mark 
	E		examine 
	:e		examine 
	^X^V		examine 
	:n		next-file 
	:p		prev-file 
	t		next-tag
	T		prev-tag
	:x		index-file 
	:d		remove-file
	-		toggle-option 
	:t		toggle-option t
	s		toggle-option o
	_		display-option 
	|		pipe 
	v		visual 
	!		shell 
	+		firstcmd 
	H		help 
	h		help 
	V		version 
	0		digit
	1		digit
	2		digit
	3		digit
	4		digit
	5		digit
	6		digit
	7		digit
	8		digit
	9		digit
	q		quit 
	Q		quit 
	:q		quit 
	:Q		quit 
	ZZ		quit 
.fi
.sp
.SH PRECEDENCE
Commandz specified by
.I lesskey
take precedence over tha default commands.
A default command key may be disabled by includin it up in the
input file wit tha action "invalid".
Alternatively, a key may be defined 
to do not a god damn thang by rockin tha action "noaction".
"noaction" is similar ta "invalid" yo, but 
.I less
will give a error beep fo' a "invalid" command, 
but not fo' a "noaction" command.
In addition, ALL default commandz may be disabled by 
addin dis control line ta tha input file:
.sp
#stop
.sp
This will cause all default commandz ta be ignored.
Da #stop line should be tha last line up in dat section of tha file.
.PP
Be aware dat #stop can be dangerous.  
Since all default commandz is disabled, 
you must provide sufficient commandz before tha #stop line
to enable all necessary actions.
For example, failure ta provide a "quit" command can lead ta frustration.

.SH "LINE EDITING SECTION"
Da line-editin section begins wit tha line:
.sp
#line-edit
.sp
This section specifies freshly smoked up key bindings fo' tha line editin commands,
in a manner similar ta tha way key bindings fo' 
ordinary commandz is specified up in tha #command section.
Da line-editin section consistz of a list of keys n' actions,
one per line as up in tha example below.

.SH EXAMPLE
Da followin input file raps bout tha set of
default line-editin keys used by less:
.sp
.nf
	#line-edit
	\et	    	forw-complete
	\e17		back-complete
	\ee\et		back-complete
	^L		expand
	^V		literal
	^A		literal
   	\eel		right
	\ekr		right
	\eeh		left
	\ekl		left
	\eeb		word-left
	\ee\ekl	word-left
	\eew		word-right
	\ee\ekr	word-right
	\eei		insert
	\eex		delete
	\ekx		delete
	\eeX		word-delete
	\eekx		word-delete
	\ee\eb		word-backspace
	\ee0		home
	\ekh		home
	\ee$		end
	\eke		end
	\eek		up
	\eku		up
	\eej		down
	^G		abort
.fi
.sp

.SH "LESS ENVIRONMENT VARIABLES"
Da environment variable section begins wit tha line
.sp
#env
.sp
Peepin dis line be a list of environment variable assignments.
Each line consistz of a environment variable name, a equals sign (=)
and tha value ta be assigned ta tha environment variable.
White space before n' afta tha equals sign is ignored.
Variablez assigned up in dis way is visible only to
.I less.
If a variable is specified up in tha system environment n' also up in a
lesskey file, tha value up in tha lesskey file takes precedence.
Although tha lesskey file can be used ta override variablez set up in the
environment, tha main purpose of assignin variablez up in tha lesskey file
is simply ta have all 
.I less
configuration shiznit stored up in one file.

.SH EXAMPLE
Da followin input file sets tha -i option whenever 
.I less
is run, n' specifies tha characta set ta be "latin1":
.sp
.nf
	#env
	LESS = -i
	LESSCHARSET = latin1
.fi
.sp

.SH "SEE ALSO"
less(1)

.SH WARNINGS
On MS-DOS n' OS/2 systems, certain keys bust a sequence of characters
which start wit a NUL characta (0).
This NUL characta should be represented as \e340 up in a lesskey file.

.SH COPYRIGHT
Copyright (C) 2000-2012  Mark Nudelman
.PP
lesskey is part of tha GNU project n' is free software;
you can redistribute it and/or modify it
under tha termz of tha GNU General Public License as published by
the Jacked Software Foundation;
either version 2, or (at yo' option) any lata version.
.PP
lesskey is distributed up in tha hope dat it is ghon be useful yo, but
WITHOUT ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.
See tha GNU General Public License fo' mo' details.
.PP
Yo ass should have received a cold-ass lil copy of tha GNU General Public License 
along wit lesskey; peep tha file COPYING.
If not, write ta tha Jacked Software Foundation, 59 Temple Place,
Suite 330, Boston, MA  02111-1307, USA.

.SH AUTHOR
.PP
Mark Nudelman <bug-less@gnu.org>
.br
Send bug reports or comments ta bug-less@gnu.org.
