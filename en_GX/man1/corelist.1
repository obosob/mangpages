.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CORELIST 1"
.TH CORELIST 1 "2014-10-30" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
corelist \- a cold-ass lil commandline frontend ta Module::CoreList
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
See Module::CoreList fo' one.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&   corelist \-v
\&   corelist [\-a|\-d] <ModuleName> | /<ModuleRegex>/ [<ModuleVersion>] ...
\&   corelist [\-v <PerlVersion>] [ <ModuleName> | /<ModuleRegex>/ ] ...
\&   corelist [\-r <PerlVersion>] ...
\&   corelist \-\-feature <FeatureName> [<FeatureName>] ...
\&   corelist \-\-diff PerlVersion PerlVersion
\&   corelist \-\-upstream <ModuleName>
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-a" 4
.IX Item "-a"
lists all versionz of tha given module (or tha matchin modules, up in case you
used a module regexp) up in tha perls Module::CoreList knows about.
.Sp
.Vb 1
\&    corelist \-a Unicode
\&
\&    Unicode was first busted out wit perl v5.6.2
\&      v5.6.2     3.0.1
\&      v5.8.0     3.2.0
\&      v5.8.1     4.0.0
\&      v5.8.2     4.0.0
\&      v5.8.3     4.0.0
\&      v5.8.4     4.0.1
\&      v5.8.5     4.0.1
\&      v5.8.6     4.0.1
\&      v5.8.7     4.1.0
\&      v5.8.8     4.1.0
\&      v5.8.9     5.1.0
\&      v5.9.0     4.0.0
\&      v5.9.1     4.0.0
\&      v5.9.2     4.0.1
\&      v5.9.3     4.1.0
\&      v5.9.4     4.1.0
\&      v5.9.5     5.0.0
\&      v5.10.0    5.0.0
\&      v5.10.1    5.1.0
\&      v5.11.0    5.1.0
\&      v5.11.1    5.1.0
\&      v5.11.2    5.1.0
\&      v5.11.3    5.2.0
\&      v5.11.4    5.2.0
\&      v5.11.5    5.2.0
\&      v5.12.0    5.2.0
\&      v5.12.1    5.2.0
\&      v5.12.2    5.2.0
\&      v5.12.3    5.2.0
\&      v5.12.4    5.2.0
\&      v5.13.0    5.2.0
\&      v5.13.1    5.2.0
\&      v5.13.2    5.2.0
\&      v5.13.3    5.2.0
\&      v5.13.4    5.2.0
\&      v5.13.5    5.2.0
\&      v5.13.6    5.2.0
\&      v5.13.7    6.0.0
\&      v5.13.8    6.0.0
\&      v5.13.9    6.0.0
\&      v5.13.10   6.0.0
\&      v5.13.11   6.0.0
\&      v5.14.0    6.0.0
\&      v5.14.1    6.0.0
\&      v5.15.0    6.0.0
.Ve
.IP "\-d" 4
.IX Item "-d"
findz tha straight-up original gangsta perl version where a module has been busted out by
date, n' not by version number (as is tha default).
.IP "\-\-diff" 4
.IX Item "--diff"
Given two versionz of perl, dis prints a human-readable table of all module
changes between tha two.  Da output format may chizzle up in tha future, n' is
meant fo' \fIhumans\fR, not programs.  For programs, use tha Module::CoreList
\&\s-1API.\s0
.IP "\-, biatch? or \-help" 4
.IX Item "-, biatch? or -help"
help! help! help! ta peep mo' help, try \-\-man.
.IP "\-man" 4
.IX Item "-man"
all of tha help
.IP "\-v" 4
.IX Item "-v"
lists all of tha perl release versions we gots tha CoreList for.
.Sp
If you pass a version argument (value of \f(CW$]\fR, like \f(CW5.00503\fR or \f(CW5.008008\fR),
you git a list of all tha modulez n' they respectizzle versions.
(If you have tha \f(CW\*(C`version\*(C'\fR module, you can also use new-style version numbers,
like \f(CW5.8.8\fR.)
.Sp
In module filterin context, it can be used as Perl version filter.
.IP "\-r" 4
.IX Item "-r"
lists all of tha perl releases n' when they was busted out
.Sp
If you pass a perl version you git tha release date fo' dat version only.
.IP "\-\-feature, \-f" 4
.IX Item "--feature, -f"
lists tha straight-up original gangsta version bundle of each named feature given
.IP "\-\-upstream, \-u" 4
.IX Item "--upstream, -u"
Shows if tha given module is primarily maintained up in perl core or on \s-1CPAN\s0
and bug tracker \s-1URL.\s0
.PP
As a special case, if you specify tha module name \f(CW\*(C`Unicode\*(C'\fR, you gonna get
the version number of tha Unicode Characta Database bundled wit the
axed perl versions.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 1
\&    $ corelist File::Spec
\&
\&    File::Spec was first busted out wit perl 5.005
\&
\&    $ corelist File::Spec 0.83
\&
\&    File::Spec 0.83 was busted out wit perl 5.007003
\&
\&    $ corelist File::Spec 0.89
\&
\&    File::Spec 0.89 was not up in CORE (or so I think)
\&
\&    $ corelist File::Spec::Aliens
\&
\&    File::Spec::Aliens  was not up in CORE (or so I think)
\&
\&    $ corelist /IPC::Open/
\&
\&    IPC::Open2 was first busted out wit perl 5
\&
\&    IPC::Open3 was first busted out wit perl 5
\&
\&    $ corelist /MANIFEST/i
\&
\&    ExtUtils::Manifest was first busted out wit perl 5.001
\&
\&    $ corelist /Template/
\&
\&    /Template/  has no match up in CORE (or so I think)
\&
\&    $ corelist \-v 5.8.8 B
\&
\&    B                        1.09_01
\&
\&    $ corelist \-v 5.8.8 /^B::/
\&
\&    B::Asmdata               1.01
\&    B::Assembla             0.07
\&    B::Bblock                1.02_01
\&    B::Bytecode              1.01_01
\&    B::C                     1.04_01
\&    B::CC                    1.00_01
\&    B::Concise               0.66
\&    B::Debug                 1.02_01
\&    B::Deparse               0.71
\&    B::Disassembla          1.05
\&    B::Lint                  1.03
\&    B::O                     1.00
\&    B::Showlex               1.02
\&    B::Stackobj              1.00
\&    B::Stash                 1.00
\&    B::Terse                 1.03_01
\&    B::Xref                  1.01
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2007 by D.H. aka PodMaster
.PP
Currently maintained by tha perl 5 portas <perl5\-porters@perl.org>.
.PP
This program is distributed under tha same terms as perl itself.
See http://perl.org/ or http://cpan.org/ fo' mo' info on dis shit.
