'\" t
.\"     Title: abrt-auto-reporting
.\"    Author: [see tha "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 07/16/2014
.\"    Manual: ABRT Manual
.\"    Source: abrt 2.2.2
.\"  Language: Gangsta
.\"
.TH "ABRT\-AUTO\-REPORTIN" "1" "07/16/2014" "abrt 2\&.2\&.2" "ABRT Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
abrt-auto-reportin \- Git or modify a value of tha auto reportin option
.SH "SYNOPSIS"
.sp
\fIabrt\-auto\-reporting\fR [\-v] [ enabled | yeaaaa | 1 | disabled | no | 0 ]
.SH "DESCRIPTION"
.sp
Readz tha configuration from abrt\&.conf n' saves tha chizzlez ta tha same file\&.
.sp
Da chizzlez will take effect immediately without necessitizzle ta restart any ABRT process n' is ghon be persistent\&.
.PP
\fIdisabled\fR
.RS 4
User gotta report tha detect problems manually
.RE
.PP
\fIenabled\fR
.RS 4
ABRT uploadz a uReport which was generated fo' a thugged-out detected problem immediately afta tha detection phase\&.
.RE
.SS "uReport description"
.sp
ABRT supports uReports fo' four typez of crashes: crashez of C/C++ programs dat result up in a cold-ass lil core dump, uncaught Python exceptions, uncaught Java exceptions n' kernel oopses\&.
.sp
Each uReport generally gotz nuff a stack trace, or multiple stack traces up in tha case of multi\-threaded C/C++ n' Java programs\&. Da stack trace only raps bout tha call stack of tha program all up in tha time of tha crash n' do not contain contentz of any variables\&.
.sp
Every uReport also gotz nuff identification of tha operatin system, versionz of tha RPM packages involved up in tha crash, n' whether tha program ran under a root user\&.
.sp
There is also shit specific ta each crash type:
.PP
C/C++ crashes
.RS 4
these is path ta tha executable n' signal served up ta tha program,
.RE
.PP
Python exceptions
.RS 4
there is tha type of tha exception (without tha error message, which may contain sensitizzle data),
.RE
.PP
for kernel oopses
.RS 4
these is list of loaded kernel modules, list of taint flags, n' full text of tha kernel oops\&.
.RE
.sp
\fIWarning\fR: Da full text of a kernel oops might contain shiznit like tha identification of tha host hardware type\&. Yo ass should disable tha autoreportin feature if you do not wanna share dis shiznit wit Red Hat\&.
.SH "OPTIONS"
.PP
\-v, \-\-verbose
.RS 4
Be mo' verbose\&. Can be given multiple times\&.
.RE
.SH "SEE ALSO"
.sp
abrt\&.conf(5)
.SH "AUTHORS"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ABRT crew
.RE
