.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "S_CLIENT 1"
.TH S_CLIENT 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
s_client \- SSL/TLS client program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBs_client\fR
[\fB\-connect host:port\fR]
[\fB\-verify depth\fR]
[\fB\-cert filename\fR]
[\fB\-certform DER|PEM\fR]
[\fB\-key filename\fR]
[\fB\-keyform DER|PEM\fR]
[\fB\-pass arg\fR]
[\fB\-CApath directory\fR]
[\fB\-CAfile filename\fR]
[\fB\-trusted_first\fR]
[\fB\-reconnect\fR]
[\fB\-pause\fR]
[\fB\-showcerts\fR]
[\fB\-debug\fR]
[\fB\-msg\fR]
[\fB\-nbio_test\fR]
[\fB\-state\fR]
[\fB\-nbio\fR]
[\fB\-crlf\fR]
[\fB\-ign_eof\fR]
[\fB\-no_ign_eof\fR]
[\fB\-quiet\fR]
[\fB\-ssl2\fR]
[\fB\-ssl3\fR]
[\fB\-tls1\fR]
[\fB\-tls1_1\fR]
[\fB\-tls1_2\fR]
[\fB\-dtls1\fR]
[\fB\-no_ssl2\fR]
[\fB\-no_ssl3\fR]
[\fB\-no_tls1\fR]
[\fB\-no_tls1_1\fR]
[\fB\-no_tls1_2\fR]
[\fB\-fallback_scsv\fR]
[\fB\-bugs\fR]
[\fB\-cipher cipherlist\fR]
[\fB\-starttls protocol\fR]
[\fB\-engine id\fR]
[\fB\-tlsextdebug\fR]
[\fB\-no_ticket\fR]
[\fB\-sess_out filename\fR]
[\fB\-sess_in filename\fR]
[\fB\-rand file(s)\fR]
[\fB\-nextprotoneg protocols\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBs_client\fR command implements a generic \s-1SSL/TLS\s0 client which connects
to a remote host rockin \s-1SSL/TLS.\s0 It be a \fIvery\fR useful diagnostic tool for
\&\s-1SSL\s0 servers.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-connect host:port\fR" 4
.IX Item "-connect host:port"
This specifies tha host n' optionizzle port ta connect to. If not specified
then a attempt is made ta connect ta tha local host on port 4433.
.IP "\fB\-cert certname\fR" 4
.IX Item "-cert certname"
Da certificate ta use, if one be axed by tha server n' shit. Da default is
not ta bust a cold-ass lil certificate.
.IP "\fB\-certform format\fR" 4
.IX Item "-certform format"
Da certificate format ta use: \s-1DER\s0 or \s-1PEM. PEM\s0 is tha default.
.IP "\fB\-key keyfile\fR" 4
.IX Item "-key keyfile"
Da private key ta use. If not specified then tha certificate file will
be used.
.IP "\fB\-keyform format\fR" 4
.IX Item "-keyform format"
Da private format ta use: \s-1DER\s0 or \s-1PEM. PEM\s0 is tha default.
.IP "\fB\-pass arg\fR" 4
.IX Item "-pass arg"
the private key password source. For mo' shiznit bout tha format of \fBarg\fR
see tha \fB\s-1PASS PHRASE ARGUMENTS\s0\fR section up in \fIopenssl\fR\|(1).
.IP "\fB\-verify depth\fR" 4
.IX Item "-verify depth"
Da verify depth ta use. This specifies tha maximum length of the
server certificate chain n' turns on server certificate verification.
Currently tha verify operation continues afta errors so all tha problems
with a cold-ass lil certificate chain can be seen. I aint talkin' bout chicken n' gravy biatch fo' realz. As a side effect tha connection
will never fail cuz of a server certificate verify failure.
.IP "\fB\-CApath directory\fR" 4
.IX Item "-CApath directory"
Da directory ta use fo' server certificate verification. I aint talkin' bout chicken n' gravy biatch. This directory
must be up in \*(L"hash format\*(R", peep \fBverify\fR fo' mo' shiznit. I aint talkin' bout chicken n' gravy biatch. These are
also used when buildin tha client certificate chain.
.IP "\fB\-CAfile file\fR" 4
.IX Item "-CAfile file"
A file containin trusted certificates ta use durin server authentication
and ta use when attemptin ta build tha client certificate chain.
.IP "\fB\-purpose, \-ignore_critical, \-issuer_checks, \-crl_check, \-crl_check_all, \-policy_check, \-extended_crl, \-x509_strict, \-policy \-check_ss_sig, \-trusted_first\fR" 4
.IX Item "-purpose, -ignore_critical, -issuer_checks, -crl_check, -crl_check_all, -policy_check, -extended_crl, -x509_strict, -policy -check_ss_sig, -trusted_first"
Set various certificate chain valiadizzle option. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See the
\&\fBverify\fR manual page fo' details.
.IP "\fB\-reconnect\fR" 4
.IX Item "-reconnect"
reconnects ta tha same server 5 times rockin tha same session \s-1ID,\s0 dis can
be used as a test dat session cachin is working.
.IP "\fB\-pause\fR" 4
.IX Item "-pause"
pauses 1 second between each read n' write call.
.IP "\fB\-showcerts\fR" 4
.IX Item "-showcerts"
display tha whole server certificate chain: normally only tha server
certificate itself is displayed.
.IP "\fB\-prexit\fR" 4
.IX Item "-prexit"
print session shiznit when tha program exits, n' you can put dat on yo' toast. This will always attempt
to print up shiznit even if tha connection fails. Normally shiznit
will only be printed up once if tha connection succeeds. This option is useful
because tha cipher up in use may be renegotiated or tha connection may fail
because a cold-ass lil client certificate is required or be axed only afta an
attempt is made ta access a cold-ass lil certain \s-1URL.\s0 Note: tha output produced by this
option aint always accurate cuz a cold-ass lil connection might never have been
established.
.IP "\fB\-state\fR" 4
.IX Item "-state"
prints up tha \s-1SSL\s0 session states.
.IP "\fB\-debug\fR" 4
.IX Item "-debug"
print extensive debuggin shiznit includin a hex dump of all traffic.
.IP "\fB\-msg\fR" 4
.IX Item "-msg"
show all protocol lyrics wit hex dump.
.IP "\fB\-nbio_test\fR" 4
.IX Item "-nbio_test"
tests non-blockin I/O
.IP "\fB\-nbio\fR" 4
.IX Item "-nbio"
turns on non-blockin I/O
.IP "\fB\-crlf\fR" 4
.IX Item "-crlf"
this option translated a line feed from tha terminal tha fuck into \s-1CR+LF\s0 as required
by some servers.
.IP "\fB\-ign_eof\fR" 4
.IX Item "-ign_eof"
inhibit shuttin down tha connection when end of file is reached up in the
input.
.IP "\fB\-no_ign_eof\fR" 4
.IX Item "-no_ign_eof"
shut down tha connection when end of file is reached up in the
input. Can be used ta override tha implicit \fB\-ign_eof\fR afta \fB\-quiet\fR.
.IP "\fB\-quiet\fR" 4
.IX Item "-quiet"
inhibit printin of session n' certificate shiznit. I aint talkin' bout chicken n' gravy biatch.  This implicitly
turns on \fB\-ign_eof\fR as well.
.IP "\fB\-psk_identitizzle identity\fR" 4
.IX Item "-psk_identitizzle identity"
Use tha \s-1PSK\s0 identitizzle \fBidentity\fR when rockin a \s-1PSK\s0 cipher suite.
.IP "\fB\-psk key\fR" 4
.IX Item "-psk key"
Use tha \s-1PSK\s0 key \fBkey\fR when rockin a \s-1PSK\s0 cipher suite. Da key is
given as a hexadecimal number without leadin 0x, fo' example \-psk
1a2b3c4d.
.IP "\fB\-ssl2\fR, \fB\-ssl3\fR, \fB\-tls1\fR, \fB\-tls1_1\fR, \fB\-tls1_2\fR, \fB\-dtls1\fR, \fB\-no_ssl2\fR, \fB\-no_ssl3\fR, \fB\-no_tls1\fR, \fB\-no_tls1_1\fR, \fB\-no_tls1_2\fR" 4
.IX Item "-ssl2, -ssl3, -tls1, -tls1_1, -tls1_2, -dtls1, -no_ssl2, -no_ssl3, -no_tls1, -no_tls1_1, -no_tls1_2"
these options disable tha use of certain \s-1SSL\s0 or \s-1TLS\s0 protocols. By default
the initial handshake uses a method which should be compatible wit all
servers n' permit dem ta use \s-1SSL\s0 v3, \s-1SSL\s0 v2 or \s-1TLS\s0 as appropriate.
.Sp
Unfortunately there be a shitload of ancient n' fucked up servers up in use which
cannot handle dis technique n' will fail ta connect. Right back up in yo muthafuckin ass. Some servers only
work if \s-1TLS\s0 is turned off wit tha \fB\-no_tls\fR option others will only
support \s-1SSL\s0 v2 n' may need tha \fB\-ssl2\fR option.
.IP "\fB\-fallback_scsv\fR" 4
.IX Item "-fallback_scsv"
Send \s-1TLS_FALLBACK_SCSV\s0 up in tha ClientHello.
.IP "\fB\-bugs\fR" 4
.IX Item "-bugs"
there is nuff muthafuckin known bug up in \s-1SSL\s0 n' \s-1TLS\s0 implementations fo' realz. Addin this
option enablez various workarounds.
.IP "\fB\-cipher cipherlist\fR" 4
.IX Item "-cipher cipherlist"
this allows tha cipher list busted by tha client ta be modified. Y'all KNOW dat shit, muthafucka! Although
the server determines which cipher suite is used it should take tha first
supported cipher up in tha list busted by tha client. Right back up in yo muthafuckin ass. See tha \fBciphers\fR
command fo' mo' shiznit.
.IP "\fB\-starttls protocol\fR" 4
.IX Item "-starttls protocol"
send tha protocol-specific message(s) ta switch ta \s-1TLS\s0 fo' communication.
\&\fBprotocol\fR be a keyword fo' tha intended protocol.  Currently, tha only
supported keywordz is \*(L"smtp\*(R", \*(L"pop3\*(R", \*(L"imap\*(R", n' \*(L"ftp\*(R".
.IP "\fB\-tlsextdebug\fR" 4
.IX Item "-tlsextdebug"
print up a hex dump of any \s-1TLS\s0 extensions received from tha server.
.IP "\fB\-no_ticket\fR" 4
.IX Item "-no_ticket"
disable RFC4507bis session ticket support.
.IP "\fB\-sess_out filename\fR" 4
.IX Item "-sess_out filename"
output \s-1SSL\s0 session ta \fBfilename\fR
.IP "\fB\-sess_in sess.pem\fR" 4
.IX Item "-sess_in sess.pem"
load \s-1SSL\s0 session from \fBfilename\fR. Da client will attempt ta resume a
connection from dis session.
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBs_client\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms.
.IP "\fB\-rand file(s)\fR" 4
.IX Item "-rand file(s)"
a file or filez containin random data used ta seed tha random number
generator, or a \s-1EGD\s0 socket (see \fIRAND_egd\fR\|(3)).
Multiple filez can be specified separated by a OS-dependent character.
Da separator is \fB;\fR fo' MS-Windows, \fB,\fR fo' OpenVMS, n' \fB:\fR for
all others.
.IP "\fB\-nextprotoneg protocols\fR" 4
.IX Item "-nextprotoneg protocols"
enable Next Protocol Negotiation \s-1TLS\s0 extension n' provide a list of
comma-separated protocol names dat tha client should advertise
support for. Shiiit, dis aint no joke. Da list should contain most wanted protocols first.
Protocol names is printable \s-1ASCII\s0 strings, fo' example \*(L"http/1.1\*(R" or
\&\*(L"spdy/3\*(R".
Empty list of protocols is treated specially n' will cause tha client to
advertise support fo' tha \s-1TLS\s0 extension but disconnect just after
recivin ServerWuz crackalackin' wit a list of server supported protocols.
.SH "CONNECTED COMMANDS"
.IX Header "CONNECTED COMMANDS"
If a cold-ass lil connection is established wit a \s-1SSL\s0 server then any data received
from tha server is displayed n' any key presses is ghon be busted ta the
server n' shit. When used interactively (which means neither \fB\-quiet\fR nor \fB\-ign_eof\fR
have been given), tha session is ghon be renegotiated if tha line begins wit an
\&\fBR\fR, n' if tha line begins wit a \fBQ\fR or if end of file is reached, the
connection is ghon be closed down.
.SH "NOTES"
.IX Header "NOTES"
\&\fBs_client\fR can be used ta debug \s-1SSL\s0 servers. To connect ta a \s-1SSL HTTP\s0
server tha command:
.PP
.Vb 1
\& openssl s_client \-connect servername:443
.Ve
.PP
would typically be used (https uses port 443). If tha connection succeeds
then a \s-1HTTP\s0 command can be given like fuckin \*(L"\s-1GET /\*(R"\s0 ta retrieve a wizzy page.
.PP
If tha handshake fails then there be nuff muthafuckin possible causes, if it is
nothang obvious like no client certificate then tha \fB\-bugs\fR, \fB\-ssl2\fR,
\&\fB\-ssl3\fR, \fB\-tls1\fR, \fB\-no_ssl2\fR, \fB\-no_ssl3\fR, \fB\-no_tls1\fR options can be tried
in case it aint nuthin but a funky-ass buggy server n' shit. In particular you should fuck wit these
options \fBbefore\fR submittin a funky-ass bug report ta a OpenSSL mailin list.
.PP
A frequent problem when attemptin ta git client certificates working
is dat a wizzy client bitches it has no certificates or gives a empty
list ta chizzle from. This is normally cuz tha server aint sending
the clients certificate authoritizzle up in its \*(L"acceptable \s-1CA\s0 list\*(R" when it
requests a cold-ass lil certificate. By rockin \fBs_client\fR tha \s-1CA\s0 list can be viewed
and checked. Y'all KNOW dat shit, muthafucka! However some servers only request client authentication
afta a specific \s-1URL\s0 is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. To obtain tha list up in dis case it
is necessary ta use tha \fB\-prexit\fR option n' bust a \s-1HTTP\s0 request
for a appropriate page.
.PP
If a cold-ass lil certificate is specified on tha command line rockin tha \fB\-cert\fR
option it aint gonna be used unless tha server specifically requests
a client certificate. Therefor merely includin a cold-ass lil client certificate
on tha command line is no guarantee dat tha certificate works.
.PP
If there be problems verifyin a server certificate then the
\&\fB\-showcerts\fR option can be used ta show tha whole chain.
.PP
Since tha SSLv23 client wassup cannot include compression methodz or extensions
these will only be supported if its use is disabled, fo' example by rockin the
\&\fB\-no_sslv2\fR option.
.SH "BUGS"
.IX Header "BUGS"
Because dis program has a shitload of options n' also cuz some of
the steez used is rather old, tha C source of s_client is rather
hard ta read n' not a model of how tha fuck thangs should be done fo' realz. A typical
\&\s-1SSL\s0 client program would be much simpler.
.PP
Da \fB\-verify\fR option should straight-up exit if tha server verification
fails.
.PP
Da \fB\-prexit\fR option be a lil' bit of a hack. We should straight-up report
information whenever a session is renegotiated.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIsess_id\fR\|(1), \fIs_server\fR\|(1), \fIciphers\fR\|(1)
