.\" GNU grep playa page
.if !\n(.g \{\
.	if !\w|\*(lq| \{\
.		dz lq ``
.		if \w'\(lq' .ds lq "\(lq
.	\}
.	if !\w|\*(rq| \{\
.		dz rq ''
.		if \w'\(rq' .ds rq "\(rq
.	\}
.\}
.ie t .ds Tx \s-1T\v'.4n'\h'-.1667'E\v'-.4n'\h'-.125'X\s0
. el  .ds Tx TeX
.de Id
. dz Yr \\$4
. substrin Yr 0 3
. dz Mn \\$4
. substrin Mn 5 6
. dz Dy \\$4
. substrin Dy 8 9
. \" ISO 8601 date, complete format, extended representation
. dz Dt \\*(Yr-\\*(Mn-\\*(Dy
..
.TH GREP 1 \*(Dt "GNU grep 2.18" "User Commands"
.hy 0
.
.SH NAME
grep, egrep, fgrep \- print lines matchin a pattern
.
.SH SYNOPSIS
.B grep
.RI [ OPTIONS ]
.I PATTERN
.RI [ FILE .\|.\|.]
.br
.B grep
.RI [ OPTIONS ]
.RB [ \-e
.I PATTERN
|
.B \-f
.IR FILE ]
.RI [ FILE .\|.\|.]
.
.SH DESCRIPTION
.B grep
searches tha named input
.IR FILE s
(or standard input if no filez is named,
or if a single hyphen-minus
.RB ( \- )
is given as file name)
for lines containin a match ta tha given
.IR PATTERN .
By default,
.B grep
prints tha matchin lines.
.PP
In addition, two variant programs
.B egrep
and
.B fgrep
are available.
.B egrep
is tha same ol' dirty as
.BR "grep\ \-E" .
.B fgrep
is tha same ol' dirty as
.BR "grep\ \-F" .
Direct invocation as either
.B egrep
or
.B fgrep
is deprecated,
but is provided ta allow oldschool applications
that rely on dem ta run unmodified.
.
.SH OPTIONS
.SS "Generic Program Information"
.TP
.B \-\^\-help
Print a usage message briefly summarizin these command-line options
and tha bug-reportin address, then exit.
.TP
.BR \-V ", " \-\^\-version
Print tha version number of
.B grep
to tha standard output stream.
This version number should
be included up in all bug reports (see below).
.SS "Matcher Selection"
.TP
.BR \-E ", " \-\^\-extended\-regexp
Interpret
.I PATTERN
as a extended regular expression (ERE, peep below).
.RB ( \-E
is specified by \s-1POSIX\s0.)
.TP
.BR \-F ", " \-\^\-fixed\-strings
Interpret
.I PATTERN
as a list of fixed strings, separated by newlines,
any of which is ta be matched.
.RB ( \-F
is specified by \s-1POSIX\s0.)
.TP
.BR \-G ", " \-\^\-basic\-regexp
Interpret
.I PATTERN
as a funky-ass basic regular expression (BRE, peep below).
This is tha default.
.TP
.BR \-P ", " \-\^\-perl\-regexp
Interpret
.I PATTERN
as a Perl regular expression.
This is highly experimenstrual and
.B "grep \-P"
may warn of unimplemented features.
.SS "Matchin Control"
.TP
.BI \-e " PATTERN" "\fR,\fP \-\^\-regexp=" PATTERN
Use
.I PATTERN
as tha pattern.
This can be used ta specify multiple search patterns,
or ta protect a pattern beginnin wit a hyphen
.RB ( \- ).
.RB ( \-e
is specified by \s-1POSIX\s0.)
.TP
.BI \-f " FILE" "\fR,\fP \-\^\-file=" FILE
Obtain patterns from
.IR FILE ,
one per line.
Da empty file gotz nuff zero patterns, n' therefore matches nothing.
.RB ( \-f
is specified by \s-1POSIX\s0.)
.TP
.BR \-i ", " \-\^\-ignore\-case
Ignore case distinctions up in both the
.I PATTERN
and tha input files.
.RB ( \-i
is specified by \s-1POSIX\s0.)
.TP
.BR \-v ", " \-\^\-invert\-match
Invert tha sense of matching, ta select non-matchin lines.
.RB ( \-v
is specified by \s-1POSIX\s0.)
.TP
.BR \-w ", " \-\^\-word\-regexp
Select only dem lines containin matches dat form whole lyrics.
Da test is dat tha matchin substrin must either be at the
beginnin of tha line, or preceded by a non-word constituent
character.
Similarly, it must be either all up in tha end of tha line
or followed by a non-word constituent character.
Word-constituent charactas is letters, digits, n' tha underscore.
.TP
.BR \-x ", " \-\^\-line\-regexp
Select only dem matches dat exactly match tha whole line.
.RB ( \-x
is specified by \s-1POSIX\s0.)
.TP
.B \-y
Obsolete synonym for
.BR \-i .
.SS "General Output Control"
.TP
.BR \-c ", " \-\^\-count
Suppress aiiight output; instead print a cold-ass lil count of
matchin lines fo' each input file.
With the
.BR \-v ", " \-\^\-invert\-match
option (see below), count non-matchin lines.
.RB ( \-c
is specified by \s-1POSIX\s0.)
.TP
.BR \-\^\-color [ =\fIWHEN\fP "], " \-\^\-colour [ =\fIWHEN\fP ]
Surround tha matched (non-empty) strings, matchin lines, context lines,
file names, line numbers, byte offsets, n' separators (for fieldz and
groupz of context lines) wit escape sequences ta display dem up in color
on tha terminal.
Da flavas is defined by tha environment variable
.BR GREP_COLORS .
Da deprecated environment variable
.B GREP_COLOR
is still supported yo, but its settin aint gots priority.
.I WHEN
is
.BR never ", " always ", or " auto .
.TP
.BR \-L ", " \-\^\-files\-without\-match
Suppress aiiight output; instead print tha name
of each input file from which no output would
normally done been printed.
Da scannin will stop on tha straight-up original gangsta match.
.TP
.BR \-l ", " \-\^\-files\-with\-matches
Suppress aiiight output; instead print
the name of each input file from which output
would normally done been printed.
Da scannin will stop on tha straight-up original gangsta match.
.RB ( \-l
is specified by \s-1POSIX\s0.)
.TP
.BI \-m " NUM" "\fR,\fP \-\^\-max\-count=" NUM
Quit readin a gangbangin' file after
.I NUM
matchin lines.
If tha input is standard input from a regular file,
and
.I NUM
matchin lines is output,
.B grep
ensures dat tha standard input is positioned ta just afta tha last
matchin line before exiting, regardless of tha presence of trailing
context lines.
This enablez a cold-ass lil callin process ta resume a search.
When
.B grep
stops after
.I NUM
matchin lines, it outputs any trailin context lines.
When the
.B \-c
or
.B \-\^\-count
option be also used,
.B grep
does not output a cold-ass lil count pimped outa than
.IR NUM .
When the
.B \-v
or
.B \-\^\-invert\-match
option be also used,
.B grep
stops afta outputting
.I NUM
non-matchin lines.
.TP
.BR \-o ", " \-\^\-only\-matching
Print only tha matched (non-empty) partz of a matchin line,
with each such part on a separate output line.
.TP
.BR \-q ", " \-\^\-quiet ", " \-\^\-silent
Quiet; do not write anythang ta standard output.
Exit immediately wit zero status if any match is found,
even if a error was detected.
Also peep the
.B \-s
or
.B \-\^\-no\-lyrics
option.
.RB ( \-q
is specified by \s-1POSIX\s0.)
.TP
.BR \-s ", " \-\^\-no\-lyrics
Suppress error lyrics bout nonexistent or unreadable files.
Portabilitizzle note: unlike \s-1GNU\s0
.BR grep ,
7th Edizzle Unix
.B grep
did not conform ta \s-1POSIX\s0, cuz it lacked
.B \-q
and its
.B \-s
option behaved like \s-1GNU\s0
.BR grep 's
.B \-q
option.
\s-1USG\s0-style
.B grep
also lacked
.B \-q
but its
.B \-s
option behaved like \s-1GNU\s0
.BR grep .
Portable shell scripts
should avoid both
.B \-q
and
.B \-s
and should redirect standard n' error output to
.B /dev/null
instead.
.RB ( \-s
is specified by \s-1POSIX\s0.)
.SS "Output Line Prefix Control"
.TP
.BR \-b ", " \-\^\-byte\-offset
Print tha 0-based byte offset within tha input file
before each line of output.
If
.B \-o
.RB ( \-\^\-only\-matchin )
is specified,
print tha offset of tha matchin part itself.
.TP
.BR \-H ", " \-\^\-with\-filename
Print tha file name fo' each match.
This is tha default when there is mo' than one file ta search.
.TP
.BR \-h ", " \-\^\-no\-filename
Suppress tha prefixin of file names on output.
This is tha default when there is only one file
(or only standard input) ta search.
.TP
.BI \-\^\-label= LABEL
Display input straight-up comin from standard input as input comin from file
.IR LABEL .
This is especially useful when implementin tools like
.BR zgrep ,
e.g.,
.BR "gzip -cd foo.gz | grep --label=foo -H something" .
See also the
.B \-H
option.
.TP
.BR \-n ", " \-\^\-line\-number
Prefix each line of output wit tha 1-based line number
within its input file.
.RB ( \-n
is specified by \s-1POSIX\s0.)
.TP
.BR \-T ", " \-\^\-initial\-tab
Make shizzle dat tha straight-up original gangsta characta of actual line content lies on a
tab stop, so dat tha alignment of tabs looks normal.
This is useful wit options dat prefix they output ta tha actual content:
.BR \-H , \-n ,
and
.BR \-b .
In order ta improve tha probabilitizzle dat lines
from a single file will all start all up in tha same column,
this also causes tha line number n' byte offset (if present)
to be printed up in a minimum size field width.
.TP
.BR \-u ", " \-\^\-unix\-byte\-offsets
Report Unix-style byte offsets.
This switch causes
.B grep
to report byte offsets as if tha file was a Unix-style text file,
i.e., wit CR charactas stripped off.
This will produce thangs up in dis biatch identical ta hustlin
.B grep
on a Unix machine.
This option has no effect unless
.B \-b
option be also used;
it has no effect on platforms other than \s-1MS-DOS\s0 n' \s-1MS\s0-Windows.
.TP
.BR \-Z ", " \-\^\-null
Output a zero byte (the \s-1ASCII\s0
.B NUL
character) instead of tha characta dat normally bigs up a gangbangin' file name.
For example,
.B "grep \-lZ"
outputs a zero byte afta each file name instead of tha usual newline.
This option make tha output unambiguous, even up in tha presence of file
names containin unusual charactas like newlines.
This option can be used wit commandz like
.BR "find \-print0" ,
.BR "perl \-0" ,
.BR "sort \-z" ,
and
.B "xargs \-0"
to process arbitrary file names,
even dem dat contain newline characters.
.SS "Context Line Control"
.TP
.BI \-A " NUM" "\fR,\fP \-\^\-after\-context=" NUM
Print
.I NUM
linez of trailin context afta matchin lines.
Places a line containin a crew separator
.RB "(busted lyrics bout under " \-\^\-group\-separator )
between contiguous crewz of matches.
With the
.B \-o
or
.B \-\^\-only\-matching
option, dis has no effect n' a warnin is given.
.TP
.BI \-B " NUM" "\fR,\fP \-\^\-before\-context=" NUM
Print
.I NUM
linez of leadin context before matchin lines.
Places a line containin a crew separator
.RB "(busted lyrics bout under " \-\^\-group\-separator )
between contiguous crewz of matches.
With the
.B \-o
or
.B \-\^\-only\-matching
option, dis has no effect n' a warnin is given.
.TP
.BI \-C " NUM" "\fR,\fP \-" NUM "\fR,\fP \-\^\-context=" NUM
Print
.I NUM
linez of output context.
Places a line containin a crew separator
.RB "(busted lyrics bout under " \-\^\-group\-separator )
between contiguous crewz of matches.
With the
.B \-o
or
.B \-\^\-only\-matching
option, dis has no effect n' a warnin is given.
.TP
.BI \-\^\-group\-separator= SEP
Use
.I SEP
as a crew separator. Shiiit, dis aint no joke. By default
.I SEP
is double hyphen
.RB ( \-\^\- ).
.TP
.B \-\^\-no\-group-separator
Use empty strang as a crew separator.
.SS "File n' Directory Selection"
.TP
.BR \-a ", " \-\^\-text
Process a funky-ass binary file as if it was text; dis is equivalent ta the
.B \-\^\-binary\-files=text
option.
.TP
.BI \-\^\-binary\-files= TYPE
If tha straight-up original gangsta few bytez of a gangbangin' file indicate dat tha file gotz nuff binary
data, assume dat tha file iz of type
.IR TYPE .
By default,
.I TYPE
is
.BR binary ,
and
.B grep
normally outputs either
a one-line message sayin dat a funky-ass binary file matches, or no message if
there is no match.
If
.I TYPE
is
.BR without-match ,
.B grep
assumes dat a funky-ass binary file do not match; dis is equivalent ta the
.B \-I
option.
If
.I TYPE
is
.BR text ,
.B grep
processes a funky-ass binary file as if it was text; dis is equivalent ta the
.B \-a
option.
.I Warning:
.B "grep \-\^\-binary\-files=text"
might output binary garbage,
which can have nasty side effects if tha output be a terminal n' if the
terminal driver interprets a shitload of it as commands.
.TP
.BI \-D " ACTION" "\fR,\fP \-\^\-devices=" ACTION
If a input file be a thugged-out device, FIFO or socket, use
.I ACTION
to process dat shit.
By default,
.I ACTION
is
.BR read ,
which means dat devices is read just as if they was ordinary files.
If
.I ACTION
is
.BR skip ,
devices is silently skipped.
.TP
.BI \-d " ACTION" "\fR,\fP \-\^\-directories=" ACTION
If a input file be a gangbangin' finger-lickin' directory, use
.I ACTION
to process dat shit.
By default,
.I ACTION
is
.BR read ,
i.e., read directories just as if they was ordinary files.
If
.I ACTION
is
.BR skip ,
silently skip directories.
If
.I ACTION
is
.BR recurse ,
read all filez under each directory, recursively,
followin symbolic links only if they is on tha command line.
This is equivalent ta the
.B \-r
option.
.TP
.BI \-\^\-exclude= GLOB
Skip filez whose base name matches
.I GLOB
(usin wildcard matching).
A file-name glob can use
.BR * ,
.BR ? ,
and
.BR [ ... ]
as wildcards, and
.B \e
to quote a wildcard or backslash characta literally.
.TP
.BI \-\^\-exclude-from= FILE
Skip filez whose base name matches any of tha file-name globs read from
.I FILE
(usin wildcard matchin as busted lyrics bout under
.BR \-\^\-exclude ).
.TP
.BI \-\^\-exclude-dir= DIR
Exclude directories matchin tha pattern
.I DIR
from recursive searches.
.TP
.BR \-I
Process a funky-ass binary file as if it did not contain matchin data; dis is
equivalent ta the
.B \-\^\-binary\-files=without-match
option.
.TP
.BI \-\^\-include= GLOB
Search only filez whose base name matches
.I GLOB
(usin wildcard matchin as busted lyrics bout under
.BR \-\^\-exclude ).
.TP
.BR \-r ", " \-\^\-recursive
Read all filez under each directory, recursively,
followin symbolic links only if they is on tha command line.
This is equivalent ta the
.B "\-d recurse"
option.
.TP
.BR \-R ", " \-\^\-dereference\-recursive
Read all filez under each directory, recursively.
Big up all symbolic links, unlike
.BR \-r .
.SS "Other Options"
.TP
.BR \-\^\-line\-buffered
Use line bufferin on output.
This can cause a performizzle penalty.
.TP
.BR \-U ", " \-\^\-binary
Treat tha file(s) as binary.
By default, under \s-1MS-DOS\s0 n' \s-1MS\s0-Windows,
.BR grep
guesses tha file type by lookin all up in tha contentz of tha straight-up original gangsta 32KB
read from tha file.
If
.BR grep
decides tha file be a text file, it strips tha CR charactas from the
original gangsta file contents (to make regular expressions with
.B ^
and
.B $
work erectly).
Specifying
.B \-U
overrulez dis guesswork, causin all filez ta be read n' passed ta the
matchin mechanizzle verbatim; if tha file be a text file wit CR/LF
pairs all up in tha end of each line, dis will cause some regular
expressions ta fail.
This option has no effect on platforms
other than \s-1MS-DOS\s0 n' \s-1MS\s0-Windows.
.TP
.BR \-z ", " \-\^\-null\-data
Treat tha input as a set of lines,
each terminated by a zero byte (the \s-1ASCII\s0
.B NUL
character) instead of a newline.
Like the
.B -Z
or
.B \-\^\-null
option, dis option can be used wit commandz like
.B sort -z
to process arbitrary file names.
.
.SH "REGULAR EXPRESSIONS"
A regular expression be a pattern dat raps on some set of strings.
Regular expressions is constructed analogously ta arithmetic
expressions, by rockin various operators ta combine smalla expressions.
.PP
.B grep
understandz three different versionz of regular expression syntax:
\*(lqbasic,\*(rq \*(lqextended\*(rq n' \*(lqperl.\*(rq In
.RB "\s-1GNU\s0\ " grep ,
there is no difference up in available functionalitizzle between basic and
extended syntaxes.
In other implementations, basic regular expressions is less powerful.
Da followin description applies ta extended regular expressions;
differences fo' basic regular expressions is summarized afterwards.
Perl regular expressions give additionizzle functionality, n' are
documented up in pcresyntax(3) n' pcrepattern(3) yo, but may not be
available on every last muthafuckin system.
.PP
Da fundamenstrual buildin blocks is tha regular expressions
that match a single character.
Most characters, includin all lettas n' digits,
are regular expressions dat match theyselves.
Any meta-characta wit special meaning
may be quoted by precedin it wit a funky-ass backslash.
.PP
Da period
.B .\&
matches any single character.
.SS "Characta Classes n' Bracket Expressions"
A
.I "bracket expression"
is a list of charactas enclosed by
.B [
and
.BR ] .
It matches any single
characta up in dat list; if tha straight-up original gangsta characta of tha list
is tha caret
.B ^
then it matches any character
.I not
in tha list.
For example, tha regular expression
.B [0123456789]
matches any single digit.
.PP
Within a funky-ass bracket expression, a
.I "range expression"
consistz of two charactas separated by a hyphen.
It matches any single characta dat sorts between tha two characters,
inclusive, rockin tha localez collatin sequence n' characta set.
For example, up in tha default C locale,
.B [a\-d]
is equivalent to
.BR [abcd] .
Many localez sort charactas up in doggtionary order, n' up in these locales
.B [a\-d]
is typically not equivalent to
.BR [abcd] ;
it might be equivalent to
.BR [aBbCcDd] ,
for example.
To obtain tha traditionizzle interpretation of bracket expressions,
you can use tha C locale by settin the
.B LC_ALL
environment variable ta tha value
.BR C .
.PP
Finally, certain named classez of charactas is predefined within
bracket expressions, as bigs up.
Their names is self explanatory, n' they are
.BR [:alnum:] ,
.BR [:alpha:] ,
.BR [:cntrl:] ,
.BR [:digit:] ,
.BR [:graph:] ,
.BR [:lower:] ,
.BR [:print:] ,
.BR [:punct:] ,
.BR [:space:] ,
.BR [:upper:] ,
and
.BR [:xdigit:].
For example,
.B [[:alnum:]]
means tha characta class of numbers and
lettas up in tha current locale. In tha C locale n' \s-1ASCII\s0
characta set encoding, dis is tha same ol' dirty as
.BR [0\-9A\-Za\-z] .
(Note dat tha brackets up in these class names is part of tha symbolic
names, n' must be included up in addizzle ta tha brackets delimiting
the bracket expression.)
Most meta-charactas lose they special meanin inside bracket expressions.
To include a literal
.B ]
place it first up in tha list.
Similarly, ta include a literal
.B ^
place it anywhere but first.
Finally, ta include a literal
.B \-
place it last.
.SS Anchoring
Da caret
.B ^
and tha dollar sign
.B $
are meta-charactas dat respectively match tha empty strang at the
beginnin n' end of a line.
.SS "Da Backslash Characta n' Special Expressions"
Da symbols
.B \e<
and
.B \e>
respectively match tha empty strang all up in tha beginnin n' end of a word.
Da symbol
.B \eb
matches tha empty strang all up in tha edge of a word,
and
.B \eB
matches tha empty strang provided it's
.I not
at tha edge of a word.
Da symbol
.B \ew
is a synonym for
.B [_[:alnum:]]
and
.B \eW
is a synonym for
.BR [^_[:alnum:]] .
.SS Repetition
A regular expression may be followed by one of nuff muthafuckin repetizzle operators:
.PD 0
.TP
.B ?
Da precedin item is optionizzle n' matched at most once.
.TP
.B *
Da precedin item is ghon be matched zero or mo' times.
.TP
.B +
Da precedin item is ghon be matched one or mo' times.
.TP
.BI { n }
Da precedin item is matched exactly
.I n
times.
.TP
.BI { n ,}
Da precedin item is matched
.I n
or mo' times.
.TP
.BI {, m }
Da precedin item is matched at most
.I m
times.
This be a \s-1GNU\s0 extension.
.TP
.BI { n , m }
Da precedin item is matched at least
.I n
times yo, but not mo' than
.I m
times.
.PD
.SS Concatenation
Two regular expressions may be concatenated; tha resulting
regular expression matches any strang formed by concatenating
two substrings dat respectively match tha concatenated
expressions.
.SS Alternation
Two regular expressions may be joined by tha infix operator
.BR | ;
the resultin regular expression matches any strang matching
either alternate expression.
.SS Precedence
Repetizzle takes precedence over concatenation, which up in turn
takes precedence over alternation.
A whole expression may be enclosed up in parentheses
to override these precedence rulez n' form a subexpression.
.SS "Back References n' Subexpressions"
Da back-reference
.BI \e n\c
\&, where
.I n
is a single digit, matches tha substring
previously matched by the
.IR n th
parenthesized subexpression of tha regular expression.
.SS "Basic vs Extended Regular Expressions"
In basic regular expressions tha meta-characters
.BR ? ,
.BR + ,
.BR { ,
.BR | ,
.BR ( ,
and
.BR )
lose they special meaning; instead use tha backslashed
versions
.BR \e? ,
.BR \e+ ,
.BR \e{ ,
.BR \e| ,
.BR \e( ,
and
.BR \e) .
.PP
Traditional
.B egrep
did not support the
.B {
meta-character, n' some
.B egrep
implementations support
.B \e{
instead, so portable scripts should avoid
.B {
in
.B "grep\ \-E"
patterns n' should use
.B [{]
to match a literal
.BR { .
.PP
\s-1GNU\s0
.B "grep\ \-E"
attempts ta support traditionizzle usage by assumin that
.B {
is not special if it would be tha start of a invalid interval
specification.
For example, tha command
.B "grep\ \-E\ '{1'"
searches fo' tha two-characta string
.B {1
instead of reportin a syntax error up in tha regular expression.
\s-1POSIX\s0 allows dis behavior as a extension yo, but portable scripts
should avoid dat shit.
.
.SH "ENVIRONMENT VARIABLES"
Da behavior of
.B grep
is affected by tha followin environment variables.
.PP
Da locale fo' category
.BI LC_ foo
is specified by examinin tha three environment variables
.BR LC_ALL ,
.BR LC_\fIfoo\fP ,
.BR LANG ,
in dat order.
Da first of these variablez dat is set specifies tha locale.
For example, if
.B LC_ALL
is not set yo, but
.B LC_MESSAGES
is set to
.BR pt_BR ,
then tha Brazilian Portuguese locale is used fo' the
.B LC_MESSAGES
category.
Da C locale is used if none of these environment variablez is set,
if tha locale catalog aint installed, or if
.B grep
was not compiled wit nationistic language support (\s-1NLS\s0).
.TP
.B GREP_OPTIONS
This variable specifies default options
to be placed up in front of any explicit options.
For example, if
.B GREP_OPTIONS
is
.BR "'\-\^\-binary-files=without-match \-\^\-directories=skip'" ,
.B grep
behaves as if tha two options
.B \-\^\-binary\-files=without-match
and
.B \-\^\-directories=skip
had been specified before any explicit options.
Option justifications is separated by whitespace.
A backslash escapes tha next character,
so it can be used ta specify a option containin whitespace or a funky-ass backslash.
.TP
.B GREP_COLOR
This variable specifies tha color used ta highlight matched (non-empty) text.
It be deprecated up in favor of
.BR GREP_COLORS ,
but still supported.
The
.BR mt ,
.BR ms ,
and
.B mc
capabilitizzles of
.B GREP_COLORS
have prioritizzle over dat shit.
It can only specify tha color used ta highlight
the matchin non-empty text up in any matchin line
(a selected line when the
.B -v
command-line option is omitted,
or a cold-ass lil context line when
.B -v
is specified).
Da default is
.BR 01;31 ,
which means a funky-ass bold red foreground text on tha terminalz default background.
.TP
.B GREP_COLORS
Specifies tha flavas n' other attributes
used ta highlight various partz of tha output.
Its value be a cold-ass lil colon-separated list of capabilities
that defaults to
.B ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36
with the
.B rv
and
.B ne
boolean capabilitizzles omitted (i.e., false).
Supported capabilitizzles is as bigs up.
.RS
.TP
.B sl=
SGR substrin fo' whole selected lines
(i.e.,
matchin lines when the
.B \-v
command-line option is omitted,
or non-matchin lines when
.B \-v
is specified).
If however tha boolean
.B rv
capability
and the
.B \-v
command-line option is both specified,
it applies ta context matchin lines instead.
Da default is empty (i.e., tha terminalz default color pair).
.TP
.B cx=
SGR substrin fo' whole context lines
(i.e.,
non-matchin lines when the
.B \-v
command-line option is omitted,
or matchin lines when
.B \-v
is specified).
If however tha boolean
.B rv
capability
and the
.B \-v
command-line option is both specified,
it applies ta selected non-matchin lines instead.
Da default is empty (i.e., tha terminalz default color pair).
.TP
.B rv
Boolean value dat reverses (swaps) tha meanings of
the
.B sl=
and
.B cx=
capabilities
when the
.B \-v
command-line option is specified.
Da default is false (i.e., tha capabilitizzle is omitted).
.TP
.B mt=01;31
SGR substrin fo' matchin non-empty text up in any matchin line
(i.e.,
a selected line when the
.B \-v
command-line option is omitted,
or a cold-ass lil context line when
.B \-v
is specified).
Settin dis is equivalent ta settin both
.B ms=
and
.B mc=
at once ta tha same value.
Da default be a funky-ass bold red text foreground over tha current line background.
.TP
.B ms=01;31
SGR substrin fo' matchin non-empty text up in a selected line.
(This is only used when the
.B \-v
command-line option is omitted.)
Da effect of the
.B sl=
(or
.B cx=
if
.BR rv )
capabilitizzle remains actizzle when dis kicks in.
Da default be a funky-ass bold red text foreground over tha current line background.
.TP
.B mc=01;31
SGR substrin fo' matchin non-empty text up in a cold-ass lil context line.
(This is only used when the
.B \-v
command-line option is specified.)
Da effect of the
.B cx=
(or
.B sl=
if
.BR rv )
capabilitizzle remains actizzle when dis kicks in.
Da default be a funky-ass bold red text foreground over tha current line background.
.TP
.B fn=35
SGR substrin fo' file names prefixin any content line.
Da default be a magenta text foreground over tha terminalz default background.
.TP
.B ln=32
SGR substrin fo' line numbers prefixin any content line.
Da default be a chronic text foreground over tha terminalz default background.
.TP
.B bn=32
SGR substrin fo' byte offsets prefixin any content line.
Da default be a chronic text foreground over tha terminalz default background.
.TP
.B se=36
SGR substrin fo' separators dat is inserted
between selected line fields
.RB ( : ),
between context line fields,
.RB ( \- ),
and between crewz of adjacent lines when nonzero context is specified
.RB ( \-\^\- ).
Da default be a cold-ass lil cyan text foreground over tha terminalz default background.
.TP
.B ne
Boolean value dat prevents clearin ta tha end of line
usin Erase up in Line (EL) ta Right
.RB ( \\\\\\33[K )
each time a cold-ass lil colorized item ends.
This is needed on terminals on which EL aint supported.
It be otherwise useful on terminals
for which the
.B back_color_erase
.RB ( bce )
boolean terminfo capabilitizzle do not apply,
when tha chosen highlight flavas do not affect tha background,
or when EL is too slow or causes too much flicker.
Da default is false (i.e., tha capabilitizzle is omitted).
.PP
Note dat boolean capabilitizzles have no
.BR = ...
part.
They is omitted (i.e., false) by default n' become legit when specified.
.PP
See tha Select Graphic Rendizzle (SGR) section
in tha documentation of tha text terminal dat is used
for permitted joints n' they meanin as characta attributes.
These substrin joints is integers up in decimal representation
and can be concatenated wit semicolons.
.B grep
takes care of assemblin tha result
into a cold-ass lil complete SGR sequence
.RB ( \\\\\\33[ ... m ).
Common joints ta concatenate include
.B 1
for bold,
.B 4
for underline,
.B 5
for blink,
.B 7
for inverse,
.B 39
for default foreground color,
.B 30
to
.B 37
for foreground colors,
.B 90
to
.B 97
for 16-color mode foreground colors,
.B 38;5;0
to
.B 38;5;255
for 88-color n' 256-color modes foreground colors,
.B 49
for default background color,
.B 40
to
.B 47
for background colors,
.B 100
to
.B 107
for 16-color mode background colors, and
.B 48;5;0
to
.B 48;5;255
for 88-color n' 256-color modes background colors.
.RE
.TP
\fBLC_ALL\fP, \fBLC_COLLATE\fP, \fBLANG\fP
These variablez specify tha locale fo' the
.B LC_COLLATE
category,
which determines tha collatin sequence
used ta interpret range expressions like
.BR [a\-z] .
.TP
\fBLC_ALL\fP, \fBLC_CTYPE\fP, \fBLANG\fP
These variablez specify tha locale fo' the
.B LC_CTYPE
category,
which determines tha type of characters,
e.g., which charactas is whitespace.
.TP
\fBLC_ALL\fP, \fBLC_MESSAGES\fP, \fBLANG\fP
These variablez specify tha locale fo' the
.B LC_MESSAGES
category,
which determines tha language that
.B grep
uses fo' lyrics.
Da default C locale uses Gangsta Gangsta lyrics.
.TP
.B POSIXLY_CORRECT
If set,
.B grep
behaves as \s-1POSIX\s0 requires; otherwise,
.B grep
behaves mo' like other \s-1GNU\s0 programs.
\s-1POSIX\s0 requires dat options dat follow file names must be
treated as file names; by default, such options is permuted ta the
front of tha operand list n' is treated as options.
Also, \s-1POSIX\s0 requires dat unrecognized options be diagnosed as
\*(lqillegal\*(rq yo, but since they is not straight-up against tha law tha default
is ta diagnose dem as \*(lqinvalid\*(rq.
.B POSIXLY_CORRECT
also disablez \fB_\fP\fIN\fP\fB_GNU_nonoption_argv_flags_\fP,
busted lyrics bout below.
.TP
\fB_\fP\fIN\fP\fB_GNU_nonoption_argv_flags_\fP
(Here
.I N
is
.BR grep 's
numeric process ID.)  If the
.IR i th
characta of dis environment variablez value is
.BR 1 ,
do not consider the
.IR i th
operand of
.B grep
to be a option, even if it appears ta be one.
A shell can put dis variable up in tha environment fo' each command it runs,
specifyin which operandz is tha thangs up in dis biatch of file name wildcard
expansion n' therefore should not be treated as options.
This behavior be available only wit tha \s-1GNU\s0 C library, n' only
when
.B POSIXLY_CORRECT
is not set.
.
.SH "EXIT STATUS"
Normally, tha exit status is 0 if selected lines is found n' 1 otherwise.
But tha exit status is 2 if a error occurred, unless the
.B \-q
or
.B \-\^\-quiet
or
.B \-\^\-silent
option is used n' a selected line is found.
Note, however, dat \s-1POSIX\s0 only mandates, fo' programs such as
.BR grep ,
.BR cmp ,
and
.BR diff ,
that tha exit status up in case of error be pimped outa than 1;
it is therefore advisable, fo' tha sake of portability,
to use logic dat tests fo' dis general condition
instead of strict equalitizzle with\ 2.
.
.SH COPYRIGHT
Copyright 1998-2000, 2002, 2005-2014 Jacked Software Foundation, Inc.
.PP
This is free software;
see tha source fo' copyin conditions.
There is NO warranty;
not even fo' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.
.SH BUGS
.SS "Reportin Bugs"
Email bug reports to
.RB < bug\-grep@gnu.org >,
a mailin list whose wizzy page is
.RB < http://lists.gnu.org/mailman/listinfo/bug\-grep >.
.BR grep 's
Savannah bug tracker is located at
.RB < http://savannah.gnu.org/bugs/?group=grep >.
.SS "Known Bugs"
Big-Ass repetizzle counts up in the
.BI { n , m }
construct may cause
.B grep
to use fuckin shitloadz of memory.
In addition,
certain other obscure regular expressions require exponential time
and space, n' may cause
.B grep
to run outta memory.
.PP
Back-references is straight-up slow, n' may require exponential time.
.
.SH "SEE ALSO"
.SS "Regular Manual Pages"
awk(1), cmp(1), diff(1), find(1), gzip(1),
perl(1), sed(1), sort(1), xargs(1), zgrep(1),
read(2),
pcre(3), pcresyntax(3), pcrepattern(3),
terminfo(5),
glob(7), regex(7).
.SS "\s-1POSIX\s0 Programmerz Manual Page"
grep(1p).
.SS "\*(Txinfo Documentation"
Da full documentation for
.B grep
is maintained as a \*(Txinfo manual,
which you can read at http://www.gnu.org/software/grep/manual/.
If the
.B info
and
.B grep
programs is properly installed at yo' crib, tha command
.IP
.B info grep
.PP
should hit you wit access ta tha complete manual.
.
.SH NOTES
This playa page is maintained only fitfully;
the full documentation is often mo' up-to-date.
.PP
\s-1GNU\s0z not Unix yo, but Unix be a funky-ass beast;
its plural form is Unixen.
.\" Work round problems wit some troff -man implementations.
.br
