.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OBJDUMP 1"
.TH OBJDUMP 1 "2013-03-25" "binutils-2.23.2" "GNU Development Tools"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
objdump \- display shiznit from object files.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
objdump [\fB\-a\fR|\fB\-\-archive\-headers\fR]
        [\fB\-b\fR \fIbfdname\fR|\fB\-\-target=\fR\fIbfdname\fR]
        [\fB\-C\fR|\fB\-\-demangle\fR[=\fIstyle\fR] ]
        [\fB\-d\fR|\fB\-\-disassemble\fR]
        [\fB\-D\fR|\fB\-\-disassemble\-all\fR]
        [\fB\-z\fR|\fB\-\-disassemble\-zeroes\fR]
        [\fB\-EB\fR|\fB\-EL\fR|\fB\-\-endian=\fR{bangin' | lil }]
        [\fB\-f\fR|\fB\-\-file\-headers\fR]
        [\fB\-F\fR|\fB\-\-file\-offsets\fR]
        [\fB\-\-file\-start\-context\fR]
        [\fB\-g\fR|\fB\-\-debugging\fR]
        [\fB\-e\fR|\fB\-\-debugging\-tags\fR]
        [\fB\-h\fR|\fB\-\-section\-headers\fR|\fB\-\-headers\fR]
        [\fB\-i\fR|\fB\-\-info\fR]
        [\fB\-j\fR \fIsection\fR|\fB\-\-section=\fR\fIsection\fR]
        [\fB\-l\fR|\fB\-\-line\-numbers\fR]
        [\fB\-S\fR|\fB\-\-source\fR]
        [\fB\-m\fR \fImachine\fR|\fB\-\-architecture=\fR\fImachine\fR]
        [\fB\-M\fR \fIoptions\fR|\fB\-\-disassembler\-options=\fR\fIoptions\fR]
        [\fB\-p\fR|\fB\-\-private\-headers\fR]
        [\fB\-P\fR \fIoptions\fR|\fB\-\-private=\fR\fIoptions\fR]
        [\fB\-r\fR|\fB\-\-reloc\fR]
        [\fB\-R\fR|\fB\-\-dynamic\-reloc\fR]
        [\fB\-s\fR|\fB\-\-full\-contents\fR]
        [\fB\-W[lLiaprmfFsoRt]\fR|
         \fB\-\-dwarf\fR[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index]]
        [\fB\-G\fR|\fB\-\-stabs\fR]
        [\fB\-t\fR|\fB\-\-syms\fR]
        [\fB\-T\fR|\fB\-\-dynamic\-syms\fR]
        [\fB\-x\fR|\fB\-\-all\-headers\fR]
        [\fB\-w\fR|\fB\-\-wide\fR]
        [\fB\-\-start\-address=\fR\fIaddress\fR]
        [\fB\-\-stop\-address=\fR\fIaddress\fR]
        [\fB\-\-prefix\-addresses\fR]
        [\fB\-\-[no\-]show\-raw\-insn\fR]
        [\fB\-\-adjust\-vma=\fR\fIoffset\fR]
        [\fB\-\-special\-syms\fR]
        [\fB\-\-prefix=\fR\fIprefix\fR]
        [\fB\-\-prefix\-strip=\fR\fIlevel\fR]
        [\fB\-\-insn\-width=\fR\fIwidth\fR]
        [\fB\-V\fR|\fB\-\-version\fR]
        [\fB\-H\fR|\fB\-\-help\fR]
        \fIobjfile\fR...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBobjdump\fR displays shiznit bout one or mo' object files.
Da options control what tha fuck particular shiznit ta display.  This
information is mostly useful ta programmers whoz ass is hustlin on the
compilation tools, as opposed ta programmers whoz ass just want their
program ta compile n' work.
.PP
\&\fIobjfile\fR... is tha object filez ta be examined. Y'all KNOW dat shit, muthafucka!  When you
specify archives, \fBobjdump\fR shows shiznit on each of tha member
object files.
.SH "OPTIONS"
.IX Header "OPTIONS"
Da long n' short formz of options, shown here as alternatives, are
equivalent.  At least one option from tha list
\&\fB\-a,\-d,\-D,\-e,\-f,\-g,\-G,\-h,\-H,\-p,\-P,\-r,\-R,\-s,\-S,\-t,\-T,\-V,\-x\fR must be given.
.IP "\fB\-a\fR" 4
.IX Item "-a"
.PD 0
.IP "\fB\-\-archive\-header\fR" 4
.IX Item "--archive-header"
.PD
If any of tha \fIobjfile\fR filez is archives, display tha archive
header shiznit (in a gangbangin' format similar ta \fBls \-l\fR).  Besides the
information you could list wit \fBar tv\fR, \fBobjdump \-a\fR shows
the object file format of each archive member.
.IP "\fB\-\-adjust\-vma=\fR\fIoffset\fR" 4
.IX Item "--adjust-vma=offset"
When dumpin shiznit, first add \fIoffset\fR ta all tha section
addresses.  This is useful if tha section addresses do not correspond to
the symbol table, which can happen when puttin sections at particular
addresses when rockin a gangbangin' format which can not represent section addresses,
like fuckin a.out.
.IP "\fB\-b\fR \fIbfdname\fR" 4
.IX Item "-b bfdname"
.PD 0
.IP "\fB\-\-target=\fR\fIbfdname\fR" 4
.IX Item "--target=bfdname"
.PD
Specify dat tha object-code format fo' tha object filez is
\&\fIbfdname\fR.  This option may not be necessary; \fIobjdump\fR can
automatically recognize nuff formats.
.Sp
For example,
.Sp
.Vb 1
\&        objdump \-b oasys \-m vax \-h fu.o
.Ve
.Sp
displays summary shiznit from tha section headaz (\fB\-h\fR) of
\&\fIfu.o\fR, which is explicitly identified (\fB\-m\fR) as a \s-1VAX\s0 object
file up in tha format produced by Oasys compilers.  Yo ass can list the
formats available wit tha \fB\-i\fR option.
.IP "\fB\-C\fR" 4
.IX Item "-C"
.PD 0
.IP "\fB\-\-demangle[=\fR\fIstyle\fR\fB]\fR" 4
.IX Item "--demangle[=style]"
.PD
Decode (\fIdemangle\fR) low-level symbol names tha fuck into user-level names.
Besides removin any initial underscore prepended by tha system, this
makes \*(C+ function names readable.  Different compilaz have different
manglin styles. Da optionizzle demanglin steez argument can be used to
choose a appropriate demanglin steez fo' yo' compiler.
.IP "\fB\-g\fR" 4
.IX Item "-g"
.PD 0
.IP "\fB\-\-debugging\fR" 4
.IX Item "--debugging"
.PD
Display debuggin shiznit. I aint talkin' bout chicken n' gravy biatch.  This attempts ta parse \s-1STABS\s0 n' \s-1IEEE\s0
debuggin format shiznit stored up in tha file n' print it up using
a C like syntax.  If neither of these formats is found dis option
falls back on tha \fB\-W\fR option ta print any \s-1DWARF\s0 shiznit in
the file.
.IP "\fB\-e\fR" 4
.IX Item "-e"
.PD 0
.IP "\fB\-\-debugging\-tags\fR" 4
.IX Item "--debugging-tags"
.PD
Like \fB\-g\fR yo, but tha shiznit is generated up in a gangbangin' format compatible
with ctags tool.
.IP "\fB\-d\fR" 4
.IX Item "-d"
.PD 0
.IP "\fB\-\-disassemble\fR" 4
.IX Item "--disassemble"
.PD
Display tha assembla mnemonics fo' tha machine instructions from
\&\fIobjfile\fR.  This option only disassemblez dem sections which are
sposed ta fuckin contain instructions.
.IP "\fB\-D\fR" 4
.IX Item "-D"
.PD 0
.IP "\fB\-\-disassemble\-all\fR" 4
.IX Item "--disassemble-all"
.PD
Like \fB\-d\fR yo, but disassemble tha contentz of all sections, not just
those sposed ta fuckin contain instructions.
.Sp
If tha target be a \s-1ARM\s0 architecture dis switch also has tha effect
of forcin tha disassembla ta decode piecez of data found up in code
sections as if they was instructions.
.IP "\fB\-\-prefix\-addresses\fR" 4
.IX Item "--prefix-addresses"
When disassembling, print tha complete address on each line.  This is
the olda disassembly format.
.IP "\fB\-EB\fR" 4
.IX Item "-EB"
.PD 0
.IP "\fB\-EL\fR" 4
.IX Item "-EL"
.IP "\fB\-\-endian={big|lil}\fR" 4
.IX Item "--endian={big|lil}"
.PD
Specify tha endiannizz of tha object files.  This only affects
disassembly.  This can be useful when disassemblin a gangbangin' file format which
does not describe endiannizz shiznit, like fuckin S\-records.
.IP "\fB\-f\fR" 4
.IX Item "-f"
.PD 0
.IP "\fB\-\-file\-headers\fR" 4
.IX Item "--file-headers"
.PD
Display summary shiznit from tha overall header of
each of tha \fIobjfile\fR files.
.IP "\fB\-F\fR" 4
.IX Item "-F"
.PD 0
.IP "\fB\-\-file\-offsets\fR" 4
.IX Item "--file-offsets"
.PD
When disassemblin sections, whenever a symbol is displayed, also
display tha file offset of tha region of data dat be bout ta be
dumped. Y'all KNOW dat shit, muthafucka!  If zeroes is bein skipped, then when disassembly resumes,
tell tha user how tha fuck nuff zeroes was skipped n' tha file offset of the
location from where tha disassembly resumes.  When dumpin sections,
display tha file offset of tha location from where tha dump starts.
.IP "\fB\-\-file\-start\-context\fR" 4
.IX Item "--file-start-context"
Specify dat when displayin interlisted source code/disassembly
(assumes \fB\-S\fR) from a gangbangin' file dat has not yet been displayed, extend the
context ta tha start of tha file.
.IP "\fB\-h\fR" 4
.IX Item "-h"
.PD 0
.IP "\fB\-\-section\-headers\fR" 4
.IX Item "--section-headers"
.IP "\fB\-\-headers\fR" 4
.IX Item "--headers"
.PD
Display summary shiznit from tha section headaz of the
object file.
.Sp
File segments may be relocated ta nonstandard addresses, fo' example by
usin tha \fB\-Ttext\fR, \fB\-Tdata\fR, or \fB\-Tbss\fR options to
\&\fBld\fR.  But fuck dat shiznit yo, tha word on tha street is dat some object file formats, like fuckin a.out, do not
store tha startin address of tha file segments, n' you can put dat on yo' toast.  In dem thangs,
although \fBld\fR relocates tha sections erectly, rockin \fBobjdump
\&\-h\fR ta list tha file section headaz cannot show tha erect addresses.
Instead, it shows tha usual addresses, which is implicit fo' the
target.
.IP "\fB\-H\fR" 4
.IX Item "-H"
.PD 0
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
.PD
Print a summary of tha options ta \fBobjdump\fR n' exit.
.IP "\fB\-i\fR" 4
.IX Item "-i"
.PD 0
.IP "\fB\-\-info\fR" 4
.IX Item "--info"
.PD
Display a list showin all architectures n' object formats available
for justification wit \fB\-b\fR or \fB\-m\fR.
.IP "\fB\-j\fR \fIname\fR" 4
.IX Item "-j name"
.PD 0
.IP "\fB\-\-section=\fR\fIname\fR" 4
.IX Item "--section=name"
.PD
Display shiznit only fo' section \fIname\fR.
.IP "\fB\-l\fR" 4
.IX Item "-l"
.PD 0
.IP "\fB\-\-line\-numbers\fR" 4
.IX Item "--line-numbers"
.PD
Label tha display (usin debuggin shiznit) wit tha filename and
source line numbers correspondin ta tha object code or relocs shown.
Only useful wit \fB\-d\fR, \fB\-D\fR, or \fB\-r\fR.
.IP "\fB\-m\fR \fImachine\fR" 4
.IX Item "-m machine"
.PD 0
.IP "\fB\-\-architecture=\fR\fImachine\fR" 4
.IX Item "--architecture=machine"
.PD
Specify tha architecture ta use when disassemblin object files.  This
can be useful when disassemblin object filez which do not describe
architecture shiznit, like fuckin S\-records.  Yo ass can list tha available
architectures wit tha \fB\-i\fR option.
.Sp
If tha target be a \s-1ARM\s0 architecture then dis switch has an
additionizzle effect.  It restricts tha disassembly ta only them
instructions supported by tha architecture specified by \fImachine\fR.
If it is necessary ta use dis switch cuz tha input file do not
contain any architecture shiznit yo, but it be also desired to
disassemble all tha instructions use \fB\-marm\fR.
.IP "\fB\-M\fR \fIoptions\fR" 4
.IX Item "-M options"
.PD 0
.IP "\fB\-\-disassembler\-options=\fR\fIoptions\fR" 4
.IX Item "--disassembler-options=options"
.PD
Pass target specific shiznit ta tha disassembla n' shit.  Only supported on
some targets, n' you can put dat on yo' toast.  If it is necessary ta specify mo' than one
disassembla option then multiple \fB\-M\fR options can be used or
can be placed together tha fuck into a cold-ass lil comma separated list.
.Sp
If tha target be a \s-1ARM\s0 architecture then dis switch can be used to
select which regista name set is used durin disassembla n' shit.  Specifying
\&\fB\-M reg-names-std\fR (the default) will select tha regista names as
used up in \s-1ARM\s0z instruction set documentation yo, but wit regista 13 called
\&'sp', regista 14 called 'lr' n' regista 15 called 'pc'.  Specifying
\&\fB\-M reg-names-apcs\fR will select tha name set used by tha \s-1ARM\s0
Procedure Call Standard, whilst specifyin \fB\-M reg-names-raw\fR will
just use \fBr\fR followed by tha regista number.
.Sp
There is also two variants on tha \s-1APCS\s0 regista namin scheme enabled
by \fB\-M reg-names-atpcs\fR n' \fB\-M reg-names-special-atpcs\fR which
use tha ARM/Thumb Procedure Call Standard namin conventions.  (Either
with tha aiiight regista names or tha special regista names).
.Sp
This option can also be used fo' \s-1ARM\s0 architectures ta force the
disassembla ta interpret all instructions as Thumb instructions by
usin tha switch \fB\-\-disassembler\-options=force\-thumb\fR.  This can be
useful when attemptin ta disassemble thumb code produced by other
compilers.
.Sp
For tha x86, a shitload of tha options duplicate functionz of tha \fB\-m\fR
switch yo, but allow finer grained control.  Multiple selections from the
followin may be specified as a cold-ass lil comma separated string.
\&\fBx86\-64\fR, \fBi386\fR n' \fBi8086\fR select disassembly for
the given architecture.  \fBintel\fR n' \fBatt\fR select between
intel syntax mode n' \s-1AT&T\s0 syntax mode.
\&\fBintel-mnemonic\fR n' \fBatt-mnemonic\fR select between
intel mnemonic mode n' \s-1AT&T\s0 mnemonic mode. \fBintel-mnemonic\fR
implies \fBintel\fR n' \fBatt-mnemonic\fR implies \fBatt\fR.
\&\fBaddr64\fR, \fBaddr32\fR,
\&\fBaddr16\fR, \fBdata32\fR n' \fBdata16\fR specify tha default
address size n' operand size.  These four options is ghon be overridden if
\&\fBx86\-64\fR, \fBi386\fR or \fBi8086\fR step tha fuck up lata up in the
option string.  Lastly, \fBsuffix\fR, when up in \s-1AT&T\s0 mode,
instructs tha disassembla ta print a mnemonic suffix even when the
suffix could be inferred by tha operands.
.Sp
For PowerPC, \fBbooke\fR controls tha disassembly of BookE
instructions.  \fB32\fR n' \fB64\fR select PowerPC and
PowerPC64 disassembly, respectively.  \fBe300\fR selects
disassembly fo' tha e300 crew.  \fB440\fR selects disassembly for
the PowerPC 440.  \fBppcps\fR selects disassembly fo' tha paired
single instructionz of tha \s-1PPC750CL\s0.
.Sp
For \s-1MIPS\s0, dis option controls tha printin of instruction mnemonic
names n' regista names up in disassembled instructions.  Multiple
selections from tha followin may be specified as a cold-ass lil comma separated
string, n' invalid options is ignored:
.RS 4
.ie n .IP """no\-aliases""" 4
.el .IP "\f(CWno\-aliases\fR" 4
.IX Item "no-aliases"
Print tha 'raw' instruction mnemonic instead of some pseudo
instruction mnemonic.  I.e., print 'daddu' or 'or' instead of 'move',
\&'sll' instead of 'nop', etc.
.ie n .IP """gpr\-names=\f(CIABI\f(CW""" 4
.el .IP "\f(CWgpr\-names=\f(CIABI\f(CW\fR" 4
.IX Item "gpr-names=ABI"
Print \s-1GPR\s0 (general-purpose register) names as appropriate
for tha specified \s-1ABI\s0.  By default, \s-1GPR\s0 names is selected accordin to
the \s-1ABI\s0 of tha binary bein disassembled.
.ie n .IP """fpr\-names=\f(CIABI\f(CW""" 4
.el .IP "\f(CWfpr\-names=\f(CIABI\f(CW\fR" 4
.IX Item "fpr-names=ABI"
Print \s-1FPR\s0 (floating-point register) names as
appropriate fo' tha specified \s-1ABI\s0.  By default, \s-1FPR\s0 numbers is printed
rather than names.
.ie n .IP """cp0\-names=\f(CIARCH\f(CW""" 4
.el .IP "\f(CWcp0\-names=\f(CIARCH\f(CW\fR" 4
.IX Item "cp0-names=ARCH"
Print \s-1CP0\s0 (system control coprocessor; coprocessor 0) regista names
as appropriate fo' tha \s-1CPU\s0 or architecture specified by
\&\fI\s-1ARCH\s0\fR.  By default, \s-1CP0\s0 regista names is selected accordin to
the architecture n' \s-1CPU\s0 of tha binary bein disassembled.
.ie n .IP """hwr\-names=\f(CIARCH\f(CW""" 4
.el .IP "\f(CWhwr\-names=\f(CIARCH\f(CW\fR" 4
.IX Item "hwr-names=ARCH"
Print \s-1HWR\s0 (hardware register, used by tha \f(CW\*(C`rdhwr\*(C'\fR instruction) names
as appropriate fo' tha \s-1CPU\s0 or architecture specified by
\&\fI\s-1ARCH\s0\fR.  By default, \s-1HWR\s0 names is selected accordin to
the architecture n' \s-1CPU\s0 of tha binary bein disassembled.
.ie n .IP """reg\-names=\f(CIABI\f(CW""" 4
.el .IP "\f(CWreg\-names=\f(CIABI\f(CW\fR" 4
.IX Item "reg-names=ABI"
Print \s-1GPR\s0 n' \s-1FPR\s0 names as appropriate fo' tha selected \s-1ABI\s0.
.ie n .IP """reg\-names=\f(CIARCH\f(CW""" 4
.el .IP "\f(CWreg\-names=\f(CIARCH\f(CW\fR" 4
.IX Item "reg-names=ARCH"
Print CPU-specific regista names (\s-1CP0\s0 regista n' \s-1HWR\s0 names)
as appropriate fo' tha selected \s-1CPU\s0 or architecture.
.RE
.RS 4
.Sp
For any of tha options listed above, \fI\s-1ABI\s0\fR or
\&\fI\s-1ARCH\s0\fR may be specified as \fBnumeric\fR ta have numbers printed
rather than names, fo' tha selected typez of registers.
Yo ass can list tha available jointz of \fI\s-1ABI\s0\fR n' \fI\s-1ARCH\s0\fR using
the \fB\-\-help\fR option.
.Sp
For \s-1VAX\s0, you can specify function entry addresses wit \fB\-M
entry:0xf00ba\fR.  Yo ass can use dis multiple times ta properly
disassemble \s-1VAX\s0 binary filez dat don't contain symbol tablez (like
\&\s-1ROM\s0 dumps).  In these cases, tha function entry mask would otherwise
be decoded as \s-1VAX\s0 instructions, which would probably lead tha rest
of tha function bein wrongly disassembled.
.RE
.IP "\fB\-p\fR" 4
.IX Item "-p"
.PD 0
.IP "\fB\-\-private\-headers\fR" 4
.IX Item "--private-headers"
.PD
Print shiznit dat is specific ta tha object file format.  Da exact
information printed dependz upon tha object file format.  For some
object file formats, no additionizzle shiznit is printed.
.IP "\fB\-P\fR \fIoptions\fR" 4
.IX Item "-P options"
.PD 0
.IP "\fB\-\-private=\fR\fIoptions\fR" 4
.IX Item "--private=options"
.PD
Print shiznit dat is specific ta tha object file format.  The
argument \fIoptions\fR be a cold-ass lil comma separated list dat dependz on the
format (the listz of options is displayed wit tha help).
.Sp
For \s-1XCOFF\s0, tha available options are: \fBheader\fR, \fBaout\fR,
\&\fBsections\fR, \fBsyms\fR, \fBrelocs\fR, \fBlineno\fR,
\&\fBloader\fR, \fBexcept\fR, \fBtypchk\fR, \fBtraceback\fR
and \fBtoc\fR.
.IP "\fB\-r\fR" 4
.IX Item "-r"
.PD 0
.IP "\fB\-\-reloc\fR" 4
.IX Item "--reloc"
.PD
Print tha relocation entriez of tha file.  If used wit \fB\-d\fR or
\&\fB\-D\fR, tha relocations is printed interspersed wit the
disassembly.
.IP "\fB\-R\fR" 4
.IX Item "-R"
.PD 0
.IP "\fB\-\-dynamic\-reloc\fR" 4
.IX Item "--dynamic-reloc"
.PD
Print tha dynamic relocation entriez of tha file.  This is only
meaningful fo' dynamic objects, like fuckin certain typez of shared
libraries. Put ya muthafuckin choppers up if ya feel dis!  As fo' \fB\-r\fR, if used wit \fB\-d\fR or
\&\fB\-D\fR, tha relocations is printed interspersed wit the
disassembly.
.IP "\fB\-s\fR" 4
.IX Item "-s"
.PD 0
.IP "\fB\-\-full\-contents\fR" 4
.IX Item "--full-contents"
.PD
Display tha full contentz of any sections requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  By default all
non-empty sections is displayed.
.IP "\fB\-S\fR" 4
.IX Item "-S"
.PD 0
.IP "\fB\-\-source\fR" 4
.IX Item "--source"
.PD
Display source code intermixed wit disassembly, if possible.  Implies
\&\fB\-d\fR.
.IP "\fB\-\-prefix=\fR\fIprefix\fR" 4
.IX Item "--prefix=prefix"
Specify \fIprefix\fR ta add ta tha absolute paths when used with
\&\fB\-S\fR.
.IP "\fB\-\-prefix\-strip=\fR\fIlevel\fR" 4
.IX Item "--prefix-strip=level"
Indicate how tha fuck nuff initial directory names ta strip off tha hardwired
absolute paths. Well shiiiit, it has no effect without \fB\-\-prefix=\fR\fIprefix\fR.
.IP "\fB\-\-show\-raw\-insn\fR" 4
.IX Item "--show-raw-insn"
When disassemblin instructions, print tha instruction up in hex as well as
in symbolic form.  This is tha default except when
\&\fB\-\-prefix\-addresses\fR is used.
.IP "\fB\-\-no\-show\-raw\-insn\fR" 4
.IX Item "--no-show-raw-insn"
When disassemblin instructions, do not print tha instruction bytes.
This is tha default when \fB\-\-prefix\-addresses\fR is used.
.IP "\fB\-\-insn\-width=\fR\fIwidth\fR" 4
.IX Item "--insn-width=width"
Display \fIwidth\fR bytes on a single line when disassembling
instructions.
.IP "\fB\-W[lLiaprmfFsoRt]\fR" 4
.IX Item "-W[lLiaprmfFsoRt]"
.PD 0
.IP "\fB\-\-dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index]\fR" 4
.IX Item "--dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index]"
.PD
Displays tha contentz of tha debug sections up in tha file, if any are
present.  If one of tha optionizzle lettas or lyrics bigs up tha switch
then only data found up in dem specific sections is ghon be dumped.
.Sp
Note dat there is no single letta option ta display tha content of
trace sections or .gdb_index.
.Sp
Note: tha output from tha \fB=info\fR option can also be affected
by tha options \fB\-\-dwarf\-depth\fR, tha \fB\-\-dwarf\-start\fR and
the \fB\-\-dwarf\-check\fR.
.IP "\fB\-\-dwarf\-depth=\fR\fIn\fR" 4
.IX Item "--dwarf-depth=n"
Limit tha dump of tha \f(CW\*(C`.debug_info\*(C'\fR section ta \fIn\fR lil' thugs.
This is only useful wit \fB\-\-dwarf=info\fR.  Da default is
to print all DIEs; tha special value 0 fo' \fIn\fR will also have this
effect.
.Sp
With a non-zero value fo' \fIn\fR, DIEs at or deeper than \fIn\fR
levels aint gonna be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da range fo' \fIn\fR is zero-based.
.IP "\fB\-\-dwarf\-start=\fR\fIn\fR" 4
.IX Item "--dwarf-start=n"
Print only DIEs beginnin wit tha \s-1DIE\s0 numbered \fIn\fR.  This is only
useful wit \fB\-\-dwarf=info\fR.
.Sp
If specified, dis option will suppress printin of any header
information n' all DIEs before tha \s-1DIE\s0 numbered \fIn\fR.  Only
siblings n' lil pimpz of tha specified \s-1DIE\s0 is ghon be printed.
.Sp
This can be used up in conjunction wit \fB\-\-dwarf\-depth\fR.
.IP "\fB\-\-dwarf\-check\fR" 4
.IX Item "--dwarf-check"
Enable additionizzle checks fo' consistency of Dwarf shiznit.
.IP "\fB\-G\fR" 4
.IX Item "-G"
.PD 0
.IP "\fB\-\-stabs\fR" 4
.IX Item "--stabs"
.PD
Display tha full contentz of any sections requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Display the
contentz of tha .stab n' .stab.index n' .stab.excl sections from an
\&\s-1ELF\s0 file.  This is only useful on systems (like fuckin Solaris 2.0) up in which
\&\f(CW\*(C`.stab\*(C'\fR debuggin symbol-table entries is carried up in a \s-1ELF\s0
section. I aint talkin' bout chicken n' gravy biatch.  In most other file formats, debuggin symbol-table entries are
interleaved wit linkage symbols, n' is visible up in tha \fB\-\-syms\fR
output.
.IP "\fB\-\-start\-address=\fR\fIaddress\fR" 4
.IX Item "--start-address=address"
Start displayin data all up in tha specified address.  This affects tha output
of tha \fB\-d\fR, \fB\-r\fR n' \fB\-s\fR options.
.IP "\fB\-\-stop\-address=\fR\fIaddress\fR" 4
.IX Item "--stop-address=address"
Quit displayin data all up in tha specified address.  This affects tha output
of tha \fB\-d\fR, \fB\-r\fR n' \fB\-s\fR options.
.IP "\fB\-t\fR" 4
.IX Item "-t"
.PD 0
.IP "\fB\-\-syms\fR" 4
.IX Item "--syms"
.PD
Print tha symbol table entriez of tha file.
This is similar ta tha shiznit provided by tha \fBnm\fR program,
although tha display format is different.  Da format of tha output
dependz upon tha format of tha file bein dumped yo, but there be two main
types.  One be lookin like this:
.Sp
.Vb 2
\&        [  4](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .bss
\&        [  6](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000000 fred
.Ve
.Sp
where tha number inside tha square brackets is tha number of tha entry
in tha symbol table, tha \fIsec\fR number is tha section number, the
\&\fIfl\fR value is tha symbolz flag bits, tha \fIty\fR number is the
symbolz type, tha \fIscl\fR number is tha symbolz storage class and
the \fInx\fR value is tha number of auxilary entries associated with
the symbol.  Da last two fieldz is tha symbolz value n' its name.
.Sp
Da other common output format, probably peeped wit \s-1ELF\s0 based files,
looks like this:
.Sp
.Vb 2
\&        00000000 l    d  .bss   00000000 .bss
\&        00000000 g       .text  00000000 fred
.Ve
.Sp
Here tha straight-up original gangsta number is tha symbolz value (sometimes refered ta as
its address).  Da next field is straight-up a set of charactas and
spaces indicatin tha flag bits dat is set on tha symbol.  These
charactas is busted lyrics bout below.  Next is tha section wit which the
symbol be associated or \fI*ABS*\fR if tha section be absolute (ie
not connected wit any section), or \fI*UND*\fR if tha section is
referenced up in tha file bein dumped yo, but not defined there.
.Sp
Afta tha section name comes another field, a number, which fo' common
symbols is tha alignment n' fo' other symbol is tha size.  Finally
the symbolz name is displayed.
.Sp
Da flag charactas is divided tha fuck into 7 crews as bigs up:
.RS 4
.ie n .IP """l""" 4
.el .IP "\f(CWl\fR" 4
.IX Item "l"
.PD 0
.ie n .IP """g""" 4
.el .IP "\f(CWg\fR" 4
.IX Item "g"
.ie n .IP """u""" 4
.el .IP "\f(CWu\fR" 4
.IX Item "u"
.ie n .IP """!""" 4
.el .IP "\f(CW!\fR" 4
.IX Item "!"
.PD
Da symbol be a local (l), global (g), unique global (u), neither
global nor local (a space) or both global n' local (!).  A
symbol can be neither local or global fo' a variety of reasons, e.g.,
because it is used fo' debuggin yo, but it is probably a indication of
a bug if it is eva both local n' global. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Unique global symbols are
a \s-1GNU\s0 extension ta tha standard set of \s-1ELF\s0 symbol bindings.  For such
a symbol tha dynamic linker will make shizzle dat up in tha entire process
there is just one symbol wit dis name n' type up in use.
.ie n .IP """w""" 4
.el .IP "\f(CWw\fR" 4
.IX Item "w"
Da symbol is weak (w) or phat (a space).
.ie n .IP """C""" 4
.el .IP "\f(CWC\fR" 4
.IX Item "C"
Da symbol denotes a cold-ass lil constructor (C) or a ordinary symbol (a space).
.ie n .IP """W""" 4
.el .IP "\f(CWW\fR" 4
.IX Item "W"
Da symbol be a warnin (W) or a aiiight symbol (a space).  A warning
symbolz name be a message ta be displayed if tha symbol followin the
warnin symbol is eva referenced.
.ie n .IP """I""" 4
.el .IP "\f(CWI\fR" 4
.IX Item "I"
.PD 0
.ie n .IP """i""" 4
.el .IP "\f(CWi\fR" 4
.IX Item "i"
.PD
Da symbol be a indirect reference ta another symbol (I), a gangbangin' function
to be evaluated durin reloc processin (i) or a aiiight symbol (a
space).
.ie n .IP """d""" 4
.el .IP "\f(CWd\fR" 4
.IX Item "d"
.PD 0
.ie n .IP """D""" 4
.el .IP "\f(CWD\fR" 4
.IX Item "D"
.PD
Da symbol be a thugged-out debuggin symbol (d) or a thugged-out dynamic symbol (D) or a
normal symbol (a space).
.ie n .IP """F""" 4
.el .IP "\f(CWF\fR" 4
.IX Item "F"
.PD 0
.ie n .IP """f""" 4
.el .IP "\f(CWf\fR" 4
.IX Item "f"
.ie n .IP """O""" 4
.el .IP "\f(CWO\fR" 4
.IX Item "O"
.PD
Da symbol is tha name of a gangbangin' function (F) or a gangbangin' file (f) or a object
(O) or just a aiiight symbol (a space).
.RE
.RS 4
.RE
.IP "\fB\-T\fR" 4
.IX Item "-T"
.PD 0
.IP "\fB\-\-dynamic\-syms\fR" 4
.IX Item "--dynamic-syms"
.PD
Print tha dynamic symbol table entriez of tha file.  This is only
meaningful fo' dynamic objects, like fuckin certain typez of shared
libraries. Put ya muthafuckin choppers up if ya feel dis!  This is similar ta tha shiznit provided by tha \fBnm\fR
program when given tha \fB\-D\fR (\fB\-\-dynamic\fR) option.
.IP "\fB\-\-special\-syms\fR" 4
.IX Item "--special-syms"
When displayin symbols include dem which tha target considaz ta be
special up in some way n' which would not normally be of interest ta the
user.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Print tha version number of \fBobjdump\fR n' exit.
.IP "\fB\-x\fR" 4
.IX Item "-x"
.PD 0
.IP "\fB\-\-all\-headers\fR" 4
.IX Item "--all-headers"
.PD
Display all available header shiznit, includin tha symbol table and
relocation entries. Put ya muthafuckin choppers up if ya feel dis!  Usin \fB\-x\fR is equivalent ta specifyin all of
\&\fB\-a \-f \-h \-p \-r \-t\fR.
.IP "\fB\-w\fR" 4
.IX Item "-w"
.PD 0
.IP "\fB\-\-wide\fR" 4
.IX Item "--wide"
.PD
Format some lines fo' output devices dat have mo' than 80 columns.
Also do not truncate symbol names when they is displayed.
.IP "\fB\-z\fR" 4
.IX Item "-z"
.PD 0
.IP "\fB\-\-disassemble\-zeroes\fR" 4
.IX Item "--disassemble-zeroes"
.PD
Normally tha disassembly output will skip blockz of zeroes.  This
option directs tha disassembla ta disassemble dem blocks, just like
any other data.
.IP "\fB@\fR\fIfile\fR" 4
.IX Item "@file"
Read command-line options from \fIfile\fR.  Da options read are
inserted up in place of tha original gangsta @\fIfile\fR option. I aint talkin' bout chicken n' gravy biatch.  If \fIfile\fR
does not exist, or cannot be read, then tha option is ghon be treated
literally, n' not removed.
.Sp
Options up in \fIfile\fR is separated by whitespace.  A whitespace
characta may be included up in a option by surroundin tha entire
option up in either single or double quotes.  Any characta (includin a
backslash) may be included by prefixin tha characta ta be included
with a funky-ass backslash.  Da \fIfile\fR may itself contain additional
@\fIfile\fR options; any such options is ghon be processed recursively.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInm\fR\|(1), \fIreadelf\fR\|(1), n' tha Info entries fo' \fIbinutils\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010, 2011, 2012
Jacked Software Foundation, Inc.
.PP
Permission is granted ta copy, distribute and/or modify dis document
under tha termz of tha \s-1GNU\s0 Jacked Documentation License, Version 1.3
or any lata version published by tha Jacked Software Foundation;
with no Invariant Sections, wit no Front-Cover Texts, n' wit no
Back-Cover Texts, n' you can put dat on yo' toast.  A copy of tha license is included up in the
section entitled \*(L"\s-1GNU\s0 Jacked Documentation License\*(R".
