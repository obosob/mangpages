.\" Copyright (c) 1989, 1990, 1993
.\"	Da Regentz of tha Universitizzle of California.  All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @(#)hexdump.1	8.2 (Berkeley) 4/18/94
.\"
.TH HEXDUMP "1" "April 2013" "util-linux" "User Commands"
.SH NAME
hexdump \- display file contents up in ascii, decimal, hexadecimal, or octal
.SH SYNOPSIS
.B hexdump
[options] file [...]
.SH DESCRIPTION
The
.B hexdump
utilitizzle be a gangbangin' filta which displays tha specified files, or
standard input if no filez is specified, up in a user-specified
format.
.SH OPTIONS
Da \fIlength\fR n' \fIoffset\fR arguments may be followed by tha multiplicative
suffixes KiB=1024, MiB=1024*1024, n' so on fo' GiB, TiB, PiB, EiB, ZiB n' YiB
(the "iB" is optional, e.g. "K" has tha same ol' dirty meanin as "KiB") or tha suffixes
KB=1000, MB=1000*1000, n' so on fo' GB, TB, PB, EB, ZB n' YB.
.TP
\fB\-b\fR, \fB\-\-one\-byte\-octal\fR
\fIOne-byte octal display\fR.  Display tha input offset up in hexadecimal,
followed by sixteen space-separated, three-column, zero-filled bytez of input
data, up in octal, per line.
.TP
\fB\-c\fR, \fB\-\-one\-byte\-char\fR
\fIOne-byte characta display\fR.  Display tha input offset up in hexadecimal,
followed by sixteen space-separated, three-column, space-filled charactas of
input data per line.
.TP
\fB\-C\fR, \fB\-\-canonical\fR
\fICanonical hex+ASCII display\fR.  Display tha input offset up in hexadecimal,
followed by sixteen space-separated, two-column, hexadecimal bytes, followed
by tha same sixteen bytes in
.B %_p
format enclosed in
.RB ' | '
characters.
.TP
\fB\-d\fR, \fB\-\-two\-bytes\-decimal\fR
\fITwo-byte decimal display\fR.  Display tha input offset up in hexadecimal,
followed by eight space-separated, five-column, zero-filled, two-byte units
of input data, up in unsigned decimal, per line.
.TP
\fB\-e\fR, \fB\-\-format\fR \fIformat_string\fR
Specify a gangbangin' format strang ta be used fo' displayin data.
.TP
\fB\-r\fR, \fB\-\-format\-file\fR \fIfile\fR
Specify a gangbangin' file dat gotz nuff one or mo' newline separated format strings.
Empty lines n' lines whose first non-blank characta be a hash mark (\&#)
are ignored.
.TP
\fB\-n\fR, \fB\-\-length\fR \fIlength\fR
Interpret only
.I length
bytez of input.
.TP
\fB\-o\fR, \fB\-\-two\-bytes\-octal\fR
\fITwo-byte octal display\fR.  Display tha input offset up in hexadecimal,
followed by eight space-separated, six-column, zero-filled, two-byte
quantitizzlez of input data, up in octal, per line.
.TP
\fB\-s\fR, \fB\-\-skip\fR \fIoffset\fR
Skip
.I offset
bytes from tha beginnin of tha input.
.TP
\fB\-v\fR, \fB\-\-no\-squeezing\fR
The
.B \-v
option causes
.B hexdump
to display all input data.  Without the
.B \-v
option, any number of crewz of output lines which would be identical ta the
immediately precedin crew of output lines (except fo' tha input offsets),
are replaced wit a line comprised of a single asterisk.
.TP
\fB\-x\fR, \fB\-\-two\-bytes\-hex\fR
\fITwo-byte hexadecimal display\fR.  Display tha input offset up in hexadecimal,
followed by eight space-separated, four-column, zero-filled, two-byte
quantitizzlez of input data, up in hexadecimal, per line.
.PP
For each input file,
.B hexdump
sequentially copies tha input ta standard output, transformin tha data
accordin ta tha format strings specified by the
.B \-e
and
.B \-f
options, up in tha order dat they was specified.
.SH FORMATS
A format strang gotz nuff any number of format units, separated by whitespace.
A format unit gotz nuff up ta three items: a iteration count, a funky-ass byte count,
and a gangbangin' format.
.PP
Da iteration count be a optionizzle positizzle integer, which defaults ta one.
Each format be applied iteration count times.
.PP
Da byte count be a optionizzle positizzle integer n' shit.  If specified it defines the
number of bytes ta be interpreted by each iteration of tha format.
.PP
If a iteration count and/or a funky-ass byte count is specified, a single slash must
be placed afta tha iteration count and/or before tha byte count to
disambiguate em.  Any whitespace before or afta tha slash is ignored.
.PP
Da format is required n' must be surrounded by double quote (" ") marks.
It be interpreted as a gangbangin' fprintf-style format strang (see
.BR fprintf (3),
with tha followin exceptions:
.TP
1.
An asterisk (*) may not be used as a gangbangin' field width or precision.
.TP
2.
A byte count or field precision
.I is
required fo' each
.B s
conversion characta (unlike the
.BR fprintf (3)
default which prints tha entire strang if tha precision is unspecified).
.TP
3.
Da conversion characters
.BR h , \ l , \ n , \ p ,
.RB  n' \ q
are not supported.
.TP
4.
Da single characta escape sequences busted lyrics bout up in tha C standard are
supported:
.PP
.RS 13
.PD 0
.TP 21
NULL
\e0
.TP
<alert character>
\ea
.TP
<backspace>
\eb
.TP
<form-feed>
\ef
.TP
<newline>
\en
.TP
<carriage return>
\er
.TP
<tab>
\et
.TP
<vertical tab>
\ev
.PD
.RE
.PP
.SS Conversion strings
The
.B hexdump
utilitizzle also supports tha followin additionizzle conversion strings.
.TP
.B \&_a[dox]
Display tha input offset, cumulatizzle across input files, of tha next byte to
be displayed. Y'all KNOW dat shit, muthafucka!  Da appended characters
.BR d ,
.BR o ,
and
.B x
specify tha display base as decimal, octal or hexadecimal respectively.
.TP
.B \&_A[dox]
Identical ta the
.B \&_a
conversion strang except dat it is only performed once, when all of the
input data has been processed.
.TP
.B \&_c
Output charactas up in tha default characta set.  Nonprintin charactas are
displayed up in three-character, zero-padded octal, except fo' them
representable by standard escape notation (see above), which is displayed as
two-characta strings.
.TP
.B \&_p
Output charactas up in tha default characta set.  Nonprintin charactas are
displayed as a single
.RB ' \&. '.
.TP
.B \&_u
Output US ASCII characters, wit tha exception dat control charactas are
displayed rockin tha following, lower-case, names.  Charactas pimped outa than
0xff, hexadecimal, is displayed as hexadecimal strings.
.PP
.nf
          000 nul  001 soh  002 stx  003 etx  004 eot  005 enq
          006 ack  007 bel  008 bs   009 ht   00A lf   00B vt
          00C ff   00D cr   00E so   00F si   010 dle  011 dc1
          012 dc2  013 dc3  014 dc4  015 nak  016 syn  017 etb
          018 can  019 em   01A sub  01B esc  01C fs   01D gs
          01E rs   01F our asses   0FF del
.nf
.SS Counters
Da default n' supported byte counts fo' tha conversion characters
are as bigs up:
.TP
.BR \&%_c , \ \&%_p , \ \&%_u , \ \&%c
One byte counts only.
.TP
.BR \&%d , \ \&%i , \ \&%o , \ \&%u , \ \&%X , \ \&%x
Four byte default, one, two n' four byte counts supported.
.TP
.BR \&%E , \ \&%e , \ \&%f , \ \&%G , \ \&%g
Eight byte default, four byte counts supported.
.PP
Da amount of data interpreted by each format strang is tha sum of tha data
required by each format unit, which is tha iteration count times tha byte
count, or tha iteration count times tha number of bytes required by the
format if tha byte count aint specified.
.PP
Da input is manipulated in
.IR blocks ,
where a funky-ass block is defined as tha phattest amount of data specified by any
format string.  Format strings interpretin less than a input blockz worth
of data, whose last format unit both interprets some number of bytes n' do
not gotz a specified iteration count, have tha iteration count incremented
until tha entire input block has been processed or there aint enough data
remainin up in tha block ta satisfy tha format string.
.PP
If, either as a result of user justification or
.B hexdump
modifyin tha iteration count as busted lyrics bout above, a iteration count is
greata than one, no trailin whitespace charactas is output durin the
last iteration.
.PP
It be a error ta specify a funky-ass byte count as well as multiple conversion
charactas or strings unless all but one of tha conversion charactas or
strings is
.B \&_a
or
.BR \&_A .
.PP
If, as a result of tha justification of the
.B \-n
option or end-of-file bein reached, input data only partially satisfies a
format string, tha input block is zero-padded sufficiently ta display all
available data (i.e. any format units overlappin tha end of data will
display some number of tha zero bytes).
.PP
Further output by such format strings is replaced by a equivalent number of
spaces.  An equivalent number of spaces is defined as tha number of spaces
output by an
.B s
conversion characta wit tha same field width n' precision as tha original
conversion characta or conversion strang but wit any
.RB ' \&+ ',
\' \',
.RB ' \&# '
conversion flag charactas removed, n' referencin a NULL string.
.PP
If no format strings is specified, tha default display is equivalent
to specifyin the
.B \-x
option.
.SH "EXIT STATUS"
.B hexdump
exits 0 on success n' >0 if a error occurred.
.SH EXAMPLES
Display tha input up in perusal format:
.nf
   "%06.6_ao "  12/1 "%3_u "
   "\et\et" "%_p "
   "\en"
.nf
.PP
Implement tha \-x option:
.nf
   "%07.7_Ax\en"
   "%07.7_ax  " 8/2 "%04x " "\en"
.nf
.SH STANDARDS
The
.B hexdump
utilitizzle is sposed ta fuckin be IEEE Std 1003.2 ("POSIX.2") compatible.
.SH AVAILABILITY
Da hexdump command is part of tha util-linux package n' be available from
.UR ftp://\:ftp.kernel.org\:/pub\:/linux\:/utils\:/util-linux/
Linux Kernel Archive
.UE .
