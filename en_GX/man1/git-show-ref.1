'\" t
.\"     Title: git-show-ref
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-SHOW\-REF" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-show-ref \- List references up in a local repository
.SH "SYNOPSIS"
.sp
.nf
\fIgit show\-ref\fR [\-q|\-\-quiet] [\-\-verify] [\-\-head] [\-d|\-\-dereference]
             [\-s|\-\-hash[=<n>]] [\-\-abbrev[=<n>]] [\-\-tags]
             [\-\-heads] [\-\-] [<pattern>\&...]
\fIgit show\-ref\fR \-\-exclude\-existing[=<pattern>] < ref\-list
.fi
.sp
.SH "DESCRIPTION"
.sp
Displays references available up in a local repository along wit tha associated commit IDs\&. Results can be filtered rockin a pattern n' tags can be dereferenced tha fuck into object IDs\& fo' realz. Additionally, it can be used ta test whether a particular ref exists\&.
.sp
By default, shows tha tags, heads, n' remote refs\&.
.sp
Da \-\-exclude\-existin form be a gangbangin' filta dat do tha inverse, it shows tha refs from stdin dat don\(cqt exist up in tha local repository\&.
.sp
Use of dis utilitizzle is encouraged up in favor of directly accessin filez under tha \&.git directory\&.
.SH "OPTIONS"
.PP
\-\-head
.RS 4
Show tha HEAD reference, even if it would normally be filtered out\&.
.RE
.PP
\-\-tags, \-\-heads
.RS 4
Limit ta "refs/heads" n' "refs/tags", respectively\&. These options is not mutually exclusive; when given both, references stored up in "refs/heads" n' "refs/tags" is displayed\&.
.RE
.PP
\-d, \-\-dereference
.RS 4
Dereference tags tha fuck into object IDs as well\&. They is ghon be shown wit "^{}" appended\&.
.RE
.PP
\-s, \-\-hash[=<n>]
.RS 4
Only show tha SHA\-1 hash, not tha reference name\&. When combined wit \-\-dereference tha dereferenced tag will still be shown afta tha SHA\-1\&.
.RE
.PP
\-\-verify
.RS 4
Enable stricta reference checkin by requirin a exact ref path\& fo' realz. Aside from returnin a error code of 1, it will also print a error message if
\fI\-\-quiet\fR
was not specified\&.
.RE
.PP
\-\-abbrev[=<n>]
.RS 4
Abbreviate tha object name\&. When using
\-\-hash, you do not gotta say
\-\-hash \-\-abbrev;
\-\-hash=n
would do\&.
.RE
.PP
\-q, \-\-quiet
.RS 4
Do not print any thangs up in dis biatch ta stdout\&. When combined with
\fI\-\-verify\fR
this can be used ta silently check if a reference exists\&.
.RE
.PP
\-\-exclude\-existing[=<pattern>]
.RS 4
Make
\fIgit show\-ref\fR
act as a gangbangin' filta dat readz refs from stdin of tha form "^(?:<anything>\es)?<refname>(?:\e^{})?$" n' performs tha followin actions on each: (1) strip "^{}" all up in tha end of line if any; (2) ignore if pattern is provided n' do not head\-match refname; (3) warn if refname aint a well\-formed refname n' skip; (4) ignore if refname be a ref dat exists up in tha local repository; (5) otherwise output tha line\&.
.RE
.PP
<pattern>\&...
.RS 4
Show references matchin one or mo' patterns\&. Patterns is matched from tha end of tha full name, n' only complete parts is matched, e\&.g\&.
\fImaster\fR
matches
\fIrefs/heads/master\fR,
\fIrefs/remotes/origin/master\fR,
\fIrefs/tags/jedi/master\fR
but not
\fIrefs/heads/mymaster\fR
or
\fIrefs/remotes/master/jedi\fR\&.
.RE
.SH "OUTPUT"
.sp
Da output is up in tha format: \fI<SHA\-1 ID>\fR \fI<space>\fR \fI<reference name>\fR\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-ref \-\-head \-\-dereference
832e76a9899f560a90ffd62ae2ce83bbeff58f54 HEAD
832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/master
832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/origin
3521017556c5de4159da4615a39fa4d5d2c279b5 refs/tags/v0\&.99\&.9c
6ddc0964034342519a87fe013781abf31c6db6ad refs/tags/v0\&.99\&.9c^{}
055e4ae3ae6eb344cbabf2a5256a49ea66040131 refs/tags/v1\&.0rc4
423325a2d24638ddcc82ce47be5e40be550f4507 refs/tags/v1\&.0rc4^{}
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
.sp
When rockin \-\-hash (and not \-\-dereference) tha output format is: \fI<SHA\-1 ID>\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-ref \-\-headz \-\-hash
2e3ba0114a1f52b47df29743d6915d056be13278
185008ae97960c8d551adcd9e23565194651b5d1
03adf42c988195b50e1a1935ba5fcbc39b2b029b
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
.SH "EXAMPLE"
.sp
To show all references called "master", whether tags or headz or anythang else, n' regardless of how tha fuck deep up in tha reference namin hierarchy they are, use:
.sp
.if n \{\
.RS 4
.\}
.nf
        git show\-ref master
.fi
.if n \{\
.RE
.\}
.sp
.sp
This will show "refs/heads/master" but also "refs/remote/other\-repo/master", if such references exists\&.
.sp
When rockin tha \fI\-\-verify\fR flag, tha command requires a exact path:
.sp
.if n \{\
.RS 4
.\}
.nf
        git show\-ref \-\-verify refs/heads/master
.fi
.if n \{\
.RE
.\}
.sp
.sp
will only match tha exact branch called "master"\&.
.sp
If not a god damn thang matches, \fIgit show\-ref\fR will return a error code of 1, n' up in tha case of verification, it will show a error message\&.
.sp
For scripting, you can ask it ta be on tha down-low wit tha "\-\-quiet" flag, which allows you ta do thangs like
.sp
.if n \{\
.RS 4
.\}
.nf
        git show\-ref \-\-quiet \-\-verify \-\- "refs/heads/$headname" ||
                echo "$headname aint a valid branch"
.fi
.if n \{\
.RE
.\}
.sp
.sp
to check whether a particular branch exists or not (notice how tha fuck our phat asses don\(cqt straight-up wanna show any thangs up in dis biatch, n' we wanna use tha full refname fo' it up in order ta not trigger tha problem wit ambiguous partial matches)\&.
.sp
To show only tags, or only proper branch heads, use "\-\-tags" and/or "\-\-heads" respectively (usin both means dat it shows tags n' headz yo, but not other random references under tha refs/ subdirectory)\&.
.sp
To do automatic tag object dereferencing, use tha "\-d" or "\-\-dereference" flag, so you can do
.sp
.if n \{\
.RS 4
.\}
.nf
        git show\-ref \-\-tags \-\-dereference
.fi
.if n \{\
.RE
.\}
.sp
.sp
to git a listin of all tags together wit what tha fuck they dereference\&.
.SH "FILES"
.sp
\&.git/refs/*, \&.git/packed\-refs
.SH "SEE ALSO"
.sp
\fBgit-for-each-ref\fR(1), \fBgit-ls-remote\fR(1), \fBgit-update-ref\fR(1), \fBgitrepository-layout\fR(5)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
