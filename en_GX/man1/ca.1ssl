.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CA 1"
.TH CA 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ca \- sample minimal CA application
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBca\fR
[\fB\-verbose\fR]
[\fB\-config filename\fR]
[\fB\-name section\fR]
[\fB\-gencrl\fR]
[\fB\-revoke file\fR]
[\fB\-crl_reason reason\fR]
[\fB\-crl_hold instruction\fR]
[\fB\-crl_compromise time\fR]
[\fB\-crl_CA_compromise time\fR]
[\fB\-crldays days\fR]
[\fB\-crlhours hours\fR]
[\fB\-crlexts section\fR]
[\fB\-startdate date\fR]
[\fB\-enddate date\fR]
[\fB\-days arg\fR]
[\fB\-md arg\fR]
[\fB\-policy arg\fR]
[\fB\-keyfile arg\fR]
[\fB\-key arg\fR]
[\fB\-passin arg\fR]
[\fB\-cert file\fR]
[\fB\-selfsign\fR]
[\fB\-in file\fR]
[\fB\-out file\fR]
[\fB\-notext\fR]
[\fB\-outdir dir\fR]
[\fB\-infiles\fR]
[\fB\-spkac file\fR]
[\fB\-ss_cert file\fR]
[\fB\-preserveDN\fR]
[\fB\-noemailDN\fR]
[\fB\-batch\fR]
[\fB\-msie_hack\fR]
[\fB\-extensions section\fR]
[\fB\-extfile section\fR]
[\fB\-engine id\fR]
[\fB\-subj arg\fR]
[\fB\-utf8\fR]
[\fB\-multivalue\-rdn\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBca\fR command be a minimal \s-1CA\s0 application. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it can be used
to sign certificate requests up in a variety of forms n' generate
CRLs it also maintains a text database of issued certificates
and they status.
.PP
Da options descriptions is ghon be divided tha fuck into each purpose.
.SH "CA OPTIONS"
.IX Header "CA OPTIONS"
.IP "\fB\-config filename\fR" 4
.IX Item "-config filename"
specifies tha configuration file ta use.
.IP "\fB\-name section\fR" 4
.IX Item "-name section"
specifies tha configuration file section ta use (overrides
\&\fBdefault_ca\fR up in tha \fBca\fR section).
.IP "\fB\-in filename\fR" 4
.IX Item "-in filename"
an input filename containin a single certificate request ta be
signed by tha \s-1CA.\s0
.IP "\fB\-ss_cert filename\fR" 4
.IX Item "-ss_cert filename"
a single self signed certificate ta be signed by tha \s-1CA.\s0
.IP "\fB\-spkac filename\fR" 4
.IX Item "-spkac filename"
a file containin a single Netscape signed hood key n' challenge
and additionizzle field joints ta be signed by tha \s-1CA.\s0 See tha \fB\s-1SPKAC FORMAT\s0\fR
section fo' shiznit on tha required format.
.IP "\fB\-infiles\fR" 4
.IX Item "-infiles"
if present dis should be tha last option, all subsequent arguments
are assumed ta tha the namez of filez containin certificate requests.
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
the output file ta output certificates to. Da default is standard
output. Da certificate details will also be printed up ta this
file.
.IP "\fB\-outdir directory\fR" 4
.IX Item "-outdir directory"
the directory ta output certificates to. Da certificate will be
written ta a gangbangin' filename consistin of tha serial number up in hex with
\&\*(L".pem\*(R" appended.
.IP "\fB\-cert\fR" 4
.IX Item "-cert"
the \s-1CA\s0 certificate file.
.IP "\fB\-keyfile filename\fR" 4
.IX Item "-keyfile filename"
the private key ta sign requests with.
.IP "\fB\-key password\fR" 4
.IX Item "-key password"
the password used ta encrypt tha private key. Right back up in yo muthafuckin ass. Since on some
systems tha command line arguments is visible (e.g. Unix with
the 'ps' utility) dis option should be used wit caution.
.IP "\fB\-selfsign\fR" 4
.IX Item "-selfsign"
indicates tha issued certificates is ta be signed wit tha key
the certificate requests was signed wit (given wit \fB\-keyfile\fR).
Cerificate requests signed wit a gangbangin' finger-lickin' different key is ignored. Y'all KNOW dat shit, muthafucka!  If
\&\fB\-spkac\fR, \fB\-ss_cert\fR or \fB\-gencrl\fR is given, \fB\-selfsign\fR is
ignored.
.Sp
A consequence of rockin \fB\-selfsign\fR is dat tha self-signed
certificate appears among tha entries up in tha certificate database
(see tha configuration option \fBdatabase\fR), n' uses tha same
serial number counta as all other certificates sign wit the
self-signed certificate.
.IP "\fB\-passin arg\fR" 4
.IX Item "-passin arg"
the key password source. For mo' shiznit bout tha format of \fBarg\fR
see tha \fB\s-1PASS PHRASE ARGUMENTS\s0\fR section up in \fIopenssl\fR\|(1).
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
this prints extra details bout tha operations bein performed.
.IP "\fB\-notext\fR" 4
.IX Item "-notext"
don't output tha text form of a cold-ass lil certificate ta tha output file.
.IP "\fB\-startdate date\fR" 4
.IX Item "-startdate date"
this allows tha start date ta be explicitly set. Da format of the
date is \s-1YYMMDDHHMMSSZ \s0(the same as a \s-1ASN1\s0 UTCTime structure).
.IP "\fB\-enddate date\fR" 4
.IX Item "-enddate date"
this allows tha expiry date ta be explicitly set. Da format of the
date is \s-1YYMMDDHHMMSSZ \s0(the same as a \s-1ASN1\s0 UTCTime structure).
.IP "\fB\-days arg\fR" 4
.IX Item "-days arg"
the number of minutes ta certify tha certificate for.
.IP "\fB\-md alg\fR" 4
.IX Item "-md alg"
the message digest ta use. Possible joints include md5, sha1 n' mdc2.
For full list of digests peep openssl dgst \-h output. This option also
applies ta CRLs.
.IP "\fB\-policy arg\fR" 4
.IX Item "-policy arg"
this option defines tha \s-1CA \s0\*(L"policy\*(R" ta use. This be a section in
the configuration file which decides which fieldz should be mandatory
or match tha \s-1CA\s0 certificate. Peep up tha \fB\s-1POLICY FORMAT\s0\fR section
for mo' shiznit.
.IP "\fB\-msie_hack\fR" 4
.IX Item "-msie_hack"
this be a legacy option ta make \fBca\fR work wit straight-up oldschool versions of
the \s-1IE\s0 certificate enrollment control \*(L"certenr3\*(R". Well shiiiit, it used UniversalStrings
for almost every last muthafuckin thang. Right back up in yo muthafuckin ass. Since tha oldschool control has various securitizzle bugs
its use is straight fuckin discouraged. Y'all KNOW dat shit, muthafucka! Da newer control \*(L"Xenroll\*(R" do not
need dis option.
.IP "\fB\-preserveDN\fR" 4
.IX Item "-preserveDN"
Normally tha \s-1DN\s0 order of a cold-ass lil certificate is tha same ol' dirty as tha order of the
fieldz up in tha relevant policy section. I aint talkin' bout chicken n' gravy biatch. When dis option is set tha order 
is tha same ol' dirty as tha request. This is largely fo' compatibilitizzle wit the
olda \s-1IE\s0 enrollment control which would only accept certificates if their
DNs match tha order of tha request. This aint needed fo' Xenroll.
.IP "\fB\-noemailDN\fR" 4
.IX Item "-noemailDN"
Da \s-1DN\s0 of a cold-ass lil certificate can contain tha \s-1EMAIL\s0 field if present up in the
request \s-1DN,\s0 however it is phat policy just havin tha e\-mail set into
the altName extension of tha certificate. When dis option is set the
\&\s-1EMAIL\s0 field is removed from tha certificate' subject n' set only in
the, eventually present, extensions. Da \fBemail_in_dn\fR keyword can be
used up in tha configuration file ta enable dis behaviour.
.IP "\fB\-batch\fR" 4
.IX Item "-batch"
this sets tha batch mode. In dis mode no thangs is ghon be asked
and all certificates is ghon be certified automatically.
.IP "\fB\-extensions section\fR" 4
.IX Item "-extensions section"
the section of tha configuration file containin certificate extensions
to be added when a cold-ass lil certificate is issued (defaults ta \fBx509_extensions\fR
unless tha \fB\-extfile\fR option is used). If no extension section is
present then, a V1 certificate is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha extension section
is present (even if it is empty), then a V3 certificate is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. See the:w
\&\fIx509v3_config\fR\|(5) manual page fo' detailz of the
extension section format.
.IP "\fB\-extfile file\fR" 4
.IX Item "-extfile file"
an additionizzle configuration file ta read certificate extensions from
(usin tha default section unless tha \fB\-extensions\fR option be also
used).
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBca\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms.
.IP "\fB\-subj arg\fR" 4
.IX Item "-subj arg"
supersedes subject name given up in tha request.
Da arg must be formatted as \fI/type0=value0/type1=value1/type2=...\fR,
charactas may be escaped by \e (backslash), no spaces is skipped.
.IP "\fB\-utf8\fR" 4
.IX Item "-utf8"
this option causes field joints ta be interpreted as \s-1UTF8\s0 strings, by 
default they is interpreted as \s-1ASCII.\s0 This means dat tha field
values, whether prompted from a terminal or obtained from a
configuration file, must be valid \s-1UTF8\s0 strings.
.IP "\fB\-multivalue\-rdn\fR" 4
.IX Item "-multivalue-rdn"
this option causes tha \-subj argument ta be interpretedt wit full
support fo' multivalued RDNs. Example:
.Sp
\&\fI/DC=org/DC=OpenSSL/DC=users/UID=123456+CN=Jizzy Doe\fR
.Sp
If \-multi\-rdn aint used then tha \s-1UID\s0 value is \fI123456+CN=Jizzy Doe\fR.
.SH "CRL OPTIONS"
.IX Header "CRL OPTIONS"
.IP "\fB\-gencrl\fR" 4
.IX Item "-gencrl"
this option generates a \s-1CRL\s0 based on shiznit up in tha index file.
.IP "\fB\-crldays num\fR" 4
.IX Item "-crldays num"
the number of minutes before tha next \s-1CRL\s0 is due. That is tha minutes from
now ta place up in tha \s-1CRL\s0 nextUpdate field.
.IP "\fB\-crlhours num\fR" 4
.IX Item "-crlhours num"
the number of minutes before tha next \s-1CRL\s0 is due.
.IP "\fB\-revoke filename\fR" 4
.IX Item "-revoke filename"
a filename containin a cold-ass lil certificate ta revoke.
.IP "\fB\-crl_reason reason\fR" 4
.IX Item "-crl_reason reason"
revocation reason, where \fBreason\fR is one of: \fBunspecified\fR, \fBkeyCompromise\fR,
\&\fBCACompromise\fR, \fBaffiliationChanged\fR, \fBsuperseded\fR, \fBcessationOfOperation\fR,
\&\fBcertificateHold\fR or \fBremoveFromCRL\fR. Da matchin of \fBreason\fR is case
insensitive. Right back up in yo muthafuckin ass. Settin any revocation reason will make tha \s-1CRL\s0 v2.
.Sp
In practizzle \fBremoveFromCRL\fR aint particularly useful cuz it is only used
in delta CRLs which is not currently implemented.
.IP "\fB\-crl_hold instruction\fR" 4
.IX Item "-crl_hold instruction"
This sets tha \s-1CRL\s0 revocation reason code ta \fBcertificateHold\fR n' tha hold
instruction ta \fBinstruction\fR which must be a \s-1OID.\s0 Although any \s-1OID\s0 can be
used only \fBholdInstructionNone\fR (the use of which is discouraged by \s-1RFC2459\s0)
\&\fBholdInstructionCallIssuer\fR or \fBholdInstructionReject\fR will normally be used.
.IP "\fB\-crl_compromise time\fR" 4
.IX Item "-crl_compromise time"
This sets tha revocation reason ta \fBkeyCompromise\fR n' tha compromise time to
\&\fBtime\fR. \fBtime\fR should be up in GeneralizedTime format dat is \fB\s-1YYYYMMDDHHMMSSZ\s0\fR.
.IP "\fB\-crl_CA_compromise time\fR" 4
.IX Item "-crl_CA_compromise time"
This is tha same ol' dirty as \fBcrl_compromise\fR except tha revocation reason is set to
\&\fBCACompromise\fR.
.IP "\fB\-crlexts section\fR" 4
.IX Item "-crlexts section"
the section of tha configuration file containin \s-1CRL\s0 extensions to
include. If no \s-1CRL\s0 extension section is present then a V1 \s-1CRL\s0 is
created, if tha \s-1CRL\s0 extension section is present (even if it is
empty) then a V2 \s-1CRL\s0 is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \s-1CRL\s0 extensions specified are
\&\s-1CRL\s0 extensions n' \fBnot\fR \s-1CRL\s0 entry extensions.  It should be noted
that some software (for example Netscape) can't handle V2 CRLs. Right back up in yo muthafuckin ass. See
\&\fIx509v3_config\fR\|(5) manual page fo' detailz of the
extension section format.
.SH "CONFIGURATION FILE OPTIONS"
.IX Header "CONFIGURATION FILE OPTIONS"
Da section of tha configuration file containin options fo' \fBca\fR
is found as bigs up: If tha \fB\-name\fR command line option is used,
then it names tha section ta be used. Y'all KNOW dat shit, muthafucka! Otherwise tha section to
be used must be named up in tha \fBdefault_ca\fR option of tha \fBca\fR section
of tha configuration file (or up in tha default section of the
configuration file). Besides \fBdefault_ca\fR, tha followin options are
read directly from tha \fBca\fR section:
 \s-1RANDFILE
\&\s0 preserve
 msie_hack
With tha exception of \fB\s-1RANDFILE\s0\fR, dis is probably a funky-ass bug n' may
change up in future releases.
.PP
Many of tha configuration file options is identical ta command line
options. Where tha option is present up in tha configuration file
and tha command line tha command line value is used. Y'all KNOW dat shit, muthafucka! Where an
option is busted lyrics bout as mandatory then it must be present in
the configuration file or tha command line equivalent (if
any) used.
.IP "\fBoid_file\fR" 4
.IX Item "oid_file"
This specifies a gangbangin' file containin additionizzle \fB\s-1OBJECT IDENTIFIERS\s0\fR.
Each line of tha file should consist of tha numerical form of the
object identifier followed by white space then tha short name followed
by white space n' finally tha long name.
.IP "\fBoid_section\fR" 4
.IX Item "oid_section"
This specifies a section up in tha configuration file containin extra
object identifiers. Each line should consist of tha short name of the
object identifier followed by \fB=\fR n' tha numerical form. Da short
and long names is tha same when dis option is used.
.IP "\fBnew_certs_dir\fR" 4
.IX Item "new_certs_dir"
the same as tha \fB\-outdir\fR command line option. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it specifies
the directory where freshly smoked up certificates is ghon be placed. Y'all KNOW dat shit, muthafucka! Mandatory.
.IP "\fBcertificate\fR" 4
.IX Item "certificate"
the same as \fB\-cert\fR. Well shiiiit, it gives tha file containin tha \s-1CA\s0
certificate. Mandatory.
.IP "\fBprivate_key\fR" 4
.IX Item "private_key"
same as tha \fB\-keyfile\fR option. I aint talkin' bout chicken n' gravy biatch. Da file containin the
\&\s-1CA\s0 private key. Mandatory.
.IP "\fB\s-1RANDFILE\s0\fR" 4
.IX Item "RANDFILE"
a file used ta read n' write random number seed shiznit, or
an \s-1EGD\s0 socket (see \fIRAND_egd\fR\|(3)).
.IP "\fBdefault_days\fR" 4
.IX Item "default_days"
the same as tha \fB\-days\fR option. I aint talkin' bout chicken n' gravy biatch. Da number of minutes ta certify
a certificate for.
.IP "\fBdefault_startdate\fR" 4
.IX Item "default_startdate"
the same as tha \fB\-startdate\fR option. I aint talkin' bout chicken n' gravy biatch. Da start date ta certify
a certificate for. Shiiit, dis aint no joke. If not set tha current time is used.
.IP "\fBdefault_enddate\fR" 4
.IX Item "default_enddate"
the same as tha \fB\-enddate\fR option. I aint talkin' bout chicken n' gravy biatch. Either dis option or
\&\fBdefault_days\fR (or tha command line equivalents) must be
present.
.IP "\fBdefault_crl_hours default_crl_days\fR" 4
.IX Item "default_crl_hours default_crl_days"
the same as tha \fB\-crlhours\fR n' tha \fB\-crldays\fR options. These
will only be used if neither command line option is present fo' realz. At
least one of these must be present ta generate a \s-1CRL.\s0
.IP "\fBdefault_md\fR" 4
.IX Item "default_md"
the same as tha \fB\-md\fR option. I aint talkin' bout chicken n' gravy biatch. Da message digest ta use. Mandatory.
.IP "\fBdatabase\fR" 4
.IX Item "database"
the text database file ta use. Mandatory. This file must be present
though initially it is ghon be empty.
.IP "\fBunique_subject\fR" 4
.IX Item "unique_subject"
if tha value \fByes\fR is given, tha valid certificate entries up in the
database must have unique subjects, n' you can put dat on yo' toast.  if tha value \fBno\fR is given,
several valid certificate entries may have tha exact same subject.
Da default value is \fByes\fR, ta be compatible wit olda (pre 0.9.8)
versionz of OpenSSL.  But fuck dat shiznit yo, tha word on tha street is dat ta make \s-1CA\s0 certificate roll-over easier,
itz recommended ta use tha value \fBno\fR, especially if combined with
the \fB\-selfsign\fR command line option.
.IP "\fBserial\fR" 4
.IX Item "serial"
a text file containin tha next serial number ta use up in hex. Mandatory.
This file must be present n' contain a valid serial number.
.IP "\fBcrlnumber\fR" 4
.IX Item "crlnumber"
a text file containin tha next \s-1CRL\s0 number ta use up in hex. Da crl number
will be banged up in tha CRLs only if dis file exists, n' you can put dat on yo' toast. If dis file is
present, it must contain a valid \s-1CRL\s0 number.
.IP "\fBx509_extensions\fR" 4
.IX Item "x509_extensions"
the same as \fB\-extensions\fR.
.IP "\fBcrl_extensions\fR" 4
.IX Item "crl_extensions"
the same as \fB\-crlexts\fR.
.IP "\fBpreserve\fR" 4
.IX Item "preserve"
the same as \fB\-preserveDN\fR
.IP "\fBemail_in_dn\fR" 4
.IX Item "email_in_dn"
the same as \fB\-noemailDN\fR. If you want tha \s-1EMAIL\s0 field ta be removed
from tha \s-1DN\s0 of tha certificate simply set dis ta 'no'. If not present
the default is ta allow fo' tha \s-1EMAIL\s0 filed up in tha certificatez \s-1DN.\s0
.IP "\fBmsie_hack\fR" 4
.IX Item "msie_hack"
the same as \fB\-msie_hack\fR
.IP "\fBpolicy\fR" 4
.IX Item "policy"
the same as \fB\-policy\fR. Mandatory. Right back up in yo muthafuckin ass. See tha \fB\s-1POLICY FORMAT\s0\fR section
for mo' shiznit.
.IP "\fBname_opt\fR, \fBcert_opt\fR" 4
.IX Item "name_opt, cert_opt"
these options allow tha format used ta display tha certificate details
when askin tha user ta confirm signin fo' realz. All tha options supported by
the \fBx509\fR utilitizzles \fB\-nameopt\fR n' \fB\-certopt\fR switches can be used
here, except tha \fBno_signame\fR n' \fBno_sigdump\fR is permanently set
and cannot be disabled (this is cuz tha certificate signature cannot
be displayed cuz tha certificate has not been signed at dis point).
.Sp
For convenience tha joints \fBca_default\fR is accepted by both ta produce
a reasonable output.
.Sp
If neither option is present tha format used up in earlier versions of
OpenSSL is used. Y'all KNOW dat shit, muthafucka! Use of tha oldschool format is \fBstrongly\fR discouraged cuz
it only displays fieldz mentioned up in tha \fBpolicy\fR section, mishandles
multicharacta strang types n' do not display extensions.
.IP "\fBcopy_extensions\fR" 4
.IX Item "copy_extensions"
determines how tha fuck extensions up in certificate requests should be handled.
If set ta \fBnone\fR or dis option aint present then extensions are
ignored n' not copied ta tha certificate. If set ta \fBcopy\fR then any
extensions present up in tha request dat is not already present is copied
to tha certificate. If set ta \fBcopyall\fR then all extensions up in the
request is copied ta tha certificate: if tha extension be already present
in tha certificate it is deleted first. Right back up in yo muthafuckin ass. See tha \fB\s-1WARNINGS\s0\fR section before
usin dis option.
.Sp
Da main use of dis option is ta allow a cold-ass lil certificate request ta supply
values fo' certain extensions like fuckin subjectAltName.
.SH "POLICY FORMAT"
.IX Header "POLICY FORMAT"
Da policy section consistz of a set of variablez correspondin to
certificate \s-1DN\s0 fields. If tha value is \*(L"match\*(R" then tha field value
must match tha same field up in tha \s-1CA\s0 certificate. If tha value is
\&\*(L"supplied\*(R" then it must be present. If tha value is \*(L"optional\*(R" then
it may be present fo' realz. Any fieldz not mentioned up in tha policy section
are silently deleted, unless tha \fB\-preserveDN\fR option is set but
this can be regarded mo' of a quirk than intended behaviour.
.SH "SPKAC FORMAT"
.IX Header "SPKAC FORMAT"
Da input ta tha \fB\-spkac\fR command line option be a Netscape
signed hood key n' challenge. This will probably come from
the \fB\s-1KEYGEN\s0\fR tag up in a \s-1HTML\s0 form ta create a freshly smoked up private key. 
It be however possible ta create SPKACs rockin tha \fBspkac\fR utility.
.PP
Da file should contain tha variable \s-1SPKAC\s0 set ta tha value of
the \s-1SPKAC\s0 n' also tha required \s-1DN\s0 components as name value pairs.
If you need ta include tha same component twice then it can be
preceded by a number n' a '.'.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Note: these examplez assume dat tha \fBca\fR directory structure is
already set up n' tha relevant filez already exist. This usually
involves bustin a \s-1CA\s0 certificate n' private key wit \fBreq\fR, a
serial number file n' a empty index file n' placin dem in
the relevant directories.
.PP
To use tha sample configuration file below tha directories demoCA,
demoCA/private n' demoCA/newcerts would be pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \s-1CA\s0
certificate would be copied ta demoCA/cacert.pem n' its private
key ta demoCA/private/cakey.pem fo' realz. A file demoCA/serial would be
created containin fo' example \*(L"01\*(R" n' tha empty index file
demoCA/index.txt.
.PP
Sign a cold-ass lil certificate request:
.PP
.Vb 1
\& openssl ca \-in req.pem \-out newcert.pem
.Ve
.PP
Sign a cold-ass lil certificate request, rockin \s-1CA\s0 extensions:
.PP
.Vb 1
\& openssl ca \-in req.pem \-extensions v3_ca \-out newcert.pem
.Ve
.PP
Generate a \s-1CRL\s0
.PP
.Vb 1
\& openssl ca \-gencrl \-out crl.pem
.Ve
.PP
Sign nuff muthafuckin requests:
.PP
.Vb 1
\& openssl ca \-infilez req1.pem req2.pem req3.pem
.Ve
.PP
Certify a Netscape \s-1SPKAC:\s0
.PP
.Vb 1
\& openssl ca \-spkac spkac.txt
.Ve
.PP
A sample \s-1SPKAC\s0 file (the \s-1SPKAC\s0 line has been truncated fo' clarity):
.PP
.Vb 5
\& SPKAC=MIG0MGAwXDANBgkqhkiG9w0BAQEFAANLADBIAkEAn7PDhCeV/xIxUg8V70YRxK2A5
\& CN=Steve Test
\& emailAddress=steve@openssl.org
\& 0.OU=OpenSSL Group
\& 1.OU=Another Group
.Ve
.PP
A sample configuration file wit tha relevant sections fo' \fBca\fR:
.PP
.Vb 2
\& [ ca ]
\& default_ca      = CA_default            # Da default ca section
\& 
\& [ CA_default ]
\&
\& dir            = ./demoCA              # top dir
\& database       = $dir/index.txt        # index file.
\& new_certs_dir  = $dir/newcerts         # freshly smoked up certs dir
\& 
\& certificate    = $dir/cacert.pem       # Da CA cert
\& serial         = $dir/serial           # serial no file
\& private_key    = $dir/private/cakey.pem# CA private key
\& RANDFILE       = $dir/private/.rand    # random number file
\& 
\& default_days   = 365                   # how tha fuck long ta certify for
\& default_crl_days= 30                   # how tha fuck long before next CRL
\& default_md     = md5                   # md ta use
\&
\& policy         = policy_any            # default policy
\& email_in_dn    = no                    # Don\*(Aqt add tha email tha fuck into cert DN
\&
\& name_opt       = ca_default            # Subject name display option
\& cert_opt       = ca_default            # Certificate display option
\& copy_extensions = none                 # Don\*(Aqt copy extensions from request
\&
\& [ policy_any ]
\& ghettoName            = supplied
\& stateOrProvinceName    = optional
\& organizationName       = optional
\& organizationalUnitName = optional
\& commonName             = supplied
\& emailAddress           = optional
.Ve
.SH "FILES"
.IX Header "FILES"
Note: tha location of all filez can chizzle either by compile time options,
configuration file entries, environment variablez or command line options.
Da joints below reflect tha default joints.
.PP
.Vb 10
\& /usr/local/ssl/lib/openssl.cnf \- masta configuration file
\& ./demoCA                       \- main CA directory
\& ./demoCA/cacert.pem            \- CA certificate
\& ./demoCA/private/cakey.pem     \- CA private key
\& ./demoCA/serial                \- CA serial number file
\& ./demoCA/serial.old            \- CA serial number backup file
\& ./demoCA/index.txt             \- CA text database file
\& ./demoCA/index.txt.old         \- CA text database backup file
\& ./demoCA/certs                 \- certificate output file
\& ./demoCA/.rnd                  \- CA random seed shiznit
.Ve
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
\&\fB\s-1OPENSSL_CONF\s0\fR reflects tha location of masta configuration file it can
be overridden by tha \fB\-config\fR command line option.
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
Da text database index file be a cold-ass lil critical part of tha process n' 
if corrupted it can be hard as fuck ta fix. Well shiiiit, it is theoretically possible
to rebuild tha index file from all tha issued certificates n' a cold-ass lil current
\&\s-1CRL:\s0 however there is no option ta do all dis bullshit.
.PP
V2 \s-1CRL\s0 features like delta CRLs is not currently supported.
.PP
Although nuff muthafuckin requests can be input n' handled at once it is only
possible ta include one \s-1SPKAC\s0 or self signed certificate.
.SH "BUGS"
.IX Header "BUGS"
Da use of a up in memory text database can cause problems when large
numberz of certificates is present cuz, as tha name implies
the database has ta be kept up in memory.
.PP
Da \fBca\fR command straight-up needz rewritin or tha required functionality
exposed at either a cold-ass lil command or intercourse level so a mo' thugged-out utility
(perl script or \s-1GUI\s0) can handle thangs properly. Da scripts \fB\s-1CA\s0.sh\fR and
\&\fB\s-1CA\s0.pl\fR help a lil but not straight-up much.
.PP
Any fieldz up in a request dat is not present up in a policy is silently
deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This do not happen if tha \fB\-preserveDN\fR option is used. Y'all KNOW dat shit, muthafucka! To
enforce tha absence of tha \s-1EMAIL\s0 field within tha \s-1DN,\s0 as suggested by
RFCs, regardless tha contentz of tha request' subject tha \fB\-noemailDN\fR
option can be used. Y'all KNOW dat shit, muthafucka! Da behaviour should be mo' thugged-out and
configurable.
.PP
Cancellin some commandz by refusin ta certify a cold-ass lil certificate can
create a empty file.
.SH "WARNINGS"
.IX Header "WARNINGS"
Da \fBca\fR command is quirky n' at times downright unfriendly.
.PP
Da \fBca\fR utilitizzle was originally meant as a example of how tha fuck ta do thangs
in a \s-1CA.\s0 Dat shiznit was not supposed ta be used as a gangbangin' full blown \s-1CA\s0 itself:
nevertheless some playas is rockin it fo' dis purpose.
.PP
Da \fBca\fR command is effectively a single user command: no lockin is
done on tha various filez n' attempts ta run mo' than one \fBca\fR command
on tha same database can have unpredictable thangs up in dis biatch.
.PP
Da \fBcopy_extensions\fR option should be used wit caution. I aint talkin' bout chicken n' gravy biatch. If care is
not taken then it can be a securitizzle risk. For example if a cold-ass lil certificate
request gotz nuff a funky-ass basicConstraints extension wit \s-1CA:TRUE\s0 n' the
\&\fBcopy_extensions\fR value is set ta \fBcopyall\fR n' tha user do not spot
this when tha certificate is displayed then dis will hand tha requestor
a valid \s-1CA\s0 certificate.
.PP
This thang can be avoided by settin \fBcopy_extensions\fR ta \fBcopy\fR
and includin basicConstraints wit \s-1CA:FALSE\s0 up in tha configuration file.
Then if tha request gotz nuff a funky-ass basicConstraints extension it will be
ignored.
.PP
It be advisable ta also include joints fo' other extensions such
as \fBkeyUsage\fR ta prevent a request supplyin its own joints.
.PP
Additionizzle restrictions can be placed on tha \s-1CA\s0 certificate itself.
For example if tha \s-1CA\s0 certificate has:
.PP
.Vb 1
\& basicConstraints = CA:TRUE, pathlen:0
.Ve
.PP
then even if a cold-ass lil certificate is issued wit \s-1CA:TRUE\s0 it aint gonna be valid.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIreq\fR\|(1), \fIspkac\fR\|(1), \fIx509\fR\|(1), \s-1\fICA\s0.pl\fR\|(1),
\&\fIconfig\fR\|(5), \fIx509v3_config\fR\|(5)
