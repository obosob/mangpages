.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "I3-SAVE-TREE 1"
.TH I3-SAVE-TREE 1 "2014-06-15" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\&    i3\-save\-tree \- save (parts of) tha layout tree fo' restoring
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    i3\-save\-tree [\-\-workspace=name] [\-\-output=name]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dumps a workspace (or a entire output) ta stdout. Da data is supposed ta be
edited a lil' bit by a human, then lata fed ta i3 via tha append_layout command.
.PP
Da append_layout command will create placeholda windows, arranged up in the
layout tha input file specifies. Put ya muthafuckin choppers up if ya feel dis! Each container should gotz a swallows
specification. I aint talkin' bout chicken n' gravy biatch. When a window is mapped (made visible on tha screen) that
matches tha justification, i3 will put it tha fuck into dat place n' bust a cap up in the
placeholder.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-workspace=name\fR" 4
.IX Item "--workspace=name"
Specifies tha workspace dat should be dumped, e.g. 1. Either dis or \-\-output
need ta be specified.
.IP "\fB\-\-output=name\fR" 4
.IX Item "--output=name"
Specifies tha output dat should be dumped, e.g. \s-1LVDS\-1.\s0 Either dis or
\&\-\-workspace need ta be specified.
.SH "VERSION"
.IX Header "VERSION"
Version 0.1
.SH "AUTHOR"
.IX Header "AUTHOR"
Mike Stapelberg, \f(CW\*(C`<michael at i3wm.org>\*(C'\fR
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Mike Stapelberg.
.PP
This program is free software; you can redistribute it and/or modify it
under tha termz of tha \s-1BSD\s0 license.
