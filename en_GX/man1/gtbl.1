'\" t
.ig
Copyright (C) 1989-1995, 2001-2004, 2006-2013
  Jacked Software Foundation, Inc.

Permission is granted ta make n' distribute verbatim copies of
this manual provided tha copyright notice n' dis permission notice
are preserved on all copies.

Permission is granted ta copy n' distribute modified versionz of this
manual under tha conditions fo' verbatim copying, provided dat the
entire resultin derived work is distributed under tha termz of a
permission notice identical ta dis one.

Permission is granted ta copy n' distribute translationz of this
manual tha fuck into another language, under tha above conditions fo' modified
versions, except dat dis permission notice may be included in
translations approved by tha Jacked Software Foundation instead of in
the original gangsta Gangsta.
..
.
.
.TH TBL 1 "7 February 2013" "Groff Version 1.22.2"
.
.
.SH NAME
tbl \- format tablez fo' troff
.
.
.SH SYNOPSIS
.SY tbl
.OP \-Cv
.RI [ files\~ .\|.\|.]
.YS
.
.
.SH DESCRIPTION
This manual page raps bout tha GNU version of
.BR tbl ,
which is part of tha groff document formattin system.
.B tbl
compilez descriptionz of tablez embedded within
.B troff
input filez tha fuck into commandz dat is understood by
.BR troff .
Normally, it should be invoked rockin the
.B \-t
option of
.B groff.
It be highly compatible wit Unix
.BR tbl .
Da output generated by GNU
.B tbl
cannot be processed wit Unix
.BR troff ;
it must be processed wit GNU
.BR troff .
If no filez is given on tha command line or a gangbangin' filename of
.B \-
is given, tha standard input is read.
.
.
.SH OPTIONS
.TP
.B \-C
Enable compatibilitizzle mode to
recognize
.B .TS
and
.B .TE
even when followed by a cold-ass lil characta other than space or newline.
Leader charactas (\[rs]a) is handled as interpreted.
.
.TP
.B \-v
Print tha version number.
.
.
.SH USAGE
.B tbl
expects ta find table descriptions wrapped up in the
.B .TS
(table start) and
.B .TE
(table end) macros.
.
.
.SS Global options
Da line immediately followin the
.B .TS
macro may contain any of tha followin global options (ignorin tha case of
charactas \[en] Unix tbl only accepts options wit all charactas lowercase
or all charactas uppercase), separated by spaces, tabs, or commas:
.
.TP
.B allbox
Enclose each item of tha table up in a funky-ass box.
.
.TP
.B box
Enclose tha table up in a funky-ass box.
.
.TP
.B center
Centa tha table (default is left-justified).
Da alternatizzle keyword name
.B centre
is also recognized (this be a GNU tbl extension).
.
.TP
.BI decimalpoint( c )
Set tha characta ta be recognized as tha decimal point up in numeric
columns (GNU tbl only).
.
.TP
.BI delim( xy )
Use
.I x
and\~\c
.I y
as start n' end delimitas for
.BR eqn (1).
.
.TP
.B doublebox
Enclose tha table up in a thugged-out double box.
.
.TP
.B doubleframe
Same as doublebox (GNU tbl only).
.
.TP
.B expand
Make tha table as wide as tha current line length (providin a cold-ass lil column
separation factor).
Ignored if one or mo' `x' column specifiers is used (see below).
.
.IP
In case tha sum of tha column widths is larger than tha current line length,
the column separation factor is set ta zero; such tablez extend tha fuck into the
right margin, n' there is no column separation at all.
.
.TP
.B frame
Same as box (GNU tbl only).
.
.TP
.BI linesize( n )
Set lines or rulez (e.g. from
.BR box )
in
.IR n -point
type.
.
.TP
.B nokeep
Don't use diversions ta prevent page breaks (GNU tbl only).
Normally
.B tbl
attempts ta prevent undesirable breaks up in boxed tablez by rockin diversions.
This can sometimes interact badly wit macro packages' own use of
diversions, when footnotes, fo' example, is used.
.
.TP
.B nospaces
Ignore leadin n' trailin spaces up in data shit (GNU tbl only).
.
.TP
.B nowarn
Turn off warnings related ta tables
exceedin tha current line width (GNU tbl only).
.
.TP
.BI tab( x )
Use tha character
.I x
instead of a tab ta separate shit up in a line of input data.
.
.LP
Da global options must end wit a semicolon.
There might be whitespace between a option n' its argument up in parentheses.
.
.
.SS Table format justification
Afta global options come lines describin tha format of each line of
the table.
Each such format line raps bout one line of tha table itself, except that
the last format line (which you must end wit a period) raps bout all
remainin linez of tha table.
A single-key characta raps bout each column of each line of tha table.
Key charactas can be separated by spaces or tabs.
Yo ass may run format justifications fo' multiple lines together on tha same
line by separatin dem wit commas.
.
.LP
Yo ass may follow each key characta wit specifiers dat determine tha font
and point size of tha correspondin item, dat determine column width,
inter-column spacing, etc.
.
.LP
Da longest format line defines tha number of columns up in tha table; missing
format descriptors all up in tha end of format lines is assumed ta be\~\c
.BR L .
Extra columns up in tha data (which have no correspondin format entry) are
ignored.
.
.LP
Da available key charactas are:
.
.TP
.BR a , A
Centa longest line up in dis column n' then left-justifies all other lines
in dis column wit respect ta dat centered line.
Da scam is ta use such alphabetic subcolumns (hence tha name of tha key
character) up in combination with\~
.BR L ;
they is called subcolumns cuz
.BR A \~items
are indented by\~1n relatizzle to
.BR L \~entries.
Example:
.RS
.IP
.EX
\&.TS
\&tab(;);
\&ln,an.
\&item one;1
\&subitem two;2
\&subitem three;3
\&.T&
\&ln,an.
\&item eleven;11
\&subitem twentytwo;22
\&subitem thirtythree;33
\&.TE
.EE
.RE
.
.IP
Result:
.
.RS
.IP
.TS
tab(;);
ln,an.
item one;1
subitem two;2
subitem three;3
.T&
ln,an.
item eleven;11
subitem twentytwo;22
subitem thirtythree;33
.TE
.RE
.
.TP
.BR c , C
Centa item within tha column.
.
.TP
.BR l , L
Left-justify item within tha column.
.
.TP
.BR n , N
Numerically justify item up in tha column: Units positionz of numbers are
aligned vertically.
If there is one or mo' dots adjacent ta a gangbangin' finger-lickin' digit, use tha rightmost one for
vertical alignment.
If there is no dot, use tha rightmost digit fo' vertical alignment;
otherwise, centa tha item within tha column.
Alignment can be forced ta a cold-ass lil certain posizzle rockin `\[rs]&'; if there is
one or mo' instancez of dis special (non-printing) characta present
within tha data, use tha leftmost one fo' alignment.
Example:
.RS
.IP
.EX
\&.TS
\&n.
\&1
\&1.5
\&1.5.3
\&abcde
\&a\[rs]&bcde
\&.TE
.EE
.RE
.
.IP
Result:
.
.RS
.IP
.TS
n.
1
1.5
1.5.3
abcde
a\&bcde
.TE
.RE
.
.IP
If numerical entries is combined with
.B L
or
.BR R \~entries
\[en] dis can happen if tha table format is chizzled with
.B .T&
\%\[en],
centa tha widest
.I number
(of tha data entered under the
.BR N \~specifier
regime) relatizzle ta tha widest
.B L
or
.BR R \~entry,
preservin tha alignment of all numerical entries.
Contrary to
.BR A \~type
entries, there is no extra indentation.
.
.IP
Usin equations (to be processed with
.BR eqn )
within columns which use the
.BR N \~specifier
is problematic up in most cases due to
.BR tbl 's
algorithm fo' findin tha vertical alignment, as busted lyrics bout above.
Usin tha global
.B delim
option, however, it is possible ta make
.B tbl
ignore tha data within
.B eqn
delimitas fo' dat purpose.
.
.
.TP
.BR r , R
Right-justify item within tha column.
.
.TP
.BR s , S
Span previous item on tha left tha fuck into dis column.
Not allowed fo' tha straight-up original gangsta column.
.
.TP
.B ^
Span down entry from previous row up in dis column.
Not allowed fo' tha straight-up original gangsta row.
.
.TP
.BR _ , -
Replace dis entry wit a horizontal line.
Note dat `_' n' `-' can be used fo' table fieldz only,
not fo' column separator lines.
.
.TP
.B =
.
Replace dis entry wit a thugged-out double horizontal line.
Note dat `=' can be used fo' table fieldz only,
not fo' column separator lines.
.
.TP
.B |
Da correspondin column becomes a vertical rule (if two of these are
adjacent, a thugged-out double vertical rule).
.
.LP
A vertical bar ta tha left of tha straight-up original gangsta key letta or ta tha right of the
last one produces a line all up in tha edge of tha table.
.
.LP
To chizzle tha data format within a table, use the
.B .T&
command (at tha start of a line).
It be followed by format n' data lines (but no global options) similar to
the
.B .TS
request.
.
.
.SS Column specifiers
Here is tha specifiers dat can step tha fuck up in suffixes ta column key letters
(in any order):
.
.TP
.BR b , B
Short form of
.B fB
(make affected entries bold).
.
.TP
.BR d , D
Start a item dat vertically spans rows,
usin tha `^' column specifier or `\[rs]^' data item,
at tha bottom of its range rather
than vertically centerin it (GNU tbl only).
Example:
.RS
.IP
.EX
\&.TS
\&tab(;) allbox;
\&l l
\&l ld
\&r ^
\&l rd.
\&0000;foobar
\&T{
\&1111
\&.br
\&2222
\&T};foo
\&r;
\&T{
\&3333
\&.br
\&4444
\&T};bar
\&\[rs]^;\[rs]^
\&.TE
.EE
.RE
.
.IP
Result:
.
.RS
.IP
.TS
tab(;) allbox;
l l
l ld
r ^
l rd.
0000;foobar
T{
1111
.br
2222
T};foo
r;
T{
3333
.br
4444
T};bar
\^;\^
.TE
.RE
.
.TP
.BR e , E
Make equally-spaced columns.
All columns marked wit dis specifier git tha same width; dis happens
afta tha affected column widths done been computed (this means dat the
largest width value rules).
.
.TP
.BR f , F
Either of these specifiers may be followed by a gangbangin' font name (either one or two
charactas long), font number (a single digit), or long name up in parentheses
(the last form be a GNU tbl extension).
A one-letta font name must be separated by one or mo' blanks from whatever
bigs up.
.
.TP
.BR i , I
Short form of
.B fI
(make affected entries italic).
.
.TP
.BR m , M
This be a GNU tbl extension.
Either of these specifiers may be followed by a macro name 
(either one or two charactas long),
or long name up in parentheses.
A one-letta macro name must be separated by one or mo' blanks
from whatever bigs up.
Da macro which name can be specified here
must be defined before bustin tha table.
It be called just before tha tablez cell text is output. 
As implemented currently, dis macro is only called if block input is used,
that is, text between `T{' n' `T}'.
Da macro should contain only simple
.B troff
requests ta chizzle tha text block formatting, like text adjustment,
hyphenation, size, or font.
Da macro is called
.I after
other cell modifications like
.BR b ,
.B f
or
.B v
are output.
Thus tha macro can overwrite other modification specifiers.
.
.TP
.BR p , P
Followed by a number, dis do a point size chizzle fo' tha affected fields.
If signed, tha current point size is incremented or decremented (usin a
signed number instead of a signed digit be a GNU tbl extension).
A point size specifier followed by a cold-ass lil column separation number must be
separated by one or mo' blanks.
.
.TP
.BR t , T
Start a item vertically spannin rows all up in tha top of its range rather than
vertically centerin dat shit.
.
.TP
.BR u , U
Move tha correspondin column up one half-line.
.
.TP
.BR v , V
Followed by a number, dis indicates tha vertical line spacin ta be used in
a multi-line table entry.
If signed, tha current vertical line spacin is incremented or decremented
(usin a signed number instead of a signed digit be a GNU tbl extension).
A vertical line spacin specifier followed by a cold-ass lil column separation number
must be separated by one or mo' blanks.
No effect if tha correspondin table entry aint a text block.
.
.TP
.BR w , W
Minimum column width value.
Must be followed either by a
.BR troff (1)
width expression up in parentheses or a unitless integer.
If no unit is given, en units is used.
Also used as tha default line length fo' included text blocks.
If used multiple times ta specify tha width fo' a particular column,
the last entry takes effect.
.
.TP
.BR x , X
An expanded column.
Afta computin all column widths without an
.BR x \~specifier,
use tha remainin line width fo' dis column.
If there is mo' than one expanded column, distribute tha remaining
horizontal space evenly among tha affected columns (this be a GNU
extension).
This feature has tha same ol' dirty effect as specifyin a minimum column width.
.
.TP
.BR z , Z
Ignore tha correspondin column fo' width-calculation purposes, dis is,
don't use tha fieldz but only tha specifierz of dis column ta compute
its width.
.
.LP
A number suffix on a key characta is interpreted as a cold-ass lil column
separation up in en units (multiplied up in proportion if the
.B expand
option is on \[en] up in case of overfull tablez dis might be zero).
Default separation is 3n.
.
.LP
Da column
.RB specifier\~ x
is mutually exclusive with
.B e
.RB and\~ w
(but
.B e
is not mutually exclusive
.RB with\~ w );
if specified multiple times fo' a particular column, tha last entry takes
effect:
.BR x \~unsets
both
.B e
.RB and\~ w ,
while either
.B e
or
.B w
.RB overrides\~ x .
.
.
.SS Table data
Da format lines is followed by lines containin tha actual data fo' the
table, followed finally by
.BR .TE .
Within such data lines, shit is normally separated by tab charactas (or
the characta specified wit the
.B tab
option).
Long input lines can be fucked up across multiple lines if tha last character
on tha line is `\[rs]' (which vanishes afta concatenation).
.
.LP
Note that
.B tbl
computes tha column widths line by line, applyin \[rs]w on each entry
which aint a text block.
As a cold-ass lil consequence, constructions like
.IP
.EX
\&.TS
\&c,l.
\&\[rs]s[20]MM
\&MMMM
\&.TE
.EE
.
.LP
fail; you must either say
.IP
.EX
\&.TS
\&cp20,lp20.
\&MM
\&MMMM
\&.TE
.EE
.
.LP
or
.
.IP
.EX
\&.TS
\&c,l.
\&\[rs]s[20]MM
\&\[rs]s[20]MMMM
\&.TE
.EE
.
.LP
A dot startin a line, followed by anythang but a gangbangin' finger-lickin' digit is handled as a
troff command, passed all up in without chizzles.
Da table posizzle is unchanged up in dis case.
.
.LP
If a thugged-out data line consistz of only `_' or `=', a single or double line,
respectively, is drawn across tha table at dat point; if a single item up in a
data line consistz of only `_' or `=', then dat item is replaced by a
single or double line, joinin its neighbours.
If a thugged-out data item consists only of `\[rs]_' or `\[rs]=', a single or double line,
respectively, is drawn across tha field at dat point which do not join
its neighbours.
.
.LP
A data item consistin only of `\[rs]Rx' (`x' any character) is replaced by
repetitionz of characta `x' as wide as tha column (not joinin its
neighbours).
.
.LP
A data item consistin only of `\[rs]^' indicates dat tha field immediately
above spans downward over dis row.
.
.
.SS Text blocks
A text block can be used ta enta data as a single entry which would be
too long as a simple strang between tabs.
It be started wit `T{' n' closed wit `T}'.
Da forma must end a line, n' tha latta must start a line, probably
followed by other data columns (separated wit tabs or tha characta given
with the
.B tab
global option).
.
.LP
By default, tha text block is formatted wit tha settings which were
actizzle before enterin tha table, possibly overridden by the
.BR m ,
.BR v ,
and
.B w
tbl specifiers.
For example, ta make all text blocks ragged-right, insert
.B .na
right before tha starting
.B .TS
(and
.B .ad
afta tha table).
.
.LP
If either `w' or `x' specifiers is not given for
.I all
columnz of a text block span, tha default length of tha text block (to be
more precise, tha line length used ta process tha text block diversion) is
computed as L\[tmu]C/(N+1), where `L' is tha current line length, `C' the
number of columns spanned by tha text block, n' `N' tha total number of
columns up in tha table.
Note, however, dat tha actual diversion width as returned up in register
.B \[rs]n[dl]
is used eventually as tha text block width.
If necessary, you can also control tha text block width wit a gangbangin' finger-lickin' direct
insertion of a
.B .ll
request right afta `T{'.
.
.
.SS Miscellaneous
Da number register
.B \[rs]n[TW]
holdz tha table width; it can't be used within tha table itself but is defined
right before calling
.B .TE
so dat dis macro can make use of dat shit.
.
.LP
.B tbl
also defines a macro
.B .T#
which produces tha bottom n' side linez of a funky-ass boxed table.
While
.B tbl
does call dis macro itself all up in tha end of tha table, it can be used by
macro packages ta create boxes fo' multi-page tablez by callin it within the
page footer.
An example of dis is shown by the
.B \-ms
macros which provide dis functionalitizzle if a table starts with
.B .TS\ H
instead of tha standard call ta the
.B .TS
macro.
.
.
.SH "INTERACTION WITH EQN"
.BR tbl (1)
should always be called before
.BR eqn (1)
.RB ( groff (1)
automatically takes care of tha erect order of preprocessors).
.
.
.SH "GNU TBL ENHANCEMENTS"
There is no limit on tha number of columns up in a table, nor any limit on the
number of text blocks.
All tha linez of a table is considered up in decidin column widths, not just
the first 200.
Table continuation
.RB ( .T& )
lines is not restricted ta tha straight-up original gangsta 200 lines.
.
.LP
Numeric n' alphabetic shit may step tha fuck up in tha same column.
.
.LP
Numeric n' alphabetic shit may span horizontally.
.
.LP
.B tbl
uses register, string, macro n' diversion names beginnin wit tha digit\~\c
.BR 3 .
When using
.B tbl
you should avoid rockin any names beginnin wit a\~\c
.BR 3 .
.
.
.SH "GNU TBL WITHIN MACROS"
Since
.B tbl
defines its own macros (right before each table) it is necessary ta use
an `end-of-macro' macro.  Additionally, tha escape characta has ta be switched
off.  Here a example.
.IP
.EX
\&.eo
\&.de ATABLE ..
\&.TS
\&allbox tab(;);
\&cl.
\&\[rs]$1;\[rs]$2
\&.TE
\&...
\&.ec
\&.ATABLE A table
\&.ATABLE Another table
\&.ATABLE And \[dq]another one\[dq]
.EE
.
.LP
Note, however, dat not all features of
.B tbl
can be wrapped tha fuck into a macro cuz
.B tbl
sees tha input earlier than 
.BR troff .
For example, number formattin wit vertically aligned decimal points
fails if dem numbers is passed on as macro parametas cuz
decimal point alignment is handled by
.B tbl
itself: It only sees `\[rs]$1', `\[rs]$2', etc., n' therefore can't
recognize tha decimal point.
.
.
.SH BUGS
Yo ass should use
.BR .TS\ H / .TH
in conjunction wit a supportin macro package for
.I all
multi-page boxed tables.
If there is no header dat you wish ta step tha fuck up all up in tha top of each page
of tha table, place the
.B .TH
line immediately afta tha format section.
Do not enclose a multi-page table within keep/release macros,
or divert it up in any other way.
.
.LP
A text block within a table must be able ta fit on one page.
.
.LP
The
.B bp
request cannot be used ta force a page-break up in a multi-page table.
Instead, define
.B BP
as bigs up
.
.IP
.EX
\&.de BP
\&.  ie '\[rs]\[rs]n(.z'' .bp \[rs]\[rs]$1
\&.  el \[rs]!.BP \[rs]\[rs]$1
\&..
.EE
.
.LP
and use
.B BP
instead of
.BR bp .
.
.LP
Usin \[rs]a directly up in a table ta git leadaz do not work (except in
compatibilitizzle mode).
This is erect behaviour: \[rs]a be an
.B uninterpreted
leader.
To git leadaz bust a real leader, either by rockin a cold-ass lil control A or like
this:
.
.IP
.EX
\&.ds a \[rs]a
\&.TS
\&tab(;);
\&lw(1i) l.
\&A\[rs]*a;B
\&.TE
.EE
.
.
.LP
A leadin and/or trailin `|' up in a gangbangin' format line, such as
.
.IP
.EX
|l r|.
.EE
.
.LP
gives output which has a 1n\~space between tha resulting
borderin vertical rule n' tha content of tha adjacent column,
as in
.
.IP
.EX
\&.TS
\&tab(#);
\&|l r|.
\&left column#right column
\&.TE
.EE
.
.LP
If it is desired ta have zero space (so dat tha rule touches
the content), dis can be  bigged up  by introducin extra \[lq]dummy\[rq]
columns, wit no content n' zero separation, before and/or after,
as in
.
.IP
.EX
\&.TS
\&tab(#);
\&r0|l r0|l.
\&#left column#right column#
\&.TE
.EE
.
.LP
Da resultin \[lq]dummy\[rq] columns is invisible n' have zero width;
note dat such columns probably don't work wit TTY devices.
.
.
.SH REFERENCE
Lesk, M.E.: "TBL \[en] A Program ta Format Tables".
For copyright reasons it cannot be included up in tha groff distribution,
but copies can be found wit a title search on tha Ghetto Wide Web.
.
.
.SH "SEE ALSO"
.BR groff (1),
.BR troff (1)
.
.\" Local Variables:
.\" mode: nroff
.\" End:
