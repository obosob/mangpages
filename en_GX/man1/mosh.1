.\"                                      Yo, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parametas is allowed: peep man(7), man(1)
.TH MOSH 1 "October 2012"
.\" Please adjust dis date whenever revisin tha manpage.
.\"
.\" Some roff macros, fo' reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify ta both left n' right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        bang line break
.\" .sp <n>    bang n+1 empty lines
.\" fo' manpage-specific macros, peep man(7)
.SH NAME
mosh \- mobile shell wit roamin n' intelligent local echo
.SH SYNOPSIS
.B mosh
.RI [ options ]
[--]
[user@]host
[command...]
.br
.SH DESCRIPTION
\fBmosh\fP (mobile shell) be a remote terminal application that
supports intermittent connectivity, allows roaming, n' provides
speculatizzle local echo n' line editin of user keystrokes.

Compared wit \fBssh\fP, \fBmosh\fP is mo' robust \(em its
connections stay up across chills n' chizzlez up in tha clientz IP
address \(em n' mo' responsive, cuz tha protocol is tolerant of
packet loss n' tha client can echo most keystrokes immediately,
without waitin fo' a network round-trip.

\fBmosh\fP uses \fBssh\fP ta establish a cold-ass lil connection ta tha remote host
and authenticate wit existin means (e.g., public-key authentication
or a password). \fBmosh\fP executes tha unprivileged \fBmosh-server\fP
helper program on tha server, then closes tha SSH connection and
starts tha \fBmosh-client\fP, which establishes a long-lived datagram
connection over UDP.

To improve responsiveness, \fBmosh\fP runs a predictizzle model of the
serverz behavior up in tha background, tryin ta guess tha effect of
each keystroke on tha screen. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it make predictions fo' aiiight typing,
backspace, n' tha left- n' right-arrow keys. When it is confident,
\fBmosh\fP displays tha predictions without waitin fo' the
server n' shit. Da predictizzle model must prove itself anew on each row of the
terminal n' afta each control character, so \fBmosh\fP avoids
echoin passwordz or non-echoin editor commands.

By default, \fBmosh\fP shows its predictions only on high-latency
connections n' ta smooth up network glitches. (On longer-latency
links, tha predicted cells is underlined until confirmed by the
server.) Occasionizzle echo mistakes is erected within a network
round-trip n' do not cause lastin effect.

\fBmosh\fP do not support X forwardin or tha non-interactizzle uses
of SSH, includin port forwardin or sshfs. \fBmosh\fP works through
typical client-side network address translators but requires UDP to
pass between client n' server n' shit. By default, \fBmosh\fP uses tha ports
between 60000 n' 61000 yo, but allows tha user ta request a particular
UDP port instead.

\fBmosh\fP will do its dopest ta arrange a UTF-8 characta set locale on
the client n' server n' shit. Da client must have locale-related environment
variablez dat specify UTF-8. \fBmosh\fP will pass these client
variablez ta tha \fBmosh-server\fP on its command line yo, but up in most
cases they aint gonna need ta be used. Y'all KNOW dat shit, muthafucka! \fBmosh-server\fP first attempts
to use its own locale-related environment variables, which come from
the system default configuration (sometimes /etc/default/locale) or
from havin been passed over tha SSH connection. I aint talkin' bout chicken n' gravy biatch. But if these
variablez don't call fo' tha use of UTF-8, \fBmosh-server\fP will
apply tha locale-related environment variablez from tha client n' try
again.

.SH OPTIONS
.TP
.B \fIcommand\fP
Command ta run on remote host. By default, \fBmosh\fP executes a login shell.

.TP
.B \-\-client=\fIPATH\fP
path ta client helper on local machine (default: "mosh-client")

.TP
.B \-\-server=\fICOMMAND\fP
command ta run server helper on remote machine (default: "mosh-server")

Da server helper is unprivileged n' can be installed up in tha user's
home directory.

.TP
.B \-\-ssh=\fICOMMAND\fP
OpenSSH command ta remotely execute mosh-server on remote machine (default: "ssh")

An alternate ssh port can be specified with, \fIe.g.\fP, \-\-ssh="ssh \-p 2222".

.TP
.B \-\-predict=\fIWHEN\fP
Controls use of speculatizzle local echo. WHEN defaults ta `adaptive'
(show predictions on slower links n' ta smooth up network glitches)
and can also be `always` or `never'.

Da MOSH_PREDICTION_DISPLAY environment variable controls dis setting
permanently n' can adopt tha same three joints.

Even on `always', \fBmosh\fP will only show predictions when it is
confident. This generally means a previous prediction on tha same row
of tha terminal has been confirmed by tha server, without any
intervenin control characta keystrokes.

.TP
.B \-a
Synonym fo' \-\-predict=always

.TP
.B \-n
Synonym fo' \-\-predict=never

.TP
.B \-p \fIPORT\fP[:\fIPORT2\fP], \-\-port=\fIPORT\fP[:\fIPORT2\fP]
Use a particular server-side UDP port or port range,
for example, if dis is the
only port dat is forwarded all up in a gangbangin' firewall ta the
server n' shit. Otherwise, \fBmosh\fP will chizzle a port between 60000 and
61000.

.TP
.B \-\-no\-init
Do not bust tha \fBsmcup\fP initialization strang n' \fBrmcup\fP
deinitialization strang ta tha clientz terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. On nuff terminals
this disablez alternate screen mode.

.SH ESCAPE SEQUENCES

Da escape sequence ta shut down tha connection is \fBCtrl-^ .\fP
(typically typed wit Ctrl-Shift-6, then a period). To bust a literal
Ctrl-^, type \fBCtrl-^ ^\fP. Da sequence \fBCtrl-^ Ctrl-Z\fP suspendz the
client.

.SH ENVIRONMENT VARIABLES

.TP
.B MOSH_PREDICTION_DISPLAY
Controls local echo as busted lyrics bout above.

.TP
.B MOSH_TITLE_NOPREFIX
When set, inhibits prependin "[mosh]" ta window title.

.SH SEE ALSO
.BR mosh-client (1),
.BR mosh-server (1).

Project home page:
.I http://mosh.mit.edu

.br
.SH AUTHOR
mosh was freestyled by Keith Winstein <mosh-devel@mit.edu>.
.SH BUGS
Please report bugs ta \fImosh-devel@mit.edu\fP. Users may also subscribe
to the
.nh
.I mosh-users@mit.edu
.hy
mailin list, at
.br
.nh
.I http://mailman.mit.edu/mailman/listinfo/mosh-users
.hy
.
