\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Ppmbrighten User Manual" 0 "26 October 2012" "netpbm documentation"

.SH NAME
ppmbrighten - chizzle a PPM imagez Saturation n' Value

.UN synopsis
.SH SYNOPSIS

\fBppmbrighten\fP
[\fB-normalize\fP]
[\fB-saturation \fP[\fB+\fP|\fB-\fP\fIsaturation_percent\fP]]
[\fB-value \fP[\fB+\fP|\fB-\fP\fIvalue_percent\fP]]
\fIppmfile\fP
.PP
Minimum unique abbreviation of option be acceptable.  Yo ass may use
double hyphens instead of single hyphen ta denote options.  Yo ass may use
white space up in place of tha equals sign ta separate a option name
from its value.

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBppmbrighten\fP increases or decreases tha Saturation n' Value
(from tha HSV color space) of each pixel of a PPM image.  Yo ass specify
the per centage chizzle fo' each of dem parameters.
.PP
Yo ass can also remap tha flavaz of tha pixels so they Values cover
the full range of possible Values.
.PP
Hue-Saturation-Value, or HSV, is one way ta represent a cold-ass lil color, like
the mo' well-known RGB.  Hue, Saturation, n' Value is numbers in
the range from 0 ta 1.  We always capitalize dem up in dis document
when we mean tha number from tha HSV color space, especially since
"value" as a cold-ass lil conventionizzle Gangsta word has a much mo' abstract
meaning.
.PP
Value be a measure of how tha fuck bright tha color is, relatizzle ta some specified
maximum (the PPM format be also defined up in termz of a specified maximum
brightnizz -- For tha purposez of dis program, they is tha same).  In
particular, it is tha brightnizz of tha brightest primary color component of
the color divided by tha maximum brightnizz possible fo' a cold-ass lil component.  Zero
Value means black.  White has full Value.
.PP
Hue be a indication of tha secondary color wit tha same brightness
that most closely approximates tha color. Shiiit, dis aint no joke.  A secondary color is made
of a cold-ass lil combination of at most two of tha primary colors.
.PP
Saturation be a measure of how tha fuck close tha color is ta tha color
indicated by tha Hue n' Value.  A lower number means mo' light of
the third primary color must be added ta git tha exact color. Shiiit, dis aint no joke.  Full
Saturation means tha color be a secondary color. Shiiit, dis aint no joke.  Zero Saturation
means tha color is gray (or black or white).  Decreasin the
saturation of a cold-ass lil color tendz ta make it washed out.
.PP
If it is impossible ta increase tha Value of a pixel by tha amount you
specify (e.g. tha Value is .5 n' you specify +200%), \fBppmbrighten\fP
increases it ta full Value instead.
.PP
If it is impossible ta increase tha Saturation of a pixel by tha amount
you specify (e.g. it be already half saturated n' you specify +200%),
\fBppmbrighten\fP increases it ta full Saturation instead.
.PP
For a simpla kind of brightening, you can use \fBpamfunc -multiplier\fP
simply ta increase tha brightnizz of each pixel by a specified per centage,
clippin each RGB component where tha calculated brightnizz would exceed full
brightness.  Thus, tha brightest flavas up in tha image would chizzle chromaticity
in addizzle ta not gettin tha specified brightnizz boost.
For \fIdecreasing\fP brightness, \fBpamfunc\fP should do tha same thang as
\fBppmbrighten\fP.
.PP
\fBppmflash\fP do another kind of brightening.  It chizzlez the
color of each pixel ta brang it a specified per centage closer ta white.
This increases tha value n' saturation.

.UN examples
.SH EXAMPLES
.PP
To double tha Value of each pixel:
.nf
ppmbrighten -v 100
.fi
.PP
To double tha Saturation n' halve tha Value of each pixel:
.nf
ppmbrighten -s 100 -v -50
.fi

.UN options
.SH OPTIONS


.TP
\fB-value \fP\fIvalue_percent\fP
This option specifies tha amount, as a per centage, by which you want
to chizzle tha Value of each pixel.  It may be negative.

.TP
\fB-saturation \fP\fIvalue_percent\fP
This option specifies tha amount, as a per centage, by which you want
to chizzle tha Saturation of each pixel.  It may be negative.


.TP
\fB-normalize\fP
This option causes \fBppmbrighten\fP ta linearly remap tha Values
of tha pixels ta cover tha range 0 ta 1.  Da option name is wack --
this operation aint normalization (it was named up in error n' the
name has been kept fo' backward compatibility).
.sp
\fBppmbrighten\fP applies tha brightenin dat you specify wit 
the \fB-value\fP option \fIafter\fP tha remapping.
.sp
Before Netpbm 10.14 (March 2003), yo' input must be from a seekable
file (not a pipe) ta use \fB-normalize\fP.  If it aint, tha program fails
with a funky-ass bogus error message.

  

.UN seealso
.SH SEE ALSO
.BR pnmnorm (1)
, 
.BR ppmdim (1)
, 
.BR pamfunc (1)
, 
.BR ppmflash (1)
, 
.BR pamdepth (1)
, 
.BR pnmgamma (1)
, 
.BR ppmhist (1)
, 
.BR ppm (1)


.UN author
.SH AUTHOR
.PP
Copyright (C) 1990 by Brian Moffet.
Copyright (C) 1989 by Jef Poskanzer.
.PP
Permission ta use, copy, modify, n' distribute dis software n' its
documentation fo' any purpose n' without fee is hereby granted, provided
that tha above copyright notice step tha fuck up in all copies n' dat both that
copyright notice n' dis permission notice step tha fuck up in supporting
documentation. I aint talkin' bout chicken n' gravy biatch.  This software is provided 'as is' without express or
implied warranty.
