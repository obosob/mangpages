'\" t
.\"     Title: git-pack-objects
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-PACK\-OBJECTS" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-pack-objects \- Smoke a packed archive of objects
.SH "SYNOPSIS"
.sp
.nf
\fIgit pack\-objects\fR [\-q | \-\-progress | \-\-all\-progress] [\-\-all\-progress\-implied]
        [\-\-no\-reuse\-delta] [\-\-delta\-base\-offset] [\-\-non\-empty]
        [\-\-local] [\-\-incremental] [\-\-window=<n>] [\-\-depth=<n>]
        [\-\-revs [\-\-unpacked | \-\-all]] [\-\-stdout | base\-name]
        [\-\-keep\-true\-parents] < object\-list
.fi
.sp
.SH "DESCRIPTION"
.sp
Readz list of objects from tha standard input, n' writes a packed archive wit specified base\-name, or ta tha standard output\&.
.sp
A packed archive be a efficient way ta transfer a set of objects between two repositories as well as a access efficient archival format\&. In a packed archive, a object is either stored as a cold-ass lil compressed whole or as a gangbangin' finger-lickin' difference from some other object\&. Da latta is often called a thugged-out delta\&.
.sp
Da packed archive format (\&.pack) is designed ta be self\-contained so dat it can be unpacked without any further shiznit\&. Therefore, each object dat a thugged-out delta dependz upon must be present within tha pack\&.
.sp
A pack index file (\&.idx) is generated fo' fast, random access ta tha objects up in tha pack\&. Placin both tha index file (\&.idx) n' tha packed archive (\&.pack) up in tha pack/ subdirectory of $GIT_OBJECT_DIRECTORY (or any of tha directories on $GIT_ALTERNATE_OBJECT_DIRECTORIES) enablez Git ta read from tha pack archive\&.
.sp
Da \fIgit unpack\-objects\fR command can read tha packed archive n' expand tha objects contained up in tha pack tha fuck into "one\-file one\-object" format; dis is typically done by tha smart\-pull commandz when a pack is pimped on\-the\-fly fo' efficient network transhiznit by they peers\&.
.SH "OPTIONS"
.PP
base\-name
.RS 4
Write tha fuck into a pair of filez (\&.pack n' \&.idx), rockin <base\-name> ta determine tha name of tha pimped file\&. When dis option is used, tha two filez is freestyled up in <base\-name>\-<SHA\-1>\&.{pack,idx} files\&. <SHA\-1> be a hash based on tha pack content n' is freestyled ta tha standard output of tha command\&.
.RE
.PP
\-\-stdout
.RS 4
Write tha pack contents (what would done been freestyled ta \&.pack file) up ta tha standard output\&.
.RE
.PP
\-\-revs
.RS 4
Read tha revision arguments from tha standard input, instead of individual object names\&. Da revision arguments is processed tha same way as
\fIgit rev\-list\fR
with the
\-\-objects
flag uses its
commit
arguments ta build tha list of objects it outputs\&. Da objects on tha resultin list is packed\&.
.RE
.PP
\-\-unpacked
.RS 4
This implies
\-\-revs\&. When processin tha list of revision arguments read from tha standard input, limit tha objects packed ta dem dat is not already packed\&.
.RE
.PP
\-\-all
.RS 4
This implies
\-\-revs\&. In addizzle ta tha list of revision arguments read from tha standard input, pretend as if all refs under
refs/
are specified ta be included\&.
.RE
.PP
\-\-include\-tag
.RS 4
Include unasked\-for annotated tags if tha object they reference was included up in tha resultin packfile\&. This can be useful ta bust freshly smoked up tags ta natizzle Git clients\&.
.RE
.PP
\-\-window=<n>, \-\-depth=<n>
.RS 4
These two options affect how tha fuck tha objects contained up in tha pack is stored rockin delta compression\&. Da objects is first internally sorted by type, size n' optionally names n' compared against tha other objects within \-\-window ta peep if rockin delta compression saves space\&. \-\-depth limits tha maximum delta depth; makin it too deep affects tha performizzle on tha unpacker side, cuz delta data need ta be applied dat nuff times ta git ta tha necessary object\&. Da default value fo' \-\-window is 10 n' \-\-depth is 50\&.
.RE
.PP
\-\-window\-memory=<n>
.RS 4
This option serves up a additionizzle limit on top of
\-\-window; tha window size will dynamically scale down so as ta not take up mo' than
\fI<n>\fR
bytes up in memory\&. This is useful up in repositories wit a mix of big-ass n' lil' small-ass objects ta not run outta memory wit a big-ass window yo, but still be able ta take advantage of tha big-ass window fo' tha smalla objects\&. Da size can be suffixed wit "k", "m", or "g"\&.
\-\-window\-memory=0
makes memory usage unlimited, which is tha default\&.
.RE
.PP
\-\-max\-pack\-size=<n>
.RS 4
Maximum size of each output pack file\&. Da size can be suffixed wit "k", "m", or "g"\&. Da minimum size allowed is limited ta 1 MiB\&. If specified, multiple packfilez may be pimped\&. Da default is unlimited, unless tha config variable
pack\&.packSizeLimit
is set\&.
.RE
.PP
\-\-honor\-pack\-keep
.RS 4
This flag causes a object already up in a local pack dat has a \&.keep file ta be ignored, even if it would have otherwise been packed\&.
.RE
.PP
\-\-incremental
.RS 4
This flag causes a object already up in a pack ta be ignored even if it would have otherwise been packed\&.
.RE
.PP
\-\-local
.RS 4
This flag causes a object dat is borrowed from a alternate object store ta be ignored even if it would have otherwise been packed\&.
.RE
.PP
\-\-non\-empty
.RS 4
Only create a packed archive if it would contain at least one object\&.
.RE
.PP
\-\-progress
.RS 4
Progress status is reported on tha standard error stream by default when it be attached ta a terminal, unless \-q is specified\&. This flag forces progress status even if tha standard error stream aint pimped up ta a terminal\&.
.RE
.PP
\-\-all\-progress
.RS 4
When \-\-stdout is specified then progress report is displayed durin tha object count n' compression phases but inhibited durin tha write\-out phase\&. Da reason is dat up in some cases tha output stream is directly linked ta another command which may wish ta display progress statuz of its own as it processes incomin pack data\&. This flag is like \-\-progress except dat it forces progress report fo' tha write\-out phase as well even if \-\-stdout is used\&.
.RE
.PP
\-\-all\-progress\-implied
.RS 4
This is used ta imply \-\-all\-progress whenever progress display be activated\&. Unlike \-\-all\-progress dis flag don\(cqt straight-up force any progress display by itself\&.
.RE
.PP
\-q
.RS 4
This flag make tha command not ta report its progress on tha standard error stream\&.
.RE
.PP
\-\-no\-reuse\-delta
.RS 4
When bustin a packed archive up in a repository dat has existin packs, tha command reuses existin deltas\&. This sometimes thangs up in dis biatch up in a slightly suboptimal pack\&. This flag  drops some lyrics ta tha command not ta reuse existin deltas but compute dem from scratch\&.
.RE
.PP
\-\-no\-reuse\-object
.RS 4
This flag  drops some lyrics ta tha command not ta reuse existin object data at all, includin non deltified object, forcin recompression of every last muthafuckin thang\&. This implies \-\-no\-reuse\-delta\&. Useful only up in tha obscure case where wholesale enforcement of a gangbangin' finger-lickin' different compression level on tha packed data is desired\&.
.RE
.PP
\-\-compression=<n>
.RS 4
Specifies compression level fo' newly\-compressed data up in tha generated pack\&. If not specified, pack compression level is determined first by pack\&.compression, then by core\&.compression, n' defaults ta \-1, tha zlib default, if neither is set\& fo' realz. Add \-\-no\-reuse\-object if you wanna force a uniform compression level on all data no matta tha source\&.
.RE
.PP
\-\-thin
.RS 4
Smoke a "thin" pack by omittin tha common objects between a sender n' a receiver up in order ta reduce network transfer\&. This option only make sense up in conjunction wit \-\-stdout\&.
.sp
Note: A thin pack violates tha packed archive format by omittin required objects n' is thus unusable by Git without makin it self\-contained\&. Use
git index\-pack \-\-fix\-thin
(see
\fBgit-index-pack\fR(1)) ta restore tha self\-contained property\&.
.RE
.PP
\-\-delta\-base\-offset
.RS 4
A packed archive can express tha base object of a thugged-out delta as either a 20\-byte object name or as a offset up in tha stream yo, but ancient versionz of Git don\(cqt KNOW tha latter\&. By default,
\fIgit pack\-objects\fR
only uses tha forma format fo' betta compatibility\&. This option allows tha command ta use tha latta format fo' compactness\&. Dependin on tha average delta chain length, dis option typically shrinks tha resultin packfile by 3\-5 per\-cent\&.
.sp
Note: Porcelain commandz such as
git gc
(see
\fBgit-gc\fR(1)),
git repack
(see
\fBgit-repack\fR(1)) pass dis option by default up in modern Git when they put objects up in yo' repository tha fuck into pack files\&. Right back up in yo muthafuckin ass. So do
git bundle
(see
\fBgit-bundle\fR(1)) when it creates a funky-ass bundle\&.
.RE
.PP
\-\-threads=<n>
.RS 4
Specifies tha number of threadz ta spawn when searchin fo' dopest delta matches\&. This requires dat pack\-objects be compiled wit pthreadz otherwise dis option is ignored wit a warning\&. This is meant ta reduce packin time on multiprocessor machines\&. Da required amount of memory fo' tha delta search window is however multiplied by tha number of threads\&. Right back up in yo muthafuckin ass. Specifyin 0 will cause Git ta auto\-detect tha number of CPU\(cqs n' set tha number of threadz accordingly\&.
.RE
.PP
\-\-index\-version=<version>[,<offset>]
.RS 4
This is intended ta be used by tha test suite only\&. Well shiiiit, it allows ta force tha version fo' tha generated pack index, n' ta force 64\-bit index entries on objects located above tha given offset\&.
.RE
.PP
\-\-keep\-true\-parents
.RS 4
With dis option, muthafathas dat is hidden by grafts is packed nevertheless\&.
.RE
.SH "SEE ALSO"
.sp
\fBgit-rev-list\fR(1) \fBgit-repack\fR(1) \fBgit-prune-packed\fR(1)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
