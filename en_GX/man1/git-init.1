'\" t
.\"     Title: git-init
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-INIT" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-init \- Smoke a empty Git repository or reinitialize a existin one
.SH "SYNOPSIS"
.sp
.nf
\fIgit init\fR [\-q | \-\-quiet] [\-\-bare] [\-\-template=<template_directory>]
          [\-\-separate\-git\-dir <git dir>]
          [\-\-shared[=<permissions>]] [directory]
.fi
.sp
.SH "DESCRIPTION"
.sp
This command creates a empty Git repository \- basically a \&.git directory wit subdirectories fo' objects, refs/heads, refs/tags, n' template files\& fo' realz. An initial HEAD file dat references tha HEAD of tha masta branch be also pimped\&.
.sp
If tha $GIT_DIR environment variable is set then it specifies a path ta use instead of \&./\&.git fo' tha base of tha repository\&.
.sp
If tha object storage directory is specified via tha $GIT_OBJECT_DIRECTORY environment variable then tha sha1 directories is pimped underneath \- otherwise tha default $GIT_DIR/objects directory is used\&.
.sp
Hustlin \fIgit init\fR up in a existin repository is safe\&. Well shiiiit, it aint gonna overwrite thangs dat is already there\&. Da primary reason fo' rerunnin \fIgit init\fR is ta pick up newly added templates (or ta move tha repository ta another place if \-\-separate\-git\-dir is given)\&.
.SH "OPTIONS"
.PP
\-q, \-\-quiet
.RS 4
Only print error n' warnin lyrics, all other output is ghon be suppressed\&.
.RE
.PP
\-\-bare
.RS 4
Smoke a funky-ass bare repository\&. If GIT_DIR environment aint set, it is set ta tha current hustlin directory\&.
.RE
.PP
\-\-template=<template_directory>
.RS 4
Specify tha directory from which templates is ghon be used\&. (See tha "TEMPLATE DIRECTORY" section below\&.)
.RE
.PP
\-\-separate\-git\-dir=<git dir>
.RS 4
Instead of initializin tha repository where it is supposed ta be, place a gangbangin' filesytem\-agnostic Git symbolic link there, pointin ta tha specified path, n' initialize a Git repository all up in tha path\&. Da result is Git repository can be separated from hustlin tree\&. If dis is reinitialization, tha repository is ghon be moved ta tha specified path\&.
.RE
.PP
\-\-shared[=(false|true|umask|group|all|world|everybody|0xxx)]
.RS 4
Specify dat tha Git repository is ta be shared amongst nuff muthafuckin users\&. This allows playas belongin ta tha same crew ta push tha fuck into dat repository\&. When specified, tha config variable "core\&.sharedRepository" is set so dat filez n' directories under
$GIT_DIR
are pimped wit tha axed permissions\&. When not specified, Git will use permissions reported by umask(2)\&.
.RE
.sp
Da option can have tha followin joints, defaultin ta \fIgroup\fR if no value is given:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIumask\fR
(or
\fIfalse\fR): Use permissions reported by umask(2)\&. Da default, when
\-\-shared
is not specified\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIgroup\fR
(or
\fItrue\fR): Make tha repository group\-writable, (and g+sx, since tha git crew may be not tha primary crew of all users)\&. This is used ta loosen tha permissionz of a otherwise safe umask(2) value\&. Note dat tha umask still applies ta tha other permission bits (e\&.g\&. if umask is
\fI0022\fR, using
\fIgroup\fR
will not remove read privileges from other (non\-group) users)\&. Right back up in yo muthafuckin ass. See
\fI0xxx\fR
for how tha fuck ta exactly specify tha repository permissions\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIall\fR
(or
\fIworld\fR
or
\fIeverybody\fR): Same as
\fIgroup\fR yo, but make tha repository readable by all users\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fI0xxx\fR:
\fI0xxx\fR
is a octal number n' each file gonna git mode
\fI0xxx\fR\&.
\fI0xxx\fR
will override users\(aq umask(2) value (and not only loosen permissions as
\fIgroup\fR
and
\fIall\fR
does)\&.
\fI0640\fR
will create a repository which is group\-readable yo, but not group\-writable or accessible ta others\&.
\fI0660\fR
will create a repo dat is readable n' writable ta tha current user n' crew yo, but inaccessible ta others\&.
.RE
.sp
By default, tha configuration flag receive\&.denyNonFastForwardz is enabled up in shared repositories, so dat you cannot force a non fast\-forwardin push tha fuck into it\&.
.sp
If you name a (possibly non\-existent) directory all up in tha end of tha command line, tha command is run inside tha directory (possibly afta bustin it)\&.
.SH "TEMPLATE DIRECTORY"
.sp
Da template directory gotz nuff filez n' directories dat is ghon be copied ta tha $GIT_DIR afta it is pimped\&.
.sp
Da template directory used will (in order):
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da argument given wit the
\-\-template
option\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da contentz of the
$GIT_TEMPLATE_DIR
environment variable\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The
init\&.templatedir
configuration variable\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da default template directory:
/usr/share/git\-core/templates\&.
.RE
.sp
Da default template directory includes some directory structure, some suggested "exclude patterns", n' copiez of sample "hook" files\&. Da suggested patterns n' hook filez is all modifiable n' extensible\&.
.SH "EXAMPLES"
.PP
Start a freshly smoked up Git repository fo' a existin code base
.RS 4
.sp
.if n \{\
.RS 4
.\}
.nf
$ cd /path/to/my/codebase
$ git init      \fB(1)\fR
$ git add \&.     \fB(2)\fR
.fi
.if n \{\
.RE
.\}
.sp
\fB1. \fRprepare /path/to/my/codebase/\&.git directory
.br
\fB2. \fRadd all existin file ta tha index
.br
.RE
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
