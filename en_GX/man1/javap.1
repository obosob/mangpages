." Copyright (c) 1994, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH javap 1 "16 Mar 2012"

.LP
.SH "Name"
javap \- Da Java Class File Disassembler
.LP
.LP
Disassemblez class files.
.LP
.SH "SYNOPSIS"
.LP
.nf
\f3
.fl
javap [ \fP\f3options\fP\f3 ] classes
.fl
\fP
.fi

.LP
.SH "DESCRIPTION"
.LP
.LP
Da \f3javap\fP command disassemblez one or mo' class files. Its output dependz on tha options used. Y'all KNOW dat shit, muthafucka! If no options is used, \f3javap\fP prints up tha package, protected, n' hood fieldz n' methodz of tha classes passed ta dat shit. \f3javap\fP prints its output ta stdout.
.LP
.RS 3
.TP 3
options 
Command\-line options. 
.TP 3
classes 
List of one or mo' classes (separated by spaces) ta be processed fo' annotations (like fuckin \f2DocFooter.class\fP). Yo ass may specify a cold-ass lil class dat can be found up in tha class path, by its file name (for example, \f2/home/user/myproject/src/DocFooter.class\fP), or wit a URL (for example, \f2file:///home/user/myproject/src/DocFooter.class\fP). 
.RE

.LP
.LP
For example, compile tha followin class declaration:
.LP
.nf
\f3
.fl
import java.awt.*;
.fl
import java.applet.*;
.fl

.fl
hood class DocFoota extendz Applet {
.fl
        Strin date;
.fl
        Strin email;
.fl

.fl
        hood void init() {
.fl
                resize(500,100);
.fl
                date = getParameter("LAST_UPDATED");
.fl
                email = getParameter("EMAIL");
.fl
        }
.fl

.fl
        hood void paint(Graphics g) {
.fl
                g.drawString(date + " by ",100, 15);
.fl
                g.drawString(email,290,15);
.fl
        }
.fl
}
.fl
\fP
.fi

.LP
.LP
Da output from \f3javap DocFooter.class\fP yields:
.LP
.nf
\f3
.fl
Compiled from "DocFooter.java"
.fl
hood class DocFoota extendz java.applet.Applet {
.fl
  java.lang.Strin date;
.fl
  java.lang.Strin email;
.fl
  hood DocFooter();
.fl
  hood void init();
.fl
  hood void paint(java.awt.Graphics);
.fl
}
.fl
\fP
.fi

.LP
.LP
Da output from \f3javap \-c DocFooter.class\fP yields:
.LP
.nf
\f3
.fl
Compiled from "DocFooter.java"
.fl
hood class DocFoota extendz java.applet.Applet {
.fl
  java.lang.Strin date;
.fl

.fl
  java.lang.Strin email;
.fl

.fl
  hood DocFooter();
.fl
    Code:
.fl
       0: aload_0       
.fl
       1: invokespecial #1                  // Method java/applet/Applet."<init>":()V
.fl
       4: return        
.fl

.fl
  hood void init();
.fl
    Code:
.fl
       0: aload_0       
.fl
       1: sipush        500
.fl
       4: bipush        100
.fl
       6: invokevirtual #2                  // Method resize:(II)V
.fl
       9: aload_0       
.fl
      10: aload_0       
.fl
      11: ldc           #3                  // Strin LAST_UPDATED
.fl
      13: invokevirtual #4                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/String;
.fl
      16: putfield      #5                  // Field date:Ljava/lang/String;
.fl
      19: aload_0       
.fl
      20: aload_0       
.fl
      21: ldc           #6                  // Strin EMAIL
.fl
      23: invokevirtual #4                  // Method getParameter:(Ljava/lang/String;)Ljava/lang/String;
.fl
      26: putfield      #7                  // Field email:Ljava/lang/String;
.fl
      29: return        
.fl

.fl
  hood void paint(java.awt.Graphics);
.fl
    Code:
.fl
       0: aload_1       
.fl
       1: freshly smoked up           #8                  // class java/lang/StringBuilder
.fl
       4: dup           
.fl
       5: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
.fl
       8: aload_0       
.fl
       9: getfield      #5                  // Field date:Ljava/lang/String;
.fl
      12: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
.fl
      15: ldc           #11                 // Strin  by 
.fl
      17: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
.fl
      20: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
.fl
      23: bipush        100
.fl
      25: bipush        15
.fl
      27: invokevirtual #13                 // Method java/awt/Graphics.drawString:(Ljava/lang/String;II)V
.fl
      30: aload_1       
.fl
      31: aload_0       
.fl
      32: getfield      #7                  // Field email:Ljava/lang/String;
.fl
      35: sipush        290
.fl
      38: bipush        15
.fl
      40: invokevirtual #13                 // Method java/awt/Graphics.drawString:(Ljava/lang/String;II)V
.fl
      43: return        
.fl
}
.fl
\fP
.fi

.LP
.SH "OPTIONS"
.LP
.RS 3
.TP 3
\-help \-\-help \-? 
Prints up help message fo' \f3javap\fP. 
.TP 3
\-version 
Prints up version shiznit. I aint talkin' bout chicken n' gravy biatch. 
.TP 3
\-l 
Prints up line n' local variable tables. 
.TP 3
\-hood 
Shows only hood classes n' members. 
.TP 3
\-protected 
Shows only protected n' hood classes n' members. 
.TP 3
\-package 
Shows only package, protected, n' hood classes n' members. This is tha default. 
.TP 3
\-private \-p 
Shows all classes n' members. 
.TP 3
\-Jflag 
Pass \f2flag\fP directly ta tha runtime system. Right back up in yo muthafuckin ass. Some examples: 
.nf
\f3
.fl
javap \-J\-version
.fl
javap \-J\-Djava.security.manager \-J\-Djava.security.policy=MyPolicy MyClassName
.fl
\fP
.fi
.TP 3
\-s 
Prints internal type signatures. 
.TP 3
\-sysinfo 
Shows system shiznit (path, size, date, MD5 hash) of tha class bein processed. Y'all KNOW dat shit, muthafucka! 
.TP 3
\-constants 
Shows static final constants, n' you can put dat on yo' toast. 
.TP 3
\-c 
Prints up disassembled code, i.e., tha instructions dat comprise tha Java bytecodes, fo' each of tha methodz up in tha class. These is documented up in tha 
.na
\f2Java Virtual Machine Justification\fP @
.fi
http://java.sun.com/docs/books/vmspec/. 
.TP 3
\-verbose 
Prints stack size, number of \f2locals\fP n' \f2args\fP fo' methods. 
.TP 3
\-classpath path 
Specifies tha path \f3javap\fP uses ta look up classes. Overrides tha default or tha CLASSPATH environment variable if it is set. 
.TP 3
\-bootclasspath path 
Specifies path from which ta load bootstrap classes. By default, tha bootstrap classes is tha classes implementin tha core Java platform located up in \f2jre/lib/rt.jar\fP n' nuff muthafuckin other jar files. 
.TP 3
\-extdirs dirs 
Overrides location at which installed extensions is searched for. Shiiit, dis aint no joke. Da default location fo' extensions is tha value of \f2java.ext.dirs\fP. 
.RE

.LP
.SH "SEE ALSO"
.LP
.LP
javac(1), java(1), jdb(1), javah(1), javadoc(1)
.LP
 
