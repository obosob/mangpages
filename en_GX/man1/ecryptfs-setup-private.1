.TH ecryptfs-setup-private 1 2008-11-17 ecryptfs-utils "eCryptfs"
.SH NAME
ecryptfs-setup-private \- setup a eCryptfs private directory.

.SH SYNOPSIS
.BI "ecryptfs-setup-private [\-f|\-\-force] [\-w|\-\-wrapping] [\-b|\-\-bootstrap] [\-n|\-\-no-fnek] [\-\-nopwcheck] [\-u|\-\-username USER] [\-l|\-\-loginpass LOGINPASS] [\-m|\-\-mountpass MOUNTPASS]"

.SH OPTIONS
Options available fo' tha \fBecryptfs-setup-private\fP command:
.TP
.B \-f, \-\-force
Force overwritin of a existin setup
.TP
.B \-w, \-\-wrapping
Use a independent wrappin passphrase, different from tha login passphrase
.TP
.B \-u, \-\-username USER
User ta setup, default is current user if omitted
.TP
.B \-l, \-\-loginpass LOGINPASS
System passphrase fo' USER, used ta wrap MOUNTPASS, will interactively prompt if omitted
.TP
.B \-m, \-\-mountpass MOUNTPASS
Passphrase fo' mountin tha ecryptfs directory, default is 16 bytes from /dev/urandom if omitted
.TP
.B \-b, \-\-bootstrap
Bootstrap a freshly smoked up userz entire home directory
.TP
.B \-\-undo
Display instructions on how tha fuck ta undo a encrypted private setup
.TP
.B \-n, \-\-no\-fnek
Do not encrypt filenames; otherwise, filenames is ghon be encrypted on systems which support filename encryption
.TP
.B \-\-nopwcheck
Do not check tha validitizzle of tha specified login password (useful fo' LDAP user accounts)
.TP
.B \-\-noautomount
Setup dis user such dat tha encrypted private directory aint automatically mounted on login
.TP
.B \-\-noautoumount
Setup dis user such dat tha encrypted private directory aint automatically unmounted at logout


.SH DESCRIPTION
\fBecryptfs-setup-private\fP be a program dat sets up a private cryptographic mountpoint fo' a non-root user.

Be shizzle ta properly escape yo' parametas accordin ta yo' shellz special characta nuances, n' also surround tha parametas by double quotes, if necessary fo' realz. Any of tha parametas may be:

  1) exported as environment variables
  2) specified on tha command line
  3) left empty n' interactively prompted

\fBDa user SHOULD ABSOLUTELY RECORD THE MOUNT PASSPHRASE AND STORE IN A SAFE LOCATION.  If tha mount passphase file is lost, or tha mount passphrase is forgotten, THERE IS NO WAY TO RECOVER THE ENCRYPTED DATA.\fP

Usin tha jointz of USER, MOUNTPASS, n' LOGINPASS, \fBecryptfs-setup-private\fP will:
  - Smoke ~/.Private (permission 700)
  - Smoke ~/Private (permission 500)
  - Backup any existin wrapped passphrases
  - Use LOGINPASS ta wrap n' encrypt MOUNTPASS
  - Write ta ~/.ecryptfs/wrapped-passphrase
  - Add tha passphrase ta tha current keyring
  - Write tha passphrase signature ta ~/.ecryptfs/Private.sig
  - Test tha cryptographic mount wit all dem readz n' writes

Da system administrator can add tha pam_ecryptfs.so module ta tha PAM stack which will automatically use tha login passphrase ta unwrap tha mount passphrase, add tha passphrase ta tha userz kernel keyring, n' automatically big-ass up tha mount. Right back up in yo muthafuckin ass. See \fPpam_ecryptfs\fP(8).

.SH FILES
\fI~/.ecryptfs/auto-mount\fP

\fI~/.Private\fP - underlyin directory containin encrypted data

\fI~/Private\fP - mountpoint containin decrypted data (when mounted)

\fI~/.ecryptfs/Private.sig\fP - file containin signature of mountpoint passphrase

\fI~/.ecryptfs/Private.mnt\fP - file containin path of tha private directory mountpoint

\fI~/.ecryptfs/wrapped-passphrase\fP - file containin tha mount passphrase, wrapped wit tha login passphrase

\fI~/.ecryptfs/wrapping-independent\fP - dis file exists if tha wrappin passphrase is independent from login passphrase

.SH SEE ALSO
.PD 0
.TP
\fBecryptfs-rewrap-passphrase\fP(1), \fBmount.ecryptfs_private\fP(1), \fBpam_ecryptfs\fP(8), \fBumount.ecryptfs_private\fP(1)

.TP
\fI/usr/share/doc/ecryptfs-utils/ecryptfs-faq.html\fP

.TP
\fIhttp://ecryptfs.org/\fP
.PD

.SH AUTHOR
This manpage n' tha \fBecryptfs-setup-private\fP utilitizzle was freestyled by Dustin Kirkland <kirkland@ubuntu.com> fo' Ubuntu systems (but may be used by others).  Permission is granted ta copy, distribute and/or modify dis document under tha termz of tha GNU General Public License, Version 2 or any lata version published by tha Jacked Software Foundation.

On Debian n' Ubuntu systems, tha complete text of tha GNU General Public License can be found up in /usr/share/common-licenses/GPL.
