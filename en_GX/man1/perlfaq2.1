.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLFAQ2 1"
.TH PERLFAQ2 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlfaq2 \- Obtainin n' Learnin bout Perl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This section of tha \s-1FAQ\s0 lyrics thangs bout where ta find
source n' documentation fo' Perl, support, and
related matters.
.SS "What machines support Perl? Where do I git it?"
.IX Subsection "What machines support Perl? Where do I git it?"
Da standard release of Perl (the one maintained by tha Perl
development crew) is distributed only up in source code form. You
can find tha sickest fuckin releases at <http://www.cpan.org/src/>.
.PP
Perl buildz n' runs on a funky-ass bewilderin number of platforms. Virtually
all known n' current Unix derivatives is supported (perlz native
platform), as is other systems like \s-1VMS, DOS, OS/2,\s0 Windows,
\&\s-1QNX,\s0 BeOS, \s-1OS X,\s0 MPE/iX n' tha Amiga.
.PP
Binary distributions fo' some proprietary platforms can be found
<http://www.cpan.org/ports/> directory. Because these is not part of
the standard distribution, they may n' up in fact do differ from the
base perl port up in a variety of ways. You'll gotta check their
respectizzle release notes ta peep just what tha fuck tha differences are. These
differences can be either positizzle (e.g. extensions fo' tha features
of tha particular platform dat is not supported up in tha source
release of perl) or wack (e.g. might be based upon a less current
source release of perl).
.SS "How tha fuck can I git a funky-ass binary version of Perl?"
.IX Subsection "How tha fuck can I git a funky-ass binary version of Perl?"
See \s-1CPAN\s0 Ports <http://www.cpan.org/ports/>
.SS "I aint gots a C compila n' shiznit yo. How tha fuck can I build mah own Perl interpreter?"
.IX Subsection "I aint gots a C compila n' shiznit yo. How tha fuck can I build mah own Perl interpreter?"
For Windows, bust a funky-ass binary version of Perl,
Strawberry Perl <http://strawberryperl.com/> and
ActivePerl <http://www.activestate.com/activeperl> come wit a
bundled C compiler.
.PP
Otherwise if you straight-up do wanna build Perl, you need ta git a
binary version of \f(CW\*(C`gcc\*(C'\fR fo' yo' system first. Use a search
engine ta smoke up how tha fuck ta do dis fo' yo' operatin system.
.SS "I copied tha Perl binary from one machine ta another yo, but scripts don't work."
.IX Subsection "I copied tha Perl binary from one machine ta another yo, but scripts don't work."
Thatz probably cuz you forgot libraries, or library paths differ.
Yo ass straight-up should build tha whole distribution on tha machine it will
eventually live on, n' then type \f(CW\*(C`make install\*(C'\fR. Most other
approaches is doomed ta failure.
.PP
One simple way ta check dat thangs is up in tha right place is ta print out
the hard-coded \f(CW@INC\fR dat perl looks all up in fo' libraries:
.PP
.Vb 1
\&    % perl \-le \*(Aqprint fo' @INC\*(Aq
.Ve
.PP
If dis command lists any paths dat don't exist on yo' system, then you
may need ta move tha appropriate libraries ta these locations, or create
symbolic links, aliases, or shortcuts appropriately. \f(CW@INC\fR be also printed as
part of tha output of
.PP
.Vb 1
\&    % perl \-V
.Ve
.PP
Yo ass might also wanna check out
\&\*(L"How tha fuck do I keep mah own module/library directory?\*(R" up in perlfaq8.
.SS "I grabbed tha sources n' tried ta compile but gdbm/dynamic loading/malloc/linking/... failed. Y'all KNOW dat shit, muthafucka! How tha fuck do I make it work?"
.IX Subsection "I grabbed tha sources n' tried ta compile but gdbm/dynamic loading/malloc/linking/... failed. Y'all KNOW dat shit, muthafucka! How tha fuck do I make it work?"
Read tha \fI\s-1INSTALL\s0\fR file, which is part of tha source distribution.
It raps bout up in detail how tha fuck ta cope wit most idiosyncrasies dat the
\&\f(CW\*(C`Configure\*(C'\fR script can't work round fo' any given system or
architecture.
.SS "What modulez n' extensions is available fo' Perl? What tha fuck iz \s-1CPAN\s0?"
.IX Subsection "What modulez n' extensions is available fo' Perl? What tha fuck iz CPAN?"
\&\s-1CPAN\s0 standz fo' Comprehensive Perl Archive Network, a multi-gigabyte
archive replicated on hundredz of machines all over tha ghetto. Right back up in yo muthafuckin ass. Y'all KNOW dat shit, muthafucka! \s-1CPAN\s0
gotz nuff tenz of thousandz of modulez n' extensions, source code
and documentation, designed fo' \fIeverything\fR from commercial
database intercourses ta keyboard/screen control n' hustlin big-ass wizzy cribs.
.PP
Yo ass can search \s-1CPAN\s0 on <http://metacpan.org> or
<http://search.cpan.org/>.
.PP
Da masta wizzy joint fo' \s-1CPAN\s0 is <http://www.cpan.org/>,
<http://www.cpan.org/SITES.html> lists all mirrors.
.PP
See tha \s-1CPAN FAQUIZZY\s0 at <http://www.cpan.org/misc/cpan\-faq.html> fo' lyrics
to da most thugged-out frequently axed thangs bout \s-1CPAN.\s0
.PP
Da Task::Kensho module has a list of recommended modulez which
you should review as a phat startin point.
.SS "Where can I git shiznit on Perl?"
.IX Subsection "Where can I git shiznit on Perl?"
.IP "\(bu" 4
<http://www.perl.org/>
.IP "\(bu" 4
<http://perldoc.perl.org/>
.IP "\(bu" 4
<http://learn.perl.org/>
.PP
Da complete Perl documentation be available wit tha Perl distribution.
If you have Perl installed locally, you probably have tha documentation
installed as well: type \f(CW\*(C`perldoc perl\*(C'\fR up in a terminal or
view online <http://perldoc.perl.org/perl.html>.
.PP
(Some operatin system distributions may shizzle tha documentation up in a gangbangin' finger-lickin' different
package; fo' instance, on Debian, you need ta install tha \f(CW\*(C`perl\-doc\*(C'\fR package.)
.PP
Many phat books done been freestyled bout Perl\*(--see tha section lata in
perlfaq2 fo' mo' details.
.SS "What tha fuck iz perl.com? Perl Mongers? pm.org? perl.org? cpan.org?"
.IX Subsection "What tha fuck iz perl.com? Perl Mongers? pm.org? perl.org? cpan.org?"
Perl.com <http://www.perl.com/> used ta be part of tha O'Reilly
Network, a subsidiary of O'Reilly Media fo' realz. Although it retains most of
the original gangsta content from its O'Reilly Network, it is now hosted by
Da Perl Foundation <http://www.perlfoundation.org/>.
.PP
Da Perl Foundation be a advocacy organization fo' tha Perl language
which maintains tha wizzy joint <http://www.perl.org/> as a general
advocacy joint fo' tha Perl language. Well shiiiit, it uses tha domain ta provide
general support skillz ta tha Perl hood, includin tha hosting
of mailin lists, wizzy cribs, n' other skillz. There is also many
other sub-domains fo' special topics like peepin' Perl n' thangs up in Perl,
such as:
.IP "\(bu" 4
<http://www.perl.org/>
.IP "\(bu" 4
<http://learn.perl.org/>
.IP "\(bu" 4
<http://jobs.perl.org/>
.IP "\(bu" 4
<http://lists.perl.org/>
.PP
Perl Mongers <http://www.pm.org/> uses tha pm.org domain fo' skillz
related ta local Perl user groups, includin tha hostin of mailin lists
and wizzy cribs. Right back up in yo muthafuckin ass. See tha Perl Mongers wizzy joint <http://www.pm.org/> fo' more
information bout joining, starting, or requestin skillz fo' a
Perl user group.
.PP
\&\s-1CPAN,\s0 or tha Comprehensive Perl Archive Network <http://www.cpan.org/>,
is a replicated, ghettowide repository of Perl software.
See What tha fuck iz \s-1CPAN\s0?.
.SS "Where can I post thangs?"
.IX Subsection "Where can I post thangs?"
There is nuff Perl mailin lists fo' various
topics, specifically tha beginners list <http://lists.perl.org/list/beginners.html>
may be of use.
.PP
Other places ta ask thangs is on the
PerlMonks joint <http://www.perlmonks.org/> or
stackoverflow <http://stackoverflow.com/questions/tagged/perl>.
.SS "Perl Books"
.IX Subsection "Perl Books"
There is nuff phat books on Perl <http://www.perl.org/books/library.html>.
.SS "Which magazines have Perl content?"
.IX Subsection "Which magazines have Perl content?"
Therez also \fI\f(CI$foo\fI Magazin\fR, a German magazine all bout Perl, at
( <http://www.foo\-magazin.de> ). Da \fIPerl-Zeitung\fR be another
German-speakin magazine fo' Perl beginners (see
<http://perl\-zeitung.at.tf> ).
.PP
Several unix/linux releated magazines frequently includes articlez on Perl.
.SS "Which Perl blogs should I read?"
.IX Subsection "Which Perl blogs should I read?"
Perl Shit <http://perlnews.org/> covers a shitload of tha major events up in tha Perl
world, Perl Weekly <http://perlweekly.com/> be a weekly e\-mail
(and \s-1RSS\s0 feed) of hand-picked Perl articles.
.PP
<http://blogs.perl.org/> hosts nuff Perl blogs, there be also
several Snoop Bloggy-Blogg aggregators: Perlsphere <http://perlsphere.net/> and
IronMan <http://ironman.enlightenedperl.org/> is two of em.
.SS "What mailin lists is there fo' Perl?"
.IX Subsection "What mailin lists is there fo' Perl?"
A comprehensive list of Perl-related mailin lists can be found at
<http://lists.perl.org/>
.SS "Where can I loot a cold-ass lil commercial version of Perl?"
.IX Subsection "Where can I loot a cold-ass lil commercial version of Perl?"
Perl already \fIis\fR commercial software: it has a license
that you can grab n' carefully read ta yo' manager n' shit. Well shiiiit, it is distributed
in releases n' comes up in well-defined packages. There be a straight-up large
and supportizzle user hood n' a extensive literature.
.PP
If you still need commercial support
ActiveState <http://www.activestate.com/activeperl> offers
this.
.SS "Where do I bust bug reports?"
.IX Subsection "Where do I bust bug reports?"
(contributed by brian d foy)
.PP
First, ensure dat you've found a actual bug. Right back up in yo muthafuckin ass. Second, ensure you've
found a actual bug.
.PP
If you've found a funky-ass bug wit tha perl interpreta or one of tha modules
in tha standard library (those dat come wit Perl), you can use the
perlbug utilitizzle dat comes wit Perl (>= 5.004). Well shiiiit, it collects
information bout yo' installation ta include wit yo' message, then
sendz tha message ta tha right place.
.PP
To determine if a module came wit yo' version of Perl, you can
install n' use tha Module::CoreList module. Well shiiiit, it has tha shiznit
about tha modulez (with they versions) included wit each release
of Perl.
.PP
Every \s-1CPAN\s0 module has a funky-ass bug tracker set up in \s-1RT, \s0<http://rt.cpan.org>.
Yo ass can submit bugs ta \s-1RT\s0 either all up in its wizzy intercourse or by
email. To email a funky-ass bug report, bust it to
bug\-<distribution\-name>@rt.cpan.org . For example, if you
wanted ta report a funky-ass bug up in Business::ISBN, you could bust a message to
bug\-Business\-ISBN@rt.cpan.org .
.PP
Some modulez might have special reportin requirements, like fuckin a
Github or Gizoogle Code trackin system, so you should check the
module documentation like a muthafucka.
.SH "AUTHOR AND COPYRIGHT"
.IX Header "AUTHOR AND COPYRIGHT"
Copyright (c) 1997\-2010 Tomothy Christiansen, Nathan Torkington, and
other authors as noted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. All muthafuckin rights reserved.
.PP
This documentation is free; you can redistribute it and/or modify it
under tha same terms as Perl itself.
.PP
Irrespectizzle of its distribution, all code examplez here is up in tha public
domain. I aint talkin' bout chicken n' gravy biatch. Yo ass is permitted n' encouraged ta use dis code n' any
derivatives thereof up in yo' own programs fo' funk or fo' profit as you
see fit fo' realz. A simple comment up in tha code givin credit ta tha \s-1FAQ\s0 would
be courteous but aint required.
