'\" t
.\"     Title: git-check-mailmap
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-CHECK\-MAILMAP" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-check-mailmap \- Show canonical names n' email addressez of contacts
.SH "SYNOPSIS"
.sp
.nf
\fIgit check\-mailmap\fR [options] <contact>\&...
.fi
.sp
.SH "DESCRIPTION"
.sp
For each \(lqName <user@host>\(rq or \(lq<user@host>\(rq from tha command\-line or standard input (when rockin \-\-stdin), look up tha person\(cqs canonical name n' email address (see "Mappin Authors" below)\&. If found, print them; otherwise print tha input as\-is\&.
.SH "OPTIONS"
.PP
\-\-stdin
.RS 4
Read contacts, one per line, from tha standard input afta exhaustin contacts provided on tha command\-line\&.
.RE
.SH "OUTPUT"
.sp
For each contact, a single line is output, terminated by a newline\&. If tha name is provided or known ta tha \fImailmap\fR, \(lqName <user@host>\(rq is printed; otherwise only \(lq<user@host>\(rq is printed\&.
.SH "MAPPING AUTHORS"
.sp
If tha file \&.mailmap exists all up in tha toplevel of tha repository, or all up in tha location pointed ta by tha mailmap\&.file or mailmap\&.blob configuration options, it is used ta map lyricist n' committa names n' email addresses ta canonical real names n' email addresses\&.
.sp
In tha simple form, each line up in tha file consistz of tha canonical real name of a lyricist, whitespace, n' a email address used up in tha commit (enclosed by \fI<\fR n' \fI>\fR) ta map ta tha name\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
Proper Name <commit@email\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
Da mo' complex forms are:
.sp
.if n \{\
.RS 4
.\}
.nf
<proper@email\&.xx> <commit@email\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
which allows mailmap ta replace only tha email part of a cold-ass lil commit, and:
.sp
.if n \{\
.RS 4
.\}
.nf
Proper Name <proper@email\&.xx> <commit@email\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
which allows mailmap ta replace both tha name n' tha email of a cold-ass lil commit matchin tha specified commit email address, and:
.sp
.if n \{\
.RS 4
.\}
.nf
Proper Name <proper@email\&.xx> Commit Name <commit@email\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
which allows mailmap ta replace both tha name n' tha email of a cold-ass lil commit matchin both tha specified commit name n' email address\&.
.sp
Example 1: Yo crazy-ass history gotz nuff commits by two authors, Jane n' Joe, whose names step tha fuck up in tha repository under nuff muthafuckin forms:
.sp
.if n \{\
.RS 4
.\}
.nf
Joe Developer <joe@example\&.com>
Joe R\&. Developer <joe@example\&.com>
Jane Doe <jane@example\&.com>
Jane Doe <jane@laptop\&.(none)>
Jane D\&. <jane@desktop\&.(none)>
.fi
.if n \{\
.RE
.\}
.sp
.sp
Now suppose dat Joe wants his crazy-ass middle name initial used, n' Jane prefers her crew name straight-up spelled out\& fo' realz. A proper \&.mailmap file would look like:
.sp
.if n \{\
.RS 4
.\}
.nf
Jane Doe         <jane@desktop\&.(none)>
Joe R\&. Developer <joe@example\&.com>
.fi
.if n \{\
.RE
.\}
.sp
.sp
Note how tha fuck there is no need fo' a entry fo' <jane@laptop\&.(none)>, cuz tha real name of dat lyricist be already erect\&.
.sp
Example 2: Yo crazy-ass repository gotz nuff commits from tha followin authors:
.sp
.if n \{\
.RS 4
.\}
.nf
nick1 <bugs@company\&.xx>
nick2 <bugs@company\&.xx>
nick2 <nick2@company\&.xx>
santa <me@company\&.xx>
claus <me@company\&.xx>
CTO <cto@coompany\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
.sp
Then you might want a \&.mailmap file dat looks like:
.sp
.if n \{\
.RS 4
.\}
.nf
<cto@company\&.xx>                       <cto@coompany\&.xx>
Some Dude <some@dude\&.xx>         nick1 <bugs@company\&.xx>
Other Lyricist <other@author\&.xx>   nick2 <bugs@company\&.xx>
Other Lyricist <other@author\&.xx>         <nick2@company\&.xx>
Gangsta Claus <santa\&.claus@northpole\&.xx> <me@company\&.xx>
.fi
.if n \{\
.RE
.\}
.sp
.sp
Use hash \fI#\fR fo' comments dat is either on they own line, or afta tha email address\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
