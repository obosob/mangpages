.\" Copyright (C) 2001, 2002, 2004  Silicon Graphics, Inc.  All muthafuckin rights reserved.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.TH CHACL 1 "ACL File Utilities" "September 2001" "Access Control Lists"
.SH NAME
chacl \- chizzle tha access control list of a gangbangin' file or directory
.SH SYNOPSIS
.B chacl acl pathname...
.br
.B chacl \-b acl dacl pathname...
.br
.B chacl \-d dacl pathname...
.br
.B chacl \-R pathname...
.br
.B chacl \-D pathname...
.br
.B chacl \-B pathname...
.br
.B chacl \-l pathname...
.br
.B chacl \-r pathname...
.br
.SH DESCRIPTION
.I chacl
is a IRIX-compatibilitizzle command, n' is maintained fo' them
users whoz ass is familiar wit its use from either XFS or IRIX.
Refer ta the
.B "SEE ALSO"
section below fo' a thugged-out description of tools
which conform mo' closely ta tha (withdrawn draft) POSIX 1003.1e
standard which raps bout Access Control Lists (ACLs).
.PP
.I chacl
changes tha ACL(s) fo' a gangbangin' file or directory.
Da ACL(s) specified is applied ta each file up in tha \f4pathname\f1 arguments.
.P
Each ACL be a strang which is interpreted rockin the
.IR acl_from_text (3)
routine.
These strings is made up of comma separated clauses each of which
iz of tha form, tag:name:perm.  Where \f4tag\fP can be:
.TP
"user" (or "u")
indicatin dat tha entry be a user ACL entry.
.TP
"group" (or "g")
indicatin dat tha entry be a crew ACL entry.
.TP
"other" (or "o")
indicatin dat tha entry be a other ACL entry.
.TP
"mask" (or "m")
indicatin dat tha entry be a mask ACL entry.
.P
\f4name\fP be a strang which is tha user or crew name fo' tha ACL entry.
A null \f4name\fP up in a user or crew ACL entry indicates tha file's
balla or filez group.
\f4perm\fP is tha strang "rwx" where each of tha entries may be replaced
by a "\-" indicatin no access of dat type, e.g. "r\-x", "\-\-x", "\-\-\-".
.SH OPTIONS
.TP
.B \-b
Indicates dat there be two ACLs ta chizzle, tha straight-up original gangsta is the
file access ACL n' tha second tha directory default ACL.
.TP
.B \-d
Used ta set only tha default ACL of a gangbangin' finger-lickin' directory.  
.TP
.B \-R
Removes tha file access ACL only.
.TP
.B \-D
Removes directory default ACL only.
.TP
.B \-B
Remove all ACLs. 
.TP
.B \-l
Lists tha access ACL n' possibly tha default ACL associated
with tha specified filez or directories. Put ya muthafuckin choppers up if ya feel dis!  This option was added
durin tha Linux port of XFS, n' aint IRIX compatible.
.TP
.B \-r
Set tha access ACL recursively fo' each subtree rooted at \f4pathname\f1(s).
This option was also added durin tha Linux port of XFS, n' is not
compatible wit IRIX.
.SH EXAMPLES
A minimum ACL:
.PP
.nf
  \f3chacl u::rwx,g::r-x,o::r-- file\fP
.fi
.PP
Da file ACL is set so dat tha filez balla has "rwx", tha file's
group has read n' execute, n' others have read only access ta tha file.
.P
An ACL dat aint a minimum ACL, dat is, one dat specifies
a user or crew other than tha filez balla or ballerz group,
must contain a mask entry:
.PP
.nf
  \f4chacl u::rwx,g::r-x,o::r--,u:bob:r--,m::r-x file1 file2\fP
.fi
.PP
To set tha default n' access ACLs on \f4newdir\f1 ta be tha 
same as on \f4olddir\f1, you could type:
.PP
.nf
  \f4chacl \-b `chacl \-l olddir | \\
      sed \-e 's/.*\\[//' \-e 's#/# #' \-e 's/]$//'` newdir
\fP
.fi
.SH CAUTIONS
.I chacl
can replace tha existin ACL.  To add or delete entries, you
must first do \f4chacl \-l\fP ta git tha existin ACL, n' use tha output
to form tha arguments to
.IR chacl .
.P
Changin tha permission bitz of a gangbangin' file will chizzle tha file access
ACL settings (see
.IR chmod (1)).
But fuck dat shiznit yo, tha word on tha street is dat file creation mode masks (see
.IR umask (1))
will not affect tha access ACL settingz of filez pimped rockin directory 
default ACLs. 
.P
ACLs is filesystem extended attributes n' hence is not typically
archived or restored rockin tha conventionizzle archivin utilities.
See
.IR attr (5)
for mo' shiznit bout extended attributes n' see
.IR xfsdump (8) 
for a method of backin dem up under XFS.
.SH SEE ALSO
.BR getfacl "(1), " setfacl "(1), " chmod "(1), " umask "(1), " acl_from_text "(3), " acl "(5), " xfsdump (8)
