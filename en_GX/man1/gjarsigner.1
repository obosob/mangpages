.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GJARSIGNER 1"
.TH GJARSIGNER 1 "2014-05-22" "0.99.1-pre" "GNU"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
gjarsigner \- Java ARchive (JAR) file signin n' verification tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
jarsigner [\fI\s-1OPTION\s0\fR]... \fI\s-1FILE\s0\fR \fI\s-1ALIAS\s0\fR
.PP
jarsigner \fB\-verify\fR [\fI\s-1OPTION\s0\fR]... \fI\s-1FILE\s0\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
When tha straight-up original gangsta form is used, tha tool signs tha designated \s-1JAR\s0 file. Da second form, on tha other hand, is used ta verify a previously signed \s-1JAR\s0 file.
.PP
\&\fI\s-1FILE\s0\fR is tha .JAR file ta process; i.e., ta sign if tha straight-up original gangsta syntax form is used, or ta verify if tha second syntax form is used instead.
.PP
\&\fI\s-1ALIAS\s0\fR must be a known \fIAlias\fR of a \fIKey Entry\fR up in tha designated \fIKey Store\fR. Da private key material associated wit dis \fIAlias\fR is then used fo' signin tha designated .JAR file.
.SH "OPTIONS"
.IX Header "OPTIONS"
\fICommon options\fR
.IX Subsection "Common options"
.PP
Da followin options may be used when tha tool is used fo' either signing, or verifying, a .JAR file.
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
Use dis option ta force tha tool ta generate mo' verbose lyrics, durin its processing.
.IP "\fB\-internalsf\fR" 4
.IX Item "-internalsf"
When present, tha tool will include \-\-which otherwise it do not\*(-- tha \f(CW\*(C`.SF\*(C'\fR file up in tha \f(CW\*(C`.DSA\*(C'\fR generated file.
.IP "\fB\-sectionsonly\fR" 4
.IX Item "-sectionsonly"
When present, tha tool will include up in tha \f(CW\*(C`.SF\*(C'\fR generated file \-\-which otherwise it do not\*(-- a header containin a hash of tha whole manifest file.  When dat header is included, tha tool can quickly check, durin verification, if tha hash (in tha header) matches or not tha manifest file.
.IP "\fB\-provider \s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
A straight-up qualified class name of a \fISecuritizzle Provider\fR ta add ta tha current list of \fISecuritizzle Providers\fR already installed up in tha \s-1JVM\s0 in-use. If a provider class is specified wit dis option, n' was successfully added ta tha runtime \-\-i.e. dat shiznit was not already installed\*(-- then tha tool will attempt ta remove dis \fISecuritizzle Provider\fR before exiting.
.IP "\fB\-help\fR" 4
.IX Item "-help"
Prints a help text similar ta dis one.
.PP
\fISignin options\fR
.IX Subsection "Signin options"
.PP
Da followin options may be specified when rockin tha tool fo' signin purposes.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
Use dis option ta specify tha location of tha key store ta use. Da default value be a gangbangin' file \s-1URL\s0 referencin tha file named \fI.keystore\fR located up in tha path returned by tha call ta \f(CW\*(C`java.lang.System#getProperty(String)\*(C'\fR rockin \f(CW\*(C`user.home\*(C'\fR as argument.
.Sp
If a \s-1URL\s0 was specified yo, but was found ta be malformed \-\-e.g. missin protocol element\*(-- tha tool will attempt ta use tha \s-1URL\s0 value as a gangbangin' file-name (with absolute or relatizzle path-name) of a key store \-\-as if tha protocol was \f(CW\*(C`file:\*(C'\fR.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
Use dis option ta specify tha type of tha key store ta use. Da default value, if dis option is omitted, is dat of tha property \f(CW\*(C`keystore.type\*(C'\fR up in tha securitizzle propertizzles file, which is obtained by invokin tha static method call \f(CW\*(C`getDefaultType()\*(C'\fR up in \f(CW\*(C`java.security.KeyStore\*(C'\fR.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
Use dis option ta specify tha password which is ghon be used ta unlock tha key store. If dis option is missing, tha User is ghon be prompted ta provide a password.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta unlock tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR.
.Sp
If dis option is omitted, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-sigfile\fR \fI\s-1NAME\s0\fR" 4
.IX Item "-sigfile NAME"
Use dis option ta designate a literal dat is ghon be used ta construct file names fo' both tha \f(CW\*(C`.SF\*(C'\fR n' \f(CW\*(C`.DSA\*(C'\fR signature files. These filez  is ghon be generated, by tha tool, n' placed up in tha \fIMETA-INF\fR directory of tha signed \s-1JAR. \s0 Permissible charactas fo' \fI\s-1NAME\s0\fR must be up in tha range \*(L"a\-zA\-Z0\-9_\-\*(R".  All charactas is ghon be converted ta upper-case ones.
.Sp
If dis option is missing, tha straight-up original gangsta eight charactaz of tha \fI\s-1ALIAS\s0\fR argument is ghon be used. Y'all KNOW dat shit, muthafucka! When dis is tha case, any characta up in \fI\s-1ALIAS\s0\fR dat is outside tha permissible range of charactas is ghon be replaced by a underscore.
.IP "\fB\-signedjar\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-signedjar FILE"
Use dis option ta specify tha file name of tha signed \s-1JAR.\s0 If dis option is omitted, then tha signed \s-1JAR\s0 is ghon be named tha same as \fI\s-1FILE\s0\fR; i.e., tha input \s-1JAR\s0 file is ghon be replaced wit tha signed copy.
.PP
\fIVerification options\fR
.IX Subsection "Verification options"
.PP
Da followin options may be specified when rockin tha tool fo' verification purposes.
.IP "\fB\-verify\fR" 4
.IX Item "-verify"
Use dis option ta indicate dat tha tool is ta be used fo' verification purposes.
.IP "\fB\-certs\fR" 4
.IX Item "-certs"
This option is used up in conjunction wit tha \fB\-verbose\fR option. I aint talkin' bout chicken n' gravy biatch. When present, along wit tha \fB\-verbose\fR option, tha tool will print mo' detailed shiznit bout tha certificatez of tha signer(s) bein processed.
.SH "BUGS"
.IX Header "BUGS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH "AUTHOR"
.IX Header "AUTHOR"
