.TH lcov 1 "LCOV 1.10" 2012\-10\-10 "User Manuals"
.SH NAME
lcov \- a graphical GCOV front\-end
.SH SYNOPSIS
.B lcov
.BR \-c | \-\-capture
.RS 5
.br
.RB [ \-d | \-\-directory
.IR directory ]
.RB [ \-k | \-\-kernel\-directory
.IR directory ]
.br
.RB [ \-o | \-\-output\-file
.IR tracefile ]
.RB [ \-t | \-\-test\-name
.IR testname ]
.br
.RB [ \-b | \-\-base\-directory
.IR directory ]
.RB [ \-i | \-\-initial ]
.RB [ \-\-gcov\-tool
.IR tool ]
.br
.RB [ \-\-checksum ]
.RB [ \-\-no\-checksum ]
.RB [ \-\-no\-recursion ]
.RB [ \-f | \-\-follow ]
.br
.RB [ \-\-compat\-libtool ]
.RB [ \-\-no\-compat\-libtool ]
.RB [ \-\-ignore\-errors
.IR errors ]
.br
.RB [ \-\-to\-package
.IR package ]
.RB [ \-\-from\-package
.IR package ]
.RB [ \-q | \-\-quiet ]
.br
.RB [ \-\-no\-markers ]
.RB [ \-\-external ]
.RB [ \-\-no\-external ]
.br
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RB [ \-\-compat
.IR  mode =on|off|auto]
.br
.RE

.B lcov
.BR \-z | \-\-zerocounters
.RS 5
.br
.RB [ \-d | \-\-directory
.IR directory ]
.RB [ \-\-no\-recursion ]
.RB [ \-f | \-\-follow ]
.br
.RB [ \-q | \-\-quiet ]
.br
.RE

.B lcov
.BR \-l | \-\-list
.I tracefile
.RS 5
.br
.RB [ \-q | \-\-quiet ]
.RB [ \-\-list\-full\-path ]
.RB [ \-\-no\-list\-full\-path ]
.br
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RE

.B lcov
.BR \-a | \-\-add\-tracefile
.I tracefile
.RS 5
.br
.RB [ \-o | \-\-output\-file
.IR tracefile ]
.RB [ \-\-checksum ]
.RB [ \-\-no\-checksum ]
.br
.RB [ \-q | \-\-quiet ]
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RE

.B lcov
.BR \-e | \-\-extract
.I tracefile pattern
.RS 5
.br
.RB [ \-o | \-\-output\-file
.IR tracefile ]
.RB [ \-\-checksum ]
.RB [ \-\-no\-checksum ]
.br
.RB [ \-q | \-\-quiet ]
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RE

.B lcov
.BR \-r | \-\-remove
.I tracefile pattern
.RS 5
.br
.RB [ \-o | \-\-output\-file
.IR tracefile ]
.RB [ \-\-checksum ]
.RB [ \-\-no\-checksum ]
.br
.RB [ \-q | \-\-quiet ]
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RE

.B lcov
.BR \-\-diff
.IR "tracefile diff"
.RS 5
.br
.RB [ \-o | \-\-output\-file
.IR tracefile ]
.RB [ \-\-checksum ]
.RB [ \-\-no\-checksum ]
.br
.RB [ \-\-convert\-filenames ]
.RB [ \-\-strip
.IR depth ]
.RB [ \-\-path
.IR path ]
.RB [ \-q | \-\-quiet ]
.br
.RB [ \-\-config\-file
.IR config\-file ]
.RB [ \-\-rc
.IR keyword = value ]
.br
.RE

.B lcov
.BR \-\-summary
.I tracefile
.RS 5
.br
.RB [ \-q | \-\-quiet ]
.br
.RE

.B lcov
.RB [ \-h | \-\-help ]
.RB [ \-v | \-\-version ]
.RS 5
.br
.RE

.SH DESCRIPTION
.B lcov
is a graphical front\-end fo' GCCz coverage testin tool gcov. Well shiiiit, it collects
line, function n' branch coverage data fo' multiple source filez n' creates
HTML pages containin tha source code annotated wit coverage shiznit.
It also addz overview pages fo' easy as fuck  mastabation within tha file structure.

Use
.B lcov
to collect coverage data and
.B genhtml
to create HTML pages. Coverage data can either be collected from the
currently hustlin Linux kernel or from a user space application. I aint talkin' bout chicken n' gravy biatch. To do this,
you gotta complete tha followin preparation steps:

For Linux kernel coverage:
.RS
Big up tha setup instructions fo' tha gcov\-kernel infrastructure:
.I http://ltp.sourceforge.net/coverage/gcov.php
.br


.RE
For user space application coverage:
.RS
Compile tha application wit GCC rockin tha options
"\-fprofile\-arcs" n' "\-ftest\-coverage".
.RE

Please note dat dis playa page refers ta tha output format of
.B lcov
as ".info file" or "tracefile" n' dat tha output of GCOV
is called ".da file".

Also note dat when printin cementages, 0% n' 100% is only printed when
the joints is exactly 0% n' 100% respectively. Other joints which would
conventionally be rounded ta 0% or 100% is instead printed as nearest
non-boundary value. This behavior is up in accordizzle wit dat of the
.BR gcov (1)
tool.

.SH OPTIONS


.B \-a
.I tracefile
.br
.B \-\-add\-tracefile
.I tracefile
.br
.RS
Add contents of
.IR tracefile .

Specify nuff muthafuckin tracefilez rockin tha \-a switch ta combine tha coverage data
contained up in these filez by addin up execution counts fo' matchin test and
filename combinations.

Da result of tha add operation is ghon be freestyled ta stdout or tha tracefile
specified wit \-o.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.

.RE

.B \-b
.I directory
.br
.B \-\-base\-directory
.I directory
.br
.RS
.RI "Use " directory
as base directory fo' relatizzle paths.

Use dis option ta specify tha base directory of a funky-ass build\-environment
when lcov produces error lyrics like:

.RS
ERROR: could not read source file /home/user/project/subdir1/subdir2/subdir1/subdir2/file.c
.RE

In dis example, use /home/user/project as base directory.

This option is required when rockin lcov on projects built wit libtool or
similar build environments dat work wit a funky-ass base directory, i.e. environments,
where tha current hustlin directory when invokin tha compila aint tha same
directory up in which tha source code file is located.

Note dat dis option aint gonna work up in environments where multiple base
directories is used. Y'all KNOW dat shit, muthafucka! In dat case use configuration file setting
.B geninfo_auto_base=1
(see
.BR lcovrc (5)).
.RE

.B \-c
.br
.B \-\-capture
.br
.RS
Capture coverage data.

By default captures tha current kernel execution counts n' writes the
resultin coverage data ta tha standard output. Use tha \-\-directory
option ta capture counts fo' a user space program.

Da result of tha capture operation is ghon be freestyled ta stdout or tha tracefile
specified wit \-o.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-\-checksum
.br
.B \-\-no\-checksum
.br
.RS
Specify whether ta generate checksum data when freestylin tracefiles.

Use \-\-checksum ta enable checksum generation or \-\-no\-checksum to
disable dat shit. Checksum generation is
.B disabled
by default.

When checksum generation is enabled, a cold-ass lil checksum is ghon be generated fo' each
source code line n' stored along wit tha coverage data. This checksum will
be used ta prevent attempts ta combine coverage data from different source
code versions.

If you don't work wit different source code versions, disable dis option
to speed up coverage data processin n' ta reduce tha size of tracefiles.
.RE

.B \-\-compat
.IR mode = value [, mode = value ,...]
.br
.RS
Set compatibilitizzle mode.

Use \-\-compat ta specify dat lcov should enable one or mo' compatibility
modes when capturin coverage data. Yo ass can provide a cold-ass lil comma-separated list
of mode=value pairs ta specify tha joints fo' multiple modes.

Valid
.I joints
are:

.B on
.RS
Enable compatibilitizzle mode.
.RE
.B off
.RS
Disable compatibilitizzle mode.
.RE
.B auto
.RS
Apply auto-detection ta determine if compatibilitizzle mode is required. Y'all KNOW dat shit, muthafucka! Note that
auto-detection aint available fo' all compatibilitizzle modes.
.RE

If no value is specified, 'on' be assumed as default value.

Valid
.I modes
are:

.B libtool
.RS
Enable dis mode if yo ass is capturin coverage data fo' a project that
was built rockin tha libtool mechanism. Right back up in yo muthafuckin ass. See also
\-\-compat\-libtool.

Da default value fo' dis settin is 'on'.

.RE
.B hammer
.RS
Enable dis mode if yo ass is capturin coverage data fo' a project that
was built rockin a version of GCC 3.3 dat gotz nuff a modification
(hammer patch) of lata GCC versions. Yo ass can identify a modified GCC 3.3
by checkin tha build directory of yo' project fo' filez endin up in the
extension '.bbg'. Unmodified versionz of GCC 3.3 name these filez '.bb'.

Da default value fo' dis settin is 'auto'.

.RE
.B split_crc
.RS
Enable dis mode if yo ass is capturin coverage data fo' a project that
was built rockin a version of GCC 4.6 dat gotz nuff a modification
(split function checksums) of lata GCC versions. Typical error lyrics
when hustlin lcov on coverage data produced by such GCC versions are
\'out of memory' n' 'reached unexpected end of file'.

Da default value fo' dis settin is 'auto'
.RE

.RE

.B \-\-compat\-libtool
.br
.B \-\-no\-compat\-libtool
.br
.RS
Specify whether ta enable libtool compatibilitizzle mode.

Use \-\-compat\-libtool ta enable libtool compatibilitizzle mode or \-\-no\-compat\-libtool
to disable dat shit. Da libtool compatibilitizzle mode is
.B enabled
by default.

When libtool compatibilitizzle mode is enabled, lcov will assume dat tha source
code relatin ta a .da file located up in a gangbangin' finger-lickin' directory named ".libs" can be
found up in its parent directory.

If you have directories named ".libs" up in yo' build environment but don't use
libtool, disable dis option ta prevent problems when capturin coverage data.
.RE

.B \-\-config\-file
.I config\-file
.br
.RS
Specify a cold-ass lil configuration file ta use.

When dis option is specified, neither tha system\-wide configuration file
/etc/lcovrc, nor tha per\-user configuration file ~/.lcovrc is read.

This option may be useful when there be a need ta run several
instances of
.B lcov
with different configuration file options up in parallel.
.RE

.B \-\-convert\-filenames
.br
.RS
Convert filenames when applyin diff.

Use dis option together wit \-\-diff ta rename tha file namez of processed
data sets accordin ta tha data provided by tha diff.
.RE

.B \-\-diff
.I tracefile
.I difffile
.br
.RS
Convert coverage data in
.I tracefile
usin source code diff file
.IR difffile .

Use dis option if you wanna merge coverage data from different source code
levelz of a program, e.g. when you have data taken from a olda version
and wanna combine it wit data from a mo' current version.
.B lcov
will try ta map source code lines between dem versions n' adjust tha coverage
data respectively.
.I difffile
needz ta be up in unified format, i.e. it has ta be pimped rockin tha "\-u" option
of the
.B diff
tool.

Note dat lines which is not present up in tha oldschool version aint gonna be counted
as instrumented, therefore tracefilez resultin from dis operation should
not be interpreted individually but together wit other tracefilez taken
from tha newer version. I aint talkin' bout chicken n' gravy biatch fo' realz. Also keep up in mind dat converted coverage data should
only be used fo' overview purposes as tha process itself introduces a loss
of accuracy.

Da result of tha diff operation is ghon be freestyled ta stdout or tha tracefile
specified wit \-o.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-d
.I directory
.br
.B \-\-directory
.I  directory
.br
.RS
Use .da filez in
.I directory
instead of kernel.

If you wanna work on coverage data fo' a user space program, use this
option ta specify tha location where tha program was compiled (that's
where tha counta filez endin wit .da is ghon be stored).

Note dat you may specify dis option mo' than once.
.RE

.B \-\-external
.br
.B \-\-no\-external
.br
.RS
Specify whether ta capture coverage data fo' external source files.

External source filez is filez which is not located up in one of tha directories
specified by \-\-directory or \-\-base\-directory. Use \-\-external ta include
external source filez while capturin coverage data or \-\-no\-external to
ignore dis data.

Data fo' external source filez is
.B included
by default.
.RE

.B \-e
.I tracefile
.I pattern
.br
.B \-\-extract
.I tracefile
.I pattern
.br
.RS
Extract data from
.IR tracefile .

Use dis switch if you wanna extract coverage data fo' only a particular
set of filez from a tracefile fo' realz. Additionizzle command line parametas will be
interpreted as shell wildcard patterns (note dat they may need ta be
escaped accordingly ta prevent tha shell from expandin dem first).
Every file entry in
.I tracefile
which matches at least one of dem patterns is ghon be extracted.

Da result of tha extract operation is ghon be freestyled ta stdout or tha tracefile
specified wit \-o.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-f
.br
.B \-\-follow
.br
.RS
Big up links when searchin fo' .da files.
.RE

.B \-\-from\-package
.I package
.br
.RS
Use .da filez in
.I package
instead of kernel or directory.

Use dis option if you have separate machines fo' build n' test and
wanna big-ass up tha .info file creation on tha build machine. Right back up in yo muthafuckin ass. See
\-\-to\-package fo' mo' shiznit.
.RE

.B \-\-gcov\-tool
.I tool
.br
.RS
Specify tha location of tha gcov tool.
.RE

.B \-h
.br
.B \-\-help
.br
.RS
Print a gangbangin' finger-lickin' dirty-ass short help text, then exit.
.RE

.B \-\-ignore\-errors
.I errors
.br
.RS
Specify a list of errors afta which ta continue processing.

Use dis option ta specify a list of one or mo' classez of errors afta which
lcov should continue processin instead of aborting.

.I errors
can be a cold-ass lil comma\-separated list of tha followin keywords:

.B gcov:
the gcov tool returned wit a non\-zero return code.

.B source:
the source code file fo' a thugged-out data set could not be found.
.RE

.B \-i
.br
.B \-\-initial
.RS
Capture initial zero coverage data.

Run lcov wit \-c n' dis option on tha directories containin .bb, .bbg
or .gcno filez before hustlin any test case. Da result be a "baseline"
coverage data file dat gotz nuff zero coverage fo' every last muthafuckin instrumented line.
Combine dis data file (usin lcov \-a) wit coverage data filez captured
afta a test run ta ensure dat tha cementage of total lines covered is
correct even when not all source code filez was loaded durin tha test.

Recommended procedure when capturin data fo' a test case:

1. create baseline coverage data file
.RS
# lcov \-c \-i \-d appdir \-o app_base.info
.br

.RE
2. big-ass up test
.RS
# appdir/test
.br

.RE
3. create test coverage data file
.RS
# lcov \-c \-d appdir \-o app_test.info
.br

.RE
4. combine baseline n' test coverage data
.RS
# lcov \-a app_base.info \-a app_test.info \-o app_total.info
.br

.RE
.RE

.B \-k
.I subdirectory
.br
.B \-\-kernel\-directory
.I subdirectory
.br
.RS
Capture kernel coverage data only from
.IR subdirectory .

Use dis option if you don't wanna git coverage data fo' all of the
kernel yo, but only fo' specific subdirectories. Put ya muthafuckin choppers up if ya feel dis! This option may be specified
more than once.

Note dat you may need ta specify tha full path ta tha kernel subdirectory
dependin on tha version of tha kernel gcov support.
.RE

.B \-l
.I tracefile
.br
.B \-\-list
.I tracefile
.br
.RS
List tha contentz of the
.IR tracefile .

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-\-list\-full\-path
.br
.B \-\-no\-list\-full\-path
.br
.RS
Specify whether ta show full paths durin list operation.

Use \-\-list\-full\-path ta show full paths durin list operation
or \-\-no\-list\-full\-path ta show shortened paths. Paths are
.B shortened
by default.
.RE

.B \-\-no\-markers
.br
.RS
Use dis option if you wanna git coverage data without regard ta exclusion
markers up in tha source code file. Right back up in yo muthafuckin ass. See
.BR "geninfo " (1)
for details on exclusion markers.
.RE

.B \-\-no\-recursion
.br
.RS
Use dis option if you wanna git coverage data fo' tha specified directory
only without processin subdirectories.
.RE

.B \-o
.I tracefile
.br
.B \-\-output\-file
.I tracefile
.br
.RS
Write data to
.I tracefile
instead of stdout.

Specify "\-" as a gangbangin' filename ta use tha standard output.

By convention, lcov\-generated coverage data filez is called "tracefiles" and
should have tha filename extension ".info".
.RE

.B \-\-path
.I path
.br
.RS
Strip path from filenames when applyin diff.

Use dis option together wit \-\-diff ta tell lcov ta disregard tha specified
initial path component when matchin between tracefile n' diff filenames.
.RE

.B \-q
.br
.B \-\-quiet
.br
.RS
Do not print progress lyrics.

This option is implied when no output filename is specified ta prevent
progress lyrics ta mess wit coverage data which be also printed to
the standard output.
.RE

.B \-\-rc
.IR keyword = value
.br
.RS
Override a cold-ass lil configuration directive.

Use dis option ta specify a
.IR keyword = value
statement which overrides tha correspondin configuration statement in
the lcovrc configuration file. Yo ass can specify dis option mo' than once
to override multiple configuration statements.
See
.BR lcovrc (5)
for a list of available keywordz n' they meaning.
.RE

.B \-r
.I tracefile
.I pattern
.br
.B \-\-remove
.I tracefile
.I pattern
.br
.RS
Remove data from
.IR tracefile .

Use dis switch if you wanna remove coverage data fo' a particular
set of filez from a tracefile fo' realz. Additionizzle command line parametas will be
interpreted as shell wildcard patterns (note dat they may need ta be
escaped accordingly ta prevent tha shell from expandin dem first).
Every file entry in
.I tracefile
which matches at least one of dem patterns is ghon be removed.

Da result of tha remove operation is ghon be freestyled ta stdout or tha tracefile
specified wit \-o.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-\-strip
.I depth
.br
.RS
Strip path components when applyin diff.

Use dis option together wit \-\-diff ta tell lcov ta disregard tha specified
number of initial directories when matchin tracefile n' diff filenames.
.RE

.B \-\-summary
.I tracefile
.br
.RS
Show summary coverage shiznit fo' tha specified tracefile.

Note dat you may specify dis option mo' than once.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.B \-t
.I testname
.br
.B \-\-test\-name
.I testname
.br
.RS
Specify test name ta be stored up in tha tracefile.

This name identifies a cold-ass lil coverage data set when mo' than one data set is merged
into a cold-ass lil combined tracefile (see option \-a).

Valid test names can consist of letters, decimal digits n' tha underscore
characta ("_").
.RE

.B \-\-to\-package
.I package
.br
.RS
Store .da filez fo' lata processing.

Use dis option if you have separate machines fo' build n' test and
wanna big-ass up tha .info file creation on tha build machine. To do this,
follow these steps:

On tha test machine:
.RS
.br
\- run tha test
.br
\- run lcov \-c [\-d directory] \-\-to-package
.I file
.br
\- copy
.I file
to tha build machine
.RE
.br

On tha build machine:
.RS
.br
\- run lcov \-c \-\-from-package
.I file
[\-o n' other options]
.RE
.br

This works fo' both kernel n' user space coverage data. Note dat you might
have ta specify tha path ta tha build directory rockin \-b with
either \-\-to\-package or \-\-from-package. Note also dat tha package data
must be converted ta a .info file before recompilin tha program or it will
become invalid.
.RE

.B \-v
.br
.B \-\-version
.br
.RS
Print version number, then exit.
.RE

.B \-z
.br
.B \-\-zerocounters
.br
.RS
Reset all execution counts ta zero.

By default tries ta reset kernel execution counts, n' you can put dat on yo' toast. Use tha \-\-directory
option ta reset all countaz of a user space program.

Only one of  \-z, \-c, \-a, \-e, \-r, \-l, \-\-diff or \-\-summary may be
specified at a time.
.RE

.SH FILES

.I /etc/lcovrc
.RS
Da system\-wide configuration file.
.RE

.I ~/.lcovrc
.RS
Da per\-user configuration file.
.RE

.SH AUTHOR
Peta Oberparleita <Peter.Oberparleiter@de.ibm.com>

.SH SEE ALSO
.BR lcovrc (5),
.BR genhtml (1),
.BR geninfo (1),
.BR genpng (1),
.BR gendesc (1),
.BR gcov (1)
