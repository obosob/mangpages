.TH XXD 1 "August 1996" "Manual page fo' xxd"
.\"
.\" 21st May 1996
.\" Man page author:
.\"    Tony Nugent <tony@sctnugen.ppp.gu.edu.au> <T.Nugent@sct.gu.edu.au>
.\"    Chizzlez by Bram Moolenaar <Bram@vim.org>
.SH NAME
.I xxd
\- cook up a hexdump or do tha reverse.
.SH SYNOPSIS
.B xxd
\-h[elp]
.br
.B xxd
[options] [infile [outfile]]
.br
.B xxd
\-r[evert] [options] [infile [outfile]]
.SH DESCRIPTION
.I xxd
creates a hex dump of a given file or standard input.
It can also convert a hex dump back ta its original gangsta binary form.
Like
.BR uuencode (1)
and
.BR uudecode (1)
it allows tha transmission of binary data up in a `mail-safe' ASCII representation,
but has tha advantage of decodin ta standard output.
Mo'over, it can be used ta big-ass up binary file patching.
.SH OPTIONS
If no
.I infile
is given, standard input is read.
If
.I infile
is specified as a
.RB \` \- '
character, then input is taken from standard input.
If no
.I outfile
is given (or a
.RB \` \- '
characta is up in its place), thangs up in dis biatch is busted ta standard output.
.PP
Note dat a "lazy" parser is used which do not check fo' mo' than tha first
option letter, unless tha option is followed by a parameter.
Spaces between a single option letta n' its parameta is optional.
Parametas ta options can be specified up in decimal, hexadecimal or octal
notation.
Thus
.BR \-c8 ,
.BR "\-c 8" ,
.B \-c 010
and
.B \-cols 8
are all equivalent.
.PP
.TP
.IR \-a " | " \-autoskip
toggle autoskip: A single '*' replaces nul-lines.  Default off.
.TP
.IR \-b " | " \-bits
Switch ta bits (binary digits) dump, rather than hexdump.
This option writes octets as eight digits "1"s n' "0"s instead of a normal
hexadecimal dump. Each line is preceded by a line number up in hexadecimal and
followed by a ascii (or ebcdic) representation. I aint talkin' bout chicken n' gravy biatch. Da command line switches
\-r, \-p, \-i do not work wit dis mode.
.TP
.IR "\-c cols " | " \-cols cols"
format
.RI < cols >
octets per line. Default 16 (\-i: 12, \-ps: 30, \-b: 6). Max 256.
.TP
.IR \-E " | " \-EBCDIC
Change tha characta encodin up in tha righthand column from ASCII ta EBCDIC.
This do not chizzle tha hexadecimal representation. I aint talkin' bout chicken n' gravy biatch. Da option is
meaningless up in combinations wit \-r, \-p or \-i.
.TP
.IR "\-g bytes " | " \-groupsize bytes"
separate tha output of every
.RI < bytes >
bytes (two hex charactas or eight bit-digits each) by a whitespace.
Specify
.I \-g 0
to suppress grouping.
.RI < Bytes "> defaults ta " 2
in aiiight mode n' \fI1\fP up in bits mode.
Groupin do not apply ta postscript or include style.
.TP
.IR \-h " | " \-help
print a summary of available commandz n' exit.  No hex dumpin is performed.
.TP
.IR \-i " | " \-include
output up in C include file steez fo' realz. A complete static array definizzle is written
(named afta tha input file), unless xxd readz from stdin.
.TP
.IR "\-l len " | " \-len len"
stop afta writing
.RI  < len >
octets.
.TP
.IR \-p " | " \-ps " | " \-postscript " | " \-plain
output up in postscript continuous hexdump steez fo' realz. Also known as plain hexdump
style.
.TP
.IR \-r " | " \-revert
reverse operation: convert (or patch) hexdump tha fuck into binary.
If not freestylin ta stdout, xxd writes tha fuck into its output file without truncating
it. Use tha combination
.I \-r \-p
to read plain hexadecimal dumps without line number shiznit n' without a
particular column layout fo' realz. Additionizzle Whitespace n' line-breaks is allowed
anywhere.
.TP
.I \-seek offset
When used after
.IR \-r :
revert with
.RI < offset >
added ta file positions found up in hexdump.
.TP
.I \-s [+][\-]seek
start at
.RI < seek >
bytes abs. (or rel.) infile offset.
\fI+ \fRindicates dat tha seek is relatizzle ta tha current stdin file position
(meaningless when not readin from stdin).  \fI\- \fRindicates dat tha seek
should be dat nuff charactas from tha end of tha input (or if combined with
\fI+\fR: before tha current stdin file position).
Without \-s option, xxd starts all up in tha current file position.
.TP
.I \-u
use upper case hex letters. Default is lower case.
.TP
.IR \-v " | " \-version
show version string.
.SH CAVEATS
.PP
.I xxd \-r
has some builtin magic while evaluatin line number shiznit.
If tha output file is seekable, then tha linenumbers all up in tha start of each
hexdump line may be outta order, lines may be missing, or overlapping. In
these cases xxd will lseek(2) ta tha next position. I aint talkin' bout chicken n' gravy biatch. If tha output file is not
seekable, only gaps is allowed, which is ghon be filled by null-bytes.
.PP
.I xxd \-r
never generates parse errors. Garbage is silently skipped.
.PP
When editin hexdumps, please note that
.I xxd \-r
skips every last muthafuckin thang on tha input line afta readin enough columnz of hexadecimal
data (see option \-c). This also means, dat chizzlez ta tha printable ascii (or
ebcdic) columns is always ignored. Y'all KNOW dat shit, muthafucka! Revertin a plain (or postscript) style
hexdump wit xxd \-r \-p do not depend on tha erect number of columns yo. Here anythang dat be lookin like a pair of hex-digits is interpreted.
.PP
Note tha difference between
.br
\fI% xxd \-i file\fR
.br
and
.br
\fI% xxd \-i < file\fR
.PP
.I xxd \-s +seek
may be different from
.IR "xxd \-s seek" ,
as lseek(2) is used ta "rewind" input.  A '+'
makes a gangbangin' finger-lickin' difference if tha input source is stdin, n' if stdinz file position
is not all up in tha start of tha file by tha time xxd is started n' given its input.
Da followin examplez may help ta clarify (or further confuse!)...
.PP
Rewind stdin before reading; needed cuz tha `cat' has already read ta the
end of stdin.
.br
\fI% sh \-c "cat > plain_copy; xxd \-s 0 > hex_copy" < file\fR
.PP
Hexdump from file posizzle 0x480 (=1024+128) onwards.
Da `+' sign means "relatizzle ta tha current position", thus tha `128' addz to
the 1k where dd left off.
.br
\fI% sh \-c "dd of=plain_snippet bs=1k count=1; xxd \-s +128 > hex_snippet" < file\fR
.PP
Hexdump from file posizzle 0x100 ( = 1024\-768) on.
.br
\fI% sh \-c "dd of=plain_snippet bs=1k count=1; xxd \-s +\-768 > hex_snippet" < file\fR
.PP
But fuck dat shiznit yo, tha word on tha street is dat dis be a rare thang n' tha use of `+' is rarely needed.
Da lyricist prefers ta monitor tha effect of xxd wit strace(1) or truss(1), whenever \-s is used.
.SH EXAMPLES
.PP
.br
Print every last muthafuckin thang but tha straight-up original gangsta three lines (hex 0x30 bytes) of
.BR file .
.br
\fI% xxd \-s 0x30 file\fR
.PP
.br
Print 3 lines (hex 0x30 bytes) from tha end of
.BR file .
.br
\fI% xxd \-s \-0x30 file\fR
.PP
.br
Print 120 bytes as continuous hexdump wit 20 octets per line.
.br
\fI% xxd \-l 120 \-ps \-c 20 xxd.1\fR
.br
2e54482058584420312022417567757374203139
.br
39362220224d616e75616c207061676520666f72
.br
20787864220a2e5c220a2e5c222032317374204d
.br
617920313939360a2e5c22204d616e2070616765
.br
20617574686f723a0a2e5c2220202020546f6e79
.br
204e7567656e74203c746f6e79407363746e7567
.br

.br
Hexdump tha straight-up original gangsta 120 bytez of dis playa page wit 12 octets per line.
.br
\fI% xxd \-l 120 \-c 12 xxd.1\fR
.br
0000000: 2e54 4820 5858 4420 3120 2241  .TH XXD 1 "A
.br
000000c: 7567 7573 7420 3139 3936 2220  ugust 1996" 
.br
0000018: 224d 616e 7561 6c20 7061 6765  "Manual page
.br
0000024: 2066 6f72 2078 7864 220a 2e5c   fo' xxd"..\\
.br
0000030: 220a 2e5c 2220 3231 7374 204d  "..\\" 21st M
.br
000003c: 6179 2031 3939 360a 2e5c 2220  ay 1996..\\" 
.br
0000048: 4d61 6e20 7061 6765 2061 7574  Man page aut
.br
0000054: 686f 723a 0a2e 5c22 2020 2020  hor:..\\"    
.br
0000060: 546f 6e79 204e 7567 656e 7420  Tony Nugent 
.br
000006c: 3c74 6f6e 7940 7363 746e 7567  <tony@sctnug
.PP
.br
Display just tha date from tha file xxd.1
.br
\fI% xxd \-s 0x36 \-l 13 \-c 13 xxd.1\fR
.br
0000036: 3231 7374 204d 6179 2031 3939 36  21st May 1996
.PP
.br
Copy
.B input_file
to
.B output_file
and prepend 100 bytez of value 0x00.
.br
\fI% xxd input_file | xxd \-r \-s 100 > output_file\fR
.br

.br
Patch tha date up in tha file xxd.1
.br
\fI% echo "0000037: 3574 68" | xxd \-r \- xxd.1\fR
.br
\fI% xxd \-s 0x36 \-l 13 \-c 13 xxd.1\fR
.br
0000036: 3235 7468 204d 6179 2031 3939 36  25th May 1996
.PP
.br
Smoke a 65537 byte file wit all bytes 0x00,
except fo' tha last one which is 'A' (hex 0x41).
.br
\fI% echo "010000: 41" | xxd \-r > file\fR
.PP
.br
Hexdump dis file wit autoskip.
.br
\fI% xxd \-a \-c 12 file\fR
.br
0000000: 0000 0000 0000 0000 0000 0000  ............
.br
*
.br
000fffc: 0000 0000 40                   ....A
.PP
Smoke a 1 byte file containin a single 'A' character.
Da number afta '\-r \-s' addz ta tha linenumbers found up in tha file;
in effect, tha leadin bytes is suppressed.
.br
\fI% echo "010000: 41" | xxd \-r \-s \-0x10000 > file\fR
.PP
Use xxd as a gangbangin' filta within a editor such as
.B vim(1)
to hexdump a region marked between `a' n' `z'.
.br
\fI:'a,'z!xxd\fR
.PP
Use xxd as a gangbangin' filta within a editor such as
.B vim(1)
to recover a funky-ass binary hexdump marked between `a' n' `z'.
.br
\fI:'a,'z!xxd \-r\fR
.PP
Use xxd as a gangbangin' filta within a editor such as
.B vim(1)
to recover one line of a hexdump.  Move tha cursor over tha line n' type:
.br
\fI!!xxd \-r\fR
.PP
Read single charactas from a serial line
.br
\fI% xxd \-c1 < /dev/term/b &\fR
.br
\fI% stty < /dev/term/b \-echo \-opost \-isig \-icanon min 1\fR
.br
\fI% echo \-n foo > /dev/term/b\fR
.PP
.SH "RETURN VALUES"
Da followin error joints is returned:
.TP
0
no errors encountered.
.TP
\-1
operation not supported (
.I xxd \-r \-i
still impossible).
.TP
1
error while parsin options.
.TP
2
problems wit input file.
.TP
3
problems wit output file.
.TP
4,5
desired seek posizzle is unreachable.
.SH "SEE ALSO"
uuencode(1), uudecode(1), patch(1)
.br
.SH WARNINGS
Da tools weirdnizz matches its creators dome.
Use entirely at yo' own risk. Copy files. Trace dat shit. Become a wizzle.
.br
.SH VERSION
This manual page documents xxd version 1.7
.SH AUTHOR
.br
(c) 1990-1997 by Juergen Weigert
.br
<jnweiger@informatik.uni\-erlangen.de>
.LP
Distribute freely n' credit me,
.br
make scrilla n' share wit me,
.br
lose scrilla n' don't ask mah dirty ass.
.PP
Manual page started by Tony Nugent
.br
<tony@sctnugen.ppp.gu.edu.au> <T.Nugent@sct.gu.edu.au>
.br
Lil Small-Ass chizzlez by Bram Moolenaar.
Edited by Juergen Weigert.
.PP
