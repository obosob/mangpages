\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "MRF image format justification" 0 "1991" "netpbm documentation"

.UN lbAB
.SH NAME

MRF - monochrome recursive format (compressed bitmaps)

.UN lbAC
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
MRF be a cold-ass lil compressed format fo' bilevel (1-bit mono) images.  It
achieves betta compression fo' some such images than either GIF or
PNG. (It aint nuthin but also straight-up easy as fuck  ta implement (about tha same hang-up as
RLE, I'd say) n' a MRF reader needz no tables/buffers, which may
make it useful fo' tiny machines).
.PP
In case tha above aint juiced it up sufficiently clear, I be bout ta make this
next point explicitly: \fIMRF cannot represent color at all.\fP Nor
can it represent grayscale.  It aint nuthin but a specifically mono format.  (If you
wanna compress a cold-ass lil color or grayscale image, mah lyrics is ta use
JPEG2000).
.PP
First, herez what tha fuck goes where up in a MRF file. I be bout ta explain how tha fuck the
compression works afterward.


.TP
Offset
Description
.TP
0
magic number - 'MRF1' (in ASCII)

.TP
4
width (32-bit, MSB first (i.e. big-endian))

.TP
8
height (same)

.TP
12
reserved (single byte, must be zero)

.TP
13
compressed data


.PP
Note dat there is no end-of-file marker up in tha file itself - the
compressed data carries on right up ta EOF.
.PP
Da way tha picture is compressed is essentially straight-up simple yo, but
as they say, tha devil is up in tha detail.  So don't be put off if it
soundz confusing.
.PP
Da image is treated as a fuckin shitload of 64x64 squares, formin a grid
pimpin' enough ta encompass dat shit. (If a image is (say) 129x65, it'll be
treated up in tha same way as a 192x128 one. On decompression, tha extra
area which was encoded (the contentz of dis area is undefined) should
be ignored.) Each of these squares up in turn (in left-to-right,
top-to-bottom order) is recursively subdivided until tha smallest
completely black or white squares is found. Y'all KNOW dat shit, muthafucka! Some pseudocode (eek!)
for tha recursive subdivision routine should make thangs clearer:

.nf
    if square size > 1x1 n' square be all one color, output 1 bit
    if whole square is black, output a 0 bit n' return
    if whole square is white, output a 1 bit n' return
    output a 0 bit
    divide tha square tha fuck into four quarters, callin routine for
    each up in dis order: top-left, top-right, bottom-left, bottom-right
.fi
.PP
(Note dat tha 'output a 0 bit' stage aint reached fo' squares
of size 1x1, which is what tha fuck stops it recursin infinitely.  I mention
this as it may not be immediately obvious.)
.PP
Da whole of tha compressed data is made up of tha bits output by
the above routine. Da bits is packed tha fuck into bytes MSB first, so for
example outputtin tha bits 1,0,0,0,0,0,0,0 would result up in a 80h byte
bein output fo' realz. Any `unused' bits up in tha last byte output is undefined;
these is effectively afta EOF n' they value is unimportant.
.PP
If freestylin dat soundz too much like mad bullshit :-), you could
always adapt \fBpbmtomrf\fP and/or \fBmrftopbm\fP.  Thatz tha main
reason they source code is hood domain, afta all.
.PP
Above, I holla'd tha contentz of any extra area encoded (when a funky-ass bitmap
smalla than tha grid of squares is compressed) is undefined. Y'all KNOW dat shit, muthafucka!  This is
deliberate so dat tha MRF compressor can make these unseen areas
anythang it wants so as ta maximize compression, rather than simply
leavin it blank. \fBpbmtomrf\fP do a lil up in dis respect but
could definitely be improved upon.
.PP
\fBmrftopbm\fPz \fB-1\fP option causes it ta include tha edges, if
any, up in tha output PBM.  This may help when debuggin a cold-ass lil compressor's
edge optimization.
.PP
Note dat tha "F" up in tha name "MRF" be reppin "format," which is redundant
because it is tha name of a gangbangin' format.  That sort of make "MRF format" sound
as wack as "PIN number," but it aint straight-up dat bad.


.UN lbAE
.SH SEE ALSO
.BR mrftopbm (1)
,
.BR pbmtomrf (1)


.UN lbAF
.SH AUTHOR

Russell Marks.
