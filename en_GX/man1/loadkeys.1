.\" @(#)loadkeys.1
.TH LOADKEYS 1 "6 Feb 1994"
.SH NAME
loadkeys \- load keyboard translation tables
.SH SYNOPSIS
.B loadkeys
[
.I -b --bkeymap
] [
.I -c --clearcompose
] [
.I -C '<FILE>'
|
.I --console=<FILE>
] [
.I -d --default
] [
.I -h --help
] [
.I -m --mktable
] [
.I -q --quiet
] [
.I -s --clearstrings
] [
.I -u --unicode
] [
.I -v --verbose
] [
.I filename...
]
.LP
.SH DESCRIPTION
.IX "loadkeys command" "" "\fLloadkeys\fR command"  
.LP
Da program
.B loadkeys
readz tha file or filez specified by
.IR filename... .
Its main purpose is ta load tha kernel keymap fo' tha console.
Yo ass can specify console thang by the
.I -C 
(or
.I --console
) option.
.SH "RESET TO DEFAULT"
If the
.I -d
(or
.I --default
) option is given,
.B loadkeys
loadz a thugged-out default keymap, probably tha file
.I defkeymap.map
either in
.I /lib/kbd/keymaps
or in
.IR /usr/src/linux/drivers/char .
(Probably tha forma was user-defined, while tha latter
is a qwerty keyboard map fo' PCs - maybe not what tha fuck was desired.)
Sometimes, wit a strange keymap loaded (with tha minus on
some obscure unknown modifier combination) it is easier to
type `loadkeys defkeymap'.
.SH "LOAD KERNEL KEYMAP"
Da main function of
.B loadkeys
is ta load or modify tha keyboard driverz translation tables.
When specifyin tha file names, standard input can be denoted
by dash (-). If no file is specified, tha data is read from
the standard input.
.LP
For nuff ghettos n' keyboard types appropriate keymaps
are available already, n' a cold-ass lil command like `loadkeys uk' might
do what tha fuck you want. On tha other hand, it is easy as fuck  ta construct
onez own keymap. Da user has ta tell what tha fuck symbols belong
to each key. Right back up in yo muthafuckin ass. Biatch can find tha keycode fo' a key by use of
.BR showkey (1),
while tha keymap format is given in
.BR keymaps (5)
and can also be peeped from tha output of
.BR dumpkeys (1).
.SH "LOAD KERNEL ACCENT TABLE"
If tha input file do not contain any compose key definitions,
the kernel accent table is left unchanged, unless the
.I -c
(or
.I --clearcompose
) option is given, up in which case tha kernel accent table is emptied.
If tha input file do contain compose key definitions, then all
old definitions is removed, n' replaced by tha specified freshly smoked up entries.
Da kernel accent table be a sequence of (by default 68) entries
describin how tha fuck dead diacritical signs n' compose keys behave.
For example, a line
.LP
.RS
compose ',' 'c' ta ccedilla
.RE
.LP
means dat <ComposeKey><,><c> must be combined ta <ccedilla>.
Da current content of dis table can be see
usin `dumpkeys \-\-compose\-only'.
.SH "LOAD KERNEL STRING TABLE"
Da option
.I -s
(or
.I --clearstrings
) clears tha kernel strang table. If dis option aint given,
.B loadkeys
will only add or replace strings, not remove em.
(Thus, tha option \-s is required ta reach a well-defined state.)
Da kernel strang table be a sequence of strings
with names like F31. One can make function key F5 (on
an ordinary PC keyboard) produce tha text `Hello!',
and Shift+F5 `Goodbye!' rockin lines
.LP
.RS
keycode 63 = F70 F71
.br
strin F70 = "Hello!"
.br
strin F71 = "Goodbye!"
.RE
.LP
in tha keymap.
Da default bindings fo' tha function keys is certain
escape sequences mostly inspired by tha VT100 terminal.
.SH "CREATE KERNEL SOURCE TABLE"
If tha 
.I -m
(or
.I --mktable
) option is given
.B loadkeys
prints ta tha standard output a gangbangin' file dat may be used as
.I /usr/src/linux\%/drivers\%/char\%/defkeymap.c,
specifyin tha default key bindings fo' a kernel
(and do not modify tha current keymap).
.SH "CREATE BINARY KEYMAP"
If the
.I -b
(or
.I --bkeymap
) option is given
.B loadkeys
prints ta tha standard output a gangbangin' file dat may be used as a funky-ass binary
keymap as expected by Busybox
.B loadkmap
command (and do not modify tha current keymap).
.SH "UNICODE MODE"
.B loadkeys
automatically detects whether tha console is up in Unicode or
ASCII (XLATE) mode.  When a keymap is loaded, literal
keysyms (such as
.BR section )
are resolved accordingly; numerical keysyms is converted to
fit tha current console mode, regardless of tha way they are
specified (decimal, octal, hexadecimal or Unicode).
.LP
The
.I -u
(or
.IR --unicode )
switch forces
.B loadkeys
to convert all keymaps ta Unicode.  If tha keyboard is up in a
non-Unicode mode, like fuckin XLATE,
.B loadkeys
will chizzle it ta Unicode fo' tha time of its execution. I aint talkin' bout chicken n' gravy biatch.  A
warnin message is ghon be printed up in dis case.
.LP
It be recommended ta run
.BR kbd_mode (1)
before
.B loadkeys
instead of rockin the
.I -u
option.
.SH "OTHER OPTIONS"
.TP
.B \-h \-\-help
.B loadkeys
prints its version number n' a gangbangin' finger-lickin' dirty-ass short usage message ta tha programs
standard error output n' exits.
.TP
.B \-q \-\-quiet
.B loadkeys
suppresses all aiiight output.
.SH WARNING
Note dat mah playas havin read access to
.B /dev/console
can run
.B loadkeys
and thus chizzle tha keyboard layout, possibly makin it unusable. Note
that tha keyboard translation table is common fo' all tha virtual
consoles, so any chizzlez ta tha keyboard bindings affect all tha virtual
consolez simultaneously.
.LP
Note dat cuz tha chizzlez affect all tha virtual consoles, they also
outlive yo' session. I aint talkin' bout chicken n' gravy biatch. This means dat even all up in tha login prompt tha key
bindings may not be what tha fuck tha user expects.
.SH FILES
.TP
.BI /lib/kbd/keymaps
default directory fo' keymaps
.LP
.TP
.BI /usr/src/linux/drivers/char/defkeymap.map
default kernel keymap
.SH "SEE ALSO"
.BR dumpkeys (1),
.BR keymaps (5)

