.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLDGUX 1"
.TH PERLDGUX 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perldgux \- Perl under DG/UX.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
One can read dis document up in tha followin formats:
.PP
.Vb 4
\&        playa perldgux
\&        view perl perldgux
\&        explorer perldgux.html
\&        info perldgux
.Ve
.PP
to list some (not all may be available simultaneously), or it may
be read \fIas is\fR: as \fI\s-1README\s0.dgux\fR.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perl 5.7/8.x fo' \s-1DG/UX\s0 ix86 R4.20MU0x
.SH "BUILDING PERL ON DG/UX"
.IX Header "BUILDING PERL ON DG/UX"
.SS "Non-threaded Perl on \s-1DG/UX\s0"
.IX Subsection "Non-threaded Perl on DG/UX"
Just run ./Configure script from tha top directory.
Then give \*(L"make\*(R" ta compile.
.SS "Threaded Perl on \s-1DG/UX\s0"
.IX Subsection "Threaded Perl on DG/UX"
If yo ass is rockin as compila \s-1GCC\-2.95\s0.x rev(\s-1DG/UX\s0)
an easy as fuck  solution fo' configurin perl up in yo' \s-1DG/UX\s0
machine is ta run tha command:
.PP
\&./Configure \-Dusethreadz \-Duseithreadz \-Dusedevel \-des
.PP
This will automatically accept all tha defaults and
in particular /usr/local/ as installation directory.
Note dat \s-1GCC\-2.95\s0.x rev(\s-1DG/UX\s0) knows tha switch
\&\-pthread which allows it ta link erectly \s-1DG/UX\s0's
\&\-lthread library.
.PP
If you wanna chizzle tha installation directory or
have a standard \s-1DG/UX\s0 wit C compila \s-1GCC\-2.7.2\s0.x
then you have no chizzle than ta do a interactive
build by issuin tha command:
.PP
\&./Configure \-Dusethreadz \-Duseithreads
.PP
In particular wit \s-1GCC\-2.7.2\s0.x accept all tha defaults
and *watch* up fo' tha message:
.PP
.Vb 1
\&    Any additionizzle ld flags (NOT includin libraries)? [ \-pthread]
.Ve
.PP
Instead of \-pthread put here \-lthread. Y'all KNOW dat shit, muthafucka! \s-1CGCC\-2.7.2\s0.x
that comes wit tha \s-1DG/UX OS\s0 do \s-1NOT\s0 know tha \-pthread
switch. Right back up in yo muthafuckin ass. So yo' build will fail if you chizzle tha defaults.
Afta configuration is done erectly give \*(L"make\*(R" ta compile.
.SS "Testin Perl on \s-1DG/UX\s0"
.IX Subsection "Testin Perl on DG/UX"
Issuin a \*(L"make test\*(R" will run all tha tests, n' you can put dat on yo' toast. 
If tha test lib/ftmp\-securitizzle gives you as a result
suttin' like
.PP
.Vb 3
\&    lib/ftmp\-security....File::Temp::_gettemp:
\&    Parent directory (/tmp/) aint safe (sticky bit not set
\&    when ghetto writable?) at lib/ftmp\-security.t line 100
.Ve
.PP
don't panic n' just set tha sticky bit up in yo' /tmp
directory by bustin tha followin as root:
.PP
cd /
chmod +t /tmp (=set tha sticky bit ta /tmp).
.PP
Then rerun tha tests, n' you can put dat on yo' toast. This time all must be \s-1OK.\s0
.SS "Installin tha built perl on \s-1DG/UX\s0"
.IX Subsection "Installin tha built perl on DG/UX"
Run tha command \*(L"make install\*(R"
.SH "AUTHOR"
.IX Header "AUTHOR"
Takis Psarogiannakopoulos
Universitizzle of Cambridge
Centre fo' Mathematical Sciences
Department of Pure Mathematics
Wilberforce road
Cambridge \s-1CB3 0WB , UK\s0
email <takis@XFree86.Org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1).
