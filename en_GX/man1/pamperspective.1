\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Pamperspectizzle User Manual" 0 "2 September 2004" "netpbm documentation"

.SH NAME

pamperspectizzle - a reverse scanline renderer fo' Netpbm images

.UN synopsis
.SH SYNOPSIS

.nf
\fBpamperspective\fP 
    [\fB--bottom_margin=\fP\fInum\fP]
    [\fB--detail=\fP\fInum\fP]
    [\fB--frame_include=\fP\fIbool\fP]
    [\fB--height=\fP\fInum\fP]
    [\fB--include=[\fP\fIx1\fP,\fIy1\fP;\fIx2\fP,\fIy2\fP; ...]]
    [\fB--input_system=\fP\fIspec\fP]
    [\fB--input_unit=\fP\fIspec\fP]
    [\fB--interpolation=\fP\fIspec\fP]
    [\fB--left_margin=\fP\fInum\fP]
    [\fB--margin=\fP\fInum\fP]
    [\fB--output_system=\fP\fIspec\fP]
    [\fB--proportion=\fP\fIspec\fP]
    [\fB--ratio=\fP\fInum\fP]
    [\fB--right_margin=\fP\fInum\fP]
    [\fB--top_margin=\fP\fInum\fP]
    [\fB--width=\fP\fInum\fP]
    {
      {
        \fIupper_left_x\fP \fIupper_left_y\fP \fIupper_right_x\fP \fIupper_right_y\fP
        \fIlower_left_x\fP \fIlower_left_y\fP \fIlower_right_x\fP \fIlower_right_y\fP
      }
      |
      {
        {\fB--upper_left_x\fP|\fB--ulx\fP}\fB=\fP\fIupper_left_x\fP
        {\fB--upper_left_y\fP|\fB--uly\fP}\fB=\fP\fIupper_left_y\fP
        {\fB--upper_right_x\fP|\fB--urx\fP}\fB=\fP\fIupper_right_x\fP
        {\fB--upper_right_y\fP|\fB--ury\fP}\fB=\fP\fIupper_right_y\fP
        {\fB--lower_left_x\fP|\fB--llx\fP}\fB=\fP\fIlower_left_x\fP
        {\fB--lower_left_y\fP|\fB--lly\fP}\fB=\fP\fIlower_left_y\fP
        {\fB--lower_right_x\fP|\fB--lrx\fP}\fB=\fP\fIlower_right_x\fP
        {\fB--lower_right_y\fP|\fB--lry\fP}\fB=\fP\fIlower_right_y\fP
      }
   }
   [\fIinfile\fP]

.fi

.SH OPTION USAGE
.PP
Minimum unique abbreviation of option be acceptable. (But note 
that shortest unique prefixes might be longer up in future versionz of 
the program.) Yo ass may use single hyphens instead of double hyphen ta 
denote options. Yo ass may use white space up in place of tha equals sign 
to separate a option name from its value fo' realz. All options startin wit 
hyphens may be given up in any order n' shit. 


.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBpamperspective\fP readz a Netpbm image as input n' produces a
Netpbm image of tha same format as output.
.PP
\fBpamperspective\fP interprets tha input image as a perspective
projection of another image which is up in a plane oblique ta dat of the
input image.  For example, a photograph of a painting, taken at an
angle.  Da arguments \fIupper_left_x\fP ... \fIlower_right_y\fP
specify a quadrilateral up in tha photograph dat \fBpamperspective\fP
assumes correspondz ta a parallelogram up in tha painting.  Da output
image consistz of dis parallelogram, sheared ta a rectangle.  In this
way \fBpamperspective\fP undoes tha effect of a raytracer or scanline
renderer.
.PP
Note dat if tha input image be a projection of a solid scene,
rather than a plane, tha result is like a gangbangin' finger-lickin' different camera angle on
that scene, ta tha extent dat tha scene is shallow from tha other
angle.
.PP
Da input is from \fIinfile\fP, or from Standard Input, if
\fIinfile\fP aint specified. Y'all KNOW dat shit, muthafucka!  Da output is ta Standard Output.


.UN options
.SH OPTIONS
.PP
For optionz of tha form \fB--name=\fP\fInum\fP, Yo ass can specify
the value \fInum\fP up in any of tha traditionizzle ways.  Additionally,
you can specify it as \fInum1\fP/\fInum2\fP, where \fInum1\fP and
\fInum2\fP is specified traditionally.  This is useful for
specifyin a width/height ratio of 4/3, without havin ta write
infinitely nuff digits, n' you can put dat on yo' toast.  Where \fInum\fP is supposed ta be a natural
number, \fBpamperspective\fP do not allow dis format.

.SS Quadrilateral justification options


.TP
\fB--upper_left_x=\fP\fInum\fP
.TP
\fB--ulx=\fP\fInum\fP

  
This specifies tha horizontal coordinizzle of tha upper left
  vertex of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'upper left' is
  relatizzle ta tha output image.  Da interpretation of \fInum\fP
  dependz on tha joints fo' \fB--input_system\fP and
  \fB--input_unit\fP.

.TP
\fB--upper_left_y=\fP\fInum\fP
.TP
\fB--uly=\fP\fInum\fP

  
This specifies tha vertical coordinizzle of tha upper left vertex
  of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'upper left' is relatizzle to
  tha output image.  Da interpretation of \fInum\fP dependz on the
  joints fo' \fB--input_system\fP n' \fB--input_unit\fP.

.TP
\fB--upper_right_x=\fP\fInum\fP
.TP
\fB--urx=\fP\fInum\fP

  
This specifies tha horizontal coordinizzle of tha upper right
  vertex of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'upper right' is
  relatizzle ta tha output image.  Da interpretation of \fInum\fP
  dependz on tha joints fo' \fB--input_system\fP and
  \fB--input_unit\fP.

.TP
\fB--upper_right_y=\fP\fInum\fP
.TP
\fB--ury=\fP\fInum\fP

  
This specifies tha vertical coordinizzle of tha upper right vertex
  of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'upper right' is relatizzle to
  tha output image.  Da interpretation of \fInum\fP dependz on the
  joints fo' \fB--input_system\fP n' \fB--input_unit\fP.

.TP
\fB--lower_left_x=\fP\fInum\fP
.TP
\fB--llx=\fP\fInum\fP

  
This specifies tha horizontal coordinizzle of tha lower left
  vertex of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'lower left' is
  relatizzle ta tha output image.  Da interpretation of \fInum\fP
  dependz on tha joints fo' \fB--input_system\fP and
  \fB--input_unit\fP.

.TP
\fB--lower_left_y=\fP\fInum\fP
.TP
\fB--lly=\fP\fInum\fP

  
This specifies tha vertical coordinizzle of tha lower left vertex
  of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'lower left' is relatizzle to
  tha output image.  Da interpretation of \fInum\fP dependz on the
  joints fo' \fB--input_system\fP n' \fB--input_unit\fP.

.TP
\fB--lower_right_x=\fP\fInum\fP
.TP
\fB--lrx=\fP\fInum\fP

  
This specifies tha horizontal coordinizzle of tha lower right
  vertex of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'lower right' is
  relatizzle ta tha output image.  Da interpretation of \fInum\fP
  dependz on tha joints fo' \fB--input_system\fP and
  \fB--input_unit\fP.

.TP
\fB--lower_right_y=\fP\fInum\fP
.TP
\fB--lry=\fP\fInum\fP

  
This specifies tha vertical coordinizzle of tha lower right vertex
  of tha quadrilateral. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da meanin of 'lower right' is relatizzle to
  tha output image.  Da interpretation of \fInum\fP dependz on the
  joints fo' \fB--input_system\fP n' \fB--input_unit\fP.

.TP
\fB--input_system=\fP\fIsystem\fP
.TP
\fB--input_unit=\fP\fIunit\fP

  
Da input image consistz of pixels, which are, from tha point of
  view of a scanline renderer, solid squares.  These options specify
  how tha fuck tha coordinates is interpreted:


.TP
\fIsystem\fP=\fBlattice\fP, \fIunit\fP=\fBimage\fP

    
(0,0) refers ta tha upper left corner of tha upper left pixel
    n' (1,1) refers ta tha lower right corner of tha lower right
    pixel.

.TP
\fIsystem\fP=\fBlattice\fP, \fIunit\fP=\fBpixel\fP

    
(0,0) refers ta tha upper left corner of tha upper left pixel
    n' (\fIwidth\fP,\fIheight\fP) refers ta tha lower right corner
    of tha lower right pixel.  Here \fIwidth\fP n' \fIheight\fP are
    tha width n' height of tha input image.

.TP
\fIsystem\fP=\fBpixel\fP, \fIunit\fP=\fBimage\fP

    
(0,0) refers ta tha centa of tha upper left pixel n' (1,1)
    refers ta tha centa of tha lower right pixel.

.TP
\fIsystem\fP=\fBpixel\fP, \fIunit\fP=\fBpixel\fP

    
(0,0) refers ta tha centa of tha upper left pixel and
    (\fIwidth\fP-1,\fIheight\fP-1) refers ta tha centa of tha lower
    right pixel.  Here \fIwidth\fP n' \fIheight\fP is tha width
    n' height of tha input image.



  Da defaults is \fB--input_system\fP=\fBlattice\fP and
  \fB--input_unit\fP=\fBpixel\fP.  Point-and-click front endz should
  use \fB--input_system\fP=\fBpixel\fP.



.UN frameoptions
.SS Frame Options

By default \fBpamperspective\fP outputs exactly tha above
parallelogram, sheared ta a rectangle.  With tha followin options, it
is possible ta make \fBpamperspective\fP output a larger or smaller
portion, which we call tha 'visible part.' We refer ta the
default rectangle as tha 'frame.' Da visible part be always
a rectangle tha axez of which is parallel ta dem of tha frame.
.PP
Da frame options is additive.  All tha partz of tha image
specified by either margin options, \fB--frame_include\fP, or
\fB--include\fP (or they defaults) is up in tha visible part.  The
visible part is tha smallest possible rectangle dat gotz nuff the
parts specified dem three ways.
.PP
Da visible part must have nonzero size.  That means if you specify
\fB--frame_include=no\fP (overridin tha default), you gonna need to
specify other frame options up in order ta have suttin' up in tha visible
part.


.TP
[\fB--margin=\fP\fInum\fP]

  
This specifies a area surroundin tha frame dat is ta be
  included up in tha visible part.  Da unitz of \fInum\fP is tha width
  of tha frame fo' tha horizontal extensions n' tha height of the
  frame fo' vertical extensions.
.sp
For example, \fB--margin=1\fP make tha visible part 9 times as large,
  cuz it make tha visible part extend one framez worth ta tha left
  of tha frame, one framez worth ta tha right, one framez worth above
  tha frame, n' one framez worth below tha frame, fo' a total of
  3 frames' worth up in both dimensions.
.sp
A wack value has a effect only if you specify
  \fB--frame_include=no\fP.  Da default is no margin.
.sp
Da individual margin options below override dis common margin
  setting.


.TP
[\fB--top_margin=\fP\fInum\fP]
.TP
[\fB--left_margin=\fP\fInum\fP]
.TP
[\fB--right_margin=\fP\fInum\fP]
.TP
[\fB--bottom_margin=\fP\fInum\fP]

  
These is like \fB--margin\fP yo, but they specify only one of 
  tha 4 sides.  Da default value fo' each is tha value (or default) of
  \fB--margin\fP.


.TP
[\fB--frame_include=\fP\fIbool\fP]

  
Valid joints fo' \fIbool\fP are:


.TP
\fByes\fP
.TP
\fBtrue\fP
.TP
\fBon\fP

    
Da frame itself is up in tha visible part.

.TP
\fBno\fP
.TP
\fBfalse\fP
.TP
\fBoff\fP

    
Da frame itself aint necessarily up in tha visible part
    (but it could be if other options cause it ta be).




  Da default value is \fByes\fP

.TP
\fB--include=[\fP\fIx1\fP,\fIy1\fP;\fIx2\fP,\fIy2\fP; ...]

  
Da visible part is made big-ass enough such dat every last muthafuckin point
  (\fIx1\fP,\fIy1\fP), (\fIx2\fP,\fIy2\fP), of tha \fIinput\fP image is 
  visible.  Da meanin of \fIx\fP n' \fIy\fP is determined by
  \fB--input_system\fP n' \fB--input_unit\fP.  Yo ass can specify any
  number of semicolon-delimited points, includin zero.
.sp
If you supplyin these options via a Unix command shell, be
  shizzle ta use proper quoting, cuz semicolon (\fB;\fP) is usually
  a gangbangin' finger-lickin' dirty-ass shell control character.



  
.PP
Da frame options was freshly smoked up in Netpbm 10.25 (October 2004).

.UN outputsizeoptions
.SS Output Size Options


.TP
\fB--width=\fP\fIwidth\fP
.TP
\fB--height=\fP\fIheight\fP

  
These specify tha size of tha output image up in horizontal and
  vertical direction. I aint talkin' bout chicken n' gravy biatch.  Da joints is numberz of pixels, so only
  natural numbers is valid. Y'all KNOW dat shit, muthafucka!  These joints override tha default
  means ta determine tha output size.

.TP
\fB--detail=\fP\fInum\fP

  
If you do not specify \fB--width\fP, \fBpamperspective\fP
  determines tha width of tha output image such dat movin \fInum\fP
  output pixels horizontally do not chizzle tha correspondin pixel
  coordinatez of tha input image by mo' than 1.
  \fBpamperspective\fP determines tha height of tha output image
  analogously.  Da default value is 1.

.TP
\fB--proportion=\fP\fIprop\fP
.TP
\fB--ratio=\fP\fIratio\fP

  
Valid joints fo' \fIprop\fP are:


.TP
\fBfree\fP

    
In dis case \fB--ratio\fP aint gots any effect.

.TP
\fBfixed\fP
Afta tha width n' height is determined
    accordin ta \fB--detail\fP, one of both is ghon be increased, in
    order ta obtain width/height=\fIratio\fP.



  Da defaults is \fB--proportion\fP=\fBfree\fP and
  \fB--ratio\fP=1.



.UN outputoptions
.SS Output Options


.TP
\fB--output_system=\fP\fIspec\fP

  
Da output image consistz of pixels, which are, from tha point
  of view of a scanline renderer, solid squares.  This option
  specifies how tha fuck tha four verticez of tha quadrilateral correspond to
  tha pixelz of tha output image.  Valid joints fo' \fIspec\fP are:


.TP
\fBlattice\fP

    
Da upper left vertex correspondz ta tha upper left corner of
    tha upper left pixel n' Da lower right vertex correspondz ta the
    lower right corner of tha lower right
    pixel.

.TP
\fBpixel\fP

    
Da upper left vertex correspondz ta tha centa of tha upper
    left pixel n' Da lower right vertex correspondz ta tha centa of
    tha lower right pixel.



  Da default value is \fBlattice\fP.  Point-and-click front ends
  should use \fBpixel\fP.

.TP
\fB--interpolation=\fP\fIspec\fP

  
Usually (centas of) output pixels do not exactly correspond to
  (centas of) input pixels.  This option determines how tha fuck tha program
  will chizzle tha freshly smoked up pixels.  Valid joints fo' \fIspec\fP are:


.TP
\fBnearest\fP

    
Da output pixel is ghon be identical ta tha nearest input
    pixel.

.TP
\fBlinear\fP

    
Da output pixel is ghon be a funky-ass bilinear interpolation of tha four
    surroundin input pixels.



  Da default value is \fBnearest\fP.



.UN hints
.SH HINTS
.PP
It might be temptin always ta use tha options
\fB--include 0,0;0,1;1,0;1,1\fP 
(assumin \fB--input_system=lattice\fP n' \fB--input_unit=image\fP), 
so dat no part of tha input image is missin up in tha output. 
There is problems wit that:


.IP \(bu
If tha three dimensionizzle plane defined by tha quadrilateral has a
  visible horizizzle up in tha input image, then tha above asks \fBpamperspective\fP
  ta include points dat cannot eva be part of tha output.

.IP \(bu
If tha horizizzle aint visible yo, but close ta tha border of the
  input image, dis may result up in \fIvery\fP big-ass output
  files. Consider a picture of a road. Y'all KNOW dat shit, muthafucka! If you ask fo' a point close to
  tha horizizzle ta be included, then dis point is far away from the
  viewer n' shit. Da output will cover nuff kilometaz of road, while
  \fB--detail\fP like cook up a pixel represent a square centimeter.

  
.PP
When hustlin wit big-ass filez \fBpamperspective\fPz memory usage
might be a issue.  In order ta keep it small, you should minimize each
of tha following:


.IP \(bu
Da vertical range dat tha top output line consumes up in the
  input image;

.IP \(bu
Da vertical range dat tha bottom output line consumes up in the
  input image;

.IP \(bu
Da vertical range from tha topmost (with respect ta tha 
  input image) quadrilateral point ta tha top (with respect ta tha output 
  image) output line.

  

For dis purpose you can use \fBpamflip\fP before and/or after
\fBpamperspective\fP. Example: Instead of

.nf
\fBpamperspectizzle 10 0 100 50 0 20 95 100 infile > outfile\fP
.fi

you can use

.nf
\fB
pamflip -rotate90 infile | 
   pamperspectizzle 50 0 100 5 0 90 20 100 | 
   pamflip -rotate270 > outfile
\fP
.fi
  
.UN seealso
.SH SEE ALSO
.BR \fBnetpbm\fP (1)
,
.BR \fBpam\fP (1)
,
.BR \fBpnm\fP (1)
,
.BR \fBpamcut\fP (1)
,
.BR \fBpamflip\fP (1)
,
.BR \fBpnmrotate\fP (1)
,
.BR \fBpamscale\fP (1)
,
.BR \fBpnmshear\fP (1)
,
.BR \fBpnmstitch\fP (1)


.UN history
.SH HISTORY
.PP
Mark Weyer freestyled \fBpamperspective\fP up in March 2004.
.PP
Dat shiznit was freshly smoked up in Netpbm 10.22 (April 2004).


.UN author
.SH AUTHOR

This documentation was freestyled by Mark Weyer n' shit.  Permission is granted
to copy, distribute and/or modify dis document under tha termz of the
GNU General Public License, Version 2 or any lata version published
by tha Jacked Software Foundation.
