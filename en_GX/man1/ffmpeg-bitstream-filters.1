.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FFMPEG-BITSTREAM-FILTERS 1"
.TH FFMPEG-BITSTREAM-FILTERS 1 "2015-01-03" " " " "
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ffmpeg\-bitstream\-filtas \- FFmpeg bitstream filters
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout tha bitstream filtas provided by the
libavcodec library.
.PP
A bitstream filta operates on tha encoded stream data, n' performs
bitstream level modifications without struttin decoding.
.SH "BITSTREAM FILTERS"
.IX Header "BITSTREAM FILTERS"
When you configure yo' FFmpeg build, all tha supported bitstream
filtas is enabled by default. Yo ass can list all available ones using
the configure option \f(CW\*(C`\-\-list\-bsfs\*(C'\fR.
.PP
Yo ass can disable all tha bitstream filtas rockin tha configure option
\&\f(CW\*(C`\-\-disable\-bsfs\*(C'\fR, n' selectively enable any bitstream filta using
the option \f(CW\*(C`\-\-enable\-bsf=BSF\*(C'\fR, or you can disable a particular
bitstream filta rockin tha option \f(CW\*(C`\-\-disable\-bsf=BSF\*(C'\fR.
.PP
Da option \f(CW\*(C`\-bsfs\*(C'\fR of tha ff* tools will display tha list of
all tha supported bitstream filtas included up in yo' build.
.PP
Below be a thugged-out description of tha currently available bitstream filters.
.SS "aac_adtstoasc"
.IX Subsection "aac_adtstoasc"
Convert \s-1MPEG\-2/4 AAC ADTS\s0 ta \s-1MPEG\-4\s0 Audio Specific Configuration
bitstream filter.
.PP
This filta creates a \s-1MPEG\-4\s0 AudioSpecificConfig from a \s-1MPEG\-2/4
ADTS\s0 header n' removes tha \s-1ADTS\s0 header.
.PP
This is required fo' example when copyin a \s-1AAC\s0 stream from a raw
\&\s-1ADTS AAC\s0 container ta a \s-1FLV\s0 or a \s-1MOV/MP4\s0 file.
.SS "chomp"
.IX Subsection "chomp"
Remove zero paddin all up in tha end of a packet.
.SS "dump_extra"
.IX Subsection "dump_extra"
Add extradata ta tha beginnin of tha filtered packets.
.PP
Da additionizzle argument specifies which packets should be filtered.
It accepts tha joints:
.IP "\fBa\fR" 4
.IX Item "a"
add extradata ta all key packets yo, but only if \fIlocal_header\fR is
set up in tha \fBflags2\fR codec context field
.IP "\fBk\fR" 4
.IX Item "k"
add extradata ta all key packets
.IP "\fBe\fR" 4
.IX Item "e"
add extradata ta all packets
.PP
If not specified it be assumed \fBk\fR.
.PP
For example tha followin \fBffmpeg\fR command forces a global
header (thus disablin individual packet headers) up in tha H.264 packets
generated by tha \f(CW\*(C`libx264\*(C'\fR encoder yo, but erects dem by adding
the header stored up in extradata ta tha key packets:
.PP
.Vb 1
\&        ffmpeg \-i INPUT \-map 0 \-flags:v +global_header \-c:v libx264 \-bsf:v dump_extra out.ts
.Ve
.SS "h264_mp4toannexb"
.IX Subsection "h264_mp4toannexb"
Convert a H.264 bitstream from length prefixed mode ta start code
prefixed mode (as defined up in tha Annex B of tha ITU-T H.264
specification).
.PP
This is required by some streamin formats, typically tha \s-1MPEG\-2\s0
transhiznit stream format (\*(L"mpegts\*(R").
.PP
For example ta remux a \s-1MP4\s0 file containin a H.264 stream ta mpegts
format wit \fBffmpeg\fR, you can use tha command:
.PP
.Vb 1
\&        ffmpeg \-i INPUT.mp4 \-codec copy \-bsf:v h264_mp4toannexb OUTPUT.ts
.Ve
.SS "imx_dump_header"
.IX Subsection "imx_dump_header"
.SS "mjpeg2jpeg"
.IX Subsection "mjpeg2jpeg"
Convert \s-1MJPEG/AVI1\s0 packets ta full \s-1JPEG/JFIF\s0 packets.
.PP
\&\s-1MJPEG\s0 be a vizzle codec wherein each vizzle frame is essentially a
\&\s-1JPEG\s0 image. Da individual frames can be extracted without loss,
e.g. by
.PP
.Vb 1
\&        ffmpeg \-i ../some_mjpeg.avi \-c:v copy frames_%d.jpg
.Ve
.PP
Unfortunately, these chunks is incomplete \s-1JPEG\s0 images, cuz
they lack tha \s-1DHT\s0 segment required fo' decoding. Quotin from
<\fBhttp://www.digitalpreservation.gov/formats/fdd/fdd000063.shtml\fR>:
.PP
Avery Lee, freestylin up in tha rec.video.desktop newsgroup up in 2001,
commented dat \*(L"\s-1MJPEG,\s0 or at least tha \s-1MJPEG\s0 up in AVIs havin the
\&\s-1MJPG\s0 fourcc, is restricted \s-1JPEG\s0 wit a gangbangin' fixed \*(-- n' *omitted* \*(--
Huffman table. Da \s-1JPEG\s0 must be YCbCr colorspace, it must be 4:2:2,
and it must use basic Huffman encoding, not arithmetic or
progressive. . . . Yo ass can indeed extract tha \s-1MJPEG\s0 frames and
decode dem wit a regular \s-1JPEG\s0 decoder yo, but you gotta prepend
the \s-1DHT\s0 segment ta them, or else tha decoder won't have any idea
how ta decompress tha data. Da exact table necessary is given in
the OpenDML spec.\*(R"
.PP
This bitstream filta patches tha header of frames extracted from a \s-1MJPEG\s0
stream (carryin tha \s-1AVI1\s0 header \s-1ID\s0 n' lackin a \s-1DHT\s0 segment) to
produce straight-up qualified \s-1JPEG\s0 images.
.PP
.Vb 3
\&        ffmpeg \-i mjpeg\-movie.avi \-c:v copy \-bsf:v mjpeg2jpeg frame_%d.jpg
\&        exiftran \-i \-9 frame*.jpg
\&        ffmpeg \-i frame_%d.jpg \-c:v copy rotated.avi
.Ve
.SS "mjpega_dump_header"
.IX Subsection "mjpega_dump_header"
.SS "movsub"
.IX Subsection "movsub"
.SS "mp3_header_compress"
.IX Subsection "mp3_header_compress"
.SS "mp3_header_decompress"
.IX Subsection "mp3_header_decompress"
.SS "noise"
.IX Subsection "noise"
.SS "remove_extra"
.IX Subsection "remove_extra"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIffmpeg\fR\|(1), \fIffplay\fR\|(1), \fIffprobe\fR\|(1), \fIffserver\fR\|(1), \fIlibavcodec\fR\|(3)
.SH "AUTHORS"
.IX Header "AUTHORS"
Da FFmpeg pimpers.
.PP
For details bout tha authorship, peep tha Git history of tha project
(git://source.ffmpeg.org/ffmpeg), e.g. by typin tha command
\&\fBgit log\fR up in tha FFmpeg source directory, or browsin the
online repository at <\fBhttp://source.ffmpeg.org\fR>.
.PP
Maintainers fo' tha specific components is listed up in tha file
\&\fI\s-1MAINTAINERS\s0\fR up in tha source code tree.
