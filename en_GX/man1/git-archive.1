'\" t
.\"     Title: git-archive
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-ARCHIVE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-archive \- Smoke a archive of filez from a named tree
.SH "SYNOPSIS"
.sp
.nf
\fIgit archive\fR [\-\-format=<fmt>] [\-\-list] [\-\-prefix=<prefix>/] [<extra>]
              [\-o <file> | \-\-output=<file>] [\-\-worktree\-attributes]
              [\-\-remote=<repo> [\-\-exec=<git\-upload\-archive>]] <tree\-ish>
              [<path>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
Creates a archive of tha specified format containin tha tree structure fo' tha named tree, n' writes it up ta tha standard output\&. If <prefix> is specified it is prepended ta tha filenames up in tha archive\&.
.sp
\fIgit archive\fR behaves differently when given a tree ID versus when given a cold-ass lil commit ID or tag ID\&. In tha straight-up original gangsta case tha current time is used as tha modification time of each file up in tha archive\&. In tha latta case tha commit time as recorded up in tha referenced commit object is used instead\& fo' realz. Additionally tha commit ID is stored up in a global extended pax header if tha tar format is used; it can be extracted rockin \fIgit get\-tar\-commit\-id\fR\&. In ZIP filez it is stored as a gangbangin' file comment\&.
.SH "OPTIONS"
.PP
\-\-format=<fmt>
.RS 4
Format of tha resultin archive:
\fItar\fR
or
\fIzip\fR\&. If dis option aint given, n' tha output file is specified, tha format is inferred from tha filename if possible (e\&.g\&. freestylin ta "foo\&.zip" make tha output ta be up in tha zip format)\&. Otherwise tha output format is
tar\&.
.RE
.PP
\-l, \-\-list
.RS 4
Show all available formats\&.
.RE
.PP
\-v, \-\-verbose
.RS 4
Report progress ta stderr\&.
.RE
.PP
\-\-prefix=<prefix>/
.RS 4
Prepend <prefix>/ ta each filename up in tha archive\&.
.RE
.PP
\-o <file>, \-\-output=<file>
.RS 4
Write tha archive ta <file> instead of stdout\&.
.RE
.PP
\-\-worktree\-attributes
.RS 4
Look fo' attributes up in \&.gitattributes filez up in tha hustlin tree as well (see
the section called \(lqATTRIBUTES\(rq)\&.
.RE
.PP
<extra>
.RS 4
This can be any options dat tha archiver backend understands\&. Right back up in yo muthafuckin ass. See next section\&.
.RE
.PP
\-\-remote=<repo>
.RS 4
Instead of bustin a tar archive from tha local repository, retrieve a tar archive from a remote repository\&.
.RE
.PP
\-\-exec=<git\-upload\-archive>
.RS 4
Used wit \-\-remote ta specify tha path ta the
\fIgit\-upload\-archive\fR
on tha remote side\&.
.RE
.PP
<tree\-ish>
.RS 4
Da tree or commit ta produce a archive for\&.
.RE
.PP
<path>
.RS 4
Without a optionizzle path parameter, all filez n' subdirectoriez of tha current hustlin directory is included up in tha archive\&. If one or mo' paths is specified, only these is included\&.
.RE
.SH "BACKEND EXTRA OPTIONS"
.SS "zip"
.PP
\-0
.RS 4
Store tha filez instead of deflatin them\&.
.RE
.PP
\-9
.RS 4
Highest n' slowest compression level\&. Yo ass can specify any number from 1 ta 9 ta adjust compression speed n' ratio\&.
.RE
.SH "CONFIGURATION"
.PP
tar\&.umask
.RS 4
This variable can be used ta restrict tha permission bitz of tar archive entries\&. Da default is 0002, which turns off tha ghetto write bit\&. Da special value "user" indicates dat tha archivin user\(cqs umask is ghon be used instead\&. Right back up in yo muthafuckin ass. See umask(2) fo' details\&. If
\-\-remote
is used then only tha configuration of tha remote repository takes effect\&.
.RE
.PP
tar\&.<format>\&.command
.RS 4
This variable specifies a gangbangin' finger-lickin' dirty-ass shell command all up in which tha tar output generated by
git archive
should be piped\&. Da command is executed rockin tha shell wit tha generated tar file on its standard input, n' should produce tha final output on its standard output\& fo' realz. Any compression\-level options is ghon be passed ta tha command (e\&.g\&., "\-9")\& fo' realz. An output file wit tha same extension as
<format>
will be use dis format if no other format is given\&.
.sp
Da "tar\&.gz" n' "tgz" formats is defined automatically n' default to
gzip \-cn\&. Yo ass may override dem wit custom commands\&.
.RE
.PP
tar\&.<format>\&.remote
.RS 4
If true, enable
<format>
for use by remote clients via
\fBgit-upload-archive\fR(1)\&. Defaults ta false fo' user\-defined formats yo, but legit fo' tha "tar\&.gz" n' "tgz" formats\&.
.RE
.SH "ATTRIBUTES"
.PP
export\-ignore
.RS 4
Filez n' directories wit tha attribute export\-ignore won\(cqt be added ta archive files\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.PP
export\-subst
.RS 4
If tha attribute export\-subst is set fo' a gangbangin' file then Git will expand nuff muthafuckin placeholdaz when addin dis file ta a archive\&. Right back up in yo muthafuckin ass. See
\fBgitattributes\fR(5)
for details\&.
.RE
.sp
Note dat attributes is by default taken from tha \&.gitattributes filez up in tha tree dat is bein archived\&. If you wanna tweak tha way tha output is generated afta tha fact (e\&.g\&. you committed without addin a appropriate export\-ignore up in its \&.gitattributes), adjust tha checked up \&.gitattributes file as necessary n' use \-\-worktree\-attributes option\& fo' realz. Alternatively you can keep necessary attributes dat should apply while archivin any tree up in yo' $GIT_DIR/info/attributes file\&.
.SH "EXAMPLES"
.PP
git archive \-\-format=tar \-\-prefix=junk/ HEAD | (cd /var/tmp/ && tar xf \-)
.RS 4
Smoke a tar archive dat gotz nuff tha contentz of tha sickest fuckin commit on tha current branch, n' extract it up in the
/var/tmp/junk
directory\&.
.RE
.PP
git archive \-\-format=tar \-\-prefix=git\-1\&.4\&.0/ v1\&.4\&.0 | gzip >git\-1\&.4\&.0\&.tar\&.gz
.RS 4
Smoke a cold-ass lil compressed tarbizzle fo' v1\&.4\&.0 release\&.
.RE
.PP
git archive \-\-format=tar\&.gz \-\-prefix=git\-1\&.4\&.0/ v1\&.4\&.0 >git\-1\&.4\&.0\&.tar\&.gz
.RS 4
Same as above yo, but rockin tha builtin tar\&.gz handling\&.
.RE
.PP
git archive \-\-prefix=git\-1\&.4\&.0/ \-o git\-1\&.4\&.0\&.tar\&.gz v1\&.4\&.0
.RS 4
Same as above yo, but tha format is inferred from tha output file\&.
.RE
.PP
git archive \-\-format=tar \-\-prefix=git\-1\&.4\&.0/ v1\&.4\&.0^{tree} | gzip >git\-1\&.4\&.0\&.tar\&.gz
.RS 4
Smoke a cold-ass lil compressed tarbizzle fo' v1\&.4\&.0 release yo, but without a global extended pax header\&.
.RE
.PP
git archive \-\-format=zip \-\-prefix=git\-docs/ HEAD:Documentation/ > git\-1\&.4\&.0\-docs\&.zip
.RS 4
Put every last muthafuckin thang up in tha current head\(cqs Documentation/ directory into
\fIgit\-1\&.4\&.0\-docs\&.zip\fR, wit tha prefix
\fIgit\-docs/\fR\&.
.RE
.PP
git archive \-o sickest fuckin\&.zip HEAD
.RS 4
Smoke a Zip archive dat gotz nuff tha contentz of tha sickest fuckin commit on tha current branch\&. Note dat tha output format is inferred by tha extension of tha output file\&.
.RE
.PP
git config tar\&.tar\&.xz\&.command "xz \-c"
.RS 4
Configure a "tar\&.xz" format fo' makin LZMA\-compressed tarfiles\&. Yo ass can use it specifying
\-\-format=tar\&.xz, or by bustin a output file like
\-o foo\&.tar\&.xz\&.
.RE
.SH "SEE ALSO"
.sp
\fBgitattributes\fR(5)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
