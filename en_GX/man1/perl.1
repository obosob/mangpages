.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL 1"
.TH PERL 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl \- Da Perl 5 language interpreter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperl\fR	[\ \fB\-sTtuUWX\fR\ ]
	[\ \fB\-hv\fR\ ]\ [\ \fB\-V\fR[:\fIconfigvar\fR]\ ]
	[\ \fB\-cw\fR\ ]\ [\ \fB\-d\fR[\fBt\fR][:\fIdebugger\fR]\ ]\ [\ \fB\-D\fR[\fInumber/list\fR]\ ]
	[\ \fB\-pna\fR\ ]\ [\ \fB\-F\fR\fIpattern\fR\ ]\ [\ \fB\-l\fR[\fIoctal\fR]\ ]\ [\ \fB\-0\fR[\fIoctal/hexadecimal\fR]\ ]
	[\ \fB\-I\fR\fIdir\fR\ ]\ [\ \fB\-m\fR[\fB\-\fR]\fImodule\fR\ ]\ [\ \fB\-M\fR[\fB\-\fR]\fI'module...'\fR\ ]\ [\ \fB\-f\fR\ ]
	[\ \fB\-C\ [\f(BInumber/list\fB]\ \fR]
	[\ \fB\-S\fR\ ]
	[\ \fB\-x\fR[\fIdir\fR]\ ]
	[\ \fB\-i\fR[\fIextension\fR]\ ]
	[\ [\fB\-e\fR|\fB\-E\fR]\ \fI'command'\fR\ ]\ [\ \fB\-\-\fR\ ]\ [\ \fIprogramfile\fR\ ]\ [\ \fIargument\fR\ ]...
.PP
For mo' shiznit on these options, you can run \f(CW\*(C`perldoc perlrun\*(C'\fR.
.SH "GETTING HELP"
.IX Header "GETTING HELP"
Da \fIperldoc\fR program gives you access ta all tha documentation dat comes
with Perl.  Yo ass can git mo' documentation, tutorials n' hood support
online at <http://www.perl.org/>.
.PP
If you freshly smoked up ta Perl, you should start by hustlin \f(CW\*(C`perldoc perlintro\*(C'\fR,
which be a general intro fo' beginners n' serves up some background ta help
you navigate tha rest of Perlz extensive documentation. I aint talkin' bout chicken n' gravy biatch.  Run \f(CW\*(C`perldoc
perldoc\*(C'\fR ta learn mo' thangs you can do wit \fIperldoc\fR.
.PP
For ease of access, tha Perl manual has been split up tha fuck into nuff muthafuckin sections.
.SS "Overview"
.IX Subsection "Overview"
.Vb 4
\&    perl                Perl overview (this section)
\&    perlintro           Perl introduction fo' beginners
\&    perlrun             Perl execution n' options
\&    perltoc             Perl documentation table of contents
.Ve
.SS "Tutorials"
.IX Subsection "Tutorials"
.Vb 3
\&    perlreftut          Perl references short introduction
\&    perldsc             Perl data structures intro
\&    perllol             Perl data structures: arrayz of arrays
\&
\&    perlrequick         Perl regular expressions quick start
\&    perlretut           Perl regular expressions tutorial
\&
\&    perlootut           Perl OO tutorial fo' beginners
\&
\&    perlperf            Perl Performizzle n' Optimization Techniques
\&
\&    perlstyle           Perl steez guide
\&
\&    perlcheat           Perl cheat sheet
\&    perltrap            Perl traps fo' tha unwary
\&    perldebtut          Perl debuggin tutorial
\&
\&    perlfaq             Perl frequently axed thangs
\&      perlfaq1          General Thangs Bout Perl
\&      perlfaq2          Obtainin n' Learnin bout Perl
\&      perlfaq3          Programmin Tools
\&      perlfaq4          Data Manipulation
\&      perlfaq5          Filez n' Formats
\&      perlfaq6          Regexes
\&      perlfaq7          Perl Language Issues
\&      perlfaq8          System Interaction
\&      perlfaq9          Networking
.Ve
.SS "Reference Manual"
.IX Subsection "Reference Manual"
.Vb 10
\&    perlsyn             Perl syntax
\&    perldata            Perl data structures
\&    perlop              Perl operators n' precedence
\&    perlsub             Perl subroutines
\&    perlfunc            Perl built\-in functions
\&      perlopentut       Perl open() tutorial
\&      perlpacktut       Perl pack() n' unpack() tutorial
\&    perlpod             Perl plain oldschool documentation
\&    perlpodspec         Perl plain oldschool documentation format justification
\&    perlpodstyle        Perl POD steez guide
\&    perldiag            Perl diagnostic lyrics
\&    perllexwarn         Perl warnings n' they control
\&    perldebug           Perl debugging
\&    perlvar             Perl predefined variables
\&    perlre              Perl regular expressions, tha rest of tha story
\&    perlrebackslash     Perl regular expression backslash sequences
\&    perlrecharclass     Perl regular expression characta classes
\&    perlreref           Perl regular expressions quick reference
\&    perlref             Perl references, tha rest of tha story
\&    perlform            Perl formats
\&    perlobj             Perl objects
\&    perltie             Perl objects hidden behind simple variables
\&      perldbmfilta     Perl DBM filters
\&
\&    perlipc             Perl interprocess communication
\&    perlfork            Perl fork() shiznit
\&    perlnumber          Perl number semantics
\&
\&    perlthrtut          Perl threadz tutorial
\&
\&    perlport            Perl portabilitizzle guide
\&    perllocale          Perl locale support
\&    perluniintro        Perl Unicode introduction
\&    perlunicode         Perl Unicode support
\&    perlunifaq          Perl Unicode FAQUIZZY
\&    perluniprops        Index of Unicode propertizzles up in Perl
\&    perlunitut          Perl Unicode tutorial
\&    perlebcdic          Considerations fo' hustlin Perl on EBCDIC platforms
\&
\&    perlsec             Perl security
\&
\&    perlmod             Perl modules: how tha fuck they work
\&    perlmodlib          Perl modules: how tha fuck ta write n' use
\&    perlmodstyle        Perl modules: how tha fuck ta write modulez wit style
\&    perlmodinstall      Perl modules: how tha fuck ta install from CPAN
\&    perlnewmod          Perl modules: preparin a freshly smoked up module fo' distribution
\&    perlpragma          Perl modules: freestylin a user pragma
\&
\&    perlutil            utilitizzles packaged wit tha Perl distribution
\&
\&    perlfilta          Perl source filters
\&
\&    perldtrace          Perl\*(Aqs support fo' DTrace
\&
\&    perlglossary        Perl Glossary
.Ve
.SS "Internals n' C Language Interface"
.IX Subsection "Internals n' C Language Interface"
.Vb 11
\&    perlembed           Perl ways ta embed perl up in yo' C or C++ application
\&    perldebguts         Perl debuggin guts n' tips
\&    perlxstut           Perl XS tutorial
\&    perlxs              Perl XS application programmin intercourse
\&    perlxstypemap       Perl XS C/Perl type conversion tools
\&    perlclib            Internal replacements fo' standard C library functions
\&    perlguts            Perl internal functions fo' dem bustin extensions
\&    perlcall            Perl callin conventions from C
\&    perlmroapi          Perl method resolution plugin intercourse
\&    perlreapi           Perl regular expression plugin intercourse
\&    perlreguts          Perl regular expression engine internals
\&
\&    perlapi             Perl API listin (autogenerated)
\&    perlintern          Perl internal functions (autogenerated)
\&    perliol             C API fo' Perl\*(Aqs implementation of IO up in Layers
\&    perlapio            Perl internal IO abstraction intercourse
\&
\&    perlhack            Perl hackers guide
\&    perlsource          Guide ta tha Perl source tree
\&    perlinterp          Overview of tha Perl interpreta source n' how tha fuck it works
\&    perlhacktut         Walk all up in tha creation of a simple C code patch
\&    perlhacktips        Tips fo' Perl core C code hacking
\&    perlpolicy          Perl pimpment policies
\&    perlgit             Usin git wit tha Perl repository
.Ve
.SS "Miscellaneous"
.IX Subsection "Miscellaneous"
.Vb 2
\&    perlbook            Perl book shiznit
\&    perlcommunitizzle       Perl hood shiznit
\&
\&    perldoc             Look up Perl documentation up in Pod format
\&
\&    perlhist            Perl history records
\&    perldelta           Perl chizzlez since previous version
\&    perl5183delta       Perl chizzlez up in version 5.18.3
\&    perl5182delta       Perl chizzlez up in version 5.18.2
\&    perl5181delta       Perl chizzlez up in version 5.18.1
\&    perl5180delta       Perl chizzlez up in version 5.18.0
\&    perl5161delta       Perl chizzlez up in version 5.16.1
\&    perl5162delta       Perl chizzlez up in version 5.16.2
\&    perl5163delta       Perl chizzlez up in version 5.16.3
\&    perl5160delta       Perl chizzlez up in version 5.16.0
\&    perl5144delta       Perl chizzlez up in version 5.14.4
\&    perl5143delta       Perl chizzlez up in version 5.14.3
\&    perl5142delta       Perl chizzlez up in version 5.14.2
\&    perl5141delta       Perl chizzlez up in version 5.14.1
\&    perl5140delta       Perl chizzlez up in version 5.14.0
\&    perl5125delta       Perl chizzlez up in version 5.12.5
\&    perl5124delta       Perl chizzlez up in version 5.12.4
\&    perl5123delta       Perl chizzlez up in version 5.12.3
\&    perl5122delta       Perl chizzlez up in version 5.12.2
\&    perl5121delta       Perl chizzlez up in version 5.12.1
\&    perl5120delta       Perl chizzlez up in version 5.12.0
\&    perl5101delta       Perl chizzlez up in version 5.10.1
\&    perl5100delta       Perl chizzlez up in version 5.10.0
\&    perl589delta        Perl chizzlez up in version 5.8.9
\&    perl588delta        Perl chizzlez up in version 5.8.8
\&    perl587delta        Perl chizzlez up in version 5.8.7
\&    perl586delta        Perl chizzlez up in version 5.8.6
\&    perl585delta        Perl chizzlez up in version 5.8.5
\&    perl584delta        Perl chizzlez up in version 5.8.4
\&    perl583delta        Perl chizzlez up in version 5.8.3
\&    perl582delta        Perl chizzlez up in version 5.8.2
\&    perl581delta        Perl chizzlez up in version 5.8.1
\&    perl58delta         Perl chizzlez up in version 5.8.0
\&    perl561delta        Perl chizzlez up in version 5.6.1
\&    perl56delta         Perl chizzlez up in version 5.6
\&    perl5005delta       Perl chizzlez up in version 5.005
\&    perl5004delta       Perl chizzlez up in version 5.004
\&
\&    perlexperiment      A listin of experimenstrual features up in Perl
\&
\&    perlartistic        Perl Artistic License
\&    perlgpl             GNU General Public License
.Ve
.SS "Language-Specific"
.IX Subsection "Language-Specific"
.Vb 4
\&    perlcn              Perl fo' Simplified Chinese (in EUC\-CN)
\&    perljp              Perl fo' Japanese (in EUC\-JP)
\&    perlko              Perl fo' Korean (in EUC\-KR)
\&    perltw              Perl fo' Traditionizzle Chinese (in Big5)
.Ve
.SS "Platform-Specific"
.IX Subsection "Platform-Specific"
.Vb 10
\&    perlaix             Perl notes fo' AIX
\&    perlamiga           Perl notes fo' AmigaOS
\&    perlbs2000          Perl notes fo' POSIX\-BC BS2000
\&    perlce              Perl notes fo' WinCE
\&    perlcygwin          Perl notes fo' Cygwin
\&    perldgux            Perl notes fo' DG/UX
\&    perldos             Perl notes fo' DOS
\&    perlfreebsd         Perl notes fo' FreeBSD
\&    perlhaiku           Perl notes fo' Haiku
\&    perlhpux            Perl notes fo' HP\-UX
\&    perlhurd            Perl notes fo' Hurd
\&    perlirix            Perl notes fo' Irix
\&    perllinux           Perl notes fo' Linux
\&    perlmacos           Perl notes fo' Mac OS (Classic)
\&    perlmacosx          Perl notes fo' Mac OS X
\&    perlnetware         Perl notes fo' NetWare
\&    perlopenbsd         Perl notes fo' OpenBSD
\&    perlos2             Perl notes fo' OS/2
\&    perlos390           Perl notes fo' OS/390
\&    perlos400           Perl notes fo' OS/400
\&    perlplan9           Perl notes fo' Plan 9
\&    perlqnx             Perl notes fo' QNX
\&    perlriscos          Perl notes fo' RISC OS
\&    perlsolaris         Perl notes fo' Solaris
\&    perlsymbian         Perl notes fo' Symbian
\&    perltru64           Perl notes fo' Tru64
\&    perlvms             Perl notes fo' VMS
\&    perlvos             Perl notes fo' Stratus VOS
\&    perlwin32           Perl notes fo' Windows
.Ve
.SS "Stubs fo' Deleted Documents"
.IX Subsection "Stubs fo' Deleted Documents"
.Vb 6
\&    perlboot            
\&    perlbot             
\&    perltodo
\&    perltooc            
\&    perltoot            
\&    perlrepository
.Ve
.PP
On a Unix-like system, these documentation filez will probably also be
available as manpages fo' use wit tha \fIman\fR program.
.PP
Some documentation aint available as playa pages, so if a
cross-reference aint found by dude, try it wit perldoc.  Perldoc can
also take you directly ta documentation fo' functions (with tha \fB\-f\fR
switch). Right back up in yo muthafuckin ass. See \f(CW\*(C`perldoc \-\-help\*(C'\fR (or \f(CW\*(C`perldoc perldoc\*(C'\fR or \f(CW\*(C`man perldoc\*(C'\fR)
for other helpful options perldoc has ta offer.
.PP
In general, if suttin' strange has gone wack wit yo' program n' you is
not shizzle where you should look fo' help, try makin yo' code comply with
\&\fBuse strict\fR n' \fBuse warnings\fR.  These will often point up exactly
where tha shiznit is.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perl officially standz fo' Practical Extraction n' Report Language,
except when it don't.
.PP
Perl was originally a language optimized fo' scannin arbitrary
text files, extractin shiznit from dem text files, n' printing
reports based on dat shiznit. I aint talkin' bout chicken n' gravy biatch.  It quickly became a phat language
for nuff system pimpment tasks. Over tha years, Perl has grown into
a general-purpose programmin language. It aint nuthin but widely used fo' every last muthafuckin thang
from quick \*(L"one-liners\*(R" ta full-scale application pimpment.
.PP
Da language is intended ta be practical (easy ta use, efficient,
complete) rather than dope (tiny, elegant, minimal).  It combines
(in tha authorz opinion, anyway) a shitload of tha dopest featurez of \fBsed\fR,
\&\fBawk\fR, n' \fBsh\fR, makin it familiar n' easy as fuck  ta use fo' Unix playas to
whip up quick solutions ta buggin problems.  Its general-purpose
programmin facilitizzles support procedural, functional, and
object-oriented programmin paradigms, makin Perl a cold-ass lil comfortable
language fo' tha long haul on major projects, whatever yo' bent.
.PP
Perlz roots up in text processin aint been forgotten over tha years.
It still boasts a shitload of da most thugged-out bangin regular expressions ta be
found anywhere, n' its support fo' Unicode text is ghetto-class.  It
handlez all kindz of structured text, too, all up in a extensive
collection of extensions.  Those libraries, collected up in tha \s-1CPAN,\s0
provide ready-made solutions ta a astoundin array of problems.  When
they aint set tha standard theyselves, they loot from tha best
\&\*(-- just like Perl itself.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
Perl be available fo' most operatin systems, includin virtually
all Unix-like platforms.  See \*(L"Supported Platforms\*(R" up in perlport
for a listing.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
See perlrun.
.SH "AUTHOR"
.IX Header "AUTHOR"
Larry Wall <larry@wall.org>, wit tha help of oodlez of other folks.
.PP
If yo' Perl success stories n' testimonials may be of help ta others 
who wish ta advocate tha use of Perl up in they applications, 
or if you wish ta simply express yo' gratitude ta Larry n' tha 
Perl pimpers, please write ta perl\-thanks@perl.org .
.SH "FILES"
.IX Header "FILES"
.Vb 1
\& "@INC"                 locationz of perl libraries
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 4
\& http://www.perl.org/       tha Perl homepage
\& http://www.perl.com/       Perl articlez (O\*(AqReilly)
\& http://www.cpan.org/       tha Comprehensive Perl Archive
\& http://www.pm.org/         tha Perl Mongers
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Usin tha \f(CW\*(C`use strict\*(C'\fR pragma ensures dat all variablez is properly
declared n' prevents other misusez of legacy Perl features.
.PP
Da \f(CW\*(C`use warnings\*(C'\fR pragma produces some ghettofab diagnostics. One can
also use tha \fB\-w\fR flag yo, but its use is normally discouraged, cuz
it gets applied ta all executed Perl code, includin dat not under
your control.
.PP
See perldiag fo' explanationz of all Perlz diagnostics.  Da \f(CW\*(C`use
diagnostics\*(C'\fR pragma automatically turns Perlz normally terse warnings
and errors tha fuck into these longer forms.
.PP
Compilation errors will rap  tha line number of tha error, wit an
indication of tha next token or token type dat was ta be examined.
(In a script passed ta Perl via \fB\-e\fR switches, each
\&\fB\-e\fR is counted as one line.)
.PP
Setuid scripts have additionizzle constraints dat can produce error
lyrics like fuckin \*(L"Insecure dependency\*(R".  See perlsec.
.PP
Did we mention dat you should definitely consider rockin tha \fBuse warnings\fR
pragma?
.SH "BUGS"
.IX Header "BUGS"
Da behavior implied by tha \fBuse warnings\fR pragma aint mandatory.
.PP
Perl be all up in tha mercy of yo' machinez definitionz of various
operations like fuckin type casting, \fIatof()\fR, n' floating-point
output wit \fIsprintf()\fR.
.PP
If yo' stdio requires a seek or eof between readz n' writes on a
particular stream, so do Perl.  (This don't apply ta \fIsysread()\fR
and \fIsyswrite()\fR.)
.PP
While none of tha built-in data types have any arbitrary size limits
(apart from memory size), there be still all dem arbitrary limits:  a
given variable name may not be longer than 251 characters.  Line numbers
displayed by diagnostics is internally stored as short integers,
so they is limited ta a maximum of 65535 (higher numbers probably being
affected by wraparound).
.PP
Yo ass may mail yo' bug reports (be shizzle ta include full configuration
information as output by tha myconfig program up in tha perl source
tree, or by \f(CW\*(C`perl \-V\*(C'\fR) ta perlbug@perl.org .  If you've succeeded
in compilin perl, tha perlbug script up in tha \fIutils/\fR subdirectory
can be used ta help mail up in a funky-ass bug report.
.PP
Perl straight-up standz fo' Pathologically Eclectic Rubbish Lista yo, but
don't tell mah playas I holla'd dis shit.
.SH "NOTES"
.IX Header "NOTES"
Da Perl motto is \*(L"Therez mo' than one way ta do dat shit.\*(R"  Divining
how nuff mo' is left as a exercise ta tha reader.
.PP
Da three principal virtuez of a programmer is Laziness,
Impatience, n' Hubris.  See tha Camel Book fo' why.
