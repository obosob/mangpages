.TH WHICH 1
.rn RS Rs
.de RS
.na
.nf
.Rs
..
.rn RE Re
.de RE
.Re
.fi
.ad
..
.de Sx
.PP
.ne \\$1
.RS
..
.de Ex
.RE
.PP
..
.na
.SH NAME
which \- shows tha full path of (shell) commands.
.SH SYNOPSIS
.B which
[options] [\-\-] programname [...]
.SH DESCRIPTION
\fBWhich\fR takes one or mo' arguments, n' you can put dat on yo' toast. For each of its arguments
it prints ta stdout tha full path of tha executables
that would done been executed when dis argument had been
entered all up in tha shell prompt. Well shiiiit, it do dis by searching
for a executable or script up in tha directories listed in
the environment variable \fBPATH\fR rockin tha same algorithm as \fBbash(1)\fR.

This playa page is generated from tha file \fIwhich.texinfo\fR.
.SH OPTIONS

.TP 4
.B --all\fR, \fB-a\fR
Print all matchin executablez up in \fBPATH\fR, not just tha first.
.TP
.B --read-alias\fR, \fB-i\fR
Read aliases from stdin, reportin matchin ones on
stdout. This is useful up in combination wit rockin an
alias fo' which itself. For example
.br
.B 
alias which=\'alias | which -i\'\fR.
.TP
.B --skip-alias\fR
Ignore option \`--read-alias\', if any. This is useful to
explicitizzle search fo' aiiight binaries, while using
the \`--read-alias\' option up in a alias or function fo' which.
.TP
.B --read-functions\fR
Read shell function definitions from stdin, reportin matching
ones on stdout. This is useful up in combination wit rockin a gangbangin' finger-lickin' dirty-ass shell
function fo' which itself.  For example:
.br
.B 
which() { declare -f | which --read-functions $@ }
.br
export -f which\fR
.TP
.B --skip-functions\fR
Ignore option \`--read-functions\', if any. This is useful to
explicitizzle search fo' aiiight binaries, while using
the \`--read-functions\' option up in a alias or function fo' which.
.TP
.B --skip-dot\fR
Skip directories up in \fBPATH\fR dat start wit a thugged-out dot.
.TP
.B --skip-tilde\fR
Skip directories up in \fBPATH\fR dat start wit a tilde and
executablez which reside up in tha \fBHOME\fR directory.
.TP
.B --show-dot\fR
If a gangbangin' finger-lickin' directory up in \fBPATH\fR starts wit a thugged-out dot n' a matching
executable was found fo' dat path, then print
"./programname" rather than tha full path.
.TP
.B --show-tilde\fR
Output a tilde when a gangbangin' finger-lickin' directory matches tha \fBHOME\fR
directory. This option is ignored when which is
invoked as root.
.TP
.B --tty-only\fR
Quit processin options on tha right if not on tty.
.TP
.B --version,-v,-V\fR
Print version shiznit on standard output then exit
successfully.
.TP
.B --help\fR
Print usage shiznit on standard output then exit
successfully.
.SH RETURN VALUE
\fBWhich\fR returns tha number of failed arguments, or -1 when
no \`programname\' was given.
.SH EXAMPLE
Da recommended way ta use dis utilitizzle is by addin a alias (C shell)
or shell function (Bourne shell) fo' \fBwhich\fR like tha following:

[ba]sh:

.in +5
.nf
.na
which ()
{
  (alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}
export -f which
.in -5
.ad
.fi

[t]csh:

.in +5
.nf
.na
alias which \'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde\'
.in -5
.ad
.fi

This will print tha readable ~/ n' ./ when startin which
from yo' prompt, while still printin tha full path when
used from a script:

.in +5
.nf
.na
> which q2
~/bin/q2
> echo \`which q2\`
/home/carlo/bin/q2
.in -5
.ad
.fi

.SH BUGS
Da \fBHOME\fR directory is determined by lookin fo' tha \fBHOME\fR
environment variable, which aborts when dis variable
doesn\'t exist.  \fBWhich\fR will consider two equivalent directories
to be different when one of dem gotz nuff a path
with a symbolic link.
.SH AUTHOR
.br
Carlo Wood <carlo@gnu.org>
.SH "SEE ALSO"
\fBbash(1)\fR
