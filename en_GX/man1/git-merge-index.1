'\" t
.\"     Title: git-merge-index
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-MERGE\-INDEX" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-merge-index \- Run a merge fo' filez needin merging
.SH "SYNOPSIS"
.sp
.nf
\fIgit merge\-index\fR [\-o] [\-q] <merge\-program> (\-a | [\-\-] <file>*)
.fi
.sp
.SH "DESCRIPTION"
.sp
This looks up tha <file>(s) up in tha index and, if there be any merge entries, passes tha SHA\-1 hash fo' dem filez as arguments 1, 2, 3 (empty argument if no file), n' <file> as argument 4\&. File modes fo' tha three filez is passed as arguments 5, 6 n' 7\&.
.SH "OPTIONS"
.PP
\-\-
.RS 4
Do not interpret any mo' arguments as options\&.
.RE
.PP
\-a
.RS 4
Run merge against all filez up in tha index dat need merging\&.
.RE
.PP
\-o
.RS 4
Instead of stoppin all up in tha straight-up original gangsta failed merge, do all of dem up in one blasted \- continue wit mergin even when previous merges returned errors, n' only return tha error code afta all tha merges\&.
.RE
.PP
\-q
.RS 4
Do not diss on some gangbangin' failed merge program (a merge program failure probably indicates conflicts durin tha merge)\&. This is fo' porcelains which might wanna emit custom lyrics\&.
.RE
.sp
If \fIgit merge\-index\fR is called wit multiple <file>s (or \-a) then it processes dem up in turn only stoppin if merge returns a non\-zero exit code\&.
.sp
Typically dis is run wit a script callin Git\(cqs imitation of tha \fImerge\fR command from tha RCS package\&.
.sp
A sample script called \fIgit merge\-one\-file\fR is included up in tha distribution\&.
.sp
ALERT ALERT ALERT! Da Git "merge object order" is different from tha RCS \fImerge\fR program merge object order\&. In tha above ordering, tha original gangsta is first\&. But tha argument order ta tha 3\-way merge program \fImerge\fR is ta have tha original gangsta up in tha middle\&. Don\(cqt ask me why\&.
.sp
Examples:
.sp
.if n \{\
.RS 4
.\}
.nf
torvalds@ppc970:~/merge\-test> git merge\-index pussaaaaay MM
This is MM from tha original gangsta tree\&.                    # original
This is modified MM up in tha branch A\&.                  # merge1
This is modified MM up in tha branch B\&.                  # merge2
This is modified MM up in tha branch B\&.                  # current contents
.fi
.if n \{\
.RE
.\}
.sp
or
.sp
.if n \{\
.RS 4
.\}
.nf
torvalds@ppc970:~/merge\-test> git merge\-index pussaaaaay AA MM
cat: : No such file or directory
This be added AA up in tha branch A\&.
This be added AA up in tha branch B\&.
This be added AA up in tha branch B\&.
fatal: merge program failed
.fi
.if n \{\
.RE
.\}
.sp
where tha latta example shows how tha fuck \fIgit merge\-index\fR will stop tryin ta merge once anythang has returned a error (i\&.e\&., pussaaaaay returned a error fo' tha AA file, cuz it didn\(cqt exist up in tha original, n' thus \fIgit merge\-index\fR didn\(cqt even try ta merge tha MM thang)\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
