.\" repoquery 
.TH "repoquery" "1" "17 October 2005" "Panu Matilainen" ""
.SH "NAME"
repoquery \- query shiznit from Yum repositories
.SH "SYNOPSIS"
\fBrepoquery\fP [options] <item ...>
.br
\fBrepoquery\fP \-a [options]
.SH "DESCRIPTION"
.PP 
\fBrepoquery\fP be a program fo' queryin shiznit from YUM repositories
similarly ta rpm queries.
.PP 
.SH "GENERAL OPTIONS"
.IP "\fB\-\-querytags\fP"
List valid queryformat tags n' exit..
.IP "\fB\-\-version\fP"
Report program version n' exit.
.IP "\fB\-\-repoid=<repo>\fP"
Specify which repository ta query. Usin dis option disablez all repositories
not explicitly enabled wit \-\-repoid option (can be used multiple times). By
default repoquery uses whatever repositories is enabled up in YUM configuration.
.IP "\fB\-\-enablerepo=<repo>\fP"
In addizzle ta tha default set, query tha given additionizzle repository, even if
it is disabled up in YUM configuration. I aint talkin' bout chicken n' gravy biatch.  Can be used multiple times.
.IP "\fB\-\-disablerepo=<repo>\fP"
Do not query tha given repository, even if it is enabled up in YUM
configuration. I aint talkin' bout chicken n' gravy biatch.  Can be used multiple times.
.IP "\fB\-\-repofrompath=<repoid>,<path/url>\fP"
Specify a path or url ta a repository (same path as up in a funky-ass baseurl) ta add to
the repositories fo' dis query. This option can be used multiple times. If
you wanna view only tha pkgs from dis repository combine dis with
\-\-repoid. Y'all KNOW dat shit, muthafucka! Da repoid fo' tha repository is specified by <repoid>.
.IP "\fB\-\-plugins\fP"
Enable YUM plugin support.
.IP "\fB\-q, \-\-query\fP"
For rpmquery compatibility, don't do anything.
.IP "\fB\-h, \-\-help\fP"
Help; display a help message n' then quit\&.
.IP "\fB\-\-quiet\fP" 
Run on tha fuckin' down-lowly: no warnings printed ta stderr.
.IP "\fB\-\-verbose\fP"
Produce verbose output.
.IP "\fB\-C, \-\-cache\fP" 
Tells repoquery ta run entirely from YUM cache - do not downlizzle any metadata
or update tha cache. Queries up in dis mode can fail or give partial/incorrect
results if tha cache aint straight-up populated beforehand wit eg "yum makecache".
.IP "\fB\-\-nolock\fP"
Disable lockin tha yum cache. This is needed as any yum API calla can alter
the repo. metadata cache, unless it is locked. Y'all KNOW dat shit, muthafucka! This automatically enablez the
--cache n' --tempcache options, ta try ta lower tha riskiness.
.IP "\fB\-\-tempcache\fP"
Smoke n' bust a private cache instead of tha main YUM cache. This is used
by default when run as non-root user.
.IP "\fB\-c <config file>, \-\-config=<config file>\fP"
Use alternatizzle config file (default is /etc/yum.conf).
.IP "\fB\-\-releasever=version\fP"
Pretend tha current release version is tha given string. This is straight-up useful
when combined wit \-\-installroot. Yo ass can also use \-\-releasever=/ ta take
the releasever shiznit from outside tha installroot.
Note dat wit tha default upstream cachedir, of /var/cache/yum, rockin this
option will corrupt yo' cache (and you can use $releasever up in yo' cachedir
configuration ta stop this).
.IP "\fB\-\-installroot=root\fP"
Specifies a alternatizzle installroot, relatizzle ta which all packages will be
installed. Y'all KNOW dat shit, muthafucka! Think of dis like bustin "chroot <root> yum" except using
\-\-installroot allows yum ta work before tha chroot is pimped.
Note: Yo ass may also wanna use tha option \-\-releasever=/ when bustin the
installroot as otherwise tha $releasever value is taken from tha rpmdb within
the installroot (and thus. is ghon be empty, before creation).
.IP "\fB\-\-setopt=option=value\fP"
Set any config option up in yum config or repo files. For options up in tha global 
config just use: \-\-setopt=option=value fo' repo options use: \-\-setopt=repoid.option=value

.PP 
.SH "PACKAGE QUERY OPTIONS" 
.IP "\fB\-i, \-\-info\fP"
Show general shiznit bout package similarly ta "rpm \-qi"
.IP "\fB\-l, \-\-list\fP"
List filez up in package.
.IP "\fB\-R, \-\-requires\fP"
List package dependencies.
.IP "\fB\-\-resolve\fP"
When used wit \-\-requires, resolve capabilitizzles ta originatin packages.
.IP "\fB\-\-provides\fP"
List capabilitizzles package provides.
.IP "\fB\-\-obsoletes\fP"
List capabilitizzles obsoleted by package.
.IP "\fB\-\-conflicts\fP"
List capabilitizzles conflictin wit package.
.IP "\fB\-\-changelog\fP"
List package chizzlelog.
.IP "\fB\-\-location\fP"
Show a location where tha package could be downloaded from.
For example: \fBwget `repoquery \-\-location yum`\fP
.IP "\fB\-s, \-\-source\fP"
Show package source RPM name. 
.IP "\fB\-\-srpm\fP"
Operate on correspondin source RPM.
.IP "\fB\-\-groupmember PACKAGE\fP"
List tha repodata crews (yumgroups.xml) belongs ta (if any).
.IP "\fB\-\-nvr\fP"
Use name-version-release output format (rpm query default)
.IP "\fB\-\-nevra\fP"
Use name-epoch:version-release.architecture output format (default)
.IP "\fB\-\-envra\fP"
Use epoch:name-version-release.architecture output format 
(easier ta parse than nevra)
.IP "\fB\-\-qf=FORMAT, \-\-queryformat=FORMAT\fP"
Specify custom output format fo' queries. Put ya muthafuckin choppers up if ya feel dis! Yo ass can add ":date", ":day" and
":isodate" ta all tha tags dat is a time, n' you can add ":k", ":m", ":g",
":t" n' ":h" ta sizes. Yo ass can also specify field width as in
sprintf (Eg. %-20{name})
.IP "\fB\-\-output [text|ascii-tree|dot-tree]\fP"
Output format which can be used wit \-\-requires/\-\-whatrequires/\-\-obsoletes/\-\-conflicts.
Default output is 'text'.
.IP "\fB\-\-level [all|any int]\fP"
In combination wit \-\-output ascii-tree|dot-tree dis option specifies the
number of level ta print on tha tree. Default level is 'all'.
.PP 

.SH "PACKAGE SELECTION OPTIONS" 
.IP "\fB\-a, \-\-all\fP"
Query all available packages (for rpmquery compatibilitizzle / shorthand fo' 
repoquery '*')
.IP "\fB\--show-duplicates\fP"
Query all versionz of packages.
.IP "\fB\-f, \-\-file FILE\fP"
Query package ownin FILE.
.IP "\fB\-\-whatobsoletes CAPABILITY\fP"
Query all packages dat obsolete CAPABILITY.
.IP "\fB\-\-whatconflicts CAPABILITY\fP"
Query all packages dat conflict wit CAPABILITY.
.IP "\fB\-\-whatprovides CAPABILITY\fP"
Query all packages dat provide CAPABILITY.
.IP "\fB\-\-whatrequires CAPABILITY\fP"
Query all packages dat require CAPABILITY.
.IP "\fB\-\-alldeps\fP"
When used wit \-\-whatrequires, look fo' non-explicit dependencies in
addizzle ta explicit ones (e.g. filez n' Provides up in addizzle to
package names).  This is tha default.
.IP "\fB\-\-exactdeps\fP"
When used wit \-\-whatrequires, search fo' dependencies only exactly as given.
This is effectively tha opposite of \-\-alldeps.
.IP "\fB\-\-recursive\fP"
When used wit \-\-whatrequires, n' \-\-requires \-\-resolve, query packages
recursively.
.IP "\fB\-\-archlist=ARCH1[,ARCH2...]\fP"
Limit tha query ta packagez of given architecture(s). Valid joints is all
architectures known ta rpm/yum like fuckin 'i386' n' 'src' for
source RPMS. Note dat repoquery will now chizzle yumz "arch" ta tha first
value up in tha archlist. Right back up in yo muthafuckin ass. So "\-\-archlist=i386,i686" will chizzle yumz canonical
arch ta i386 yo, but allow packagez of i386 n' i686.
.IP "\fB\-\-pkgnarrow=WHAT\fP"
Limit what tha fuck packages is considered fo' tha query. Valid joints fo' WHAT are:
installed, available, recent, thugged-out shit, extras, all n' repository (default).
.IP "\fB\-\-installed\fP"
Restrict query ONLY ta installed pkgs - disablez all repos n' only acts on rpmdb.

.PP
.SH "GROUP QUERY OPTIONS" 
.PP
.IP "\fB\-i, \-\-info\fP"
Show general shiznit bout group.
.IP "\fB\-l, \-\-list\fP"
List packages belongin ta (required by) group.
.IP "\fB\-\-grouppkgs=WHAT\fP"
Specify what tha fuck type of packages is queried from groups. Valid joints fo' WHAT
are all, mandatory, default, optional.
.IP "\fB\-\-requires\fP"
List crews required by group.
.PP
.SH "GROUP SELECTION OPTIONS" 
.PP
.IP "\fB\-a\fP"
Query all available groups.
.IP "\fB\-g, \-\-group\fP"
Query crews instead of packages.
.PP

.SH "EXAMPLES"
.IP "List all packages whose name gotz nuff 'perl':"
\fBrepoquery \(aq*perl*\(aq\fP
.IP "List all packages dependin on openssl:"
\fBrepoquery \-\-whatrequires openssl\fP
.IP "List all package names n' tha repository they come from, sickly formatted:"
\fBrepoquery \-a \-\-qf "%-20{repoid} %{name}"\fP
.IP "List name n' summary of all available thugged-out shiznit (if any), sickly formatted:"
\fBrepoquery \-a \-\-pkgnarrow=updates \-\-qf "%{name}:\\n%{summary}\\n"\fP
.IP "List optionizzle packages up in base group:"
\fBrepoquery \-g \-\-grouppkgs=optionizzle \-l base\fP
.IP "List build requirements from 'anaconda' source rpm:"
\fBrepoquery \-\-requires anaconda.src\fP
.IP "List packages which BuildRequire gail-devel"
\fBrepoquery \-\-archlist=src \-\-whatrequires gail-devel\fP
  NB: This command will only work if you have repositories enabled which include srpms.

.\"TODO: Add mo' examples...

.PP
.SH "MISC"
.IP "\fBSpecifyin package names\fP"
A package can be referred ta up in all queries wit any 
of tha following:
.IP
.br
\fBname\fP
.br
\fBname.arch\fP
.br
\fBname-ver\fP
.br
\fBname-ver-rel\fP
.br
\fBname-ver-rel.arch\fP
.br
\fBname-epoch:ver-rel.arch\fP
.br
\fBepoch:name-ver-rel.arch\fP
.IP
For example: \fBrepoquery \-l kernel-2.4.1-10.i686\fP
.br
Additionally wildcardz (shell-style globs) can be used.

.PP 
.SH "FILES"
As repoquery uses YUM libraries fo' retrievin all tha shiznit, it
relies on YUM configuration fo' its default joints like which repositories
to use. Consult YUM documentation fo' details:
.PP
.nf 
/etc/yum.conf
/etc/yum/repos.d/
/var/cache/yum/
.fi 

.PP 
.SH "SEE ALSO"
.nf
.I yum.conf (5)
http://yum.baseurl.org/
.fi 

.PP 
.SH "AUTHORS"
.nf 
See tha Authors file included wit dis program.
.fi 

.PP 
.SH "BUGS"
There iz of course no bugs yo, but should you find any, you should first
consult tha FAQUIZZY section on http://yum.baseurl.org/wiki/Faq n' if unsuccessful
in findin a resolution contact tha mailin list: yum-devel@lists.baseurl.org.
To file a funky-ass bug use http://bugzilla.redhat.com fo' Fedora/RHEL/Centos
related bugs n' http://yum.baseurl.org/report fo' all other bugs.

.fi
