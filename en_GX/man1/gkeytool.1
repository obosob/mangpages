.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GKEYTOOL 1"
.TH GKEYTOOL 1 "2014-05-22" "0.99.1-pre" "GNU"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
gkeytool \- Manage private keys n' hood certificates
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
keytool [\fI\s-1COMMAND\s0\fR] ...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cryptographic credentials, up in a Java environment, is probably stored up in a \fIKey Store\fR. Da Java \s-1SDK\s0 specifies a \fIKey Store\fR as a persistent container of two typez of objects: \fIKey Entries\fR n' \fITrusted Certificates\fR. Da securitizzle tool \fBkeytool\fR be a Java-based application fo' managin dem typez of objects.
.PP
A \fIKey Entry\fR represents tha private key part of a key-pair used up in Public-Key Cryptography, n' a signed X.509 certificate which authenticates tha hood key part fo' a known entity; i.e. tha balla of tha key-pair. Shiiit, dis aint no joke. Da X.509 certificate itself gotz nuff tha hood key part of tha key-pair.
.PP
A \fITrusted Certificate\fR be a signed X.509 certificate issued by a trusted entity. Da \fITrust\fR up in dis context is relatizzle ta tha User of tha \fBkeytool\fR. In other lyrics, tha existence of a \fITrusted Certificate\fR up in tha \fIKey Store\fR processed by a \fBkeytool\fR command implies dat tha User trusts tha \fIIssuer\fR of dat \fITrusted Certificate\fR ta also sign, n' hence authenticates, other \fISubjects\fR tha tool may process.
.PP
\&\fITrusted Certificates\fR is blingin cuz they allow tha tool ta mechanically construct \fIChainz of Trust\fR startin from one of tha \fITrusted Certificates\fR up in a \fIKey Store\fR n' endin wit a cold-ass lil certificate whose \fIIssuer\fR is potentially unknown. I aint talkin' bout chicken n' gravy biatch fo' realz. A valid chain be a ordered list, startin wit a \fITrusted Certificate\fR (also called tha \fIanchor\fR), endin wit tha target certificate, n' satisfyin tha condizzle dat tha \fISubject\fR of certificate \f(CW\*(C`#i\*(C'\fR is tha \fIIssuer\fR of certificate \f(CW\*(C`#i + 1\*(C'\fR.
.PP
Da \fBkeytool\fR is invoked from tha command line as bigs up:
.PP
.Vb 1
\&        keytool [COMMAND] ...
.Ve
.PP
Multiple \fI\s-1COMMAND\s0\fRs may be specified at once, each complete wit its own options. \fBkeytool\fR will parse all tha arguments, before processing, n' executing, each \f(CW\*(C`COMMAND\*(C'\fR. If a exception occurs while executin one \fI\s-1COMMAND\s0\fR \fBkeytool\fR will abort. Note however dat cuz tha implementation of tha tool uses code ta parse command line options dat also supports GNU-style options, you gotta separate each command crew wit a thugged-out double-hyphen; e.g
.PP
.Vb 1
\&        keytool \-list \-\- \-printcert \-alias mykey
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\- Add/Update commands" 4
.IX Item "- Add/Update commands"
.RS 4
.PD 0
.IP "\fB\-genkey [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-genkey [OPTION]..."
.PD
Generate a freshly smoked up \fIKey Entry\fR, eventually bustin a freshly smoked up key store.
.IP "\fB\-import [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-import [OPTION]..."
Add, ta a key store, \fIKey Entries\fR (private keys n' certificate chains authenticatin tha hood keys) n' \fITrusted Certificates\fR (3rd jam certificates which can be used as \fITrust Anchors\fR when buildin chains-of-trust).
.IP "\fB\-selfcert [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-selfcert [OPTION]..."
Generate a freshly smoked up self-signed \fITrusted Certificate\fR.
.IP "\fB\-cacert [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-cacert [OPTION]..."
Import a \s-1CA \s0\fITrusted Certificate\fR.
.IP "\fB\-identitydb [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-identitydb [OPTION]..."
\&\fB\s-1NOT IMPLEMENTED YET\s0\fR.Import a \s-1JDK 1.1\s0 steez Identitizzle Database.
.RE
.RS 4
.RE
.IP "\- Export commands" 4
.IX Item "- Export commands"
.RS 4
.PD 0
.IP "\fB\-certreq [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-certreq [OPTION]..."
.PD
Issue a \fICertificate Signin Request\fR (\s-1CSR\s0) which can be then busted ta a \fICertification Authority\fR (\s-1CA\s0) ta issue a cold-ass lil certificate signed (by tha \s-1CA\s0) n' authenticatin tha \fISubject\fR of tha request.
.IP "\fB\-export [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-export [OPTION]..."
Export a cold-ass lil certificate from a key store.
.RE
.RS 4
.RE
.IP "\- Display commands" 4
.IX Item "- Display commands"
.RS 4
.PD 0
.IP "\fB\-list [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-list [OPTION]..."
.PD
Print one or all certificates up in a key store ta \f(CW\*(C`STDOUT\*(C'\fR.
.IP "\fB\-printcert [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-printcert [OPTION]..."
Print a human-readable form of a cold-ass lil certificate, up in a thugged-out designated file, ta \f(CW\*(C`STDOUT\*(C'\fR.
.RE
.RS 4
.RE
.IP "\- Management commands" 4
.IX Item "- Management commands"
.RS 4
.PD 0
.IP "\fB\-keyclone [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-keyclone [OPTION]..."
.PD
Clone a \fIKey Entry\fR up in a key store.
.IP "\fB\-storepasswd [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-storepasswd [OPTION]..."
Change tha password protectin a key store.
.IP "\fB\-keypasswd [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-keypasswd [OPTION]..."
Change tha password protectin a \fIKey Entry\fR up in a key store.
.IP "\fB\-delete [\fR\fI\s-1OPTION\s0\fR\fB]...\fR" 4
.IX Item "-delete [OPTION]..."
Delete a \fIKey Entry\fR or a \fITrusted Certificate\fR from a key store.
.RE
.RS 4
.RE
.PP
\fICommon options\fR
.IX Subsection "Common options"
.PP
Da followin \fB\s-1OPTION\s0\fRs is used up in mo' than one \fB\s-1COMMAND\s0\fR. They is busted lyrics bout here ta reduce redundancy.
.IP "\fB\-alias\fR \fIAlias\fR" 4
.IX Item "-alias Alias"
Every entry, be it a \fIKey Entry\fR or a \fITrusted Certificate\fR, up in a key store is uniquely identified by a user-defined \fIAlias\fR string. Use dis option ta specify tha \fIAlias\fR ta use when referrin ta a entry up in tha key store. Unless specified otherwise, a thugged-out default value of \f(CW\*(C`mykey\*(C'\fR shall be used when dis option is omitted from tha command line.
.IP "\fB\-keyalg\fR \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "-keyalg ALGORITHM"
Use dis option ta specify tha canonical name of tha key-pair generation algorithm. Da default value fo' dis option is \f(CW\*(C`DSS\*(C'\fR (a synonym fo' tha Digital Signature Algorithm also known as \s-1DSA\s0).
.IP "\fB\-keysize\fR \fI\s-1SIZE\s0\fR" 4
.IX Item "-keysize SIZE"
Use dis option ta specify tha number of bitz of tha shared modulus (for both tha hood n' private keys) ta use when generatin freshly smoked up keys fo' realz. A default value of \f(CW1024\fR is ghon be used if dis option is omitted from tha command line.
.IP "\fB\-validity\fR \fI\s-1DAY_COUNT\s0\fR" 4
.IX Item "-validitizzle DAY_COUNT"
Use dis option ta specify tha number of minutes a newly generated certificate is ghon be valid for. Shiiit, dis aint no joke. Da default value is \f(CW90\fR (days) if dis option is omitted from tha command line.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
Use dis option ta specify tha type of tha key store ta use. Da default value, if dis option is omitted, is dat of tha property \f(CW\*(C`keystore.type\*(C'\fR up in tha securitizzle propertizzles file, which is obtained by invokin tha static method call \f(CW\*(C`getDefaultType()\*(C'\fR up in \f(CW\*(C`java.security.KeyStore\*(C'\fR.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
Use dis option ta specify tha password protectin tha key store. If dis option is omitted from tha command line, yo big-ass booty is ghon be prompted ta provide a password.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
Use dis option ta specify tha location of tha key store ta use. Da default value be a gangbangin' file \s-1URL\s0 referencin tha file named \fI.keystore\fR located up in tha path returned by tha call ta \f(CW\*(C`java.lang.System#getProperty(String)\*(C'\fR rockin \f(CW\*(C`user.home\*(C'\fR as argument.
.Sp
If a \s-1URL\s0 was specified yo, but was found ta be malformed \-\-e.g. missin protocol element\*(-- tha tool will attempt ta use tha \s-1URL\s0 value as a gangbangin' file-name (with absolute or relatizzle path-name) of a key store \-\-as if tha protocol was \f(CW\*(C`file:\*(C'\fR.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
A straight-up qualified class name of a \fISecuritizzle Provider\fR ta add ta tha current list of \fISecuritizzle Providers\fR already installed up in tha \s-1JVM\s0 in-use. If a provider class is specified wit dis option, n' was successfully added ta tha runtime \-\-i.e. dat shiznit was not already installed\*(-- then tha tool will attempt ta removed dis \fISecuritizzle Provider\fR before exiting.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
Use dis option ta designate a gangbangin' file ta use wit a cold-ass lil command. Y'all KNOW dat shit, muthafucka! When specified wit dis option, tha value is sposed ta fuckin be tha straight-up qualified path of a gangbangin' file accessible by tha File System. Dependin on tha command, tha file may be used as input or as output. When dis option is omitted from tha command line, \f(CW\*(C`STDIN\*(C'\fR is ghon be used instead, as tha source of input, n' \f(CW\*(C`STDOUT\*(C'\fR is ghon be used instead as tha output destination.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Unless specified otherwise, use dis option ta enable mo' verbose output.
.PP
\fIAdd/Update commands\fR
.IX Subsection "Add/Update commands"
.PP
Da \fB\-genkey\fR command
.IX Subsection "Da -genkey command"
.PP
Use dis command ta generate a freshly smoked up key-pair (both private n' hood keys), n' save these credentials up in tha key store as a \fIKey Entry\fR, associated wit tha designated (if was specified wit tha \fB\-alias\fR option) or default (if tha \fB\-alias\fR option is omitted) \fIAlias\fR.
.PP
Da private key material is ghon be protected wit a user-defined password (see \fB\-keypass\fR option). Da hood key on tha other hand is ghon be part of a self-signed X.509 certificate, which will form a 1\-element chain n' is ghon be saved up in tha key store.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keyalg\fR \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "-keyalg ALGORITHM"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keysize\fR \fI\s-1KEY_SIZE\s0\fR" 4
.IX Item "-keysize KEY_SIZE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-sigalg\fR \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "-sigalg ALGORITHM"
Da canonical name of tha digital signature algorithm ta use fo' signin certificates. If dis option is omitted, a thugged-out default value is ghon be chosen based on tha type of tha key-pair; i.e., tha algorithm dat endz up bein used by tha \-keyalg option. I aint talkin' bout chicken n' gravy biatch. If tha key-pair generation algorithm is \f(CW\*(C`DSA\*(C'\fR, tha value fo' tha signature algorithm is ghon be \f(CW\*(C`SHA1withDSA\*(C'\fR. If on tha other hand tha key-pair generation algorithm is \f(CW\*(C`RSA\*(C'\fR, then tha tool will use \f(CW\*(C`MD5withRSA\*(C'\fR as tha signature algorithm.
.IP "\fB\-dname\fR \fI\s-1NAME\s0\fR" 4
.IX Item "-dname NAME"
This a mandatory value fo' tha command. Y'all KNOW dat shit, muthafucka! If no value is specified \-\-i.e. tha \fB\-dname\fR option is omitted\*(-- tha tool will prompt you ta enta a \fIDistinguished Name\fR ta use as both tha \fIOwner\fR n' \fIIssuer\fR of tha generated self-signed certificate.
.Sp
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta protect tha newly pimped \fIKey Entry\fR.
.Sp
If dis option is omitted, yo big-ass booty is ghon be prompted ta provide a password.
.IP "\fB\-validity\fR \fI\s-1DAY_COUNT\s0\fR" 4
.IX Item "-validitizzle DAY_COUNT"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-import\fR command
.IX Subsection "Da -import command"
.PP
Use dis command ta read a X.509 certificate, or a PKCS#7 \fICertificate Reply\fR from a thugged-out designated input source n' incorporate tha certificates tha fuck into tha key store.
.PP
If tha \fIAlias\fR do not already exist up in tha key store, tha tool treats tha certificate read from tha input source as a freshly smoked up \fITrusted Certificate\fR. Well shiiiit, it then attempts ta discover a cold-ass lil chain-of-trust, startin from dat certificate n' endin at another \fITrusted Certificate\fR, already stored up in tha key store. If tha \fB\-trustcacerts\fR option is present, a additionizzle key store, of type \f(CW\*(C`JKS\*(C'\fR named \fIcacerts\fR, n' assumed ta be present up in \fI${\s-1JAVA_HOME\s0}/lib/security\fR will also be consulted if found \-\-\f(CW\*(C`${JAVA_HOME}\*(C'\fR refers ta tha location of a installed \fIJava Runtime Environment\fR (\s-1JRE\s0). If no chain-of-trust can be established, n' unless tha \f(CW\*(C`\-noprompt\*(C'\fR option has been specified, tha certificate is printed ta \f(CW\*(C`STDOUT\*(C'\fR n' tha user is prompted fo' a cold-ass lil confirmation.
.PP
If \fIAlias\fR exists up in tha key store, tha tool will treat tha certificate(s) read from tha input source as a \fICertificate Reply\fR, which can be a cold-ass lil chain of certificates, dat eventually would replace tha chain of certificates associated wit tha \fIKey Entry\fR of dat \fIAlias\fR. Da substitution of tha certificates only occurs if a cold-ass lil chain-of-trust can be established between tha bottom certificate of tha chain read from tha input file n' tha \fITrusted Certificates\fR already present up in tha key store fo' realz. Again, if tha \fB\-trustcacerts\fR option is specified, additionizzle \fITrusted Certificates\fR up in tha same \fIcacerts\fR key store is ghon be considered. Y'all KNOW dat shit, muthafucka! If no chain-of-trust can be established, tha operation will abort.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta protect tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR, when replacin dis \fIAlias\fR' chain of certificates wit dat found up in tha certificate reply.
.Sp
If dis option is omitted, n' tha chain-of-trust fo' tha certificate reply has been established, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-noprompt\fR" 4
.IX Item "-noprompt"
Use dis option ta prevent tha tool from promptin tha user.
.IP "\fB\-trustcacerts\fR" 4
.IX Item "-trustcacerts"
Use dis option ta indicate ta tha tool dat a key store, of type \f(CW\*(C`JKS\*(C'\fR, named \fIcacerts\fR, n' probably located up in \fIlib/security\fR up in a installed \fIJava Runtime Environment\fR should be considered when tryin ta establish chain-of-trusts.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-selfcert\fR command
.IX Subsection "Da -selfcert command"
.PP
Use dis command ta generate a self-signed X.509 version 1 certificate. Da newly generated certificate will form a cold-ass lil chain of one element which will replace tha previous chain associated wit tha designated \fIAlias\fR (if \fB\-alias\fR option was specified), or tha default \fIAlias\fR (if \fB\-alias\fR option was omitted).
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-sigalg\fR \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "-sigalg ALGORITHM"
Da canonical name of tha digital signature algorithm ta use fo' signin tha certificate. If dis option is omitted, a thugged-out default value is ghon be chosen based on tha type of tha private key associated wit tha designated \fIAlias\fR. If tha private key be a \f(CW\*(C`DSA\*(C'\fR one, tha value fo' tha signature algorithm is ghon be \f(CW\*(C`SHA1withDSA\*(C'\fR. If on tha other hand tha private key be a \f(CW\*(C`RSA\*(C'\fR one, then tha tool will use \f(CW\*(C`MD5withRSA\*(C'\fR as tha signature algorithm.
.IP "\fB\-dname\fR \fI\s-1NAME\s0\fR" 4
.IX Item "-dname NAME"
Use dis option ta specify tha \fIDistinguished Name\fR of tha newly generated self-signed certificate. If dis option is omitted, tha existin \fIDistinguished Name\fR of tha base certificate up in tha chain associated wit tha designated \fIAlias\fR is ghon be used instead.
.Sp
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-validity\fR \fI\s-1DAY_COUNT\s0\fR" 4
.IX Item "-validitizzle DAY_COUNT"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta unlock tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR.
.Sp
If dis option is omitted, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-cacert\fR command
.IX Subsection "Da -cacert command"
.PP
Use dis command ta import, a \s-1CA\s0 certificate n' add it ta tha key store as a \fITrusted Certificate\fR. Da \fIAlias\fR fo' dis freshly smoked up entry is ghon be constructed from tha \s-1FILE\s0z base-name afta replacin hyphens n' dots wit underscores.
.PP
This command is useful when used up in a script dat recursively visits a gangbangin' finger-lickin' directory of \s-1CA\s0 certificates ta populate a \f(CW\*(C`cacerts.gkr\*(C'\fR \fIKey Store\fR of trusted certificates which can then be used commandz dat specify tha \fB\-trustcacerts\fR option.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-identitydb\fR command
.IX Subsection "Da -identitydb command"
.PP
\&\fB\s-1NOT IMPLEMENTED YET\s0\fR.
.PP
Use dis command ta import a \s-1JDK 1.1\s0 steez Identitizzle Database.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
\fIExport commands\fR
.IX Subsection "Export commands"
.PP
Da \fB\-certreq\fR command
.IX Subsection "Da -certreq command"
.PP
Use dis command ta generate a PKCS#10 \fICertificate Signin Request\fR (\s-1CSR\s0) n' write it ta a thugged-out designated output destination. I aint talkin' bout chicken n' gravy biatch. Da contentz of tha destination should look suttin' like tha following:
.PP
.Vb 6
\&        \-\-\-\-\-BEGIN NEW CERTIFICATE REQUEST\-\-\-\-\-
\&        MI...QAwXzEUMBIGA1UEAwwLcnNuQGdudS5vcmcxGzAZBgNVBAoMElUg
\&        Q2...A0GA1UEBwwGU3lkbmV5MQwwCgYDVQQIDANOU1cxCzAJBgNVBACC
\&        ...
\&        FC...IVwNVOfQLRX+O5kAhQ/a4RTZme2L8PnpvgRwrf7Eg8D6w==
\&        \-\-\-\-\-END NEW CERTIFICATE REQUEST\-\-\-\-\-
.Ve
.PP
\&\fB\s-1IMPORTANT\s0\fR: Some documentation (e.g. \s-1RSA\s0 examples) fronts dat tha \f(CW\*(C`Attributes\*(C'\fR field, up in tha \s-1CSR\s0 is \f(CW\*(C`OPTIONAL\*(C'\fR while \s-1RFC\-2986\s0 implies tha opposite. This implementation considaz dis field, by default, as \f(CW\*(C`OPTIONAL\*(C'\fR, unless tha option \fB\-attributes\fR is specified on tha command line.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-sigalg\fR \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "-sigalg ALGORITHM"
Da canonical name of tha digital signature algorithm ta use fo' signin tha certificate. If dis option is omitted, a thugged-out default value is ghon be chosen based on tha type of tha private key associated wit tha designated \fIAlias\fR. If tha private key be a \f(CW\*(C`DSA\*(C'\fR one, tha value fo' tha signature algorithm is ghon be \f(CW\*(C`SHA1withDSA\*(C'\fR. If on tha other hand tha private key be a \f(CW\*(C`RSA\*(C'\fR one, then tha tool will use \f(CW\*(C`MD5withRSA\*(C'\fR as tha signature algorithm.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta unlock tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR.
.Sp
If dis option is omitted, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-attributes\fR" 4
.IX Item "-attributes"
Use dis option ta force tha tool ta encode a \f(CW\*(C`NULL\*(C'\fR \s-1DER\s0 value up in tha \s-1CSR\s0 as tha value of tha \f(CW\*(C`Attributes\*(C'\fR field.
.PP
Da \fB\-export\fR command
.IX Subsection "Da -export command"
.PP
Use dis command ta export a cold-ass lil certificate stored up in a key store ta a thugged-out designated output destination, either up in binary format (if tha \fB\-v\fR option is specified), or up in \s-1RFC\-1421\s0 compliant encodin (if tha \fB\-rfc\fR option is specified instead).
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-rfc\fR" 4
.IX Item "-rfc"
Use \s-1RFC\-1421\s0 justifications when encodin tha output.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Output tha certificate up in binary \s-1DER\s0 encoding. This is tha default output format of tha command if neither \fB\-rfc\fR nor \f(CW\*(C`\-v\*(C'\fR options was detected on tha command line. If both dis option n' tha \fB\-rfc\fR option is detected on tha command line, tha tool will opt fo' tha \s-1RFC\-1421\s0 steez encoding.
.PP
\fIDisplay commands\fR
.IX Subsection "Display commands"
.PP
Da \fB\-list\fR command
.IX Subsection "Da -list command"
.PP
Use dis command ta print one or all of a key store entries ta \f(CW\*(C`STDOUT\*(C'\fR. Usually dis command will only print a \fIfingerprint\fR of tha certificate, unless either tha \fB\-rfc\fR or tha \fB\-v\fR option is specified.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
If dis option is omitted, tha tool will print \s-1ALL\s0 tha entries found up in tha key store.
.Sp
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-rfc\fR" 4
.IX Item "-rfc"
Use \s-1RFC\-1421\s0 justifications when encodin tha output.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Output tha certificate up in human-readable format. If both dis option n' tha \fB\-rfc\fR option is detected on tha command line, tha tool will opt fo' tha human-readable form n' aint gonna abort tha command.
.PP
Da \fB\-printcert\fR command
.IX Subsection "Da -printcert command"
.PP
Use dis command ta read a cold-ass lil certificate from a thugged-out designated input source n' print it ta \f(CW\*(C`STDOUT\*(C'\fR up in a human-readable form.
.IP "\fB\-file\fR \fI\s-1FILE\s0\fR" 4
.IX Item "-file FILE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
\fIManagement commands\fR
.IX Subsection "Management commands"
.PP
Da \fB\-keyclone\fR command
.IX Subsection "Da -keyclone command"
.PP
Use dis command ta clone a existin \fIKey Entry\fR n' store it under a freshly smoked up (different) \fIAlias\fR protecting, its private key material wit possibly a freshly smoked up password.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-dest\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-dest ALIAS"
Use dis option ta specify tha freshly smoked up \fIAlias\fR which is ghon be used ta identify tha cloned copy of tha \fIKey Entry\fR.
.IP "\fB\-keypass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-keypass PASSWORD"
Use dis option ta specify tha password which tha tool will use ta unlock tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR.
.Sp
If dis option is omitted, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-new\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-new PASSWORD"
Use dis option ta specify tha password protectin tha private key material of tha newly cloned copy of tha \fIKey Entry\fR.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-storepasswd\fR command
.IX Subsection "Da -storepasswd command"
.PP
Use dis command ta chizzle tha password protectin a key store.
.IP "\fB\-new\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-new PASSWORD"
Da new, n' different, password which is ghon be used ta protect tha designated key store.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-keypasswd\fR command
.IX Subsection "Da -keypasswd command"
.PP
Use dis command ta chizzle tha password protectin tha private key material of a thugged-out designated \fIKey Entry\fR.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.Sp
Use dis option ta specify tha password which tha tool will use ta unlock tha \fIKey Entry\fR associated wit tha designated \fIAlias\fR.
.Sp
If dis option is omitted, tha tool will first attempt ta unlock tha \fIKey Entry\fR rockin tha same password protectin tha key store. If dis fails, yo big-ass booty is ghon then be prompted ta provide a password.
.IP "\fB\-new\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-new PASSWORD"
Da new, n' different, password which is ghon be used ta protect tha private key material of tha designated \fIKey Entry\fR.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.PP
Da \fB\-delete\fR command
.IX Subsection "Da -delete command"
.PP
Use dis command ta delete a thugged-out designated key store entry.
.IP "\fB\-alias\fR \fI\s-1ALIAS\s0\fR" 4
.IX Item "-alias ALIAS"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storetype\fR \fI\s-1STORE_TYPE\s0\fR" 4
.IX Item "-storetype STORE_TYPE"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-keystore\fR \fI\s-1URL\s0\fR" 4
.IX Item "-keystore URL"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-storepass\fR \fI\s-1PASSWORD\s0\fR" 4
.IX Item "-storepass PASSWORD"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-provider\fR \fI\s-1PROVIDER_CLASS_NAME\s0\fR" 4
.IX Item "-provider PROVIDER_CLASS_NAME"
See \fICommon Options\fR fo' mo' details.
.IP "\fB\-v\fR" 4
.IX Item "-v"
See \fICommon Options\fR fo' mo' details.
.SH "BUGS"
.IX Header "BUGS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH "AUTHOR"
.IX Header "AUTHOR"
