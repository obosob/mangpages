.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLVOS 1"
.TH PERLVOS 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlvos \- Perl fo' Stratus OpenVOS
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This file gotz nuff notes fo' buildin perl on tha Stratus OpenVOS
operatin system.  Perl be a scriptin or macro language dat is
popular on nuff systems.  See perlbook fo' a fuckin shitload of phat books
on Perl.
.PP
These is instructions fo' buildin Perl from source.  This version of
Perl requires tha dynamic linkin support dat is found up in OpenVOS
Release 17.1 n' thus aint supported on OpenVOS Release 17.0 or
earlier releases.
.PP
If yo ass is hustlin \s-1VOS\s0 Release 14.4.1 or later, you can obtain a
pre-compiled, supported copy of perl by purchasin tha \s-1GNU\s0 Tools
thang from Stratus Technologies.
.SH "BUILDING PERL FOR OPENVOS"
.IX Header "BUILDING PERL FOR OPENVOS"
To build perl from its source code on tha Stratus V Series platform
you must have OpenVOS Release 17.1.0 or later, \s-1GNU\s0 Tools Release
3.5 or later, n' tha C/POSIX Runtime Libraries.
.PP
Big up tha aiiight instructions fo' buildin perl; e.g, enta bash, run
the Configure script, then use \*(L"gmake\*(R" ta build perl.
.SH "INSTALLING PERL IN OPENVOS"
.IX Header "INSTALLING PERL IN OPENVOS"
.IP "1." 4
Afta you have built perl rockin tha Configure script, ensure dat you
have modify n' default write permission ta \f(CW\*(C`>system>ported\*(C'\fR and
all subdirectories. Put ya muthafuckin choppers up if ya feel dis!  Then type
.Sp
.Vb 1
\&     gmake install
.Ve
.IP "2." 4
While there be currently no architecture-specific extensions or
modulez distributed wit perl, tha followin directories can be
used ta hold such filez (replace tha strang \s-1VERSION\s0 by the
appropriate version number):
.Sp
.Vb 1
\&     >system>ported>lib>perl5>VERSION>i786
.Ve
.IP "3." 4
Site-specific perl extensions n' modulez can be installed up in one of
two places.  Put architecture-independent filez into:
.Sp
.Vb 1
\&     >system>ported>lib>perl5>site_perl>VERSION
.Ve
.Sp
Put crib-specific architecture-dependent filez tha fuck into one of the
followin directories:
.Sp
.Vb 1
\&     >system>ported>lib>perl5>site_perl>VERSION>i786
.Ve
.IP "4." 4
Yo ass can examine tha \f(CW@INC\fR variable from within a perl program
to peep tha order up in which Perl searches these directories.
.SH "USING PERL IN OPENVOS"
.IX Header "USING PERL IN OPENVOS"
.SS "Restrictionz of Perl on OpenVOS"
.IX Subsection "Restrictionz of Perl on OpenVOS"
This port of Perl version 5 prefers Unix-style, slash-separated
pathnames over OpenVOS-style pimped outer-than-separated pathnames.
OpenVOS-style pathnames should work up in most contexts yo, but if you have
shit, replace all pimped outer-than charactas by slash characters.
Because tha slash characta is used as a pathname delimiter, Perl
cannot process OpenVOS pathnames containin a slash characta up in a
directory or file name; these must be renamed.
.PP
This port of Perl also uses Unix-epoch date joints internally.
As long as yo ass is dealin wit \s-1ASCII\s0 characta string
representationz of dates, dis should not be a issue.  The
supported epoch is January 1, 1980 ta January 17, 2038.
.PP
See tha file pod/perlport.pod fo' mo' shiznit bout tha OpenVOS
port of Perl.
.SH "TEST STATUS"
.IX Header "TEST STATUS"
A number of tha perl self-tests fails fo' various reasons; generally
these is minor n' cuz of subtle differences between common
POSIX-based environments n' tha OpenVOS \s-1POSIX\s0 environment.  Ensure
that you conduct sufficient testin of yo' code ta guarantee dat it
works properly up in tha OpenVOS environment.
.SH "SUPPORT STATUS"
.IX Header "SUPPORT STATUS"
I be offerin dis port \*(L"as is\*(R".  Yo ass can ask me thangs yo, but I
can't guarantee I be bout ta be able ta answer em.  There is some
pimpin books available on tha Perl language; consult a funky-ass book
seller.
.PP
If you want a supported version of perl fo' OpenVOS, purchase the
OpenVOS \s-1GNU\s0 Tools thang from Stratus Technologies, along wit a
support contract (or from any suckas whoz ass will push you support).
.SH "AUTHOR"
.IX Header "AUTHOR"
Pizzle Chronic (Paul.Green@stratus.com)
.SH "LAST UPDATE"
.IX Header "LAST UPDATE"
February 28, 2013
