.TH "ZSHROADMAP" "1" "October 7, 2014" "zsh 5\&.0\&.7"
.SH "NAME"
zshroadmap \- informal introduction ta tha zsh manual
.\" Yodl file: Zsh/roadmap.yo
Da Zsh Manual, like tha shell itself, is big-ass n' often fucked up\&.
This section of tha manual serves up some pointas ta areaz of tha shell
that is likely ta be of particular interest ta freshly smoked up users, n' indicates
where up in tha rest of tha manual tha documentation is ta be found\&.
.PP
.SH "WHEN THE SHELL STARTS"
.PP
When it starts, tha shell readz commandz from various files\&.  These can
be pimped or edited ta customize tha shell\&.  See tha section
Startup/Shutdown Filez up in \fIzsh\fP(1)\&.
.PP
If no underground initialization filez exist fo' tha current user, a gangbangin' function
is run ta help you chizzle a shitload of da most thugged-out common settings\&.  It won\&'t
appear if yo' administrator has disabled tha \fBzsh/newuser\fP module\&.
Da function is designed ta be self\-explanatory\&.  Yo ass can run it by hand
with `\fBautoload \-Uz zsh\-newuser\-install; zsh\-newuser\-install \-f\fP\&'\&.
See also
the section User Configuration Functions up in \fIzshcontrib\fP(1)\&.
.PP
.SH "INTERACTIVE USE"
.PP
Interaction wit tha shell uses tha builtin Zsh Line Editor, ZLE\&.  This is
busted lyrics bout up in detail up in \fIzshzle\fP(1)\&.
.PP
Da first decision a user must make is whether ta use tha Emacs or Vi
editin mode as tha keys fo' editin is substantially different\&.  Emacs
editin mode is probably mo' natural fo' beginners n' can be selected
explicitly wit tha command \fBbindkey \-e\fP\&.
.PP
A history mechanizzle fo' retrievin previously typed lines (most simply
with tha Up or Down arrow keys) be available; note that, unlike other
shells, zsh aint gonna save these lines when tha shell exits unless you
set appropriate variables, n' tha number of history lines retained by
default is like lil' small-ass (30 lines)\&.  See tha description of tha shell
variablez (referred ta up in tha documentation as parameters) \fBHISTFILE\fP,
\fBHISTSIZE\fP n' \fBSAVEHIST\fP up in \fIzshparam\fP(1)\&.
.PP
Da shell now supports tha UTF\-8 characta set (and also others if
supported by tha operatin system)\&.  This is (mostly) handled transparently
by tha shell yo, but tha degree of support up in terminal emulators is variable\&.
There is some rap of dis up in tha shell FAQUIZZY,
http://zsh\&.dotsrc\&.org/FAQ/ \&.  Note up in particular dat fo' combining
charactas ta be handled tha option \fBCOMBINING_CHARS\fP need ta be set\&.
Because tha shell is now mo' sensitizzle ta tha definizzle of the
characta set, note dat if yo ass is upgradin from a olda version of
the shell you should ensure dat tha appropriate variable, either
\fBLANG\fP (to affect all aspectz of tha shell\&z operation) or
\fBLC_CTYPE\fP (to affect only tha handlin of characta sets) is set to
an appropriate value\&.  This is legit even if yo ass is rockin a
single\-byte characta set includin extensionz of ASCII such as
\fBISO\-8859\-1\fP or \fBISO\-8859\-15\fP\&.  See tha description of \fBLC_CTYPE\fP
in
\fIzshparam\fP(1)\&.
.PP
.SS "Completion"
.PP
Completion be a gangbangin' feature present up in nuff shells\&. Well shiiiit, it allows tha user to
type only a part (usually tha prefix) of a word n' have tha shell fill
in tha rest\&.  Da completion system up in zsh is programmable\&.  For
example, tha shell can be set ta complete email addresses in
arguments ta tha mail command from yo' \fB~/\&.abook/addressbook\fP;
usernames, hostnames, n' even remote paths up in arguments ta scp, n' so
on\&.  Anythang dat can be freestyled up in or glued together wit zsh can be
the source of what tha fuck tha line editor offers as possible completions\&.
.PP
Zsh has two completion systems, a old, so called \fBcompctl\fP completion
(named afta tha builtin command dat serves as its complete n' only
user intercourse), n' a freshly smoked up one, referred ta as \fBcompsys\fP,
organized as library of builtin n' user\-defined functions\&.
Da two systems differ up in they intercourse fo' specifyin tha completion
behavior\&.  Da freshly smoked up system is mo' customizable n' is supplied with
completions fo' nuff commonly used commands; it is therefore ta be
preferred\&.
.PP
Da completion system must be enabled explicitly when tha shell starts\&.
For mo' shiznit see
\fIzshcompsys\fP(1)\&.
.PP
.SS "Extendin tha line editor"
.PP
Apart from completion, tha line editor is highly extensible by means of
shell functions\&.  Some useful functions is provided wit tha shell; they
provide facilitizzles such as:
.PP
.PD 0
.TP
.PD
\fBinsert\-composed\-char\fP
composin charactas not found on tha keyboard
.TP
\fBmatch\-words\-by\-style\fP
configurin what tha fuck tha line editor considaz a word when movin or
deletin by word
.TP
\fBhistory\-beginning\-search\-backward\-end\fP, etc\&.
alternatizzle wayz of searchin tha shell history
.TP
\fBreplace\-string\fP, \fBreplace\-pattern\fP
functions fo' replacin strings or patterns globally up in tha command line
.TP
\fBedit\-command\-line\fP
edit tha command line wit a external editor\&.
.PP
See tha section `ZLE Functions\&' up in \fIzshcontrib\fP(1) fo' descriptionz of these\&.
.PP
.SH "OPTIONS"
.PP
Da shell has a big-ass number of options fo' changin its behaviour\&.
These cover all aspectz of tha shell; browsin tha full documentation is
the only phat way ta become acquainted wit tha nuff possibilities\&.  See
\fIzshoptions\fP(1)\&.
.PP
.SH "PATTERN MATCHING"
.PP
Da shell has a rich set of patterns which is available fo' file matching
(busted lyrics bout up in tha documentation as `filename generation\&' n' also known for
historical reasons as `globbing\&') n' fo' use when programming\&.  These are
busted lyrics bout up in tha section `Filename Generation\&' up in \fIzshexpn\fP(1)\&.
.PP
Of particular interest is tha followin patterns dat is not commonly
supported by other systemz of pattern matching:
.PP
.PD 0
.TP
.PD
\fB**\fP
for matchin over multiple directories
.TP
\fB~\fP, \fB^\fP
the mobilitizzle ta exclude patterns from matchin when tha \fBEXTENDED_GLOB\fP
option is set
.TP
\fB(\fP\fI\&.\&.\&.\fP\fB)\fP
glob qualifiers, included up in parentheses all up in tha end of tha pattern,
which select filez by type (like fuckin directories) or attribute (such as
size)\&.
.PP
.SH "GENERAL COMMENTS ON SYNTAX"
.PP
Although tha syntax of zsh is up in ways similar ta tha Korn shell, and
therefore mo' remotely ta tha original gangsta UNIX shell, tha Bourne shell,
its default behaviour do not entirely correspond ta dem shells\&.
General shell syntax is introduced up in tha section `Shell Grammar\&' in
\fIzshmisc\fP(1)\&.
.PP
One commonly encountered difference is dat variablez substituted onto the
command line is not split tha fuck into lyrics\&.  See tha description of tha shell option
\fBSH_WORD_SPLIT\fP in
the section `Parameta Expansion\&' up in \fIzshexpn\fP(1)\&.
In zsh, you can either explicitly request tha splittin (e\&.g\&. \fB${=foo}\fP)
or use a array when you want a variable ta expand ta mo' than one word\&.  See
the section `Array Parameters\&' up in \fIzshparam\fP(1)\&.
.PP
.SH "PROGRAMMING"
.PP
Da most convenient way of addin enhancements ta tha shell is typically
by freestylin a gangbangin' finger-lickin' dirty-ass shell function n' arrangin fo' it ta be autoloaded\&.
Functions is busted lyrics bout up in tha section `Functions\&' in
\fIzshmisc\fP(1)\&.  Users changin from tha C shell n' its
relatives should notice dat aliases is less used up in zsh as they don\&'t
perform argument substitution, only simple text replacement\&.
.PP
A few general functions, other than dem fo' tha line editor busted lyrics about
above, is provided wit tha shell n' is busted lyrics bout in
\fIzshcontrib\fP(1)\&.  Features include:
.PP
.PD 0
.TP
.PD
\fBpromptinit\fP
a prompt theme system fo' changin prompts easily, peep tha section
`Prompt Themes\&'

.TP
\fBzsh\-mime\-setup\fP
a MIME\-handlin system which dispatches commandz accordin ta tha suffix of
a file as done by graphical file managers
.TP
\fBzcalc\fP
a calculator
.TP
\fBzargs\fP
a version of \fBxargs\fP dat make tha \fBfind\fP command redundant
.TP
\fBzmv\fP
a command fo' renamin filez by meanz of shell patterns\&.
