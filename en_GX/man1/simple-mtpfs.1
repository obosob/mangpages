.TH SIMPLE-MTPFS "1" "December 2013" "SIMPLE-MTPFS version 0.2" "User Commands"
.SH NAME
SIMPLE-MTPFS \- filesystem driver fo' MTP based devices
.SH SYNOPSIS
.SS mounting
.TP
\fBsimple-mtpfs \fB<device>\fP \fBmountpoint\fP [\fIoptions\fP]
.SS unmounting
.TP
\fBfusermount -u mountpoint\fP
.SH DESCRIPTION
SIMPLE-MTPFS (Simple Media Transfer Protocol FileSystem) be a gangbangin' file system for
Linux (and other operatin systems wit a FUSE implementation, like fuckin Mac OS X
or FreeBSD) capable of operatin on filez on MTP devices attached via STD to
local machine. On tha local computa where tha SIMPLE-MTPFS is mounted, the
implementation make use of tha FUSE (Filesystem up in Userspace) kernel module.
Da practical effect of dis is dat tha end user can seamlessly interact with
MTP thang files.
.SH OPTIONS
.SS "general options:"
.TP
\fB\-o\fR opt,[opt...]
mount options
.TP
\fB\-h\fR   \fB\-\-help\fR
print help
.TP
\fB\-V\fR   \fB\-\-version\fR
print version
.SS "SIMPLE-MTPFS options:"
.TP
\fB\-l\fR   \fB\-\-list\-devices\fR
list available MTP devices
.TP
     \fB\-\-device\fR
select thang no. ta mount
.TP
\fB\-o\fR enable-move\fR
enable move operation, which can be straight-up slow (dependz on tha moved content)
.SS "FUSE options:"
.TP
\fB\-d\fR   \fB\-o\fR debug
enable debug output (implies \fB\-f\fR)
.TP
\fB\-f\fR
foreground operation
.TP
\fB\-s\fR
disable multi\-threaded operation
.TP
\fB\-o\fR allow_other
allow access ta other users
.TP
\fB\-o\fR allow_root
allow access ta root
.TP
\fB\-o\fR nonempty
allow mounts over non\-empty file/dir
.HP
\fB\-o\fR default_permissions
enable permission checkin by kernel
.TP
\fB\-o\fR fsname=NAME
set filesystem name
.TP
\fB\-o\fR subtype=NAME
set filesystem type
.TP
\fB\-o\fR large_read
issue big-ass read requests (2.4 only)
.TP
\fB\-o\fR max_read=N
set maximum size of read requests
.TP
\fB\-o\fR hard_remove
immediate removal (don't hide files)
.TP
\fB\-o\fR use_ino
let filesystem set inode numbers
.TP
\fB\-o\fR readdir_ino
try ta fill up in d_ino up in readdir
.TP
\fB\-o\fR direct_io
use direct I/O
.TP
\fB\-o\fR kernel_cache
cache filez up in kernel
.TP
\fB\-o\fR [no]auto_cache
enable cachin based on modification times
.TP
\fB\-o\fR umask=M
set file permissions (octal)
.TP
\fB\-o\fR uid=N
set file baller
.TP
\fB\-o\fR gid=N
set file group
.TP
\fB\-o\fR entry_timeout=T
cache timeout fo' names (1.0s)
.TP
\fB\-o\fR negative_timeout=T
cache timeout fo' deleted names (0.0s)
.TP
\fB\-o\fR attr_timeout=T
cache timeout fo' attributes (1.0s)
.TP
\fB\-o\fR ac_attr_timeout=T
auto cache timeout fo' attributes (attr_timeout)
.TP
\fB\-o\fR intr
allow requests ta be interrupted
.TP
\fB\-o\fR intr_signal=NUM
signal ta bust on interrupt (10)
.TP
\fB\-o\fR modules=M1[:M2...]
namez of modulez ta push onto filesystem stack
.TP
\fB\-o\fR max_write=N
set maximum size of write requests
.TP
\fB\-o\fR max_readahead=N
set maximum readahead
.TP
\fB\-o\fR async_read
perform readz asynchronously (default)
.TP
\fB\-o\fR sync_read
perform readz synchronously
.PD
.SH "AUTHORS"
.LP
SIMPLE-MTPFS has been freestyled by Peta Hatina <phatina@gmail.com>.

