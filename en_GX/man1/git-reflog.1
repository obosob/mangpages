'\" t
.\"     Title: git-reflog
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-REFLOG" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-reflog \- Manage reflog shiznit
.SH "SYNOPSIS"
.sp
.nf
\fIgit reflog\fR <subcommand> <options>
.fi
.sp
.SH "DESCRIPTION"
.sp
Da command takes various subcommands, n' different options dependin on tha subcommand:
.sp
.if n \{\
.RS 4
.\}
.nf
\fIgit reflog expire\fR [\-\-dry\-run] [\-\-stale\-fix] [\-\-verbose]
        [\-\-expire=<time>] [\-\-expire\-unreachable=<time>] [\-\-all] <refs>\&...
\fIgit reflog delete\fR ref@{specifier}\&...
\fIgit reflog\fR [\fIshow\fR] [log\-options] [<ref>]
.fi
.if n \{\
.RE
.\}
.sp
.sp
Reflog be a mechanizzle ta record when tha tip of branches is updated\&. This command is ta manage tha shiznit recorded up in it\&.
.sp
Da subcommand "expire" is used ta prune olda reflog entries\&. Entries olda than expire time, or entries olda than expire\-unreachable time n' not reachable from tha current tip, is removed from tha reflog\&. This is typically not used directly by tha end playas \(em instead, peep \fBgit-gc\fR(1)\&.
.sp
Da subcommand "show" (which be also tha default, up in tha absence of any subcommands) will take all tha aiiight log options, n' show tha log of tha reference provided up in tha command\-line (or HEAD, by default)\&. Da reflog will cover all recent actions (HEAD reflog recordz branch switchin as well)\&. Well shiiiit, it be a alias fo' git log \-g \-\-abbrev\-commit \-\-pretty=oneline; peep \fBgit-log\fR(1)\&.
.sp
Da reflog is useful up in various Git commands, ta specify tha oldschool value of a reference\&. For example, HEAD@{2} means "where HEAD used ta be two moves ago", master@{one\&.week\&.ago} means "where masta used ta point ta one week ago", n' so on\&. Right back up in yo muthafuckin ass. See \fBgitrevisions\fR(7) fo' mo' details\&.
.sp
To delete single entries from tha reflog, use tha subcommand "delete" n' specify tha \fIexact\fR entry (e\&.g\&. "git reflog delete master@{2}")\&.
.SH "OPTIONS"
.PP
\-\-stale\-fix
.RS 4
This revamps tha logic \(em tha definizzle of "broken commit" becomes: a cold-ass lil commit dat aint reachable from any of tha refs n' there be a missin object among tha commit, tree, or blob objects reachable from it dat aint reachable from any of tha refs\&.
.sp
This computation involves traversin all tha reachable objects, i\&.e\&. it has tha same ol' dirty cost as
\fIgit prune\fR\&. Fortunately, once dis is run, we should not gotta eva worry bout missin objects, cuz tha current prune n' pack\-objects know bout reflogs n' protect objects referred by them\&.
.RE
.PP
\-\-expire=<time>
.RS 4
Entries olda than dis time is pruned\&. Without tha option it is taken from configuration
gc\&.reflogExpire, which up in turn defaults ta 90 days\&. \-\-expire=all prunes entries regardless of they age; \-\-expire=never turns off prunin of reachable entries (but peep \-\-expire\-unreachable)\&.
.RE
.PP
\-\-expire\-unreachable=<time>
.RS 4
Entries olda than dis time n' not reachable from tha current tip of tha branch is pruned\&. Without tha option it is taken from configuration
gc\&.reflogExpireUnreachable, which up in turn defaults ta 30 days\&. \-\-expire\-unreachable=all prunes unreachable entries regardless of they age; \-\-expire\-unreachable=never turns off early prunin of unreachable entries (but peep \-\-expire)\&.
.RE
.PP
\-\-all
.RS 4
Instead of listin <refs> explicitly, prune all refs\&.
.RE
.PP
\-\-updateref
.RS 4
Update tha ref wit tha sha1 of tha top reflog entry (i\&.e\&. <ref>@{0}) afta expirin or deleting\&.
.RE
.PP
\-\-rewrite
.RS 4
While expirin or deleting, adjust each reflog entry ta ensure dat the
old
sha1 field points ta the
new
sha1 field of tha previous entry\&.
.RE
.PP
\-\-verbose
.RS 4
Print extra shiznit on screen\&.
.RE
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
