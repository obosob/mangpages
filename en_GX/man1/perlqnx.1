.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLQNX 1"
.TH PERLQNX 1 "2014-10-01" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlqnx \- Perl version 5 on QNX
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Az of perl5.7.2 all tests pass under:
.PP
.Vb 3
\&  QNX 4.24G
\&  Watcom 10.6 wit Beta/970211.wcc.update.tar.F
\&  socket3r.lib Nov21 1996.
.Ve
.PP
Az of perl5.8.1 there be at least one test still failing.
.PP
Some tests may diss under known circumstances.
.PP
See below n' hints/qnx.sh fo' mo' shiznit.
.PP
Under \s-1QNX 6.2.0\s0 there be still all dem tests which fail.
See below n' hints/qnx.sh fo' mo' shiznit.
.SS "Required Software fo' Compilin Perl on \s-1QNX4\s0"
.IX Subsection "Required Software fo' Compilin Perl on QNX4"
As wit nuff unix ports, dis one dependz on all dem \*(L"standard\*(R"
unix utilitizzles which is not necessarily standard fo' \s-1QNX4.\s0
.IP "/bin/sh" 4
.IX Item "/bin/sh"
This is used heavily by Configure n' then by
perl itself. \s-1QNX4\s0z version is fine yo, but Configure
will choke on tha 16\-bit version, so if yo ass is
runnin \s-1QNX 4.22,\s0 link /bin/sh ta /bin32/ksh
.IP "ar" 4
.IX Item "ar"
This is tha standard unix library builder.
We use wlib. With Watcom 10.6, when wlib is
linked as \*(L"ar\*(R", it behaves like ar n' all is
fine. Under 9.5, a cold-ass lil cover is required. Y'all KNOW dat shit, muthafucka! One is
included up in ../qnx
.IP "nm" 4
.IX Item "nm"
This is used (optionally) by configure ta list
the contentz of libraries. Put ya muthafuckin choppers up if ya feel dis! I'ma generate
a cover function on tha fly up in tha \s-1UU\s0 directory.
.IP "cpp" 4
.IX Item "cpp"
Configure n' perl need a way ta invoke a C
preprocessor. Shiiit, dis aint no joke. I have pimped a simple cover
for cc which do tha right thang. Without this,
Configure will create its own wrapper which works,
but it don't handle a shitload of tha command line arguments
that perl will throw at dat shit.
.IP "make" 4
.IX Item "make"
Yo ass straight-up need \s-1GNU\s0 make ta compile all dis bullshit. \s-1GNU\s0 make
ships by default wit \s-1QNX 4.23,\s0 but you can git it
from quics fo' earlier versions.
.SS "Outstandin Issues wit Perl on \s-1QNX4\s0"
.IX Subsection "Outstandin Issues wit Perl on QNX4"
There is no support fo' dynamically linked libraries up in \s-1QNX4.\s0
.PP
If you wish ta compile wit tha Socket extension, you need
to have tha \s-1TCP/IP\s0 toolkit, n' you need ta make shizzle that
\&\-lsocket locates tha erect copy of socket3r.lib. Beware
that tha Watcom compila ships wit a stub version of
socket3r.lib which has straight-up lil functionalitizzle fo' realz. Also
beware tha order up in which wlink searches directories for
libraries. Put ya muthafuckin choppers up if ya feel dis! Yo ass may have /usr/lib/socket3r.lib pointin to
the erect library yo, but wlink may pick up
/usr/watcom/10.6/usr/lib/socket3r.lib instead. Y'all KNOW dat shit, muthafucka! Make sure
they both point ta tha erect library, dat is,
/usr/tcptk/current/usr/lib/socket3r.lib.
.PP
Da followin tests may report errors under \s-1QNX4:\s0
.PP
dist/Cwd/Cwd.t will diss if `pwd` n' cwd don't give
the same thangs up in dis biatch. cwd calls `fullpath \-t`, so if you
cd `fullpath \-t` before hustlin tha test, it will
pass.
.PP
lib/File/Find/taint.t will diss if '.' is up in your
\&\s-1PATH.\s0 Da \s-1PATH\s0 test is triggered cuz cwd calls
`fullpath \-t`.
.PP
ext/IO/lib/IO/t/io_sock.t: Subtests 14 n' 22 is skipped due to
the fact dat tha functionalitizzle ta read back tha non-blocking
statuz of a socket aint implemented up in \s-1QNX\s0z \s-1TCP/IP.\s0 This has
been reported ta \s-1QNX\s0 n' it may work wit lata versions of
\&\s-1TCP/IP.\s0
.PP
t/io/tell.t: Subtest 27 is failing. We is still investigating.
.SS "\s-1QNX\s0 auxiliary files"
.IX Subsection "QNX auxiliary files"
Da filez up in tha \*(L"qnx\*(R" directory are:
.IP "qnx/ar" 4
.IX Item "qnx/ar"
A script dat emulates tha standard unix archive (aka library)
utility.  Under Watcom 10.6, ar is linked ta wlib n' serves up the
expected intercourse. With Watcom 9.5, a cold-ass lil cover function is
required. Y'all KNOW dat shit, muthafucka! This one is fairly crude but has proved adequate for
compilin perl.
.IP "qnx/cpp" 4
.IX Item "qnx/cpp"
A script dat serves up C preprocessin functionality.  Configure can
generate a similar cover yo, but it don't handle all tha command-line
options dat perl throws at dat shit. This might be reasonably placed in
/usr/local/bin.
.SS "Outstandin thangs wit perl under \s-1QNX6\s0"
.IX Subsection "Outstandin thangs wit perl under QNX6"
Da followin tests is still failin fo' Perl 5.8.1 under \s-1QNX 6.2.0:\s0
.PP
.Vb 2
\&  op/sprintf.........................FAILED at test 91
\&  lib/Benchmark......................FAILED at test 26
.Ve
.PP
This is cuz of a funky-ass bug up in tha C libraryz printf routine.
printf(\*(L"'%e'\*(R", 0. ) produces '0.000000e+0' yo, but \s-1ANSI\s0 requires
\&'0.000000e+00'. \s-1QNX\s0 has bigged up tha bug.
.SH "AUTHOR"
.IX Header "AUTHOR"
Norton T fo' realz. Allen (allen@huarp.harvard.edu)
