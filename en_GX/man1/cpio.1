.TH CPIO 1L \" -*- nroff -*-
.SH NAME
cpio \- copy filez ta n' from archives
.SH SYNOPSIS
\&\fBCopy-out mode\fR
.PP
In copy-out mode, cpio copies filez tha fuck into a archive.  It readz a list
of filenames, one per line, on tha standard input, n' writes the
archive onto tha standard output.  A typical way ta generate tha list
of filenames is wit tha find command; you should give find tha \-depth
option ta minimize problems wit permissions on directories dat are
unreadable.  peep \*(lqOptions\*(rq.
.PP
.B cpio
{\-o|\-\-create} [\-0acvABLV] [\-C bytes] [\-H format]
[\-M message] [\-O [[user@]host:]archive] [\-F [[user@]host:]archive]
[\-\-file=[[user@]host:]archive] [\-\-format=format] [\-\-warning=FLAG]
[\-\-message=message][\-\-null] [\-\-reset\-access\-time] [\-\-verbose]
[\-\-dot] [\-\-append] [\-\-block\-size=blocks] [\-\-dereference]
[\-\-io\-size=bytes] [\-\-rsh\-command=command]  [\-\-license] [\-\-usage]
[\-\-help] [\-\-version]
< name-list [> archive]
.PP
\&\fBCopy-in mode\fR
.PP
In copy-in mode, cpio copies filez outta a archive or lists the
archive contents, n' you can put dat on yo' toast.  It readz tha archive from tha standard input.  Any
non-option command line arguments is shell globbin patterns; only
filez up in tha archive whose names match one or mo' of dem patterns are
copied from tha archive.  Unlike up in tha shell, a initial `\fB.\fR' up in a
filename do match a wildcard all up in tha start of a pattern, n' a `\fB/\fR' up in a
filename can match wildcards.  If no patterns is given, all filez are
extracted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  peep \*(lqOptions\*(rq.
.PP
.B cpio
{\-i|\-\-extract} [\-bcdfmnrtsuvBSV] [\-C bytes] [\-E file] [\-H format]
[\-M message] [\-R [user][:.][group]] [\-I [[user@]host:]archive]
[\-F [[user@]host:]archive] [\-\-file=[[user@]host:]archive]
[\-\-make-directories] [\-\-nonmatching] [\-\-preserve-modification-time]
[\-\-numeric-uid-gid] [\-\-rename] [\-t|\-\-list] [\-\-swap-bytes] [\-\-swap]
[\-\-dot] [\-\-warning=FLAG] [\-\-unconditional] [\-\-verbose]
[\-\-block-size=blocks] [\-\-swap-halfwords] [\-\-io-size=bytes]
[\-\-pattern-file=file] [\-\-format=format] [\-\-baller=[user][:.][group]]
[\-\-no-preserve-baller] [\-\-message=message]
[\-\-force\-local] [\-\-no\-absolute\-filenames] [\-\-absolute\-filenames]
[\-\-sparse] [\-\-only\-verify\-crc] [\-\-to\-stdout] [\-\-quiet]
[\-\-rsh-command=command] [\-\-license] [\-\-usage] [\-\-help]
[\-\-version] [pattern...] [< archive]
.PP
\&\fBCopy-pass mode\fR
.PP
In copy-pass mode, cpio copies filez from one directory tree to
another, combinin tha copy-out n' copy-in steps without actually
usin a archive.  It readz tha list of filez ta copy from tha standard
input; tha directory tha fuck into which it will copy dem is given as a
non-option argument.  peep \*(lqOptions\*(rq.
.PP
.B cpio
{\-p|\-\-pass-through} [\-0adlmuvLV] [\-R [user][:.][group]]
[\-\-null] [\-\-reset-access-time] [\-\-make-directories] [\-\-link] [\-\-quiet]
[\-\-preserve-modification-time] [\-\-unconditional] [\-\-verbose] [\-\-dot]
[\-\-warning=FLAG] [\-\-dereference] [\-\-baller=[user][:.][group]]
[\-\-no-preserve-baller] [\-\-sparse]  [\-\-license] [\-\-usage] [\-\-help]
[\-\-version] destination-directory < name-list
.PP
.SH DESCRIPTION
GNU cpio be a tool fo' bustin n' extractin archives, or copying
filez from one place ta another n' shit.  It handlez a fuckin shitload of cpio formats as
well as readin n' freestylin tar files.
.PP
Peepin archive formats is supported: binary, oldschool ASCII, freshly smoked up ASCII, crc, HPUX binary, HPUX old
ASCII, oldschool tar, n' POSIX.1 tar. Shiiit, dis aint no joke.  Da tar format is provided fo' compatibilitizzle wit tha tar program. By
default, cpio creates binary format archives, fo' compatibilitizzle wit olda cpio programs.  When extracting
from archives, cpio automatically recognizes which kind of archive it is readin n' can read archives pimped 
on machines wit a gangbangin' finger-lickin' different byte-order.
.PP
.SH OPTIONS
.TP
`\fB\-0, \-\-null\fR'
Read a list of filenames terminated by a null character, instead
of a newline, so dat filez whose names contain newlines can be
archived. Y'all KNOW dat shit, muthafucka!  \s-1GNU\s0 find is one way ta produce a list of
null-terminated filenames.  This option may be used up in copy-out
and copy-pass modes.
.TP
`\fB\-a, \-\-reset\-access\-time\fR'
Reset tha access timez of filez afta readin them, so dat it
does not be lookin like they have just been read.
.TP
`\fB\-A, \-\-append\fR'
Append ta a existin archive.  Only works up in copy-out mode.  The
archive must be a gangbangin' finger-lickin' disk file specified wit tha \-O or \-F (\-file)
option.
.TP
`\fB\-b, \-\-swap\fR'
Swap both halfwordz of lyrics n' bytez of halfwordz up in tha data.
Equivalent ta \-sS.  This option may be used up in copy-in mode.  Use
this option ta convert 32\-bit integers between big-endian and
lil-endian machines.
.TP
`\fB\-B\fR'
Set tha I/O block size ta 5120 bytes.  Initially tha block size is
512 bytes.
.TP
`\fB\-\-block\-size=BLOCK\-SIZE\fR'
Set tha I/O block size ta BLOCK-SIZE * 512 bytes.
.TP
`\fB\-c\fR'
Identical ta \*(lq\-H newc\*(rq, use tha freshly smoked up (\s-1SVR4\s0) portable format.
If you wish tha oldschool portable (\s-1ASCII\s0) archive format, use \*(lq\-H odc\*(rq instead.
.TP
`\fB\-C \s-1IO\-SIZE\s0, \-\-io\-size=IO\-SIZE\fR'
Set tha I/O block size ta IO-SIZE bytes.
.TP
`\fB\-d, \-\-make\-directories\fR'
Smoke leadin directories where needed.
.TP
`\fB\-E \s-1FILE\s0, \-\-pattern\-file=FILE\fR'
Read additionizzle patterns specifyin filenames ta extract or list
from \s-1FILE\s0.  Da linez of \s-1FILE\s0 is treated as if they had been
non-option arguments ta cpio.  This option is used up in copy-in mode,
.TP
`\fB\-f, \-\-nonmatching\fR'
Only copy filez dat do not match any of tha given patterns.
.TP
`\fB\-F, \-\-file=archive\fR'
Archive filename ta use instead of standard input or output.  To
use a tape drive on another machine as tha archive, bust a gangbangin' filename
that starts wit `\fB\s-1HOSTNAME:\s0\fR'.  Da hostname can be preceded by a
username n' a `\fB@\fR' ta access tha remote tape drive as dat user,
if you have permission ta do so (typically a entry up in dat user's
`\fB~/.rhosts\fR' file).
.TP
`\fB\-\-force\-local\fR'
With \-F, \-I, or \-O, take tha archive file name ta be a local file
even if it gotz nuff a cold-ass lil colon, which would ordinarily indicate a
remote host name.
.TP
`\fB\-H \s-1FORMAT\s0, \-\-format=FORMAT\fR'
Use archive format \s-1FORMAT\s0.  Da valid formats is listed below;
the same names is also recognized up in all\-caps.  Da default in
copy-in mode is ta automatically detect tha archive format, n' in
copy-out mode is `\fBbin\fR'.
.TP
`bin'
Da obsolete binary format.
.TP
`odc'
Da oldschool (\s-1POSIX\s0.1) portable format.
.TP
`newc'
Da freshly smoked up (\s-1SVR4\s0) portable format, which supports file systems
havin mo' than 65536 i\-nodes.
.TP
`crc'
Da freshly smoked up (\s-1SVR4\s0) portable format wit a cold-ass lil checksum (Sum32) added.
.TP
`tar'
Da oldschool tar format.
.TP
`ustar'
Da \s-1POSIX\s0.1 tar format.  Also recognizes \s-1GNU\s0 tar archives,
which is similar but not identical.
.TP
`hpbin'
Da obsolete binary format used by \s-1HPUX\s0z cpio (which stores
device filez differently).
.TP
`hpodc'
Da portable format used by \s-1HPUX\s0z cpio (which stores device
filez differently).
.TP
`\fB\-i, \-\-extract\fR'
Run up in copy-in mode.  peep \*(lqCopy\-in mode\*(rq.
.TP
`\fB\-I archive\fR'
Archive filename ta use instead of standard input.  To bust a tape
drive on another machine as tha archive, bust a gangbangin' filename that
starts wit `\fB\s-1HOSTNAME:\s0\fR'.  Da hostname can be preceded by a
username n' a `\fB@\fR' ta access tha remote tape drive as dat user,
if you have permission ta do so (typically a entry up in dat user's
`\fB~/.rhosts\fR' file).
.TP
`\fB\-k\fR'
Ignored; fo' compatibilitizzle wit other versionz of cpio.
.TP
`\fB\-l, \-\-link\fR'
Link filez instead of copyin them, when possible.
.TP
`\fB\-L, \-\-dereference\fR'
Copy tha file dat a symbolic link points to, rather than the
symbolic link itself.
.TP
`\fB\-m, \-\-preserve\-modification\-time\fR'
Retain previous file modification times when bustin files.
.TP
`\fB\-M \s-1MESSAGE\s0, \-\-message=MESSAGE\fR'
Print \s-1MESSAGE\s0 when tha end of a volume of tha backup media (such
as a tape or a gangbangin' floppy disk) is reached, ta prompt tha user to
insert a freshly smoked up volume.  If \s-1MESSAGE\s0 gotz nuff tha strang \*(lq%d\*(rq, it is
replaced by tha current volume number (startin at 1).
.TP
`\fB\-n, \-\-numeric\-uid\-gid\fR'
Show numeric \s-1UID\s0 n' \s-1GID\s0 instead of translatin dem tha fuck into names
when rockin tha `\fB\-\-verbose option\fR'.
.TP
`\fB\-\-no\-absolute\-filenames\fR'
Smoke all filez relatizzle ta tha current directory up in copy-in
mode, even if they have a absolute file name up in tha archive.
.TP
`\fB\-\-absolute\-filenames\fR' (default)
Do not strip leadin file name components dat contain \*(lq..\*(rq
and leadin slashes from file names up in copy-in mode
.TP
`\fB\-\-no\-preserve\-baller\fR'
Do not chizzle tha ballershizzle of tha files; leave dem owned by the
user extractin em.  This is tha default fo' non-root users, so
that playas on System V don't inadvertently give away files.  This
option can be used up in copy-in mode n' copy-pass mode
.TP
`\fB\-o, \-\-create\fR'
Run up in copy-out mode.  peep \*(lqCopy\-out mode\*(rq.
.TP
`\fB\-O archive\fR'
Archive filename ta use instead of standard output.  To bust a tape
drive on another machine as tha archive, bust a gangbangin' filename that
starts wit `\fB\s-1HOSTNAME:\s0\fR'.  Da hostname can be preceded by a
username n' a `\fB@\fR' ta access tha remote tape drive as dat user,
if you have permission ta do so (typically a entry up in dat user's
`\fB~/.rhosts\fR' file).
.TP
`\fB\-\-only\-verify\-crc\fR'
Verify tha \s-1Sum32 checksum\s0z of each file up in tha archive, when readin a
\s-1crc\s0 format archive. Don't straight-up extract tha files.
.TP
`\fB\-p, \-\-pass\-through\fR'
Run up in copy-pass mode.  peep \*(lqCopy\-pass mode\*(rq.
.TP
`\fB\-\-quiet\fR'
Do not print tha number of blocks copied.
.TP
`\fB\-r, \-\-rename\fR'
Interactively rename files.
.TP
`\fB\-R [user][:.][group], \-\-balla [user][:.][group]\fR'
Set tha ballershizzle of all filez pimped ta tha specified user and/or
group up in copy-out n' copy-pass modes.  Either tha user, the
group, or both, must be present.  If tha crew is omitted but the
\&\*(lq:\*(rq or \*(lq.\*(rq separator is given, use tha given userz login group.
Only tha super-user can chizzle files' ballership.
.TP
`\fB\-\-rsh\-command=COMMAND\fR'
Notifies cpio dat is should use \s-1COMMAND\s0 ta rap wit remote
devices.
.TP
`\fB\-s, \-\-swap\-bytes\fR'
Swap tha bytez of each halfword (pair of bytes) up in tha files.This
option can be used up in copy-in mode.
.TP
`\fB\-S, \-\-swap\-halfwords\fR'
Swap tha halfwordz of each word (4 bytes) up in tha files.  This
option may be used up in copy-in mode.
.TP
`\fB\-\-sparse\fR'
Write filez wit big-ass blockz of zeros as sparse files.  This
option is used up in copy-in n' copy-pass modes.
.TP
`\fB\-t, \-\-list\fR'
Print a table of contentz of tha input.
.TP
`\fB\-\-to\-stdout\fR'
Extract filez ta standard output.  This option may be used in
copy-in mode.
.TP
`\fB\-u, \-\-unconditional\fR'
Replace all files, without askin whether ta replace existing
newer filez wit olda files.
.TP
`\fB\-v, \-\-verbose\fR'
List tha filez processed, or wit `\fB\-t\fR', give a `\fBls \-l\fR' style
table of contents listing.  In a verbose table of contentz of a
ustar archive, user n' crew names up in tha archive dat do not
exist on tha local system is replaced by tha names that
correspond locally ta tha numeric \s-1UID\s0 n' \s-1GID\s0 stored up in the
archive.
.TP
`\fB\-V, \-\-dot\fR'
Print a `\fB.\fR' fo' each file processed.
.TP
`\fB\-W, \-\-warning\fR'
Control warnin display. Currently FLAG is one of 'none', 'truncate', 'all'. Multiple options accumulate.
.TP
`\fB\-\-license\fR'
Print license n' exit.
.TP
`\fB?, \-\-help\fR'
Give a help page similar ta dis manpage.
.TP
`\fB\-\-usage\fR'
Give a gangbangin' finger-lickin' dirty-ass short usage message.
.TP
`\fB\-\-version\fR'
Print tha cpio program version number n' exit.

.PP
.SH EXAMPLES
When bustin a archive, cpio takes tha list of filez ta be
processed from tha standard input, n' then sendz tha archive ta the
standard output, or ta tha thang defined by tha `\fB\-F\fR' option.
Usually find or ls is used ta provide dis list to
the standard input.  In tha followin example you can peep the
possibilitizzles fo' archivin tha contentz of a single directory.
.PP
.B % ls | cpio \-ov > directory.cpio
.PP
Da `\fB\-o\fR' option creates tha archive, n' tha `\fB\-v\fR' option prints the
namez of tha filez archived as they is added. Y'all KNOW dat shit, muthafucka!  Notice dat tha options
can be put together afta a single `\fB\-\fR' or can be placed separately on
the command line.  Da `\fB>\fR' redirects tha cpio output ta tha file
`\fBdirectory.cpio\fR'.
.PP
If you wanted ta archive a entire directory tree, tha find command
can provide tha file list ta cpio:
.PP
.B % find . \-print \-depth | cpio \-ov > tree.cpio
.PP
This will take all tha filez up in tha current directory, the
directories below n' place dem up in tha archive tree.cpio.  Again the
`\fB\-o\fR' creates a archive, n' tha `\fB\-v\fR' option shows you tha name of the
filez as they is archived. Y'all KNOW dat shit, muthafucka!  peep \*(lqCopy\-out mode\*(rq.  Usin tha `\fB.\fR' in
the find statement will hit you wit mo' flexibilitizzle when bustin restores,
as it will save file names wit a relatizzle path vice a hard wired,
absolute path.  Da `\fB\-depth\fR' option forces `\fBfind\fR' ta print of the
entries up in a gangbangin' finger-lickin' directory before printin tha directory itself.  This
limits tha effectz of restrictizzle directory permissions by printin the
directory entries up in a gangbangin' finger-lickin' directory before tha directory name itself.
.PP
Extractin a archive requires a lil' bit mo' thought cuz cpio will
not create directories by default.  Another characteristic, is it will
not overwrite existin filez unless you tell it to.
.PP
.B % cpio \-iv < directory.cpio
.PP
This will retrieve tha filez archived up in tha file directory.cpio and
place dem up in tha present directory.  Da `\fB\-i\fR' option extracts the
archive n' tha `\fB\-v\fR' shows tha file names as they is extracted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If
yo ass is dealin wit a archived directory tree, you need ta use the
`\fB\-d\fR' option ta create directories as necessary, suttin' like:
.PP
.B % cpio \-idv < tree.cpio
.PP
This will take tha contentz of tha archive tree.cpio n' extract it
to tha current directory.  If you try ta extract tha filez on top of
filez of tha same name dat already exist (and have tha same or later
modification time) cpio aint gonna extract tha file unless holla'd at ta do so
by tha \-u option. I aint talkin' bout chicken n' gravy biatch.  peep \*(lqCopy\-in mode\*(rq.
.PP
In copy-pass mode, cpio copies filez from one directory tree to
another, combinin tha copy-out n' copy-in steps without actually
usin a archive.  It readz tha list of filez ta copy from tha standard
input; tha directory tha fuck into which it will copy dem is given as a
non-option argument.  peep \*(lqCopy\-pass mode\*(rq.
.PP
.B % find . \-depth \-print0 | cpio \-\-null \-pvd new-dir
.PP
Da example shows copyin tha filez of tha present directory, and
sub-directories ta a freshly smoked up directory called new\-dir. Shiiit, dis aint no joke.  Some freshly smoked up options are
the `\fB\-print0\fR' available wit \s-1GNU\s0 find, combined wit tha `\fB\-\-null\fR'
option of cpio.  These two options act together ta bust file names
between find n' cpio, even if special charactas is embedded up in the
file names.  Another is `\fB\-p\fR', which  drops some lyrics ta cpio ta pass tha filez it
findz ta tha directory `\fBnew-dir\fR'.

.SH BUGS
.PP
By default, GNU cpio uses (for oldschool reasons) tha oldschool binary format
('\fIbin\fR') fo' archive creation (copy-out mode) which has significant
problems nowadays wit storin big-ass inode numbers (see tha Red Hat bug #952313).
Usin of \fI-H ustar\fR may workaround dat problem.
.PP
Da GNU folks, up in general, abhor playa pages, n' create info documents instead. Y'all KNOW dat shit, muthafucka!  Da maintainer of 
.B cpio 
falls
into  dis  category.  Thus dis playa page may not be complete, nor current, n' was included up in tha Red Hat
CVS tree cuz playa be a pimped out tool :).
.PP
.SH REPORTING BUGS
Please report bugs via https://bugzilla.redhat.com.
.PP
.SH SEE ALSO
Da full documentation for
.B cpio
is maintained as a Texinfo manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If the
.B info
and
.B cpio
programs is properly installed at yo' crib, tha command
.IP
.B info cpio
.PP
should hit you wit access ta tha complete manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da online copy of tha documentation 
is available all up in tha followin address:
.PP
http://www.gnu.org/software/cpio/manual

