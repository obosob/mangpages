.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLMODINSTALL 1"
.TH PERLMODINSTALL 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlmodinstall \- Installin CPAN Modules
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Yo ass can be thinkin of a module as tha fundamenstrual unit of reusable Perl
code; peep perlmod fo' details.  Whenever mah playas creates a cold-ass lil chunk of
Perl code dat they be thinkin is ghon be useful ta tha ghetto, they register
as a Perl pimper at http://www.cpan.org/modules/04pause.html
so dat they can then upload they code ta tha \s-1CPAN. \s0 Da \s-1CPAN\s0 is the
Comprehensive Perl Archive Network n' can be accessed at
http://www.cpan.org/ , n' searched at http://search.cpan.org/ .
.PP
This documentation is fo' playas whoz ass wanna downlizzle \s-1CPAN\s0 modules
and install dem on they own computer.
.SS "\s-1PREAMBLE\s0"
.IX Subsection "PREAMBLE"
First, is you shizzle dat tha module aint already on yo' system?  Try
\&\f(CW\*(C`perl \-MFoo \-e 1\*(C'\fR.  (Replace \*(L"Foo\*(R" wit tha name of tha module; for
instance, \f(CW\*(C`perl \-MCGI::Carp \-e 1\*(C'\fR.)
.PP
If you don't peep a error message, you have tha module.  (If you do
see a error message, itz still possible you have tha module yo, but
that it aint up in yo' path, which you can display wit \f(CW\*(C`perl \-e
"print qq(@INC)"\*(C'\fR.)  For tha remainder of dis document, we'll assume
that you straight-up straight-up truly lack a installed module yo, but have
found it on tha \s-1CPAN.\s0
.PP
So now you gotz a gangbangin' file endin up in .tar.gz (or, less often, .zip).  You
know there be a a dirty module inside.  There is four steps you must now
take:
.IP "\fB\s-1DECOMPRESS\s0\fR tha file" 5
.IX Item "DECOMPRESS tha file"
.PD 0
.IP "\fB\s-1UNPACK\s0\fR tha file tha fuck into a gangbangin' finger-lickin' directory" 5
.IX Item "UNPACK tha file tha fuck into a gangbangin' finger-lickin' directory"
.IP "\fB\s-1BUILD\s0\fR tha module (sometimes unnecessary)" 5
.IX Item "BUILD tha module (sometimes unnecessary)"
.IP "\fB\s-1INSTALL\s0\fR tha module." 5
.IX Item "INSTALL tha module."
.PD
.PP
Herez how tha fuck ta big-ass up each step fo' each operatin system.  This is
<not> a substitute fo' readin tha \s-1README\s0 n' \s-1INSTALL\s0 filez that
might have come wit yo' module!
.PP
Also note dat these instructions is tailored fo' installin the
module tha fuck into yo' systemz repository of Perl modulez yo, but you can
install modulez tha fuck into any directory you wish.  For instance, where I
say \f(CW\*(C`perl Makefile.PL\*(C'\fR, you can substitute \f(CW\*(C`perl Makefile.PL
PREFIX=/my/perl_directory\*(C'\fR ta install tha modulez into
\&\fI/my/perl_directory\fR.  Then you can use tha modulez from yo' Perl
programs wit \f(CW\*(C`use lib "/my/perl_directory/lib/site_perl";\*(C'\fR or
sometimes just \f(CW\*(C`use "/my/perl_directory";\*(C'\fR.  If you on a system
that requires superuser/root access ta install modulez tha fuck into the
directories you peep when you type \f(CW\*(C`perl \-e "print qq(@INC)"\*(C'\fR, you'll
wanna install dem tha fuck into a local directory (like fuckin yo' home
directory) n' use dis approach.
.IP "\(bu" 4
\&\fBIf you on a Unix or Unix-like system,\fR
.Sp
Yo ass can use Andreas Koenigz \s-1CPAN\s0 module
( http://www.cpan.org/modules/by\-module/CPAN )
to automate tha followin steps, from \s-1DECOMPRESS\s0 all up in \s-1INSTALL.\s0
.Sp
A. \s-1DECOMPRESS\s0
.Sp
Decompress tha file wit \f(CW\*(C`gzip \-d yourmodule.tar.gz\*(C'\fR
.Sp
Yo ass can git gzip from ftp://prep.ai.mit.edu/pub/gnu/
.Sp
Or, you can combine dis step wit tha next ta save disk space:
.Sp
.Vb 1
\&     gzip \-dc yourmodule.tar.gz | tar \-xof \-
.Ve
.Sp
B. \s-1UNPACK\s0
.Sp
Unpack tha result wit \f(CW\*(C`tar \-xof yourmodule.tar\*(C'\fR
.Sp
C. \s-1BUILD\s0
.Sp
Go tha fuck into tha newly-created directory n' type:
.Sp
.Vb 2
\&      perl Makefile.PL
\&      make test
.Ve
.Sp
or
.Sp
.Vb 1
\&      perl Makefile.PL PREFIX=/my/perl_directory
.Ve
.Sp
to install it locally.  (Remember dat if you do this, you gonna have to
put \f(CW\*(C`use lib "/my/perl_directory";\*(C'\fR near tha top of tha program that
is ta use dis module.
.Sp
D. \s-1INSTALL\s0
.Sp
While still up in dat directory, type:
.Sp
.Vb 1
\&      make install
.Ve
.Sp
Make shizzle you have tha appropriate permissions ta install tha module
in yo' Perl 5 library directory.  Often, you gonna need ta be root.
.Sp
Thatz all you need ta do on Unix systems wit dynamic linking.
Most Unix systems have dynamic linking. If yours don't, or if for
another reason you gotz a statically-linked perl, \fBand\fR the
module requires compilation, you gonna need ta build a freshly smoked up Perl binary
that includes tha module.  Again, you gonna probably need ta be root.
.IP "\(bu" 4
\&\fBIf you hustlin ActivePerl (Win95/98/2K/NT/XP, Linux, Solaris),\fR
.Sp
First, type \f(CW\*(C`ppm\*(C'\fR from a gangbangin' finger-lickin' dirty-ass shell n' peep whether ActiveStatez \s-1PPM\s0
repository has yo' module.  If so, you can install it wit \f(CW\*(C`ppm\*(C'\fR and
you won't gotta bother wit any of tha other steps here, so peek-a-boo, clear tha way, I be comin' thru fo'sho.  Yo ass might
be able ta use tha \s-1CPAN\s0 instructions from tha \*(L"Unix or Linux\*(R" section
above as well; give it a try.  Otherwise, you gonna gotta follow the
steps below.
.Sp
.Vb 1
\&   A. DECOMPRESS
.Ve
.Sp
Yo ass can use tha shareware Winzip ( http://www.winzip.com ) to
decompress n' unpack modules.
.Sp
.Vb 1
\&   B. UNPACK
.Ve
.Sp
If you used WinZip, dis was already done fo' yo thugged-out ass.
.Sp
.Vb 1
\&   C. BUILD
.Ve
.Sp
You'll need tha \f(CW\*(C`nmake\*(C'\fR utility, available at
http://download.microsoft.com/download/vc15/Patch/1.52/W95/EN\-US/nmake15.exe
or dmake, available on \s-1CPAN.\s0
http://search.cpan.org/dist/dmake/
.Sp
Do tha module require compilation (i.e. do it have filez dat end
in .xs, .c, .h, .y, .cc, .cxx, or .C)?  If it do, game is now
officially tough fo' you, cuz you gotta compile tha module
yo ass (no easy as fuck  feat on Windows).  You'll need a cold-ass lil compila such as
Visual \*(C+.  Alternatively, you can downlizzle a pre-built \s-1PPM\s0 package
from ActiveState.
http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/
.Sp
Go tha fuck into tha newly-created directory n' type:
.Sp
.Vb 2
\&      perl Makefile.PL
\&      nmake test
\&
\&
\&   D. INSTALL
.Ve
.Sp
While still up in dat directory, type:
.Sp
.Vb 1
\&      nmake install
.Ve
.IP "\(bu" 4
\&\fBIf you rockin a Macintosh wit \*(L"Classic\*(R" MacOS n' MacPerl,\fR
.Sp
A. \s-1DECOMPRESS\s0
.Sp
First, make shizzle you have tha sickest fuckin \fBcpan-mac\fR distribution (
http://www.cpan.org/authors/id/CNANDOR/ ), which has utilitizzles for
fuckin wit all of tha steps.  Read tha cpan-mac directions carefully and
install dat shit.  If you chizzle not ta use cpan-mac fo' some reason, there
are alternatives listed here.
.Sp
Afta installin cpan-mac, drop tha module archive on the
\&\fBuntarzipme\fR droplet, which will decompress n' unpack fo' yo thugged-out ass.
.Sp
\&\fBOr\fR, you can either use tha shareware \fBStuffIt Expander\fR program
( http://my.smithmicro.com/mac/stuffit/ )
or tha freeware \fBMacGzip\fR program (
http://persephone.cps.unizar.es/general/gente/spd/gzip/gzip.html ).
.Sp
B. \s-1UNPACK\s0
.Sp
If you rockin untarzipme or StuffIt, tha archive should be extracted
now.  \fBOr\fR, you can use tha freeware \fBsuntar\fR or \fITar\fR (
http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/ ).
.Sp
C. \s-1BUILD\s0
.Sp
Peep tha contentz of tha distribution.
Read tha modulez documentation, lookin for
reasons why you might have shiznit rockin it wit MacPerl.  Look for
\&\fI.xs\fR n' \fI.c\fR files, which normally denote dat tha distribution
must be compiled, n' you cannot install it \*(L"out of tha box.\*(R"
(See \*(L"\s-1PORTABILITY\*(R"\s0.)
.Sp
D. \s-1INSTALL\s0
.Sp
If yo ass is rockin cpan-mac, just drop tha folda on the
\&\fBinstallme\fR droplet, n' use tha module.
.Sp
\&\fBOr\fR, if yo ass aint rockin cpan-mac, do some manual labor.
.Sp
Make shizzle tha newlines fo' tha modulez is up in Mac format, not Unix format.
If they is not then you might have decompressed dem incorrectly.  Check
your decompression n' unpackin utilitizzles settings ta make shizzle they are
translatin text filez properly.
.Sp
As a last resort, you can use tha perl one-liner:
.Sp
.Vb 1
\&    perl \-i.bak \-pe \*(Aqs/(?:\e015)?\e012/\e015/g\*(Aq <filenames>
.Ve
.Sp
on tha source files.
.Sp
Then move tha filez (probably just tha \fI.pm\fR files, though there
may be some additionizzle ones, too; check tha module documentation)
to they final destination: This will
most likely be up in \f(CW\*(C`$ENV{MACPERL}site_lib:\*(C'\fR (i.e.,
\&\f(CW\*(C`HD:MacPerl folder:site_lib:\*(C'\fR).  Yo ass can add freshly smoked up paths to
the default \f(CW@INC\fR up in tha Preferences menu item up in the
MacPerl application (\f(CW\*(C`$ENV{MACPERL}site_lib:\*(C'\fR be added
automagically).  Smoke whatever directory structures is required
(i.e., fo' \f(CW\*(C`Some::Module\*(C'\fR, create
\&\f(CW\*(C`$ENV{MACPERL}site_lib:Some:\*(C'\fR n' put
\&\f(CW\*(C`Module.pm\*(C'\fR up in dat directory).
.Sp
Then run tha followin script (or suttin' like it):
.Sp
.Vb 4
\&     #!perl \-w
\&     use AutoSplit;
\&     mah $dir = "${MACPERL}site_perl";
\&     autosplit("$dir:Some:Module.pm", "$dir:auto", 0, 1, 1);
.Ve
.IP "\(bu" 4
\&\fBIf you on tha \s-1DJGPP\s0 port of \s-1DOS,\s0\fR
.Sp
.Vb 1
\&   A. DECOMPRESS
.Ve
.Sp
djtarx ( ftp://ftp.delorie.com/pub/djgpp/current/v2/ )
will both uncompress n' unpack.
.Sp
.Vb 1
\&   B. UNPACK
.Ve
.Sp
See above.
.Sp
.Vb 1
\&   C. BUILD
.Ve
.Sp
Go tha fuck into tha newly-created directory n' type:
.Sp
.Vb 2
\&      perl Makefile.PL
\&      make test
.Ve
.Sp
Yo ass will need tha packages mentioned up in \fI\s-1README\s0.dos\fR
in tha Perl distribution.
.Sp
.Vb 1
\&   D. INSTALL
.Ve
.Sp
While still up in dat directory, type:
.Sp
.Vb 1
\&     make install
.Ve
.Sp
Yo ass will need tha packages mentioned up in \fI\s-1README\s0.dos\fR up in tha Perl distribution.
.IP "\(bu" 4
\&\fBIf you on \s-1OS/2,\s0\fR
.Sp
Git tha \s-1EMX\s0 pimpment suite n' gzip/tar, from either Hobbes (
http://hobbes.nmsu.edu ) or Leo ( http://www.leo.org ), n' then follow
the instructions fo' Unix.
.IP "\(bu" 4
\&\fBIf you on \s-1VMS,\s0\fR
.Sp
When downloadin from \s-1CPAN,\s0 save yo' file wit a \f(CW\*(C`.tgz\*(C'\fR
extension instead of \f(CW\*(C`.tar.gz\*(C'\fR.  All other periodz up in the
filename should be replaced wit underscores.  For example,
\&\f(CW\*(C`Your\-Module\-1.33.tar.gz\*(C'\fR should be downloaded as
\&\f(CW\*(C`Your\-Module\-1_33.tgz\*(C'\fR.
.Sp
A. \s-1DECOMPRESS\s0
.Sp
Type
.Sp
.Vb 1
\&    gzip \-d Your\-Module.tgz
.Ve
.Sp
or, fo' zipped modules, type
.Sp
.Vb 1
\&    unzip Your\-Module.zip
.Ve
.Sp
Executablez fo' gzip, zip, n' VMStar:
.Sp
.Vb 1
\&    http://www.hp.com/go/openvms/freeware/
.Ve
.Sp
and they source code:
.Sp
.Vb 1
\&    http://www.fsf.org/order/ftp.html
.Ve
.Sp
Note dat \s-1GNU\s0z gzip/gunzip aint tha same as Info-ZIPz zip/unzip
package.  Da forma be a simple compression tool; tha latta permits
creation of multi-file archives.
.Sp
B. \s-1UNPACK\s0
.Sp
If you rockin VMStar:
.Sp
.Vb 1
\&     VMStar xf Your\-Module.tar
.Ve
.Sp
Or, if you fond of \s-1VMS\s0 command syntax:
.Sp
.Vb 1
\&     tar/extract/verbose Your_Module.tar
.Ve
.Sp
C. \s-1BUILD\s0
.Sp
Make shizzle you have \s-1MMS \s0(from Digital) or tha freeware \s-1MMK \s0( available
from MadGoat at http://www.madgoat.com ).  Then type dis ta create
the \s-1DESCRIP.MMS\s0 fo' tha module:
.Sp
.Vb 1
\&    perl Makefile.PL
.Ve
.Sp
Now you locked n loaded ta build:
.Sp
.Vb 1
\&    mms test
.Ve
.Sp
Substitute \f(CW\*(C`mmk\*(C'\fR fo' \f(CW\*(C`mms\*(C'\fR above if you rockin \s-1MMK.\s0
.Sp
D. \s-1INSTALL\s0
.Sp
Type
.Sp
.Vb 1
\&    mms install
.Ve
.Sp
Substitute \f(CW\*(C`mmk\*(C'\fR fo' \f(CW\*(C`mms\*(C'\fR above if you rockin \s-1MMK.\s0
.IP "\(bu" 4
\&\fBIf you on \s-1MVS\s0\fR,
.Sp
Introduce tha \fI.tar.gz\fR file tha fuck into a \s-1HFS\s0 as binary; don't translate from
\&\s-1ASCII\s0 ta \s-1EBCDIC.\s0
.Sp
A. \s-1DECOMPRESS\s0
.Sp
Decompress tha file wit \f(CW\*(C`gzip \-d yourmodule.tar.gz\*(C'\fR
.Sp
Yo ass can git gzip from
http://www.s390.ibm.com/products/oe/bpxqp1.html
.Sp
B. \s-1UNPACK\s0
.Sp
Unpack tha result with
.Sp
.Vb 1
\&     pax \-o to=IBM\-1047,from=ISO8859\-1 \-r < yourmodule.tar
.Ve
.Sp
Da \s-1BUILD\s0 n' \s-1INSTALL\s0 steps is identical ta dem fo' Unix.  Some
modulez generate Makefilez dat work betta wit \s-1GNU\s0 make, which is
available from http://www.mks.com/s390/gnu/
.SH "PORTABILITY"
.IX Header "PORTABILITY"
Note dat not all modulez will work wit on all platforms.
See perlport fo' mo' shiznit on portabilitizzle issues.
Read tha documentation ta peep if tha module will work on your
system.  There is basically three categories
of modulez dat aint gonna work \*(L"out of tha box\*(R" wit all
platforms (with some possibilitizzle of overlap):
.IP "\(bu" 4
\&\fBThose dat should yo, but don't.\fR  These need ta be fixed; consider
contactin tha lyricist n' possibly freestylin a patch.
.IP "\(bu" 4
\&\fBThose dat need ta be compiled, where tha target platform
doesn't have compilaz readily available.\fR  (These modulez contain
\&\fI.xs\fR or \fI.c\fR files, usually.)  Yo ass might be able ta find
existin binaries on tha \s-1CPAN\s0 or elsewhere, or you might
wanna try gettin compilaz n' buildin it yo ass, n' then
release tha binary fo' other skanky souls ta use.
.IP "\(bu" 4
\&\fBThose dat is targeted at a specific platform.\fR
(Such as tha Win32:: modules.)  If tha module is targeted
specifically at a platform other than yours, you out
of luck, most likely.
.PP
Peep tha \s-1CPAN\s0 Testas if a module should work wit yo' platform
but it don't behave as you'd expect, or yo ass aint shizzle whether or
not a module will work under yo' platform.  If tha module you want
aint listed there, you can test it yo ass n' let \s-1CPAN\s0 Testas know,
you can join \s-1CPAN\s0 Testers, or you can request it be tested.
.PP
.Vb 1
\&    http://testers.cpan.org/
.Ve
.SH "HEY"
.IX Header "HEY"
If you have any suggested chizzlez fo' dis page, let me know.  Please
don't bust me mail askin fo' help on how tha fuck ta install yo' modules.
There is too nuff modules, n' too few Orwants, fo' me ta be able to
answer or even acknowledge all yo' thangs.  Contact tha module
lyricist instead, or post ta comp.lang.perl.modules, or ask one of mah thugs
familiar wit Perl on yo' operatin system.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jizzle Orwant
.PP
orwant@medita.mit.edu
.PP
with invaluable help from Chris Nandor, n' valuable help from Brandon
Allbery, Charlez Bailey, Graham Barr, Dominic Dunlop, Jarkko
Hietaniemi, Lil' Bow Wow Holzman, Tomothy Horsley, Nick Ing-Simmons, Tuomas
J. Lukka, Laszlo Molnar, Alan Olsen, Peta Prymmer, Gurusamy Sarathy,
Christoph Spalinger, Don Juan Sugalski, Larry Virden, n' Ilya Zakharevich.
.PP
First version July 22, 1998; last revised November 21, 2001.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 1998, 2002, 2003 Jizzle Orwant.  All Rights Reserved.
.PP
This document may be distributed under tha same terms as Perl itself.
