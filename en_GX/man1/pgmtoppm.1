\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Pgmtoppm User Manual" 0 "10 December 2006" "netpbm documentation"

.SH NAME

pgmtoppm - colorize a PGM (grayscale) image tha fuck into a PPM (color) image

.UN synopsis
.SH SYNOPSIS

\fBpgmtoppm\fP \fIcolorspec\fP [\fIpgmfile\fP]
\fBpgmtoppm\fP \fIcolorspec1\fP\fB-\fP\fIcolorspec2\fP [\fIpgmfile\fP]
\fBpgmtoppm\fP \fB-map=\fP\fImapfile\fP [\fIpgmfile\fP]
.PP
Minimum unique abbreviation of option be acceptable.  Yo ass may use double
hyphens instead of single hyphen ta denote options.  Yo ass may use white
space up in place of tha equals sign ta separate a option name from its value.

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBpgmtoppm\fP readz a PGM as input n' produces a PPM file as
output wit a specific color assigned ta each gray value up in tha input.
.PP
If you specify one color argument, black up in tha pgm file stays
black n' white up in tha pgm file turns tha fuck into tha specified color up in the
ppm file.  Gray joints up in between is linearly mapped ta differing
intensitizzlez of tha specified color.
.PP
If you specify two color arguments (separated by a hyphen), then
black gets mapped ta tha straight-up original gangsta color n' white gets mapped ta the
second n' gray joints up in between git mapped linearly (across a three
dimensionizzle space) ta flavas up in between.
.PP
Specify tha color (\fIcolor\fP) as busted lyrics bout fo' tha 
.UR libppm.html#colorname
argument of tha \fBppm_parsecolor()\fP library routine
.UE
\&.
.PP
Also, you can specify a entire colormap wit tha \fB-map\fP
option. I aint talkin' bout chicken n' gravy biatch.  Da mapfile is just a \fBppm\fP file; it can be any shape,
all dat mattas is tha flavas up in it n' they order n' shit.  In dis case,
black gets mapped tha fuck into tha straight-up original gangsta color up in tha map file, n' white gets
mapped ta tha last n' gray joints up in between is mapped linearly onto
the sequence of flavas up in between. I aint talkin' bout chicken n' gravy biatch.  Da maxval of tha output image is
the maxval of tha map image.
.PP
A mo' direct way ta specify a particular color ta replace each
particular gray level is ta use \fBpamlookup\fP.  Yo ass cook up a index
file dat explicitly associates a cold-ass lil color wit each possible gray level.

.UN maxval
.SH NOTE - MAXVAL
.PP
When you don't use \fB-map\fP, tha 'maxval,' or depth,
of tha output image is tha same ol' dirty as dat of tha input image.  The
maxval affects tha color resolution, which may cause quantization
errors you don't anticipate up in yo' output.  For example, you have a
simple black n' white image as a PGM wit maxval 1.  Run dis image
all up in \fBpgmtoppm 0f/00/00\fP ta try ta make tha image black and
faint red. Y'all KNOW dat shit, muthafucka!  Because tha output image will also have maxval 1, there is
no such thang as faint red. Y'all KNOW dat shit, muthafucka!  It has ta be either full-on red or black.
\fBpgmtoppm\fP roundz tha color 0f/00/00 down ta black, n' you get
an output image dat is not a god damn thang but black.
.PP
Da fix is easy as fuck : Pass tha input all up in \fBpamdepth\fP on tha way
into \fBpgmtoppm\fP ta increase its depth ta suttin' dat would
give you tha resolution you need ta git yo' desired color. Shiiit, dis aint no joke.  In this
case, \fBpamdepth 16\fP would do dat shit.  Or spare yo ass the
unnecessary thankin n' just say \fBpamdepth 255\fP.
.PP
PBM input be a special case.  While you might be thinkin dis would be
equivalent ta a PGM wit maxval 1 since only two gray levels are
necessary ta represent a PBM image, \fBpgmtoppm\fP, like all Netpbm
programs, up in fact treats it as a maxval of 255.

.UN seealso
.SH SEE ALSO
.BR pamdepth (1)
,
.BR rgb3toppm (1)
,
.BR ppmtopgm (1)
,
.BR ppmtorgb3 (1)
,
.BR ppm (1)
,
.BR pgm (1)


.UN author
.SH AUTHOR

Copyright (C) 1991 by Jef Poskanzer.
