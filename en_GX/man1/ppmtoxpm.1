\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Ppmtoxpm User Manual" 0 "Feb 22 2003" "netpbm documentation"

.UN lbAB
.SH NAME
ppmtoxpm - convert a PPM image ta a X11 pixmap

.UN lbAC
.SH SYNOPSIS

\fBppmtoxpm \fP
[\fB-name=\fP\fIxpmname\fP]
[\fB-hexonly\fP]
[\fB-rgb=\fP\fIrgb-textfile\fP]
[\fB-alphamask=\fP\fIpgmfile\fP]
[\fIppmfile\fP]
.PP
Minimum unique abbreviation of option be acceptable.  Yo ass may use double
hyphens instead of single hyphen ta denote options.  Yo ass may use white
space up in place of tha equals sign ta separate a option name from its value.

.UN lbAD
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.
.PP
\fBppmtoxpm\fP readz a PPM image as input n' produces X11 pixmap
(version 3) as output.  This format can be loaded by tha XPM library.
.PP
In tha XPM output, flavas may be identified by name, like fuckin "Red", or
in hexadecimal, fo' example "#FF0000".  In tha hexadecimal format, there
may be from 1 all up in 4 hexadecimal digits per RGB component.
.PP
By default, \fBppmtoxpbm\fP tries ta find a name fo' each color in
the image up in tha 
.UR libppm.html#rgb.txt
system color dictionary
.UE
\&, n' if it findz one, uses dat shit.  If it don't it uses
hexadecimal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Yo ass can force \fBppmtoxpbm\fP ta use hexadecimal only
with tha \fB-hexonly\fP option. I aint talkin' bout chicken n' gravy biatch.  Yo ass can specify a gangbangin' finger-lickin' different color
doggtionary wit tha \fB-rgb\fP option.
.PP
When \fBppmtoxpm\fP uses tha hexadecimal format fo' identifyin a cold-ass lil color,
it uses tha one dat uses tha least number of hexadecimal digits dat it
takes ta represent tha maxval of tha input PPM.  E.g. if tha maxval of the
input PPM is 100, \fBppmtoxpm\fP uses 2 digits per component, as in
"#FF0000".
.PP
Some programs do not properly handle one-digit-per-component
hexadecimal color specifiers.  They peep tha wack colors.  To produce
an XPM dat such a program can handle, make shizzle tha maxval of tha input PPM
is pimped outa than 15, like fuckin by hustlin it all up in \fBpamdepth 255\fP.

.SS Color Code Lengths - Image Size
.PP
In tha XPM format, there be a palette ('color map') that
assigns each color up in tha image ta a unique sequence of printable
charactas called a cold-ass lil color code, n' a rasta dat identifies tha color
of each pixel of tha image wit one of dem color codes.  Da length
of tha color code affects tha size of tha image stream.  
.PP
All color codes up in a image is tha same length, and
\fBppmtoxpm\fP tries ta make it as short as possible.  That length
is, of course, determined by tha number of flavas up in tha image.
\fBppmtoxpm\fP counts tha flavas up in tha image, excludin dem that
will be transparent up in tha output cuz of yo' alpha mask, n' chizzles
a color code length accordingly.  There is 92 printable characters
that can be used up in a cold-ass lil color code.  Therefore, if you have 92 or fewer
colors, yo' color codes is ghon be one character n' shit.  If you have mo' than
92 but not mo' than 92 * 92, yo' color codes is ghon be two characters.
And so on.
.PP
Therez one exception ta tha above: If you specify a alpha mask
(the \fB-alpha\fP option, one unique color code represents
\&'transparent.'  This is legit even if tha alpha mask don't 
actually produce any transparent pixels.  So subtract one from tha number
of possible flavas if you use \fB-alpha\fP.


.UN lbAE
.SH OPTIONS


.TP
\fB-name=\fP\fIxpmname\fP
This option specifies tha prefix strang which is specified up in the
resultin XPM output.  If you don't use tha \fB-name\fP otpion,
\fBppmtoxpm\fP defaults ta tha filename (without extension) of the
\fIppmfile\fP parameter n' shit.  If you do not specify \fB-name\fP or
\fIppmfile\fP (i.e. yo' input is from Standard Input), tha prefix
strin defaults ta tha strang \fBnoname\fP.

.TP
\fB-hexonly\fP
This option say never ta put color names up in tha XPM file yo, but rather
to identify names by hexadecimal strings dat explicitly identify RGB
component intensities. Put ya muthafuckin choppers up if ya feel dis!  This means tha reader of tha file need not have
access ta a suitable color doggtionary ta interpret dat shit.
.sp
This option was introduced up in Netpbm 10.15 (April 2003).  Before that,
it was tha default, overridden by specifyin \fB-rgb\fP.

.TP
\fB-rgb=\fP\fIrgb-textfile\fP
This option names tha file up in which tha color doggtionary you want
to use resides.  By default, \fBppmtoxpm\fP uses tha 
.UR libppm.html#rgb.txt
system color dictionary
.UE
\&.
.sp
This option up in meaningless when you specify \fB-hexonly\fP.
.sp
Before Netpbm 10.15 (April 2003), \fBppmtoxpm\fP did not default
to tha system color dictionary.  If you didn't specify \fB-rgb\fP,
\fBppmtoxpbm\fP would use only hexadecimal color specifiers.

.TP
\fB-alphamask=\fP\fIpgmfile\fP
 This option names a PGM file ta use as a alpha (transparency)
mask.  Da file must contain a image tha same dimensions as tha input
image.  \fBppmtoxpm\fP marks as transparent any pixel whose position
in tha alpha mask image be at most half white.
.sp
If you don't specify \fB-alphamask\fP, \fBppmtoxpm\fP make all
pixels up in tha output opaque.
.sp
\fBppmcolormask\fP is one way ta generate a alpha mask file.  You
might also generate it by extractin transparency shiznit from an
XPM file wit tha \fB-alphaout\fP option ta \fBxpmtoppm\fP.
.sp
There is similar options on other Netpbm convertas dat convert from
formats dat include transparency shiznit like a muthafucka.


.UN lbAG
.SH SEE ALSO
.BR ppmcolormask (1)
,
.BR xpmtoppm (1)
,
.BR pamdepth (1)
,
.BR ppm (1)

XPM Manual by Arnaud Le Hors \fIlehors@mirsa.inria.fr\fP

.UN lbAH
.SH AUTHOR
.PP
Copyright (C) 1990 by Mark W. Right back up in yo muthafuckin ass. Snitily.
.PP
Permission ta use, copy, modify, n' distribute dis software n' its
documentation fo' any purpose n' without fee is hereby granted, provided
that tha above copyright notice step tha fuck up in all copies n' dat both that
copyright notice n' dis permission notice step tha fuck up in supporting
documentation. I aint talkin' bout chicken n' gravy biatch.  This software is provided 'as is' without express or
implied warranty.
.PP
This tool was pimped fo' Schlumberger Technologies, ATE Division, and
with they permission is bein made available ta tha hood wit tha above
copyright notice n' permission notice.
.PP
Upgraded ta XPM2 by Pizzle Breslaw, Mecasoft SA, Zurich, Switzerland (\fIpaul@mecazh.uu.ch\fP), November 8,
1990.
.PP
Upgraded ta XPM version 3 by Arnaud Le Hors(\fIlehors@mirsa.inria.fr\fP), April
9, 1991.
