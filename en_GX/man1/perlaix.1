.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLAIX 1"
.TH PERLAIX 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlaix \- Perl version 5 on IBM AIX (UNIX) systems
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout various featurez of \s-1IBM\s0z \s-1UNIX\s0 operating
system \s-1AIX\s0 dat will affect how tha fuck Perl version 5 (hereafta just Perl)
is compiled and/or runs.
.SS "Compilin Perl 5 on \s-1AIX\s0"
.IX Subsection "Compilin Perl 5 on AIX"
For shiznit on compilaz on olda versionz of \s-1AIX,\s0 peep \*(L"Compiling
Perl 5 on olda \s-1AIX\s0 versions up ta 4.3.3\*(R".
.PP
When compilin Perl, you must use a \s-1ANSI C\s0 compila n' shit. \s-1AIX\s0 do not ship
an \s-1ANSI\s0 compliant C compila wit \s-1AIX\s0 by default yo, but binary buildz of
gcc fo' \s-1AIX\s0 is widely available fo' realz. A version of gcc be also included in
the \s-1AIX\s0 Toolbox which is shipped wit \s-1AIX.\s0
.SS "Supported Compilers"
.IX Subsection "Supported Compilers"
Currently all versionz of \s-1IBM\s0z \*(L"xlc\*(R", \*(L"xlc_r\*(R", \*(L"cc\*(R", \*(L"cc_r\*(R" or
\&\*(L"vac\*(R" \s-1ANSI/C\s0 compila will work fo' buildin Perl if dat compiler
works on yo' system.
.PP
If you plan ta link Perl ta any module dat requires thread-support,
like DBD::Oracle, it is betta ta use tha _r version of tha compiler.
This aint gonna build a threaded Perl yo, but a thread-enabled Perl. Right back up in yo muthafuckin ass. See
also \*(L"Threaded Perl\*(R" lata on.
.PP
Az of freestylin (2010\-09) only tha \fI\s-1IBM XL C\s0 fo' \s-1AIX\s0\fR or \fI\s-1IBM XL C/\*(C+\s0
for \s-1AIX\s0\fR compila is supported by \s-1IBM\s0 on \s-1AIX 5L/6.1/7.1.\s0
.PP
Da followin compila versions is currently supported by \s-1IBM:\s0
.PP
.Vb 1
\&    IBM XL C n' IBM XL C/C++ V8, V9, V10, V11
.Ve
.PP
Da \s-1XL C\s0 fo' \s-1AIX\s0 is integrated up in tha \s-1XL C/\*(C+\s0 fo' \s-1AIX\s0 compila and
therefore also supported.
.PP
If you chizzle \s-1XL C/\*(C+ V9\s0 you need \s-1APAR IZ35785\s0 installed
otherwise tha integrated SDBM_File do not compile erectly due
to a optimization bug. Yo ass can circumvent dis problem by
addin \-qipa ta tha optimization flags (\-Doptimize='\-O \-qipa').
Da \s-1PTF\s0 fo' \s-1APAR IZ35785\s0 which solves dis problem be available
from \s-1IBM \s0(April 2009 \s-1PTF\s0 fo' \s-1XL C/\*(C+\s0 Enterprise Edizzle fo' \s-1AIX, V9.0\s0).
.PP
If you chizzle \s-1XL C/\*(C+ V11\s0 you need tha April 2010 \s-1PTF \s0(or newer)
installed otherwise yo big-ass booty is ghon not git a hustlin Perl version.
.PP
Perl can be compiled wit either \s-1IBM\s0z \s-1ANSI C\s0 compila or wit gcc.
Da forma is recommended, as not only it can compile Perl wit no
hang-up yo, but also can take advantage of features listed later
that require tha use of \s-1IBM\s0 compiler-specific command-line flags.
.PP
If you decizzle ta use gcc, make shizzle yo' installation is recent and
complete, n' be shizzle ta read tha Perl \s-1INSTALL\s0 file fo' mo' gcc-specific
details. Please report any hoops you had ta jump all up in ta the
development crew.
.SS "Incompatibilitizzle wit \s-1AIX\s0 Toolbox lib gdbm"
.IX Subsection "Incompatibilitizzle wit AIX Toolbox lib gdbm"
If tha \s-1AIX\s0 Toolbox version of lib gdbm < 1.8.3\-5 is installed on your
system then Perl aint gonna work. This library gotz nuff tha header files
/opt/freeware/include/gdbm/dbm.h|ndbm.h which conflict wit tha \s-1AIX\s0
system versions. Da lib gdbm is ghon be automatically removed from the
wanted libraries if tha presence of one of these two header filez is
detected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If you wanna build Perl wit \s-1GDBM\s0 support then please install
at least gdbm\-devel\-1.8.3\-5 (or higher).
.SS "Perl 5 was successfully compiled n' tested on:"
.IX Subsection "Perl 5 was successfully compiled n' tested on:"
.Vb 10
\&    Perl   | AIX Level           | Compila Level          | w th | w/o th
\&    \-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-\-\-
\&    5.12.2 |5.1 TL9 32 bit       | XL C/C++ V7             | OK   | OK
\&    5.12.2 |5.1 TL9 64 bit       | XL C/C++ V7             | OK   | OK
\&    5.12.2 |5.2 TL10 SP8 32 bit  | XL C/C++ V8             | OK   | OK
\&    5.12.2 |5.2 TL10 SP8 32 bit  | gcc 3.2.2               | OK   | OK
\&    5.12.2 |5.2 TL10 SP8 64 bit  | XL C/C++ V8             | OK   | OK
\&    5.12.2 |5.3 TL8 SP8 32 bit   | XL C/C++ V9 + IZ35785   | OK   | OK
\&    5.12.2 |5.3 TL8 SP8 32 bit   | gcc 4.2.4               | OK   | OK
\&    5.12.2 |5.3 TL8 SP8 64 bit   | XL C/C++ V9 + IZ35785   | OK   | OK
\&    5.12.2 |5.3 TL10 SP3 32 bit  | XL C/C++ V11 + Apr 2010 | OK   | OK
\&    5.12.2 |5.3 TL10 SP3 64 bit  | XL C/C++ V11 + Apr 2010 | OK   | OK
\&    5.12.2 |6.1 TL1 SP7 32 bit   | XL C/C++ V10            | OK   | OK
\&    5.12.2 |6.1 TL1 SP7 64 bit   | XL C/C++ V10            | OK   | OK
\&    5.13   |7.1 TL0 SP1 32 bit   | XL C/C++ V11 + Jul 2010 | OK   | OK
\&    5.13   |7.1 TL0 SP1 64 bit   | XL C/C++ V11 + Jul 2010 | OK   | OK
\&
\&    w th   = wit thread support
\&    w/o th = without thread support
\&    OK     = tested
.Ve
.PP
Successfully tested means dat all \*(L"make test\*(R" runs finish wit a
result of 100% \s-1OK.\s0 All tests was conducted wit \-Duseshrplib set.
.PP
All tests was conducted on tha crazy oldschool supported \s-1AIX\s0 technologizzle level
with tha sickest fuckin support package applied. Y'all KNOW dat shit, muthafucka! If tha tested \s-1AIX\s0 version is
out of support (\s-1AIX 4.3.3, 5.1, 5.2\s0) then tha last available support
level was used.
.SS "Buildin Dynamic Extensions on \s-1AIX\s0"
.IX Subsection "Buildin Dynamic Extensions on AIX"
Startin from Perl 5.7.2 (and consequently 5.8.x / 5.10.x / 5.12.x)
and \s-1AIX 4.3\s0 or newer Perl uses tha \s-1AIX\s0 natizzle dynamic loadin intercourse
in tha so called runtime linkin mode instead of tha emulated intercourse
that was used up in Perl releases 5.6.1 n' earlier or, fo' \s-1AIX\s0 releases
4.2 n' earlier n' shit. This chizzle do break backward compatibilitizzle with
compiled modulez from earlier Perl releases. Da chizzle was made ta make
Perl mo' compliant wit other applications like Apache/mod_perl which are
usin tha \s-1AIX\s0 natizzle intercourse. This chizzle also enablez tha use of
\&\*(C+ code wit static constructors n' destructors up in Perl extensions,
which was not possible rockin tha emulated intercourse.
.PP
It be highly recommended ta use tha freshly smoked up intercourse.
.SS "Usin Big-Ass Filez wit Perl"
.IX Subsection "Usin Big-Ass Filez wit Perl"
Should yield no problems.
.SS "Threaded Perl"
.IX Subsection "Threaded Perl"
Should yield no problems wit \s-1AIX 5.1 / 5.2 / 5.3 / 6.1 / 7.1.\s0
.PP
\&\s-1IBM\s0 uses tha \s-1AIX\s0 system Perl (V5.6.0 on \s-1AIX 5.1\s0 n' V5.8.2 on
\&\s-1AIX 5.2 / 5.3\s0 n' 6.1; V5.8.8 on \s-1AIX 5.3 TL11\s0 n' \s-1AIX 6.1 TL4\s0; V5.10.1
on \s-1AIX 7.1\s0) fo' some \s-1AIX\s0 system scripts, n' you can put dat on yo' toast. If you switch tha links in
/usr/bin from tha \s-1AIX\s0 system Perl (/usr/opt/perl5) ta tha newly build
Perl then you git tha same features as wit tha \s-1IBM AIX\s0 system Perl if
the threaded options is used.
.PP
Da threaded Perl build works also on \s-1AIX 5.1\s0 but tha \s-1IBM\s0 Perl
build (Perl v5.6.0) aint threaded on \s-1AIX 5.1.\s0
.PP
Perl 5.12 a newer aint compatible wit tha \s-1IBM\s0 fileset perl.libext.
.SS "64\-bit Perl"
.IX Subsection "64-bit Perl"
If yo' \s-1AIX\s0 system is installed wit 64\-bit support, you can expect 64\-bit
configurations ta work. If you wanna use 64\-bit Perl on \s-1AIX 6.1\s0
you need a \s-1APAR\s0 fo' a libc.a bug which affects (n)dbm_XXX functions.
Da \s-1APAR\s0 number fo' dis problem is \s-1IZ39077.\s0
.PP
If you need mo' memory (larger data segment) fo' yo' Perl programs you
can set:
.PP
.Vb 3
\&    /etc/security/limits
\&    default:                    (or yo' user)
\&        data = \-1               (default is 262144 * 512 byte)
.Ve
.PP
With tha default settin tha size is limited ta 128MB.
Da \-1 removes dis limit. If tha \*(L"make test\*(R" fails please chizzle
your /etc/security/limits as stated above.
.SS "Recommended Options \s-1AIX 5.1/5.2/5.3/6.1\s0 n' 7.1 (threaded/32\-bit)"
.IX Subsection "Recommended Options AIX 5.1/5.2/5.3/6.1 n' 7.1 (threaded/32-bit)"
With tha followin options you git a threaded Perl version which
passes all make tests up in threaded 32\-bit mode, which is tha default
configuration fo' tha Perl buildz dat \s-1AIX\s0 ships with.
.PP
.Vb 7
\&    rm config.sh
\&    ./Configure \e
\&    \-d \e
\&    \-Dcc=cc_r \e
\&    \-Duseshrplib \e
\&    \-Dusethreadz \e
\&    \-Dprefix=/usr/opt/perl5_32
.Ve
.PP
Da \-Dprefix option will install Perl up in a gangbangin' finger-lickin' directory parallel ta tha 
\&\s-1IBM AIX\s0 system Perl installation.
.SS "Recommended Options \s-1AIX 5.1/5.2/5.3/6.1\s0 n' 7.1 (32\-bit)"
.IX Subsection "Recommended Options AIX 5.1/5.2/5.3/6.1 n' 7.1 (32-bit)"
With tha followin options you git a Perl version which passes 
all make tests up in 32\-bit mode.
.PP
.Vb 6
\&    rm config.sh
\&    ./Configure \e
\&    \-d \e
\&    \-Dcc=cc_r \e
\&    \-Duseshrplib \e
\&    \-Dprefix=/usr/opt/perl5_32
.Ve
.PP
Da \-Dprefix option will install Perl up in a gangbangin' finger-lickin' directory parallel ta the
\&\s-1IBM AIX\s0 system Perl installation.
.SS "Recommended Options \s-1AIX 5.1/5.2/5.3/6.1\s0 n' 7.1 (threaded/64\-bit)"
.IX Subsection "Recommended Options AIX 5.1/5.2/5.3/6.1 n' 7.1 (threaded/64-bit)"
With tha followin options you git a threaded Perl version which
passes all make tests up in 64\-bit mode.
.PP
.Vb 1
\&    export OBJECT_MODE=64 / setenv OBJECT_MODE 64 (dependin on yo' shell)
\&
\&    rm config.sh
\&    ./Configure \e
\&    \-d \e
\&    \-Dcc=cc_r \e
\&    \-Duseshrplib \e
\&    \-Dusethreadz \e
\&    \-Duse64bitall \e
\&    \-Dprefix=/usr/opt/perl5_64
.Ve
.SS "Recommended Options \s-1AIX 5.1/5.2/5.3/6.1\s0 n' 7.1 (64\-bit)"
.IX Subsection "Recommended Options AIX 5.1/5.2/5.3/6.1 n' 7.1 (64-bit)"
With tha followin options you git a Perl version which passes all
make tests up in 64\-bit mode.
.PP
.Vb 1
\&    export OBJECT_MODE=64 / setenv OBJECT_MODE 64 (dependin on yo' shell)
\&
\&    rm config.sh
\&    ./Configure \e
\&    \-d \e
\&    \-Dcc=cc_r \e
\&    \-Duseshrplib \e
\&    \-Duse64bitall \e
\&    \-Dprefix=/usr/opt/perl5_64
.Ve
.PP
Da \-Dprefix option will install Perl up in a gangbangin' finger-lickin' directory parallel ta the
\&\s-1IBM AIX\s0 system Perl installation.
.PP
If you chizzle gcc ta compile 64\-bit Perl then you need ta add the
followin option:
.PP
.Vb 1
\&    \-Dcc=\*(Aqgcc \-maix64\*(Aq
.Ve
.SS "Compilin Perl 5 on \s-1AIX 7.1.0\s0"
.IX Subsection "Compilin Perl 5 on AIX 7.1.0"
A regression up in \s-1AIX 7\s0 causes a gangbangin' failure up in make test up in Time::Piece during
daylight savings time.  \s-1APAR IV16514\s0 serves up tha fix fo' all dis bullshit.  A quick
test ta peep if itz required, assumin it is currently daylight savings
in Eastside Time, would be ta run \f(CW\*(C` TZ=EST5 date +%Z \*(C'\fR.  This will come
back wit \f(CW\*(C`EST\*(C'\fR normally yo, but not a god damn thang if you have tha problem.
.SS "Compilin Perl 5 on olda \s-1AIX\s0 versions up ta 4.3.3"
.IX Subsection "Compilin Perl 5 on olda AIX versions up ta 4.3.3"
Cuz of tha fact dat \s-1AIX 4.3.3\s0 reached end-of-service up in December 31,
2003 dis shiznit is provided as is. Da Perl versions prior to
Perl 5.8.9 could be compiled on \s-1AIX\s0 up ta 4.3.3 wit tha following
settings (your mileage may vary):
.PP
When compilin Perl, you must use a \s-1ANSI C\s0 compila n' shit. \s-1AIX\s0 do not ship
an \s-1ANSI\s0 compliant C\-compila wit \s-1AIX\s0 by default yo, but binary buildz of
gcc fo' \s-1AIX\s0 is widely available.
.PP
At tha moment of writing, \s-1AIX\s0 supports two different natizzle C compilers,
for which you gotta pay: \fBxlC\fR n' \fBvac\fR. If you decizzle ta use either
of these two (which is like a shitload easier than rockin gcc), be shizzle to
upgrade ta tha sickest fuckin available patch level. Currently:
.PP
.Vb 2
\&    xlC.C     3.1.4.10 or 3.6.6.0 or 4.0.2.2 or 5.0.2.9 or 6.0.0.3
\&    vac.C     4.4.0.3  or 5.0.2.6 or 6.0.0.1
.Ve
.PP
note dat xlC has tha \s-1OS\s0 version up in tha name az of version 4.0.2.0, so
you will find xlC.C fo' \s-1AIX\-5.0\s0 as package
.PP
.Vb 1
\&    xlC.aix50.rte   5.0.2.0 or 6.0.0.3
.Ve
.PP
subversions is not tha same \*(L"latest\*(R" on all \s-1OS\s0 versions. For example,
the sickest fuckin xlC\-5 on aix41 is 5.0.2.9, while on aix43, it is 5.0.2.7.
.PP
Perl can be compiled wit either \s-1IBM\s0z \s-1ANSI C\s0 compila or wit gcc.
Da forma is recommended, as not only can it compile Perl wit no
hang-up yo, but also can take advantage of features listed lata that
require tha use of \s-1IBM\s0 compiler-specific command-line flags.
.PP
Da \s-1IBM\s0z compila patch levels 5.0.0.0 n' 5.0.1.0 have compiler
optimization bugs dat affect compilin perl.c n' regcomp.c,
respectively.  If Perlz configuration detects dem compila patch
levels, optimization is turned off fo' tha holla'd source code files.
Upgradin ta at least 5.0.2.0 is recommended.
.PP
If you decizzle ta use gcc, make shizzle yo' installation is recent and
complete, n' be shizzle ta read tha Perl \s-1INSTALL\s0 file fo' mo' gcc-specific
details. Please report any hoops you had ta jump all up in ta tha pimpment
team.
.SS "\s-1OS\s0 level"
.IX Subsection "OS level"
Before installin tha patches ta tha \s-1IBM\s0 C\-compila you need ta know the
level of patchin fo' tha Operatin System. \s-1IBM\s0z command 'oslevel' will
show tha base yo, but aint always complete (in dis example oslevel shows
4.3.NULL, whereas tha system might run most of 4.3.THREE):
.PP
.Vb 6
\&    # oslevel
\&    4.3.0.0
\&    # lslpp \-l | grep \*(Aqbos.rte \*(Aq
\&    bos.rte           4.3.3.75  COMMITTED  Base Operatin System Runtime
\&    bos.rte            4.3.2.0  COMMITTED  Base Operatin System Runtime
\&    #
.Ve
.PP
Da same might happen ta \s-1AIX 5.1\s0 or other \s-1OS\s0 levels fo' realz. As a side note, Perl
cannot be built without bos.adt.syscalls n' bos.adt.libm installed
.PP
.Vb 4
\&    # lslpp \-l | egrep "syscalls|libm"
\&    bos.adt.libm      5.1.0.25  COMMITTED  Base Application Development
\&    bos.adt.syscalls  5.1.0.36  COMMITTED  System Calls Application
\&    #
.Ve
.SS "Buildin Dynamic Extensions on \s-1AIX\s0 < 5L"
.IX Subsection "Buildin Dynamic Extensions on AIX < 5L"
\&\s-1AIX\s0 supports dynamically loadable objects as well as shared libraries.
Shared libraries by convention end wit tha suffix .a, which be a funky-ass bit
misleading, as a archive can contain static as well as dynamic members.
For Perl dynamically loaded objects we use tha .so suffix also used on
many other platforms.
.PP
Note dat startin from Perl 5.7.2 (and consequently 5.8.0) n' \s-1AIX 4.3\s0
or newer Perl uses tha \s-1AIX\s0 natizzle dynamic loadin intercourse up in tha so
called runtime linkin mode instead of tha emulated intercourse dat was
used up in Perl releases 5.6.1 n' earlier or, fo' \s-1AIX\s0 releases 4.2 and
earlier n' shit.  This chizzle do break backward compatibilitizzle wit compiled
modulez from earlier Perl releases.  Da chizzle was made ta make Perl
more compliant wit other applications like Apache/mod_perl which are
usin tha \s-1AIX\s0 natizzle intercourse. This chizzle also enablez tha use of \*(C+
code wit static constructors n' destructors up in Perl extensions, which
was not possible rockin tha emulated intercourse.
.SS "Da \s-1IBM ANSI C\s0 Compiler"
.IX Subsection "Da IBM ANSI C Compiler"
All defaults fo' Configure can be used.
.PP
If you've chosen ta use vac 4, be shizzle ta run 4.4.0.3. Older versions
will turn up nasty lata on. I aint talkin' bout chicken n' gravy biatch. For vac 5 be shizzle ta run at least 5.0.1.0,
but vac 5.0.2.6 or up is highly recommended. Y'all KNOW dat shit, muthafucka! Note dat since \s-1IBM\s0 has
removed vac 5.0.2.1 all up in 5.0.2.5 from tha software depot, these
versions should be considered obsolete.
.PP
Herez a funky-ass brief lead of how tha fuck ta upgrade tha compila ta tha sickest fuckin
level.  Of course dis is subject ta chizzles.  Yo ass can only upgrade
versions from ftp-available thugged-out shiznit if tha straight-up original gangsta three digit groups
are tha same (in where you can skip intermediate unlike tha patches
in tha pimper snapshotz of Perl), or ta one version up where the
\&\*(L"base\*(R" be available.  In other lyrics, tha \s-1AIX\s0 compila patches are
cumulative.
.PP
.Vb 2
\& vac.C.4.4.0.1 => vac.C.4.4.0.3  is OK     (vac.C.4.4.0.2 not needed)
\& xlC.C.3.1.3.3 => xlC.C.3.1.4.10 is NOT OK (xlC.C.3.1.4.0 aint available)
\&
\& # ftp ftp.software.ibm.com
\& Connected ta service.boulder.ibm.com.
\& : welcome message ...
\& Name (ftp.software.ibm.com:merijn): anonymous
\& 331 Guest login ok, bust yo' complete e\-mail address as password.
\& Password:
\& ... accepted login stuff
\& ftp> cd /aix/fixes/v4/
\& ftp> dir other other.ll
\& output ta local\-file: other.ll, biatch? y
\& 200 PORT command successful.
\& 150 Openin ASCII mode data connection fo' /bin/ls.
\& 226 Transfer complete.
\& ftp> dir xlc xlc.ll
\& output ta local\-file: xlc.ll, biatch? y
\& 200 PORT command successful.
\& 150 Openin ASCII mode data connection fo' /bin/ls.
\& 226 Transfer complete.
\& ftp> bye
\& ... peace out lyrics
\& # ls \-l *.ll
\& \-rw\-rw\-rw\-   1 merijn   system    1169432 Nov  2 17:29 other.ll
\& \-rw\-rw\-rw\-   1 merijn   system      29170 Nov  2 17:29 xlc.ll
.Ve
.PP
On \s-1AIX 4.2\s0 rockin xlC, we continue:
.PP
.Vb 10
\& # lslpp \-l | fgrep \*(AqxlC.C \*(Aq
\&   xlC.C                     3.1.4.9  COMMITTED  C fo' AIX Compiler
\&   xlC.C                     3.1.4.0  COMMITTED  C fo' AIX Compiler
\& # grep \*(AqxlC.C.3.1.4.*.bff\*(Aq xlc.ll
\& \-rw\-r\-\-r\-\-   1 45776101 1        6286336 Jul 22 1996  xlC.C.3.1.4.1.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6173696 Aug 24 1998  xlC.C.3.1.4.10.bff
\& \-rw\-r\-\-r\-\-   1 45776101 1        6319104 Aug 14 1996  xlC.C.3.1.4.2.bff
\& \-rw\-r\-\-r\-\-   1 45776101 1        6316032 Oct 21 1996  xlC.C.3.1.4.3.bff
\& \-rw\-r\-\-r\-\-   1 45776101 1        6315008 Dec 20 1996  xlC.C.3.1.4.4.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6178816 Mar 28 1997  xlC.C.3.1.4.5.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6188032 May 22 1997  xlC.C.3.1.4.6.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6191104 Sep  5 1997  xlC.C.3.1.4.7.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6185984 Jan 13 1998  xlC.C.3.1.4.8.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        6169600 May 27 1998  xlC.C.3.1.4.9.bff
\& # wget ftp://ftp.software.ibm.com/aix/fixes/v4/xlc/xlC.C.3.1.4.10.bff
\& #
.Ve
.PP
On \s-1AIX 4.3\s0 rockin vac, we continue:
.PP
.Vb 10
\& # lslpp \-l | grep \*(Aqvac.C \*(Aq
\&  vac.C                      5.0.2.2  COMMITTED  C fo' AIX Compiler
\&  vac.C                      5.0.2.0  COMMITTED  C fo' AIX Compiler
\& # grep \*(Aqvac.C.5.0.2.*.bff\*(Aq other.ll
\& \-rw\-rw\-r\-\-   1 45776101 1        13592576 Apr 16 2001  vac.C.5.0.2.0.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        14133248 Apr  9 2002  vac.C.5.0.2.3.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        14173184 May 20 2002  vac.C.5.0.2.4.bff
\& \-rw\-rw\-r\-\-   1 45776101 1        14192640 Nov 22 2002  vac.C.5.0.2.6.bff
\& # wget ftp://ftp.software.ibm.com/aix/fixes/v4/other/vac.C.5.0.2.6.bff
\& #
.Ve
.PP
Likewise on all other \s-1OS\s0 levels. Then execute tha followin command, and
fill up in its chizzles
.PP
.Vb 5
\& # smit install_update
\&  \-> Install n' Update from LATEST Available Software
\&  * INPUT thang / directory fo' software [ vac.C.5.0.2.6.bff    ]
\&  [ OK ]
\&  [ OK ]
.Ve
.PP
Big up tha lyrics ... n' you done.
.PP
If you like a mo' web-like approach, a phat start point can be
http://www14.software.ibm.com/webapp/download/downloadaz.jsp n' click
\&\*(L"C fo' \s-1AIX\*(R",\s0 n' follow tha instructions.
.SS "Da usenm option"
.IX Subsection "Da usenm option"
If linkin miniperl
.PP
.Vb 1
\& cc \-o miniperl ... miniperlmain.o opmini.o perl.o ... \-lm \-lc ...
.Ve
.PP
causes error like this
.PP
.Vb 8
\& ld: 0711\-317 ERROR: Undefined symbol: .aintl
\& ld: 0711\-317 ERROR: Undefined symbol: .copysignl
\& ld: 0711\-317 ERROR: Undefined symbol: .syscall
\& ld: 0711\-317 ERROR: Undefined symbol: .eaccess
\& ld: 0711\-317 ERROR: Undefined symbol: .setresuid
\& ld: 0711\-317 ERROR: Undefined symbol: .setresgid
\& ld: 0711\-317 ERROR: Undefined symbol: .setproctitle
\& ld: 0711\-345 Use tha \-bloadmap or \-bnoquiet option ta obtain mo' shiznit.
.Ve
.PP
you could retry with
.PP
.Vb 3
\& make realclean
\& rm config.sh
\& ./Configure \-Dusenm ...
.Ve
.PP
which make Configure ta use tha \f(CW\*(C`nm\*(C'\fR tool when scannin fo' library
symbols, which probably aint done up in \s-1AIX.\s0
.PP
Related ta this, you probably should not use tha \f(CW\*(C`\-r\*(C'\fR option of
Configure up in \s-1AIX,\s0 cuz dat affectz of how tha fuck tha \f(CW\*(C`nm\*(C'\fR tool is used.
.SS "Usin \s-1GNU\s0z gcc fo' buildin Perl"
.IX Subsection "Usin GNUz gcc fo' buildin Perl"
Usin gcc\-3.x (tested wit 3.0.4, 3.1, n' 3.2) now works outta tha box,
as do recent gcc\-2.9 buildz available directly from \s-1IBM\s0 as part of their
Linux compatibilitizzle packages, available here:
.PP
.Vb 1
\&  http://www.ibm.com/servers/aix/products/aixos/linux/
.Ve
.SS "Usin Big-Ass Filez wit Perl < 5L"
.IX Subsection "Usin Big-Ass Filez wit Perl < 5L"
Should yield no problems.
.SS "Threaded Perl < 5L"
.IX Subsection "Threaded Perl < 5L"
Threadz seem ta work \s-1OK,\s0 though all up in tha moment not all tests pass when
threadz is used up in combination wit 64\-bit configurations.
.PP
Yo ass may git a warnin when bustin a threaded build:
.PP
.Vb 2
\&  "pp_sys.c", line 4640.39: 1506\-280 (W) Function argument assignment 
\&  between types "unsigned char*" n' "const void*" aint allowed.
.Ve
.PP
Da exact line number may vary yo, but if tha warnin (W) be reppin a line
line this
.PP
.Vb 1
\&  hent = PerlSock_gethostbyaddr(addr, (Netdb_hlen_t) addrlen, addrtype);
.Ve
.PP
in tha \*(L"pp_ghostent\*(R" function, you may ignore it safely.  Da warning
is caused by tha reentrant variant of \fIgethostbyaddr()\fR havin a slightly
different prototype than its non-reentrant variant yo, but tha difference
is not straight-up dope here.
.SS "64\-bit Perl < 5L"
.IX Subsection "64-bit Perl < 5L"
If yo' \s-1AIX\s0 is installed wit 64\-bit support, you can expect 64\-bit
configurations ta work. In combination wit threadz some tests might
still fail.
.SS "\s-1AIX 4.2\s0 n' extensions rockin \*(C+ wit statics"
.IX Subsection "AIX 4.2 n' extensions rockin wit statics"
In \s-1AIX 4.2\s0 Perl extensions dat use \*(C+ functions dat use statics
may have problems up in dat tha statics is not gettin initialized.
In newer \s-1AIX\s0 releases dis has been solved by linkin Perl with
the libC_r library yo, but unfortunately up in \s-1AIX 4.2\s0 tha holla'd library
has a obscure bug where tha various functions related ta time
(like fuckin \fItime()\fR n' \fIgettimeofday()\fR) return fucked up joints, and
therefore up in \s-1AIX 4.2\s0 Perl aint linked against tha libC_r.
.SH "AUTHORS"
.IX Header "AUTHORS"
Rainer Tammer <tammer@tammer.net>
