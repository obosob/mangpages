'\" t
.\"     Title: git-show-branch
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-SHOW\-BRANCH" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-show-branch \- Show branches n' they commits
.SH "SYNOPSIS"
.sp
.nf
\fIgit show\-branch\fR [\-a|\-\-all] [\-r|\-\-remotes] [\-\-topo\-order | \-\-date\-order]
                [\-\-current] [\-\-color[=<when>] | \-\-no\-color] [\-\-sparse]
                [\-\-more=<n> | \-\-list | \-\-independent | \-\-merge\-base]
                [\-\-no\-name | \-\-sha1\-name] [\-\-topics]
                [(<rev> | <glob>)\&...]
\fIgit show\-branch\fR (\-g|\-\-reflog)[=<n>[,<base>]] [\-\-list] [<ref>]
.fi
.sp
.SH "DESCRIPTION"
.sp
Shows tha commit ancestry graph startin from tha commits named wit <rev>s or <globs>s (or all refs under refs/headz and/or refs/tags) semi\-visually\&.
.sp
It cannot show mo' than 29 branches n' commits at a time\&.
.sp
It uses showbranch\&.default multi\-valued configuration shit if no <rev> or <glob> is given on tha command line\&.
.SH "OPTIONS"
.PP
<rev>
.RS 4
Arbitrary extended SHA\-1 expression (see
\fBgitrevisions\fR(7)) dat typically names a funky-ass branch head or a tag\&.
.RE
.PP
<glob>
.RS 4
A glob pattern dat matches branch or tag names under refs/\&. For example, if you have nuff topic branches under refs/heads/topic, giving
topic/*
would show all of them\&.
.RE
.PP
\-r, \-\-remotes
.RS 4
Show tha remote\-trackin branches\&.
.RE
.PP
\-a, \-\-all
.RS 4
Show both remote\-trackin branches n' local branches\&.
.RE
.PP
\-\-current
.RS 4
With dis option, tha command includes tha current branch ta tha list of revs ta be shown when it aint given on tha command line\&.
.RE
.PP
\-\-topo\-order
.RS 4
By default, tha branches n' they commits is shown up in reverse chronological order\&. This option make dem step tha fuck up in topological order (i\&.e\&., descendant commits is shown before they muthafathas)\&.
.RE
.PP
\-\-date\-order
.RS 4
This option is similar to
\fI\-\-topo\-order\fR
in tha sense dat no parent comes before all of its lil pimps yo, but otherwise commits is ordered accordin ta they commit date\&.
.RE
.PP
\-\-sparse
.RS 4
By default, tha output omits merges dat is reachable from only one tip bein shown\&. This option make dem visible\&.
.RE
.PP
\-\-more=<n>
.RS 4
Usually tha command stops output upon showin tha commit dat is tha common ancestor of all tha branches\&. This flag  drops some lyrics ta tha command ta go <n> mo' common commits beyond that\&. When <n> is negative, display only tha <reference>s given, without showin tha commit ancestry tree\&.
.RE
.PP
\-\-list
.RS 4
Synonym to
\-\-more=\-1
.RE
.PP
\-\-merge\-base
.RS 4
Instead of showin tha commit list, determine possible merge bases fo' tha specified commits\& fo' realz. All merge bases is ghon be contained up in all specified commits\&. This is different from how
\fBgit-merge-base\fR(1)
handlez tha case of three or mo' commits\&.
.RE
.PP
\-\-independent
.RS 4
Among tha <reference>s given, display only tha ones dat cannot be reached from any other <reference>\&.
.RE
.PP
\-\-no\-name
.RS 4
Do not show namin strings fo' each commit\&.
.RE
.PP
\-\-sha1\-name
.RS 4
Instead of namin tha commits rockin tha path ta reach dem from headz (e\&.g\&. "master~2" ta mean tha grandparent of "master"), name dem wit tha unique prefix of they object names\&.
.RE
.PP
\-\-topics
.RS 4
Shows only commits dat is NOT on tha straight-up original gangsta branch given\&. This helps track topic branches by hidin any commit dat be already up in tha main line of pimpment\&. When given "git show\-branch \-\-topics masta topic1 topic2", dis will show tha revisions given by "git rev\-list ^masta topic1 topic2"
.RE
.PP
\-g, \-\-reflog[=<n>[,<base>]] [<ref>]
.RS 4
Shows <n> most recent ref\-log entries fo' tha given ref\&. If <base> is given, <n> entries goin back from dat entry\&. <base> can be specified as count or date\&. When no explicit <ref> parameta is given, it defaults ta tha current branch (or
HEAD
if it is detached)\&.
.RE
.PP
\-\-color[=<when>]
.RS 4
Color tha status sign (one of these:
*!+\-) of each commit correspondin ta tha branch it\(cqs in\&. Da value must be always (the default), never, or auto\&.
.RE
.PP
\-\-no\-color
.RS 4
Turn off colored output, even when tha configuration file gives tha default ta color output\&. Right back up in yo muthafuckin ass. Same as
\-\-color=never\&.
.RE
.sp
Note dat \-\-more, \-\-list, \-\-independent n' \-\-merge\-base options is mutually exclusive\&.
.SH "OUTPUT"
.sp
Given N <references>, tha straight-up original gangsta N lines is tha one\-line description from they commit message\&. Da branch head dat is pointed at by $GIT_DIR/HEAD is prefixed wit a asterisk * characta while other headz is prefixed wit a ! character\&.
.sp
Peepin these N lines, one\-line log fo' each commit is displayed, indented N places\&. If a cold-ass lil commit is on tha I\-th branch, tha I\-th indentation characta shows a + sign; otherwise it shows a space\&. Merge commits is denoted by a \- sign\&. Each commit shows a gangbangin' finger-lickin' dirty-ass short name dat can be used as a extended SHA\-1 ta name dat commit\&.
.sp
Da followin example shows three branches, "master", "fixes" n' "mhf":
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-branch masta fixes mhf
* [master] Add \(aqgit show\-branch\(aq\&.
 ! [fixes] Introduce "reset type" flag ta "git reset"
  ! [mhf] Allow "+remote:local" refspec ta cause \-\-force when fetching\&.
\-\-\-
  + [mhf] Allow "+remote:local" refspec ta cause \-\-force when fetching\&.
  + [mhf~1] Use git\-octopus when pullin mo' than one heads\&.
 +  [fixes] Introduce "reset type" flag ta "git reset"
  + [mhf~2] "git fetch \-\-force"\&.
  + [mhf~3] Use \&.git/remote/origin, not \&.git/branches/origin\&.
  + [mhf~4] Make "git pull" n' "git fetch" default ta origin
  + [mhf~5] Inhyped \(aqoctopus merge\(aq
  + [mhf~6] Retire git\-parse\-remote\&.
  + [mhf~7] Multi\-head fetch\&.
  + [mhf~8] Start addin tha $GIT_DIR/remotes/ support\&.
*++ [master] Add \(aqgit show\-branch\(aq\&.
.fi
.if n \{\
.RE
.\}
.sp
.sp
These three branches all forked from a cold-ass lil common commit, [master], whose commit message is "Add \(aqgit show\-branch\(aq"\&. Da "fixes" branch addz one commit "Introduce "reset type" flag ta "git reset""\&. Da "mhf" branch addz nuff other commits\&. Da current branch is "master"\&.
.SH "EXAMPLE"
.sp
If you keep yo' primary branches immediately under refs/heads, n' topic branches up in subdirectoriez of it, havin tha followin up in tha configuration file may help:
.sp
.if n \{\
.RS 4
.\}
.nf
[showbranch]
        default = \-\-topo\-order
        default = heads/*
.fi
.if n \{\
.RE
.\}
.sp
.sp
With this, git show\-branch without extra parametas would show only tha primary branches\&. In addition, if you happen ta be on yo' topic branch, it is shown as well\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-branch \-\-reflog="10,1 minute ago" \-\-list master
.fi
.if n \{\
.RE
.\}
.sp
.sp
shows 10 reflog entries goin back from tha tip az of 1 minute ago\&. Without \-\-list, tha output also shows how tha fuck these tips is topologically related wit each other\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
