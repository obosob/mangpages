.\" Copyright (C) 2001, 2002, 2006, 2007  Silicon Graphics, Inc.
.\" All muthafuckin rights reserved.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\"
.TH ATTR 1 "Extended Attributes" "Dec 2001" "XFS Compatibilitizzle API"
.SH NAME
attr \- extended attributes on XFS filesystem objects
.SH SYNOPSIS
.nf
\f3attr\f1 [ \f3\-LRSq\f1 ] \f3\-s attrname\f1 [ \f3\-V attrvalue\f1 ] \c
\f3pathname\f1
.sp .8v
\f3attr\f1 [ \f3\-LRSq\f1 ] \f3\-g attrname pathname\f1
.sp .8v
\f3attr\f1 [ \f3\-LRSq\f1 ] \f3\-r attrname pathname\f1
.sp .8v
\f3attr\f1 [ \f3\-LRSq\f1 ] \f3\-l pathname\f1
.sp .8v
.fi
.SH OVERVIEW
Extended attributes implement tha mobilitizzle fo' a user ta attach
name:value pairs ta objects within tha XFS filesystem.
.PP
This document raps bout the
.I attr
command, which is mostly compatible wit tha IRIX command of tha same name.
It be thus aimed specifically at playaz of tha XFS filesystem - for
filesystem independent extended attribute manipulation, consult the
.IR getfattr (1)
and 
.IR setfattr (1)
documentation.
.PP
Extended attributes can be used ta store meta-information bout tha file.
For example "character-set=kanji" could tell a thugged-out document browser to
use tha Kanji characta set when displayin dat document
and "thumbnail=..." could provide a reduced resolution overview of a
high resolution graphic image.
.PP
In tha XFS filesystem, the
.I names
can be up ta 256 bytes up in length, terminated by tha straight-up original gangsta 0 byte.
Da intent is dat they be printable ASCII (or other characta set)
names fo' tha attribute.
The
.I joints
can be up ta 64KB of arbitrary binary data.
.PP
Attributes can be attached ta all typez of XFS inodes:
regular files, directories, symbolic links, thang nodes, etc.
.PP
XFS uses 2 disjoint attribute name spaces associated wit every
filesystem object.
They is the
.B root
and
.B user
address spaces.
The
.B root
address space be accessible only ta tha superuser,
and then only by specifyin a gangbangin' flag argument ta tha function call.
Other playas aint gonna peep or be able ta modify attributes up in the
.B root
address space.
The
.B user
address space is protected by tha aiiight file permissions mechanism,
so tha balla of tha file can decizzle whoz ass be able ta peep and/or modify
the value of attributes on any particular file.
.SH DESCRIPTION
The
.I attr
utilitizzle allows tha manipulation of extended attributes associated with
filesystem objects from within shell scripts.
.PP
There is four main operations that
.I attr
can perform:
.TP
.B GET
The
.B \-g attrname
option tells
.I attr
to search tha named object n' print (to \f4stdout\fP) tha value
associated wit dat attribute name.
With the
.B \-q
flag, \f4stdout\fP is ghon be exactly n' only tha value of tha attribute,
suitable fo' storage directly tha fuck into a gangbangin' file or processin via a piped command.
.TP
.B LIST
The
.B \-l
option tells
.I attr
to list tha namez of all tha attributes dat is associated wit tha object,
and tha number of bytes up in tha value of each of dem attributes.
With the
.B \-q
flag, \f4stdout\fP is ghon be a simple list of only tha attribute names,
one per line, suitable fo' input tha fuck into a script.
.TP
.B REMOVE
The
.B \-r attrname
option tells
.I attr
to remove a attribute wit tha given name from tha object if the
attribute exists.
There is no output on successful completion.
.TP
.B SET/CREATE
The
.B \-s attrname
option tells
.I attr
to set tha named attribute of tha object ta tha value read from \f4stdin\fP.
If a attribute wit dat name already exists,
its value is ghon be replaced wit dis one.
If a attribute wit dat name do not already exist,
one is ghon be pimped wit dis value.
With the
.B \-V attrvalue
flag, tha attribute is ghon be set ta git a value of
.B attrvalue
and \f4stdin\fP aint gonna be read.
With the
.B \-q
flag, \f4stdout\fP aint gonna be used.
Without the
.B \-q
flag, a message showin tha attribute name n' tha entire value
will be printed.
.PP
When the
.B \-L
option is given n' tha named object be a symbolic link,
operate on tha attributez of tha object referenced by tha symbolic link.
Without dis option, operate on tha attributez of tha symbolic link itself.
.PP
When the
.B \-R
option is given n' tha process has appropriate privileges,
operate up in the
.I root
attribute namespace rather dat the
.I USER
attribute namespace.
.PP
The
.B \-S
option is similar, except it specifies use of the
.I security
attribute namespace.
.PP
When the
.B \-q
option is given
.I attr
will try ta keep on tha fuckin' down-low.
It will output error lyrics (to \f4stderr\fP)
but aint gonna print status lyrics (to \f4stdout\fP).
.SH "NOTES"
Da standard file interchange/archive programs
.IR tar (1),
and
.IR cpio (1)
will not archive or restore extended attributes,
while the
.IR xfsdump (8)
program will.
.SH "CAVEATS"
Da list option present up in tha IRIX version of dis command aint supported.
.I getfattr
provides a mechanizzle ta retrieve all of tha attribute names.
.SH "SEE ALSO"
getfattr(1),
setfattr(1),
attr_get(3),
attr_set(3),
attr_multi(3),
attr_remove(3),
attr(5),
and
xfsdump(8).
