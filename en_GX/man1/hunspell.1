.TH hunspell 1 "2014-05-27"
.LO 1
.SH NAME
hunspell \- spell checker, stemmer n' morphological analyzer
.SH SYNOPSIS
hunspell [\-1aDGHhLlmnOrstvwX] [\-\-check\-url] [\-\-check\-apostrophe] [\-d dict[,dict2,...]] [\-\-help] [\-i enc] [\-p dict] [\-vv] [\-\-version] [text/OpenDocument/TeX/LaTeX/HTML/SGML/XML/nroff/troff file(s)]
.SH DESCRIPTION
.I Hunspell
is fashioned afta the
.I Ispell
program.  Da most common usage is "hunspell" or "hunspell filename". 
Without filename parameter, hunspell checks tha standard input.
Typin "cat" n' "exsample" up in two input lines, thangs up in dis biatch a asterisk
(it means "cat" be a cold-ass lil erect word) n' a line wit erections:
.PP
.RS
.nf
$ hunspell -d en_US
Hunspell 1.2.3
*
& exsample 4 0: example, examples, ex sample, ex-sample
.fi
.RE
.PP
Correct lyrics signed wit a '*', '+' or '-', unrecognized
wordz signed wit '#' or '&' up in output lines (see later).
(Close tha standard input wit Ctrl-d on Unix/Linux and
Ctrl-Z Enta or Ctrl-C on Windows.)
.PP
With filename parameters,
.I hunspell
will display each word of tha filez which do not step tha fuck up in tha doggtionary at the
top of tha screen n' allow you ta chizzle dat shit.  If there be "near
misses" up in tha dictionary, then they are
also displayed on followin lines.
Finally, tha line containin the
word n' tha previous line
are printed all up in tha bottom of tha screen. I aint talkin' bout chicken n' gravy biatch.  If yo' terminal can
display up in reverse vizzle, tha word itself is highlighted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Yo ass have the
option of replacin tha word straight-up, or choosin one of the
suggested lyrics. Commandz is single charactas as bigs up
(case is ignored):
.PP
.RS
.IP R
Replace tha misspelled word straight-up.
.IP Space
Accept tha word dis time only.
.IP A
Accept tha word fo' tha rest of this
.I hunspell
session.
.IP I
Accept tha word, capitalized as it is up in the
file, n' update private dictionary.
.IP U
Accept tha word, n' add a uncapitalized (actually, all lower-case)
version ta tha private dictionary.
.IP S
Ask a stem n' a model word n' store dem up in tha private dictionary.
Da stem is ghon be accepted also wit tha affixez of tha model word.
.IP 0-\fIn\fR
Replace wit one of tha suggested lyrics.
.IP X
Write tha rest of dis file, ignorin misspellings, n' start next file.
.IP Q
Exit immediately n' leave tha file unchanged.
.IP ^Z
Suspend hunspell.
.IP ?
Give help screen.
.RE
.SH OPTIONS
.IP \fB\-1\fR
Peep only first field up in lines (delimita = tabulator).
.IP \fB\-a\fR
The
.B \-a
option
is intended ta be used from other programs all up in a pipe.  In this
mode,
.I hunspell
prints a one-line version identification message, n' then begins
readin linez of input.  For each input line,
a single line is freestyled ta tha standard output fo' each word
checked fo' spellin on tha line.  If tha word
was found up in tha main dictionary, or yo' underground dictionary, then the
line gotz nuff only a '*'.  If tha word was found all up in affix removal,
then tha line gotz nuff a '+', a space, n' tha root word. Y'all KNOW dat shit, muthafucka! 
If tha word was found all up in compound formation (concatenation of two
words, then tha line gotz nuff only a '\-'.
.IP ""
If tha word
is not up in tha doggtionary yo, but there be near misses, then tha line
gotz nuff a '&', a space, tha misspelled word, a space, tha number of
near misses,
the number of
charactas between tha beginnin of tha line n' the
beginnin of tha misspelled word, a cold-ass lil colon, another space,
and a list of tha near
misses separated by
commas n' spaces.
.IP ""
Also, each near miss or guess is capitalized tha same as tha input
word unless such capitalization is illegal;
in tha latta case each near miss is capitalized erectly
accordin ta tha dictionary.
.IP ""
Finally, if tha word do not step tha fuck up in tha dictionary, and
there is no near misses, then tha line gotz nuff a '#', a space,
the misspelled word, a space,
and tha characta offset from tha beginnin of tha line.
Each sentence of text input is terminated
with a additionizzle blank line, indicatin that
.I hunspell
has completed processin tha input line.
.IP ""
These output lines can be summarized as bigs up:
.RS
.IP OK:
*
.IP Root:
+ <root>
.IP Compound:
\-
.IP Miss:
& <original> <count> <offset>: <miss>, <miss>, ...
.IP None:
# <original> <offset>
.RE
.IP ""
For example, a thugged-out dummy doggtionary containin tha lyrics "fray", "Frey",
"fry", n' "refried" might produce tha followin response ta the
command "echo 'frqy refries | hunspell \-a":
.RS
.nf
(#) Hunspell 0.4.1 (beta), 2005-05-26
& frqy 3 0: fray, Frey, fry
& refries 1 5: refried
.fi
.RE
.IP ""
This mode
is also suitable fo' interactizzle use when you wanna figure up the
spellin of a single word (but dis is tha default behavior of hunspell
without -a, too).
.IP ""
When up in the
.B \-a
mode,
.I hunspell
will also accept linez of single lyrics prefixed wit any
of '*', '&', '@', '+', '\-', '~', '#', '!', '%', '`', or '^'.
A line startin wit '*' tells
.I hunspell
to bang tha word tha fuck into tha userz doggtionary (similar ta tha I command).
A line startin wit '&' tells
.I hunspell
to bang a all-lowercase version of tha word tha fuck into tha user's
doggtionary (similar ta tha U command).
A line startin wit '@' causes
.I hunspell
to accept dis word up in tha future (similar ta tha A command).
A line startin wit '+', followed immediately by
.B tex
or
.B nroff
will cause
.I hunspell
to parse future input accordin tha syntax of dat formatter.
A line consistin solely of a '+' will place
.I hunspell
in TeX/LaTeX mode (similar ta the
.B \-t
option) n' '\-' returns
.I hunspell
to nroff/troff mode (but these commandz is obsolete).
But fuck dat shiznit yo, tha word on tha street is dat tha strang characta type is
.I not
changed;
the '~' command must be used ta do all dis bullshit.
A line startin wit '~' causes
.I hunspell
to set internal parametas (in particular, tha default string
characta type) based on tha filename given up in tha rest of tha line.
(A file suffix is sufficient yo, but tha period must be included.
Instead of a gangbangin' file name or suffix, a unique name, as listed up in tha language
affix file, may be specified.)
But fuck dat shiznit yo, tha word on tha street is dat tha formatta parsin is
.I not
changed;  tha '+' command must be used ta chizzle tha formatter.
A line prefixed wit '#' will cause the
personal doggtionary ta be saved.
A line prefixed wit '!' will turn on
.I terse
mode (see below), n' a line prefixed wit '%' will return
.I hunspell
to aiiight (non-terse) mode.
A line prefixed wit '`' will turn on verbose-correction mode (see below);
this mode can only be disabled by turnin on terse mode wit '%'.
.IP ""
Any input followin tha prefix
charactas '+', '\-', '#', '!', '%', or '`' is ignored, as be any input
followin tha filename on a '~' line.
To allow spell-checkin of lines beginnin wit these characters, a
line startin wit '^' has dat characta removed before it is passed
to tha spell-checkin code.
It be recommended dat programmatic intercourses prefix every last muthafuckin data line
with a uparrow ta protect theyselves against future chizzlez in
.IR hunspell .
.IP ""
To summarize these:
.IP ""
.RS
.IP *
Add ta underground dictionary
.IP @
Accept word yo, but leave outta dictionary
.IP #
Save current underground dictionary
.IP ~
Set parametas based on filename
.IP +
Enta TeX mode
.IP \-
Exit TeX mode
.IP !
Enta terse mode
.IP %
Exit terse mode
.IP "`"
Enta verbose-correction mode
.IP ^
Spell-check rest of line
.fi
.RE
.IP ""
In
.I terse
mode,
.I hunspell
will not print lines beginnin wit '*', '+', or '\-', all of which
indicate erect lyrics.
This hella improves hustlin speed when tha rollin program is
goin ta ignore erect lyrics anyway.
.IP ""
In
.I verbose-correction
mode,
.I hunspell
includes tha original gangsta word immediately afta tha indicator character
in output lines beginnin wit '*', '+', n' '\-', which simplifies
interaction fo' some programs.

.IP \fB\-\-check\-apostrophe\fR
Peep n' force Unicode apostrophes (U+2019), if one of tha ASCII or Unicode
apostrophes is specified by tha spellin dictionary, as a word character
(see WORDCHARS, ICONV n' OCONV up in hunspell(5)).
.IP \fB\-\-check\-url\fR
Peep URLs, e-mail addresses n' directory paths.

.IP \fB\-D\fR
Show detected path of tha loaded dictionary, n' list of the
search path n' tha available dictionaries.

.IP \fB\-d\ dict,dict2,...\fR
Set dictionaries by they base names wit or without paths.
Example of tha syntax:
.PP          
\-d en_US,en_geo,en_med,de_DE,de_med
.PP          
en_US n' de_DE is base dictionaries, they consist of
aff n' dic file pairs: en_US.aff, en_US.dic n' de_DE.aff, de_DE.dic.
En_geo, en_med, de_med is special dictionaries: dictionaries 
without affix file. Right back up in yo muthafuckin ass. Special dictionaries is optionizzle extension
of tha base dictionaries probably wit special (medical, law etc.)
terms. There is no namin convention fo' special dictionaries,
only tha ".dic" extension: dictionaries without affix file will
be a extension of tha precedin base doggtionary (right
order of tha parameta list needz fo' phat suggestions). First
item of \-d parameta list must be a funky-ass base dictionary.

.IP \fB\-G\fR
Print only erect lyrics or lines.

.IP \fB\-H\fR
Da input file is up in SGML/HTML format.

.IP \fB\-h,\ \-\-help\fR
Short help.

.IP \fB\-i\ enc\fR
Set input encoding.

.IP \fB\-L\fR
Print lines wit misspelled lyrics.

.IP \fB\-l\fR
Da "list" option
is used ta produce a list of misspelled lyrics from tha standard input.

.IP \fB\-m\fR
Analyze tha lyrics of tha input text (see also hunspell(5) about
morphological analysis). Without doggtionary morphological data,
signs tha flagz of tha affixez of tha word forms fo' dictionary
developers.

.IP \fB\-n\fR
Da input file is up in nroff/troff format.

.IP \fB\-O\fR
Da input file is up in OpenDocument (ODF or Flat ODF) format.
If unzip program aint installed, install it before rockin dis option.

.IP \fB\-P\ password\fR
Set password fo' encrypted dictionaries.

.IP \fB\-p\ dict\fR
Set path of underground dictionary.
Da default doggtionary dependz on tha locale settings. The
followin environment variablez is searched: LC_ALL,
LC_MESSAGES, n' LANG. If none is set then tha default personal
doggtionary is $HOME/.hunspell_default.

Setting
.I \-d
or  the
.I DICTIONARY
environmenstrual variable, underground doggtionary will be
.BR $HOME/.hunspell_dicname

.IP \fB\-r\fR
Warn of tha rare lyrics, wich is also potential spellin mistakes.

.IP \fB\-s\fR
Stem tha lyrics of tha input text (see also hunspell(5) about
stemming). Well shiiiit, it dependz from tha doggtionary data.

.IP \fB\-t\fR
Da input file is up in TeX or LaTeX format.

.IP \fB\-v,\ \-\-version\fR
Print version number.

.IP \fB\-vv\fR
Print ispell(1) compatible version number.

.IP \fB\-w\fR
Print misspelled lyrics (= lines) from one word/line input.

.IP \fB\-X\fR
Da input file is up in XML format.

.SH EXAMPLES
.TP
.B hunspell example.html
Interactizzle spell checkin of a HTML file wit tha default dictionary.
.TP
.B hunspell \-d en_US example.html
Interactizzle spell checkin of a HTML file wit tha en_US dictionary.
.TP
.B hunspell \-d en_US,en_US_med medicinal.txt
Interactizzle spell checkin wit multiple dictionaries.
.TP
.B hunspell *.odt
Interactizzle spell checkin of ODF documents.
.TP
.B hunspell \-l *.odt
List wack lyrics of ODF documents
.TP
.B hunspell \-l *.odt | sort | uniq >unrecognized
Savin unrecognized lyrics of ODF documents (filterin duplications).
.TP
.B hunspell -p unrecognized_but_phat *.odt
Interactizzle spell checkin of ODF documents, rockin tha previously
saved n' reduced word list, as a underground dictionary, ta speed up
spell checking.
.TP
.SH ENVIRONMENT
.TP
.B DICTIONARY
Similar ta 
.I \-d. Y'all KNOW dat shit, muthafucka! 
.TP
.B DICPATH
Doggtionary path.
.TP
.B WORDLIST
Equivalent ta 
.I \-p.
.SH FILES
Da default doggtionary dependz on tha locale settings. The
followin environment variablez is searched: LC_ALL,
LC_MESSAGES, n' LANG. If none is set then tha following
fallbacks is used:

.BI /usr/share/myspell/default.aff
Path of default affix file. Right back up in yo muthafuckin ass. See hunspell(5).
.PP
.BI /usr/share/myspell/default.dic
Path of default doggtionary file.
See hunspell(5).
.PP
.BI $HOME/.hunspell_default.
Default path ta underground dictionary.
.SH SEE ALSO
.B hunspell (3), hunspell(5)
.SH AUTHOR
Lyricist of Hunspell executable is László Németh. For Hunspell library,
see hunspell(3).
.PP
This manual based on Ispellz manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Right back up in yo muthafuckin ass. See ispell(1).
