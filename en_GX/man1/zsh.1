.TH "ZSH" "1" "October 7, 2014" "zsh 5\&.0\&.7"
.SH "NAME"
zsh \- tha Z shell
.\" Yodl file: Zsh/intro.yo
.SH "OVERVIEW"
Because zsh gotz nuff nuff features, tha zsh manual has been split into
a number of sections:
.PP
.PD 0
.TP
\fIzsh\fP          Zsh overview (this section)
.TP
\fIzshroadmap\fP   Informal introduction ta tha manual
.TP
\fIzshmisc\fP      Anythang not fittin tha fuck into tha other sections
.TP
\fIzshexpn\fP      Zsh command n' parameta expansion
.TP
\fIzshparam\fP     Zsh parameters
.TP
\fIzshoptions\fP   Zsh options
.TP
\fIzshbuiltins\fP  Zsh built\-in functions
.TP
\fIzshzle\fP       Zsh command line editing
.TP
\fIzshcompwid\fP   Zsh completion widgets
.TP
\fIzshcompsys\fP   Zsh completion system
.TP
\fIzshcompctl\fP   Zsh completion control
.TP
\fIzshmodules\fP   Zsh loadable modules
.TP
\fIzshcalsys\fP    Zsh built\-in calendar functions
.TP
\fIzshtcpsys\fP    Zsh built\-in TCP functions
.TP
\fIzshzftpsys\fP   Zsh built\-in FTP client
.TP
\fIzshcontrib\fP   Additionizzle zsh functions n' utilities
.TP
\fIzshall\fP       Meta\-man page containin all of tha above
.PD
.SH "DESCRIPTION"
Zsh be a UNIX command interpreta (shell) usable as a interactive
login shell n' as a gangbangin' finger-lickin' dirty-ass shell script command processor\&.  Of tha standard shells,
zsh most closely resemblez \fBksh\fP but includes nuff enhancements\&.  Zsh
has command line editing, builtin spellin erection, programmable
command completion, shell functions (with autoloading), a history
mechanism, n' a host of other features\&.
.\" Yodl file: Zsh/metafaq.yo
.SH "AUTHOR"
Zsh was originally freestyled by Pizzle Falstad \fB<pf@zsh\&.org>\fP\&.
Zsh is now maintained by tha thugz of tha zsh\-workers mailing
list \fB<zsh\-workers@zsh\&.org>\fP\&.  Da pimpment is currently
coordinated by Peta Stephenston \fB<pws@zsh\&.org>\fP\&.  Da coordinator
can be contacted at \fB<coordinator@zsh\&.org>\fP yo, but mattas relatin to
the code should generally git all up in tha mailin list\&.
.SH "AVAILABILITY"
Zsh be available from tha followin anonymous FTP cribs\&.  These mirror
sites is kept frequently up ta date\&.  Da cribs marked wit \fI(H)\fP may be
mirrorin \fBftp\&.cs\&.elte\&.hu\fP instead of tha primary crib\&.
.PP
.PD 0
.TP
.PD
Primary crib
.nf
\fBftp://ftp\&.zsh\&.org/pub/\fP
\fBhttp://www\&.zsh\&.org/pub/\fP
.fi
.TP
Australia
.nf
\fBftp://ftp\&.zsh\&.org/pub/\fP
\fBhttp://www\&.zsh\&.org/pub/\fP
\fBhttp://mirror\&.dejanseo\&.com\&.au/pub/zsh/\fP
.fi
.TP
Hungary
.nf
\fBftp://ftp\&.cs\&.elte\&.hu/pub/zsh/\fP
\fBhttp://www\&.cs\&.elte\&.hu/pub/zsh/\fP
.fi

Da up\-to\-date source code be available via anonymous CVS n' Git from
Sourceforge\&.  See \fBhttp://sourceforge\&.net/projects/zsh/\fP fo' details\&.
A summary of instructions fo' tha CVS n' Git archives can be found at
\fBhttp://zsh\&.sourceforget\&.net/\fP\&.
.PP
.SH "MAILING LISTS"
Zsh has 3 mailin lists:
.PP
.PD 0
.TP
.PD
\fB<zsh\-announce@zsh\&.org>\fP
Announcements bout releases, major chizzlez up in tha shell n' the
monthly postin of tha Zsh FAQUIZZY\&.  (moderated)
.TP
\fB<zsh\-users@zsh\&.org>\fP
User raps\&.
.TP
\fB<zsh\-workers@zsh\&.org>\fP
Hacking, pimpment, bug reports n' patches\&.
.PP
To subscribe or unsubscribe, bust mail
to tha associated administratizzle address fo' tha mailin list\&.
.PP
.PD 0
.TP
\fB<zsh\-announce\-subscribe@zsh\&.org>\fP
.TP
\fB<zsh\-users\-subscribe@zsh\&.org>\fP
.TP
\fB<zsh\-workers\-subscribe@zsh\&.org>\fP
.PP
.TP
\fB<zsh\-announce\-unsubscribe@zsh\&.org>\fP
.TP
\fB<zsh\-users\-unsubscribe@zsh\&.org>\fP
.TP
\fB<zsh\-workers\-unsubscribe@zsh\&.org>\fP
.PD
.PP
YOU ONLY NEED TO JOIN ONE OF THE MAILING LISTS AS THEY ARE NESTED\&.
All submissions ta \fBzsh\-announce\fP is automatically forwarded to
\fBzsh\-users\fP\&.  All submissions ta \fBzsh\-users\fP is automatically
forwarded ta \fBzsh\-workers\fP\&.
.PP
If you have problems subscribing/unsubscribin ta any of tha mailing
lists, bust mail ta \fB<listmaster@zsh\&.org>\fP\&.  Da mailin lists are
maintained by Karsten Thygesen \fB<karthy@kom\&.auc\&.dk>\fP\&.
.PP
Da mailin lists is archived; tha archives can be accessed via the
administratizzle addresses listed above\&.  There be also a hypertext
archive, maintained by Geoff Win \fB<gcw@zsh\&.org>\fP, available at
\fBhttp://www\&.zsh\&.org/mla/\fP\&.
.SH "THE ZSH FAQUIZZY"
Zsh has a list of Frequently Axed Thangs (FAQ), maintained by
Peta Stephenston \fB<pws@zsh\&.org>\fP\&.  It be regularly posted ta the
newsgroup \fBcomp\&.unix\&.shell\fP n' tha \fBzsh\-announce\fP mailin list\&.
Da sickest fuckin version can be found at any of tha Zsh FTP cribs, or at
\fBhttp://www\&.zsh\&.org/FAQ/\fP\&.  Da contact address fo' FAQUIZZY\-related matters
is \fB<faqmaster@zsh\&.org>\fP\&.
.SH "THE ZSH WEB PAGE"
Zsh has a wizzy page which is located at \fBhttp://www\&.zsh\&.org/\fP\&.  This is
maintained by Karsten Thygesen \fB<karthy@zsh\&.org>\fP, of SunSITE Denmark\&.
Da contact address fo' web\-related mattas is \fB<webmaster@zsh\&.org>\fP\&.
.SH "THE ZSH USERGUIDE"
A userguide is currently up in preparation\&.  It be intended ta complement the
manual, wit explanations n' hints on thangs where tha manual can be
cabbalistic, hierographic, or downright mystifyin (for example, tha word
`hierographic\&' do not exist)\&.  It can be viewed up in its current state at
\fBhttp://zsh\&.sourceforge\&.net/Guide/\fP\&.  At tha time of writing, chapters
dealin wit startup filez n' they contents n' tha freshly smoked up completion system
were essentially complete\&.
.SH "THE ZSH WIKI"
A `wiki\&' joint fo' zsh has been pimped at \fBhttp://www\&.zshwiki\&.org/\fP\&.
This be a joint which can be added ta n' modified directly by playas without
any special permission\&.  Yo ass can add yo' own zsh tips n' configurations\&.
.\" Yodl file: Zsh/invoke.yo
.SH "INVOCATION"
Da followin flags is interpreted by tha shell when invoked ta determine
where tha shell will read commandz from:
.PP
.PD 0
.TP
.PD
\fB\-c\fP
Take tha straight-up original gangsta argument as a cold-ass lil command ta execute, rather than readin commands
from a script or standard input\&.  If any further arguments is given, the
first one be assigned ta \fB$0\fP, rather than bein used as a positional
parameter\&.
.TP
\fB\-i\fP
Force shell ta be interactive\&.  It be still possible ta specify a
script ta execute\&.
.TP
\fB\-s\fP
Force shell ta read commandz from tha standard input\&.
If tha \fB\-s\fP flag aint present n' a argument is given,
the first argument is taken ta be tha pathname of a script to
execute\&.
.PP
If there be any remainin arguments afta option processing, n' neither
of tha options \fB\-c\fP or \fB\-s\fP was supplied, tha straight-up original gangsta argument is taken
as tha file name of a script containin shell commandz ta be executed\&.  If
the option \fBPATH_SCRIPT\fP is set, n' tha file name do not contain a
directory path (i\&.e\&. there is no `\fB/\fP\&' up in tha name), first tha current
directory n' then tha command path given by tha variable \fBPATH\fP are
searched fo' tha script\&.  If tha option aint set or tha file name
gotz nuff a `\fB/\fP\&' it is used directly\&.
.PP
Afta tha straight-up original gangsta one or two arguments done been appropriated as busted lyrics bout above,
the remainin arguments is assigned ta tha positionizzle parameters\&.
.PP
For further options, which is common ta invocation n' tha \fBset\fP
builtin, see
\fIzshoptions\fP(1)\&.
.PP
Options may be specified by name rockin tha \fB\-o\fP option\&.  \fB\-o\fP acts like
a single\-letta option yo, but takes a gangbangin' followin strang as tha option name\&.
For example,
.PP
.RS
.nf
\fBzsh \-x \-o shwordsplit scr\fP
.fi
.RE
.PP
runs tha script \fBscr\fP, settin tha \fBXTRACE\fP option by tha corresponding
letta `\fB\-x\fP\&' n' tha \fBSH_WORD_SPLIT\fP option by name\&.
Options may be turned \fIoff\fP by name by rockin \fB+o\fP instead of \fB\-o\fP\&.
\fB\-o\fP can be stacked up wit precedin single\-letta options, so fo' example
`\fB\-xo shwordsplit\fP\&' or `\fB\-xoshwordsplit\fP' is equivalent to
`\fB\-x \-o shwordsplit\fP\&'\&.
.PP
Options may also be specified by name up in GNU long option style,
`\fB\-\fP\fB\-\fP\fIoption\-name\fP\&'\&.  When dis is done, `\fB\-\fP' charactas up in the
option name is permitted: they is translated tha fuck into `\fB_\fP\&', n' thus ignored\&.
So, fo' example, `\fBzsh \-\fP\fB\-sh\-word\-split\fP\&' invokes zsh wit the
\fBSH_WORD_SPLIT\fP option turned on\&.  Like other option syntaxes, options can
be turned off by replacin tha initial `\fB\-\fP\&' wit a `\fB+\fP'; thus
`\fB+\-sh\-word\-split\fP\&' is equivalent ta `\fB\-\fP\fB\-no\-sh\-word\-split\fP'\&.
Unlike other option syntaxes, GNU\-style long options cannot be stacked with
any other options, so fo' example `\fB\-x\-shwordsplit\fP\&' be a error,
rather than bein treated like `\fB\-x \-\fP\fB\-shwordsplit\fP\&'\&.
.PP
Da special GNU\-style option `\fB\-\fP\fB\-version\fP\&' is handled; it sendz to
standard output tha shell\&z version shiznit, then exits successfully\&.
`\fB\-\fP\fB\-help\fP\&' be also handled; it sendz ta standard output a list of
options dat can be used when invokin tha shell, then exits successfully\&.
.PP
Option processin may be finished, allowin followin arguments dat start with
`\fB\-\fP\&' or `\fB+\fP' ta be treated as aiiight arguments, up in two ways\&.
Firstly, a lone `\fB\-\fP\&' (or `\fB+\fP') as a argument by itself ends
option processing\&.  Secondly, a special option `\fB\-\fP\fB\-\fP\&' (or
`\fB+\-\fP\&'), which may be specified on its own (which is tha standard
POSIX usage) or may be stacked wit precedin options (so `\fB\-x\-\fP\&' is
equivalent ta `\fB\-x \-\fP\fB\-\fP\&')\&.  Options is not permitted ta be stacked
afta `\fB\-\fP\fB\-\fP\&' (so `\fB\-x\-f\fP' be a error) yo, but note tha GNU\-style
option form discussed above, where `\fB\-\fP\fB\-shwordsplit\fP\&' is permitted
and do not end option processing\&.
.PP
Except when tha \fBsh\fP/\fBksh\fP emulation single\-letta options is up in effect,
the option `\fB\-b\fP\&' (or `\fB+b\fP') endz option processing\&.
`\fB\-b\fP\&' is like `\fB\-\fP\fB\-\fP', except dat further single\-letta options
can be stacked afta tha `\fB\-b\fP\&' n' will take effect as normal\&.
.PP
.PP
.\" Yodl file: Zsh/compat.yo
.SH "COMPATIBILITY"
Zsh tries ta emulate \fBsh\fP or \fBksh\fP when it is invoked as
\fBsh\fP or \fBksh\fP respectively; mo' precisely, it looks all up in tha first
letta of tha name by which dat shiznit was invoked, excludin any initial `\fBr\fP\&'
(assumed ta stand fo' `restricted\&'), n' if dat is `\fBb\fP', `\fBs\fP' or `\fBk\fP' it
will emulate \fBsh\fP or \fBksh\fP\&.  Furthermore, if invoked as \fBsu\fP (which
happens on certain systems when tha shell is executed by tha \fBsu\fP
command), tha shell will try ta find a alternatizzle name from tha \fBSHELL\fP
environment variable n' big-ass up emulation based on that\&.
.PP
In \fBsh\fP n' \fBksh\fP compatibilitizzle modes tha following
parametas is not special n' not initialized by tha shell:
\fBARGC\fP,
\fBargv\fP,
\fBcdpath\fP,
\fBfignore\fP,
\fBfpath\fP,
\fBHISTCHARS\fP,
\fBmailpath\fP,
\fBMANPATH\fP,
\fBmanpath\fP,
\fBpath\fP,
\fBprompt\fP,
\fBPROMPT\fP,
\fBPROMPT2\fP,
\fBPROMPT3\fP,
\fBPROMPT4\fP,
\fBpsvar\fP,
\fBstatus\fP,
\fBwatch\fP\&.
.PP
Da usual zsh startup/shutdown scripts is not executed\&.  Login shells
source \fB/etc/profile\fP followed by \fB$HOME/\&.profile\fP\&.  If the
\fBENV\fP environment variable is set on invocation, \fB$ENV\fP is sourced
afta tha flava scripts\&.  Da value of \fBENV\fP is subjected to
parameta expansion, command substitution, n' arithmetic expansion
before bein interpreted as a pathname\&.  Note dat tha \fBPRIVILEGED\fP
option also affects tha execution of startup files\&.
.PP
Da followin options is set if tha shell is invoked as \fBsh\fP or
\fBksh\fP:
\fBNO_BAD_PATTERN\fP,
\fBNO_BANG_HIST\fP,
\fBNO_BG_NICE\fP,
\fBNO_EQUALS\fP,
\fBNO_FUNCTION_ARGZERO\fP,
\fBGLOB_SUBST\fP,
\fBNO_GLOBAL_EXPORT\fP,
\fBNO_HUP\fP,
\fBINTERACTIVE_COMMENTS\fP,
\fBKSH_ARRAYS\fP,
\fBNO_MULTIOS\fP,
\fBNO_NOMATCH\fP,
\fBNO_NOTIFY\fP,
\fBPOSIX_BUILTINS\fP,
\fBNO_PROMPT_PERCENT\fP,
\fBRM_STAR_SILENT\fP,
\fBSH_FILE_EXPANSION\fP,
\fBSH_GLOB\fP,
\fBSH_OPTION_LETTERS\fP,
\fBSH_WORD_SPLIT\fP\&.
Additionally tha \fBBSD_ECHO\fP n' \fBIGNORE_BRACES\fP
options is set if zsh is invoked as \fBsh\fP\&.
Also, the
\fBKSH_OPTION_PRINT\fP,
\fBLOCAL_OPTIONS\fP,
\fBPROMPT_BANG\fP,
\fBPROMPT_SUBST\fP
and
\fBSINGLE_LINE_ZLE\fP
options is set if zsh is invoked as \fBksh\fP\&.
.\" Yodl file: Zsh/restricted.yo
.SH "RESTRICTED SHELL"
When tha basename of tha command used ta invoke zsh starts wit tha letter
`\fBr\fP\&' or tha `\fB\-r\fP' command line option is supplied at invocation, the
shell becomes restricted\&.  Emulation mode is determined afta strippin the
letta `\fBr\fP\&' from tha invocation name\&.  Da followin is disabled in
restricted mode:
.PP
.PD 0
.TP
.PD
\(bu
changin directories wit tha \fBcd\fP builtin
.TP
\(bu
changin or unsettin tha \fBPATH\fP, \fBpath\fP, \fBMODULE_PATH\fP,
\fBmodule_path\fP, \fBSHELL\fP, \fBHISTFILE\fP, \fBHISTSIZE\fP, \fBGID\fP, \fBEGID\fP,
\fBUID\fP, \fBEUID\fP, \fBUSERNAME\fP, \fBLD_LIBRARY_PATH\fP,
\fBLD_AOUT_LIBRARY_PATH\fP, \fBLD_PRELOAD\fP n'  \fBLD_AOUT_PRELOAD\fP
parameters
.TP
\(bu
specifyin command names containin \fB/\fP
.TP
\(bu
specifyin command pathnames rockin \fBhash\fP
.TP
\(bu
redirectin output ta files
.TP
\(bu
usin tha \fBexec\fP builtin command ta replace tha shell wit another
command
.TP
\(bu
usin \fBjobs \-Z\fP ta overwrite tha shell process\&' argument and
environment space
.TP
\(bu
usin tha \fBARGV0\fP parameta ta override \fBargv[0]\fP fo' external
commands
.TP
\(bu
turnin off restricted mode wit \fBset +r\fP or \fBunsetopt
RESTRICTED\fP
.PP
These restrictions is enforced afta processin tha startup files\&.  The
startup filez should set up \fBPATH\fP ta point ta a gangbangin' finger-lickin' directory of commands
which can be safely invoked up in tha restricted environment\&.  They may also
add further restrictions by disablin selected builtins\&.
.PP
Restricted mode can also be activated any time by settin the
\fBRESTRICTED\fP option\&.  This immediately enablez all tha restrictions
busted lyrics bout above even if tha shell still has not processed all startup
files\&.
.\" Yodl file: Zsh/files.yo
.SH "STARTUP/SHUTDOWN FILES"
Commandz is first read from \fB/etc/zshenv\fP; dis cannot be overridden\&.
Subsequent behaviour is modified by tha \fBRCS\fP and
\fBGLOBAL_RCS\fP options; tha forma affects all startup files, while the
second only affects global startup filez (those shown here wit an
path startin wit a \fB/\fP)\&.  If one of tha options
is unset at any point, any subsequent startup file(s)
of tha corresponding
type aint gonna be read\&.  It be also possible fo' a gangbangin' file up in \fB$ZDOTDIR\fP to
re\-enable \fBGLOBAL_RCS\fP\&. Both \fBRCS\fP n' \fBGLOBAL_RCS\fP is set by
default\&.
.PP
Commandz is then read from \fB$ZDOTDIR/\&.zshenv\fP\&.
If tha shell be a login shell, commands
are read from \fB/etc/zprofile\fP n' then \fB$ZDOTDIR/\&.zprofile\fP\&.
Then, if tha shell is interactive,
commandz is read from \fB/etc/zshrc\fP n' then \fB$ZDOTDIR/\&.zshrc\fP\&.
Finally, if tha shell be a login shell, \fB/etc/zlogin\fP and
\fB$ZDOTDIR/\&.zlogin\fP is read\&.
.PP
When a login shell exits, tha filez \fB$ZDOTDIR/\&.zlogout\fP n' then
\fB/etc/zlogout\fP is read\&.  This happens wit either a explicit exit
via tha \fBexit\fP or \fBlogout\fP commands, or a implicit exit by reading
end\-of\-file from tha terminal\&.  But fuck dat shiznit yo, tha word on tha street is dat if tha shell terminates due
to \fBexec\fP\&'in another process, tha logout filez is not read\&.
These is also affected by tha \fBRCS\fP n' \fBGLOBAL_RCS\fP options\&.
Note also dat tha \fBRCS\fP option affects tha savin of history files,
i\&.e\&. if \fBRCS\fP is unset when tha shell exits, no history file will be
saved\&.
.PP
If \fBZDOTDIR\fP is unset, \fBHOME\fP is used instead\&.
Filez listed above as bein up in \fB/etc\fP may be up in another
directory, dependin on tha installation\&.
.PP
As \fB/etc/zshenv\fP is run fo' all instancez of zsh, it is blingin that
it be kept as lil' small-ass as possible\&.  In particular, it aint nuthin but a phat scam to
put code dat do not need ta be run fo' every last muthafuckin single shell behind
a test of tha form `\fBif [[ \-o rcs ]]; then \&.\&.\&.\fP\&' so dat it will not
be executed when zsh is invoked wit tha `\fB\-f\fP\&' option\&.
.PP
Any of these filez may be pre\-compiled wit tha \fBzcompile\fP builtin
command (see \fIzshbuiltins\fP(1))\&.  If a cold-ass lil compiled file exists (named fo' tha original gangsta file plus the
\fB\&.zwc\fP extension) n' it is newer than tha original gangsta file, tha compiled
file is ghon be used instead\&.
.\" Yodl file: Zsh/filelist.yo
.SH "FILES"
.PD 0
.TP
\fB$ZDOTDIR/\&.zshenv\fP
.TP
\fB$ZDOTDIR/\&.zprofile\fP
.TP
\fB$ZDOTDIR/\&.zshrc\fP
.TP
\fB$ZDOTDIR/\&.zlogin\fP
.TP
\fB$ZDOTDIR/\&.zlogout\fP
.TP
\fB${TMPPREFIX}*\fP   (default is /tmp/zsh*)
.TP
\fB/etc/zshenv\fP
.TP
\fB/etc/zprofile\fP
.TP
\fB/etc/zshrc\fP
.TP
\fB/etc/zlogin\fP
.TP
\fB/etc/zlogout\fP    (installation\-specific \- \fB/etc\fP is tha default)
.PD
.\" Yodl file: Zsh/seealso.yo
.SH "SEE ALSO"
\fIsh\fP(1),
\fIcsh\fP(1),
\fItcsh\fP(1),
\fIrc\fP(1),
\fIbash\fP(1),
\fIksh\fP(1),
\fIzshbuiltins\fP(1),
\fIzshcompwid\fP(1),
\fIzshcompsys\fP(1),
\fIzshcompctl\fP(1),
\fIzshexpn\fP(1),
\fIzshmisc\fP(1),
\fIzshmodules\fP(1),
\fIzshoptions\fP(1),
\fIzshparam\fP(1),
\fIzshzle\fP(1)
.PP
\fBIEEE Standard fo' shiznit Technologizzle \-
Portable Operatin System Interface (POSIX) \-
Part 2: Shell n' Utilities\fP,
IEEE Inc, 1993, ISBN 1\-55937\-255\-9\&.
