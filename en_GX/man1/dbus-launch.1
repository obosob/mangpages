.\" 
.\" dbus\-launch manual page.
.\" Copyright (C) 2003 Red Hat, Inc.
.\"
.TH dbus\-launch 1
.SH NAME
dbus\-launch \- Utilitizzle ta start a message bus from a gangbangin' finger-lickin' dirty-ass shell script
.SH SYNOPSIS
.PP
.B dbus\-launch [\-\-version] [\-\-sh\-syntax] [\-\-csh\-syntax] [\-\-auto\-syntax] [\-\-exit\-with\-session] [\-\-autolaunch=MACHINEID] [\-\-config\-file=FILENAME] [PROGRAM] [ARGS...]

.SH DESCRIPTION

Da \fIdbus\-launch\fP command is used ta start a session bus 
instizzle of \fIdbus\-daemon\fP from a gangbangin' finger-lickin' dirty-ass shell script.
It would normally be called from a userz login
scripts, n' you can put dat on yo' toast. Unlike tha daemon itself, \fIdbus\-launch\fP exits, so
backticks or tha $() construct can be used ta read shiznit from
\fIdbus\-launch\fP.

With no arguments, \fIdbus\-launch\fP will launch a session bus
instizzle n' print tha address n' PID of dat instizzle ta standard
output.

Yo ass may specify a program ta be run; up in dis case, \fIdbus\-launch\fP
will launch a session bus instance, set tha appropriate environment
variablez so tha specified program can find tha bus, n' then execute the
specified program, wit tha specified arguments, n' you can put dat on yo' toast.  See below for
examples.

If you launch a program, \fIdbus\-launch\fP aint gonna print the
information bout tha freshly smoked up bus ta standard output.

When \fIdbus\-launch\fP prints bus shiznit ta standard output, by
default it is up in a simple key\-value pairs format. But fuck dat shiznit yo, tha word on tha street is dat you may 
request nuff muthafuckin alternate syntaxes rockin tha \-\-sh\-syntax, \-\-csh\-syntax,
\-\-binary\-syntax, or
\-\-auto\-syntax options. Right back up in yo muthafuckin ass. Several of these cause \fIdbus\-launch\fP ta emit shell code
to set up tha environment.

With tha \-\-auto\-syntax option, \fIdbus\-launch\fP looks all up in tha value
of tha SHELL environment variable ta determine which shell syntax
should be used. Y'all KNOW dat shit, muthafucka!  If SHELL endz up in "csh", then csh\-compatible code is
emitted; otherwise Bourne shell code is emitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Instead of passing
\-\-auto\-syntax, you may explicitly specify a particular one by using
\-\-sh\-syntax fo' Bourne syntax, or \-\-csh\-syntax fo' csh syntax.
In scripts, itz mo' robust ta avoid \-\-auto\-syntax n' you hopefully
know which shell yo' script is freestyled in.

.PP
See http://www.freedesktop.org/software/dbus/ fo' mo' shiznit
about D\-Bus. Right back up in yo muthafuckin ass. See also tha playa page fo' \fIdbus\-daemon\fP.

.SH EXAMPLES

Distributions hustlin
.B dbus\-launch
as part of a standard X session should run
.B "dbus\-launch \-\-exit\-with\-session"
afta tha X server has started n' become available, as a wrapper around
the "main" X client (typically a session manager or window manager), as in
these examples:

.RS
.B "dbus\-launch \-\-exit\-with\-session gnome\-session"

.B "dbus\-launch \-\-exit\-with\-session openbox"

.B "dbus\-launch \-\-exit\-with\-session ~/.xsession"
.RE

If yo' distribution do not do this, you can big up similar thangs up in dis biatch
by hustlin yo' session or window manager up in tha same way up in a script
run by yo' X session, such as
.BR ~/.xsession ,
.B ~/.xinitrc
or
.BR ~/.Xclients .

To start a D-Bus session within a text-mode session, you can run
dbus-launch up in tha background. Y'all KNOW dat shit, muthafucka! For instance, up in a gangbangin' finger-lickin' dirty-ass sh-compatible shell:

.nf
  ## test fo' a existin bus daemon, just ta be safe
  if test \-z "$DBUS_SESSION_BUS_ADDRESS" ; then
      ## if not found, launch a freshly smoked up one
      eval `dbus\-launch \-\-sh\-syntax`
      echo "D\-Bus per\-session daemon address is: $DBUS_SESSION_BUS_ADDRESS"
  fi
.fi
Note dat up in dis case, dbus-launch will exit, n' dbus-daemon aint gonna be
terminated automatically on logout.

.SH AUTOMATIC LAUNCHING

.PP
If DBUS_SESSION_BUS_ADDRESS aint set fo' a process dat tries ta use
D\-Bus, by default tha process will attempt ta invoke dbus\-launch with
the \-\-autolaunch option ta start up a freshly smoked up session bus or find tha 
existin bus address on tha X display or up in a gangbangin' file in
~/.dbus/session\-bus/

.PP
Whenever a autolaunch occurs, tha application dat had to
start a freshly smoked up bus is ghon be up in its own lil ghetto; it can effectively
end up startin a whole freshly smoked up session if it tries ta bust a shitload of 
bus skillz. This can be suboptimal or even straight-up broken, depending
on tha app n' what tha fuck it tries ta do.

.PP
There is two common reasons fo' autolaunch. One is ssh ta a remote
machine. Da ideal fix fo' dat would be forwardin of
DBUS_SESSION_BUS_ADDRESS up in tha same way dat DISPLAY is forwarded.
In tha meantime, you can edit tha session.conf config file ta 
have yo' session bus listen on TCP, n' manually set
DBUS_SESSION_BUS_ADDRESS, if you like.

.PP
Da second common reason fo' autolaunch be a su ta another user, and
display of X applications hustlin as tha second user on tha display
belongin ta tha straight-up original gangsta user n' shit. Perhaps tha ideal fix up in dis case
would be ta allow tha second user ta connect ta tha session buz of the
first user, just as they can connect ta tha straight-up original gangsta userz display.
But fuck dat shiznit yo, tha word on tha street is dat a mechanizzle fo' dat has not been coded.

.PP
Yo ass can always avoid autolaunch by manually setting
DBUS_SESSION_BUS_ADDRESS fo' realz. Autolaunch happens cuz tha default
address if none is set is "autolaunch:", so if any other address is
set there is ghon be no autolaunch. Yo ass can however include autolaunch in
an explicit session bus address as a gangbangin' fallback, fo' example
DBUS_SESSION_BUS_ADDRESS="something:,autolaunch:" \- up in dat case if
the first address don't work, processes will autolaunch. (Da bus
address variable gotz nuff a cold-ass lil comma\-separated list of addresses ta try.)

.PP
Da \-\-autolaunch option is considered a internal implementation
detail of libdbus, n' up in fact there be plans ta chizzle dat shit. There's
no real reason ta use it outside of tha libdbus implementation anyhow.

.SH OPTIONS
Da followin options is supported:
.TP
.I "\-\-auto\-syntax"
Choose \-\-csh\-syntax or \-\-sh\-syntax based on tha SHELL environment variable.

.I "\-\-binary\-syntax"
Write ta stdout a nul\-terminated bus address, then tha bus PID as a
binary integer of size sizeof(pid_t), then tha bus X window ID as a
binary integer of size sizeof(long). Integers is up in tha machine's
byte order, not network byte order or any other canonical byte order.

.TP
.I "\-\-close\-stderr"
Close tha standard error output stream before startin tha D\-Bus
daemon. I aint talkin' bout chicken n' gravy biatch. This is useful if you wanna capture dbus\-launch error
lyrics but you don't want dbus\-daemon ta keep tha stream open to
your application.

.TP
.I "\-\-config\-file=FILENAME"
Pass \-\-config\-file=FILENAME ta tha bus daemon, instead of passin it 
the \-\-session argument. Right back up in yo muthafuckin ass. See tha playa page fo' dbus\-daemon

.TP
.I "\-\-csh\-syntax"
Emit csh compatible code ta set up environment variables.

.TP
.I "\-\-exit\-with\-session"
If dis option is provided, a persistent "babysitter" process is ghon be 
created dat watches stdin fo' HUP n' tries ta connect ta tha X
server n' shit. If dis process gets a HUP on stdin or loses its X connection,
it kills tha message bus daemon.

.TP
.I "\-\-autolaunch=MACHINEID"
This option implies dat \fIdbus\-launch\fP should scan fo' a
previously\-started session n' reuse tha joints found there, so peek-a-boo, clear tha way, I be comin' thru fo'sho. If no
session is found, it will start a freshly smoked up session. I aint talkin' bout chicken n' gravy biatch. The
\-\-exit\-with\-session option is implied if \-\-autolaunch is given.
This option is fo' tha exclusive use of libdbus, you do not want to
use it manually. Well shiiiit, it may chizzle up in tha future.

.TP
.I "\-\-sh\-syntax"
Emit Bourne\-shell compatible code ta set up environment variables.

.TP
.I "\-\-version"
Print tha version of dbus\-launch

.SH NOTES

If you run
.B "dbus\-launch myapp"
(with any other options), dbus\-daemon will
.I not
exit when
.B myapp
terminates: dis is cuz
.B myapp
is assumed ta be part of a larger session, rather than a session up in its
own right.

.SH AUTHOR
See http://www.freedesktop.org/software/dbus/doc/AUTHORS

.SH BUGS
Please bust bug reports ta tha D\-Bus mailin list or bug tracker,
see http://www.freedesktop.org/software/dbus/
