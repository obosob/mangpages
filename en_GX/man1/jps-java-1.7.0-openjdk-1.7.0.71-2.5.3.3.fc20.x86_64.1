." Copyright (c) 2004, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH jps 1 "16 Mar 2012"

.LP
.SH "Name"
jps \- Java Virtual Machine Process Status Tool
.LP
.SH "SYNOPSIS"
.LP
.nf
\f3
.fl
\fP\f3jps\fP [ \f2options\fP ] [ \f2hostid\fP ]
.br

.fl
.fi

.LP
.SH "PARAMETERS"
.LP
.RS 3
.TP 3
options 
Command\-line options. 
.TP 3
hostid 
Da host identifier of tha host fo' which tha process report should be generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \f2hostid\fP may include optionizzle components dat indicate tha communications protocol, port number, n' other implementation specific data. 
.RE

.LP
.SH "DESCRIPTION"
.LP
.LP
Da \f3jps\fP tool lists tha instrumented HotSpot Java Virtual Machines (JVMs) on tha target system. Da tool is limited ta reportin shiznit on JVMs fo' which it has tha access permissions.
.LP
.LP
If \f3jps\fP is run without specifyin a \f2hostid\fP, it will look fo' instrumented JVMs on tha local host. If started wit a \f2hostid\fP, it will look fo' JVMs on tha indicated host, rockin tha specified protocol n' port fo' realz. A \f3jstatd\fP process be assumed ta be hustlin on tha target host.
.LP
.LP
Da \f3jps\fP command will report tha local VM identifier, or \f2lvmid\fP, fo' each instrumented JVM found on tha target system. Da \f3lvmid\fP is typically yo, but not necessarily, tha operatin systemz process identifier fo' tha JVM process. With no options, \f3jps\fP will list each Java applicationz \f2lvmid\fP followed by tha short form of tha applicationz class name or jar file name. Da short form of tha class name or JAR file name omits tha classs package shiznit or tha JAR filez path shiznit.
.LP
.LP
Da \f3jps\fP command uses tha \f3java\fP launcher ta find tha class name n' arguments passed ta tha \f2main\fP method. Y'all KNOW dat shit, muthafucka! If tha target JVM is started wit a cold-ass lil custom launcher, tha class name (or JAR file name) n' tha arguments ta tha \f2main\fP method aint gonna be available. In dis case, tha \f3jps\fP command will output tha strang \f2Unknown\fP fo' tha class name or JAR file name n' fo' tha arguments ta tha main method.
.LP
.LP
Da list of JVMs produced by tha \f3jps\fP command may be limited by tha permissions granted ta tha principal hustlin tha command. Y'all KNOW dat shit, muthafucka! Da command will only list tha JVMs fo' which tha principle has access muthafuckin rights as determined by operatin system specific access control mechanisms.
.LP
.LP
\f3NOTE:\fP This utilitizzle is unsupported n' may not be available up in future versionz of tha JDK. Well shiiiit, it aint currently available on Windows 98 n' Windows ME platforms.
.LP
.SH "OPTIONS"
.LP
.LP
Da \f3jps\fP command supports a fuckin shitload of options dat modify tha output of tha command. Y'all KNOW dat shit, muthafucka! These options is subject ta chizzle or removal up in tha future.
.LP
.RS 3
.TP 3
\-q 
Suppress tha output of tha class name, JAR file name, n' arguments passed ta tha \f2main\fP method, producin only a list of local VM identifiers. 
.TP 3
\-m 
Output tha arguments passed ta tha main method. Y'all KNOW dat shit, muthafucka! Da output may be null fo' embedded JVMs.  
.TP 3
\-l 
Output tha full package name fo' tha applicationz main class or tha full path name ta tha applicationz JAR file. 
.TP 3
\-v 
Output tha arguments passed ta tha JVM. 
.TP 3
\-V 
Output tha arguments passed ta tha JVM all up in tha flags file (the .hotspotrc file or tha file specified by tha \-XX:Flags=<\f2filename\fP> argument). 
.TP 3
\-Joption 
Pass \f2option\fP ta tha \f3java\fP launcher called by \f3jps\fP. For example, \f3\-J\-Xms48m\fP sets tha startup memory ta 48 megabytes. Well shiiiit, it aint nuthin but a cold-ass lil common convention fo' \f3\-J\fP ta pass options ta tha underlyin VM executin applications freestyled up in Java. 
.RE

.LP
.SS 
HOST IDENTIFIER
.LP
.LP
Da host identifier, or \f2hostid\fP be a strang dat indicates tha target system. Da syntax of tha \f2hostid\fP strang largely correspondz ta tha syntax of a URI:
.LP
.nf
\f3
.fl
[\fP\f4protocol\fP\f3:][[//]\fP\f4hostname\fP\f3][:\fP\f4port\fP\f3][/\fP\f4servername\fP\f3]\fP
.br
\f3
.fl
\fP
.fi

.LP
.RS 3
.TP 3
protocol 
Da communications protocol. If tha \f2protocol\fP is omitted n' a \f2hostname\fP aint specified, tha default protocol be a platform specific, optimized, local protocol. If tha \f2protocol\fP is omitted n' a \f2hostname\fP is specified, then tha default protocol is \f3rmi\fP. 
.TP 3
hostname 
A hostname or IP address indicatin tha target host. If \f2hostname\fP is omitted, then tha target host is tha local host. 
.TP 3
port 
Da default port fo' communicatin wit tha remote server n' shit. If tha \f2hostname\fP is omitted or tha \f2protocol\fP specifies a optimized, local protocol, then \f2port\fP is ignored. Y'all KNOW dat shit, muthafucka! Otherwise, treatment of tha \f2port\fP parameta is implementation specific. For tha default \f3rmi\fP protocol tha \f2port\fP indicates tha port number fo' tha rmiregistry on tha remote host. If \f2port\fP is omitted, n' \f2protocol\fP indicates \f3rmi\fP, then tha default rmiregistry port (1099) is used. Y'all KNOW dat shit, muthafucka! 
.TP 3
servername 
Da treatment of dis parameta dependz on tha implementation. I aint talkin' bout chicken n' gravy biatch. For tha optimized, local protocol, dis field is ignored. Y'all KNOW dat shit, muthafucka! For tha \f3rmi\fP protocol, dis parameta be a strang representin tha name of tha RMI remote object on tha remote host. Right back up in yo muthafuckin ass. See tha \f3\-n\fP option fo' tha jstatd(1) command. Y'all KNOW dat shit, muthafucka! 
.RE

.LP
.SH "OUTPUT FORMAT"
.LP
.LP
Da output of tha \f3jps\fP command bigs up tha followin pattern:
.LP
.nf
\f3
.fl
\fP\f4lvmid\fP\f3 [ [ \fP\f4classname\fP\f3 | \fP\f4JARfilename\fP\f3 | "Unknown"] [ \fP\f4arg\fP\f3* ] [ \fP\f4jvmarg\fP\f3* ] ]\fP
.br
\f3
.fl
\fP
.fi

.LP
.LP
Where all output tokens is separated by white space fo' realz. An \f2arg\fP dat includes embedded white space will introduce ambiguitizzle when attemptin ta map arguments ta they actual positionizzle parameters.
.br
.br
\f3NOTE\fP: Yo ass be advised not ta write scripts ta parse \f3jps\fP output since tha format may chizzle up in future releases. If you chizzle ta write scripts dat parse \f3jps\fP output, expect ta modify dem fo' future releasez of dis tool.
.br

.LP
.SH "EXAMPLES"
.LP
.LP
This section serves up examplez of tha \f3jps\fP command.
.LP
.LP
Listin tha instrumented JVMs on tha local host:
.LP
.nf
\f3
.fl
\fP\f3jps\fP
.br

.fl
18027 Java2Demo.JAR
.br

.fl
18032 jps
.br

.fl
18005 jstat
.br

.fl
.fi

.LP
.LP
Listin tha instrumented JVMs on a remote host:
.LP
.LP
This example assumes dat tha \f3jstat\fP server n' either tha its internal RMI registry or a separate external \f3rmiregistry\fP process is hustlin on tha remote host on tha default port (port 1099). Well shiiiit, it also assumes dat tha local host has appropriate permissions ta access tha remote host. This example also includes tha \f2\-l\fP option ta output tha long form of tha class names or JAR file names.
.LP
.nf
\f3
.fl
\fP\f3jps \-l remote.domain\fP
.br

.fl
3002 /opt/jdk1.7.0/demo/jfc/Java2D/Java2Demo.JAR
.br

.fl
2857 sun.tools.jstatd.jstatd
.br

.fl
.fi

.LP
.LP
Listin tha instrumented JVMs on a remote host wit a non\-default port fo' tha RMI registry
.LP
.LP
This example assumes dat tha \f3jstatd\fP server, wit a internal RMI registry bound ta port 2002, is hustlin on tha remote host. This example also uses tha \f2\-m\fP option ta include tha arguments passed ta tha \f2main\fP method of each of tha listed Java applications.
.LP
.nf
\f3
.fl
\fP\f3jps \-m remote.domain:2002\fP
.br

.fl
3002 /opt/jdk1.7.0/demo/jfc/Java2D/Java2Demo.JAR
.br

.fl
3102 sun.tools.jstatd.jstatd \-p 2002
.fl
.fi

.LP
.SH "SEE ALSO"
.LP
.RS 3
.TP 2
o
java(1) \- tha Java Application Launcher 
.TP 2
o
jstat(1) \- tha Java virtual machine Statistics Monitorin Tool 
.TP 2
o
jstatd(1) \- tha jstat daemon 
.TP 2
o
rmiregistry(1) \- tha Java Remote Object Registry 
.RE

.LP
 
