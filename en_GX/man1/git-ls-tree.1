'\" t
.\"     Title: git-ls-tree
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-LS\-TREE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-ls-tree \- List tha contentz of a tree object
.SH "SYNOPSIS"
.sp
.nf
\fIgit ls\-tree\fR [\-d] [\-r] [\-t] [\-l] [\-z]
            [\-\-name\-only] [\-\-name\-status] [\-\-full\-name] [\-\-full\-tree] [\-\-abbrev[=<n>]]
            <tree\-ish> [<path>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
Lists tha contentz of a given tree object, like what tha fuck "/bin/ls \-a" do up in tha current hustlin directory\&. Note that:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the behaviour is slightly different from dat of "/bin/ls" up in dat the
\fI<path>\fR
denotes just a list of patterns ta match, e\&.g\&. so specifyin directory name (without
\fI\-r\fR) will behave differently, n' order of tha arguments do not matter\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the behaviour is similar ta dat of "/bin/ls" up in dat the
\fI<path>\fR
is taken as relatizzle ta tha current hustlin directory\&. E\&.g\&. when yo ass is up in a gangbangin' finger-lickin' directory
\fIsub\fR
that has a gangbangin' finger-lickin' directory
\fIdir\fR, you can run
\fIgit ls\-tree \-r HEAD dir\fR
to list tha contentz of tha tree (that is
\fIsub/dir\fR
in
\fIHEAD\fR)\&. Yo ass don\(cqt wanna give a tree dat aint all up in tha root level (e\&.g\&.
git ls\-tree \-r HEAD:sub dir) up in dis case, as dat would result up in askin for
\fIsub/sub/dir\fR
in the
\fIHEAD\fR
commit\&. But fuck dat shiznit yo, tha word on tha street is dat tha current hustlin directory can be ignored by passin \-\-full\-tree option\&.
.RE
.SH "OPTIONS"
.PP
<tree\-ish>
.RS 4
Id of a tree\-ish\&.
.RE
.PP
\-d
.RS 4
Show only tha named tree entry itself, not its children\&.
.RE
.PP
\-r
.RS 4
Recurse tha fuck into sub\-trees\&.
.RE
.PP
\-t
.RS 4
Show tree entries even when goin ta recurse them\& yo. Has no effect if
\fI\-r\fR
was not passed\&.
\fI\-d\fR
implies
\fI\-t\fR\&.
.RE
.PP
\-l, \-\-long
.RS 4
Show object size of blob (file) entries\&.
.RE
.PP
\-z
.RS 4
\e0 line termination on output\&.
.RE
.PP
\-\-name\-only, \-\-name\-status
.RS 4
List only filenames (instead of tha "long" output), one per line\&.
.RE
.PP
\-\-abbrev[=<n>]
.RS 4
Instead of showin tha full 40\-byte hexadecimal object lines, show only a partial prefix\&. Non default number of digits can be specified wit \-\-abbrev=<n>\&.
.RE
.PP
\-\-full\-name
.RS 4
Instead of showin tha path names relatizzle ta tha current hustlin directory, show tha full path names\&.
.RE
.PP
\-\-full\-tree
.RS 4
Do not limit tha listin ta tha current hustlin directory\&. Implies \-\-full\-name\&.
.RE
.PP
[<path>\&...]
.RS 4
When paths is given, show dem (note dat dis isn\(cqt straight-up raw pathnames yo, but rather a list of patterns ta match)\&. Otherwise implicitly uses tha root level of tha tree as tha sole path argument\&.
.RE
.SH "OUTPUT FORMAT"
.sp
.if n \{\
.RS 4
.\}
.nf
<mode> SP <type> SP <object> TAB <file>
.fi
.if n \{\
.RE
.\}
.sp
Unless tha \-z option is used, TAB, LF, n' backslash charactas up in pathnames is represented as \et, \en, n' \e\e, respectively\&. This output format is compatible wit what tha fuck \-\-index\-info \-\-stdin of \fIgit update\-index\fR expects\&.
.sp
When tha \-l option is used, format chizzlez to
.sp
.if n \{\
.RS 4
.\}
.nf
<mode> SP <type> SP <object> SP <object size> TAB <file>
.fi
.if n \{\
.RE
.\}
.sp
Object size identified by <object> is given up in bytes, n' right\-justified wit minimum width of 7 characters\&. Object size is given only fo' blobs (file) entries; fo' other entries \- characta is used up in place of size\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
