.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "X509 1"
.TH X509 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
x509 \- Certificate display n' signin utility
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBx509\fR
[\fB\-inform DER|PEM|NET\fR]
[\fB\-outform DER|PEM|NET\fR]
[\fB\-keyform DER|PEM\fR]
[\fB\-CAform DER|PEM\fR]
[\fB\-CAkeyform DER|PEM\fR]
[\fB\-in filename\fR]
[\fB\-out filename\fR]
[\fB\-serial\fR]
[\fB\-hash\fR]
[\fB\-subject_hash\fR]
[\fB\-issuer_hash\fR]
[\fB\-subject\fR]
[\fB\-issuer\fR]
[\fB\-nameopt option\fR]
[\fB\-email\fR]
[\fB\-ocsp_uri\fR]
[\fB\-startdate\fR]
[\fB\-enddate\fR]
[\fB\-purpose\fR]
[\fB\-dates\fR]
[\fB\-modulus\fR]
[\fB\-pubkey\fR]
[\fB\-fingerprint\fR]
[\fB\-alias\fR]
[\fB\-noout\fR]
[\fB\-trustout\fR]
[\fB\-clrtrust\fR]
[\fB\-clrreject\fR]
[\fB\-addtrust arg\fR]
[\fB\-addreject arg\fR]
[\fB\-setalias arg\fR]
[\fB\-days arg\fR]
[\fB\-set_serial n\fR]
[\fB\-signkey filename\fR]
[\fB\-x509toreq\fR]
[\fB\-req\fR]
[\fB\-CA filename\fR]
[\fB\-CAkey filename\fR]
[\fB\-CAcreateserial\fR]
[\fB\-CAserial filename\fR]
[\fB\-text\fR]
[\fB\-C\fR]
[\fB\-md2|\-md5|\-sha1|\-mdc2\fR]
[\fB\-clrext\fR]
[\fB\-extfile filename\fR]
[\fB\-extensions section\fR]
[\fB\-engine id\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBx509\fR command be a multi purpose certificate utility. Well shiiiit, it can be
used ta display certificate shiznit, convert certificates to
various forms, sign certificate requests like a \*(L"mini \s-1CA\*(R"\s0 or edit
certificate trust settings.
.PP
Since there be a big-ass number of options they will split up into
various sections.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "\s-1INPUT, OUTPUT AND GENERAL PURPOSE OPTIONS\s0"
.IX Subsection "INPUT, OUTPUT AND GENERAL PURPOSE OPTIONS"
.IP "\fB\-inform DER|PEM|NET\fR" 4
.IX Item "-inform DER|PEM|NET"
This specifies tha input format normally tha command will expect a X509
certificate but dis can chizzle if other options like fuckin \fB\-req\fR are
present. Da \s-1DER\s0 format is tha \s-1DER\s0 encodin of tha certificate n' \s-1PEM\s0
is tha base64 encodin of tha \s-1DER\s0 encodin wit header n' foota lines
added. Y'all KNOW dat shit, muthafucka! Da \s-1NET\s0 option be a obscure Netscape server format dat is now
obsolete.
.IP "\fB\-outform DER|PEM|NET\fR" 4
.IX Item "-outform DER|PEM|NET"
This specifies tha output format, tha options have tha same meanin as tha 
\&\fB\-inform\fR option.
.IP "\fB\-in filename\fR" 4
.IX Item "-in filename"
This specifies tha input filename ta read a cold-ass lil certificate from or standard input
if dis option aint specified.
.IP "\fB\-out filename\fR" 4
.IX Item "-out filename"
This specifies tha output filename ta write ta or standard output by
default.
.IP "\fB\-md2|\-md5|\-sha1|\-mdc2\fR" 4
.IX Item "-md2|-md5|-sha1|-mdc2"
the digest ta use. This affects any signin or display option dat uses a message
digest, like fuckin tha \fB\-fingerprint\fR, \fB\-signkey\fR n' \fB\-CA\fR options. If not
specified then \s-1SHA1\s0 is used. Y'all KNOW dat shit, muthafucka! If tha key bein used ta sign wit be a \s-1DSA\s0 key
then dis option has no effect: \s-1SHA1\s0 be always used wit \s-1DSA\s0 keys.
For full list of digests peep openssl dgst \-h output.
.IP "\fB\-engine id\fR" 4
.IX Item "-engine id"
specifyin a engine (by its unique \fBid\fR string) will cause \fBx509\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms.
.SS "\s-1DISPLAY OPTIONS\s0"
.IX Subsection "DISPLAY OPTIONS"
Note: tha \fB\-alias\fR n' \fB\-purpose\fR options is also display options
but is busted lyrics bout up in tha \fB\s-1TRUST SETTINGS\s0\fR section.
.IP "\fB\-text\fR" 4
.IX Item "-text"
prints up tha certificate up in text form. Full details is output includin the
hood key, signature algorithms, issuer n' subject names, serial number
any extensions present n' any trust settings.
.IP "\fB\-certopt option\fR" 4
.IX Item "-certopt option"
customise tha output format used wit \fB\-text\fR. Da \fBoption\fR argument can be
a single option or multiple options separated by commas. Da \fB\-certopt\fR switch
may be also be used mo' than once ta set multiple options. Right back up in yo muthafuckin ass. See tha \fB\s-1TEXT OPTIONS\s0\fR
section fo' mo' shiznit.
.IP "\fB\-noout\fR" 4
.IX Item "-noout"
this option prevents output of tha encoded version of tha request.
.IP "\fB\-pubkey\fR" 4
.IX Item "-pubkey"
outputs tha the certificatez SubjectPublicKeyInfo block up in \s-1PEM\s0 format.
.IP "\fB\-modulus\fR" 4
.IX Item "-modulus"
this option prints up tha value of tha moduluz of tha hood key
contained up in tha certificate.
.IP "\fB\-serial\fR" 4
.IX Item "-serial"
outputs tha certificate serial number.
.IP "\fB\-subject_hash\fR" 4
.IX Item "-subject_hash"
outputs tha \*(L"hash\*(R" of tha certificate subject name. This is used up in OpenSSL to
form a index ta allow certificates up in a gangbangin' finger-lickin' directory ta be looked up by subject
name.
.IP "\fB\-issuer_hash\fR" 4
.IX Item "-issuer_hash"
outputs tha \*(L"hash\*(R" of tha certificate issuer name.
.IP "\fB\-hash\fR" 4
.IX Item "-hash"
synonym fo' \*(L"\-subject_hash\*(R" fo' backward compatibilitizzle reasons.
.IP "\fB\-subject_hash_old\fR" 4
.IX Item "-subject_hash_old"
outputs tha \*(L"hash\*(R" of tha certificate subject name rockin tha olda algorithm
as used by OpenSSL versions before 1.0.0.
.IP "\fB\-issuer_hash_old\fR" 4
.IX Item "-issuer_hash_old"
outputs tha \*(L"hash\*(R" of tha certificate issuer name rockin tha olda algorithm
as used by OpenSSL versions before 1.0.0.
.IP "\fB\-subject\fR" 4
.IX Item "-subject"
outputs tha subject name.
.IP "\fB\-issuer\fR" 4
.IX Item "-issuer"
outputs tha issuer name.
.IP "\fB\-nameopt option\fR" 4
.IX Item "-nameopt option"
option which determines how tha fuck tha subject or issuer names is displayed. Y'all KNOW dat shit, muthafucka! The
\&\fBoption\fR argument can be a single option or multiple options separated by
commas.  Alternatively tha \fB\-nameopt\fR switch may be used mo' than once to
set multiple options. Right back up in yo muthafuckin ass. See tha \fB\s-1NAME OPTIONS\s0\fR section fo' mo' shiznit.
.IP "\fB\-email\fR" 4
.IX Item "-email"
outputs tha email address(es) if any.
.IP "\fB\-ocsp_uri\fR" 4
.IX Item "-ocsp_uri"
outputs tha \s-1OCSP\s0 responder address(es) if any.
.IP "\fB\-startdate\fR" 4
.IX Item "-startdate"
prints up tha start date of tha certificate, dat is tha notBefore date.
.IP "\fB\-enddate\fR" 4
.IX Item "-enddate"
prints up tha expiry date of tha certificate, dat is tha notAfta date.
.IP "\fB\-dates\fR" 4
.IX Item "-dates"
prints up tha start n' expiry datez of a cold-ass lil certificate.
.IP "\fB\-fingerprint\fR" 4
.IX Item "-fingerprint"
prints up tha digest of tha \s-1DER\s0 encoded version of tha whole certificate
(see digest options).
.IP "\fB\-C\fR" 4
.IX Item "-C"
this outputs tha certificate up in tha form of a C source file.
.SS "\s-1TRUST SETTINGS\s0"
.IX Subsection "TRUST SETTINGS"
Please note these options is currently experimenstrual n' may well chizzle.
.PP
A \fBtrusted certificate\fR be a ordinary certificate which has several
additionizzle piecez of shiznit attached ta it like fuckin tha permitted
and prohibited usez of tha certificate n' a \*(L"alias\*(R".
.PP
Normally when a cold-ass lil certificate is bein verified at least one certificate
must be \*(L"trusted\*(R". By default a trusted certificate must be stored
locally n' must be a root \s-1CA:\s0 any certificate chain endin up in dis \s-1CA\s0
is then usable fo' any purpose.
.PP
Trust settings currently is only used wit a root \s-1CA.\s0 They allow a gangbangin' finer
control over tha purposes tha root \s-1CA\s0 can be used for. Shiiit, dis aint no joke. For example a \s-1CA\s0
may be trusted fo' \s-1SSL\s0 client but not \s-1SSL\s0 server use.
.PP
See tha description of tha \fBverify\fR utilitizzle fo' mo' shiznit on the
meanin of trust settings.
.PP
Future versionz of OpenSSL will recognize trust settings on any
certificate: not just root CAs.
.IP "\fB\-trustout\fR" 4
.IX Item "-trustout"
this causes \fBx509\fR ta output a \fBtrusted\fR certificate fo' realz. An ordinary
or trusted certificate can be input but by default a ordinary
certificate is output n' any trust settings is discarded. Y'all KNOW dat shit, muthafucka! With the
\&\fB\-trustout\fR option a trusted certificate is output fo' realz. A trusted
certificate be automatically output if any trust settings is modified.
.IP "\fB\-setalias arg\fR" 4
.IX Item "-setalias arg"
sets tha aliaz of tha certificate. This will allow tha certificate
to be referred ta rockin a nickname fo' example \*(L"Stevez Certificate\*(R".
.IP "\fB\-alias\fR" 4
.IX Item "-alias"
outputs tha certificate alias, if any.
.IP "\fB\-clrtrust\fR" 4
.IX Item "-clrtrust"
clears all tha permitted or trusted usez of tha certificate.
.IP "\fB\-clrreject\fR" 4
.IX Item "-clrreject"
clears all tha prohibited or rejected usez of tha certificate.
.IP "\fB\-addtrust arg\fR" 4
.IX Item "-addtrust arg"
addz a trusted certificate use fo' realz. Any object name can be used here
but currently only \fBclientAuth\fR (\s-1SSL\s0 client use), \fBserverAuth\fR
(\s-1SSL\s0 server use) n' \fBemailProtection\fR (S/MIME email) is used.
Other OpenSSL applications may define additionizzle uses.
.IP "\fB\-addreject arg\fR" 4
.IX Item "-addreject arg"
addz a prohibited use. Well shiiiit, it accepts tha same ol' dirty joints as tha \fB\-addtrust\fR
option.
.IP "\fB\-purpose\fR" 4
.IX Item "-purpose"
this option performs tests on tha certificate extensions n' outputs
the thangs up in dis biatch. For a mo' complete description peep tha \fB\s-1CERTIFICATE
EXTENSIONS\s0\fR section.
.SS "\s-1SIGNING OPTIONS\s0"
.IX Subsection "SIGNING OPTIONS"
Da \fBx509\fR utilitizzle can be used ta sign certificates n' requests: it
can thus behave like a \*(L"mini \s-1CA\*(R".\s0
.IP "\fB\-signkey filename\fR" 4
.IX Item "-signkey filename"
this option causes tha input file ta be self signed rockin tha supplied
private key.
.Sp
If tha input file be a cold-ass lil certificate it sets tha issuer name ta the
subject name (i.e.  make it self signed) chizzlez tha hood key ta the
supplied value n' chizzlez tha start n' end dates. Da start date is
set ta tha current time n' tha end date is set ta a value determined
by tha \fB\-days\fR option. I aint talkin' bout chicken n' gravy biatch fo' realz. Any certificate extensions is retained unless
the \fB\-clrext\fR option is supplied.
.Sp
If tha input be a cold-ass lil certificate request then a self signed certificate
is pimped rockin tha supplied private key rockin tha subject name in
the request.
.IP "\fB\-clrext\fR" 4
.IX Item "-clrext"
delete any extensions from a cold-ass lil certificate. This option is used when a
certificate is bein pimped from another certificate (for example with
the \fB\-signkey\fR or tha \fB\-CA\fR options). Normally all extensions are
retained.
.IP "\fB\-keyform PEM|DER\fR" 4
.IX Item "-keyform PEM|DER"
specifies tha format (\s-1DER\s0 or \s-1PEM\s0) of tha private key file used up in the
\&\fB\-signkey\fR option.
.IP "\fB\-days arg\fR" 4
.IX Item "-days arg"
specifies tha number of minutes ta cook up a cold-ass lil certificate valid for. Shiiit, dis aint no joke. Da default
is 30 days.
.IP "\fB\-x509toreq\fR" 4
.IX Item "-x509toreq"
converts a cold-ass lil certificate tha fuck into a cold-ass lil certificate request. Da \fB\-signkey\fR option
is used ta pass tha required private key.
.IP "\fB\-req\fR" 4
.IX Item "-req"
by default a cold-ass lil certificate is expected on input. With dis option a
certificate request is expected instead.
.IP "\fB\-set_serial n\fR" 4
.IX Item "-set_serial n"
specifies tha serial number ta use. This option can be used wit either
the \fB\-signkey\fR or \fB\-CA\fR options. If used up in conjunction wit tha \fB\-CA\fR
option tha serial number file (as specified by tha \fB\-CAserial\fR or
\&\fB\-CAcreateserial\fR options) aint used.
.Sp
Da serial number can be decimal or hex (if preceded by \fB0x\fR). Negative
serial numbers can also be specified but they use aint recommended.
.IP "\fB\-CA filename\fR" 4
.IX Item "-CA filename"
specifies tha \s-1CA\s0 certificate ta be used fo' signing. When dis option is
present \fBx509\fR behaves like a \*(L"mini \s-1CA\*(R".\s0 Da input file is signed by this
\&\s-1CA\s0 rockin dis option: dat is its issuer name is set ta tha subject name
of tha \s-1CA\s0 n' it is digitally signed rockin tha CAs private key.
.Sp
This option is normally combined wit tha \fB\-req\fR option. I aint talkin' bout chicken n' gravy biatch. Without the
\&\fB\-req\fR option tha input be a cold-ass lil certificate which must be self signed.
.IP "\fB\-CAkey filename\fR" 4
.IX Item "-CAkey filename"
sets tha \s-1CA\s0 private key ta sign a cold-ass lil certificate with. If dis option is
not specified then it be assumed dat tha \s-1CA\s0 private key is present in
the \s-1CA\s0 certificate file.
.IP "\fB\-CAserial filename\fR" 4
.IX Item "-CAserial filename"
sets tha \s-1CA\s0 serial number file ta use.
.Sp
When tha \fB\-CA\fR option is used ta sign a cold-ass lil certificate it uses a serial
number specified up in a gangbangin' file. This file consist of one line containing
an even number of hex digits wit tha serial number ta use fo' realz. Afta each
use tha serial number is incremented n' freestyled up ta tha file again.
.Sp
Da default filename consistz of tha \s-1CA\s0 certificate file base name with
\&\*(L".srl\*(R" appended. Y'all KNOW dat shit, muthafucka! For example if tha \s-1CA\s0 certificate file is called 
\&\*(L"mycacert.pem\*(R" it expects ta find a serial number file called \*(L"mycacert.srl\*(R".
.IP "\fB\-CAcreateserial\fR" 4
.IX Item "-CAcreateserial"
with dis option tha \s-1CA\s0 serial number file is pimped if it do not exist:
it will contain tha serial number \*(L"02\*(R" n' tha certificate bein signed will
have tha 1 as its serial number n' shit. Normally if tha \fB\-CA\fR option is specified
and tha serial number file do not exist it be a error.
.IP "\fB\-extfile filename\fR" 4
.IX Item "-extfile filename"
file containin certificate extensions ta use. If not specified then
no extensions is added ta tha certificate.
.IP "\fB\-extensions section\fR" 4
.IX Item "-extensions section"
the section ta add certificate extensions from. If dis option is not
specified then tha extensions should either be contained up in tha unnamed
(default) section or tha default section should contain a variable called
\&\*(L"extensions\*(R" which gotz nuff tha section ta use. Right back up in yo muthafuckin ass. See the
\&\fIx509v3_config\fR\|(5) manual page fo' detailz of the
extension section format.
.SS "\s-1NAME OPTIONS\s0"
.IX Subsection "NAME OPTIONS"
Da \fBnameopt\fR command line switch determines how tha fuck tha subject n' issuer
names is displayed. Y'all KNOW dat shit, muthafucka! If no \fBnameopt\fR switch is present tha default \*(L"oneline\*(R"
format is used which is compatible wit previous versionz of OpenSSL.
Each option is busted lyrics bout up in detail below, all options can be preceded by
a \fB\-\fR ta turn tha option off. Only tha straight-up original gangsta four will normally be used.
.IP "\fBcompat\fR" 4
.IX Item "compat"
use tha oldschool format. This is equivalent ta specifyin no name options at all.
.IP "\fB\s-1RFC2253\s0\fR" 4
.IX Item "RFC2253"
displays names compatible wit \s-1RFC2253\s0 equivalent ta \fBesc_2253\fR, \fBesc_ctrl\fR,
\&\fBesc_msb\fR, \fButf8\fR, \fBdump_nostr\fR, \fBdump_unknown\fR, \fBdump_der\fR,
\&\fBsep_comma_plus\fR, \fBdn_rev\fR n' \fBsname\fR.
.IP "\fBoneline\fR" 4
.IX Item "oneline"
a oneline format which is mo' readable than \s-1RFC2253.\s0 It be equivalent to
specifyin tha  \fBesc_2253\fR, \fBesc_ctrl\fR, \fBesc_msb\fR, \fButf8\fR, \fBdump_nostr\fR,
\&\fBdump_der\fR, \fBuse_quote\fR, \fBsep_comma_plus_space\fR, \fBspace_eq\fR n' \fBsname\fR
options.
.IP "\fBmultiline\fR" 4
.IX Item "multiline"
a multiline format. Well shiiiit, it is equivalent \fBesc_ctrl\fR, \fBesc_msb\fR, \fBsep_multiline\fR,
\&\fBspace_eq\fR, \fBlname\fR n' \fBalign\fR.
.IP "\fBesc_2253\fR" 4
.IX Item "esc_2253"
escape tha \*(L"special\*(R" charactas required by \s-1RFC2253\s0 up in a gangbangin' field That is
\&\fB,+"<>;\fR fo' realz. Additionally \fB#\fR is escaped all up in tha beginnin of a string
and a space characta all up in tha beginnin or end of a string.
.IP "\fBesc_ctrl\fR" 4
.IX Item "esc_ctrl"
escape control characters. That is dem wit \s-1ASCII\s0 joints less than
0x20 (space) n' tha delete (0x7f) character n' shit. They is escaped rockin the
\&\s-1RFC2253\s0 \eXX notation (where \s-1XX\s0 is two hex digits representin the
characta value).
.IP "\fBesc_msb\fR" 4
.IX Item "esc_msb"
escape charactas wit tha \s-1MSB\s0 set, dat is wit \s-1ASCII\s0 joints larger than
127.
.IP "\fBuse_quote\fR" 4
.IX Item "use_quote"
escapes some charactas by surroundin tha whole strang wit \fB"\fR characters,
without tha option all escapin is done wit tha \fB\e\fR character.
.IP "\fButf8\fR" 4
.IX Item "utf8"
convert all strings ta \s-1UTF8\s0 format first. This is required by \s-1RFC2253.\s0 If
yo ass is dirty enough ta git a \s-1UTF8\s0 compatible terminal then tha use
of dis option (and \fBnot\fR settin \fBesc_msb\fR) may result up in tha erect
display of multibyte (international) characters. Is dis option is not
present then multibyte charactas larger than 0xff is ghon be represented
usin tha format \eUXXXX fo' 16 bits n' \eWXXXXXXXX fo' 32 bits.
Also if dis option is off any UTF8Strings is ghon be converted ta their
characta form first.
.IP "\fBno_type\fR" 4
.IX Item "no_type"
this option do not attempt ta interpret multibyte charactas up in any
way. That is they content octets is merely dumped as though one octet
represents each character n' shit. This is useful fo' diagnostic purposes but
will result up in rather odd lookin output.
.IP "\fBshow_type\fR" 4
.IX Item "show_type"
show tha type of tha \s-1ASN1\s0 characta string. Da type precedes the
field contents, n' you can put dat on yo' toast. For example \*(L"\s-1BMPSTRING:\s0 Wuz crackalackin' World\*(R".
.IP "\fBdump_der\fR" 4
.IX Item "dump_der"
when dis option is set any fieldz dat need ta be hexdumped will
be dumped rockin tha \s-1DER\s0 encodin of tha field. Y'all KNOW dat shit, muthafucka! Otherwise just the
content octets is ghon be displayed. Y'all KNOW dat shit, muthafucka! Both options use tha \s-1RFC2253
\&\s0\fB#XXXX...\fR format.
.IP "\fBdump_nostr\fR" 4
.IX Item "dump_nostr"
dump non characta strang types (for example \s-1OCTET STRING\s0) if this
option aint set then non characta strang types is ghon be displayed
as though each content octet represents a single character.
.IP "\fBdump_all\fR" 4
.IX Item "dump_all"
dump all fields. This option when used wit \fBdump_der\fR allows the
\&\s-1DER\s0 encodin of tha structure ta be unambiguously determined.
.IP "\fBdump_unknown\fR" 4
.IX Item "dump_unknown"
dump any field whose \s-1OID\s0 aint recognised by OpenSSL.
.IP "\fBsep_comma_plus\fR, \fBsep_comma_plus_space\fR, \fBsep_semi_plus_space\fR, \fBsep_multiline\fR" 4
.IX Item "sep_comma_plus, sep_comma_plus_space, sep_semi_plus_space, sep_multiline"
these options determine tha field separators. Da first characta is
between RDNs n' tha second between multiple AVAs (multiple AVAs are
very rare n' they use is discouraged). Da options endin in
\&\*(L"space\*(R" additionally place a space afta tha separator ta make it
more readable. Da \fBsep_multiline\fR uses a linefeed characta for
the \s-1RDN\s0 separator n' a spaced \fB+\fR fo' tha \s-1AVA\s0 separator. Shiiit, dis aint no joke. Well shiiiit, it also
indents tha fieldz by four characters.
.IP "\fBdn_rev\fR" 4
.IX Item "dn_rev"
reverse tha fieldz of tha \s-1DN.\s0 This is required by \s-1RFC2253.\s0 As a side
effect dis also reverses tha order of multiple AVAs but dis is
permissible.
.IP "\fBnofname\fR, \fBsname\fR, \fBlname\fR, \fBoid\fR" 4
.IX Item "nofname, sname, lname, oid"
these options alta how tha fuck tha field name is displayed. Y'all KNOW dat shit, muthafucka! \fBnofname\fR do
not display tha field at all. \fBsname\fR uses tha \*(L"short name\*(R" form
(\s-1CN\s0 fo' commonName fo' example). \fBlname\fR uses tha long form.
\&\fBoid\fR represents tha \s-1OID\s0 up in numerical form n' is useful for
diagnostic purpose.
.IP "\fBalign\fR" 4
.IX Item "align"
align field joints fo' a mo' readable output. Only usable with
\&\fBsep_multiline\fR.
.IP "\fBspace_eq\fR" 4
.IX Item "space_eq"
places spaces round tha \fB=\fR characta which bigs up tha field
name.
.SS "\s-1TEXT OPTIONS\s0"
.IX Subsection "TEXT OPTIONS"
As well as customisin tha name output format, it be also possible to
customise tha actual fieldz printed rockin tha \fBcertopt\fR options when
the \fBtext\fR option is present. Da default behaviour is ta print all fields.
.IP "\fBcompatible\fR" 4
.IX Item "compatible"
use tha oldschool format. This is equivalent ta specifyin no output options at all.
.IP "\fBno_header\fR" 4
.IX Item "no_header"
don't print header shiznit: dat is tha lines sayin \*(L"Certificate\*(R" n' \*(L"Data\*(R".
.IP "\fBno_version\fR" 4
.IX Item "no_version"
don't print up tha version number.
.IP "\fBno_serial\fR" 4
.IX Item "no_serial"
don't print up tha serial number.
.IP "\fBno_signame\fR" 4
.IX Item "no_signame"
don't print up tha signature algorithm used.
.IP "\fBno_validity\fR" 4
.IX Item "no_validity"
don't print tha validity, dat is tha \fBnotBefore\fR n' \fBnotAfter\fR fields.
.IP "\fBno_subject\fR" 4
.IX Item "no_subject"
don't print up tha subject name.
.IP "\fBno_issuer\fR" 4
.IX Item "no_issuer"
don't print up tha issuer name.
.IP "\fBno_pubkey\fR" 4
.IX Item "no_pubkey"
don't print up tha hood key.
.IP "\fBno_sigdump\fR" 4
.IX Item "no_sigdump"
don't give a hexadecimal dump of tha certificate signature.
.IP "\fBno_aux\fR" 4
.IX Item "no_aux"
don't print up certificate trust shiznit.
.IP "\fBno_extensions\fR" 4
.IX Item "no_extensions"
don't print up any X509V3 extensions.
.IP "\fBext_default\fR" 4
.IX Item "ext_default"
retain default extension behaviour: attempt ta print up unsupported certificate extensions.
.IP "\fBext_error\fR" 4
.IX Item "ext_error"
print a error message fo' unsupported certificate extensions.
.IP "\fBext_parse\fR" 4
.IX Item "ext_parse"
\&\s-1ASN1\s0 parse unsupported extensions.
.IP "\fBext_dump\fR" 4
.IX Item "ext_dump"
hex dump unsupported extensions.
.IP "\fBca_default\fR" 4
.IX Item "ca_default"
the value used by tha \fBca\fR utility, equivalent ta \fBno_issuer\fR, \fBno_pubkey\fR, \fBno_header\fR,
\&\fBno_version\fR, \fBno_sigdump\fR n' \fBno_signame\fR.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Note: up in these examplez tha '\e' means tha example should be all on one
line.
.PP
Display tha contentz of a cold-ass lil certificate:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-text
.Ve
.PP
Display tha certificate serial number:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-serial
.Ve
.PP
Display tha certificate subject name:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-subject
.Ve
.PP
Display tha certificate subject name up in \s-1RFC2253\s0 form:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-subject \-nameopt RFC2253
.Ve
.PP
Display tha certificate subject name up in oneline form on a terminal
supportin \s-1UTF8:\s0
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-subject \-nameopt oneline,\-esc_msb
.Ve
.PP
Display tha certificate \s-1MD5\s0 fingerprint:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-noout \-fingerprint
.Ve
.PP
Display tha certificate \s-1SHA1\s0 fingerprint:
.PP
.Vb 1
\& openssl x509 \-sha1 \-in cert.pem \-noout \-fingerprint
.Ve
.PP
Convert a cold-ass lil certificate from \s-1PEM\s0 ta \s-1DER\s0 format:
.PP
.Vb 1
\& openssl x509 \-in cert.pem \-inform PEM \-out cert.der \-outform DER
.Ve
.PP
Convert a cold-ass lil certificate ta a cold-ass lil certificate request:
.PP
.Vb 1
\& openssl x509 \-x509toreq \-in cert.pem \-out req.pem \-signkey key.pem
.Ve
.PP
Convert a cold-ass lil certificate request tha fuck into a self signed certificate using
extensions fo' a \s-1CA:\s0
.PP
.Vb 2
\& openssl x509 \-req \-in careq.pem \-extfile openssl.cnf \-extensions v3_ca \e
\&        \-signkey key.pem \-out cacert.pem
.Ve
.PP
Sign a cold-ass lil certificate request rockin tha \s-1CA\s0 certificate above n' add user
certificate extensions:
.PP
.Vb 2
\& openssl x509 \-req \-in req.pem \-extfile openssl.cnf \-extensions v3_usr \e
\&        \-CA cacert.pem \-CAkey key.pem \-CAcreateserial
.Ve
.PP
Set a cold-ass lil certificate ta be trusted fo' \s-1SSL\s0 client use n' chizzle set its alias to
\&\*(L"Stevez Class 1 \s-1CA\*(R"\s0
.PP
.Vb 2
\& openssl x509 \-in cert.pem \-addtrust clientAuth \e
\&        \-setalias "Steve\*(Aqs Class 1 CA" \-out trust.pem
.Ve
.SH "NOTES"
.IX Header "NOTES"
Da \s-1PEM\s0 format uses tha header n' foota lines:
.PP
.Vb 2
\& \-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-
\& \-\-\-\-\-END CERTIFICATE\-\-\-\-\-
.Ve
.PP
it will also handle filez containing:
.PP
.Vb 2
\& \-\-\-\-\-BEGIN X509 CERTIFICATE\-\-\-\-\-
\& \-\-\-\-\-END X509 CERTIFICATE\-\-\-\-\-
.Ve
.PP
Trusted certificates have tha lines
.PP
.Vb 2
\& \-\-\-\-\-BEGIN TRUSTED CERTIFICATE\-\-\-\-\-
\& \-\-\-\-\-END TRUSTED CERTIFICATE\-\-\-\-\-
.Ve
.PP
Da conversion ta \s-1UTF8\s0 format used wit tha name options assumes that
T61Strings use tha \s-1ISO8859\-1\s0 characta set. This is wack but Netscape
and \s-1MSIE\s0 do dis as do nuff certificates. Right back up in yo muthafuckin ass. So although dis is incorrect
it is mo' likely ta display tha majoritizzle of certificates erectly.
.PP
Da \fB\-fingerprint\fR option takes tha digest of tha \s-1DER\s0 encoded certificate.
This is commonly called a \*(L"fingerprint\*(R". Because of tha nature of message
digests tha fingerprint of a cold-ass lil certificate is unique ta dat certificate and
two certificates wit tha same fingerprint can be considered ta be tha same.
.PP
Da Netscape fingerprint uses \s-1MD5\s0 whereas \s-1MSIE\s0 uses \s-1SHA1.\s0
.PP
Da \fB\-email\fR option searches tha subject name n' tha subject alternative
name extension. I aint talkin' bout chicken n' gravy biatch. Only unique email addresses is ghon be printed out: it will
not print tha same address mo' than once.
.SH "CERTIFICATE EXTENSIONS"
.IX Header "CERTIFICATE EXTENSIONS"
Da \fB\-purpose\fR option checks tha certificate extensions n' determines
what tha certificate can be used for. Shiiit, dis aint no joke. Da actual checks done is rather
complex n' include various hacks n' workaroundz ta handle broken
certificates n' software.
.PP
Da same code is used when verifyin untrusted certificates up in chains
so dis section is useful if a cold-ass lil chain is rejected by tha verify code.
.PP
Da basicConstraints extension \s-1CA\s0 flag is used ta determine whether the
certificate can be used as a \s-1CA.\s0 If tha \s-1CA\s0 flag is legit then it aint nuthin but a \s-1CA,\s0
if tha \s-1CA\s0 flag is false then it aint a \s-1CA. \s0\fBAll\fR CAs should have the
\&\s-1CA\s0 flag set ta true.
.PP
If tha basicConstraints extension be absent then tha certificate is
considered ta be a \*(L"possible \s-1CA\*(R"\s0 other extensions is checked according
to tha intended use of tha certificate fo' realz. A warnin is given up in dis case
because tha certificate should straight-up not be regarded as a \s-1CA:\s0 however
it be allowed ta be a \s-1CA\s0 ta work round some fucked up software.
.PP
If tha certificate be a V1 certificate (and thus has no extensions) and
it is self signed it be also assumed ta be a \s-1CA\s0 but a warnin be again
given: dis is ta work round tha problem of Verisign roots which is V1
self signed certificates.
.PP
If tha keyUsage extension is present then additionizzle restraints are
made on tha usez of tha certificate fo' realz. A \s-1CA\s0 certificate \fBmust\fR have the
keyCertSign bit set if tha keyUsage extension is present.
.PP
Da extended key usage extension places additionizzle restrictions on the
certificate uses. If dis extension is present (whether critical or not)
the key can only be used fo' tha purposes specified.
.PP
A complete description of each test is given below. Da comments about
basicConstraints n' keyUsage n' V1 certificates above apply ta \fBall\fR
\&\s-1CA\s0 certificates.
.IP "\fB\s-1SSL\s0 Client\fR" 4
.IX Item "SSL Client"
Da extended key usage extension must be absent or include tha \*(L"web client
authentication\*(R" \s-1OID. \s0 keyUsage must be absent or it must have the
digitalSignature bit set. Netscape certificate type must be absent or it must
have tha \s-1SSL\s0 client bit set.
.IP "\fB\s-1SSL\s0 Client \s-1CA\s0\fR" 4
.IX Item "SSL Client CA"
Da extended key usage extension must be absent or include tha \*(L"web client
authentication\*(R" \s-1OID.\s0 Netscape certificate type must be absent or it must have
the \s-1SSL CA\s0 bit set: dis is used as a work round if tha basicConstraints
extension be absent.
.IP "\fB\s-1SSL\s0 Server\fR" 4
.IX Item "SSL Server"
Da extended key usage extension must be absent or include tha \*(L"web server
authentication\*(R" and/or one of tha \s-1SGC\s0 OIDs.  keyUsage must be absent or it
must have tha digitalSignature, tha keyEncipherment set or both bits set.
Netscape certificate type must be absent or have tha \s-1SSL\s0 server bit set.
.IP "\fB\s-1SSL\s0 Server \s-1CA\s0\fR" 4
.IX Item "SSL Server CA"
Da extended key usage extension must be absent or include tha \*(L"web server
authentication\*(R" and/or one of tha \s-1SGC\s0 OIDs.  Netscape certificate type must
be absent or tha \s-1SSL CA\s0 bit must be set: dis is used as a work round if the
basicConstraints extension be absent.
.IP "\fBNetscape \s-1SSL\s0 Server\fR" 4
.IX Item "Netscape SSL Server"
For Netscape \s-1SSL\s0 clients ta connect ta a \s-1SSL\s0 server it must have the
keyEncipherment bit set if tha keyUsage extension is present. This aint
always valid cuz some cipher suites use tha key fo' digital signing.
Otherwise it is tha same ol' dirty as a aiiight \s-1SSL\s0 server.
.IP "\fBCommon S/MIME Client Tests\fR" 4
.IX Item "Common S/MIME Client Tests"
Da extended key usage extension must be absent or include tha \*(L"email
protection\*(R" \s-1OID.\s0 Netscape certificate type must be absent or should have the
S/MIME bit set. If tha S/MIME bit aint set up in netscape certificate type
then tha \s-1SSL\s0 client bit is tolerated as a alternatizzle but a warnin is shown:
this is cuz some Verisign certificates don't set tha S/MIME bit.
.IP "\fBS/MIME Signing\fR" 4
.IX Item "S/MIME Signing"
In addizzle ta tha common S/MIME client tests tha digitalSignature bit must
be set if tha keyUsage extension is present.
.IP "\fBS/MIME Encryption\fR" 4
.IX Item "S/MIME Encryption"
In addizzle ta tha common S/MIME tests tha keyEncipherment bit must be set
if tha keyUsage extension is present.
.IP "\fBS/MIME \s-1CA\s0\fR" 4
.IX Item "S/MIME CA"
Da extended key usage extension must be absent or include tha \*(L"email
protection\*(R" \s-1OID.\s0 Netscape certificate type must be absent or must have the
S/MIME \s-1CA\s0 bit set: dis is used as a work round if tha basicConstraints
extension be absent.
.IP "\fB\s-1CRL\s0 Signing\fR" 4
.IX Item "CRL Signing"
Da keyUsage extension must be absent or it must have tha \s-1CRL\s0 signin bit
set.
.IP "\fB\s-1CRL\s0 Signin \s-1CA\s0\fR" 4
.IX Item "CRL Signin CA"
Da aiiight \s-1CA\s0 tests apply. Except up in dis case tha basicConstraints extension
must be present.
.SH "BUGS"
.IX Header "BUGS"
Extensions up in certificates is not transferred ta certificate requests and
vice versa.
.PP
It be possible ta produce invalid certificates or requests by specifyin the
wrong private key or rockin inconsistent options up in some cases: these should
be checked.
.PP
There should be options ta explicitly set such thangs as start n' end
dates rather than a offset from tha current time.
.PP
Da code ta implement tha verify behaviour busted lyrics bout up in tha \fB\s-1TRUST SETTINGS\s0\fR
is currently bein pimped. Y'all KNOW dat shit, muthafucka! Well shiiiit, it thus raps bout tha intended behaviour rather
than tha current behaviour. Shiiit, dis aint no joke. Well shiiiit, it is hoped dat it will represent realitizzle in
OpenSSL 0.9.5 n' later.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIreq\fR\|(1), \fIca\fR\|(1), \fIgenrsa\fR\|(1),
\&\fIgendsa\fR\|(1), \fIverify\fR\|(1),
\&\fIx509v3_config\fR\|(5)
.SH "HISTORY"
.IX Header "HISTORY"
Before OpenSSL 0.9.8, tha default digest fo' \s-1RSA\s0 keys was \s-1MD5.\s0
.PP
Da hash algorithm used up in tha \fB\-subject_hash\fR n' \fB\-issuer_hash\fR options
before OpenSSL 1.0.0 was based on tha deprecated \s-1MD5\s0 algorithm n' tha encoding
of tha distinguished name. In OpenSSL 1.0.0 n' lata it is based on a
canonical version of tha \s-1DN\s0 rockin \s-1SHA1.\s0 This means dat any directories using
the oldschool form must have they links rebuilt rockin \fBc_rehash\fR or similar.
