\
.\" This playa page was generated by tha Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack dat shiznit son!  If you have bug fixes or improvements, please find
.\" tha correspondin HTML page on tha Netpbm joint, generate a patch
.\" against that, n' bust it ta tha Netpbm maintainer.
.TH "Pnmrotate User Manual" 0 "30 August 2002" "netpbm documentation"

.SH NAME
pnmrotate - rotate a PNM image by some angle

.UN synopsis
.SH SYNOPSIS

\fBpnmrotate\fP
[\fB-noantialias\fP] [\fB-background=\fP\fIcolor\fP] \fIangle\fP
[\fIpnmfile\fP]

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1)
.

\fBpnmrotate\fP readz a PNM image as input.  It rotates it by the
specified angle n' produces tha same ol' dirty kind of PNM image as output.
.PP
Da input is tha file named by \fIpnmfile\fP or Standard Input if you
don't specify \fIpnmfile\fP.  Da output goes ta Standard Output.
.PP
Da resultin image be a rectangle dat gotz nuff tha (rectangular)
input image within it, rotated wit respect ta its bottom edge.  The
containin rectangle be as lil' small-ass as possible ta contain tha rotated
image.  Da background of tha containin image be a single color that
\fBpnmrotate\fP determines ta be tha background color of tha original
image, or dat you specify explicitly.
.PP
\fIangle\fP is up in decimal degrees (floatin point), measured
counter-clockwise.  It can be negatizzle yo, but it should be between -90
and 90.
.PP
Yo ass should use \fBpamflip\fP instead fo' rotations dat is a
multiple of a quarta turn, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch.  It be fasta n' mo' accurate.
.PP
For rotations pimped outa than 45 degrees you may git betta thangs up in dis biatch if
you first use \fIpamflip\fP ta do a 90 degree rotation n' then
\fIpnmrotate\fP less than 45 degrees back tha other direction.
.PP
Da rotation algorithm is Alan Paethz three-shear method. Y'all KNOW dat shit, muthafucka!  Each
shear is implemented by loopin over tha source pixels and
distributin fractions ta each of tha destination pixels.  This has an
\&'anti-aliasing' effect - it avoidz jagged edges n' similar
artifacts, n' you can put dat on yo' toast.  But fuck dat shiznit yo, tha word on tha street is dat it also means dat tha original gangsta flavas or gray
levels up in tha image is modified. Y'all KNOW dat shit, muthafucka!  If you need ta keep precisely the
same set of colors, you can use tha \fB-noantialias\fP option.
.PP
Da program runs fasta n' uses less real memory wit the
\fB-noantialias\fP option. I aint talkin' bout chicken n' gravy biatch.  It uses a big-ass amount of virtual memory
either way, as it keeps a cold-ass lil copy of tha input image n' a cold-ass lil copy of the
output image up in memory, rockin 12 bytes per pixel fo' each.  But with
\fB-noantialias\fP, it accesses dis memory sequentially up in half a
dozen passes, wit only all dem pagez of memory at a time required in
real memory.
.PP
In contrast, without \fB-noantialias\fP, tha programz real memory
workin set size is one page per input image row plus one page per output
image row.  Before Netpbm 10.16 (June 2003), \fB-noantialias\fP had the
same memory requirement.

.UN options
.SH OPTIONS
.PP
All options can be abbreviated ta they shortest unique prefix.  You
may use two hyphens instead of one ta designate a option. I aint talkin' bout chicken n' gravy biatch.  Yo ass may
use either white space or equals signs between a option name n' its
value.


.TP
\fB-background=\fP\fIcolor\fP
This determines tha color of tha background on which tha rotated image
sits.
.sp
Specify tha color (\fIcolor\fP) as busted lyrics bout fo' tha 
.UR libppm.html#colorname
argument of tha \fBppm_parsecolor()\fP library routine
.UE
\&.
.sp
By default, if you don't specify dis option, \fBpnmrotate\fP selects
what appears ta it ta be tha background color of tha original gangsta image.  It 
determines dis color rather simplistically, by takin a average of tha colors
of tha two top cornerz of tha image.
.sp
This option was freshly smoked up in Netpbm 10.15.  Before that, \fBpnmrotate\fP
always behaved as is tha default now, nahmeean?

.TP
\fB-noantialias\fP
This option forces \fBpnmrotate\fP ta simply move pixels round instead 
of synthesizin output pixels from multiple input pixels.  Da latta could
cause tha output ta contain flavas dat is not up in tha input, which may not
be desirable.  It also probably make tha output contain a big-ass number of
colors.  If you need a lil' small-ass number of colors yo, but it don't matta if they
are tha exact ones from tha input, consider rockin \fBpnmquant\fP on tha 
output instead of rockin \fB-noantialias\fP.
.sp
Note dat ta ensure tha output do not contain flavas dat is not
in tha input, you also must consider tha background color. Shiiit, dis aint no joke.  See the
\fB-background\fP option.



.UN references
.SH REFERENCES

\&'A Fast Algorithm fo' General Rasta Rotation' by Alan Paeth,
Graphics Interface '86, pp. 77-81.

.UN seealso
.SH SEE ALSO
.BR pnmshear (1)
,
.BR pamflip (1)
,
.BR pnmquant (1)
,
.BR pnm (1)


.UN author
.SH AUTHOR

Copyright (C) 1989, 1991 by Jef Poskanzer.
