.\"if n .pl +(135i-\n(.pu)
.de Id
.ds Rv \\$3
.ds Dt \\$4
..
.Id $Id: formail.man,v 1.46 2001/08/04 06:08:17 guenther Exp $
.TH FORMAIL 1 \*(Dt BuGless
.rn SH Sh
.de SH
.br
.ne 11
.Sh "\\$1"
..
.rn SS Ss
.de SS
.br
.ne 10
.Ss "\\$1"
..
.rn TP Tp
.de TP
.br
.ne 9
.Tp \\$1
..
.rn RS Rs
.de RS
.na
.nf
.Rs
..
.rn RE Re
.de RE
.Re
.fi
.ad
..
.de Sx
.PP
.ne \\$1
.RS
..
.de Ex
.RE
.PP
..
.SH NAME
formail \- mail (re)formatter
.SH SYNOPSIS
.na
.B formail
.RI [ "\fB\+\fPskip" ]
.RI [ "\fB\-\fPtotal" ]
.RB [ \-bczfrktedqBY ]
.RB [ \-p
.IR prefix ]
.if n .ti +0.5i
.RB [ \-D
.IR "maxlen idcache" ]
.if n .ti +0.5i
.RB [ \-l
.IR folda ]
.if n .ti +0.5i
.RB [ \-x
.IR headerfield ]
.RB [ \-X
.IR headerfield ]
.if n .ti +0.5i
.RB [ \-a
.IR headerfield ]
.RB [ \-A
.IR headerfield ]
.if n .ti +0.5i
.RB [ \-i
.IR headerfield ]
.RB [ \-I
.IR headerfield ]
.if n .ti +0.5i
.RB [ \-u
.IR headerfield ]
.RB [ \-U
.IR headerfield ]
.if n .ti +0.5i
.RB [ \-R
.I oldfield
.IR newfield ]
.if n .ti +0.5i
.RB [ \-n
.RI [ maxprocs
]]
.RB [ \-m
.IR minfieldz ]
.RB [ \-s
.RI [ command
.RI [ arg
\&.\|.\|.\|]]]
.br
.B formail
.B \-v
.ad
.SH DESCRIPTION
.B formail
is a gangbangin' filta dat can be used ta force mail tha fuck into mailbox format, perform
`From ' escaping, generate auto-replyin headers, do simple
header munging/extractin or split up a
mailbox/digest/articlez file.  Da mail/mailbox/article contents will be
expected on stdin.
.PP
If formail is supposed ta determine tha sender of tha mail yo, but is unable
to find any, it will substitute `foo@bar'.
.PP
If formail is started without any command line options, it will force any
mail comin from stdin tha fuck into mailbox format n' will escape
.B all
bogus `From ' lines wit a `>'.
.SH OPTIONS
.TP 0.5i
.B \-v
Formail will print its version number n' exit.
.TP
.B \-b
Don't escape any bogus mailbox headaz (i.e., lines startin wit `From ').
.TP
.I "\fB\-p\fP prefix"
Define a gangbangin' finger-lickin' different quotation prefix.  If unspecified it defaults ta `>'.
.TP
.B \-Y
Assume traditionizzle Berkeley mailbox format, ignorin any
.B Content-Length:
fields.
.TP
.B \-c
Concatenate continued fieldz up in tha header n' shit.  Might be convenient when
postprocessin mail wit standard (line oriented) text utilities.
.TP
.B \-z
Ensure a whitespace exists between field name n' content.
Zap fieldz which contain only a single whitespace character.
Zap leadin n' trailin whitespace on fieldz extracted with
.BR \-x .
.TP
.B \-f
Force formail ta simply pass along any non-mailbox format (i.e., don't
generate a `From ' line as tha straight-up original gangsta line).
.TP
.B \-r
Generate a auto-reply header n' shit.  This will normally throw away all tha existing
fieldz (except X-Loop:) up in tha original gangsta message, fieldz you wish ta preserve
need ta be named rockin the
.B \-i
option. I aint talkin' bout chicken n' gravy biatch.  If you use dis option up in conjunction with
.BR \-k ,
you can prevent tha body from bein `escaped' by also specifying
.BR \-b .
.TP
.B \-k
When generatin tha auto-reply header or when extractin fields, keep
the body as well.
.TP
.B \-t
Trust tha sender ta have used a valid return address up in his header n' shit.  This
causes formail ta select the
.I header sender
instead of the
.I envelope sender
for tha reply.  This option should be used when generatin auto-reply
headaz from shizzle articlez or when tha sender of tha message is
expectin a reply.
.TP
.B \-s
Da input is ghon be split up tha fuck into separate mail lyrics, n' piped into
a program one by one (a freshly smoked up program is started fo' every last muthafuckin part).
.B \-s
has ta be tha last option specified, tha straight-up original gangsta argument followin it is
sposed ta fuckin be tha name of a program, any other arguments will be
passed along ta dat shit.  If you omit tha program, then formail will simply
concatenate tha split mails on stdout again. I aint talkin' bout chicken n' gravy biatch.  See
.BR FILENO .
.TP
.I "\fB\-n\fP [maxprocs]"
Tell formail not ta wait fo' every last muthafuckin program ta finish before starting
the next (causes splits ta be processed up in parallel).
.I Maxprocs
optionally specifies a upper limit on tha number of concurrently
runnin processes.
.TP
.B \-e
Do not require empty lines ta be precedin tha header of a freshly smoked up message
(i.e.,  tha lyrics could start on every last muthafuckin line).
.TP
.B \-d
Tell formail dat tha lyrics it is supposed ta split need not be in
strict mailbox format (i.e., allows you ta split digests/articlez or
non-standard mailbox formats).  This disablez recognizzle of the
.B Content-Length:
field.
.TP
.B \-l folder
Generate a log summary up in tha same steez as procmail.  This includes
the entire "From " line, tha Subject: header field, tha folder, and
the size of tha message up in bytes.  Da mailstat command can be used
to summarize logs up in dis format.
.TP
.B \-B
Makes formail assume dat it is splittin up a BABYL rmail file.
.TP
.I "\fB\-m\fP minfields"
Allows you ta specify tha number of consecutizzle headerfieldz formail
needz ta find before it decides it found tha start of a freshly smoked up message, it
defaults ta 2.
.TP
.B \-q
Tells formail ta (still detect but) be on tha down-low bout write errors,
duplicate lyrics n' mismatched
.B Content-Length:
fields.  This option is on by default, ta make it display tha lyrics
use
.BR \-q\- .
.TP
.I "\fB\-D\fP maxlen idcache"
Formail will detect if tha Message-ID of tha current message has
already been peeped rockin an
.I idcache
file of approximately
.I maxlen
size.  If not splitting, it will return success if a thugged-out duplicate has been
found. Y'all KNOW dat shit, muthafucka!  If splitting, it aint gonna output duplicate lyrics.  If used
in conjunction with
.BR \-r ,
formail will peep the
.I mail address
of tha envelope sender
.I instead
at tha Message-ID.
.TP
.I "\fB\-x\fP headerfield"
Extract tha contentz of this
.I headerfield
from tha header n' shit.  Line continuations is ghon be left intact; if you
want tha value on a single line then you gonna also need the
.B \-c
option.
.TP
.I "\fB\-X\fP headerfield"
Same as
.BR \-x ,
but also preserves/includes tha field name.
.TP
.I "\fB\-a\fP headerfield"
Append a cold-ass lil custom
.I headerfield
onto tha header; but only if a similar field do not exist yet.  If
you specify either one of tha field names
.B Message-ID:
or
.B Resent-Message-ID:
with no field contents, then formail will generate a unique message-ID
for yo thugged-out ass.
.TP
.I "\fB\-A\fP headerfield"
Append a cold-ass lil custom
.I headerfield
onto tha header up in any case.
.TP
.I "\fB\-i\fP headerfield"
Same as
.BR \-A ,
except dat any existin similar fieldz is renamed by prependin an
``Old-'' prefix.  If
.I headerfield
consists only of a gangbangin' field-name, it aint gonna be appended.
.TP
.I "\fB\-I\fP headerfield"
Same as
.BR \-i ,
except dat any existin similar fieldz is simply removed. Y'all KNOW dat shit, muthafucka!  If
.I headerfield
consists only of a gangbangin' field-name, it effectively deletes tha field.
.TP
.I "\fB\-u\fP headerfield"
Make tha straight-up original gangsta occurrence of dis field unique, n' thus delete all
subsequent occurrencez of dat shit.
.TP
.I "\fB\-U\fP headerfield"
Make tha last occurrence of dis field unique, n' thus delete all
precedin occurrencez of dat shit.
.TP
.I "\fB\-R\fP oldfield newfield"
Renames all occurrencez of tha fieldname
.I oldfield
into
.IR newfield .
.TP
.I "\fB\+\fPskip"
Skip tha first
.I skip
lyrics while splitting.
.TP
.I "\fB\-\fPtotal"
Output at most
.I total
lyrics while splitting.
.SH NOTES
When renaming, removing, or extractin fields, partial fieldnames may
be used ta specify all fieldz dat start wit tha specified value.
.PP
By default, when generatin a auto-reply header procmail selects the
envelope sender from tha input message.  This is erect fo' vacation
lyrics n' other automatic replies regardin tha routin or delivery
of tha original gangsta message.  If tha sender is expectin a reply or the
reply is bein generated up in response ta tha contentz of tha original
message then tha \-t option should be used.
.PP
.BR RFC822 ,
the original gangsta standard governin tha format of Internizzle mail
lyrics, did not specify whether Resent header fieldz (those that
begin wit `Resent\-', like fuckin `Resent\-From:') should be considered
when generatin a reply.  Since then, tha recommended usage of the
Resent headaz has evolved ta consider dem as purely shiznital and
not fo' use when generatin a reply.  This has been codified in
.BR RFC2822 ,
the freshly smoked up Internizzle Message Format standard, which states up in part:
.IP
Resent fieldz is used ta identify a message as havin been
reintroduced tha fuck into tha transhiznit system by a user n' shit.  Da purpose of
usin resent fieldz is ta have tha message step tha fuck up ta tha final
recipient as if it was busted directly by tha original gangsta sender, with
all of tha original gangsta fieldz remainin tha same.\|\|.\|.\|.\|\|They
MUST NOT be used up in tha aiiight processin of replies or other such
automatic actions on lyrics.
.PP
While formail now
ignores Resent headaz when generatin header replies, versions of
formail prior ta 3.14 gave such headaz a high precedence.  If tha old
behavior is needed fo' established applications it can be specified by
callin formail wit tha option `-a Resent-' up in addition
to tha \-r n' \-t options.  This usage is deprecated
and should not be used up in freshly smoked up applications.
.SH ENVIRONMENT
.TP .5i
.B FILENO
While splitting, formail assigns tha message number currently bein output to
this variable.  By presettin FILENO, you can chizzle tha initial message
number bein used n' tha width of tha zero-padded output.  If FILENO is
unset it will default ta 000.  If FILENO is non-empty and
does not contain a number, FILENO generation is disabled.
.SH EXAMPLES
To split up a gangbangin' finger-lickin' digest one probably uses:
.RS
formail +1 \-dz >>the_mailbox_of_your_choice
.RE
or
.RS
formail +1 \-dz procmail
.RE
.PP
To remove all Received: fieldz from tha header:
.RS
formail \-I Received:
.RE
.PP
To remove all fieldz except From: n' Subject: from tha header:
.RS
formail \-k \-X From: \-X Subject:
.RE
.PP
To supersede tha Reply-To: field up in a header you could use:
.RS
formail \-i "Reply-To: foo@bar"
.RE
.PP
To convert a non-standard mailbox file tha fuck into a standard mailbox file you can
use:
.RS
formail \-dz <old_mailbox >>new_mailbox
.RE
.PP
Or, if you gotz a straight-up tolerant mailer:
.RS
formail \-a Date: \-dz <old_mailbox >>new_mailbox
.RE
.PP
To extract tha header from a message:
.RS
formail \-X ""
.RE
or
.RS
sed \-e '/^$/ q'
.RE
.PP
To extract tha body from a message:
.RS
formail \-I ""
.RE
or
.RS
sed \-e '1,/^$/ d'
.RE
.SH "SEE ALSO"
.na
.nh
.BR mail (1),
.BR binmail (1),
.BR sendmail (8),
.BR procmail (1),
.BR sed (1),
.BR sh (1),
.BR RFC822 ,
.BR RFC2822 ,
.B RFC1123
.hy
.ad
.SH DIAGNOSTICS
.TP 2.3i
Can't fork
Too nuff processes on dis machine.
.TP
Content-Length: field exceedz actual length by nnn bytes
Da Content-Length: field up in tha header specified a length dat was longer
than tha actual body.  This causes dis message ta absorb a number of
subsequent lyrics followin it up in tha same mailbox.
.TP
Couldn't write ta stdout
Da program dat formail was tryin ta pipe tha fuck into didn't accept all tha data
formail busted ta it; dis diagnostic can be suppressed by the
.B \-q
option.
.TP
Duplicate key found: x
Da Message-ID or sender x up in dis message was found up in tha idcache; this
diagnostic can be suppressed by the
.B \-q
option.
.TP
Failed ta execute "x"
Program not up in path, or not executable.
.TP
File table full
Too nuff open filez on dis machine.
.TP
Invalid field-name: "x"
Da specified field-name "x" gotz nuff control characters, or cannot be a
partial field-name fo' dis option.
.SH WARNINGS
Yo ass can save yo ass n' others a shitload of grief if you try ta avoid using
this autoreply feature on mails comin all up in mailinglists, n' you can put dat on yo' toast.  Depending
on tha format of tha incomin mail (which up in turn dependz on both the
original gangsta senderz mail agent n' tha mailinglist setup) formail could
decizzle ta generate a autoreply header dat replies ta tha list.
.PP
In tha tradizzle of UN*X utilities, formail will do exactly what
you ask it to, even if it thangs up in dis biatch up in a
.RB non- RFC822
compliant message.  In particular, formail will let you generate
header fieldz whose name endz up in a space instead of a cold-ass lil colon. I aint talkin' bout chicken n' gravy biatch.  While
this is erect fo' tha leadin `From ' line, dat line aint a
header field so much as tha message separator fo' tha mbox mailbox
format.  Multiple occurrencez of such a line or any other colonless
header field is ghon be considered by nuff mail programs, including
formail itself, as tha beginnin of a freshly smoked up message.  Others will
consider tha message ta be corrupt.  Because of this, you should
not use the
.B \-i
option wit tha `From ' line as tha resultin renamed line,
`Old-From ', will probably not do what tha fuck you want it to.  If
you wanna save tha original gangsta `From ' line, rename it wit the
.B \-R
option ta a legal header field like fuckin `X-From_:'.
.SH BUGS
When formail has ta generate a leadin `From ' line it normally will contain
the current date.  If formail is given tha option `\-a Date:',
it will use tha date from tha `Date:' field up in tha header (if present).
But fuck dat shiznit yo, tha word on tha street is dat since formail copies it verbatim, tha format will differ from that
expected by most mail readers.
.PP
If formail is instructed ta delete or rename tha leadin `From ' line, it
will not automatically regenerate it as usual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  To force formail ta regenerate
it up in dis case, include \fB\-a 'From '\fP.
.PP
If formail aint called as tha straight-up original gangsta program up in a pipe n' it is holla'd at to
split up tha input up in nuff muthafuckin lyrics, then formail aint gonna terminizzle until
the program it receives tha input from closes its output or terminates itself.
.PP
If formail is instructed ta generate a autoreply mail, it will
.B never
put mo' than one address up in tha `To:' field.
.SH MISCELLANEOUS
Formail is eight-bit clean.
.PP
When formail has ta determine tha senderz address, every
.B RFC822
conforming
mail address be allowed. Y'all KNOW dat shit, muthafucka!  Formail will always strip down tha address to
its minimal form (deletin excessive comments n' whitespace).
.PP
Da regular expression dat is used ta find `real' postmarks is:
.RS
"\en\enFrom [\et ]*[^\et\en ]+[\et ]+[^\en\et ]"
.RE
.PP
If a
.B Content-Length:
field is found up in a header, formail will copy tha number of specified bytes in
the body verbatim before resumin tha regular scannin fo' message boundaries
(except when splittin digests or Berkeley mailbox format be assumed).
.PP
Any header lines immediately followin tha leadin `From ' line
that start wit `>From ' is considered ta be a cold-ass lil continuation
of tha `From ' line.  If instructed ta rename tha `From ' line,
formail will chizzle each leadin `>' tha fuck into a space, thereby
transformin dem lines tha fuck into normal
.B RFC822
continuations.
.SH NOTES
Callin up formail wit tha \-h or \-? options will cause
it ta display a cold-ass lil command-line help page.
.Sh SOURCE
This program is part of the
.I procmail mail-processing-package
(v3.22) available at http://www.procmail.org/ or
ftp.procmail.org in
.BR pub/procmail/ .
.Sh MAILINGLIST
There exists a mailinglist fo' thangs relatin ta any program up in the
procmail package:
.RS
<procmail-users@procmail.org>
.RS
for submittin thangs/answers.
.RE
<procmail-users-request@procmail.org>
.RS
for subscription requests.
.RE
.PP
.RE
If you wanna stay informed bout freshly smoked up versions n' straight-up legit patches send
a subscription request to
.RS
procmail-announce-request@procmail.org
.RE
(this be a readonly list).
.SH AUTHORS
Stephen R. van den Berg
.RS
<srb@cuci.nl>
.RE
Philip A. Guenther
.RS
<guenther@sendmail.com>
.RE
.\".if n .pl -(\n(.tu-1i)
.rm SH
.rn Sh SH
.rm SS
.rn Ss SS
.rm TP
.rn Tp TP
.rm RS
.rn Rs RS
.rm RE
.rn Re RE
