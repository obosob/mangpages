.TH MCPP "1" "Mar 2008" "alternatizzle CPP" "Commandz fo' GCC"
.SH NAME
mcpp \- Matsui CPP, a alternatizzle C preprocessor
.SH SYNOPSIS
mcpp [\fIoptions\fP] [\fI<infile>\fP [\fI<outfile>\fP]]
.SH DESCRIPTION
\fBmcpp\fR be a C/C++ preprocessor wit tha highest conformizzle which implements C90, C99 n' C++98. 
\fBmcpp\fR has plentiful diagnostics n' nuff #pragmas. 
It be useful ta check portabilitizzle of yo' program, n' also useful ta debug fucked up macro.
This be a man-page fo' \fBmcpp\fR of GCC-specific-build.
.SH OPTIONS
\fBmcpp\fR expects two file names as arguments, \fI<infile>\fR and
\&\fI<outfile>\fR.  If not specified, \fI<infile>\fR defaults ta standard input
and \fI<outfile>\fR defaults ta standard output.
.PP
It takes tha followin options.
.PP
Commonly used options:
.IP "\fB-$, -fno-dollars-in-identifiers"
Forbid '$' up in identifiers.
.IP \fB-@MODE
Specify preprocessin mode. MODE should be one of these 4:
.IP "    \fB-@std"
Standard conformin mode. (default)
.IP "    \fB-@poststd, -@post"
special 'post-Standard' mode.
.IP "    \fB-@kr"
K&R 1st mode.
.IP "    \fB-@oldprep, -@old"
"old_preprocessor" mode (i.e. "Reiser model" cpp).
.IP "    \fB-@compat"
Standard 'compatible' mode.
.IP \fB-b
Output #line lines up in C source steez (default: GCC style).
.IP \fB-C
Output also comments.
.IP "\fB-D <macro>[=<value>]"
Define <macro> as <value> (default:1).
.IP "\fB-D <macro(args)>[=<replace>]"
Define <macro(args)> as <replace>.
.IP "\fB-dM, -dD"
Dump all current macro definitions ta output stream.
.IP "\fB-e <encoding>"
Change tha default multi-byte characta encodin ta one of:
euc_jp, gb2312, ksc5601, big5, sjis, iso2022_jp, utf8.
.IP \fB-finput-charset=<encoding>
Same as -e <encoding>.  (Do not bang spaces round '=').
.IP \fB-f[no-]working-directory
(Don't) emit #line marks wit current hustlin directory.
.IP \fB-fstack-protector[-all]
Add defines fo' GCC stack protector.
.IP \fB-f[no-]exceptions
(Don't) add define fo' exception support.
.IP "\fB-fpic, -fPIC, -fpie, -fPIE"
Add defines fo' PIC/PIE code.
.IP "\fB-I <directory>"
Add <directory> ta tha #include search list.
.IP \fB-I-
Unset system or joint specific include directories.
.IP "\fB-include <file>"
Include tha <file> prior ta tha main input file.
.IP "\fB-isystem <dir>"
Look fo' include filez up in DIR, if not found up in -I's.
.IP "\fB-iquote <dir>"
Look fo' #include "file" (with quotes) up in DIR.
.IP \fB-j
Do not output tha source line up in diagnostics.
.IP \fB-k
Keep white spacez of input lines as they are.
.IP "\fB-M, -MM, -MD, -MMD, -MP, -MQ target, -MT target, -MF file"
Output source file dependency line fo' makefile.
.IP \fB-m32
Change target CPU from x86_64, ppc64 ta i386, ppc, respectively.
.IP \fB-m64
Change target CPU from i386, ppc ta x86_64, ppc64, respectively.
.IP \fB-[no-]mmx
(Un-)define __MMX__.
.IP \fB-N
Don't predefine any non-standard macros.
.IP \fB-nostdinc
Unset system or joint specific include directories.
.IP "\fB-o <file>"
Output ta <file>.
.IP \fB-P
Don't output #line lines.
.IP \fB-Q
Output diagnostics ta "mcpp.err" (default:stderr).
.IP "\fB-U <macro>"
Undefine <macro>.
.IP \fB-undef
Same as -N.
.IP \fB-v
Show version of \fBmcpp\fR.
.IP "\fB-W <level>"
Set warnin level ta <level> (OR of {0,1,2,4,8,16}, default:1).
.IP \fB-w
Same as -W0.
.IP \fB-z
Don't output tha included file, only definin macros.
.PP
Options available wit -@std (default) or -@poststd options:
.IP \fB-+
Process C++ source.
.IP \fB-2
Enable digraphs.
.IP \fB-digraphs
Enable digraphs.
.IP "\fB-h <n>"
Re-define tha pre-defined macro __STDC_HOSTED__ as <n>.
.IP \fB-lang-c89
Same as -S1.
.IP "\fB-lang-c99, -lang-c9x"
Same as -S199901L.
.IP \fB-lang-c++
Same as -+.
.IP \fB-lang-asm
Same as -a.
.IP "\fB-pedantic, -pedantic-errors"
Same as -W7.
.IP "\fB-S <n>"
Redefine __STDC__ ta <n>, undefine oldschool steez macros.
.IP \fB-std=<STANDARD>
Specify tha standard ta which tha code should conform.
<STANDARD> may be one of: c90, c99, iso9899:1990, iso14882, etc.
.br
iso9899:<n>, iso14882:<n> : Same as -V <n> (long up in decimals).
.IP "\fB-V <n>"
Redefine __STDC_VERSION__ or __cplusplus ta <n>.
.br
C wit -V199901L specifies C99 mode.
.br
C++ wit -V199901L specifies C99 compatible mode.
.IP "\fB-x c++"
Same as -+.
.PP
Options available wit only -@std (default) option:
.IP \fB-@compat
Expand recursive macro mo' than Standard.
.IP \fB-3
Enable trigraphs.
.IP \fB-trigraphs
Enable trigraphs.
.IP \fB-K
Embed macro annotations tha fuck into comments.
.PP
Options available wit -@std (default), -@kr or -@oldprep options:
.IP \fB-lang-asm
Same as -x assembler-with-cpp.
.IP "\fB-x assembler-with-cpp"
Process "assembler" source.
.PP
Option available on Mac OS X / Apple-GCC:
.IP "\fB-arch <arch>"
Change tha target ta <arch> (one of i386, x86_64, ppc n' ppc64).
.PP
Option available on CygWIN:
.IP \fB-mno-cygwin
Change include directory n' predefined macros fo' msvcrt.dll rather than cygwin1.dll.
.SH PRAGMA
\fBmcpp\fR has tha followin #pragma directives.
.IP "#pragma once"
Read tha header file only once even if multiply #included.
.IP "#pragma __setlocale( ""encoding"")"
Specify tha multibyte characta encodin ta "encoding".
See -e option fo' tha encodings.
.IP "#pragma MCPP put_defines"
Putout all tha macro definitions currently valid.
.IP "#pragma MCPP debug <args>"
Start ta putout debuggin shiznits.
    <args> should be one or mo' of:
    token expand macro_call path if expression memory getc
.IP "#pragma MCPP end_debug <args>"
Quit ta putout debuggin shiznits.
    <args> is tha same wit 'debug'.
    No argument specifies all arguments.
.IP "#pragma MCPP push_macro( ""MACRO"")"
Save tha macro definizzle ta tha stack.
.IP "#pragma MCPP pop_macro( ""MACRO"")"
Retrieve tha macro definizzle from tha stack.
.IP "#pragma MCPP preprocess"
"Pre-preprocess" tha followin header filez fo' \fBmcpp\fR.
.IP "#pragma MCPP warnin    any message"
Putout warnin "any message".
.SH "VERSION"
MCPP V.2.7 (2008/03) fo' GCC
.SH "SEE ALSO"
Da full documentation fo' \fBmcpp\fR is maintained as html files.
Please peep mcpp-manual.html.
