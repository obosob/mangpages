'\" t
.\"     Title: git-ls-files
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-LS\-FILES" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-ls-filez \- Show shiznit bout filez up in tha index n' tha hustlin tree
.SH "SYNOPSIS"
.sp
.nf
\fIgit ls\-files\fR [\-z] [\-t] [\-v]
                (\-\-[cached|deleted|others|ignored|stage|unmerged|killed|modified])*
                (\-[c|d|o|i|s|u|k|m])*
                [\-x <pattern>|\-\-exclude=<pattern>]
                [\-X <file>|\-\-exclude\-from=<file>]
                [\-\-exclude\-per\-directory=<file>]
                [\-\-exclude\-standard]
                [\-\-error\-unmatch] [\-\-with\-tree=<tree\-ish>]
                [\-\-full\-name] [\-\-abbrev] [\-\-] [<file>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
This merges tha file listin up in tha directory cache index wit tha actual hustlin directory list, n' shows different combinationz of tha two\&.
.sp
One or mo' of tha options below may be used ta determine tha filez shown:
.SH "OPTIONS"
.PP
\-c, \-\-cached
.RS 4
Show cached filez up in tha output (default)
.RE
.PP
\-d, \-\-deleted
.RS 4
Show deleted filez up in tha output
.RE
.PP
\-m, \-\-modified
.RS 4
Show modified filez up in tha output
.RE
.PP
\-o, \-\-others
.RS 4
Show other (i\&.e\&. untracked) filez up in tha output
.RE
.PP
\-i, \-\-ignored
.RS 4
Show only ignored filez up in tha output\&. When showin filez up in tha index, print only dem matched by a exclude pattern\&. When showin "other" files, show only dem matched by a exclude pattern\&.
.RE
.PP
\-s, \-\-stage
.RS 4
Show staged contents\(aq object name, mode bits n' stage number up in tha output\&.
.RE
.PP
\-\-directory
.RS 4
If a whole directory is classified as "other", show just its name (with a trailin slash) n' not its whole contents\&.
.RE
.PP
\-\-no\-empty\-directory
.RS 4
Do not list empty directories\& yo. Has no effect without \-\-directory\&.
.RE
.PP
\-u, \-\-unmerged
.RS 4
Show unmerged filez up in tha output (forces \-\-stage)
.RE
.PP
\-k, \-\-killed
.RS 4
Show filez on tha filesystem dat need ta be removed cuz of file/directory conflicts fo' checkout\-index ta succeed\&.
.RE
.PP
\-z
.RS 4
\e0 line termination on output\&.
.RE
.PP
\-x <pattern>, \-\-exclude=<pattern>
.RS 4
Skip untracked filez matchin pattern\&. Note dat pattern be a gangbangin' finger-lickin' dirty-ass shell wildcard pattern\&. Right back up in yo muthafuckin ass. See EXCLUDE PATTERNS below fo' mo' shiznit\&.
.RE
.PP
\-X <file>, \-\-exclude\-from=<file>
.RS 4
Read exclude patterns from <file>; 1 per line\&.
.RE
.PP
\-\-exclude\-per\-directory=<file>
.RS 4
Read additionizzle exclude patterns dat apply only ta tha directory n' its subdirectories up in <file>\&.
.RE
.PP
\-\-exclude\-standard
.RS 4
Add tha standard Git exclusions: \&.git/info/exclude, \&.gitignore up in each directory, n' tha user\(cqs global exclusion file\&.
.RE
.PP
\-\-error\-unmatch
.RS 4
If any <file> do not step tha fuck up in tha index, treat dis as a error (return 1)\&.
.RE
.PP
\-\-with\-tree=<tree\-ish>
.RS 4
When rockin \-\-error\-unmatch ta expand tha user supplied <file> (i\&.e\&. path pattern) arguments ta paths, pretend dat paths which was removed up in tha index since tha named <tree\-ish> is still present\&. Usin dis option with
\-s
or
\-u
options do not make any sense\&.
.RE
.PP
\-t
.RS 4
This feature is semi\-deprecated\&. For scriptin purpose,
\fBgit-status\fR(1)\-\-porcelain
and
\fBgit-diff-files\fR(1)\-\-name\-status
are almost always superior alternatives, n' playas should peep
\fBgit-status\fR(1)\-\-short
or
\fBgit-diff\fR(1)\-\-name\-status
for mo' user\-friendly alternatives\&.
.sp
This option identifies tha file status wit tha followin tags (followed by a space) all up in tha start of each line:
.RE
.PP
H
.RS 4
cached
.RE
.PP
S
.RS 4
skip\-worktree
.RE
.PP
M
.RS 4
unmerged
.RE
.PP
R
.RS 4
removed/deleted
.RE
.PP
C
.RS 4
modified/changed
.RE
.PP
K
.RS 4
to be capped
.RE
.PP
?
.RS 4
other
.RE
.PP
\-v
.RS 4
Similar to
\-t yo, but use lowercase lettas fo' filez dat is marked as
\fIassume unchanged\fR
(see
\fBgit-update-index\fR(1))\&.
.RE
.PP
\-\-full\-name
.RS 4
When run from a subdirectory, tha command probably outputs paths relatizzle ta tha current directory\&. This option forces paths ta be output relatizzle ta tha project top directory\&.
.RE
.PP
\-\-abbrev[=<n>]
.RS 4
Instead of showin tha full 40\-byte hexadecimal object lines, show only a partial prefix\&. Non default number of digits can be specified wit \-\-abbrev=<n>\&.
.RE
.PP
\-\-debug
.RS 4
Afta each line dat raps on some gangbangin' file, add mo' data bout its cache entry\&. This is intended ta show as much shiznit as possible fo' manual inspection; tha exact format may chizzle at any time\&.
.RE
.PP
\-\-
.RS 4
Do not interpret any mo' arguments as options\&.
.RE
.PP
<file>
.RS 4
Filez ta show\&. If no filez is given all filez which match tha other specified criteria is shown\&.
.RE
.SH "OUTPUT"
.sp
\fIgit ls\-files\fR just outputs tha filenames unless \fI\-\-stage\fR is specified up in which case it outputs:
.sp
.if n \{\
.RS 4
.\}
.nf
[<tag> ]<mode> <object> <stage> <file>
.fi
.if n \{\
.RE
.\}
.sp
\fIgit ls\-filez \-\-unmerged\fR n' \fIgit ls\-filez \-\-stage\fR can be used ta examine detailed shiznit on unmerged paths\&.
.sp
For a unmerged path, instead of recordin a single mode/SHA\-1 pair, tha index recordz up ta three such pairs; one from tree O up in stage 1, A up in stage 2, n' B up in stage 3\&. This shiznit can be used by tha user (or tha porcelain) ta peep what tha fuck should eventually be recorded all up in tha path\&. (see \fBgit-read-tree\fR(1) fo' mo' shiznit on state)
.sp
When \-z option aint used, TAB, LF, n' backslash charactas up in pathnames is represented as \et, \en, n' \e\e, respectively\&.
.SH "EXCLUDE PATTERNS"
.sp
\fIgit ls\-files\fR can bust a list of "exclude patterns" when traversin tha directory tree n' findin filez ta show when tha flags \-\-others or \-\-ignored is specified\&. \fBgitignore\fR(5) specifies tha format of exclude patterns\&.
.sp
These exclude patterns come from these places, up in order:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Da command line flag \-\-exclude=<pattern> specifies a single pattern\&. Patterns is ordered up in tha same order they step tha fuck up in tha command line\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Da command line flag \-\-exclude\-from=<file> specifies a gangbangin' file containin a list of patterns\&. Patterns is ordered up in tha same order they step tha fuck up in tha file\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Da command line flag \-\-exclude\-per\-directory=<name> specifies a name of tha file up in each directory
\fIgit ls\-files\fR
examines, normally
\&.gitignore\&. Filez up in deeper directories take precedence\&. Patterns is ordered up in tha same order they step tha fuck up in tha files\&.
.RE
.sp
A pattern specified on tha command line wit \-\-exclude or read from tha file specified wit \-\-exclude\-from is relatizzle ta tha top of tha directory tree\& fo' realz. A pattern read from a gangbangin' file specified by \-\-exclude\-per\-directory is relatizzle ta tha directory dat tha pattern file appears in\&.
.SH "SEE ALSO"
.sp
\fBgit-read-tree\fR(1), \fBgitignore\fR(5)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
