.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLDOS 1"
.TH PERLDOS 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perldos \- Perl under DOS, W31, W95.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
These is instructions fo' buildin Perl under \s-1DOS \s0(or w??), using
\&\s-1DJGPP\s0 v2.03 or later n' shit.  Under w95 long filenames is supported.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Before you start, you should glizzle all up in tha \s-1README\s0 file
found up in tha top-level directory where tha Perl distribution
was extracted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Make shizzle you read n' KNOW tha terms under
which dis software is bein distributed.
.PP
This port currently supports MakeMaker (the set of modulez that
is used ta build extensions ta perl).  Therefore, you should be
able ta build n' install most extensions found up in tha \s-1CPAN\s0 cribs.
.PP
Detailed instructions on how tha fuck ta build n' install perl extension
modules, includin XS-type modules, is included. Y'all KNOW dat shit, muthafucka!  See '\s-1BUILDING AND
INSTALLING MODULES\s0'.
.SS "Prerequisites fo' Compilin Perl on \s-1DOS\s0"
.IX Subsection "Prerequisites fo' Compilin Perl on DOS"
.IP "\s-1DJGPP\s0" 4
.IX Item "DJGPP"
\&\s-1DJGPP\s0 be a port of \s-1GNU C/\*(C+\s0 compila n' pimpment tools ta 32\-bit,
protected-mode environment on Intel 32\-bit CPUs hustlin MS-DOS n' compatible
operatin systems, by \s-1DJ\s0 Delorie <dj@delorie.com> n' playas.
.Sp
For mo' details (\s-1FAQ\s0), check up tha home of \s-1DJGPP\s0 at:
.Sp
.Vb 1
\&        http://www.delorie.com/djgpp/
.Ve
.Sp
If you have thangs bout \s-1DJGPP,\s0 try postin ta tha \s-1DJGPP\s0 newsgroup:
comp.os.msdos.djgpp, or use tha email gateway djgpp@delorie.com.
.Sp
Yo ass can find tha full \s-1DJGPP\s0 distribution on any of tha mirrors listed here:
.Sp
.Vb 1
\&        http://www.delorie.com/djgpp/getting.html
.Ve
.Sp
Yo ass need tha followin filez ta build perl (or add freshly smoked up modules):
.Sp
.Vb 10
\&        v2/djdev203.zip
\&        v2gnu/bnu2112b.zip
\&        v2gnu/gcc2953b.zip
\&        v2gnu/bsh204b.zip
\&        v2gnu/mak3791b.zip
\&        v2gnu/fil40b.zip
\&        v2gnu/sed3028b.zip
\&        v2gnu/txt20b.zip
\&        v2gnu/dif272b.zip
\&        v2gnu/grep24b.zip
\&        v2gnu/shl20jb.zip
\&        v2gnu/gwk306b.zip
\&        v2misc/csdpmi5b.zip
.Ve
.Sp
or possibly any newer version.
.IP "Pthreads" 4
.IX Item "Pthreads"
Thread support aint tested up in dis version of tha djgpp perl.
.SS "Shortcomingz of Perl under \s-1DOS\s0"
.IX Subsection "Shortcomingz of Perl under DOS"
Perl under \s-1DOS\s0 lacks some featurez of perl under \s-1UNIX\s0 cuz of
deficiencies up in tha UNIX-emulation, most notably:
.IP "\(bu" 4
\&\fIfork()\fR n' \fIpipe()\fR
.IP "\(bu" 4
some featurez of tha \s-1UNIX\s0 filesystem regardin link count n' file dates
.IP "\(bu" 4
in-place operation be a lil bit fucked up wit short filenames
.IP "\(bu" 4
sockets
.SS "Buildin Perl on \s-1DOS\s0"
.IX Subsection "Buildin Perl on DOS"
.IP "\(bu" 4
Unpack tha source package \fIperl5.8*.tar.gz\fR wit djtarx. If you want
to use long file names under w95 n' also ta git Perl ta pass all its
tests, don't forget ta use
.Sp
.Vb 2
\&        set LFN=y
\&        set FNCASE=y
.Ve
.Sp
before unpackin tha archive.
.IP "\(bu" 4
Smoke a \*(L"symlink\*(R" or copy yo' bash.exe ta sh.exe up in yo' \f(CW\*(C`($DJDIR)/bin\*(C'\fR
directory.
.Sp
.Vb 1
\&        ln \-s bash.exe sh.exe
.Ve
.Sp
[If you have tha recommended version of bash fo' \s-1DJGPP,\s0 dis be already
done fo' yo thugged-out ass.]
.Sp
And make tha \f(CW\*(C`SHELL\*(C'\fR environment variable point ta dis \fIsh.exe\fR:
.Sp
.Vb 1
\&        set SHELL=c:/djgpp/bin/sh.exe (use full path name!)
.Ve
.Sp
Yo ass can do dis up in \fIdjgpp.env\fR like a muthafucka fo' realz. Add dis line \s-1BEFORE\s0 any section
definition:
.Sp
.Vb 1
\&        +SHELL=%DJDIR%/bin/sh.exe
.Ve
.IP "\(bu" 4
If you have \fIsplit.exe\fR n' \fIgsplit.exe\fR up in yo' path, then rename 
\&\fIsplit.exe\fR ta \fIdjsplit.exe\fR, n' \fIgsplit.exe\fR ta \fIsplit.exe\fR.
Copy or link \fIgecho.exe\fR ta \fIecho.exe\fR if you aint gots \fIecho.exe\fR.
Copy or link \fIgawk.exe\fR ta \fIawk.exe\fR if you aint gots \fIawk.exe\fR.
.Sp
[If you have tha recommended versionz of djdev, shell utilitizzles and
gawk, all these is already done fo' you, n' yo big-ass booty is ghon not need ta do
anything.]
.IP "\(bu" 4
Chdir ta tha djgpp subdirectory of perl toplevel n' type tha following
commands:
.Sp
.Vb 2
\&        set FNCASE=y
\&        configure.bat
.Ve
.Sp
This will do some preprocessin then run tha Configure script fo' yo thugged-out ass.
Da Configure script is interactizzle yo, but up in most cases you just need to
press \s-1ENTER. \s0 Da \*(L"set\*(R" command ensures dat \s-1DJGPP\s0 preserves tha letter
case of file names when readin directories. Put ya muthafuckin choppers up if ya feel dis!  If you already issued this
set command when unpackin tha archive, n' yo ass is up in tha same \s-1DOS\s0
session as when you unpacked tha archive, you don't gotta issue the
set command again. I aint talkin' bout chicken n' gravy biatch.  This command is necessary *before* you start ta 
(re)configure or (re)build perl up in order ta ensure both dat perl buildz 
correctly n' dat buildin XS-type modulez can succeed. Y'all KNOW dat shit, muthafucka!  See tha \s-1DJGPP \s0
info entry fo' \*(L"_preserve_fncase\*(R" fo' mo' shiznit:
.Sp
.Vb 1
\&        info libc alphabetical _preserve_fncase
.Ve
.Sp
If tha script say dat yo' package is incomplete, n' asks whether
to continue, just answer wit Y (this can only happen if you don't use
long filenames or forget ta issue \*(L"set FNCASE=y\*(R" first).
.Sp
When Configure asks bout tha extensions, I suggest \s-1IO\s0 n' Fcntl,
and if you want database handlin then SDBM_File or GDBM_File
(you need ta install gdbm fo' dis one). If you wanna use the
\&\s-1POSIX\s0 extension (this is tha default), make shizzle dat tha stack
size of yo' \fIcc1.exe\fR be at least 512kbyte (you can check this
with: \f(CW\*(C`stubedit cc1.exe\*(C'\fR).
.Sp
Yo ass can use tha Configure script up in non-interactizzle mode like a muthafucka.
When I built mah \fIperl.exe\fR, I used suttin' like this:
.Sp
.Vb 1
\&        configure.bat \-des
.Ve
.Sp
Yo ass can find mo' info bout Configurez command line switches in
the \fI\s-1INSTALL\s0\fR file.
.Sp
When tha script ends, n' you wanna chizzle some joints up in the
generated \fIconfig.sh\fR file, then run
.Sp
.Vb 1
\&        sh Configure \-S
.Ve
.Sp
afta you made yo' modifications.
.Sp
\&\s-1IMPORTANT:\s0 if you use dis \f(CW\*(C`\-S\*(C'\fR switch, be shizzle ta delete tha \s-1CONFIG\s0
environment variable before hustlin tha script:
.Sp
.Vb 1
\&        set CONFIG=
.Ve
.IP "\(bu" 4
Now you can compile Perl. Type:
.Sp
.Vb 1
\&        make
.Ve
.SS "Testin Perl on \s-1DOS\s0"
.IX Subsection "Testin Perl on DOS"
Type:
.PP
.Vb 1
\&        make test
.Ve
.PP
If you dirty you should peep \*(L"All tests successful\*(R". But there can be
a few failed subtests (less than 5 hopefully) dependin on some external
conditions (e.g. some subtests fail under linux/dosemu or plain dos
with short filenames only).
.SS "Installation of Perl on \s-1DOS\s0"
.IX Subsection "Installation of Perl on DOS"
Type:
.PP
.Vb 1
\&        make install
.Ve
.PP
This will copy tha newly compiled perl n' libraries tha fuck into yo' \s-1DJGPP\s0
directory structure. Perl.exe n' tha utilitizzles go tha fuck into \f(CW\*(C`($DJDIR)/bin\*(C'\fR,
and tha library goes under \f(CW\*(C`($DJDIR)/lib/perl5\*(C'\fR. Da pod documentation
goes under \f(CW\*(C`($DJDIR)/lib/perl5/pod\*(C'\fR.
.SH "BUILDING AND INSTALLING MODULES ON DOS"
.IX Header "BUILDING AND INSTALLING MODULES ON DOS"
.SS "Buildin Prerequisites fo' Perl on \s-1DOS\s0"
.IX Subsection "Buildin Prerequisites fo' Perl on DOS"
For buildin n' installin non-XS modules, all you need be a working
perl under \s-1DJGPP. \s0 Non-XS modulez do not require re-linkin tha perl
binary, n' so is simpla ta build n' install.
.PP
XS-type modulez do require re-linkin tha perl binary, cuz part of
an \s-1XS\s0 module is freestyled up in \*(L"C\*(R", n' has ta be linked together wit the
perl binary ta be executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This is required cuz perl under \s-1DJGPP\s0
is built wit tha \*(L"static link\*(R" option, cuz of tha lack of \*(L"dynamic
linking\*(R" up in tha \s-1DJGPP\s0 environment.
.PP
Because \s-1XS\s0 modulez require re-linkin of tha perl binary, you need both
the perl binary distribution n' tha perl source distribution ta build
an \s-1XS\s0 extension module.  In addition, yo big-ass booty is ghon gotta have built your
perl binary from tha source distribution so dat all of tha components
of tha perl binary is available fo' tha required link step.
.SS "Unpackin \s-1CPAN\s0 Modulez on \s-1DOS\s0"
.IX Subsection "Unpackin CPAN Modulez on DOS"
First, downlizzle tha module package from \s-1CPAN \s0(e.g., tha \*(L"Comma Separated
Value\*(R" text package, Text\-CSV\-0.01.tar.gz).  Then expand tha contents of
the package tha fuck into some location on yo' disk.  Most \s-1CPAN\s0 modulez are
built wit a internal directory structure, so it is probably safe to
expand it up in tha root of yo' \s-1DJGPP\s0 installation. I aint talkin' bout chicken n' gravy biatch.  Some playas prefer to
locate source trees under /usr/src (i.e., \f(CW\*(C`($DJDIR)/usr/src\*(C'\fR) yo, but you may
put it wherever seems most logical ta you, *EXCEPT* under tha same
directory as yo' perl source code.  There is special rulez dat apply
to modulez which live up in tha perl source tree dat do not apply ta most
of tha modulez up in \s-1CPAN.\s0
.PP
Unlike other \s-1DJGPP\s0 packages, which is aiiight \*(L"zip\*(R" files, most \s-1CPAN\s0
module packages is \*(L"gzipped tarballs\*(R".  Recent versionz of WinZip will
safely unpack n' expand them, *UNLESS* they have zero-length files.  It
is a known WinZip bug (az of v7.0) dat it aint gonna extract zero-length
files.
.PP
From tha command line, you can use tha djtar utilitizzle provided wit \s-1DJGPP\s0
to unpack n' expand these files.  For example:
.PP
.Vb 1
\&        C:\edjgpp>djtarx \-v Text\-CSV\-0.01.tar.gz
.Ve
.PP
This will create tha freshly smoked up directory \f(CW\*(C`($DJDIR)/Text\-CSV\-0.01\*(C'\fR, filling
it wit tha source fo' dis module.
.SS "Buildin Non-XS Modulez on \s-1DOS\s0"
.IX Subsection "Buildin Non-XS Modulez on DOS"
To build a non-XS module, you can use tha standard module-building
instructions distributed wit perl modules.
.PP
.Vb 4
\&    perl Makefile.PL
\&    make
\&    make test
\&    make install
.Ve
.PP
This is sufficient cuz non-XS modulez install only \*(L".pm\*(R" filez and
(sometimes) pod and/or playa documentation. I aint talkin' bout chicken n' gravy biatch.  No re-linkin of tha perl
binary is needed ta build, install or use non-XS modules.
.SS "Buildin \s-1XS\s0 Modulez on \s-1DOS\s0"
.IX Subsection "Buildin XS Modulez on DOS"
To build a \s-1XS\s0 module, you must use tha standard module-building
instructions distributed wit perl modulez *PLUS* three extra
instructions specific ta tha \s-1DJGPP \s0\*(L"static link\*(R" build environment.
.PP
.Vb 7
\&    set FNCASE=y
\&    perl Makefile.PL
\&    make
\&    make perl
\&    make test
\&    make \-f Makefile.aperl inst_perl MAP_TARGET=perl.exe
\&    make install
.Ve
.PP
Da first extra instruction sets \s-1DJGPP\s0z \s-1FNCASE\s0 environment variable so
that tha freshly smoked up perl binary which you must build fo' a XS-type module will
build erectly.  Da second extra instruction re-buildz tha perl binary
in yo' module directory before you run \*(L"make test\*(R", so dat yo ass is
testin wit tha freshly smoked up module code you built wit \*(L"make\*(R".  Da third extra
instruction installs tha perl binary from yo' module directory tha fuck into the
standard \s-1DJGPP\s0 binary directory, \f(CW\*(C`($DJDIR)/bin\*(C'\fR, replacin your
previous perl binary.
.PP
Note dat tha \s-1MAP_TARGET\s0 value *must* have tha \*(L".exe\*(R" extension or you
will not create a \*(L"perl.exe\*(R" ta replace tha one up in \f(CW\*(C`($DJDIR)/bin\*(C'\fR.
.PP
When yo ass is done, tha XS-module install process gonna git added shiznit
to yo' \*(L"perllocal\*(R" shiznit spittin some lyrics ta dat tha perl binary has been replaced,
and what tha fuck module was installed. Y'all KNOW dat shit, muthafucka!  Yo ass can view dis shiznit at any time
by rockin tha command:
.PP
.Vb 1
\&        perl \-S perldoc perllocal
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Laszlo Molnar, \fIlaszlo.molnar@eth.ericsson.se\fR [Installing/buildin perl]
.PP
Peta J. Farley \s-1III \s0\fIpjfarley@banet.net\fR [Building/installin modules]
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1).
