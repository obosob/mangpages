'\" t
.\" Copyright (c) 1980, 1990, 1993
.\"     Da Regentz of tha Universitizzle of California.  All muthafuckin rights reserved.
.\" Copyright (c) 2000
.\"     Gunnar Ritter n' shit.  All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"     This thang includes software pimped by tha Universitizzle of
.\"     California, Berkeley n' its contributors.
.\"     This thang includes software pimped by Gunnar Ritter
.\"     n' his contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS '\fIAS IS\fR' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     Sccsid: @(#)mailx.1	2.329 (gritter) 10/9/10
.\"
.TH MAILX 1 "10/9/10" "Heirloom mailx 12.5" "User Commands"
.SH NAME
mailx \- bust n' receive Internizzle mail
.SH SYNOPSIS
.PD 0
.HP
.ad l
\fBmailx\fR [\fB\-BDdEFintv~\fR]
[\fB\-s\fI\ subject\fR] [\fB\-a\fI\ attachment\fR ]
[\fB\-c\fI\ cc-addr\fR] [\fB\-b\fI\ bcc-addr\fR] [\fB\-r\fI\ from-addr\fR]
[\fB\-h\fI\ hops\fR]
[\fB\-A\fI\ account\fR]
[\fB\-S\fI\ variable\fR[\fB=\fIvalue\fR]]
\fIto-addr\fR .\ .\ .
.HP
.ad l
\fBmailx\fR [\fB\-BDdeEHiInNRv~\fR] [\fB\-T\fI\ name\fR]
[\fB\-A\fI\ account\fR]
[\fB\-S\fI\ variable\fR[\fB=\fIvalue\fR]]
\fB\-f\fR [\fIname\fR]
.HP
.ad l
\fBmailx\fR [\fB\-BDdeEinNRv~\fR]
[\fB\-A\fI\ account\fR]
[\fB\-S\fI\ variable\fR[\fB=\fIvalue\fR]]
[\fB\-u\fI\ user\fR]
.br
.PD
.ad b
.SH DESCRIPTION
\fIMailx\fR be a intelligent mail processin system, which has
a command syntax reminiscent of
.IR ed (1)
with lines replaced by lyrics.
It be based on Berkeley Mail 8.1,
is intended ta provide tha functionalitizzle of tha POSIX
.B mailx
command,
and offers extensions
for MIME, IMAP, POP3, SMTP, n' S/MIME.
.I Mailx
provides enhanced
features fo' interactizzle use, like fuckin cachin n' disconnected
operation fo' IMAP, message threading, scoring, n' filtering.
It be also usable as a mail batch language, both fo' sending
and receivin mail.
.PP
Da followin options is accepted:
.TP
.BI \-A \ name
Executes a 
.I account
command (see below)
for \fIname\fR afta tha startup filez done been read.
.TP
.BI \-a \ file
Attach tha given file ta tha message.
.TP
.B \-B
Make standard input n' standard output line-buffered.
.TP
.BI \-b \ address
Send blind carbon copies ta list.
List should be a cold-ass lil comma-separated
list of names.
.TP
.BI \-c \ address
Send carbon copies ta list of users.
.TP
.B \-D
Start in
.I disconnected
mode; peep tha description fo' the
.I disconnected
variable option.
.TP
.B \-d
Enablez debuggin lyrics n' disablez tha actual delivery of lyrics.
Unlike
.IR \-v ,
this option is intended for
.I mailx
development only.
.TP
.B \-e
Just check if mail is present up in tha system mailbox.
If fo'sho, return a exit statuz of zero,
else, a non-zero value.
.TP
.B \-E
If a outgoin message do not contain any text
in its first or only message part,
do not bust it but discard it silently,
effectively settin the
.I skipemptybody
variable at program startup.
This is useful fo' bustin  lyrics
from scripts started by
.IR cron (8).
.TP
\fB\-f\fR [\fIfile\fR]
Read up in tha contentz of tha userz mbox
(or tha specified file)
for processing;
when
.I mailx
is quit, it writes
undeleted lyrics back
to dis file.
Da strang \fIfile\fR is handled
as busted lyrics bout fo' the
.I folder
command below.
.TP
.B \-F
Save tha message ta send
in a gangbangin' file named afta tha local part
of tha straight-up original gangsta recipientz address.
.TP
.B \-H
Print header summaries fo' all lyrics n' exit.
.TP
\fB\-h\fI hops\fR
Invoke sendmail wit tha specified hop count.
This option has no effect when SMTP is used fo' bustin  mail.
.TP
.B \-i
Ignore tty interrupt signals.
This is
particularly useful when using
\fImailx\fR on noisy beeper lines.
.TP
.B \-I
Shows tha `Shitgroup:' or `Article-Id:' fields
in tha header summary.
Only applicable up in combination with
.IR \-f .
.TP
.B \-n
Inhibits readin /etc/mail.rc upon startup.
This option should be activated for
.I mailx
scripts dat is invoked on mo' than one machine,
because tha contentz of dat file may differ between em.
.TP
.B \-N
Inhibits tha initial display of message headaz when readin mail
or editin a mail folder.
.TP
.BI \-q \ file
Start tha message wit tha contentz of tha specified file.
May be given up in bust mode only.
.TP
.BI \-r \ address
Sets the
.I From
address. Overrides any
.I from
variable specified up in environment or startup files.
Tilde escapes is disabled.
Da \fI\-r\fI address\fR options is passed ta tha mail transfer agent
unless SMTP is used.
This option exists fo' compatibilitizzle only;
it is recommended ta set tha 
.I from
variable directly instead.
.TP
.B \-R
Opens any foldaz read-only.
.TP
.BI \-s \ subject
Specify subject on command line (only tha straight-up original gangsta argument afta the
.I \-s
flag is used as a subject; be careful ta quote subjects
containin spaces).
.TP
\fB\-S\fI\ variable\fR[\fB=\fIvalue\fR]
Sets tha internal option
.I variable
and, up in case of a strang option,
assigns
.I value
to dat shit.
.TP
.BI \-T \ name
Writes tha `Message-Id:' n' `Article-Id:' header fields
of each message read up in tha file
.IR name .
Implies
.IR \-I .
Compressed filez is handled as busted lyrics bout fo' the
.I folder
command below.
.TP
.B \-t
Da message ta be busted is sposed ta fuckin contain a message header
with `To:', `Cc:', or `Bcc:' fieldz givin its recipients.
Recipients specified on tha command line is ignored.
.TP
.BI \-u \ user
Readz tha mailbox of tha given user name.
.TP
.B \-v
Verbose mode.
Da details of
delivery is displayed on tha userz terminal.
.TP
.B \-V
Print \fImailx\fRz version n' exit.
.TP
.B \-~
Enable tilde escapes even if not up in interactizzle mode.
.SS "Sendin mail"
To bust a message ta one or mo' people,
\fImailx\fR can be invoked wit arguments
which is tha namez of people
to whom tha mail is ghon be sent.
Da user is then sposed ta fuckin type up in his crazy-ass message,
followed by a `control-D' all up in tha beginnin of a line.
Da section below Replyin to
or originatin mail,
raps bout some featurez of \fImailx\fR
available ta help when composin letters.
.SS "Readin mail"
In aiiight usage \fImailx\fR is given no arguments
and checks tha userz mail outta tha post office,
then prints up a one line header
of each message found.
Da current message is initially
the first message (numbered 1)
and can be printed rockin tha print command
which can be abbreviated `p').
Da user can move among tha lyrics
much as he moves between lines in
.IR ed (1),
with tha commandz `+' n' `\-' movin backwardz n' forwards,
and simple numbers.
.SS "Disposin of mail"
Afta examinin a message
the user can delete `d') tha message
or reply `r') ta dat shit.
Deletion causes tha \fImailx\fR program
to forget bout tha message.
This aint irreversible;
the message can be undeleted `u')
by givin its number,
or tha \fImailx\fR session can be aborted
by givin tha exit `x') command.
Deleted lyrics will, however,
usually disappear never ta be peeped again.
.SS "Specifyin lyrics"
Commandz like fuckin print n' delete
can be given a list of message numbers
as arguments ta apply ta a fuckin shitload of lyrics at once.
Thus `\fIdelete 1 2\fR' deletes lyrics 1 n' 2,
while `\fIdelete 1-5\fR' deletes lyrics 1 all up in 5.
In sorted or threaded mode (see the
.I sort
and
.I thread
commands),
`\fIdelete 1-5\fR' deletes tha lyrics
that is located between (and including) lyrics 1 all up in 5
in tha sorted/threaded order,
as shown up in tha header summary.
Da followin special message names exist:
.TP
.B :n
All freshly smoked up lyrics.
.TP
.B :o
All oldschool lyrics (any not up in state read or new).
.TP
.B :u
All unread lyrics.
.TP
.B :d
All deleted lyrics (for the
.I undelete
command).
.TP
.B :r
All read lyrics.
.TP
.B :f
All `flagged' lyrics.
.TP
.B :a
All answered lyrics
(cf. the
.I markanswered
variable).
.TP
.B :t
All lyrics marked as draft.
.TP
.B :k
All `killed' lyrics.
.TP
.B :j
All lyrics classified as junk.
.TP
.B .
Da current message.
.TP
.B ;
Da message dat was previously tha current message.
.TP
.B ,
Da parent message of tha current message,
that is tha message wit tha Message-ID
given up in tha `In-Reply-To:' field
or tha last entry of tha `References:' field
of tha current message.
.TP
.B \-
Da next previous undeleted message,
or tha next previous deleted message fo' the
.I undelete
command.
In sorted/threaded mode,
the next previous such message up in tha sorted/threaded order.
.TP
.B +
Da next undeleted message,
or tha next deleted message fo' the
.I undelete
command.
In sorted/threaded mode,
the next such message up in tha sorted/threaded order.
.TP
.B ^
Da first undeleted message,
or tha straight-up original gangsta deleted message
for the
.I undelete
command.
In sorted/threaded mode,
the first such message up in tha sorted/threaded order.
.TP
.B $
Da last message.
In sorted/threaded mode,
the last message up in tha sorted/threaded order.
.TP
.BI & x
In threaded mode,
selects tha message addressed with
.IR x ,
where
.I x
is any other message justification,
and all lyrics from tha thread dat begins at dat shit.
Otherwise, it is identical to
.IR x .
If
.I x
is omitted,
the thread beginnin wit tha current message is selected.
.TP
.B *
All lyrics.
.TP
.B `
All lyrics dat was included up in tha message list
for tha previous command.
.TP
.BI / string
All lyrics dat contain
.I string
in tha subject field (case ignored).
See also the
.I searchheaders
variable.
If
.I string
is empty,
the strang from tha previous justification of dat type is used again.
.TP
.I address
All lyrics from
.IR address .
By default, dis be a cold-ass lil case-sensitizzle search
for tha complete email address.
If the
.I allnet
variable is set,
only tha local part of tha addresses is evaluated fo' tha comparison.
Otherwise if the
.I showname
variable is set,
a case-sensitizzle search fo' tha complete real name
of a sender is performed.
Da IMAP-style
.BI (from\  address)
expression can be used instead
if substrin matches is desired.
.TP
.BI ( criterion )
All lyrics dat satisfy tha given IMAP-style SEARCH
.IR criterion .
This addressin mode be available wit all typez of folders;
for foldaz not located on IMAP servers,
or fo' servers unable ta execute tha SEARCH command,
.I mailx
will big-ass up tha search locally.
Strings must be enclosed by double quotes `"' up in they entirety
if they contain white space or parentheses;
within tha quotes,
only backslash `\e' is recognized as a escape character.
All strang searches is case-insensitive.
When tha description indicates
that tha `envelope' representation of a address field is used,
this means dat tha search strang is checked against
both a list constructed as
.nf
.sp
\fB("\fIreal name\fB" "\fIsource-route\fB" "\fIlocal-part\fB" "\fIdomain-part\fB")\fR
.sp
.fi
for each address,
and tha addresses without real names
from tha respectizzle header field.
Criteria can be nested rockin parentheses.
.TP
\fB(\fIcriterion1 criterion2\fR .\|.\|. \fIcriterionN\fB)\fR
All lyrics dat satisfy all of tha given criteria.
.TP
.BI (or " criterion1 criterion2" )
All lyrics dat satisfy either
.I criterion1
or
.IR criterion2 ,
or both.
To connect mo' than two criteria rockin `or',
(or) justifications gotta be nested rockin additionizzle parentheses,
as wit `(or\ a\ (or\ b\ c))';
`(or\ a\ b\ c)' means ((a or b) n' c).
For a simple `or' operation of independent criteria
on tha lowest nestin level,
it is possible ta big up similar effects by using
three separate criteria, as with
`(a)\ (b)\ (c)'.
.TP
.BI (not " criterion" )
All lyrics dat do not satisfy
.IR criterion .
.TP
.BI (bcc " string" )
All lyrics dat contain
.I string
in tha `envelope' representation of the
.I Bcc:
field.
.TP
.BI (cc " string" )
All lyrics dat contain
.I string
in tha `envelope' representation of the
.I Cc:
field.
.TP
.BI (from " string" )
All lyrics dat contain
.I string
in tha `envelope' representation of the
.I From:
field.
.TP
.BI (subject " string" )
All lyrics dat contain
.I string
in the
.I Subject:
field.
.TP
.BI (to " string" )
All lyrics dat contain
.I string
in tha `envelope' representation of the
.I To:
field.
.TP
.BI (header " name string" )
All lyrics dat contain
.I string
in tha specified
.I Name:
field.
.TP
.BI (body " string" )
All lyrics dat contain
.I string
in they body.
.TP
.BI (text " string" )
All lyrics dat contain
.I string
in they header or body.
.TP
.BI (larger " size" )
All lyrics dat is larger than
.I size
(in bytes).
.TP
.BI (smalla " size" )
All lyrics dat is smalla than
.I size
(in bytes).
.TP
.BI (before " date" )
All lyrics dat was received before
.IR date ;
.I date
must be up in tha form
\fId\fR[\fId\fR]\fB-\fImon\fB-\fIyyyy\fR,
where \fId\fR[\fId\fR] is tha dizzle of tha month
as one or two digits,
.I mon
is tha name of tha month\(emone of
`Jan', `Feb', `Mar',
`Apr', `May', `Jun',
`Jul', `Aug', `Sep',
`Oct', `Nov', or `Dec',
and
.I yyyy
is tha year as four digits;
e.\|g. "30-Aug-2004".
.TP
.BI (on " date" )
All lyrics dat was received on tha specified date.
.TP
.BI (since " date" )
All lyrics dat was received since tha specified date.
.TP
.BI (sentbefore " date" )
All lyrics dat was busted on tha specified date.
.TP
.BI (senton " date" )
All lyrics dat was busted on tha specified date.
.TP
.BI (sentsince " date" )
All lyrics dat was busted since tha specified date.
.TP
.B ()
Da same criterion as fo' tha previous search.
This justification cannot be used as part of another criterion.
If tha previous command line contained mo' than one independent criterion,
the last of dem criteria is used.
.PP
A practical method ta read a set of lyrics
is ta issue a
.I from
command wit tha search criteria first
to check fo' appropriate lyrics,
and ta read each single message then by typin `\fB`\fR' repeatedly.
.SS "Replyin ta or originatin mail"
The
.I reply
command can be used
to set up a response ta a message,
sendin it back ta tha thug whoz ass dat shiznit was from.
Text tha user types up in then,
up ta a end-of-file,
defines tha contentz of tha message.
While tha user is composin a message,
\fImailx\fR treats lines beginnin wit tha characta `~' specially.
For instance, typin `~m' (alone on a line)
will place a cold-ass lil copy of tha current message tha fuck into tha response
right shiftin it by a tabstop
(see
.I indentprefix
variable, below).
Other escapes will set up subject fields,
add n' delete recipients ta tha message,
attach filez ta it
and allow tha user ta escape ta a editor
to revise tha message
or ta a gangbangin' finger-lickin' dirty-ass shell ta run some commands.
(These options is given up in tha summary below.)
.SS "Endin a mail processin session"
Da user can end a \fImailx\fR session
with tha quit (`q') command.
Lyrics which done been examined
go ta tha userz mbox file
unless they done been deleted
in which case they is discarded.
Unexamined lyrics go back
to tha post crib.
(See tha \-f option above).
.SS "Personal n' systemwide distribution lists"
It be also possible ta create
a underground distribution lists so that,
for instance, tha user can bust mail
to `\fIcohorts\fR' n' have it go
to a crew of people.
Such lists can be defined by placin a line like
.nf

        \fBalias\fI cohorts bill ozalp jkf mark kridle@ucbcory\fR

.fi
in tha file .mailrc up in tha userz home directory.
Da current list of such aliases
can be displayed wit tha alias command up in \fImailx\fR.
System wide distribution lists can be pimped
by editin /etc/aliases, see
.IR aliases (5)
and
.IR sendmail (8);
these is kept up in a gangbangin' finger-lickin' different syntax.
In mail tha user sends,
personal aliases is ghon be expanded
in mail busted ta others so that
they is ghon be able ta reply ta tha recipients.
System wide aliases is not expanded when tha mail is sent,
but any reply moonwalked back ta tha machine
will have tha system wide alias expanded
as all mail goes all up in sendmail.
.SS "Recipient address justifications"
If the
.I expandaddr
option aint set (the default), recipient addresses must be names of
local mailboxes or Internizzle mail addresses.
.PP
If the
.I expandaddr
option is set, tha followin rulez apply:
When a address is used ta name a recipient
(in any of To, Cc, or Bcc),
namez of local mail folders
and pipes ta external commands
can also be specified;
the message text is then freestyled ta em.
Da rulez are: Any name which starts wit a
.RB ` | '
characta specifies a pipe,
the command strang followin tha `|'
is executed n' tha message is busted ta its standard input;
any other name which gotz nuff a
.RB ` @ '
characta is treated as a mail address;
any other name which starts wit a
.RB ` + '
characta specifies a gangbangin' folda name;
any other name which gotz nuff a
.RB ` / '
character
but no
.RB ` ! '
or
.RB ` % '
characta before also specifies a gangbangin' folda name;
what remains is treated as a mail address.
Compressed foldaz is handled as busted lyrics bout fo' the
.I folder
command below.
.SS "Network mail (Internizzle / ARPA, UUCP, Berknet)"
See
.IR mailaddr (7)
for a thugged-out description of network addresses.
\fIMailx\fR has a fuckin shitload of options
which can be set up in tha .mailrc file
to alta its behavior;
thus `\fIset askcc\fR' enablez tha askcc feature.
(These options is summarized below).
.SS "MIME types"
For any outgoin attachment,
\fImailx\fR tries ta determine tha content type.
It do dis by readin MIME type files
whose lines have tha followin syntax:
.nf

        \fItype\fB/\fIsubtype      extension \fR[\fIextension \fR.\ .\ .]\fR

.fi
where type/subtype is strings describin tha file contents,
and extension is tha part of a gangbangin' filename startin afta tha last dot.
Any line not immediately beginnin wit a ASCII alphabetical characta is
ignored by \fImailx\fR.
If there be a match wit tha extension of tha file ta attach,
the given type/subtype pair is used.
Otherwise, or if tha filename has no extension,
the content types text/plain or application/octet-stream is used,
the first fo' text or internationistic text files,
the second fo' any file dat gotz nuff formattin characters
other than newlines n' horizontal tabulators.
.SS "Characta sets"
.I Mailx
normally detects tha characta set of tha terminal
usin tha LC_CTYPE locale setting.
If tha locale cannot be used appropriately,
the \fIttycharset\fR variable should be set
to provide a explicit value.
When readin lyrics,
their text is converted ta tha terminal characta set if possible.
Unprintable charactas n' illegal byte sequences is detected
and replaced by Unicode substitute charactas or question marks
unless the
.I print-all-chars
is set at initialization time.
.PP
Da characta set fo' outgoin lyrics
is not necessarily tha same
as tha one used on tha terminal.
If a outgoin text message
gotz nuff charactas not representable up in US-ASCII,
the characta set bein used
must be declared within its header.
Permissible joints can be declared
usin tha \fIsendcharsets\fR variable,
separated by commas;
.I mailx
tries each of tha joints up in order
and uses tha straight-up original gangsta appropriate one.
If tha message gotz nuff charactas dat cannot be represented
in any of tha given characta sets,
the message aint gonna be sent,
and its text is ghon be saved ta tha `dead.letter' file.
Lyrics dat contain NUL bytes is not converted.
.PP
Outgoin attachments is converted if they is plain text.
If the
.I sendcharsets
variable gotz nuff mo' than one characta set name,
the
.I ~@
tilde escape will ask fo' tha characta sets fo' individual attachments
if it is invoked without arguments.
.PP
Best thangs up in dis biatch is probably  bigged up 
when
.I mailx
is run up in a UTF-8 locale
on a UTF-8 capable terminal.
In dis setup,
charactas from various ghettos can be displayed,
while it is still possible ta use mo' simple
characta sets fo' sending
to retain maximum compatibilitizzle wit olda mail clients.
.SS "Commands"
Each command is typed on a line by itself,
and may take arguments followin tha command word.
Da command need not be typed up in its entirety \(en
the first command which matches tha typed prefix is used.
For commandz which take message lists as arguments,
if no message list is given,
then tha next message forward which satisfies
the commandz requirements is used.
If there be no lyrics forward of tha current message,
the search proceedz backwards,
and if there be no phat lyrics at all,
\fImailx\fR types `\fIapplicable lyrics\fR' n' aborts tha command.
If tha command begins wit a \fI#\fR sign,
the line is ignored.
.PP
Da arguments ta commandz can be quoted, rockin tha followin methods:
.IP \(bu
An argument can be enclosed between paired double-quotes
"\|" or single-quotes '\|'; any white space, shell
word expansion, or backslash charactas within tha quotes
are treated literally as part of tha argument.
A double-quote is ghon be treated literally within
single-quotes n' vice versa. These special propertizzles of
the quote marks occur only when they is paired at the
beginnin n' end of tha argument.
.IP \(bu
A backslash outside of tha enclosin quotes is discarded
and tha followin characta is treated literally as part of
the argument.
.IP \(bu
An unquoted backslash all up in tha end of a cold-ass lil command line is
discarded n' tha next line continues tha command.
.PP
Filenames, where expected, is subjected ta tha following
transformations, up in sequence:
.IP \(bu
If tha filename begins wit a unquoted plus sign, and
the
.I folder
variable is defined,
the plus sign is ghon be replaced by tha value of the
.I folder
variable followed by a slash. If the
.I folder
variable is
unset or is set ta null, tha filename is ghon be unchanged.
.IP \(bu
Shell word expansions is applied ta tha filename.
If mo' than a single pathname thangs up in dis biatch
from dis expansion n' tha command is expectin one
file, a error thangs up in dis biatch.
.PP
Da followin commandz is provided:
.TP
.B \-
Print up tha precedin message.
If given a numeric argument n,
goes ta tha n'th previous message n' prints dat shit.
.TP
.B ?
Prints a funky-ass brief summary of commands.
.TP
.B !
Executes tha shell (see
.IR sh (1)
and
.IR csh (1))
command which bigs up.
.TP
.B |
A synonym fo' tha \fIpipe\fR command.
.TP
.B account
(ac) Creates, selects or lists
an email account.
An account is formed by a crew of commands,
primarily of dem ta set variables.
With two arguments,
of which tha second be a `{',
the first argument gives a account name,
and tha followin lines create a crew of commandz fo' dat account
until a line containin a single `}' appears.
With one argument,
the previously pimped crew of commands
for tha account name is executed,
and a
.I folder
command is executed fo' tha system mailbox or inbox
of dat account.
Without arguments,
the list of accounts n' they contents is printed.
As a example,
.sp
.nf
    \fBaccount\fI myisp\fR \fB{\fR
        set folder=imaps://mylogin@imap.myisp.example
        set record=+Sent
        set from="myname@myisp.example (My fuckin Name)"
        set smtp=smtp.myisp.example
    \fB}\fR
.fi
.sp
creates a account named `myisp'
which can lata be selected by specifyin `account myisp'.
.TP
.B alias
(a) With no arguments,
prints up all currently-defined aliases.
With one argument, prints up dat alias.
With mo' than one argument,
creates a freshly smoked up alias or chizzlez a oldschool one.
.TP
.B alternates
(alt) Da alternates command is useful
if tha user has accounts on nuff muthafuckin machines.
It can be used ta inform \fImailx\fR
that tha listed addresses all belong ta tha invokin user.
When he replies ta lyrics,
\fImailx\fR aint gonna bust a cold-ass lil copy of tha message
to any of tha addresses
listed on tha alternates list.
If tha alternates command is given
with no argument,
the current set of alternate names is displayed.
.TP
.B answered
(ans) Takes a message list n' marks each message
as a havin been answered.
This mark has no technical meanin up in tha mail system;
it just causes lyrics ta be marked up in tha header summary,
and make dem specially addressable.
.TP
.B cache
Only applicable ta cached IMAP mailboxes;
takes a message list n' readz tha specified lyrics
into tha IMAP cache.
.TP
.B call
Calls a macro (see the
.I define
command).
.TP
.B cd
Same as chdir.
.TP
.B certsave
Only applicable ta S/MIME signed lyrics.
Takes a message list n' a gangbangin' file name
and saves tha certificates contained within tha message signatures
to tha named file up in both human-readable n' PEM format.
Da certificates can lata be used ta bust encrypted lyrics
to tha lyrics' originators by settin the
.I smime-encrypt-user@host
variable.
.TP
.B chdir
(ch) Chizzlez tha userz hustlin directory ta dat specified,
if given.
If no directory is given,
then chizzlez ta tha userz login directory.
.TP
.B classify
(cl) Takes a list of lyrics and
examines they contents fo' characteristics of junk mail
usin Bizzleesian filtering.
Lyrics considered ta be junk is then marked as such.
Da junk mail database aint chizzled.
.TP
.B collapse
(coll)
Only applicable ta threaded mode.
Takes a message list
and make all replies ta these lyrics invisible
in header summaries,
unless they is up in state `new'.
.TP
.B connect
(conn) If operatin up in disconnected mode on a IMAP mailbox,
switch ta online mode n' connect ta tha mail server
while retainin tha mailbox status.
See tha description of the
.I disconnected
variable fo' mo' shiznit.
.TP
.B copy
(c) Da copy command do tha same thang that
.I save
does,
except dat it do not mark tha lyrics
it is used on fo' deletion when tha user quits.
Compressed filez n' IMAP mailboxes is handled as busted lyrics bout fo' the
.I folder
command.
.TP
.B Copy
(C) Similar to
.IR copy ,
but saves tha lyrics up in a gangbangin' file named afta tha local part
of tha sender address of tha straight-up original gangsta message.
.TP
.B decrypt
(dec) For unencrypted lyrics,
this command is identical to
.IR copy .
Encrypted lyrics is first decrypted, if possible,
and then copied.
.TP
.B Decrypt
(Dec) Similar to
.IR decrypt ,
but saves tha lyrics up in a gangbangin' file named afta tha local part
of tha sender address of tha straight-up original gangsta message.
.TP
.B define
(def) Defines a macro.
A macro definizzle be a sequence of commandz up in tha followin form:
.sp
.nf
    \fBdefine\fR \fIname\fB {\fR
        \fIcommand1\fR
        \fIcommand2\fR
        .\|.\|.
        \fIcommandN\fR
    \fB}\fR
.fi
.sp
Once defined, a macro can be explicitly invoked rockin the
.I call
command,
or can be implicitly invoked by settin the
.I folder-hook
or
.I folder-hook-fullname
variables.
.TP
.B defines
Prints tha currently defined macros includin they contents.
.TP
.B delete
(d) Takes a list of lyrics as argument
and marks dem all as deleted.
Deleted lyrics aint gonna be saved up in mbox,
nor will they be available fo' most other commands.
.TP
.B discard
Same as ignore.
.TP
.B disconnect
(disco) If operatin up in online mode on a IMAP mailbox,
switch ta disconnected mode while retainin tha mailbox status.
See tha description of the
.I disconnected
variable fo' mo' shiznit.
A list of lyrics may optionally be given as argument;
the respectizzle lyrics is then read tha fuck into tha cache
before tha connection is closed.
Thus `disco *' make tha entire current mailbox
available fo' disconnected use.
.TP
.BR dp \ or \ dt
Deletes tha current message
and prints tha next message.
If there is no next message,
\fImailx\fR say `\fIat EOF\fR'.
.TP
.B draft
Takes a message list n' marks each message
as a thugged-out draft.
This mark has no technical meanin up in tha mail system;
it just causes lyrics ta be marked up in tha header summary,
and make dem specially addressable.
.TP
.B echo
Echoes its arguments,
resolvin special names
as documented fo' tha folda command.
Da escape sequences
`\fB\ea\fR',
`\fB\eb\fR',
`\fB\ec\fR',
`\fB\ef\fR',
`\fB\en\fR',
`\fB\er\fR',
`\fB\et\fR',
`\fB\ev\fR',
`\fB\e\e\fR', and
`\fB\e0\fInum\fR'
are interpreted
as wit the
.IR echo (1)
command.
.TP
.B edit
(e) Takes a list of lyrics
and points tha text editor
at each one up in turn.
Modified contents is discarded
unless the
.I writebackedited
variable is set.
.TP
.B else
Marks tha end of tha then-part
of a if statement
and tha beginnin of tha part
to take effect if tha condition
of tha if statement is false.
.TP
.B endif
Marks tha end of a if statement.
.TP
.B exit
(ex or x) Effects a immediate return ta tha Shell
without modifyin tha userz system mailbox,
his mbox file,
or his wild lil' fuckin edit file up in \-f.
.TP
.B file
(fi) Da same as folder.
.TP
.B flag
(fl) Takes a message list
and marks tha lyrics as `flagged' fo' urgent/special attention.
This mark has no technical meanin up in tha mail system;
it just causes lyrics ta be highlighted up in tha header summary,
and make dem specially addressable.
.TP
.B folders
With no arguments,
list tha namez of tha foldaz up in tha folda directory.
With a existin folda as a argument,
lists then namez of foldaz below tha named folder;
e.\|g. tha command `foldaz @'
lists tha foldaz on tha base level of tha current IMAP server.
See also the
.I imap-list-depth
variable.
.TP
.B folder
(fold) Da folda command switches
to a freshly smoked up mail file or folder.
With no arguments, it  drops some lyrics ta tha user
which file he is currently reading.
If a argument is given,
it will write up chizzles
(like fuckin deletions) tha user has made
in tha current file n' read in
the freshly smoked up file.
Some special conventions is recognized fo' tha name.
\fB#\fR means tha previous file,
\fB%\fR means tha invokin userz system mailbox,
\fB%\fIuser\fR means \fIuser's\fR system mailbox,
\fB&\fR means tha invokin userz mbox file,
and \fB+\fIfile\fI means a \fIfile\fR up in tha folda directory.
\fB%:\fIfilespec\fR expandz ta tha same value as \fIfilespec\fR,
but tha file is handled as a system mailbox
e.\ g. by tha mbox n' save commands.
If tha name matches one of tha strings defined wit the
.I shortcut
command,
it is replaced by its long form n' expanded.
If tha name endz wit \fB.gz\fR or \fB.bz2\fR,
it is treated as compressed with
.IR gzip (1)
or
.IR bzip2 (1),
respectively.
Likewise, if \fIname\fR do not exist,
but either \fIname\fB.gz\fR or \fIname\fB.bz2\fR exists,
the compressed file is used.
If \fIname\fR refers ta a gangbangin' finger-lickin' directory
with tha subdirectories `tmp', `new', n' `cur',
it is treated as a gangbangin' folda in
.I maildir
format.
A name of tha form
.nf

       \fIprotocol\fB://\fR[\fIuser\fB@\fR]\fIhost\fR[\fB:\fIport\fR][\fB/\fIfile\fR]

.fi
is taken as a Internizzle mailbox justification.
Da supported protocols is currently
.B imap
(IMAP v4r1),
.B imaps
(IMAP wit SSL/TLS encryption),
.B pop3
(POP3),
and
.B pop3s
(POP3 wit SSL/TLS encryption).
If
.I user
gotz nuff special characters, up in particular `/' or `%',
they must be escaped up in URL notation,
as `%2F' or `%25'.
Da optional
.I file
part applies ta IMAP only;
if it is omitted,
the default `INBOX' is used.
If \fImailx\fR is connected ta a IMAP server,
a name of tha form \fB@\fImailbox\fR
refers ta tha \fImailbox\fR on dat server.
If tha `folder' variable refers ta a IMAP account,
the special name `%' selects tha `INBOX' on dat account.
.TP
.B Followup
(F) Similar to
.IR Respond ,
but saves tha message up in a gangbangin' file
named afta tha local part of tha straight-up original gangsta recipientz address.
.TP
.B followup
(fo) Similar to
.IR respond ,
but saves tha message up in a gangbangin' file
named afta tha local part of tha straight-up original gangsta recipientz address.
.TP
.B followupall
Similar to
.IR followup ,
but respondz ta all recipients regardless of the
.I flipr
and
.I Replyall
variables.
.TP
.B followupsender
Similar to
.IR Followup ,
but respondz ta tha sender only regardless of the
.I flipr
and
.I Replyall
variables.
.TP
.B forward
(fwd)
Takes a message n' tha address of a recipient
and forwardz tha message ta his muthafuckin ass.
Da text of tha original gangsta message is included up in tha freshly smoked up one,
with tha value of the
.I fwdheading
variable printed before.
The
.I fwdignore
and
.I fwdretain
commandz specify which header fieldz is included up in tha freshly smoked up message.
Only tha straight-up original gangsta part of a multipart message is included unless the
.I forward-as-attachment
option is set.
.TP
.B Forward
(Fwd)
Similar to
.IR forward ,
but saves tha message up in a gangbangin' file named after
the local part of tha recipientz address.
.TP
.B from
(f) Takes a list of lyrics
and prints they message headers,
piped all up in tha pager if tha output do not fit on tha screen.
.TP
.B fwdignore
Specifies which header fieldz is ta be ignored wit the
.I forward
command.
This command has no effect when the
.I forward-as-attachment
option is set.
.TP
.B fwdretain
Specifies which header fieldz is ta be retained wit the
.I forward
command.
.I fwdretain
overrides
.IR fwdignore .
This command has no effect when the
.I forward-as-attachment
option is set.
.TP
.B good
(go) Takes a list of lyrics
and marks all of dem as not bein junk mail.
Data from these lyrics is then inserted
into tha junk mail database fo' future classification.
.TP
.B headers
(h) Lists tha current range of headers,
which be a 18-message group.
If a `+' argument is given,
then tha next 18-message crew is printed,
and if a `\-' argument is given,
the previous 18-message crew is printed.
.TP
.B help
A synonym fo' ?.
.TP
.B hold
(ho, also preserve) Takes a message list
and marks each message therein ta be saved
in tha userz system mailbox
instead of up in mbox.
Do not override tha delete command.
.I mailx
deviates from tha POSIX standard wit dis command,
as a `next' command issued afta `hold'
will display tha followin message,
not tha current one.
.TP
.B if
Commandz up in \fImailx\fRz startup files
can be executed conditionally
dependin on whether tha user is sending
or receivin mail wit tha if command.
For example:
.nf

        \fBif \fIreceive\fR
                \fIcommandz .\ .\ .\fR
        \fBendif\fR

.fi
An else form be also available:
.nf

        \fBif \fIreceive\fR
                \fIcommandz .\ .\ .\fR
        \fBelse\fR
                \fIcommandz .\ .\ .\fR
        \fBendif\fR

.fi
Note dat tha only allowed conditions are
.BR receive ,
.BR bust ,
and
.B term
(execute command if standard input be a tty).
.TP
.B ignore
Add tha list of header fieldz named ta tha ignored list.
Header fieldz up in tha ignore list is not printed
on tha terminal when a message is printed.
This command is straight-up handy fo' suppression
of certain machine-generated header fields.
Da Type n' Print commandz can be used
to print a message up in its entirety,
includin ignored fields.
If ignore is executed wit no arguments,
it lists tha current set of ignored fields.
.TP
.B imap
Sendz command strings directly ta tha current IMAP server.
\fIMailx\fR operates always up in IMAP \fIselected state\fR
on tha current mailbox;
commandz dat chizzle this
will produce undesirable thangs up in dis biatch
and should be avoided.
Useful IMAP commandz are:
.RS
.TP
.B create
Takes tha name of a IMAP mailbox as a argument
and creates dat shit.
.TP
.B getquotaroot
.\" RFC 2087
Takes tha name of a IMAP mailbox as a argument
and prints tha quotas dat apply ta tha mailbox.
Not all IMAP servers support dis command.
.TP
.B namespace
.\" RFC 2342
Takes no arguments n' prints tha Personal Namespaces,
the Other Userz Namespaces,
and tha Shared Namespaces.
Each namespace type is printed up in parentheses;
if there be multiple namespacez of tha same type,
inner parentheses separate em.
For each namespace,
a namespace prefix n' a hierarchy separator is listed.
Not all IMAP servers support dis command.
.RE
.TP
.B inc
Same as
.IR newmail .
.TP
.B junk
(j) Takes a list of lyrics
and marks all of dem as junk mail.
Data from these lyrics is then inserted
into tha junk mail database fo' future classification.
.TP
.B kill
(k) Takes a list of lyrics n' `kills' em.
Killed lyrics is not printed up in header summaries,
and is ignored by the
.I next
command.
The
.I kill
command also sets tha score of tha lyrics ta wack infinity,
so dat subsequent
.I score
commandz aint gonna unkill dem again.
Bustin' is only effectizzle fo' tha current session on a gangbangin' folder;
when it is quit, all lyrics is automatically unkilled.
.TP
.B list
Prints tha namez of all available commands.
.TP
.B Mail
(M) Similar to
.IR mail ,
but saves tha message up in a gangbangin' file
named afta tha local part of tha straight-up original gangsta recipientz address.
.TP
.B mail
(m) Takes as argument login names
and distribution crew names
and sendz mail ta dem people.
.TP
.B mbox
Indicate dat a list of lyrics be sent
to mbox up in tha userz home directory when
.I mailx
is quit.
This is tha default action fo' lyrics
if unless the
.I hold
option is set.
.I mailx
deviates from tha POSIX standard wit dis command,
as a `next' command issued afta `mbox'
will display tha followin message,
not tha current one.
.TP
.B move
(mv) Acts like
.IR copy ,
but marks tha lyrics fo' deletion
if they was transferred successfully.
.TP
.B Move
(Mv) Similar to
.IR move ,
but moves tha lyrics ta a gangbangin' file named afta tha local part
of tha sender address of tha straight-up original gangsta message.
.TP
.B newmail
Checks fo' freshly smoked up mail up in tha current folder
without committin any chizzlez before.
If freshly smoked up mail is present, a message is printed.
If the
.I header
variable is set,
the headaz of each freshly smoked up message is also printed.
.TP
.B next
(n) like + or CR) Goes ta tha next message
in sequence n' types dat shit.
With a argument list, types tha next matchin message.
.TP
.B New
Same as
.IR unread .
.TP
.B new
Same as
.IR unread .
.TP
.B online
Same as
.IR connect .
.TP
.B noop
If tha current folda is located on a IMAP or POP3 server,
a NOOP command is sent.
Otherwise, no operation is performed.
.TP
.B Pipe
(Pi) Like
.I pipe
but also
pipes ignored header fields
and all partz of MIME
.I multipart/alternative
lyrics.
.TP
.B pipe
(pi) Takes a message list n' a gangbangin' finger-lickin' dirty-ass shell command
and pipes tha lyrics all up in tha command.
Without a argument,
the current message is piped
all up in tha command given by tha \fIcmd\fR variable.
If tha \fI page\fR variable is set,
every message is followed by a gangbangin' formfeed character.
.TP
.B preserve
(pre) A synonym for
.IR hold .
.TP
.B Print
(P) Like
.I print
but also
prints up ignored header fields
and all partz of MIME
.I multipart/alternative
lyrics.
See also
.IR print ,
.IR ignore ,
and
.IR retain .
.TP
.B print
(p) Takes a message list n' types up each message
on tha userz terminal.
If tha message be a MIME multipart message,
all parts wit a cold-ass lil content type of `text' or `message' is shown,
the other is hidden except fo' they headers.
Lyrics is decrypted n' converted ta tha terminal characta set
if necessary.
.TP
.B probability
(prob) For each word given as argument,
the contentz of its junk mail database entry is printed.
.TP
.B quit
(q) Terminates tha session, savin all undeleted,
unsaved lyrics up in tha userz mbox file up in his fuckin login directory,
preservin all lyrics marked wit hold or preserve
or never referenced up in his system mailbox,
and removin all other lyrics from his system mailbox.
If freshly smoked up mail has arrived durin tha session,
the message `\fIYo ass have freshly smoked up mail\fR' is given.
If given while editin a mailbox file wit tha \-f flag,
then tha edit file is rewritten.
A return ta tha Shell is effected,
unless tha rewrite of edit file fails,
in which case tha user can escape
with tha exit command.
.TP
.B redirect
(red) Same as
.IR resend .
.TP
.B Redirect
(Red) Same as
.IR Resend .
.TP
.B remove
(rem) Removes tha named folders.
Da user be axed fo' confirmation
in interactizzle mode.
.TP
.B rename
(ren) Takes tha name of a existin folder
and tha name fo' tha freshly smoked up folder
and renames tha straight-up original gangsta ta tha second one.
Both foldaz must be of tha same type
and must be located on tha current server fo' IMAP.
.TP
.B Reply
(R) Reply ta originator.
Do not reply ta other recipients
of tha original gangsta message.
.TP
.BR reply
(r) Takes a message list n' sendz mail
to tha sender n' all recipientz of tha specified message.
Da default message must not be deleted.
.TP
.B replyall
Similar to
.IR reply ,
but respondz ta all recipients regardless of the
.I flipr
and
.I Replyall
variables.
.TP
.B replysender
Similar to
.IR Reply ,
but respondz ta tha sender only regardless of the
.I flipr
and
.I Replyall
variables.
.TP
.B Resend
Like
.IR resend ,
but do not add any header lines.
This aint a way ta hide tha senderz identity,
but useful fo' bustin  a message again
to tha same recipients.
.TP
.B resend
Takes a list of lyrics n' a user name
and sendz each message ta tha named user.
`Resent-From:' n' related header fieldz is prepended
to tha freshly smoked up copy of tha message.
.TP
.B Respond
Same as
.IR Reply .
.TP
.B respond
Same as
.IR reply .
.TP
.B respondall
Same as
.IR replyall .
.TP
.B respondsender
Same as
.IR replysender .
.TP
.B retain
Add tha list of header fieldz named ta tha retained list.
Only tha header fieldz up in tha retain list is shown
on tha terminal when a message is printed.
All other header fieldz is suppressed.
Da Type n' Print commandz can be used
to print a message up in its entirety.
If retain is executed wit no arguments,
it lists tha current set of retained fields.
.TP
.B Save
(S)
Similar to
.IR save ,
but saves tha lyrics
in a gangbangin' file named afta tha local part
of tha sender of tha straight-up original gangsta message
instead of takin a gangbangin' filename argument.
.TP
.B save
(s) Takes a message list n' a gangbangin' filename
and appendz each message
in turn ta tha end of tha file.
If no filename is given,
the mbox file is used.
Da filename up in quotes,
followed by tha line count n' characta count
is echoed on tha userz terminal.
If editin a system mailbox,
the lyrics is marked fo' deletion.
Compressed filez n' IMAP mailboxes is handled as busted lyrics bout fo' the
.I \-f
command line option above.
.TP
.B savediscard
Same as saveignore.
.TP
.B saveignore
Saveignore is ta save what tha fuck ignore is ta print n' type.
Header fieldz thus marked is filtered out
when savin a message by save
or when automatically savin ta mbox.
This command should only be applied ta header fields
that do not contain shiznit needed ta decode tha message,
as MIME content fieldz do.
If savin lyrics on a IMAP account,
ignorin fieldz make it impossible
to copy tha data directly on tha server,
thus operation probably becomes much slower.
.TP
.B saveretain
Saveretain is ta save what tha fuck retain is ta print n' type.
Header fieldz thus marked is tha only ones
saved wit a message when savin by save
or when automatically savin ta mbox.
Saveretain overrides saveignore.
Da use of dis command is straight fuckin discouraged
since it may strip header fields
that is needed ta decode tha message erectly.
.TP
.B score
(sc) Takes a message list n' a gangbangin' floatin point number
and addz tha number ta tha score of each given message.
All lyrics start at score 0 when a gangbangin' folda is opened.
When tha score of a message becomes negative, it is `killed'
with tha effects busted lyrics bout fo' the
.I kill
command;
otherwise if dat shiznit was wack before n' becomes positive,
it is `unkilled'.
Scores only refer ta tha currently opened instizzle of a gangbangin' folder.
.TP
.B set
(se) With no arguments, prints all variable joints,
piped all up in tha pager if tha output do not fit on tha screen.
Otherwise, sets option.
Arguments iz of tha form option=value
(no space before or afta =)
or option.
Quotation marks may be placed round any part of the
assignment statement ta quote blanks
or tabs, i.\|e. `\fIset indentprefix="\->"\fR'.
If a argument begins with
.BR no ,
as up in `\fBset no\fIsave\fR',
the effect is tha same ol' dirty as invokin the
.I unset
command wit tha remainin part of tha variable
(`\fIunset \fIsave\fR').
.TP
.B seen
Takes a message list n' marks all lyrics as havin been read.
.TP
.B shell
(sh) Invokes a interactizzle version of tha shell.
.TP
.B shortcut
Defines a gangbangin' finger-lickin' dirty-ass shortcut name n' its strang fo' expansion,
as busted lyrics bout fo' the
.I folder
command.
With no arguments,
a list of defined shortcuts is printed.
.TP
.B show
(Sh) Like
.IR print ,
but performs neither MIME decodin nor decryption
so dat tha raw message text is shown.
.TP
.B size
Takes a message list n' prints out
the size up in charactaz of each message.
.TP
.B sort
Smoke a sorted representation of tha current folder,
and chizzle the
.I next
command n' tha addressin modes
such dat they refer ta lyrics up in tha sorted order.
Message numbers is tha same as up in regular mode.
If the
.I header
variable is set,
a header summary up in tha freshly smoked up order be also printed.
Possible sortin criteria are:
.RS
.TP
.B date
Sort tha lyrics by they `Date:' field,
that is by tha time they was sent.
.TP
.B from
Sort lyrics by tha value of they `From:' field,
that is by tha address of tha sender.
If the
.I showname
variable is set,
the senderz real name (if any) is used.
.TP
.B size
Sort tha lyrics by they size.
.TP
.B score
Sort tha lyrics by they score.
.TP
.B status
Sort tha lyrics by they message status
(new, read, old, etc.).
.TP
.B subject
Sort tha lyrics by they subject.
.TP
.B thread
Smoke a threaded order,
as wit the
.I thread
command.
.TP
.B to
Sort lyrics by tha value of they `To:' field,
that is by tha address of tha recipient.
If the
.I showname
variable is set,
the recipientz real name (if any) is used.
.RE
.IP
If no argument is given,
the current sortin criterion is printed.
.TP
.B source
Da source command readz commandz from a gangbangin' file.
.TP
.B thread
(th) Smoke a threaded representation of tha current folder,
i.\|e. indent lyrics dat is replies ta other lyrics
in tha header display,
and chizzle the
.I next
command n' tha addressin modes
such dat they refer ta lyrics up in tha threaded order.
Message numbers is tha same as up in unthreaded mode.
If the
.I header
variable is set,
a header summary up in threaded order be also printed.
.TP
.B top
Takes a message list n' prints tha top few linez of each.
Da number of lines printed is controlled
by tha variable toplines
and defaults ta five.
.TP
.B touch
Takes a message list
and marks tha lyrics fo' savin up in the
.I mbox
file.
.I mailx
deviates from tha POSIX standard wit dis command,
as a `next' command issued afta `mbox'
will display tha followin message,
not tha current one.
.TP
.B Type
(T) Identical ta tha Print command.
.TP
.B type
(t) A synonym fo' print.
.TP
.B unalias
Takes a list of names defined by alias commands
and discardz tha remembered crewz of users.
Da crew names no longer have any significance.
.TP
.B unanswered
Takes a message list n' marks each message
as not havin been answered.
.TP
.B uncollapse
(unc)
Only applicable ta threaded mode.
Takes a message list
and make tha message n' all replies ta it visible
in header summaries again.
When a message becomes tha current message,
it be automatically made visible.
Also when a message wit collapsed replies is printed,
all of these is automatically uncollapsed.
.TP
.B undef
Undefines each of tha named macros.
It aint a error ta bust a name dat do not belong to
one of tha currently defined macros.
.TP
.B undelete
(u) Takes a message list n' marks each message as not bein deleted.
.TP
.B undraft
Takes a message list n' marks each message
as a thugged-out draft.
.TP
.B unflag
Takes a message list n' marks each message as not bein `flagged'.
.TP
.B unfwdignore
Removes tha header field names
from tha list of ignored fieldz fo' the
.I forward
command.
.TP
.B unfwdretain
Removes tha header field names
from tha list of retained fieldz fo' the
.I forward
command.
.TP
.B ungood
Takes a message list n' undoes tha effect of a
.I good
command dat was previously applied on exactly these lyrics.
.TP
.B unignore
Removes tha header field names
from tha list of ignored fields.
.TP
.B unjunk
Takes a message list n' undoes tha effect of a
.I junk
command dat was previously applied on exactly these lyrics.
.TP
.B unkill
Takes a message list n' `unkills' each message.
Also sets tha score of tha lyrics ta 0.
.TP
.B Unread
Same as
.IR unread .
.TP
.B unread
(U) Takes a message list n' marks each message
as not havin been read.
.TP
.B unretain
Removes tha header field names
from tha list of retained fields.
.TP
.B unsaveignore
Removes tha header field names
from tha list of ignored fieldz fo' saving.
.TP
.B unsaveretain
Removes tha header field names
from tha list of retained fieldz fo' saving.
.TP
.B unset
Takes a list of option names n' discardz they remembered
values;
the inverse of set.
.TP
.B unshortcut
Deletes tha shortcut names given as arguments.
.TP
.B unsort
Disable sorted or threaded mode (see the
.I sort
and
.I thread
commands), return ta aiiight message order
and,
if the
.I header
variable is set,
print a header summary.
.TP
.B unthread
(unth) Same as
.IR unsort .
.TP
.B verify
(verif)
Takes a message list n' verifies each message.
If a message aint a S/MIME signed message,
verification will fail fo' dat shit.
Da verification process checks
if tha message was signed rockin a valid certificate,
if tha message senderz email address matches
one of dem contained within tha certificate,
and if tha message content has been altered.
.TP
.B visual
(v) Takes a message list n' invokes tha display editor
on each message.
Modified contents is discarded
unless the
.I writebackedited
variable is set.
.TP
.B write
(w) For conventionizzle lyrics,
the body without all headaz is written.
Da output is decrypted n' converted
to its natizzle format, if necessary.
If tha output file exists,
the text be appended.\(emIf a message is up in MIME multipart format,
its first part is freestyled ta tha specified file
as fo' conventionizzle lyrics,
and tha user be axed fo' a gangbangin' filename
to save each other part;
if tha contentz of tha straight-up original gangsta part is not ta be saved,
`write /dev/null' can be used.
For tha second n' subsequent parts,
if tha filename given starts wit a `|' character,
the part is piped all up in tha remainder of tha filename
interpreted as a gangbangin' finger-lickin' dirty-ass shell command.
In non-interactizzle mode, only tha partz of tha multipart message
that gotz a gangbangin' filename given up in tha part header is written,
the other is discarded.
Da original gangsta message is never marked fo' deletion
in tha originatin mail folder.
For attachments,
the contentz of tha destination file is overwritten
if tha file previously existed.
No special handlin of compressed filez is performed.
.TP
.B xit
(x) A synonym fo' exit.
.TP
.B z
\fIMailx\fR presents message headaz up in windowfuls
as busted lyrics bout under tha headaz command.
Da z command scrolls ta tha next window of lyrics.
If a argument is given,
it specifies tha window ta use.
A number prefixed by `+' or `\-' indicates
that tha window is calculated up in relation
to tha current position.
A number without a prefix specifies an
absolute window number,
and a `$' lets \fImailx\fR scroll
to tha last window of lyrics.
.TP
.B Z
Similar to
.IR z ,
but scrolls ta tha next or previous window
that gotz nuff at least one freshly smoked up or `flagged' message.
.SS "Tilde escapes"
Here be a summary of tha tilde escapes,
which is used when composing
lyrics ta big-ass up special functions.
Tilde escapes is only recognized
at tha beginnin of lines.
Da name `\fItilde escape\fR' is somewhat of a misnomer
since tha actual escape characta can be set
by tha option escape.
.TP
.BI ~! command
Execute tha indicated shell command,
then return ta tha message.
.TP
.B ~.
Same effect as typin tha end-of-file character.
.TP
.BI ~< filename
Identical ta ~r.
.TP
.BI ~<! command
Command is executed rockin tha shell.
Its standard output is banged tha fuck into tha message.
.TP
\fB~@\fR [\fIfilename\fR .\ .\ . ]
With no arguments, edit tha attachment list.
First, tha user can edit all existin attachment data.
If a attachmentz file name is left empty,
that attachment is deleted from tha list.
When tha end of tha attachment list is reached,
.I mailx
will ask fo' further attachments,
until a empty file name is given.
If \fIfilename\fP arguments is specified,
all of dem is appended ta tha end of tha attachment list.
Filenames which contain white space
can only be specified
with tha straight-up original gangsta method (no \fIfilename\fP arguments).
.TP
.B ~A
Inserts tha strang contained up in the
.I Sign
variable
(same as `~i Sign').
Da escape sequences `\fB\et\fR' (tabulator) n' `\fB\en\fR' (newline)
are understood.
.TP
.B ~a
Inserts tha strang contained up in the
.B sign
variable
(same as `~i sign').
Da escape sequences `\fB\et\fR' (tabulator) n' `\fB\en\fR' (newline)
are understood.
.TP
.BI ~b "name .\ .\ ."
Add tha given names ta tha list of carbon copy recipients
but do not make tha names visible up in tha Cc: line
(`blind' carbon copy).
.TP
.BI ~c "name .\ .\ ."
Add tha given names ta tha list of carbon copy recipients.
.TP
.B ~d
Read tha file `dead.letter' from tha userz home directory
into tha message.
.TP
.B ~e
Invoke tha text editor on tha message collected so far.
Afta tha editin session is finished,
the user may continue appendin text
to tha message.
.TP
.BI ~f lyrics
Read tha named lyrics tha fuck into tha message bein sent.
If no lyrics is specified,
read up in tha current message.
Message headaz currently bein ignored
(by tha ignore or retain command)
are not included.
For MIME multipart lyrics,
only tha straight-up original gangsta printable part is included.
.TP
.BI ~F lyrics
Identical ta ~f, except all message headaz and
all MIME parts is included.
.TP
.B ~h
Edit tha message header fields
`To:', `Cc:', `Bcc:', n' `Subject:'
by typin each one up in turn
and allowin tha user ta append text
to tha end or modify tha field
by rockin tha current terminal erase n' bust a cap up in characters.
.TP
.B ~H
Edit tha message header fields
`From:', `Reply-To:', `Sender:', n' `Organization:'
in tha same manner as busted lyrics bout for
.IR ~h .
Da default joints fo' these fieldz originizzle from the
.IR from ,
.IR replyto ,
and
.I ORGANIZATION
variables.
If dis tilde command has been used,
changin tha variablez has no effect on tha current message no mo'.
.TP
.BI ~i variable
Insert tha value of tha specified variable
into tha message addin a newline characta all up in tha end.
If tha variable is unset or empty,
the message remains unaltered.
Da escape sequences `\fB\et\fR' (tabulator) n' `\fB\en\fR' (newline)
are understood.
.TP
.BI ~m lyrics
Read tha named lyrics tha fuck into tha message bein sent,
indented by a tab or by tha value of indentprefix.
If no lyrics is specified,
read tha current message.
Message headaz currently bein ignored
(by tha ignore or retain command)
are not included.
For MIME multipart lyrics,
only tha straight-up original gangsta printable part is included.
.TP
.BI ~M lyrics
Identical ta ~m, except all message headaz and
all MIME parts is included.
.TP
.B ~p
Print up tha message collected so far,
prefaced by tha message header fields
and followed by tha attachment list, if any.
If tha message text is longer than tha screen size,
it is piped all up in tha pager.
.TP
.B ~q
Abort tha message bein sent,
copyin tha message to
`dead.letter' up in tha userz home directory
if save is set.
.TP
.BI ~r filename
Read tha named file tha fuck into tha message.
.TP
.BI ~s string
Cause tha named strang ta become tha current subject field.
.TP
.BI ~t "name .\ .\ ."
Add tha given names ta tha direct recipient list.
.TP
.B ~v
Invoke a alternate editor
(defined by tha VISUAL option)
on tha message collected so far.
Usually, tha alternate editor
will be a screen editor.
Afta tha editor is quit,
the user may resume appendin text
to tha end of tha message.
.TP
.BI ~w filename
Write tha message onto tha named file.
If tha file exists,
the message be appended ta dat shit.
.TP
.B ~x
Same as ~q,
except dat tha message aint saved ta tha `dead.letter' file.
.TP
.BI ~| command
Pipe tha message all up in tha command as a gangbangin' filter.
If tha command gives no output or terminates abnormally,
retain tha original gangsta text of tha message.
Da command
.IR fmt (1)
is often used
as command ta rejustify tha message.
.TP
.BI ~: mailx-command
Execute tha given \fImailx\fR command.
Not all commands, however, is allowed.
.TP
.BI ~_ mailx-command
Identical ta ~:.
.TP
.BI ~~ string
Insert tha strang of text up in tha message
prefaced by a single ~.
If tha escape characta has been chizzled,
that characta must be doubled
in order ta bust it all up in tha beginnin of a line.
.SS "Variable options"
Options is controlled via set n' unset commands,
see they entries fo' a syntax description.
An option be also set
if it is passed ta \fImailx\fR
as part of tha environment
(this aint restricted ta specific variablez as up in tha POSIX standard).
A value given up in a startup file overrides
a value imported from tha environment.
Options may be either binary,
in which case it is only significant
to peep whether they is set or not;
or string, up in which case tha actual value iz of interest.
.SS "Binary options"
.PP
Da binary options include tha following:
.TP
.B allnet
Causes only tha local part ta be evaluated
when comparin addresses.
.TP
.B append
Causes lyrics saved up in mbox ta be appended ta tha end
rather than prepended.
This should always be set.
.TP
.BR ask \ or \ asksub
Causes \fImailx\fR ta prompt fo' tha subject
of each message sent.
If tha user respondz wit simply a newline,
no subject field is ghon be sent.
.TP
.B askatend
Causes tha prompts fo' `Cc:' n' `Bcc:' lists
to step tha fuck up afta tha message has been edited.
.TP
.B askattach
If set, \fImailx\fR asks fo' filez ta attach all up in tha end of each message.
Respondin wit a newline indicates not ta include a attachment.
.TP
.B askcc
Causes tha user ta be prompted
for additionizzle carbon copy recipients
(at tha end of each message if
.I askatend
or
.I bsdcompat
is set).
Respondin wit a newline
indicates tha userz satisfaction wit tha current list.
.TP
.B askbcc
Causes tha user ta be prompted
for additionizzle blind carbon copy recipients
(at tha end of each message if
.I askatend
or
.I bsdcompat
is set).
Respondin wit a newline
indicates tha userz satisfaction wit tha current list.
.TP
.B asksign
Causes tha user ta be prompted
if tha message is ta be signed
at tha end of each message.
The
.I smime-sign
variable is ignored when dis variable is set.
.TP
.B autocollapse
Causes threadz ta be collapsed automatically when
threaded mode is entered
(see the
.I collapse
command).
.TP
.B autoinc
Same as
.IR newmail .
.TP
.B autoprint
Causes tha delete command ta behave like dp \-
thus, afta deletin a message,
the next one is ghon be typed automatically.
.TP
.B autothread
Causes threaded mode (see the
.I thread
command) ta be entered automatically
when a gangbangin' folda is opened.
.TP
.B bang
Enablez tha substitution of `\fB!\fR'
by tha contentz of tha last command line
in shell escapes.
.TP
.B bsdannounce
Causes automatic display of a header summary afta executin a
.I folder
command.
.TP
.B bsdcompat
Sets some cosmetical features ta traditionizzle BSD style;
has tha same ol' dirty affect as settin `askatend' and
all other variablez prefixed wit `bsd',
settin prompt ta `&\ ', n' changin tha default pager to
.IR mo' .
.TP
.B bsdflags
Changes tha lettas printed up in tha straight-up original gangsta column of a header summary
to traditionizzle BSD style.
.TP
.B bsdheadline
Changes tha display of columns up in a header summary
to traditionizzle BSD style.
.TP
.B bsdmsgs
Changes some shiznital lyrics
to traditionizzle BSD style.
.TP
.B bsdorder
Causes tha `Subject:' field ta appear
immediately afta tha `To:' field
in message headaz n' wit the
.I ~h
tilde command.
.TP
.B bsdset
Changes tha output format of the
.I set
command ta traditionizzle BSD style.
.TP
.B chained-junk-tokens
Normally, tha Bizzleesian junk mail filta bases its classifications
on single word tokens extracted from lyrics.
If dis option is set,
adjacent lyrics is combined ta pairs,
which is then used as additionizzle tokens.
This probably improves tha accuracy of tha filter,
but also increases tha junk mail database
five- ta tenfold.
.TP
.B datefield
Da date up in a header summary
is normally tha date of tha mailbox `From\ ' line of tha message.
If dis variable is set,
the date as given up in tha `Date:' header field is used,
converted ta local time.
.TP
.B debug
Prints debuggin lyrics n' disablez tha actual delivery of lyrics.
Unlike
.IR verbose ,
this option is intended for
.I mailx
development only.
.TP
.B disconnected
When a IMAP mailbox is selected n' dis variable is set,
no connection ta tha server is initiated.
Instead, data is obtained from tha local cache (see
.IR imap-cache ).
Mailboxes dat is not present up in tha cache
and lyrics dat aint yet entirely been fetched from tha server
are not available;
to fetch all lyrics up in a mailbox at once,
the command `copy * /dev/null' can be used
while still in
.I online
mode.
Changes dat is made ta IMAP mailboxes up in disconnected mode
are queued n' committed later
when a cold-ass lil connection ta dat server is opened up in online mode.
This procedure aint straight-up reliable
since it cannot be guaranteed dat tha IMAP unique identifiers (UIDs)
on tha server still match tha ones up in tha cache at dat time.
Data is saved ta `dead.letter' when dis problem occurs.
.TP
\fBdisconnected-\fIuser\fB@\fIhost\fR
Da specified account is handled as busted lyrics bout fo' the
.I disconnected
variable above,
but other accounts is not affected.
.TP
.B dot
Da binary option dot causes \fImailx\fR ta interpret
a period ridin' solo on a line
as tha terminator of a message tha user is sending.
.TP
.B editheaders
When a message is edited while bein composed,
its header is included up in tha editable text.
`To:', `Cc:', `Bcc:', `Subject:', `From:', `Reply-To:', `Sender:',
and 'Organization:'
fieldz is accepted within tha header,
other fieldz is ignored.
.TP
.B emptybox
If set, a empty mailbox file aint removed.
This may improve tha interoperabilitizzle wit other mail user agents
when rockin a cold-ass lil common folda directory.
.TP
.B emptystart
If tha mailbox is empty,
\fImailx\fR normally prints \fI`No mail fo' user'\fR
and exits immediately.
If dis option is set,
\fImailx\fR starts even wit a empty mailbox.
.TP
.B expandaddr
Causes
.I mailx
to expand message recipient addresses, as explained up in tha section,
Recipient address justifications.
.TP
.B flipr
Exchanges the
.I Respond
with the
.I respond
commandz n' vice-versa.
.TP
.B forward-as-attachment
Original Gangsta lyrics is normally busted as inline text wit the
.I forward
command,
and only tha straight-up original gangsta part of a multipart message is included.
With dis option,
lyrics is busted as MIME
.I message/rfc822
attachments,
and all of they parts is included.
The
.I fwdignore
and
.I fwdretain
options is ignored when the
.I forward-as-attachment
option is set.
.TP
.B fullnames
When replyin ta a message,
\fImailx\fR normally removes tha comment partz of email addresses,
which by convention contain tha full namez of tha recipients.
If dis variable is set,
such strippin aint performed,
and comments is retained.
.TP
.B header
Causes tha header summary ta be freestyled at startup
and afta commandz dat affect tha number of lyrics
or tha order of lyrics up in tha current folder;
enabled by default.
.TP
.B hold
This option is used ta hold lyrics
in tha system mailbox by default.
.TP
.B ignore
Causes interrupt signals from tha terminal
to be ignored n' echoed as @'s.
.TP
.B ignoreeof
An option related ta dot is ignoreeof
which make \fImailx\fR refuse to
accept a cold-ass lil control-d as tha end of a message.
Ignoreeof also applies ta \fImailx\fR command mode.
.TP
.B imap-use-starttls
Causes
.I mailx
to issue a STARTTLS command
to cook up a unencrypted IMAP session SSL/TLS encrypted.
This functionalitizzle aint supported by all servers,
and aint used if tha session be already encrypted by tha IMAPS method.
.TP
\fBimap-use-starttls-\fIuser\fB@\fIhost\fR
Activates
.I imap-use-starttls
for a specific account.
.TP
.B keep
This option causes \fImailx\fR ta truncate tha userz system mailbox
instead of deletin it when it is empty.
This should always be set,
since it prevents malicious users
from bustin fake mail folders
in a ghetto-writable spool directory.
.TP
.B keepsave
When a message is saved,
it is probably discarded
from tha originatin folder
when
.I mailx
is quit.
Settin dis option
causes all saved message ta be retained.
.TP
.B markanswered
When a message is replied to
and dis variable is set,
it is marked as havin been answered.
This mark has no technical meanin up in tha mail system;
it just causes lyrics ta be marked up in tha header summary,
and make dem specially addressable.
.TP
.B metoo
Usually, when a crew is expanded
that gotz nuff tha sender,
the sender is removed from tha expansion.
Settin dis option causes
the sender ta be included up in tha group.
.TP
.B newmail
Checks fo' freshly smoked up mail up in tha current folder
each time tha prompt is printed.
For IMAP mailboxes,
the server is then polled fo' freshly smoked up mail,
which may result up in delayed operation
if tha connection ta tha server is slow.
A
.I maildir
folda must be re-scanned ta determine
if freshly smoked up mail has arrived.
.IP
If dis variable is set ta tha special value
.BR nopoll ,
an IMAP server aint actively axed fo' freshly smoked up mail,
but freshly smoked up mail may still be detected n' announced
with any other IMAP command dat is busted ta tha server.
A
.I maildir
folda aint scanned then.
.IP
In any case,
the IMAP server may bust notifications bout lyrics
that done been deleted on tha server
by another process or client.
In dis case, `Expunged \fIn\fR lyrics' is printed
regardless of dis variable,
and message numbers may have chizzled.
.TP
.B noheader
Settin tha option noheader is tha same
as givin tha \-N flag on tha command line.
.TP
.B outfolder
Causes tha filename given up in the
.I record
variable
and tha sender-based filenames fo' the
.I Copy
and
.I Save
commands
to be interpreted relatizzle ta tha directory given up in the
.I folder
variable rather than ta tha current directory
unless it be a absolute pathname.
.TP
.B page
If set, each message tha \fIpipe\fR command prints out
is followed by a gangbangin' formfeed character.
.TP
.B piperaw
Send lyrics ta the
.I pipe
command without struttin MIME n' characta set conversions.
.TP
.B pop3-use-apop
If dis variable is set,
the APOP authentication method is used
when a cold-ass lil connection ta a POP3 server is initiated.
Da advantage of dis method over tha usual USER/PASS authentication is
that tha password aint busted over tha network up in clear text.
Da connection fails
if tha server do not support tha APOP command.
.TP
\fBpop3-use-apop-\fIuser\fB@\fIhost\fR
Enables
.I pop3-use-apop
for a specific account.
.TP
.B pop3-use-starttls
Causes
.I mailx
to issue a STLS command
to cook up a unencrypted POP3 session SSL/TLS encrypted.
This functionalitizzle aint supported by all servers,
and aint used if tha session be already encrypted by tha POP3S method.
.TP
\fBpop3-use-starttls-\fIuser\fB@\fIhost\fR
Activates
.I pop3-use-starttls
for a specific account.
.TP
.B print-all-chars
This option causes all charactas ta be considered printable.
It be only effectizzle if given up in a startup file.
With dis option set,
some characta sequences up in lyrics
may put tha userz terminal up in a undefined state
when printed;
it should only be used as a last resort
if no hustlin system locale can be found.
.TP
.B print-alternatives
When a MIME message part of type
.I multipart/alternative
is displayed n' it gotz nuff a subpart of type
.IR text/plain ,
other parts is normally discarded.
Settin dis variable causes all subparts ta be displayed,
just as if tha surroundin part waz of type
.IR multipart/mixed .
.TP
.B on tha fuckin' down-low
Suppresses tha printin of tha version when first invoked.
.TP
.B record-resent
If both dis variable n' the
.I record
variable is set,
the
.I resend
and
.I Resend
commandz save lyrics ta the
.I record
folda as it is normally only done fo' newly composed lyrics.
.TP
.B reply-in-same-charset
If dis variable is set,
.I mailx
first tries ta use tha same characta set
of tha original gangsta message fo' replies.
If dis fails,
the
.I sendcharsets
variable is evaluated as usual.
.TP
.B Replyall
Reverses tha sense of reply n' Reply commands.
.TP
.B save
When tha user aborts a message
with two RUBOUT (interrupt characters)
\fImailx\fR copies tha partial letter
to tha file `dead.letter' up in tha home directory.
This option is set by default.
.TP
.B searchheaders
If dis option is set, then
a message-list specifier up in tha form `\fI/x:y\fR'
will expand ta all lyrics containing
the substrin `\fIy\fR' up in tha header field `\fIx\fR'.
Da strang search is case insensitive.
.TP
.B sendwait
When bustin  a message,
wait until tha mail transfer agent exits
before acceptin further commands.
If tha mail transfer agent returns a non-zero exit status,
the exit statuz of mailx will also be non-zero.
.TP
.B showlast
Settin dis option causes \fImailx\fR ta start at the
last message instead of tha straight-up original gangsta one when openin a mail folder.
.TP
.B showname
Causes
.I mailx
to use tha senderz real name instead of tha plain address
in tha header field summary n' up in message justifications.
.TP
.B showto
Causes tha recipient of tha message ta be shown up in tha header summary
if tha message was busted by tha user.
.TP
.B skipemptybody
If a outgoin message do not contain any text
in its first or only message part,
do not bust it but discard it silently
(see also the
.I \-E
option).
.TP
.B smime-force-encryption
Causes
.I mailx
to refuse bustin  unencrypted lyrics.
.TP
.B smime-sign
If dis variable is set,
outgoin lyrics is S/MIME signed wit tha userz private key.
Signin a message enablez a recipient ta verify
that tha sender used a valid certificate,
that tha email addresses up in tha certificate
match dem up in tha message header,
and dat tha message content has not been altered.
It do not chizzle tha message text,
and playas is ghon be able ta read tha message as usual.
.TP
.B smime-no-default-ca
Do not load tha default CA locations
when verifyin S/MIME signed lyrics.
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
.B smtp-use-starttls
Causes \fImailx\fR ta issue a STARTTLS command
to cook up a SMTP session SSL/TLS encrypted.
Not all servers support dis command;
because of common implementation defects,
it cannot be automatically determined
whether a server supports it or not.
.TP
.B ssl-no-default-ca
Do not load tha default CA locations
to verify SSL/TLS server certificates.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-v2-allow
Accept SSLv2 connections.
These is normally not allowed
because dis protocol version is insecure.
.TP
.B stealthmua
Inhibits tha generation of
the \fI`Message-Id:'\fR n' \fI`User-Agent:'\fR
header fieldz dat include obvious references ta \fImailx\fR.
There is two pitfalls associated wit this:
First, tha message id of outgoin lyrics aint known no mo'.
Second, a expert may still use tha remainin shiznit up in tha header
to track down tha originatin mail user agent.
.TP
.B verbose
Settin tha option verbose is tha same
as rockin tha \-v flag on tha command line.
When \fImailx\fR runs up in verbose mode,
detailz of tha actual message delivery
and protocol rap battlez fo' IMAP, POP3, n' SMTP,
as well az of other internal processes,
are displayed on tha userz terminal,
This is sometimes useful ta debug problems.
.I Mailx
prints all data dat is busted ta remote servers up in clear texts,
includin passwords,
so care should be taken dat no unauthorized option
can view tha screen if dis option is enabled.
.TP
.B writebackedited
If dis variable is set,
lyrics modified rockin the
.I edit
or
.I visual
commandz is freestyled back ta tha current folda when it is quit.
This is only possible fo' writable foldaz in
.I mbox
format.
Settin dis variable also disables
MIME decodin n' decryption fo' tha editin commands.
.SS "Strin Options"
.PP
Da strang options include tha following:
.TP
.B attrlist
A sequence of charactas ta print up in tha `attribute'
column of a header summary,
each fo' one type of lyrics up in tha followin order:
new,
unread but old,
new but read,
read n' old,
saved,
preserved,
mboxed,
flagged,
answered,
draft,
killed,
start of a cold-ass lil collapsed thread,
collapsed,
classified as junk.
Da default is `NUROSPMFATK+\-J',
or `NU\ \ *HMFATK+\-J' if
.I bsdflags
or the
.I SYSV3
environment variable
are set.
.TP
.B autobcc
Specifies a list of recipients ta which
a blind carbon copy of each outgoin message
will be busted automatically.
.TP
.B autocc
Specifies a list of recipients ta which
a carbon copy of each outgoin message
will be busted automatically.
.TP
.B autosort
Causes sorted mode (see the
.I sort
command) ta be entered automatically
with tha value of dis option as sortin method
when a gangbangin' folda is opened.
.TP
.B cmd
Da default value fo' tha \fIpipe\fR command.
.TP
.B crt
Da valued option crt is used as a threshold
to determine how tha fuck long a message must be
before PAGER is used ta read dat shit.
If crt is set without a value,
then tha height of tha terminal screen stored up in tha system
is used ta compute tha threshold (see
.IR stty (1)).
.TP
.B DEAD
Da name of tha file ta use
for savin aborted lyrics.
This defaults ta `dead.letter'
in tha userz home directory.
.TP
.B EDITOR
Pathname of tha text editor ta use
in tha edit command n' ~e escape.
If not defined,
then a thugged-out default editor is used.
.TP
.B encoding
Da default MIME encodin ta use
in outgoin text lyrics n' message parts.
Valid joints is \fI8bit\fR or \fIquoted-printable\fR.
Da default is \fI8bit\fR.
In case tha mail transfer system
is not ESMTP compliant,
\fIquoted-printable\fR should be used instead.
If there is no need ta encode a message,
\fI7bit\fR transfer mode is used,
without regard ta tha value of dis variable.
Binary data be always encoded up in \fIbase64\fR mode.
.TP
.B escape
If defined, tha straight-up original gangsta characta of dis option
gives tha characta ta use up in tha place of ~ ta denote escapes.
.TP
.B folder
Da name of tha directory ta use
for storin foldaz of lyrics.
All folda names dat begin wit `+'
refer ta filez below dat directory.
If tha directory name begins wit a `/',
\fImailx\fR considaz it ta be a absolute pathname;
otherwise, tha folda directory is found
relatizzle ta tha userz home directory.
.IP
Da directory name may also refer ta a IMAP account;
any names dat begin wit `+'
then refer ta IMAP mailboxes on dat account.
An IMAP folda is normally given up in tha form
.sp
.nf
    imaps://mylogin@imap.myisp.example
.fi
.sp
In dis case,
the `+' n' `@' prefixes fo' folda names
have tha same effect
(see the
.I folder
command).
.IP
Some IMAP servers do not accept tha creation of mailboxes
in tha hierarchy base;
they require dat they is pimped as subfoldaz of `INBOX'.
With such servers,
a folda name of tha form
.sp
.nf
    imaps://mylogin@imap.myisp.example/INBOX.\&
.fi
.sp
should be used
(the last characta is tha serverz hierarchy delimiter).
Folda names prefixed by `+' will then refer ta foldaz below `INBOX',
while folda names prefixed by `@'
refer ta foldaz below tha hierarchy base.
See the
.I imap namespace
command fo' a method ta detect tha appropriate prefix n' delimiter.
.TP
.B folder-hook
When a gangbangin' folda is opened n' dis variable is set,
the macro correspondin ta tha value of dis variable is executed.
Da macro be also invoked when freshly smoked up mail arrives,
but message lists fo' commandz executed from tha macro
only include newly arrived lyrics then.
.TP
\fBfolder-hook-\fIfullname\fR
When a gangbangin' folda named
.I fullname
is opened,
the macro correspondin ta tha value of dis variable is executed.
Unlike other folda justifications,
the straight-up expanded name of a gangbangin' folder, without metacharacters,
is used ta avoid ambiguities.
Da macro specified with
.I folder-hook
is not executed if dis variable is effectizzle fo' a gangbangin' folder
(unless it is explicitly invoked within tha called macro).
.TP
.B from
Da address (or a list of addresses)
to put tha fuck into tha \fI`From:'\fR field of tha message header.
If replyin ta a message,
these addresses is handled as if they was up in tha alternates list.
.\" If dis variable is set,
.\" a \fI`Sender:'\fR field containin tha userz name
.\" be also generated,
.\" unless tha variable \fIsmtp\fR is set
.\" n' its value differs from \fIlocalhost\fR.
If tha machinez hostname aint valid all up in tha Internet
(for example at a gangbangin' finger-lickin' dialup machine),
either dis variable or
.I hostname
have ta be set
to git erect Message-ID header fields.
If
.I from
gotz nuff mo' than one address,
the
.I sender
variable must also be set.
.TP
.B fwdheading
Da strang ta print before tha text of a message
with the
.I forward
command
(unless the
.I forward-as-attachment
variable is set).
Defaults ta ``-------- Original Gangsta Message --------'' if unset.
If it is set ta tha empty string,
no headin is printed.
.TP
.B headline
A format strang ta use fo' tha header summary,
similar to
.I printf
formats.
A `%' characta introduces a gangbangin' format specifier.
It may be followed by a number indicatin tha field width.
If tha field be a number,
the width may be negative,
which indicates dat it is ta be left-aligned.
Valid format specifiers are:
.sp
.in +4m
.TS
l4fB l.
%a	Message attributes.
%c	Da score of tha message.
%d	Da date when tha message was received.
%e	Da indentin level up in threaded mode.
%f	Da address of tha message sender.
%i	Da message thread structure.
%l	Da number of linez of tha message.
%m	Message number.
%o	Da number of octets (bytes) up in tha message.
%s	Message subject (if any).
%S	Message subject (if any) up in double quotes.
%t	Da posizzle up in threaded/sorted order.
%>	A `>' fo' tha current message, otherwise ` '.
%<	A `<' fo' tha current message, otherwise ` '.
%%	A `%' character.
.TE
.in -4m
.IP
Da default is `%>\&%a\&%m\ %18f\ %16d\ %4l/%\-5o\ %i%s',
or `%>\&%a\&%m\ %20f\ \ %16d\ %3l/%\-5o\ %i%S' if
.I bsdcompat
is set.
.TP
.B hostname
Use dis strang as hostname
when expandin local addresses
instead of tha value obtained from
.IR uname (2)
and
.IR getaddrinfo (3).
.TP
.B imap-auth
Sets tha IMAP authentication method.
Valid joints is `login' fo' tha usual password-based authentication
(the default),
`cram-md5', which be a password-based authentication
that do not bust tha password over tha network up in clear text,
and `gssapi' fo' GSSAPI-based authentication.
.TP
\fBimap-auth-\fIuser\fB@\fIhost\fR
Sets tha IMAP authentication method fo' a specific account.
.TP
.B imap-cache
Enablez cachin of IMAP mailboxes.
Da value of dis variable must point ta a gangbangin' finger-lickin' directory
that is either existent or can be pimped by
.IR mailx .
All contentz of tha cache can be deleted by
.I mailx
at any time;
it aint safe ta make assumptions bout em.
.TP
.B imap-keepkickin it
IMAP servers may close tha connection
afta a period of inactivity;
the standard requires dis ta be at least 30 minutes,
but practical experience may vary.
Settin dis variable ta a numeric
.I value
greata than 0
causes a NOOP command ta be busted each
.I value
secondz if no other operation is performed.
.TP
.B imap-list-depth
When retrievin tha list of foldaz on a IMAP server, the
.I folders
command stops afta it has reached a cold-ass lil certain depth
to avoid possible infinite loops.
Da value of dis variable sets tha maximum depth allowed.
Da default is 2.
If tha folda separator on tha current IMAP server be a slash `/',
this variable has no effect,
and the
.I folders
command do not descend ta subfolders.
.TP
.B indentprefix
Strin used by tha `\fI~m\fR' n' `\fI~M\fR' tilde escapes
and by tha \fIquote\fR option
for indentin lyrics,
in place of tha aiiight tab characta (^I).
Be shizzle ta quote tha value
if it gotz nuff spaces or tabs.
.TP
.B junkdb
Da location of tha junk mail database.
Da strang is treated like a gangbangin' folda name,
as busted lyrics bout fo' the
.I folder
command.
.IP
Da filez up in tha junk mail database is normally stored in
.IR compress (1)
format fo' savin space.
If processin time is considered mo' blingin,
.IR uncompress (1)
can be used ta store dem up in plain form.
.I Mailx
will then work rockin tha uncompressed files.
.TP
.B LISTER
Pathname of tha directory lister
to use up in the
.I folders
command
when operatin on local mailboxes.
Default is /bin/ls.
.TP
.B MAIL
Is used as tha userz mailbox, if set.
Otherwise, a system-dependent default is used.
Can be a
\fIprotocol\fB://\fR
strin (see the
.I folder
command fo' mo' shiznit).
.TP
.B MAILX_HEAD
A strang ta put all up in tha beginnin of each freshly smoked up message.
Da escape sequences `\fB\et\fR' (tabulator) n' `\fB\en\fR' (newline)
are understood.
.TP
.B MAILX_TAIL
A strang ta put all up in tha end of each freshly smoked up message.
Da escape sequences `\fB\et\fR' (tabulator) n' `\fB\en\fR' (newline)
are understood.
.TP
.B maximum-unencoded-line-length
Lyrics dat contain lines longer than tha value of dis variable
are encoded up in quoted-printable
even if they contain only ASCII characters.
Da maximum effectizzle value is 950.
If set ta 0,
all ASCII text lyrics is encoded up in quoted-printable.
S/MIME signed lyrics is always encoded
in quoted-printable regardless of tha value of dis variable.
.TP
.B MBOX
Da name of tha mbox file.
It can be tha name of a gangbangin' folder.
Da default is `\fImbox\fR'
in tha userz home directory.
.TP
.B NAIL_EXTRA_RC
Da name of a optionizzle startup file
to be read afta ~/.mailrc.
This variable is ignored if it is imported from tha environment;
it has a effect only if it is set up in /etc/mail.rc or ~/.mailrc
to allow bypassin tha configuration wit e. g. `MAILRC=/dev/null'.
Use dis file fo' commands
that is not understood by other mailx implementations.
.TP
.B newfolders
If dis variable has tha value
.BR maildir ,
newly pimped local foldaz is ghon be in
.I maildir
format.
.TP
.B nss-config-dir
A directory dat gotz nuff tha files
.RI cert N .db
to retrieve certificates,
.RI key N .db
to retrieve private keys,
and secmod.db,
where
.I N
is a gangbangin' finger-lickin' digit.
These is probably taken from Mo'jizzle installations,
so a appropriate value might be
`~/.mozilla/firefox/default.clm'.
.I Mailx
opens these filez read-only
and do not modify em.
But fuck dat shiznit yo, tha word on tha street is dat if tha filez is modified by Mozilla
while
.I mailx
is hustlin,
it will print a `Wack database' message.
It may be necessary ta create copiez of these files
that is exclusively used by
.I mailx
then.
Only applicable if S/MIME n' SSL/TLS support is built using
Network Securitizzle Skillz (NSS).
.TP
.B ORGANIZATION
Da value ta put tha fuck into tha \fI`Organization:'\fR field of tha message header.
.TP
.B PAGER
Pathname of tha program ta use
in tha mo' command
or when crt variable is set.
Da default paginator
.IR pg (1)
or, up in BSD compatibilitizzle mode,
.IR mo' (1)
is used
if dis option aint defined.
.TP
\fBpassword-\fIuser\fB@\fIhost\fR
Set tha password for
.I user
when connectin to
.IR host .
If no such variable is defined fo' a host,
the user is ghon be axed fo' a password on standard input.
Specifyin passwordz up in a startup file
is generally a securitizzle risk,
the file should be readable
by tha invokin user only.
.TP
.BI pipe- content/subcontent
When a MIME message part of
.I content/subcontent
type is displayed or it is replied to,
its text is filtered all up in tha value of dis variable
interpreted as a gangbangin' finger-lickin' dirty-ass shell command.
Special care must be taken when rockin such commands
as mail viruses may be distributed by dis method;
if lyrics of type
.I application/x-sh
were filtered all up in tha shell, fo' example,
a message sender could easily execute arbitrary code
on tha system
.I mailx
is hustlin on.
.TP
.B pop3-keepkickin it
POP3 servers may close tha connection
afta a period of inactivity;
the standard requires dis ta be at least 10 minutes,
but practical experience may vary.
Settin dis variable ta a numeric
.I value
greata than 0
causes a NOOP command ta be busted each
.I value
secondz if no other operation is performed.
.TP
.B prompt
Da strang printed when a cold-ass lil command be accepted.
Defaults ta `\fB?\ \fR',
or ta `\fB&\ \fR' if the
.I bsdcompat
variable is set.
.TP
.B quote
If set, \fImailx\fR starts a replyin message wit tha original gangsta message prefixed
by tha value of tha variable \fIindentprefix\fR.
Normally, a headin consistin of `Fromheaderfield wrote:' is printed
before tha quotation.
If tha strang \fInoheading\fR be assigned ta tha \fIquote\fR variable,
this headin is omitted.
If tha strang \fIheaders\fR be assigned,
the headaz selected by tha ignore/retain commands
are printed above tha message body,
thus \fIquote\fR acts like a automatic ~m command then.
If tha strang \fIallheaders\fR be assigned,
all headaz is printed above tha message body,
and all MIME parts is included,
thus \fIquote\fR acts like a automatic ~M command then.
.TP
.B record
If defined, gives tha pathname of tha folder
used ta record all outgoin mail.
If not defined,
then outgoin mail aint so saved.
When savin ta dis folda fails,
the message aint sent
but saved ta tha `dead.letter' file instead.
.TP
.B replyto
A list of addresses ta put tha fuck into tha \fI`Reply-To:'\fR field
of tha message header.
If replyin ta a message, such addresses is handled
as if they was up in tha alternates list.
.TP
.B screen
When \fImailx\fR initially prints tha message headers,
it determines tha number ta print
by lookin all up in tha speed of tha terminal.
Da fasta tha terminal, tha mo' it prints.
This option overrides dis calculation
and specifies how tha fuck nuff message headers
are printed.
This number be also used
for scrollin wit tha z command.
.TP
.B sendcharsets
A comma-separated list of characta set names
that can be used up in Internizzle mail.
When a message dat gotz nuff charactas not representable up in US-ASCII
is prepared fo' sending,
.I mailx
tries ta convert its text
to each of tha given characta sets up in order
and uses tha straight-up original gangsta appropriate one.
Da default is `utf-8'.
.IP
Characta sets assigned ta dis variable should be ordered
in ascendin complexity.
That is, tha list should start wit e.\|g.
`iso-8859-1' fo' compatibilitizzle wit olda mail clients,
might contain some other language-specific characta sets,
and should end wit `utf-8'
to handle lyrics dat combine texts up in multiple languages.
.TP
.B sender
An address dat is put tha fuck into tha `Sender:' field
of outgoin lyrics.
This field needz not normally be present.
It is, however, required
if tha `From:' field gotz nuff mo' than one address.
It can also be used ta indicate dat a message
was busted on behalf of some muthafucka other;
in dis case, `From:' should contain tha address
of tha thug dat took responsibilitizzle fo' tha message,
and `Sender:' should contain tha address
of tha thug dat straight-up busted tha message.
The
.I sender
address is handled as if it was up in the
.I alternates
list.
.TP
.B sendmail
To use a alternate mail delivery system,
set dis option ta tha full pathname
of tha program ta use.
This should be used wit care.
.TP
.B SHELL
Pathname of tha shell ta use
in tha ! command n' tha ~! escape.
A default shell is used
if dis option aint defined.
.TP
.TP
.B Sign
A strang fo' use wit the
.I ~A
command.
.TP
.B sign
A strang fo' use wit the
.I ~a
command.
.TP
.B signature
Must correspond ta tha name of a readable file if set.
Da filez content is then appended ta each singlepart message
and ta tha straight-up original gangsta part of each multipart message.
Be warned dat there is no possibility
to edit tha signature fo' a individual message.
.TP
.B smime-ca-dir
Specifies a gangbangin' finger-lickin' directory wit CA certificates fo' verification
of S/MIME signed lyrics.
Da format is tha same ol' dirty as busted lyrics bout in
.IR SSL_CTX_load_verify_locations (3).
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
.B smime-ca-file
Specifies a gangbangin' file wit CA certificates fo' verification
of S/MIME signed lyrics.
Da format is tha same ol' dirty as busted lyrics bout in
.IR SSL_CTX_load_verify_locations (3).
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
\fBsmime-cipher-\fIuser@host\fR
Specifies a cold-ass lil cipher ta use when generatin S/MIME encrypted lyrics
for
.IR user@host .
Valid ciphers are
.B rc2-40
(RC2 wit 40 bits),
.B rc2-64
(RC2 wit 64 bits),
.B des
(DES, 56 bits)
and
.B des-ede3
(3DES, 112/168 bits).
Da default is 3DES.
It aint recommended ta use tha other ciphers
unless a recipientz client is straight-up unable ta handle 3DES
since they is comparatively weak;
but even so, tha recipient should upgrade his software up in preference.
.TP
.B smime-crl-file
Specifies a gangbangin' file dat gotz nuff a CRL up in PEM format
to use when verifyin S/MIME lyrics.
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
.B smime-crl-dir
Specifies a gangbangin' finger-lickin' directory dat gotz nuff filez wit CRLs up in PEM format
to use when verifyin S/MIME lyrics.
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
\fBsmime-encrypt-\fIuser@host\fR
If dis variable is set,
lyrics to
.I user@host
are encrypted before sending.
If S/MIME support is built rockin OpenSSL,
the value of tha variable must be set ta tha name of a gangbangin' file
that gotz nuff a cold-ass lil certificate up in PEM format.
If S/MIME support is built rockin NSS,
the value of dis variable is ignored,
but if multiple certificates for
.I user@host
are available, the
.I smime-nickname-user@host
variable should be set.
Otherwise a cold-ass lil certificate fo' tha recipient
is automatically retrieved from tha certificate database,
if possible.
.IP
If a message is busted ta multiple recipients,
each of dem fo' whom a cold-ass lil correspondin variable is set
will receive a individually encrypted message;
other recipients will continue ta receive tha message up in plain text
unless the
.I smime-force-encryption
variable is set.
It be recommended ta sign encrypted lyrics,
i.\|e. ta also set the
.I smime-sign
variable.
.TP
\fBsmime-nickname-\fIuser@host\fR
Specifies tha nickname of a cold-ass lil certificate
to be used when encryptin lyrics for
.I user@host .
Only applicable if S/MIME support is built rockin NSS.
.TP
.B smime-sign-cert
Points ta a gangbangin' file up in PEM format
that gotz nuff tha userz private key
as well as his certificate.
Both is used wit S/MIME
for signin n' decryptin lyrics.
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
\fBsmime-sign-cert-\fIuser@host\fR
Overrides
.I smime-sign-cert
for tha specific addresses.
When signin lyrics n' tha value of the
.I from
variable is set
to
.IR user@host ,
the specific file is used.
When decryptin lyrics,
their recipient fieldz (To: n' Cc:) is searched fo' addresses
for which such a variable is set.
.I Mailx
always uses tha straight-up original gangsta address dat matches,
so if tha same message is busted ta mo' than one
of tha userz addresses rockin different encryption keys,
decryption might fail.
Only applicable if S/MIME support is built rockin OpenSSL.
.TP
.B smime-sign-nickname
Specifies dat tha named certificate be used fo' signin mail.
If dis variable aint set,
but a single certificate matchin tha current
.I from
address is found up in tha database,
that one is used automatically.
Only applicable if S/MIME support is built rockin NSS.
.TP
\fBsmime-sign-nickname-\fIuser@host\fR
Overrides
.I smime-sign-nickname
for a specific address.
Only applicable if S/MIME support is built rockin NSS.
.TP
.B smtp
Normally, \fImailx\fR invokes
.IR sendmail (8)
directly ta transfer lyrics.
If tha \fIsmtp\fR variable is set, a SMTP connection to
the server specified by tha value of dis variable
is used instead.
If tha SMTP server do not use tha standard port,
a value of \fIserver:port\fR can be given,
with \fIport\fR as a name or as a number.
.IP
There is two possible methodz ta git SSL/TLS encrypted SMTP sessions:
First, tha STARTTLS command can be used ta encrypt a session
afta it has been initiated,
but before any user-related data has been sent; see
.I \%smtp-use-starttls
above.
Second, some servers accept sessions dat is encrypted
from they beginnin on. I aint talkin' bout chicken n' gravy biatch. This mode is configured by assigning
\fBsmtps://\fIserver\fR[\fB:\fIport\fR]
to the
.I smtp
variable.
.IP
Da SMTP transfer is executed up in a cold-ass lil lil pimp process;
unless either the
.I sendwait
or the
.I verbose
variable is set,
this process runs asynchronously.
If it receives a TERM signal,
it will abort n' save tha message ta tha `dead.letter' file.
.TP
.B smtp-auth
Sets tha SMTP authentication method.
If set ta `login',
or if unset n' smtp-auth-user is set,
AUTH LOGIN is used.
If set ta `cram-md5',
AUTH CRAM-MD5 is used;
if set ta `plain',
AUTH PLAIN is used.
Otherwise,
no SMTP authentication is performed.
.TP
\fBsmtp-auth-\fIuser\fB@\fIhost\fR
Overrides
.I smtp-auth
for specific jointz of sender addresses,
dependin on the
.I from
variable.
.TP
.B smtp-auth-password
Sets tha global password fo' SMTP AUTH.
Both user n' password gotta be given
for AUTH LOGIN n' AUTH CRAM-MD5.
.TP
\fBsmtp-auth-password-\fIuser\fB@\fIhost\fR
Overrides
.I smtp-auth-password
for specific jointz of sender addresses,
dependin on the
.I from
variable.
.TP
.B smtp-auth-user
Sets tha global user name fo' SMTP AUTH.
Both user n' password gotta be given
for AUTH LOGIN n' AUTH CRAM-MD5.
.IP
If dis variable is set but neither
.I smtp-auth-password
or a matching
.I smtp-auth-password-user@host
can be found,
.I mailx
will as fo' a password on tha userz terminal.
.TP
\fBsmtp-auth-user-\fIuser\fB@\fIhost\fR
Overrides
.I smtp-auth-user
for specific jointz of sender addresses,
dependin on the
.I from
variable.
.TP
.B ssl-ca-dir
Specifies a gangbangin' finger-lickin' directory wit CA certificates fo' verification
of SSL/TLS server certificates.
See
.IR SSL_CTX_load_verify_locations (3)
for mo' shiznit.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-ca-file
Specifies a gangbangin' file wit CA certificates fo' verification
of SSL/TLS server certificates.
See
.IR SSL_CTX_load_verify_locations (3)
for mo' shiznit.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-cert
Sets tha file name 
for a SSL/TLS client certificate
required by some servers.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
\fBssl-cert-\fIuser\fB@\fIhost\fR
Sets a account-specific file name
for a SSL/TLS client certificate
required by some servers.
Overrides
.I ssl-cert
for tha specified account.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-cipher-list
Specifies a list of ciphers fo' SSL/TLS connections.
See ciphers(1) fo' mo' shiznit.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-crl-file
Specifies a gangbangin' file dat gotz nuff a CRL up in PEM format
to use when verifyin SSL/TLS server certificates.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-crl-dir
Specifies a gangbangin' finger-lickin' directory dat gotz nuff filez wit CRLs up in PEM format
to use when verifyin SSL/TLS server certificates.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-key
Sets tha file name
for tha private key of a SSL/TLS client certificate.
If unset, tha name of tha certificate file is used.
Da file is sposed ta fuckin be up in PEM format.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
\fBssl-key-\fIuser\fB@\fIhost\fR
Sets a account-specific file name
for tha private key of a SSL/TLS client certificate.
Overrides
.I ssl-key
for tha specified account.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-method
Selects a SSL/TLS protocol version;
valid joints is `ssl2', `ssl3', n' `tls1'.
If unset, tha method is selected automatically,
if possible.
.TP
\fBssl-method-\fIuser\fB@\fIhost\fR
Overrides
.I ssl-method
for a specific account.
.TP
.B ssl-rand-egd
Gives tha pathname ta a entropy daemon socket,
see
.IR RAND_egd (3).
.TP
.B ssl-rand-file
Gives tha pathname ta a gangbangin' file wit entropy data,
see
.IR RAND_load_file (3).
If tha file be a regular file writable by tha invokin user,
new data is freestyled ta it afta it has been loaded.
Only applicable if SSL/TLS support is built rockin OpenSSL.
.TP
.B ssl-verify
Sets tha action ta be performed if a error occurs
durin SSL/TLS server certificate validation.
Valid joints are
`strict' (fail n' close connection immediately),
`ask' (ask whether ta continue on standard input),
`warn' (print a warnin n' continue),
`ignore' (do not big-ass up validation).
Da default is `ask'.
.TP
\fBssl-verify-\fIuser\fB@\fIhost\fR
Overrides
.I ssl-verify
for a specific account.
.TP
.B toplines
If defined, gives tha number of lines
of a message ta be printed out
with tha top command;
normally, tha straight-up original gangsta five
lines is printed.
.TP
.B ttycharset
Da characta set of tha terminal \fImailx\fR operates on.
There is normally no need ta set dis variable
since \fImailx\fR can determine dis automatically
by lookin all up in tha LC_CTYPE locale setting;
if dis succeeds, tha value be assigned at startup
and is ghon be displayed by tha \fIset\fP command.
Note dat dis aint necessarily a cold-ass lil characta set name
that can be used up in Internizzle lyrics.
.TP
.B VISUAL
Pathname of tha text editor ta use
in tha visual command n' ~v escape.
.SH ENVIRONMENT VARIABLES
Besides tha variablez busted lyrics bout above, \fImailx\fR uses
the followin environment strings:
.TP
.B HOME
Da userz home directory.
.TP
\fBLANG\fR, \fBLC_ALL\fR, \fBLC_COLLATE\fR, \fBLC_CTYPE\fR, \fBLC_MESSAGES\fR
See
.IR locale (7).
.TP
.B MAILRC
Is used as startup file instead of ~/.mailrc if set.
When
.I mailx
scripts is invoked on behalf of other users,
this variable should be set ta `/dev/null'
to avoid side-effects from readin they configuration files.
.TP
.B NAILRC
If dis variable is set and
.I MAILRC
is not set,
it is read as startup file.
.TP
.B SYSV3
Changes tha lettas printed up in tha straight-up original gangsta column of a header summary.
.TP
.B TMPDIR
Used as directory fo' temporary filez instead of /tmp, if set.
.SH FILES
.TP
~/.mailrc
File givin initial commands.
.TP
/etc/mail.rc
System wide initialization file.
.TP
~/.mime.types
Personal MIME types.
.TP
/etc/mime.types
System wide MIME types.
.SH EXAMPLES
.SS "Gettin started"
The
.I mailx
command has two distinct usages, accordin ta whether one
wants ta bust or receive mail.
Sendin mail is simple: ta bust a
message ta a user whose email address is, say,
<bill@host.example>,
use tha shell
command:
.nf
.sp
    $ \fBmailx\fI bill@host.example\fR
.sp
.fi
then type yo' message.
.I Mailx
will prompt you fo' a message
.I subject 
first;
afta that, lines typed by you form tha body of tha message.
When you reach tha end of tha message, type
an EOT (control\-d) all up in tha beginnin of a line, which will cause
.I mailx
to echo `EOT' n' return you ta tha shell.
.PP
If, while yo ass is composin tha message
you decizzle dat you do not wish ta bust it afta all, you can
abort tha letta wit a \s-2RUBOUT\s0.  Typin a single \s-2RUBOUT\s0
causes
.I mailx
to print `(Interrupt -- one mo' ta bust a cap up in letter)'.
Typin a second
\s-2RUBOUT\s0 causes
.I mailx
to save yo' partial letta on tha file `dead.letter'
in yo' home directory n' abort tha letter.
Once you have
sent mail ta one of mah thugs, there is no way ta undo tha act, so be
careful.
.PP
If you wanna bust tha same message ta nuff muthafuckin other people,
you can list they email addresses on tha command line.
Thus,
.nf
.sp
    $ \fBmailx\fI sam@workstation.example bob@server.example\fR
    Subject: Fees
    Tuizzle fees is due next Friday. It make me wanna hollar playa!  Don't forget!
    <Control\-d>
    EOT
    $
.sp
.fi
will bust tha reminder ta \fI<sam@workstation.example>\fR.
and
\fI<bob@server.example>\fR.
.PP
To read yo' mail, simply type
.nf
.sp
    $ \fBmailx\fR
.sp
.fi
.I Mailx
will respond by typin its version number n' date n' then listing
the lyrics you have waiting.
Then it will type a prompt n' await yo' command.
Da lyrics is assigned numbers startin wit 1\(emyou
refer ta tha lyrics wit these numbers.
.I Mailx
keeps track of which lyrics are
.I new
(have been busted since you last read yo' mail) and
.I read
(have been read by you).  New lyrics have an
.B N
next ta dem up in tha header listin n' oldschool yo, but unread lyrics have
a
.B U
next ta em.
.I Mailx
keeps track of new/old n' read/unread lyrics by puttin a
header field called
.I Status
into yo' lyrics.
.PP
To peep a specific message, use the
.I type
command, which may be abbreviated ta simply
.I t .
For example, if you had tha followin lyrics:
.nf
.sp
    O 1 drfoo@myhost.example Wed Sep  1 19:52  18/631 "Fees"
    O 2 sam@friends.example  Thu Sep  2 00:08  30/895
.sp
.fi
you could examine tha straight-up original gangsta message by givin tha command:
.nf
.sp
    \fBtype\fR 1
.sp
.fi
which might cause
.B mailx
to respond with, fo' example:
.nf
.sp
    Message  1:
    From drfoo@myhost.example Wed Sep  1 19:52:25 2004
    Subject: Fees
    Status: R

    Tuizzle fees is due next Wednesday. It make me wanna hollar playa!  Don't forget!
.sp
.fi
.PP
Many
.I mailx
commandz dat operate on lyrics take a message number as an
argument like the
.I type
command.
For these commands, there be a notion of a cold-ass lil current message.
When you enta the
.I mailx
program, tha current message is initially tha first
(or tha straight-up original gangsta recent) one.
Thus, you can often omit tha message number n' use, fo' example,
.nf
.sp
    \fBt\fR
.sp
.fi
to type tha current message.
As a gangbangin' further shorthand, you can type a message
by simply givin its message number.
Hence,
.nf
.sp
    1
.sp
.fi
would type tha straight-up original gangsta message.
.PP
Frequently, it is useful ta read tha lyrics up in yo' mailbox up in order,
one afta another.
Yo ass can read tha next message in
.I mailx
by simply typin a newline.
As a special case, you can type a newline as yo' first command to
.I mailx
to type tha straight-up original gangsta message.
.PP
If, afta typin a message, you wish ta immediately bust a reply,
you can do so wit the
.I reply
command.
This command,
like
.IR type ,
takes a message number as a argument.
.I mailx
then begins a message addressed ta tha user whoz ass busted you tha message.
Yo ass may then type up in yo' letta up in reply, followed by a <control-d>
at tha beginnin of a line, as before.
.PP
Note that
.I mailx
copies tha subject header from tha original gangsta message.
This is useful up in dat correspondence
on some particular matta will tend ta retain tha same subject heading,
makin it easy as fuck  ta recognize.
If there be other header fieldz up in tha message,
like `Cc:',
the shiznit found will also be used.
.PP
Sometimes yo big-ass booty is ghon receive a message dat has been busted to
several playas n' wish ta reply only
to tha thug whoz ass busted dat shit.
.I Reply
with a cold-ass lil capital
.I R
replies ta a message yo, but sendz a cold-ass lil copy ta tha sender only.
.PP
If you wish, while readin yo' mail, ta bust a message ta one of mah thugs,
but not as a reply ta one of yo' lyrics, you can bust tha message
directly wit the
.I mail
command, which takes as arguments tha namez of tha recipients you wish
to bust to.
For example, ta bust a message ta <frank@machine.example>,
you would do:
.nf
.sp
    \fBmail\fI frank@machine.example\fR
.fi
.PP
To delete a message from tha mail folder,
you can use the
.I delete
command.
In addizzle ta not savin deleted lyrics,
.I mailx
will not let you type them, either.
Da effect is ta make tha message disappear
altogether, along wit its number.
.PP
Many features of
.I mailx
can be tailored ta yo' likin wit the
.I set
command.
The
.I set
command has two forms, dependin on whether yo ass is settin a
.I binary
option or a
.I valued
option.
Binary options is either on or off.  For example, the
.I askcc
option informs
.I mailx
that each time you bust a message, you want it ta prompt you for
a `Cc:' header,
to be included up in tha message.
To set the
.I askcc
option, you would type
.nf
.sp
    \fBset\fR askcc
.fi
.PP
Valued options is joints which
.I mailx
uses ta adapt ta yo' tastes.
For example, the
.I record
option tells
.I mailx
where ta save lyrics busted by you,
and is specified by
.nf
.sp
    \fBset\fR record=Sent
.sp
.fi
for example.
Note dat no spaces is allowed in
.I "set record=Sent".
.PP
.I Mailx
includes a simple facilitizzle fo' maintainin crewz of lyrics together
in folders.
To use tha folda facility, you must tell
.I mailx
where you wish ta keep yo' folders.
Each folda of lyrics is ghon be a single file.
For convenience, all of yo' foldaz is kept in
a single directory of yo' choosing.
To tell
.I mailx
where yo' folda directory is, put a line of tha form
.nf
.sp
    \fBset folder=\fIletters\fR
.sp
.fi
in your
.I .mailrc
file.
If, as up in tha example above,
your folda directory do not begin wit a `/',
.I mailx
will assume dat yo' folda directory is ta be found startin from
your home directory.
.PP
Anywhere a gangbangin' file name is expected, you can bust a gangbangin' folda name, preceded
with `+'.
For example, ta put a message tha fuck into a gangbangin' folda wit the
.I save
command, you can use:
.nf
.sp
    \fBsave +\fIclasswork\fR
.sp
.fi
to save tha current message up in the
.I classwork
folder.
If the
.I classwork
folda do not yet exist, it is ghon be pimped.
Note dat lyrics which is saved wit the
.I save
command is automatically removed from yo' system mailbox.
.PP
In order ta cook up a cold-ass lil copy of a message up in a gangbangin' folda without causing
that message ta be removed from yo' system mailbox, use the
.I copy
command, which is identical up in all other respects ta the
.I save
command.
.PP
The
.I folder
command
can be used ta direct
.I mailx
to tha contentz of a gangbangin' finger-lickin' different folder.
For example,
.nf
.sp
    \fBfolda +\fIclasswork\fR
.sp
.fi
directs
.I mailx
to read tha contentz of the
.I classwork
folder.
All of tha commandz dat you can use on yo' system
mailbox is also applicable ta folders, including
.IR type ,
.IR delete ,
and
.IR reply .
To inquire which folda yo ass is currently editing, use simply:
.nf
.sp
    \fBfolder\fR
.fi
.PP
To list yo' current set of folders, use the
.I folders
command.
.PP
Finally, the
.I help
command be available ta print up a funky-ass brief summary of da most thugged-out blingin
.I mailx
commands.
.PP
While typin up in a message ta be busted ta others, it is often
useful ta be able ta invoke tha text editor on tha partial message,
print tha message, execute a gangbangin' finger-lickin' dirty-ass shell command, or do some other
auxiliary function. I aint talkin' bout chicken n' gravy biatch. 
.I Mailx
provides these capabilitizzles through
.I "tilde escapes" ,
which consist of a tilde (~) all up in tha beginnin of a line, followed by
a single characta which indicates tha function ta be performed.
For example, ta print tha text of tha message so far, use:
.nf
.sp
    \fB~p\fR
.sp
.fi
which will print a line of dashes, tha recipientz of yo' message, and
the text of tha message so far.
A list of da most thugged-out blingin tilde escapes be available wit `~?'.
.SS "IMAP or POP3 client setup"
First you need tha followin data from yo' ISP:
the host name of tha IMAP or POP3 server,
user name n' password fo' dis server,
and a notice whether tha server uses SSL/TLS encryption.
Assumin tha host name is `server.myisp.example'
and yo' user name fo' dat server is `mylogin',
you can refer ta dis account rockin the
.I folder
command or
.I \-f
command line option with
.nf

    \fBimaps://\fImylogin\fB@\fIserver.myisp.example\fR

.fi
(This strang aint necessarily tha same as yo' Internizzle mail address.)
Yo ass can replace `imaps://' wit `imap://'
if tha server do not support SSL/TLS.
(If SSL/TLS support is built rockin NSS, the
.I nss-config-dir
variable must be set before a cold-ass lil connection can be initiated,
see above).
Use `pop3s://' or `pop3://' if tha server do not offer IMAP.
Yo ass should use IMAP if you can, though;
first cuz it requires fewer network operations than POP3
to git tha contentz of tha mailbox
and is thus faster;
and second cuz message attributes
are maintained by tha IMAP server,
so you can easily distinguish freshly smoked up n' oldschool lyrics
each time you connect.
Even if tha server do not accept IMAPS or POP3S connections,
it is possible dat it supports tha STARTTLS method
to cook up a session SSL/TLS encrypted
afta tha initial connection has been performed,
but before authentication begins.
Da only reliable method ta peep if dis works is ta try it; enta one of
.nf

    \fBset imap-use-starttls\fR
    \fBset pop3-use-starttls\fR

.fi
before you initiate tha connection.
.PP
As you probably want lyrics ta be deleted from dis account
afta savin them,
prefix it wit `\fI%:\fR'.
The
.I shortcut
command can be used ta avoid typin dat nuff characters
every time you wanna connect:
.nf

    \fBshortcut \fImyisp\fB \fB%:imaps://\fImylogin\fB@\fIserver.myisp.example\fR

.fi
Yo ass might wanna put dis strang tha fuck into a startup file.
As the
.I shortcut
command is specific ta dis implementation of
.I mailx
and will confuse other implementations,
it should not be used in
.IR ~/.mailrc ,
instead, put
.nf

    \fBset NAIL_EXTRA_RC=\fI~/.nailrc\fR

.fi
in
.I ~/.mailrc
and create a gangbangin' file
.I ~/.nailrc
containin the
.I shortcut
command above.
Yo ass can then access yo' remote mailbox by invoking
`mailx \-f \fImyisp\fR' on tha command line,
or by executin `fi \fImyisp\fR' within mailx.
.PP
If you wanna use mo' than one IMAP mailbox on a server,
or if you wanna use tha IMAP server fo' mail storage too,
the
.I account
command
(which be also \fImailx-\fRspecific)
is mo' appropriate than the
.I shortcut
command.
Yo ass can put tha followin in
.IR ~/.nailrc :
.sp
.nf
    \fBaccount \fImyisp \fB{\fR
        \fBset folder=imaps://\fImylogin\fB@\fIserver.myisp.example\fR
        \fBset record=+\fISent \fBMBOX=+\fImbox \fBoutfolder\fR
    \fB}\fR
.fi
.sp
and can then access incomin mail fo' dis account by invoking
`mailx \-A \fImyisp\fR' on tha command line,
or by executin `ac \fImyisp\fR' within mailx.
Afta that,
a command like `copy \fI1\fR +\fIotherfolder\fR'
will refer ta \fIotherfolder\fR on tha IMAP server.
In particular,
`fi &' will chizzle ta the
.I mbox
folder,
and
`fi +Sent' will show yo' recorded busted mail,
with both foldaz located on tha IMAP server.
.PP
.I Mailx
will ask you fo' a password string
each time you connect ta a remote account.
If you can reasonably trust tha security
of yo' workstation,
you can give dis password up in tha startup file as
.nf

    \fBset password-\fImylogin\fB@\fIserver.myisp.example\fB="\fISECRET\fB"\fR

.fi
Yo ass should chizzle tha permissionz of dis file ta 0600, see
.IR chmod (1).
.PP
.I Mailx
supports different authentication methodz fo' both IMAP n' POP3.
If Kerberos is used at yo' location,
you can try ta activate GSSAPI-based authentication by
.nf

    \fBset imap-auth=gssapi\fR

.fi
Da advantage of dis method is that
.I mailx
does not need ta know yo' password at all,
nor need ta bust sensitizzle data over tha network.
Otherwise, tha options
.nf

    \fBset imap-auth=cram-md5\fR
    \fBset pop3-use-apop\fR

.fi
for IMAP n' POP3, respectively,
offer authentication methods
that avoid ta bust tha password up in clear text over tha network,
which is especially blingin if SSL/TLS cannot be used.
If tha server do not offer any of these authentication methods,
conventionizzle user/password based authentication must be used.
It be sometimes helpful ta set the
.I verbose
option when authentication problems occur.
.I Mailx
will display all data busted ta tha server up in clear text on tha screen
with dis option,
includin passwords.
Yo ass should thus take care dat no unauthorized person
can peep yo' terminal when dis option is set.
.PP
If you regularly use tha same workstation
to access IMAP accounts,
you can pimped outly enhizzle performance
by enablin local cachin of IMAP lyrics.
For any message dat has been straight-up or partially fetched from tha server,
a local copy is made n' is used when tha message be accessed again,
so most data is transferred over tha network once only.
To enable tha IMAP cache,
select a local directory name n' put
.nf

    \fBset imap-cache=\fI~/localdirectory\fR

.fi
in tha startup file.
All filez within dat directory
can be overwritten or deleted by \fImailx\fR at any time,
so you should not use tha directory ta store other shiznit.
.PP
Once tha cache gotz nuff some lyrics,
it aint strictly necessary no mo'
to open a cold-ass lil connection ta tha IMAP server
to access em.
When \fImailx\fR is invoked wit tha \fI\-D\fR option,
or when the
.I disconnected
variable is set,
only cached data is used
for any folda you open.
Lyrics dat aint yet been straight-up cached
are not available then,
but all other lyrics can be handled
as usual.
Changes made ta IMAP mailboxes in
.I disconnected
mode is committed ta tha IMAP server
next time it is used in
.I online
mode.
Synchronizin tha local status
with tha status on tha server
is thus partially within yo' responsibility;
if you forget ta initiate a cold-ass lil connection ta tha server again
before you leave yo' location,
changes made on one workstation
are not available on others.
Also if you alta IMAP mailboxes from a workstation
while uncommitted chizzlez is still pendin on another,
the latta data may become invalid.
Da same might also happen cuz of internal server status chizzles.
Yo ass should thus carefully evaluate dis feature up in yo' environment
before you rely on dat shit.
.PP
Many servers will close tha connection
afta a gangbangin' finger-lickin' dirty-ass short period of inactivity. Use one of
.nf

    \fBset pop3-keepkickin it=\fI30\fR
    \fBset imap-keepkickin it=\fI240\fR

.fi
to bust a keepkickin it message each 30 secondz fo' POP3,
or each 4 minutes fo' IMAP.
.PP
If you encounta problems connectin ta a SSL/TLS server,
try the
.I ssl-rand-egd
and
.I ssl-rand-file
variablez (see tha OpenSSL FAQUIZZY fo' mo' shiznit)
or specify tha protocol version with
.IR ssl-method .
Contact yo' ISP
if you need a cold-ass lil client certificate
or if verification of tha server certificate fails.
If tha failed certificate is indeed valid,
fetch its CA certificate by executin tha shell command
.nf

    $ \fBopenssl s_client </dev/null \-showcerts \-connect \e
           \fIserver.myisp.example\fB:\fIimaps\fB 2>&1 | tee \fIlog\fR

.fi
(see
.IR s_client (1))
and put it tha fuck into tha file specified with
.IR ssl-ca-file .
Da data you need is located all up in tha end of tha certificate chain
within (and including) tha `BEGIN CERTIFICATE'
and `END CERTIFICATE' lines.
(Note dat it is possible ta fetch
a forged certificate by dis method.
Yo ass can only straight-up rely
on tha authenticitizzle of tha CA certificate
if you fetch it up in a way dat is trusted by other means,
like fuckin by personally receivin tha certificate on storage media.)
.SS "Creatin a score file or message filter"
Da scorin commandz is dopest separated
from other configuration fo' clarity,
and is mostly
.I mailx
specific.
It be thus recommended ta put dem up in a separate file
that is sourced from yo' NAIL_EXTRA_RC as bigs up:
.nf
.sp
    \fBsource\fI ~/.scores\fR
.sp
.fi
Da \fI.scores\fR file could then look as bigs up:
.nf
.sp
    \fBdefine\fR \fIlist\fR {
        \fBscore\fR (subject "important rap") +10
        \fBscore\fR (subject "buggin rap") \-10
        \fBscore\fR (from "nicefellow@goodnet") +15
        \fBscore\fR (from "badguy@poornet") \-5
        \fBmove\fR (header x-spam-flag "+++++") \fI+junk\fR
    }
    \fBset folder-hook-\fRimap://user@host/public.list=\fIlist\fR
.sp
.fi
In dis scheme,
you would peep any mail from `nicefellow@goodnet',
even if tha surroundin rap is buggin;
but you normally would not peep mail from `badguy@poornet',
unless he participates up in tha blingin rap.
Lyrics dat is marked wit five or mo' plus characters
in they `X-Spam-Flag' field
(inserted by some server-side filterin software)
are moved ta tha folda `junk' up in the
.I folder
directory.
.PP
Be aware dat all criteria up in (\|) lead ta substrin matches,
so you would also score lyrics
from e.\|g. `notsobadguy@poornetmakers' wack here.
It be possible ta select addresses exactly rockin \fI"address"\fR
message justifications,
but these cannot be executed remotely 
and will thus cause all headers
to be downloaded from IMAP servers while lookin fo' matches.
.PP
When searchin lyrics on a IMAP server,
best performizzle is probably  bigged up 
by bustin  as nuff criteria as possible
in one big-ass (\|) justification,
because each single such justification
will result up in a separate network operation.
.SS "Activatin tha Bizzleesian filter"
Da Bizzleesian junk mail filta works
by examinin tha lyrics contained up in lyrics.
Yo ass decizzle yo ass what tha fuck a phat n' what tha fuck a wack message is.
Thus tha resultin filta is yo' straight-up underground one;
once it is erectly set up,
it will filta only lyrics similar ta them
previously specified by yo thugged-out ass.
.PP
To use tha Bizzleesian filter,
a location fo' tha junk mail database must be defined first:
.nf
.sp
    \fBset junkdb=\fI~/.junkdb\fR
.sp
.fi
Da junk mail database do not contain
actual lyrics extracted from lyrics,
but hashed representationz of em.
A foreign thug whoz ass can read tha database
could only examine tha frequency of previously known lyrics
in yo' mail.
.PP
If you have sufficient disk space (several 10\ MB) available,
it is recommended dat you set the
.I chained-junk-tokens
option.
Da filta will then also consider two-word tokens,
improvin its accuracy.
.PP
A set of phat lyrics n' junk lyrics must now be available;
it be also possible ta use tha incomin freshly smoked up lyrics fo' dis purpose,
although it will of course take some time
until tha filta becomes useful then.
Do not underestimate tha amount of statistical data needed;
some hundred lyrics is typically necessary
to git satisfactory thangs up in dis biatch,
and nuff thousand lyrics fo' dopest operation.
Yo ass gotta pass tha phat lyrics ta the
.I good
command,
and tha junk lyrics ta the
.I junk
command.
If you eva accidentally mark a phat message as junk or vice-versa,
call the
.I ungood
or
.I unjunk
command ta erect all dis bullshit.
.PP
Once a reasonable amount of statistics has been collected,
new lyrics can be classified automatically.
The
.I classify
command marks all lyrics dat tha filta considaz ta be junk,
but it do not big-ass up any action on dem by default.
It be recommended dat you move these lyrics tha fuck into a separate
folda just fo' tha case dat false positives occur,
or ta pass dem ta the
.I junk
command lata again n' again n' again ta further improve tha junk mail database.
To automatically move incomin junk lyrics
every time tha inbox is opened,
put lines like tha followin tha fuck into your
.I .scores
file (or whatever name you gave ta tha file up in tha last example):
.nf
.sp
    \fBdefine\fR \fIjunkfilter\fR {
        \fBclassify (smalla \fI20000\fB) :n\fR
        \fBmove :j\fR \fI+junk\fR
    }
    \fBset folder-hook-\fRimap://user@host/INBOX=\fIjunkfilter\fR
.sp
.fi
If you set the
.I verbose
option before hustlin the
.I classify
command,
.I mailx
prints tha lyrics it uses fo' calculatin tha junk status
along wit they statistical probabilities.
This can help you ta smoke up
why some lyrics is not classified
as you wanna dem ta be.
To peep tha statistical probabilitizzle of a given word,
use the
.I probability
command.
.PP
If a junk message was not recognized as such,
use the
.I junk
command ta erect all dis bullshit.
Also if you encounta a gangbangin' false positive
(a phat message dat was wrongly classified as junk),
pass it ta the
.I good
command.
.PP
Since the
.I classify
command must examine tha entire text
of all freshly smoked up lyrics up in tha respectizzle folder,
this will also cause all of dem ta be downloaded from tha IMAP server.
Yo ass should thus restrict tha size of lyrics fo' automatic filtering.
If server-based filterin be also available,
you might try if dat works fo' you first.
.SS "Readin HTML mail"
Yo ass need either the
.I w3m
or
.I lynx
utility
or another command-line wizzy browser
that can write plain text ta standard output.
.nf
.sp
    \fBset pipe-text/html=\fR"w3m -dump -T text/html"
.sp
.fi
or
.nf
.sp
    \fBset pipe-text/html=\fR"lynx -dump -force_html /dev/stdin"
.sp
.fi
will then cause HTML message parts ta be converted tha fuck into a mo' thugged-out form.
.SS "Viewin PDF attachments"
Most PDF viewers do not accept input directly from a pipe.
It be thus necessary ta store tha attachment up in a temporary file, as with
.nf
.sp
    \fBset pipe-application/pdf=\fR"cat >/tmp/mailx$$.pdf; \e
           acroread /tmp/mailx$$.pdf; rm /tmp/mailx$$.pdf"
.sp
.fi
Note dat securitizzle defects is discovered up in PDF viewers
from time ta time.
Automatical command execution like this
can compromise yo' system security,
in particular if you stay not always informed
about such issues.
.SS "Signed n' encrypted lyrics wit S/MIME"
S/MIME serves up two central mechanisms:
message signin n' message encryption.
A signed message gotz nuff some data up in addition
to tha regular text.
Da data can be used ta verify
that tha message was busted rockin a valid certificate,
that tha senderz address up in tha message header
matches dat up in tha certificate,
and dat tha message text has not been altered.
Signin a message do not chizzle its regular text;
it can be read regardless of whether tha recipientz software
is able ta handle S/MIME.
It be thus probably possible ta sign all outgoin lyrics
if so desired.\(emEncryption, up in contrast,
makes tha message text invisible fo' all people
except dem playas whoz ass have access ta tha secret decryption key.
To encrypt a message,
the specific recipientz hood encryption key must be known.
It be thus not possible ta bust encrypted mail ta people
unless they key has been retrieved
from either previous communication or hood key directories.
A message should always be signed before it is encrypted.
Otherwise, it is still possible dat tha encrypted message text
is altered.
.PP
A central concept ta S/MIME is dat of tha certification authoritizzle (CA).
A CA be a trusted institution dat thangs certificates.
For each of these certificates,
it can be verified dat it straight-up originates from tha CA,
provided dat tha CAz own certificate is previously known.
A set of CA certificates is probably served up wit OpenSSL
and installed on yo' system.
If you trust tha source of yo' OpenSSL software installation,
this offers reasonable securitizzle fo' S/MIME on tha Internet.
In general, a cold-ass lil certificate cannot be mo' secure
than tha method its CA certificate has been retrieved with, though.
Thus if you downlizzle a CA certificate from tha Internet,
you can only trust tha lyrics you verify rockin dat certificate
as much as you trust tha downlizzle process.
.PP
Da first thang you need fo' participatin up in S/MIME message exchange
is yo' underground certificate,
includin a private key.
Da certificate gotz nuff hood shiznit,
in particular yo' name n' yo' email address,
and tha hood key dat is used by others
to encrypt lyrics fo' you,
and ta verify signed lyrics they supposedly received from yo thugged-out ass.
Da certificate is included up in each signed message you send.
Da private key must be kept secret.
It be used ta decrypt lyrics dat were
previously encrypted wit yo' hood key,
and ta sign lyrics.
.PP
For underground use,
it is recommended dat you git a S/MIME certificate
from one of tha major CAs on tha Internizzle rockin yo' WWW browser.
(Many CAs offer such certificates fo' free.)
Yo ass will probably receive
a combined certificate n' private key
in PKCS#12 format which
.I mailx
does not directly accept
if S/MIME support is built rockin OpenSSL.
To convert it ta PEM format,
use tha followin shell command:
.nf
.sp
    $ \fBopenssl pkcs12 \-in \fIcert.p12\fB \-out \fIcert.pem\fB \-clcerts \e
        \-nodes\fR
.sp
.fi
If you omit the
.I \-nodes
parameter,
you can specifiy a additional
.I "PEM pass phrase"
for protectin tha private key.
.I Mailx
will then ask you fo' dat pass phrase
each time it signs or decrypts a message.
Yo ass can then use
.nf
.sp
    \fBset smime-sign-cert-\fImyname@myisp.example\fB=\fIcert.pem\fR
.sp
.fi
to make dis private key n' certificate known to
.IR mailx .
.PP
If S/MIME support is built rockin NSS,
the PKCS#12 file must be installed rockin Mozilla
(provided that
.I nss-config-dir
is set appropriately,
see above),
and no further action is necessary
unless multiple user certificates
for tha same email address is installed.
In dis case,
the
.I smime-sign-nickname
variable has ta be set appropriately.
.PP
Yo ass can now sign outgoin lyrics.
Just use
.nf
.sp
    \fBset smime-sign\fR
.sp
.fi
to do so.
.PP
From each signed message you send,
the recipient can fetch yo' certificate
and use it ta bust encrypted mail back ta yo thugged-out ass.
Accordingly if some muthafucka sendz you a signed message,
you can do tha same.
First use the
.I verify
command ta check tha validitizzle of tha certificate.
Afta that,
retrieve tha certificate n' tell
.I mailx
that it should use it fo' encryption:
.nf
.sp
    \fBcertsave\fI filename\fR
    \fBset smime-encrypt-\fIuser@host\fB=\fIfilename\fR
.sp
.fi
If S/MIME support is built rockin NSS,
the saved certificate must be installed rockin Mozilla.
Da value of the
.I smime-encrypt-user@host
is ignored then,
but if multiple certificates fo' tha recipient is available,
the
.I smime-nickname-user@host
variable must be set.
.PP
Yo ass should carefully consider
if you prefer ta store encrypted lyrics up in decrypted form.
If you do, anybody whoz ass has access ta yo' mail foldaz can read them,
but if you do not,
you might be unable ta read dem yo ass later
if you happen ta lose yo' private key.
The
.I decrypt
command saves lyrics up in decrypted form,
while the
.IR save ,
.IR copy ,
and
.I move
commandz leave dem encrypted.
.PP
Note dat neither S/MIME signin nor encryption
applies ta message subjects or other header fields.
Thus they may not contain sensitizzle shiznit
for encrypted lyrics,
and cannot be trusted even if tha message content
has been verified.
When bustin  signed lyrics,
it is recommended ta repeat any blingin header shiznit
in tha message text.
.SS "Usin CRLs wit S/MIME or SSL/TLS"
Certification authoritizzles (CAs) issue
certificate revocation lists (CRLs) on a regular basis.
These lists contain tha serial numberz of certificates
that done been declared invalid afta they done been issued.
Such probably happens
because tha private key fo' tha certificate has been compromised,
because tha balla of tha certificate has left
the organization dat is mentioned up in tha certificate,
etc.
To seriously use S/MIME or SSL/TLS verification,
an up-to-date CRL is required fo' each trusted CA.
There is otherwise no method
to distinguish between valid n' invalidated certificates.
.I Mailx
currently offers no mechanizzle ta fetch CRLs,
or ta access dem on tha Internet,
so you gotta retrieve dem by some external mechanism.
.PP
If S/MIME n' SSL/TLS support is built rockin OpenSSL,
.I mailx
accepts CRLs up in PEM format only;
CRLs up in DER format must be converted,
e.\|g. wit tha shell command
.nf
.sp
    $ \fBopenssl crl \-inform DER \-in \fIcrl.der\fB \-out \fIcrl.pem\fR
.sp
.fi
To tell
.I mailx
about tha CRLs,
a directory
that gotz nuff all CRL files
(and no other files)
must be pimped.
The
.I smime-crl-dir
or
.I ssl-crl-dir
variables, respectively,
must then be set ta point ta dat directory.
Afta that,
.I mailx
requires a CRL ta be present
for each CA dat is used
to verify a cold-ass lil certificate.
.PP
If S/MIME n' SSL/TLS support is built rockin NSS,
CRLs can be imported up in Mo'jizzle applications
(provided that
.I nss-config-dir
is set appropriately).
.SS "Sendin mail from scripts"
If you wanna bust mail from scripts,
you must be aware that
.I mailx
readz tha userz configuration filez by default.
So unless yo' script is only intended fo' yo' own underground use
(as e.g. a cold-ass lil cron thang),
you need ta circumvent dis by invoking
.I mailx
like
.nf
.sp
    \fBMAILRC=/dev/null mailx \-n\fR
.sp
.fi
Yo ass then need ta create a cold-ass lil configuration for
.I mailx
for yo' script.
This can be done by either pointin the
.I MAILRC
variable ta a cold-ass lil custom configuration file,
or by passin tha configuration up in environment variables.
Since nuff of tha configuration options is not valid shell variables, the
.I env
command is useful up in dis thang.
An invocation could thus look like
.nf
.sp
    \fBenv MAILRC=/dev/null\fR from=\fIscriptreply@domain\fR smtp=\fIhost\fR \e
          smtp-auth-user=\fIlogin\fR smtp-auth-password=\fIsecret\fR \e
          smtp-auth=\fIlogin\fR \fBmailx \-n\fR \-s "\fIsubject\fR" \e
          \-a \fIattachment_file\fR \fIrecipient@domain\fR <\fIcontent_file\fR
.SH "SEE ALSO"
fmt(1),
newaliases(1),
openssl(1),
pg(1),
more(1),
vacation(1),
ssl(3),
aliases(5),
locale(7),
mailaddr(7),
sendmail(8)
.SH NOTES
.PP
Variablez up in tha environment passed to
.I mailx
cannot be unset.
.PP
Da characta set conversion relies
on the
.IR iconv (3)
function.
Its functionalitizzle differs widely
between tha various system environments
\fImailx\fR runs on.
If tha message `Cannot convert from \fIa\fR ta \fIb\fR' appears,
either some charactas within tha message header or text
are not appropriate fo' tha currently selected terminal characta set,
or tha needed conversion aint supported by tha system.
In tha straight-up original gangsta case,
it is necessary ta set
an appropriate LC_CTYPE locale (e.\|g. \fIen_US\fR)
or the
.I ttycharset
variable.
In tha second case, the
.I sendcharsets
and
.I ttycharset
variablez must be set ta tha same value
to inhibit characta set conversion.
If
.I iconv()
is not available at all,
the value assigned to
.I sendcharsets
must match tha characta set dat is used on tha terminal.
.PP
Mailx expects input text ta be up in Unix format,
with lines separated by 
.I newline
(^J, \en) charactas only.
Non-Unix text filez dat use
.I carriage return
(^M, \er)
charactas up in addizzle is ghon be treated as binary data;
to bust such filez as text, strip these charactas e.\ g. by
.RS
.sp
tr \-d '\e015' <input | mailx .\ .\ .
.sp
.RE
or fix tha tools dat generate em.
.PP
Limitations wit IMAP mailboxes are:
It aint possible ta edit lyrics,
but it is possible ta append em.
Thus ta edit a message,
create a local copy of it,
edit it, append it,
and delete tha original.
Da line count fo' tha header display
is only appropriate if tha entire message has been downloaded
from tha server.
Da markin of lyrics as `new' is performed by tha IMAP server;
use of the
.I exit
command instead of
.I quit
will not cause it ta be reset,
and if the
.IR autoinc / newmail
variablez is unset,
lyrics dat arrived durin a session
will not be up in state `new' no mo'
when tha folda is opened again.
Also if commandz queued up in disconnected mode is committed,
the IMAP server will delete tha `new' flag
for all lyrics up in tha chizzled folder,
and freshly smoked up lyrics will step tha fuck up as unread
when it is selected fo' viewin later.
Da `flagged', `answered', n' `draft' attributes is probably permanent,
but some IMAP servers is known ta drop dem without notification.
.\" This is why mailx do not even check if storin dem succeeds.
Message numbers may chizzle wit IMAP
every time before tha prompt is printed
if \fImailx\fR is notified by tha server
that lyrics done been deleted
by some other client or process.
In dis case, `Expunged \fIn\fR lyrics' is printed,
and message numbers may have chizzled.
.PP
Limitations wit POP3 mailboxes are:
It aint possible ta edit lyrics,
they can only be copied n' deleted.
Da line count fo' tha header display
is only appropriate if tha entire message has been downloaded
from tha server.
Da status field of a message is maintained by tha server
between connections;
some servers do not update it at all,
and wit a server dat do,
the `exit' command aint gonna cause tha message status ta be reset.
Da `newmail' command n' tha `newmail' variable
have no effect.
It aint possible ta rename or ta remove POP3 mailboxes.
.PP
If a
.SM RUBOUT
(interrupt) is typed while a IMAP or POP3 operation is up in progress,
.I mailx
will wait until tha operation can be safely aborted,
and will then return ta tha command loop
and print tha prompt again.
When a second
.I RUBOUT
is typed while
.I mailx
is waitin fo' tha operation ta complete,
the operation itself is ghon be canceled.
In dis case,
data dat has not been fetched yet
will gotta be fetched
before tha next command can be performed.
If tha canceled operation
was rockin a SSL/TLS encrypted channel,
an error up in tha SSL transhiznit will straight-up likely result,
and tha connection is no longer usable.
.PP
As \fImailx\fR be a mail user agent,
it serves up only basic SMTP skillz.
If it fails ta contact its upstream SMTP server,
it aint gonna make further attempts ta transfer tha message
at a lata time,
and it do not leave other shiznit bout dis condition
than a error message on tha terminal
and a `dead.letter' file.
This is probably not a problem if tha SMTP server
is located up in tha same local network
as tha computa on which \fImailx\fR is run.
But fuck dat shiznit yo, tha word on tha street is dat care should be taken when rockin a remote server of a ISP;
it might be betta ta set up a local SMTP server then
which just acts as a proxy.
.PP
\fIMailx\fR immediately contacts tha SMTP server (or
.IR \%/usr/lib/sendmail )
even when operatin in
.I disconnected
mode.
It would not make much sense fo' \fImailx\fR ta defer outgoin mail
since SMTP servers probably provide
much mo' elaborated delay handling
than \fImailx\fR could big-ass up as a cold-ass lil client.
Thus tha recommended setup fo' bustin  mail in
.I disconnected
mode is ta configure a local SMTP server
such dat it sendz outgoin mail
as soon as a external network connection be available again,
i.\|e. ta advise it ta do dat from a network startup script.
.PP
Da junk mail filta bigs up tha concepts pimped by
Pizzle Graham up in his thugged-out articles,
``A Plan fo' Spam'', August 2002,
\%<http://www.paulgraham.com/spam.html>,
and ``Betta Bizzleesian Filtering'', January 2003,
\%<http://www.paulgraham.com/better.html>.
Chained tokens is cuz of a paper by
Jonathan A. Zdziarski,
``Advanced Language Classification rockin Chained Tokens'',
February 2004,
\%<http://www.nuclearelephant.com/papers/chained.html>.
.PP
A \fImail\fR command rocked up in Version 1 AT&T Unix.
Berkeley Mail was freestyled up in 1978 by Kurt Shoens.
This playa page is derived from
from Da Mail Reference Manual
originally freestyled by Kurt Shoens.
\fIHeirloom Mailx\fR enhancements is maintained n' documented
by Gunnar Ritter.
.PP
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
\(em Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright \(co 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
\%http://www.opengroup.org/unix/online.html\ .
Redistribution of dis material is permitted so long as dis notice remains
intact.
