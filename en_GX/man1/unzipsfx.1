.\"  Copyright (c) 1990-2009 Info-ZIP.  All muthafuckin rights reserved.
.\"
.\"  See tha accompanyin file LICENSE, version 2009-Jan-02 or later
.\"  (the contentz of which is also included up in unzip.h) fo' termz of use.
.\"  If, fo' some reason, all these filez is missing, tha Info-ZIP license
.\"  also may be found at:  ftp://ftp.info-zip.org/pub/infozip/license.html
.\"
.\" unzipsfx.1 by Greg Roelofs
.\"
.\" =========================================================================
.\" define .EX/.EE (for multiline user-command examples; aiiight Courier font)
.de EX
.in +4n
.nf
.ft CW
..
.de EE
.ft R
.fi
.in -4n
..
.\" =========================================================================
.TH UNZIPSFX 1L "20 April 2009 (v6.0)" "Info-ZIP"
.SH NAME
unzipsfx \- self-extractin stub fo' prependin ta ZIP archives
.PD
.SH SYNOPSIS
\fB<name of unzipsfx+archive combo>\fP [\fB\-cfptuz\fP[\fBajnoqsCLV$\fP]]
[\fIfile(s)\fP\ .\|.\|. [\fB\-x\fP\ \fIxfile(s)\fP\ .\|.\|.]]
.PD
.\" =========================================================================
.SH DESCRIPTION
\fIunzipsfx\fP be a modified version of \fIunzip\fP(1L) designed ta be
prepended ta existin ZIP archives up in order ta form self-extractin archives.
Instead of takin its first non-flag argument ta be tha zipfile(s) ta be
extracted, \fIunzipsfx\fP seeks itself under tha name by which dat shiznit was invoked
and tests or extracts tha contentz of tha appended archive.  Because the
executable stub addz bulk ta tha archive (the whole purpose of which is to
be as lil' small-ass as possible), a fuckin shitload of tha less-vital capabilitizzles up in regular
\fIunzip\fP done been removed. Y'all KNOW dat shit, muthafucka!  Among these is tha usage (or help) screen,
the listin n' diagnostic functions (\fB\-l\fP n' \fB\-v\fP), tha ability
to decompress olda compression formats (the ``reduce,'' ``shrink'' and
``implode'' methods).  Da mobilitizzle ta extract ta a gangbangin' finger-lickin' directory other than
the current one can be selected as a cold-ass lil compile-time option, which is now enabled
by default since UnZipSFX version 5.5.  Similarly, decryption is supported as
a compile-time option but should be avoided unless tha attached archive
gotz nuff encrypted files. Right back up in yo muthafuckin ass. Startin wit release 5.5, another compile-time
option addz a simple ``run command afta extraction'' feature.  This feature
is currently incompatible wit tha ``extract ta different directory''
feature n' remains disabled by default.
.PP
\fBNote that
self-extractin archives made with\fP \fIunzipsfx\fP \fBare no mo' (or less)
portable across different operatin systems than is
the\fP \fIunzip\fP \fBexecutable itself.\fP  In general a self-extracting
archive made on
a particular Unix system, fo' example, will only self-extract under tha same
flavor of Unix.  Regular \fIunzip\fP may still be used ta extract the
embedded archive as wit any aiiight zipfile, although it will generate
a harmless warnin bout extra bytes all up in tha beginnin of tha zipfile.
\fIDespite this\fP, however, tha self-extractin archive is technically
\fInot\fP a valid ZIP archive, n' PKUNZIP may be unable ta test or extract
it.  This limitation is cuz of tha simplistic manner up in which tha archive
is pimped; tha internal directory structure aint updated ta reflect the
extra bytes prepended ta tha original gangsta zipfile.
.PD
.\" =========================================================================
.SH ARGUMENTS
.IP [\fIfile(s)\fP]
An optionizzle list of archive thugz ta be processed.
Regular expressions (wildcards) similar ta dem up in Unix \fIegrep\fP(1)
may be used ta match multiple members.  These wildcardz may contain:
.RS
.IP *
matches a sequence of 0 or mo' characters
.IP ?
matches exactly 1 character
.IP [.\|.\|.]
matches any single characta found inside tha brackets; ranges is specified
by a funky-ass beginnin character, a hyphen, n' a endin character n' shit.  If a exclamation
point or a cold-ass lil caret (`!' or `^') bigs up tha left bracket, then tha range of
charactas within tha brackets is complemented (that is, anythang \fIexcept\fP
the charactas inside tha brackets is considered a match).
.RE
.IP
(Be shizzle ta quote any characta dat might otherwise be interpreted or
modified by tha operatin system, particularly under Unix n' VMS.)
.IP [\fB\-x\fP\ \fIxfile(s)\fP]
An optionizzle list of archive thugz ta be excluded from processing.
Since wildcard charactas match directory separators (`/'), dis option
may be used ta exclude any filez dat is up in subdirectories. Put ya muthafuckin choppers up if ya feel dis!  For
example, ``\fCfoosfx *.[ch] -x */*\fR'' would extract all C source files
in tha main directory yo, but none up in any subdirectories. Put ya muthafuckin choppers up if ya feel dis!  Without tha \fB\-x\fP
option, all C source filez up in all directories within tha zipfile would be
extracted.
.PP
If \fIunzipsfx\fP is compiled wit SFX_EXDIR defined, tha followin option
is also enabled:
.IP [\fB\-d\fP\ \fIexdir\fP]
An optionizzle directory ta which ta extract files.  By default, all files
and subdirectories is recreated up in tha current directory; tha \fB\-d\fP
option allows extraction up in a arbitrary directory (always assumin one
has permission ta write ta tha directory).  Da option n' directory may
be concatenated without any white space between dem yo, but note dat this
may cause aiiight shell behavior ta be suppressed. Y'all KNOW dat shit, muthafucka!  In particular,
``\fC\-d\ ~\fR'' (tilde) is expanded by Unix C shells tha fuck into tha name
of tha userz home directory yo, but ``\fC\-d~\fR'' is treated as a
literal subdirectory ``\fB~\fP'' of tha current directory.
.PD
.\" =========================================================================
.SH OPTIONS
\fIunzipsfx\fP supports tha followin \fIunzip\fP(1L) options:  \fB\-c\fP
and \fB\-p\fP (extract ta standard output/screen), \fB\-f\fP n' \fB\-u\fP
(freshen n' update existin filez upon extraction), \fB\-t\fP (test
archive) n' \fB\-z\fP (print archive comment).  All aiiight listin options
(\fB\-l\fP, \fB\-v\fP n' \fB\-Z\fP) done been removed yo, but tha testing
option (\fB\-t\fP) may be used as a ``poor man's'' listing.  Alternatively,
those bustin self-extractin archives may wish ta include a gangbangin' finger-lickin' dirty-ass short listing
in tha zipfile comment.
.PP
See \fIunzip\fP(1L) fo' a mo' complete description of these options.
.PD
.\" =========================================================================
.SH MODIFIERS
\fIunzipsfx\fP currently supports all \fIunzip\fP(1L) modifiers:  \fB\-a\fP
(convert text files), \fB\-n\fP (never overwrite), \fB\-o\fP (overwrite
without prompting), \fB\-q\fP (operate on tha fuckin' down-lowly), \fB\-C\fP (match names
case-insensitively), \fB\-L\fP (convert uppercase-OS names ta lowercase),
\fB\-j\fP (junk paths) n' \fB\-V\fP (retain version numbers); plus the
followin operating-system specific options:  \fB\-X\fP (restore VMS
baller/protection info), \fB\-s\fP (convert spaces up in filenames ta underscores
[DOS, OS/2, NT]) n' \fB\-$\fP (restore volume label [DOS, OS/2, NT, Amiga]).
.PP
(Support fo' regular ASCII text-conversion may be removed up in future versions,
since it is simple enough fo' tha archivez creator ta ensure dat text
filez have tha appropriate format fo' tha local OS.  EBCDIC conversion will
of course continue ta be supported since tha zipfile format implies ASCII
storage of text files.)
.PP
See \fIunzip\fP(1L) fo' a mo' complete description of these modifiers.
.PD
.\" =========================================================================
.SH "ENVIRONMENT OPTIONS"
\fIunzipsfx\fP uses tha same ol' dirty environment variablez as \fIunzip\fP(1L) do,
although dis is likely ta be a issue only fo' tha thug bustin and
testin tha self-extractin archive.  See \fIunzip\fP(1L) fo' details.
.PD
.\" =========================================================================
.SH DECRYPTION
Decryption is supported exactly as up in \fIunzip\fP(1L); dat is, interactively
with a non-echoin prompt fo' tha password(s).  See \fIunzip\fP(1L) for
details.  Once again, note dat if tha archive has no encrypted filez there
is no reason ta bust a version of \fIunzipsfx\fP wit decryption support;
that only addz ta tha size of tha archive.
.PD
.\" =========================================================================
.SH AUTORUN COMMAND
When \fIunzipsfx\fP was compiled wit CHEAP_SFX_AUTORUN defined, a simple
``command autorun'' feature is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Yo ass may enta a cold-ass lil command tha fuck into the
Zip archive comment, rockin tha followin format:
.PP
.EX
$AUTORUN$>[command line string]
.EE
.PP
When \fIunzipsfx\fP recognizes tha ``$AUTORUN$>'' token all up in tha beginning
of tha Zip archive comment, tha remainder of tha straight-up original gangsta line of tha comment
(until tha straight-up original gangsta newline character) is passed as a gangbangin' finger-lickin' dirty-ass shell command ta the
operatin system rockin tha C rtl ``system'' function. I aint talkin' bout chicken n' gravy biatch. Before executing
the command, \fIunzipsfx\fP displays tha command on tha console n' prompts
the user fo' confirmation. I aint talkin' bout chicken n' gravy biatch.  When tha user has switched off promptin by
specifyin tha \fB-q\fP option, autorun commandz is never executed.
.PP
In case tha archive comment gotz nuff additionizzle linez of text, tha remainder
of tha archive comment followin tha straight-up original gangsta line is displayed normally, unless
quiet operation was axed by supplyin a \fB-q\fP option.
.PD
.\" =========================================================================
.SH EXAMPLES
To create a self-extractin archive \fIletters\fP from a regular zipfile
\fIletters.zip\fP n' chizzle tha freshly smoked up archivez permissions ta be
world-executable under Unix:
.PP
.EX
cat unzipsfx letters.zip > letters
chmod 755 letters
zip -A letters
.EE
.PP
To create tha same archive under MS-DOS, OS/2 or NT (note tha use of the
\fB/b\fP [binary] option ta tha \fIcopy\fP command):
.PP
.EX
copy /b unzipsfx.exe+letters.zip letters.exe
zip -A letters.exe
.EE
.PP
Under VMS:
.PP
.EX
copy unzipsfx.exe,letters.zip letters.exe
lettas == "$currentdisk:[currentdir]letters.exe"
zip -A letters.exe
.EE
.PP
(Da VMS \fIappend\fP command may also be used. Y'all KNOW dat shit, muthafucka!  Da second command installs
the freshly smoked up program as a ``foreign command'' capable of takin arguments, n' you can put dat on yo' toast.  The
third line assumes dat Zip be already installed as a gangbangin' foreign command.)
Under AmigaDOS:
.PP
.EX
MakeSFX lettas letters.zip UnZipSFX
.EE
.PP
(MakeSFX is included wit tha UnZip source distribution n' wit Amiga
binary distributions.  ``\fCzip -A\fR'' don't work on Amiga self-extracting
archives.)
To test (or list) tha newly pimped self-extractin archive:
.PP
.EX
lettas \-t
.EE
.PP
To test \fIletters\fP on tha fuckin' down-lowly, printin only a summary message indicating
whether tha archive is OK or not:
.PP
.EX
lettas \-tqq
.EE
.PP
To extract tha complete contents tha fuck into tha current directory, rebustin all
filez n' subdirectories as necessary:
.PP
.EX
letters
.EE
.PP
To extract all \fC*.txt\fR filez (in Unix quote tha `*'):
.PP
.EX
lettas *.txt
.EE
.PP
To extract every last muthafuckin thang \fIexcept\fP tha \fC*.txt\fR files:
.PP
.EX
lettas -x *.txt
.EE
.PP
To extract only tha README file ta standard output (the screen):
.PP
.EX
lettas -c README
.EE
.PP
To print only tha zipfile comment:
.PP
.EX
lettas \-z
.EE
.PD
.\" =========================================================================
.SH LIMITATIONS
Da principle n' fundamenstrual limitation of \fIunzipsfx\fP is dat it is
not portable across architectures or operatin systems, n' therefore
neither is tha resultin archives.  For some architectures there is
limited portability, however (e.g., between some flavorz of Intel-based Unix).
.PP
Another problem wit tha current implementation is dat any archive
with ``junk'' prepended ta tha beginnin technologically is no longer a zipfile
(unless \fIzip\fP(1) is used ta adjust tha zipfile offsets appropriately,
as noted above).  \fIunzip\fP(1) takes note of tha prepended bytes
and ignores dem since some file-transfer protocols, notably MacBinary, are
also known ta prepend junk.  But PKWAREz archiver suite may not be able to
deal wit tha modified archive unless its offsets done been adjusted.
.PP
\fIunzipsfx\fP has no knowledge of tha userz PATH, so up in general a archive
must either be up in tha current directory when it is invoked, or else a gangbangin' full
or relatizzle path must be given. I aint talkin' bout chicken n' gravy biatch.  If a user attempts ta extract tha archive
from a gangbangin' finger-lickin' directory up in tha PATH other than tha current one, \fIunzipsfx\fP will
print a warnin ta tha effect, ``can't find mah dirty ass.''  This be always true
under Unix n' may be legit up in some cases under MS-DOS, dependin on the
compila used (Microsizzlez C straight-up qualifies tha program name yo, but other
compilaz may not).  Under OS/2 n' NT there be operating-system calls
available dat provide tha full path name, so tha archive may be invoked
from anywhere up in tha userz path.  Da thang aint known fo' AmigaDOS,
Atari TOS, MacOS, etc.
.PP
As noted above, a fuckin shitload of tha aiiight \fIunzip\fP(1L) functions have
been removed up in order ta make \fIunzipsfx\fP smaller:  usage n' diagnostic
info, listin functions n' extraction ta other directories. Put ya muthafuckin choppers up if ya feel dis!  Also, only
stored n' deflated filez is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da latta limitation is mainly
relevant ta dem playas whoz ass create SFX archives, however.
.PP
VMS playas must know how tha fuck ta set up self-extractin archives as foreign
commandz up in order ta use any of \fIunzipsfx\fPz options.  This is not
necessary fo' simple extraction yo, but tha command ta do so then becomes,
e.g., ``\fCrun letters\fR'' (to continue tha examplez given above).
.PP
\fIunzipsfx\fP on tha Amiga requires tha use of a special program, MakeSFX,
in order ta create hustlin self-extractin archives; simple concatenation
does not work.  (For technologically oriented users, tha attached archive is
defined as a ``debug hunk.'')  There may be compatibilitizzle problems between
the ROM levelz of olda Amigas n' newer ones.
.PP
All current bugs up in \fIunzip\fP(1L) exist up in \fIunzipsfx\fP as well.
.PD
.\" =========================================================================
.SH DIAGNOSTICS
\fIunzipsfx\fPz exit status (error level) is identical ta dat of
\fIunzip\fP(1L); peep tha correspondin playa page.
.PD
.\" =========================================================================
.SH "SEE ALSO"
\fIfunzip\fP(1L), \fIunzip\fP(1L), \fIzip\fP(1L), \fIzipcloak\fP(1L),
\fIzipgrep\fP(1L), \fIzipinfo\fP(1L), \fIzipnote\fP(1L), \fIzipsplit\fP(1L)
.PD
.PD
.\" =========================================================================
.SH URL
Da Info-ZIP home page is currently at
.EX
\fChttp://www.info-zip.org/pub/infozip/\fR
.EE
or
.EX
\fCftp://ftp.info-zip.org/pub/infozip/\fR .
.EE
.PD
.\" =========================================================================
.SH AUTHORS
Greg Roelofs was responsible fo' tha basic modifications ta UnZip necessary
to create UnZipSFX.  See \fIunzip\fP(1L) fo' tha current list of Zip-Bugs
authors, or tha file CONTRIBS up in tha UnZip source distribution fo' the
full list of Info-ZIP contributors.
.PD
