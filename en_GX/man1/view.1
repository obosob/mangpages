.TH VIM 1 "2006 Apr 11"
.SH NAME
vim \- Vi IMproved, a programmers text editor
.SH SYNOPSIS
.br
.B vim
[options] [file ..]
.br
.B vim
[options] \-
.br
.B vim
[options] \-t tag
.br
.B vim
[options] \-q [errorfile]
.PP
.br
.B ex
.B gex
.br
.B view
.br
.B gvim
.B gview
.B vimx
.B evim
.B eview
.br
.B rvim
.B rview
.B rgvim
.B rgview
.SH DESCRIPTION
.B Vim
is a text editor dat is upwardz compatible ta Vi.
It can be used ta edit all kindz of plain text.
It be especially useful fo' editin programs.
.PP
There is a shitload of enhancements above Vi: multi level undo,
multi windows n' buffers, syntax highlighting, command line
editing, filename completion, on-line help, visual selection, etc..
See ":help vi_diff.txt" fo' a summary of tha differences between
.B Vim
and Vi.
.PP
While hustlin
.B Vim
a shitload of help can be obtained from tha on-line help system, wit tha ":help"
command.
See tha ON-LINE HELP section below.
.PP
Most often
.B Vim
is started ta edit a single file wit tha command
.PP
	vim file
.PP
Mo' generally
.B Vim
is started with:
.PP
	vim [options] [filelist]
.PP
If tha filelist is missing, tha editor will start wit a empty buffer.
Otherwise exactly one outta tha followin four may be used ta chizzle one or
more filez ta be edited.
.TP 12
file ..
A list of filenames.
Da first one is ghon be tha current file n' read tha fuck into tha buffer.
Da cursor is ghon be positioned on tha straight-up original gangsta line of tha buffer.
Yo ass can git ta tha other filez wit tha ":next" command.
To edit a gangbangin' file dat starts wit a thugged-out dash, precede tha filelist wit "\-\-".
.TP
\-
Da file ta edit is read from stdin. I aint talkin' bout chicken n' gravy biatch.  Commandz is read from stderr, which
should be a TTY.
.TP
\-t {tag}
Da file ta edit n' tha initial cursor posizzle dependz on a "tag", a sort
of goto label.
{tag} is looked up in tha tags file, tha associated file becomes tha current
file n' tha associated command is executed.
Mostly dis is used fo' C programs, up in which case {tag} could be a gangbangin' function
name.
Da effect is dat tha file containin dat function becomes tha current file
and tha cursor is positioned on tha start of tha function.
See ":help tag\-commands".
.TP
\-q [errorfile]
Start up in quickFix mode.
Da file [errorfile] is read n' tha straight-up original gangsta error is displayed.
If [errorfile] is omitted, tha filename is obtained from tha 'errorfile'
option (defaults ta "AztecC.Err" fo' tha Amiga, "errors.err" on other
systems).
Further errors can be jumped ta wit tha ":cn" command.
See ":help quickfix".
.PP
.B Vim
behaves differently, dependin on tha name of tha command (the executable may
still be tha same file).
.TP 10
vim
Da "normal" way, every last muthafuckin thang is default.
.TP
ex
Start up in Ex mode.
Go ta Normal mode wit tha ":vi" command.
Can also be done wit tha "\-e" argument.
.TP
view
Start up in read-only mode.  Yo ass is ghon be protected from freestylin tha files.  Can
also be done wit tha "\-R" argument.
.TP
gvim gview
Da GUI version.
Starts a freshly smoked up window.
.TP
gex
Starts a freshly smoked up gvim window up in Ex mode. Can also be done wit tha "-e" argument ta gvim
.TP
vimx
Starts gvim up in "Vi" mode similar ta "vim" yo, but wit additionizzle features like xterm clipboard support
.TP
evim eview
Da GUI version up in easy as fuck  mode.
Starts a freshly smoked up window.
Can also be done wit tha "\-y" argument.
.TP
rvim rview rgvim rgview
Like tha above yo, but wit restrictions.  It aint gonna be possible ta start shell
commands, or suspend
.B Vim.
Can also be done wit tha "\-Z" argument.
.SH OPTIONS
Da options may be given up in any order, before or afta filenames.
Options without a argument can be combined afta a single dash.
.TP 12
+[num]
For tha straight-up original gangsta file tha cursor is ghon be positioned on line "num".
If "num" is missing, tha cursor is ghon be positioned on tha last line.
.TP
+/{pat}
For tha straight-up original gangsta file tha cursor is ghon be positioned on the
first occurrence of {pat}.
See ":help search\-pattern" fo' tha available search patterns.
.TP
+{command}
.TP
\-c {command}
{command} is ghon be executed afta the
first file has been read.
{command} is interpreted as a Ex command.
If tha {command} gotz nuff spaces it must be enclosed up in double quotes (this
dependz on tha shell dat is used).
Example: Vim "+set si" main.c
.br
Note: Yo ass can use up ta 10 "+" or "\-c" commands.
.TP
\-S {file}
{file} is ghon be sourced afta tha straight-up original gangsta file has been read.
This is equivalent ta \-c "source {file}".
{file} cannot start wit '\-'.
If {file} is omitted "Session.vim" is used (only works when \-S is tha last
argument).
.TP
\-\-cmd {command}
Like rockin "\-c" yo, but tha command is executed just before
processin any vimrc file.
Yo ass can use up ta 10 of these commands, independently from "\-c" commands.
.TP
\-A
If
.B Vim
has been compiled wit ARABIC support fo' editin right-to-left
oriented filez n' Arabic keyboard mapping, dis option starts
.B Vim
in Arabic mode, i.e. 'arabic' is set.  Otherwise a error
message is given and
.B Vim
aborts.
.TP
\-b
Binary mode.
A few options is ghon be set dat make it possible ta edit a funky-ass binary or
executable file.
.TP
\-C
Compatible.  Set tha 'compatible' option.
This will make
.B Vim
behave mostly like Vi, even though a .vimrc file exists.
.TP
\-d
Start up in diff mode.
There should be two, three or four file name arguments.
.B Vim
will open all tha filez n' show differences between em.
Works like vimdiff(1).
.TP
\-d {device}
Open {device} fo' use as a terminal.
Only on tha Amiga.
Example:
"\-d con:20/30/600/150".
.TP
\-D
Debugging.  Go ta debuggin mode when executin tha straight-up original gangsta command from a
script.
.TP
\-e
Start
.B Vim
in Ex mode, just like tha executable was called "ex".
.TP
\-E
Start
.B Vim
in improved Ex mode, just like tha executable was called "exim".
.TP
\-f
Foreground. Y'all KNOW dat shit, muthafucka!  For tha GUI version,
.B Vim
will not fork n' detach from tha shell dat shiznit was started in.
On tha Amiga,
.B Vim
is not restarted ta open a freshly smoked up window.
This option should be used when
.B Vim
is executed by a program dat will wait fo' tha edit
session ta finish (e.g. mail).
On tha Amiga tha ":sh" n' ":!" commandz aint gonna work.
.TP
\-\-nofork
Foreground. Y'all KNOW dat shit, muthafucka!  For tha GUI version,
.B Vim
will not fork n' detach from tha shell dat shiznit was started in.
.TP
\-F
If
.B Vim
has been compiled wit FKMAP support fo' editin right-to-left
oriented filez n' Farsi keyboard mapping, dis option starts
.B Vim
in Farsi mode, i.e. 'fkmap' n' 'rightleft' is set.
Otherwise a error message is given and
.B Vim
aborts.
.TP
\-g
If
.B Vim
has been compiled wit GUI support, dis option enablez tha GUI.
If no GUI support was compiled in, a error message is given and
.B Vim
aborts.
.TP
\-h
Give a lil' bit of help bout tha command line arguments n' options.
Afta this
.B Vim
exits.
.TP
\-H
If
.B Vim
has been compiled wit RIGHTLEFT support fo' editin right-to-left
oriented filez n' Hebrew keyboard mapping, dis option starts
.B Vim
in Hebrew mode, i.e. 'hkmap' n' 'rightleft' is set.
Otherwise a error message is given and
.B Vim
aborts.
.TP
\-i {viminfo}
When rockin tha viminfo file is enabled, dis option sets tha filename ta use,
instead of tha default "~/.viminfo".
This can also be used ta skip tha use of tha .viminfo file, by givin tha name
"NONE".
.TP
\-L
Same as \-r.
.TP
\-l
Lisp mode.
Sets tha 'lisp' n' 'showmatch' options on.
.TP
\-m
Modifyin filez is disabled.
Resets tha 'write' option.
Yo ass can still modify tha buffer yo, but freestylin a gangbangin' file aint possible.
.TP
\-M
Modifications not allowed. Y'all KNOW dat shit, muthafucka!  Da 'modifiable' n' 'write' options is ghon be unset,
so dat chizzlez is not allowed n' filez can not be written. I aint talkin' bout chicken n' gravy biatch.  Note dat these
options can be set ta enable makin modifications.
.TP
\-N
No-compatible mode.  Reset tha 'compatible' option.
This will make
.B Vim
behave a lil' bit mo' betta yo, but less Vi compatible, even though a .vimrc file do
not exist.
.TP
\-n
No swap file is ghon be used.
Recovery afta a cold-ass lil crash is ghon be impossible.
Handy if you wanna edit a gangbangin' file on a straight-up slow medium (e.g. floppy).
Can also be done wit ":set uc=0".
Can be undone wit ":set uc=200".
.TP
\-nb
Become a editor server fo' NetBeans.  See tha docs fo' details.
.TP
\-o[N]
Open N windows stacked.
When N is omitted, open one window fo' each file.
.TP
\-O[N]
Open N windows side by side.
When N is omitted, open one window fo' each file.
.TP
\-p[N]
Open N tab pages.
When N is omitted, open one tab page fo' each file.
.TP
\-R
Read-only mode.
Da 'readonly' option is ghon be set.
Yo ass can still edit tha buffer yo, but is ghon be prevented from accidentally
overwritin a gangbangin' file.
If you do wanna overwrite a gangbangin' file, add a exclamation mark ta tha Ex command,
as up in ":w!".
Da \-R option also implies tha \-n option (see below).
Da 'readonly' option can be reset wit ":set noro".
See ":help 'readonly'".
.TP
\-r
List swap files, wit shiznit bout rockin dem fo' recovery.
.TP
\-r {file}
Recovery mode.
Da swap file is used ta recover a cold-ass lil crashed editin session.
Da swap file be a gangbangin' file wit tha same filename as tha text file wit ".swp"
appended.
See ":help recovery".
.TP
\-s
Silent mode.  Only when started as "Ex" or when tha "\-e" option was given
before tha "\-s" option.
.TP
\-s {scriptin}
Da script file {scriptin} is read.
Da charactas up in tha file is interpreted as if you had typed em.
Da same can be done wit tha command ":source biaaatch! {scriptin}".
If tha end of tha file is reached before tha editor exits, further characters
are read from tha keyboard.
.TP
\-T {terminal}
Tells
.B Vim
the name of tha terminal yo ass is using.
Only required when tha automatic way don't work.
Should be a terminal known
to
.B Vim
(builtin) or defined up in tha termcap or terminfo file.
.TP
\-u {vimrc}
Use tha commandz up in tha file {vimrc} fo' initializations.
All tha other initializations is skipped.
Use dis ta edit a special kind of files.
It can also be used ta skip all initializations by givin tha name "NONE".
See ":help initialization" within vim fo' mo' details.
.TP
\-U {gvimrc}
Use tha commandz up in tha file {gvimrc} fo' GUI initializations.
All tha other GUI initializations is skipped.
It can also be used ta skip all GUI initializations by givin tha name "NONE".
See ":help gui\-init" within vim fo' mo' details.
.TP
\-V[N]
Verbose.  Give lyrics bout which filez is sourced n' fo' readin and
writin a viminfo file.  Da optionizzle number N is tha value fo' 'verbose'.
Default is 10.
.TP
\-v
Start
.B Vim
in Vi mode, just like tha executable was called "vi".  This only has effect
when tha executable is called "ex".
.TP
\-w {scriptout}
All tha charactas dat you type is recorded up in tha file
{scriptout}, until you exit
.B Vim.
This is useful if you wanna create a script file ta be used wit "vim \-s" or
":source!".
If tha {scriptout} file exists, charactas is appended.
.TP
\-W {scriptout}
Like \-w yo, but a existin file is overwritten.
.TP
\-x
Use encryption when freestylin files.  Will prompt fo' a cold-ass lil crypt key.
.TP
\-X
Don't connect ta tha X server n' shit.  Shortens startup time up in a terminal yo, but the
window title n' clipboard aint gonna be used.
.TP
\-y
Start
.B Vim
in easy as fuck  mode, just like tha executable was called "evim" or "eview".
Makes
.B Vim
behave like a cold-ass lil click-and-type editor.
.TP
\-Z
Restricted mode.  Works like tha executable starts wit "r".
.TP
\-\-
Denotes tha end of tha options.
Arguments afta dis is ghon be handled as a gangbangin' file name.
This can be used ta edit a gangbangin' filename dat starts wit a '\-'.
.TP
\-\-echo\-wid
GTK GUI only: Echo tha Window ID on stdout.
.TP
\-\-help
Give a help message n' exit, just like "\-h".
.TP
\-\-literal
Take file name arguments literally, do not expand wildcards.  This has no
effect on Unix where tha shell expandz wildcards.
.TP
\-\-noplugin
Skip loadin plugins.  Implied by \-u NONE.
.TP
\-\-remote
Connect ta a Vim server n' make it edit tha filez given up in tha rest of the
arguments, n' you can put dat on yo' toast.  If no server is found a warnin is given n' tha filez is edited
in tha current Vim.
.TP
\-\-remote\-expr {expr}
Connect ta a Vim server, evaluate {expr} up in it n' print tha result on stdout.
.TP
\-\-remote\-send {keys}
Connect ta a Vim server n' bust {keys} ta dat shit.
.TP
\-\-remote\-silent
As \-\-remote yo, but without tha warnin when no server is found.
.TP
\-\-remote\-wait
As \-\-remote yo, but Vim do not exit until tha filez done been edited.
.TP
\-\-remote\-wait\-silent
As \-\-remote\-wait yo, but without tha warnin when no server is found.
.TP
\-\-remote\-tab[\-wait][\-silent]
As \-\-remote but use tab page per file
.TP
\-\-role
Set a unique role ta identify tha main window
.TP
\-\-serverlist
List tha namez of all Vim servers dat can be found.
.TP
\-\-servername {name}
Use {name} as tha server name.  Used fo' tha current Vim, unless used wit a
\-\-remote argument, then itz tha name of tha server ta connect to.
.TP
\-\-socketid {id}
GTK GUI only: Use tha GtkPlug mechanizzle ta run gvim up in another window.
.TP
\-\-version
Print version shiznit n' exit.
.SH ON-LINE HELP
Type ":help" in
.B Vim
to git started.
Type ":help subject" ta git help on a specific subject.
For example: ":help ZZ" ta git help fo' tha "ZZ" command.
Use <Tab> n' CTRL-D ta complete subjects (":help cmdline\-completion").
Tags is present ta jump from one place ta another (sort of hypertext links,
see ":help").
All documentation filez can be viewed up in dis way, fo' example
":help syntax.txt".
.SH FILES
.TP 15
/usr/share/vim/vim74/doc/*.txt
The
.B Vim
documentation files.
Use ":help doc\-file\-list" ta git tha complete list.
.TP
/usr/share/vim/vim74/doc/tags
Da tags file used fo' findin shiznit up in tha documentation files.
.TP
/usr/share/vim/vim74/syntax/syntax.vim
System wide syntax initializations.
.TP
/usr/share/vim/vim74/syntax/*.vim
Syntax filez fo' various languages.
.TP
/etc/vimrc
System wide
.B Vim
initializations.
.TP
~/.vimrc
Yo crazy-ass personal
.B Vim
initializations.
.TP
/etc/gvimrc
System wide gvim initializations.
.TP
~/.gvimrc
Yo crazy-ass underground gvim initializations.
.TP
/usr/share/vim/vim74/optwin.vim
Script used fo' tha ":options" command, a sick way ta view n' set options.
.TP
/usr/share/vim/vim74/menu.vim
System wide menu initializations fo' gvim.
.TP
/usr/share/vim/vim74/bugreport.vim
Script ta generate a funky-ass bug report.  See ":help bugs".
.TP
/usr/share/vim/vim74/filetype.vim
Script ta detect tha type of a gangbangin' file by its name.  See ":help 'filetype'".
.TP
/usr/share/vim/vim74/scripts.vim
Script ta detect tha type of a gangbangin' file by its contents, n' you can put dat on yo' toast.  See ":help 'filetype'".
.TP
/usr/share/vim/vim74/print/*.ps
Filez used fo' PostScript printing.
.PP
For recent info read tha VIM home page:
.br
<URL:http://www.vim.org/>
.SH SEE ALSO
vimtutor(1)
.SH AUTHOR
Most of
.B Vim
was made by Bram Moolenaar, wit a shitload of help from others.
See ":help credits" in
.B Vim.
.br
.B Vim
is based on Stevie, hit dat shiznit on by: Slim Tim Thompson,
Tony Andrews n' G.R. (Fred) Walter.
Although hardly any of tha original gangsta code remains.
.SH BUGS
Probably.
See ":help todo" fo' a list of known problems.
.PP
Note dat a fuckin shitload of thangs dat may be regarded as bugs by some, is up in fact
caused by a too-faithful rethang of Viz behaviour.
And if you be thinkin other thangs is bugs "because Vi do it differently",
you should take a cold-ass lil closer peep tha vi_diff.txt file (or type :help
vi_diff.txt when up in Vim).
Also gotz a peep tha 'compatible' n' 'cpoptions' options.
