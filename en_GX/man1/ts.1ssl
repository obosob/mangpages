.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TS 1"
.TH TS 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
ts \- Time Stampin Authoritizzle tool (client/server)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBts\fR
\&\fB\-query\fR
[\fB\-rand\fR file:file...]
[\fB\-config\fR configfile]
[\fB\-data\fR file_to_hash]
[\fB\-digest\fR digest_bytes]
[\fB\-md2\fR|\fB\-md4\fR|\fB\-md5\fR|\fB\-sha\fR|\fB\-sha1\fR|\fB\-mdc2\fR|\fB\-ripemd160\fR|\fB...\fR]
[\fB\-policy\fR object_id]
[\fB\-no_nonce\fR]
[\fB\-cert\fR]
[\fB\-in\fR request.tsq]
[\fB\-out\fR request.tsq]
[\fB\-text\fR]
.PP
\&\fBopenssl\fR \fBts\fR
\&\fB\-reply\fR
[\fB\-config\fR configfile]
[\fB\-section\fR tsa_section]
[\fB\-queryfile\fR request.tsq]
[\fB\-passin\fR password_src]
[\fB\-signer\fR tsa_cert.pem]
[\fB\-inkey\fR private.pem]
[\fB\-chain\fR certs_file.pem]
[\fB\-policy\fR object_id]
[\fB\-in\fR response.tsr]
[\fB\-token_in\fR]
[\fB\-out\fR response.tsr]
[\fB\-token_out\fR]
[\fB\-text\fR]
[\fB\-engine\fR id]
.PP
\&\fBopenssl\fR \fBts\fR
\&\fB\-verify\fR
[\fB\-data\fR file_to_hash]
[\fB\-digest\fR digest_bytes]
[\fB\-queryfile\fR request.tsq]
[\fB\-in\fR response.tsr]
[\fB\-token_in\fR]
[\fB\-CApath\fR trusted_cert_path]
[\fB\-CAfile\fR trusted_certs.pem]
[\fB\-trusted_first\fR]
[\fB\-untrusted\fR cert_file.pem]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBts\fR command be a funky-ass basic Time Stampin Authoritizzle (\s-1TSA\s0) client n' server
application as specified up in \s-1RFC 3161 \s0(Time-Stamp Protocol, \s-1TSP\s0) fo' realz. A
\&\s-1TSA\s0 can be part of a \s-1PKI\s0 deployment n' its role is ta provide long
term proof of tha existence of a cold-ass lil certain datum before a particular
time yo. Here be a funky-ass brief description of tha protocol:
.IP "1." 4
Da \s-1TSA\s0 client computes a one-way hash value fo' a thugged-out data file n' sends
the hash ta tha \s-1TSA.\s0
.IP "2." 4
Da \s-1TSA\s0 attaches tha current date n' time ta tha received hash value,
signs dem n' sendz tha time stamp token back ta tha client. By
bustin dis token tha \s-1TSA\s0 certifies tha existence of tha original
data file all up in tha time of response generation.
.IP "3." 4
Da \s-1TSA\s0 client receives tha time stamp token n' verifies the
signature on dat shit. Well shiiiit, it also checks if tha token gotz nuff tha same ol' dirty hash
value dat it had busted ta tha \s-1TSA.\s0
.PP
There is one \s-1DER\s0 encoded protocol data unit defined fo' transportin a time
stamp request ta tha \s-1TSA\s0 n' one fo' bustin  tha time stamp response
back ta tha client. Da \fBts\fR command has three main functions:
bustin a time stamp request based on a thugged-out data file,
bustin a time stamp response based on a request, verifyin if a
response correspondz ta a particular request or a thugged-out data file.
.PP
There is no support fo' bustin  tha requests/responses automatically
over \s-1HTTP\s0 or \s-1TCP\s0 yet as suggested up in \s-1RFC 3161.\s0 Da playas must bust the
requests either by ftp or e\-mail.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Time Stamp Request generation"
.IX Subsection "Time Stamp Request generation"
Da \fB\-query\fR switch can be used fo' bustin n' printin a time stamp
request wit tha followin options:
.IP "\fB\-rand\fR file:file..." 4
.IX Item "-rand file:file..."
Da filez containin random data fo' seedin tha random number
generator. Shiiit, dis aint no joke. Multiple filez can be specified, tha separator is \fB;\fR for
MS-Windows, \fB,\fR fo' \s-1VMS\s0 n' \fB:\fR fo' all other platforms. (Optional)
.IP "\fB\-config\fR configfile" 4
.IX Item "-config configfile"
Da configuration file ta use, dis option overrides the
\&\fB\s-1OPENSSL_CONF\s0\fR environment variable. Only tha \s-1OID\s0 section
of tha config file is used wit tha \fB\-query\fR command. Y'all KNOW dat shit, muthafucka! (Optional)
.IP "\fB\-data\fR file_to_hash" 4
.IX Item "-data file_to_hash"
Da data file fo' which tha time stamp request need ta be
created. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. stdin is tha default if neither tha \fB\-data\fR nor tha \fB\-digest\fR
parameta is specified. Y'all KNOW dat shit, muthafucka! (Optional)
.IP "\fB\-digest\fR digest_bytes" 4
.IX Item "-digest digest_bytes"
It be possible ta specify tha message imprint explicitly without tha data
file. Da imprint must be specified up in a hexadecimal format, two characters
per byte, tha bytes optionally separated by colons (e.g. 1A:F6:01:... or
1AF601...). Da number of bytes must match tha message digest algorithm 
in use. (Optional)
.IP "\fB\-md2\fR|\fB\-md4\fR|\fB\-md5\fR|\fB\-sha\fR|\fB\-sha1\fR|\fB\-mdc2\fR|\fB\-ripemd160\fR|\fB...\fR" 4
.IX Item "-md2|-md4|-md5|-sha|-sha1|-mdc2|-ripemd160|..."
Da message digest ta apply ta tha data file, it supports all tha message
digest algorithms dat is supported by tha openssl \fBdgst\fR command.
Da default is \s-1SHA\-1. \s0(Optional)
.IP "\fB\-policy\fR object_id" 4
.IX Item "-policy object_id"
Da policy dat tha client expects tha \s-1TSA\s0 ta use fo' bustin the
time stamp token. I aint talkin' bout chicken n' gravy biatch. Either tha dotted \s-1OID\s0 notation or \s-1OID\s0 names defined
in tha config file can be used. Y'all KNOW dat shit, muthafucka! If no policy be axed tha \s-1TSA\s0 will
use its own default policy. (Optional)
.IP "\fB\-no_nonce\fR" 4
.IX Item "-no_nonce"
No nonce is specified up in tha request if dis option is
given. I aint talkin' bout chicken n' gravy biatch. Otherwise a 64 bit long pseudo-random none is
included up in tha request. Well shiiiit, it is recommended ta use nonce to
protect against replay-attacks. (Optional)
.IP "\fB\-cert\fR" 4
.IX Item "-cert"
Da \s-1TSA\s0 is sposed ta fuckin include its signin certificate up in the
response. (Optional)
.IP "\fB\-in\fR request.tsq" 4
.IX Item "-in request.tsq"
This option specifies a previously pimped time stamp request up in \s-1DER\s0
format dat is ghon be printed tha fuck into tha output file. Useful when you need
to examine tha content of a request up in human-readable
.Sp
format. (Optional)
.IP "\fB\-out\fR request.tsq" 4
.IX Item "-out request.tsq"
Name of tha output file ta which tha request is ghon be written. I aint talkin' bout chicken n' gravy biatch. Default
is stdout. (Optional)
.IP "\fB\-text\fR" 4
.IX Item "-text"
If dis option is specified tha output is human-readable text format
instead of \s-1DER. \s0(Optional)
.SS "Time Stamp Response generation"
.IX Subsection "Time Stamp Response generation"
A time stamp response (TimeStampResp) consistz of a response status
and tha time stamp token itself (ContentInfo), if tha token generation was
successful naaahhmean, biatch? Da \fB\-reply\fR command is fo' bustin a time stamp
response or time stamp token based on a request n' printin the
response/token up in human-readable format. If \fB\-token_out\fR is not
specified tha output be always a time stamp response (TimeStampResp),
otherwise it aint nuthin but a time stamp token (ContentInfo).
.IP "\fB\-config\fR configfile" 4
.IX Item "-config configfile"
Da configuration file ta use, dis option overrides the
\&\fB\s-1OPENSSL_CONF\s0\fR environment variable. Right back up in yo muthafuckin ass. See \fB\s-1CONFIGURATION FILE
OPTIONS\s0\fR fo' configurable variables. (Optional)
.IP "\fB\-section\fR tsa_section" 4
.IX Item "-section tsa_section"
Da name of tha config file section conatinin tha settings fo' the
response generation. I aint talkin' bout chicken n' gravy biatch. If not specified tha default \s-1TSA\s0 section is
used, peep \fB\s-1CONFIGURATION FILE OPTIONS\s0\fR fo' details. (Optional)
.IP "\fB\-queryfile\fR request.tsq" 4
.IX Item "-queryfile request.tsq"
Da name of tha file containin a \s-1DER\s0 encoded time stamp request. (Optional)
.IP "\fB\-passin\fR password_src" 4
.IX Item "-passin password_src"
Specifies tha password source fo' tha private key of tha \s-1TSA.\s0 See
\&\fB\s-1PASS PHRASE ARGUMENTS\s0\fR up in \fIopenssl\fR\|(1). (Optional)
.IP "\fB\-signer\fR tsa_cert.pem" 4
.IX Item "-signer tsa_cert.pem"
Da signer certificate of tha \s-1TSA\s0 up in \s-1PEM\s0 format. Da \s-1TSA\s0 signing
certificate must have exactly one extended key usage assigned ta it:
timeStamping. Da extended key usage must also be critical, otherwise
the certificate is goin ta be refused. Y'all KNOW dat shit, muthafucka! Overrides tha \fBsigner_cert\fR
variable of tha config file. (Optional)
.IP "\fB\-inkey\fR private.pem" 4
.IX Item "-inkey private.pem"
Da signer private key of tha \s-1TSA\s0 up in \s-1PEM\s0 format. Overrides the
\&\fBsigner_key\fR config file option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fB\-chain\fR certs_file.pem" 4
.IX Item "-chain certs_file.pem"
Da collection of certificates up in \s-1PEM\s0 format dat will all
be included up in tha response up in addizzle ta tha signer certificate if
the \fB\-cert\fR option was used fo' tha request. This file is supposed to
contain tha certificate chain fo' tha signer certificate from its
issuer upwards. Da \fB\-reply\fR command do not build a cold-ass lil certificate
chain automatically. (Optional)
.IP "\fB\-policy\fR object_id" 4
.IX Item "-policy object_id"
Da default policy ta use fo' tha response unless tha client
explicitly requires a particular \s-1TSA\s0 policy. Da \s-1OID\s0 can be specified
either up in dotted notation or wit its name. Overrides the
\&\fBdefault_policy\fR config file option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fB\-in\fR response.tsr" 4
.IX Item "-in response.tsr"
Specifies a previously pimped time stamp response or time stamp token
(if \fB\-token_in\fR be also specified) up in \s-1DER\s0 format dat is ghon be written
to tha output file. This option do not require a request, it is
useful e.g. when you need ta examine tha content of a response or
token or you wanna extract tha time stamp token from a response. If
the input be a token n' tha output be a time stamp response a thugged-out default
\&'granted' status info be added ta tha token. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fB\-token_in\fR" 4
.IX Item "-token_in"
This flag can be used together wit tha \fB\-in\fR option n' indicates
that tha input be a \s-1DER\s0 encoded time stamp token (ContentInfo) instead
of a time stamp response (TimeStampResp). (Optional)
.IP "\fB\-out\fR response.tsr" 4
.IX Item "-out response.tsr"
Da response is freestyled ta dis file. Da format n' content of the
file dependz on other options (see \fB\-text\fR, \fB\-token_out\fR). Da default is
stdout. (Optional)
.IP "\fB\-token_out\fR" 4
.IX Item "-token_out"
Da output be a time stamp token (ContentInfo) instead of time stamp
response (TimeStampResp). (Optional)
.IP "\fB\-text\fR" 4
.IX Item "-text"
If dis option is specified tha output is human-readable text format
instead of \s-1DER. \s0(Optional)
.IP "\fB\-engine\fR id" 4
.IX Item "-engine id"
Specifyin a engine (by its unique \fBid\fR string) will cause \fBts\fR
to attempt ta obtain a gangbangin' functionizzle reference ta tha specified engine,
thus initialisin it if needed. Y'all KNOW dat shit, muthafucka! Da engine will then be set as tha default
for all available algorithms. Default is builtin. I aint talkin' bout chicken n' gravy biatch. (Optional)
.SS "Time Stamp Response verification"
.IX Subsection "Time Stamp Response verification"
Da \fB\-verify\fR command is fo' verifyin if a time stamp response or time
stamp token is valid n' matches a particular time stamp request or
data file. Da \fB\-verify\fR command do not use tha configuration file.
.IP "\fB\-data\fR file_to_hash" 4
.IX Item "-data file_to_hash"
Da response or token must be verified against file_to_hash. Da file
is hashed wit tha message digest algorithm specified up in tha token. I aint talkin' bout chicken n' gravy biatch. 
Da \fB\-digest\fR n' \fB\-queryfile\fR options must not be specified wit dis one.
(Optional)
.IP "\fB\-digest\fR digest_bytes" 4
.IX Item "-digest digest_bytes"
Da response or token must be verified against tha message digest specified
with dis option. I aint talkin' bout chicken n' gravy biatch. Da number of bytes must match tha message digest algorithm
specified up in tha token. I aint talkin' bout chicken n' gravy biatch. Da \fB\-data\fR n' \fB\-queryfile\fR options must not be
specified wit dis one. (Optional)
.IP "\fB\-queryfile\fR request.tsq" 4
.IX Item "-queryfile request.tsq"
Da original gangsta time stamp request up in \s-1DER\s0 format. Da \fB\-data\fR n' \fB\-digest\fR
options must not be specified wit dis one. (Optional)
.IP "\fB\-in\fR response.tsr" 4
.IX Item "-in response.tsr"
Da time stamp response dat need ta be verified up in \s-1DER\s0 format. (Mandatory)
.IP "\fB\-token_in\fR" 4
.IX Item "-token_in"
This flag can be used together wit tha \fB\-in\fR option n' indicates
that tha input be a \s-1DER\s0 encoded time stamp token (ContentInfo) instead
of a time stamp response (TimeStampResp). (Optional)
.IP "\fB\-CApath\fR trusted_cert_path" 4
.IX Item "-CApath trusted_cert_path"
Da name of tha directory containin tha trused \s-1CA\s0 certificatez of the
client. Right back up in yo muthafuckin ass. See tha similar option of \fIverify\fR\|(1) fo' additional
details. Either dis option or \fB\-CAfile\fR must be specified. Y'all KNOW dat shit, muthafucka! (Optional)
.IP "\fB\-CAfile\fR trusted_certs.pem" 4
.IX Item "-CAfile trusted_certs.pem"
Da name of tha file containin a set of trusted self-signed \s-1CA \s0
certificates up in \s-1PEM\s0 format. Right back up in yo muthafuckin ass. See tha similar option of 
\&\fIverify\fR\|(1) fo' additionizzle details. Either dis option 
or \fB\-CApath\fR must be specified.
(Optional)
.IP "\fB\-trusted_first\fR" 4
.IX Item "-trusted_first"
Use certificates up in \s-1CA\s0 file or \s-1CA\s0 directory before other certificates
when buildin tha trust chain ta verify certificates.
This is mainly useful up in environments wit Bridge \s-1CA\s0 or Cross-Certified CAs.
.IP "\fB\-untrusted\fR cert_file.pem" 4
.IX Item "-untrusted cert_file.pem"
Set of additionizzle untrusted certificates up in \s-1PEM\s0 format which may be
needed when buildin tha certificate chain fo' tha \s-1TSA\s0z signing
certificate. This file must contain tha \s-1TSA\s0 signin certificate and
all intermediate \s-1CA\s0 certificates unless tha response includes em.
(Optional)
.SH "CONFIGURATION FILE OPTIONS"
.IX Header "CONFIGURATION FILE OPTIONS"
Da \fB\-query\fR n' \fB\-reply\fR commandz make use of a cold-ass lil configuration file
defined by tha \fB\s-1OPENSSL_CONF\s0\fR environment variable. Right back up in yo muthafuckin ass. See \fIconfig\fR\|(5)
for a general description of tha syntax of tha config file. The
\&\fB\-query\fR command uses only tha symbolic \s-1OID\s0 names section
and it can work without dat shit. But fuck dat shiznit yo, tha word on tha street is dat tha \fB\-reply\fR command needz the
config file fo' its operation.
.PP
When there be a cold-ass lil command line switch equivalent of a variable the
switch always overrides tha settings up in tha config file.
.IP "\fBtsa\fR section, \fBdefault_tsa\fR" 4
.IX Item "tsa section, default_tsa"
This is tha main section n' it specifies tha name of another section
that gotz nuff all tha options fo' tha \fB\-reply\fR command. Y'all KNOW dat shit, muthafucka! This default
section can be overriden wit tha \fB\-section\fR command line switch. (Optional)
.IP "\fBoid_file\fR" 4
.IX Item "oid_file"
See \fIca\fR\|(1) fo' description. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBoid_section\fR" 4
.IX Item "oid_section"
See \fIca\fR\|(1) fo' description. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fB\s-1RANDFILE\s0\fR" 4
.IX Item "RANDFILE"
See \fIca\fR\|(1) fo' description. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBserial\fR" 4
.IX Item "serial"
Da name of tha file containin tha hexadecimal serial number of the
last time stamp response pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This number is incremented by 1 for
each response. If tha file do not exist all up in tha time of response
generation a freshly smoked up file is pimped wit serial number 1. (Mandatory)
.IP "\fBcrypto_device\fR" 4
.IX Item "crypto_device"
Specifies tha OpenSSL engine dat is ghon be set as tha default fo' 
all available algorithms. Da default value is builtin, you can specify 
any other engines supported by OpenSSL (e.g. use chil fo' tha NCipher \s-1HSM\s0).
(Optional)
.IP "\fBsigner_cert\fR" 4
.IX Item "signer_cert"
\&\s-1TSA\s0 signin certificate up in \s-1PEM\s0 format. Da same as tha \fB\-signer\fR
command line option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBcerts\fR" 4
.IX Item "certs"
A file containin a set of \s-1PEM\s0 encoded certificates dat need ta be
included up in tha response. Da same as tha \fB\-chain\fR command line
option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBsigner_key\fR" 4
.IX Item "signer_key"
Da private key of tha \s-1TSA\s0 up in \s-1PEM\s0 format. Da same as tha \fB\-inkey\fR
command line option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBdefault_policy\fR" 4
.IX Item "default_policy"
Da default policy ta use when tha request do not mandate any
policy. Da same as tha \fB\-policy\fR command line option. I aint talkin' bout chicken n' gravy biatch. (Optional)
.IP "\fBother_policies\fR" 4
.IX Item "other_policies"
Comma separated list of policies dat is also aaight by tha \s-1TSA\s0
and used only if tha request explicitly specifies one of em. (Optional)
.IP "\fBdigests\fR" 4
.IX Item "digests"
Da list of message digest algorithms dat tha \s-1TSA\s0 accepts fo' realz. At least
one algorithm must be specified. Y'all KNOW dat shit, muthafucka! (Mandatory)
.IP "\fBaccuracy\fR" 4
.IX Item "accuracy"
Da accuracy of tha time source of tha \s-1TSA\s0 up in seconds, milliseconds
and microseconds. E.g. secs:1, millisecs:500, microsecs:100. If any of
the components is missin zero be assumed fo' dat field. Y'all KNOW dat shit, muthafucka! (Optional)
.IP "\fBclock_precision_digits\fR" 4
.IX Item "clock_precision_digits"
Specifies tha maximum number of digits, which represent tha fraction of 
seconds, dat  need ta be included up in tha time field. Y'all KNOW dat shit, muthafucka! Da trailin zeroes
must be removed from tha time, so there might straight-up be fewer digits,
or no fraction of secondz at all. Right back up in yo muthafuckin ass. Supported only on \s-1UNIX\s0 platforms.
Da maximum value is 6, default is 0.
(Optional)
.IP "\fBordering\fR" 4
.IX Item "ordering"
If dis option is yeaaaa tha responses generated by dis \s-1TSA\s0 can always
be ordered, even if tha time difference between two responses is less
than tha sum of they accuracies. Put ya muthafuckin choppers up if ya feel dis! Default is no. (Optional)
.IP "\fBtsa_name\fR" 4
.IX Item "tsa_name"
Set dis option ta yeaaaa if tha subject name of tha \s-1TSA\s0 must be included in
the \s-1TSA\s0 name field of tha response. Default is no. (Optional)
.IP "\fBess_cert_id_chain\fR" 4
.IX Item "ess_cert_id_chain"
Da SignedData objects pimped by tha \s-1TSA\s0 always contain the
certificate identifier of tha signin certificate up in a signed
attribute (see \s-1RFC 2634,\s0 Enhanced Securitizzle Skillz). If dis option
is set ta yeaaaa n' either tha \fBcerts\fR variable or tha \fB\-chain\fR option
is specified then tha certificate identifierz of tha chain will also
be included up in tha SigningCertificate signed attribute. If this
variable is set ta no, only tha signin certificate identifier is
included. Y'all KNOW dat shit, muthafucka! Default is no. (Optional)
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
\&\fB\s-1OPENSSL_CONF\s0\fR gotz nuff tha path of tha configuration file n' can be
overriden by tha \fB\-config\fR command line option.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
All tha examplez below presume dat \fB\s-1OPENSSL_CONF\s0\fR is set ta a proper
configuration file, e.g. tha example configuration file 
openssl/apps/openssl.cnf will do.
.SS "Time Stamp Request"
.IX Subsection "Time Stamp Request"
To create a time stamp request fo' design1.txt wit \s-1SHA\-1 \s0
without nonce n' policy n' no certificate is required up in tha response:
.PP
.Vb 2
\&  openssl ts \-query \-data design1.txt \-no_nonce \e
\&        \-out design1.tsq
.Ve
.PP
To create a similar time stamp request wit specifyin tha message imprint
explicitly:
.PP
.Vb 2
\&  openssl ts \-query \-digest b7e5d3f93198b38379852f2c04e78d73abdd0f4b \e
\&         \-no_nonce \-out design1.tsq
.Ve
.PP
To print tha content of tha previous request up in human readable format:
.PP
.Vb 1
\&  openssl ts \-query \-in design1.tsq \-text
.Ve
.PP
To create a time stamp request which includes tha \s-1MD\-5\s0 digest 
of design2.txt, requests tha signer certificate n' nonce,
specifies a policy id (assumin tha tsa_policy1 name is defined up in the
\&\s-1OID\s0 section of tha config file):
.PP
.Vb 2
\&  openssl ts \-query \-data design2.txt \-md5 \e
\&        \-policy tsa_policy1 \-cert \-out design2.tsq
.Ve
.SS "Time Stamp Response"
.IX Subsection "Time Stamp Response"
Before generatin a response a signin certificate must be pimped for
the \s-1TSA\s0 dat gotz nuff tha \fBtimeStamping\fR critical extended key usage extension
without any other key usage extensions. Yo ass can add the
\&'extendedKeyUsage = critical,timeStamping' line ta tha user certificate section
of tha config file ta generate a proper certificate. Right back up in yo muthafuckin ass. See \fIreq\fR\|(1),
\&\fIca\fR\|(1), \fIx509\fR\|(1) fo' instructions. Da examples
below assume dat cacert.pem gotz nuff tha certificate of tha \s-1CA,\s0
tsacert.pem is tha signin certificate issued by cacert.pem and
tsakey.pem is tha private key of tha \s-1TSA.\s0
.PP
To create a time stamp response fo' a request:
.PP
.Vb 2
\&  openssl ts \-reply \-queryfile design1.tsq \-inkey tsakey.pem \e
\&        \-signer tsacert.pem \-out design1.tsr
.Ve
.PP
If you wanna use tha settings up in tha config file you could just write:
.PP
.Vb 1
\&  openssl ts \-reply \-queryfile design1.tsq \-out design1.tsr
.Ve
.PP
To print a time stamp reply ta stdout up in human readable format:
.PP
.Vb 1
\&  openssl ts \-reply \-in design1.tsr \-text
.Ve
.PP
To create a time stamp token instead of time stamp response:
.PP
.Vb 1
\&  openssl ts \-reply \-queryfile design1.tsq \-out design1_token.der \-token_out
.Ve
.PP
To print a time stamp token ta stdout up in human readable format:
.PP
.Vb 1
\&  openssl ts \-reply \-in design1_token.der \-token_in \-text \-token_out
.Ve
.PP
To extract tha time stamp token from a response:
.PP
.Vb 1
\&  openssl ts \-reply \-in design1.tsr \-out design1_token.der \-token_out
.Ve
.PP
To add 'granted' status info ta a time stamp token thereby bustin a
valid response:
.PP
.Vb 1
\&  openssl ts \-reply \-in design1_token.der \-token_in \-out design1.tsr
.Ve
.SS "Time Stamp Verification"
.IX Subsection "Time Stamp Verification"
To verify a time stamp reply against a request:
.PP
.Vb 2
\&  openssl ts \-verify \-queryfile design1.tsq \-in design1.tsr \e
\&        \-CAfile cacert.pem \-untrusted tsacert.pem
.Ve
.PP
To verify a time stamp reply dat includes tha certificate chain:
.PP
.Vb 2
\&  openssl ts \-verify \-queryfile design2.tsq \-in design2.tsr \e
\&        \-CAfile cacert.pem
.Ve
.PP
To verify a time stamp token against tha original gangsta data file:
  openssl ts \-verify \-data design2.txt \-in design2.tsr \e
	\-CAfile cacert.pem
.PP
To verify a time stamp token against a message imprint:
  openssl ts \-verify \-digest b7e5d3f93198b38379852f2c04e78d73abdd0f4b \e
	 \-in design2.tsr \-CAfile cacert.pem
.PP
Yo ass could also peep tha 'test' directory fo' mo' examples.
.SH "BUGS"
.IX Header "BUGS"
If you find any bugs or you have suggestions please write to
Zoltan Glozik <zglozik@opentsa.org>. Known issues:
.IP "\(bu" 4
No support fo' time stamps over \s-1SMTP,\s0 though it is like easy as fuck 
to implement a automatic e\-mail based \s-1TSA\s0 wit \fIprocmail\fR\|(1) 
and \fIperl\fR\|(1). \s-1HTTP\s0 server support is provided up in tha form of 
a separate apache module. \s-1HTTP\s0 client support is provided by
\&\fItsget\fR\|(1). Pure \s-1TCP/IP\s0 protocol aint supported.
.IP "\(bu" 4
Da file containin tha last serial number of tha \s-1TSA\s0 is not
locked when bein read or written. I aint talkin' bout chicken n' gravy biatch. This be a problem if mo' than one
instizzle of \fIopenssl\fR\|(1) is tryin ta create a time stamp
response all up in tha same time. This aint a issue when rockin tha apache
server module, it do proper locking.
.IP "\(bu" 4
Look fo' tha \s-1FIXME\s0 word up in tha source files.
.IP "\(bu" 4
Da source code should straight-up be reviewed by some muthafucka else, like a muthafucka.
.IP "\(bu" 4
Mo' testin is needed, I have done only some basic tests (see
test/testtsa).
.SH "AUTHOR"
.IX Header "AUTHOR"
Zoltan Glozik <zglozik@opentsa.org>, OpenTSA project (http://www.opentsa.org)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItsget\fR\|(1), \fIopenssl\fR\|(1), \fIreq\fR\|(1), 
\&\fIx509\fR\|(1), \fIca\fR\|(1), \fIgenrsa\fR\|(1), 
\&\fIconfig\fR\|(5)
