'\" t
.\" genisoimage.1 -*- nroff -*-  To render, first run all up in tbl
.\" Copyright 1993-1998 by Yggdrasil Computing
.\" Copyright 1996-1997 by Robert Leslie
.\" Copyright 1997-2001 by Jizzy Pearson
.\" Copyright 1999-2006 by Joerg Schilling
.\" Copyright 2002-2003 by Jungshik Shin
.\" Copyright 2003 by Jaakko Heinonen
.\" Copyright 2006 by tha Cdrkit maintainers
.\"
.TH GENISOIMAGE 1 "13 Dec 2006"
.\" ----------------------------------------
.SH NAME
genisoimage \- create ISO9660/Joliet/HFS filesystem wit optionizzle Rock Ridge attributes
.\" ----------------------------------------
.SH SYNOPSIS
.B genisoimage
.RI [ options ]
.RB [ \-o
.IR filename ]
.IR pathspec " [" "pathspec ..." ]
.\" ----------------------------------------
.SH DESCRIPTION
.B genisoimage
is a pre-masterin program ta generate ISO9660/Joliet/HFS hybrid
filesystems.
.PP
.B genisoimage
is capable of generatin tha 
.B System Use Sharin Protocol recordz (SUSP)
specified by the
.BR "Rock Ridge Interchange Protocol" .
This is used ta further describe the
filez up in tha ISO9660 filesystem ta a Unix host, n' serves up shiznit such
as long filenames, UID/GID, POSIX permissions, symbolic links, and
block n' characta thang files.
.PP
If Joliet or HFS hybrid command line options is specified, 
.B genisoimage
will create tha additionizzle filesystem metadata needed fo' Joliet or HFS.
Otherwise
.B genisoimage
will generate a pure ISO9660 filesystem.
.PP
.B genisoimage
can generate a 
.I true
(or
.IR shared )
HFS hybrid filesystem. Da same filez is peeped as HFS filez when
accessed from a Macintosh n' as ISO9660 filez when accessed from other 
machines yo. HFS standz for
.I Hierarchical File System
and is tha natizzle filesystem used on Macintosh computers.
.PP
As a alternative,
.B genisoimage
can generate the
.I Applez Extensions ta ISO9660
for each file. These extensions provide each file wit CREATOR, TYPE and
certain Finder flags when accessed from a Macintosh. Right back up in yo muthafuckin ass. See the
.B HFS MACINTOSH FILE FORMATS
section below.
.PP
.B genisoimage
takes a snapshot of a given directory tree, n' generates a
binary image which will correspond ta a ISO9660 and/or HFS filesystem when
written ta a funky-ass block device.
.PP
Each file freestyled ta tha ISO9660 filesystem must gotz a gangbangin' filename up in tha 8.3
format (up ta 8 characters, period, up ta 3 characters, all uppercase), even
if Rock Ridge is up in use.  This filename is used on systems dat is not able
to make use of tha Rock Ridge extensions (like fuckin MS-DOS), n' each filename
in each directory must be different from tha other filenames up in tha same
directory.
.B genisoimage
generally tries ta form erect names by forcin tha Unix filename to
uppercase n' truncatin as required yo, but often dis yieldz unsatisfactory
results when tha truncated names is not all unique.
.B genisoimage
assigns weightings ta each filename, n' if two names dat is otherwise the
same is found, tha name wit tha lower prioritizzle is renamed ta include a
3-digit number (guaranteed ta be unique).  For example, tha two files
.I foo.bar
and
.I foo.bar.~1~
could be rendered as
.I FOO.BAR;1
and
.IR FOO000.BAR;1 .
.PP
When used wit various HFS options,
.B genisoimage
will attempt ta recognise filez stored up in a fuckin shitload of Apple/Unix file formats
and will copy tha data n' resource forks as well as any
relevant Finder shiznit. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See the
.B HFS MACINTOSH FILE FORMATS
section below fo' mo' bout formats
.B genisoimage
supports.
.PP
Note that
.B genisoimage
is not designed ta rap wit tha writa directly.  Most writers
have proprietary command sets which vary from one manufacturer to
another, n' you need a specialized tool ta straight-up burn tha disc.
.B wodim
is one such tool.  Da sickest fuckin version of
.B wodim
is available from
.IR http://www.cdrkit.org/ .
.PP
.B pathspec
is tha path of tha directory tree ta be copied tha fuck into tha ISO9660 filesystem.
Multiple paths can be specified, and
.B genisoimage
will merge tha filez found up in all of tha specified path components to
form tha filesystem image.
.PP
If tha option
.B \-graft\-points
has been specified, it is possible ta graft tha paths at points other
than tha root directory, n' it is possible ta graft filez or
directories onto tha cdrom image wit names different than what tha fuck they
have up in tha source filesystem.  This is easiest ta illustrate wit a
couple examples.  Letz start by assumin dat a local file
.I ../old.lis
exists, n' you wish ta include it up in tha cdrom image.
.IP
foo/bar/=../old.lis
.PP
will include
.I old.lis
in tha cdrom image at
.IR /foo/bar/old.lis ,
while
.IP
foo/bar/xxx=../old.lis
.PP
will include 
.I old.lis
in tha cdrom image at
.IR /foo/bar/xxx .
Da same sort of syntax can be used wit directories as well.
.B genisoimage
will create any directories required such dat tha graft
points exist on tha cdrom image \(em tha directories do not need to
appear up in one of tha paths.  By default, any directories dat is pimped on 
the fly like dis gonna git permissions 0555 n' step tha fuck up ta be owned by the
thug hustlin
.BR genisoimage .
If you wish other permissions or ballaz of
the intermediate directories, see
.BR \-uid ", " \-gid ", " \-dir\-mode ", " \-file\-mode " n' " \-new\-dir\-mode .
.PP
.B genisoimage
will also run on Windows machines when compiled wit Cygnus' cygwin
(available from
.IR http://www.cygwin.com/ ).
Therefore most references up in dis playa page to
.I Unix
can be replaced with
.IR Win32 .
.\" ----------------------------------------
.SH OPTIONS
.PP
Several options can be specified as defaults up in a
.I .genisoimagerc
configuration file, as well as on tha command line.  If a parameta is
specified up in both places, tha settin from tha command line is used.
For details on tha format n' possible locationz of dis file, see
.BR genisoimagerc (5).
.TP
.BI \-abstract " file"
Specifies tha abstract filename.  There is space fo' 37 characters.
Equivalent to
.B ABST
in the
.I .genisoimagerc
file.
.TP
.BI \-A " application_id"
.TP
.BI \-appid " application_id"
Specifies a text strang dat is ghon be freestyled tha fuck into tha volume header.
This should describe tha application dat is ghon be on tha disc.  There
is space fo' 128 characters.  Equivalent to
.B APPI
in the
.I .genisoimagerc
file.
.TP
.B \-allow\-limited\-size
When processin filez larger than 2GiB which cannot be easily represented in
ISO9660, add dem wit a gangbangin' finger-lickin' dirty-ass shrunk visible file size ta ISO9660 n' wit the
correct visible file size ta tha UDF system. Da result be a inconsistent
filesystem n' playas need ta make shizzle dat they straight-up use UDF rather than
ISO9660 driver ta read a such disk. Implies enabling
.BR \-udf.
.TP
.B \-allow\-leading\-dots
.TP
.B \-ldots
Allow ISO9660 filenames ta begin wit a period. Y'all KNOW dat shit, muthafucka!  Usually, a leadin dot is
replaced wit a underscore up in order ta maintain MS-DOS compatibility.
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.B \-allow\-lowercase
This options allows lowercase charactas ta step tha fuck up in ISO9660 filenames.
.br
This violates tha ISO9660 standard yo, but it happens ta work on some systems.
Use wit caution.
.TP
.B \-allow\-multidot
This options allows mo' than one dot ta step tha fuck up in ISO9660 filenames.
A leadin dot aint affected by dis option, it
may be allowed separately using
.BR \-allow\-leading\-dots .
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.BI \-biblio " file"
Specifies tha bibliographic filename.  There is space fo' 37 characters.
Equivalent to
.B BIBL
in the
.I .genisoimagerc
file.
.TP
.B \-cache\-inodes
.TP
.B \-no\-cache\-inodes
Enable or disable cachin inode n' thang numbers ta find hard links
to files.  If
.B genisoimage
findz a hard link (a file wit multiple names), tha file will also be
hard-linked on tha CD, so tha file contents only step tha fuck up once.  This
helps ta save space.
.B \-cache\-inodes
is default on Unix-like operatin systems yo, but
.B \-no\-cache\-inodes
is default on some other systems like fuckin Cygwin, cuz it aint safe
to assume dat inode numbers is unique on dem systems.  (Some
versionz of Cygwin create fake inode numbers rockin a weak hashing
algorithm, which may produce duplicates.)  If two filez have tha same
inode number but is not hard links ta tha same file,
.B genisoimage \-cache\-inodes
will not behave erectly.
.B \-no\-cache\-inodes
is safe up in all thangs yo, but up in dat case
.B genisoimage
cannot detect hard links, so tha resultin CD image may be larger
than necessary.
.TP
.BI \-alpha\-boot " alpha_boot_image"
Specifies tha path n' filename of tha boot image ta be used when
makin a Alpha/SRM bootable CD. Da pathname must be relatizzle ta the
source path specified to
.BR genisoimage .
.TP
.BI \-hppa\-bootloader " hppa_bootloader_image"
Specifies tha path n' filename of tha boot image ta be used when
makin a HPPA bootable CD. Da pathname must be relatizzle ta the
source path specified to
.BR genisoimage .
Other options is required, all up in tha straight-up least a kernel filename and
a boot command line.  See the
.B HPPA NOTES
section below fo' mo' shiznit.
.TP
.BI \-hppa\-cmdline " hppa_boot_command_line"
Specifies tha command line ta be passed ta tha HPPA boot loader when
makin a funky-ass bootable CD. Right back up in yo muthafuckin ass. Separate tha parametas wit spaces or
commas. Mo' options must be passed to
.B genisoimage,
at tha straight-up least a kernel filename n' tha boot loader filename.
See the
.B HPPA NOTES
section below fo' mo' shiznit.
.TP
.BI \-hppa\-kernel\-32 " hppa_kernel_32"
.TP
.BI \-hppa\-kernel\-64 " hppa_kernel_64"
Specifies tha path n' filename of tha 32-bit and/or 64-bit kernel images
to be used when bustin a HPPA bootable CD. Da pathnames must be
relatizzle ta tha source path specified to
.BR genisoimage .
Other options is required, all up in tha straight-up least tha boot loader filename
and tha boot command line.  See the
.B HPPA NOTES
section below fo' mo' shiznit.
.TP
.BI \-hppa\-ramdisk " hppa_ramdisk_image"
Specifies tha path n' filename of tha ramdisk image ta be used when
makin a HPPA bootable CD. Da pathname must be relatizzle ta the
source path specified to
.BR genisoimage .
This parameta is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Other options is required, all up in tha hella
least a kernel filename n' tha boot command line. Right back up in yo muthafuckin ass. See the
.B HPPA NOTES
section below fo' mo' shiznit.
.TP
.BI \-mips\-boot " mips_boot_image"
Specifies tha path n' filename of tha boot image ta be used when
makin a SGI/big-endian MIPS bootable CD. Da pathname must be
relatizzle ta tha source path specified to
.BR genisoimage .
This option may be specified nuff muthafuckin times, ta store up ta 15 boot
images.
.TP
.BI \-mipsel\-boot " mipsel_boot_image"
Specifies tha path n' filename of tha boot image ta be used when
makin a DEC/lil-endian MIPS bootable CD. Da pathname must be
relatizzle ta tha source path specified to
.BR genisoimage .
.TP
.BI \-B " img_sun4,img_sun4c,img_sun4m,img_sun4d,img_sun4e"
.TP
.BI \-sparc\-boot " img_sun4,img_sun4c,img_sun4m,img_sun4d,img_sun4e"
Specifies a cold-ass lil comma-separated list of boot images dat is needed ta make
a bootable CD fo' SPARC systems.
Partizzle 0 is used fo' tha ISO9660 image, tha straight-up original gangsta image file is mapped
to partizzle 1.
Da comma-separated list may have up ta 7 fields, includin empty fields.
This option is required ta cook up a funky-ass bootable CD fo' Sun SPARC systems.
If
.B \-B
or
.B \-sparc\-boot
has been specified, tha straight-up original gangsta sector of tha resultin image will
contain a Sun disk label. This disk label specifies slice 0 fo' the
ISO9660 image n' slices 1 ta 7 fo' tha boot images that
have been specified wit dis option. I aint talkin' bout chicken n' gravy biatch. Byte offsets 512 ta 8191
within each of tha additionizzle boot images must contain a primary boot
that works fo' tha appropriate SPARC architecture. Da rest of each
of tha images probably gotz nuff a UFS filesystem used fo' tha primary
kernel boot stage.
.IP
Da implemented boot method is tha one found wit SunOS 4.x n' SunOS 5.x.
But fuck dat shiznit yo, tha word on tha street is dat it do not depend on SunOS internals but only on propertizzles of
the Open Boot prom, so it should be usable fo' any OS fo' SPARC systems.
For mo' shiznit also peep tha 
.B NOTES
section below.
.IP
If tha special filename
.B ...
is used, tha actual n' all followin boot partitions is mapped ta the
previous partition. I aint talkin' bout chicken n' gravy biatch. If
.B genisoimage
is called with
.BI \-G " image " \-B " ..."
all boot partitions is mapped ta tha partizzle dat gotz nuff tha ISO9660
filesystem image n' tha generic boot image dat is located up in tha first
16 sectorz of tha disc is used fo' all architectures.
.TP
.BI \-G " generic_boot_image"
Specifies tha path n' filename of tha generic boot image ta be used when making
a generic bootable CD.  Da boot image is ghon be placed on tha straight-up original gangsta 16
sectorz of tha CD, before tha ISO9660 primary volume descriptor.
If dis option is used together with
.BR \-sparc\-boot ,
the Sun disk label will overlay tha straight-up original gangsta 512 bytez of tha generic
boot image.
.TP
.BI \-b " eltorito_boot_image"
.TP
.BI \-eltorito\-boot " eltorito_boot_image"
Specifies tha path n' filename of tha boot image ta be used when making
an El Torito bootable CD fo' x86 PCs. Da pathname must be relatizzle to
the source path specified to
.BR genisoimage .
This option is required ta cook up a El Torito bootable CD.
Da boot image must be exactly 1200 kB, 1440 kB or 2880 kB, and
.B genisoimage
will use dis size when bustin tha output ISO9660 filesystem.  Da PC
BIOS will use tha image ta emulate a gangbangin' floppy disk, so tha straight-up original gangsta 512-byte
sector should contain PC boot code.  This will work, fo' example, if
the boot image be a LILO-based boot floppy.
.IP
If tha boot image aint a image of a gangbangin' floppy, you need ta add either
.BR \-hard\-disk\-boot " or " \-no\-emul\-boot .
If tha system should not boot off tha emulated disk, use
.BR \-no\-boot .
.IP
If
.B \-sort
has not been specified, tha boot images is sorted
with low prioritizzle (+2) ta tha beginnin of tha medium.
If you don't like this, you need ta specify a sort weight of 0 fo' tha boot images.
.TP
.B \-eltorito\-alt\-boot
Start wit a freshly smoked up set of El Torito boot parameters.  Up ta 63 El Torito
boot entries may be stored on a single CD.
.TP
.BI \-hard\-disk\-boot
Specifies dat tha boot image used ta create El Torito bootable CDs is
a hard disk image. Da image must begin wit a masta boot
record dat gotz nuff a single partition.
.TP
.BI \-no\-emul\-boot
Specifies dat tha boot image used ta create El Torito bootable CDs is
a "no emulation" image. Da system will load n' execute dis image without
performin any disk emulation.
.TP
.BI \-no\-boot
Specifies dat tha pimped El Torito CD should be marked as not bootable. The
system will provide a emulated drive fo' tha image yo, but will boot off
a standard boot device.
.TP
.BI \-boot\-load\-seg " segment_address"
Specifies tha load segment address of tha boot image fo' no-emulation
El Torito CDs.
.TP
.BI \-boot\-load\-size " load_sectors"
Specifies tha number of "virtual" (512-byte) sectors ta load in
no-emulation mode.  Da default is ta load tha entire boot file.  Some
BIOSes may have problems if dis aint a multiple of 4.
.TP
.B \-boot\-info\-table
Specifies dat a 56-byte table wit shiznit of tha CD-ROM layout
will be patched up in at offset 8 up in tha boot file.  If dis option is
given, tha boot file is
.IR "modified up in tha source filesystem" ,
so cook up a cold-ass lil copy of dis file if it cannot be easily regenerated!
See the
.B EL TORITO BOOT INFO TABLE
section fo' a thugged-out description of dis table.
.TP
.BI \-C " last_sess_start,next_sess_start"
.TP
.BI \-cdrecord\-params " last_sess_start,next_sess_start"
This option is needed ta create a CD Extra or tha image of a second
session or a higher-level session fo' a multisession disc.
.B \-C
takes two numbers separated by a cold-ass lil comma. Da first is tha straight-up original gangsta sector
in tha last session of tha disc dat should be appended to.
Da second number is tha startin sector number of tha freshly smoked up session.
Da erect numbers may be retrieved by calling
.B wodim \-msinfo ...
If
.B \-C
is used up in conjunction with
.BR \-M ,
.B genisoimage
will create a gangbangin' filesystem image dat is intended ta be a cold-ass lil continuation
of tha previous session.
If
.B \-C
is used without
.BR \-M ,
.B genisoimage
will create a gangbangin' filesystem image dat is intended ta be used fo' a second
session on a CD Extra. This be a multisession CD dat holdz audio data
in tha straight-up original gangsta session n' a ISO9660 filesystem up in tha second session.
.TP
.BI \-c " boot_catalog"
.TP
.BI \-eltorito\-catalog " boot_catalog"
Specifies tha path n' filename of tha boot catalog, which is required
for a El Torito bootable CD. Da pathname must be relatizzle ta tha source
path specified to
.BR genisoimage .
This file is ghon be banged tha fuck into tha output tree n' not pimped
in tha source filesystem, so be
sure tha specified filename do not conflict wit a existin file, or
it is ghon be excluded. Y'all KNOW dat shit, muthafucka! Usually a name like
.I boot.catalog
is chosen.
.IP
If
.B \-sort
has not been specified, tha boot catalog sorted
with low prioritizzle (+1) ta tha beginnin of tha medium.
If you don't like this, you need ta specify a sort weight of 0 fo' tha boot catalog.
.TP
.B \-check\-oldnames
Peep all filenames imported from tha oldschool session fo' compliizzle with
the ISO9660 file namin rules.
Without dis option, only names longer than 31 charactas is checked,
as these filez is a straight-up violation of tha ISO9660 standard.
.TP
.BI \-check\-session " file"
Peep all oldschool sessions fo' compliizzle wit actual
.B genisoimage 
ISO9660 file namin rules.
This be a high-level option dat combines
.B \-M
.I file
.BR "\-C 0,0 \-check\-oldnames" .
For tha parameta 
.IR file ,
see tha description of
.BR \-M .
.TP
.BI \-checksum_algorithm_iso " alg1,alg2,..."
Specify tha checksum types desired fo' tha output image.
.TP
.BI \-checksum_algorithm_template " alg1,alg2,..."
Specify tha checksum types desired fo' tha output jigdo template.
.TP
.BI \-copyright " file"
Specifies copyright shiznit, typically a gangbangin' filename on tha disc.
There is space fo' 37 characters.  Equivalent to
.B COPY
in the
.I .genisoimagerc
file.
.TP
.B \-d
.TP
.B \-omit\-period
Do not append a period ta filez dat aint gots one.
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.B \-D
.TP
.B \-disable\-deep\-relocation
Do not use deep directory relocation, n' instead just pack dem up in the
way we peep em.
.br
If ISO9660:1999 has not been selected,
this violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.B \-debug
Set debug flag.
.TP
.BI \-dir\-mode " mode"
Overrides tha mode of directories used ta create tha image to
.IR mode ,
specified as 4 digitz of permission bits as in
.BR chmod (1).
This option automatically enablez Rock Ridge extensions.
.TP
.B \-dvd\-video
Generate a DVD-Video compliant UDF filesystem. This is done by sortin the
order of tha content of tha appropriate filez n' by addin paddin 
between tha filez if needed.
Note dat tha sortin only works if tha DVD-Video filenames include uppercase
charactas only.
.IP
Note dat up in order ta git a DVD-Video compliant filesystem image, you
need ta prepare a DVD-Video compliant directory tree.  This requires a
directory
.B VIDEO_TS
(all caps) up in tha root directory of tha resultin DVD, n' usually
another directory
.BR AUDIO_TS .
.B VIDEO_TS
needz ta include all needed filez (filenames must be all caps) fo' a
compliant DVD-Video filesystem.
.TP
.BI \-e " efi_boot_file"
.TP
.BI \-efi\-boot " efi_boot_file"
Set EFI boot image name.
.TP
.B \-f
.TP
.B \-follow\-links
Big up symbolic links when generatin tha filesystem.  When dis option is not
in use, symbolic links is ghon be entered rockin Rock Ridge if enabled, otherwise
they is ghon be ignored.
.TP
.BI \-file\-mode " mode"
Overrides tha mode of regular filez used ta create tha image to
.IR mode ,
specified as 4 digitz of permission bits as in
.BR chmod (1).
This option automatically enablez Rock Ridge extensions.
.TP
.BI \-gid " gid"
Overrides tha crew ID read from tha source filez ta tha value of
.IR gid . 
Specifyin dis option automatically enablez Rock Ridge extensions.
.TP
.B \-gui
Switch tha behaviour fo' a GUI. This currently make tha output mo' verbose
but may have other effects up in tha future.
.TP
.B \-graft\-points
Allow use of graft points fo' filenames. If dis option is used, all
filenames is checked fo' graft points, n' you can put dat on yo' toast. Da filename is divided at the
first unescaped equal sign. I aint talkin' bout chicken n' gravy biatch fo' realz. All occurrencez of `\(rs' n' `=' characters
must be escaped wit `\(rs' if
.B \-graft\-points
has been specified.
.TP
.BI \-hide " glob"
Hide any filez matching
.IR glob ,
a shell wildcard pattern, from bein peeped up in tha ISO9660 or Rock Ridge
directory.
.I glob
may match any part of tha filename or path.  If
.I glob
matches a gangbangin' finger-lickin' directory, tha contentz of dat directory is ghon be hidden.
In order ta match a gangbangin' finger-lickin' directory name, make shizzle tha pathname do not include
a trailin `/' character.
All tha hidden filez will still be freestyled ta tha output CD image file.
See also
.BR \-hide\-joliet ,
and
.IR README.hide .
This option may be used multiple times.
.TP
.BI \-hide\-list " file"
A file containin a list of shell wildcardz ta be hidden. I aint talkin' bout chicken n' gravy biatch.  See
.BR \-hide .
.TP
.BI \-hidden " glob"
Add tha hidden (existence) ISO9660 directory attribute fo' filez and
directories matching
.IR glob ,
a shell wildcard pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch.  This attribute will prevent tha filez from
bein shown by some MS-DOS n' Windows commands.
.I glob
may match any part of tha filename or path.
In order ta match a gangbangin' finger-lickin' directory name, make shizzle tha pathname do not include
a trailin `/' character.
This option may be used multiple times.
.TP
.BI \-hidden\-list " file"
A file containin a list of shell wildcardz ta git tha hidden
attribute.  See
.BR \-hidden .
.TP
.BI \-hide\-joliet " glob"
Hide filez n' directories matching
.IR glob ,
a shell wildcard pattern, from bein peeped up in tha Joliet directory.
.I glob
may match any part of tha filename or path.  If
.I glob
matches a gangbangin' finger-lickin' directory, tha contentz of dat directory is ghon be hidden.
In order ta match a gangbangin' finger-lickin' directory name, make shizzle tha pathname do not include
a trailin `/' character.
All tha hidden filez will still be freestyled ta tha output CD image file.
This option is probably used with
.BR \-hide .
See also
.IR README.hide .
This option may be used multiple times.
.TP
.BI \-hide\-joliet\-list " file"
A file containin a list of shell wildcardz ta be hidden from the
Joliet tree.  See
.BR \-hide\-joliet .
.TP
.B \-hide\-joliet\-trans\-tbl
Hide the
.I TRANS.TBL
filez from tha Joliet tree.
These filez probably don't make sense up in tha Joliet ghetto as they list
the real name n' tha ISO9660 name which may both be different from the
Joliet name.
.TP
.B \-hide\-rr\-moved
Rename tha directory
.I RR_MOVED
to
.I .rr_moved
in tha Rock Ridge tree.
It seems ta be impossible ta straight-up hide the
.I RR_MOVED
directory from tha Rock Ridge tree.
This option only make tha visible tree less confusin for
people whoz ass don't give a fuck what tha fuck dis directory is for.
If you need ta have no
.I RR_MOVED
directory at all, you should use
.BR \-D .
Note dat if
.B \-D
has been specified, tha resultin filesystem aint ISO9660
level-1 compliant n' aint gonna be readable on MS-DOS.
See also the
.B NOTES
section.
.TP
.BI \-input\-charset " charset"
Input charset dat defines tha charactas used up in local filenames.
To git a list of valid charset names, call
.BR "genisoimage \-input\-charset help" .
To git a 1:1 mapping, you may use
.B default
as charset name. Da default initial joints are
.I cp437
on DOS-based systems and
.I iso8859-1
on all other systems.  See the
.B CHARACTER SETS
section below fo' mo' details.
.TP
.BI \-output\-charset " charset"
Output charset dat defines tha charactas dat is ghon be used up in Rock Ridge
filenames.  Defaults ta tha input charset.  See
.B CHARACTER SETS
section below fo' mo' details.
.TP
.BI \-iso\-level " level"
Set tha ISO9660 conformizzle level. Valid numbers is 1 ta 4.
.IP
With level 1, filez may only consist of one section n' filenames are
restricted ta 8.3 characters.
.IP
With level 2, filez may only consist of one section.
.IP
With level 3, no restrictions (other than ISO-9660:1988) do apply.
.IP
With all ISO9660 levels from 1 ta 3, all filenames is restricted to
uppercase letters, numbers n' underscores (_). Filenames are
limited ta 31 characters, directory nestin is limited ta 8
levels, n' pathnames is limited ta 255 characters.
.IP
Level 4 officially do not exist but
.B genisoimage
maps it ta ISO-9660:1999, which is ISO9660 version 2.
.IP
With level 4, a enhanced volume descriptor wit version number
and file structure version number set ta 2 is emitted.
Directory nestin aint limited ta 8 levels,
there is no need fo' a gangbangin' file ta contain a thugged-out dot n' tha dot has no
special meaning, filenames aint gots version numbers,
.\" (f XXX ??? Da characta used fo' fillin byte positions which are
.\"     specified ta be charactas is subject ta agreement between the
.\"     originator n' tha recipient of tha volume),
and filenames can be up ta 207 charactas long, or 197 charactas if
Rock Ridge is used.
.IP
When bustin Version 2 images,
.B genisoimage
emits a enhanced volume descriptor, similar but not identical ta a
primary volume descriptor. Shiiit, dis aint no joke. Be careful not ta use fucked up software
to make ISO9660 images bootable by assumin a second PVD copy n' patchin 
this putatizzle PVD copy tha fuck into a El Torito VD.
.TP
.B \-J
Generate Joliet directory recordz up in addizzle ta regular ISO9660
filenames.  This is primarily useful when tha discs is ta be used on
Windows machines.  Joliet filenames is specified up in Unicode n' each
path component can be up ta 64 Unicode charactas long.
Note dat Joliet aint a standard \(em only Microsizzlez Windows n' Linux
systems can read Joliet extensions.  For pimped outa portability, consider
usin both Joliet n' Rock Ridge extensions.
.TP
.B \-joliet\-long
Allow Joliet filenames ta be up ta 103 Unicode characters, instead of
64.  This breaks tha Joliet justification yo, but appears ta work. Use
with caution.
.\" Da number 103 is derived from: tha maximum Directory Record Length
.\" (254), minus tha length of Directory Record (33), minus CD-ROM XA
.\" System Use Extension Hype (14), divided by tha UTF-16
.\" characta size (2).
.TP
.BI \-jcharset " charset"
A combination of
.B \-J \-input\-charset
.IR charset .
See the
.B CHARACTER SETS
section below fo' mo' details.
.TP
.B \-l
.TP
.B \-full\-iso9660\-filenames
Allow full 31-characta filenames.  Normally tha ISO9660 filename is ghon be up in an
8.3 format which is compatible wit MS-DOS, even though tha ISO9660 standard
allows filenamez of up ta 31 characters.  If you use dis option, tha disc may
be hard as fuck ta use on a MS-DOS system yo, but will work on most other systems.
Use wit caution.
.TP
.B \-L
Outdated option; use
.B \-allow\-leading\-dots
instead.
.TP
.BI \-jigdo\-jigdo " jigdo_file"
Produce a
.B jigdo
.I .jigdo
metadata file as well as tha filesystem image.  See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-template " template_file"
Produce a
.B jigdo
.I .template
file as well as tha filesystem image.  See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-min\-file\-size " size"
Specify tha minimum size fo' a gangbangin' file ta be listed up in the
.I .jigdo
file. Default (and minimum allowed) is 1KB. Right back up in yo muthafuckin ass. See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-force\-md5 " path"
Specify a gangbangin' file pattern where files
.I must
be contained up in tha externally-supplied MD5 list as supplied by
.BR \-md5\-list .
See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-exclude " path"
Specify a gangbangin' file pattern where filez aint gonna be listed up in the
.I .jigdo
file. Right back up in yo muthafuckin ass. See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-map " path"
Specify a pattern mappin fo' tha jigdo file
(e.g.
.IR Debian=/mirror/debian ).
See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-md5\-list " md5_file"
Specify a gangbangin' file containin tha MD5sums, sizes n' pathnamez of the
filez ta be included up in the
.I .jigdo
file. Right back up in yo muthafuckin ass. See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-jigdo\-template\-compress " algorithm
Specify a cold-ass lil compression algorithm ta use fo' template date. gzip and
bzip2 is currently supported, n' gzip is tha default. Right back up in yo muthafuckin ass. See the
.B JIGDO NOTES
section below fo' mo' shiznit.
.TP
.BI \-log\-file " log_file"
Redirect all error, warnin n' shiznital lyrics to
.I log_file
instead of tha standard error.
.TP
.BI \-m " glob"
Exclude filez matching
.IR glob ,
a shell wildcard pattern, from bein freestyled ta CD-ROM.
.I glob
may match either tha filename component or tha full pathname.
This option may be used multiple times.  For example:
.sp
     genisoimage \-o rom \-m \(aq*.o\(aq \-m core \-m foobar
.sp
would exclude all filez endin up in `.o', or called
.IR core " or " foobar
from tha image.  Note dat if you had a gangbangin' finger-lickin' directory called
.IR foobar ,
it too (and of course all its descendants) would be excluded.
.TP
.BI \-exclude\-list " file"
A file containin a list of shell wildcardz ta be excluded. Y'all KNOW dat shit, muthafucka!  See
.BR \-m .
.TP
.B \-max\-iso9660\-filenames
Allow ISO9660 filenames ta be up ta 37 charactas long.
This option enables
.B \-N
as tha extra name space is taken from tha space reserved for
file version numbers.
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Although a cold-ass lil conformin application need ta provide a funky-ass buffer space of at
least 37 characters, discs pimped wit dis option may cause a funky-ass buffer
overflow up in tha readin operatin system. Use wit off tha hook care.
.TP
.BI \-M " path"
.TP
.BI \-M " device"
.TP
.BI \-dev " device"
Specifies path ta existin ISO9660 image ta be merged. Y'all KNOW dat shit, muthafucka! Da alternate form
takes a SCSI thang specifier dat uses tha same ol' dirty syntax as the
.B dev=
parameta of
.BR wodim .
Da output of 
.B genisoimage
will be a freshly smoked up session which should git freestyled ta tha end of the
image specified in
.BR \-M .
Typically dis requires multisession capabilitizzle fo' tha CD recorder
used ta write tha image.  This option may only be used up in conjunction
with
.BR \-C .
.TP
.B \-N
.TP
.B \-omit\-version\-number
Omit version numbers from ISO9660 filenames.
.br
This violates tha ISO9660 standard yo, but no one straight-up uses the
version numbers anyway.  Use wit caution.
.TP
.BI \-new\-dir\-mode " mode"
Specify tha mode, a 4-digit number as used in
.BR chmod (1),
to use when bustin freshly smoked up directories up in tha filesystem image.  The
default is 0555.
.TP
.B \-nobak
.TP
.B \-no\-bak
Exclude backup filez filez on tha ISO9660 filesystem; dat is,
filenames dat contain tha charactas `~' or `#' or end in
.IR .bak .
These is typically backup filez fo' Unix text editors.
.TP
.B \-force\-rr
Do not use tha automatic Rock Ridge attributes recognizzle fo' previous sessions.
This can work round problems wit images pimped by, e.g., NERO Burnin ROM.
.TP
.B \-no\-rr
Do not use tha Rock Ridge attributes from previous sessions.
This may help ta avoid problems when
.B genisoimage
findz illegal Rock Ridge signatures on a oldschool session.
.TP
.B \-no\-split\-symlink\-components
Don't split tha symlink components yo, but begin a freshly smoked up Continuation Area (CE)
instead. Y'all KNOW dat shit, muthafucka! This may waste some space yo, but tha SunOS 4.1.4 cdrom driver
has a funky-ass bug up in readin split symlink components.
.IP
It be questionable whether dis option is useful nowadays.
.TP
.B \-no\-split\-symlink\-fields
Don't split tha symlink fieldz yo, but begin a freshly smoked up Continuation Area (CE)
instead. Y'all KNOW dat shit, muthafucka! This may waste some space yo, but tha SunOS 4.1.4 and
Solaris 2.5.1 cdrom driver gotz a funky-ass bug up in readin split symlink fields
(a `/' can be dropped).
.IP
It be questionable whether dis option is useful nowadays.
.TP
.BI \-o " filename"
Specify tha output file fo' tha the ISO9660 filesystem image.
This can be a gangbangin' finger-lickin' disk file, a tape drive, or it can correspond directly
to tha thang name of tha optical disc thug n' shit.  If not specified, stdout is
used. Y'all KNOW dat shit, muthafucka!  Note dat tha output can also be a funky-ass block thang fo' a regular
disk partition, up in which case tha ISO9660 filesystem can be mounted
normally ta verify dat dat shiznit was generated erectly.
.TP
.B \-pad
Pad tha end of tha whole image by 150 sectors (300 kB).  This option is
enabled by default.  If used up in combination with
.BR \-B ,
paddin is banged between tha ISO9660 partizzle n' tha boot
partitions, such dat tha straight-up original gangsta boot partizzle starts
on a sector number dat be a multiple of 16.
.IP
Da paddin is needed as nuff operatin systems (e.g. Linux)
implement read-ahead bugs up in they filesystem I/O. These bugs result up in read
errors on filez dat is located near tha end of a track, particularly
if tha disc is freestyled up in Track At Once mode, or where a CD audio track
bigs up tha data track.
.\" XXX: Someone should check ta peep if tha Linux readahead bug is
.\" XXX: still present, n' update dis comment accordingly.
.TP
.B \-no\-pad
Do not pad tha end by 150 sectors (300 kB) n' do not make tha the boot partitions
start on a multiple of 16 sectors.
.TP
.BI \-path\-list " file"
A file containin a list of
.I pathspec
directories n' filenames ta be added ta tha ISO9660 filesystem. This list
of pathspecs is processed afta any dat step tha fuck up on tha command line. If the
argument is
.IR \- ,
the list is read from tha standard input.
.TP
.B \-P
Outdated option; use
.B \-publisher
instead.
.TP
.BI \-publisher " publisher_id"
Specifies a text strang dat is ghon be freestyled tha fuck into tha volume header.
This should describe tha publisher of tha CD-ROM, probably wit a
mailin address n' beeper number n' shit.  There is space fo' 128 characters.
Equivalent to
.B PUBL
in the
.I .genisoimagerc
file.
.TP
.BI \-p " preparer_id"
.TP
.BI \-preparer " preparer_id"
Specifies a text strang dat is ghon be freestyled tha fuck into tha volume header.
This should describe tha preparer of tha CD-ROM, probably wit a mailing
address n' beeper number n' shit.  There is space fo' 128 characters.
Equivalent to
.B PREP
in the
.I .genisoimagerc
file.
.TP
.B \-print\-size
Print estimated filesystem size up in multiplez of tha sector size (2048 bytes)
and exit. This option is needed for
Disk At Once mode n' wit some CD-R drives when pipin directly into
.BR wodim ,
cases where
.B wodim
needz ta know tha size of tha filesystem image up in advance.
Oldskool versions of
.B mkisofs
wrote dis shiznit (among other shiznit) ta 
.IR stderr .
As dis turns up ta be hard ta parse, tha number without any other shiznit
is now printed on 
.I stdout
too.
If you like ta write a simple shell script, redirect
.I stderr
and catch tha number from
.IR stdout .
This may be done with:
.sp
     cdblocks=\` genisoimage \-print\-size \-quiet .\|.\|. \`
.br
     genisoimage .\|.\|. | wodim .\|.\|. tsize=${cdblocks}s \-
.TP
.B \-quiet
This makes
.B genisoimage
even less verbose.  No progress output is ghon be provided.
.TP
.B \-R
.TP
.B \-rock
Generate SUSP n' RR recordz rockin tha Rock Ridge protocol ta further describe
the filez on tha ISO9660 filesystem.
.TP
.B \-r
.TP
.B \-rational\-rock
This is like tha \-R option yo, but file ballershizzle n' modes is set to
more useful joints, n' you can put dat on yo' toast.  Da uid n' gid is set ta zero, cuz they are
usually only useful on tha authorz system, n' not useful ta the
client.  All tha file read bits is set true, so dat filez and
directories is globally readable on tha client.  If any execute bit is
set fo' a gangbangin' file, set all of tha execute bits, so dat executablez are
globally executable on tha client.  If any search bit is set fo' a
directory, set all of tha search bits, so dat directories is globally
searchable on tha client.  All write bits is cleared, cuz the
filesystem is ghon be mounted read-only up in any case.  If any of tha special
mode bits is set, clear them, cuz file locks is not useful on a
read-only filesystem, n' set-id bits is not desirable fo' uid 0 or
gid 0.
When used on Win32, tha execute bit is set on
.I all
files. This be a result of tha lack of file permissions on Win32 n' the
Cygwin POSIX emulation layer n' shit.  See also
.BR \-uid ", " \-gid ,
.BR \-dir\-mode ", " \-file\-mode
and
.BR \-new\-dir\-mode .
.TP
.B \-relaxed\-filenames
Allows ISO9660 filenames ta include all 7-bit ASCII charactas except
lowercase letters.
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.BI \-root " dir"
Moves all filez n' directories into
.I dir
in tha image. This is essentially the
same as rockin 
.B \-graft\-points
and adding
.I dir
in front of every last muthafuckin pathspec yo, but is easier ta use.
.I dir
may straight-up be nuff muthafuckin levels deep. Well shiiiit, it is
created wit tha same permissions as other graft points.
.TP
.BI \-old-root " dir"
This option is necessary when freestylin a multisession
image n' tha previous (or even older) session was freestyled with
.B -root
.IR dir .
Usin a gangbangin' finger-lickin' directory name not found up in tha previous session
causes
.B genisoimage
to abort wit a error.
Without dis option,
.B genisoimage
would not be able ta find unmodified filez n' would
be forced ta write they data tha fuck into tha image once more.
.B \-root
and
.B \-old-root
are meant ta be used together ta do incremenstrual backups.
Da initial session would e.g. use:
.B genisoimage \-root backup_1
.IR dirs .
Da next incremenstrual backup with
.B genisoimage \-root backup_2 \-old-root backup_1
.I dirs
would take another snapshot of these directories. Put ya muthafuckin choppers up if ya feel dis! Da first
snapshot would be found in
.BR backup_1 ,
the second one in
.BR backup_2 ,
but only modified or freshly smoked up filez need ta be written
into tha second session.
Without these options, freshly smoked up filez would be added n' oldschool ones would be
preserved. Y'all KNOW dat shit, muthafucka! But oldschool ones would be overwritten if tha file was
modified. Y'all KNOW dat shit, muthafucka! Recoverin tha filez by copyin tha whole directory back
from CD would also restore filez dat was deleted
intentionally fo' realz. Accessin nuff muthafuckin olda versionz of a gangbangin' file requires
support by tha operatin system ta chizzle which sessions is ta be
mounted.
.TP
.BI \-s " sector type"
.TP
.BI \-sectype " sector type"
Set output sector type ta e.g. data/xa1/raw.
 .TP
.BI \-sort " sort_file"
Sort file locations on tha media. Right back up in yo muthafuckin ass. Sortin is controlled by a gangbangin' file that
gotz nuff pairz of filenames n' sortin offset weighting.
If tha weightin is higher, tha file is ghon be located closer ta the
beginnin of tha media, if tha weightin is lower, tha file is ghon be located
closer ta tha end of tha media. There must be only one space or tabs
characta between tha filename n' the
weight n' tha weight must be tha last charactas on a line. Da filename
is taken ta include all tha charactas up ta yo, but not includin tha last
space or tab characta on a line. This is ta allow fo' space charactas to
be in, or all up in tha end of a gangbangin' filename.
This option do
.B not
sort tha order of tha filenames dat appear
in tha ISO9660 directory. Well shiiiit, it sorts tha order up in which tha file data is
written ta tha CD image, which is useful up in order ta optimize the
data layout on a CD. Right back up in yo muthafuckin ass. See
.B README.sort
for mo' details.
.TP
.BI \-sparc\-boot " img_sun4,img_sun4c,img_sun4m,img_sun4d,img_sun4e"
See
.B \-B
above.
.TP
.BI \-sparc\-label " label"
Set tha Sun disk label name fo' tha Sun disk label dat is pimped with
.BR \-sparc-boot .
.TP
.B \-split\-output
Split tha output image tha fuck into nuff muthafuckin filez of approximately 1 GB each.
This helps ta create DVD-sized ISO9660 images on operatin systems without
pimpin' file support.
.B wodim
will concatenate mo' than one file tha fuck into a single track if freestylin ta a DVD.
To make
.B \-split\-output
work,
.BI \-o " filename"
must be specified. Y'all KNOW dat shit, muthafucka! Da resultin output images is ghon be named:
.IR filename_00 ", " filename_01 ", " filename_02 ....
.TP
.BI \-stream\-media\-size " #"
Select streamin operation n' set tha media size ta # sectors.
This allows you ta pipe tha output of the
.BR tar (1)
program into
.B genisoimage
and ta create a ISO9660 filesystem without tha need of a intermediate
tar archive file. 
If dis option has been specified,
.B genisoimage
readz from 
.I stdin 
and creates a gangbangin' file wit tha name
.IR STREAM.IMG .
Da maximum size of tha file (with padding) is 200 sectors less than tha 
specified media size. If 
.B \-no\-pad
has been specified, tha file size is 50 sectors less than tha specified media size.
If tha file is smaller,
.B genisoimage
will write padding. This may take awhile.
.IP
Da option 
.B \-stream\-media\-size
creates simple ISO9660 filesystems only n' may not used together wit multisession
or hybrid filesystem options.
.TP
.BI \-stream\-file\-name " name"
Reserved fo' future use.
.TP
.BI \-sunx86\-boot " UFS_img,,,AUX1_img"
Specifies a cold-ass lil comma-separated list of filesystem images dat is needed ta make
a bootable CD fo' Solaris x86 systems.
.IP
Note dat partizzle 1 is used fo' tha ISO9660 image n' dat partizzle 2 is
the whole disk, so partizzle 1 n' 2 may not be used by external partizzle data.
Da first image file is mapped ta partizzle 0.
There may be empty fieldz up in tha comma-separated list,
and list entries fo' partizzle 1 n' 2 must be empty.
Da maximum number of supported partitions is 8 (although tha Solaris x86
partizzle table could support up ta 16 partitions), so it is impossible
to specify mo' than 6 partizzle images.
This option is required ta cook up a funky-ass bootable CD fo' Solaris x86 systems.
.IP
If
.B \-sunx86\-boot
has been specified, tha straight-up original gangsta sector of tha resultin image will
contain a PC fdisk label wit a Solaris type 0x82 fdisk partizzle that
starts at offset 512 n' spans tha whole CD.
In addition, fo' tha Solaris type 0x82 fdisk partition, there be a
SVr4 disk label at offset 1024 up in tha straight-up original gangsta sector of tha CD.
This disk label specifies slice 0 fo' tha straight-up original gangsta (usually UFS type)
filesystem image dat is used ta boot tha PC n' slice 1 for
the ISO9660 image.
Slice 2 spans tha whole CD slice 3 .\|.\|. slice 7 may be used fo' additional
filesystem images dat done been specified wit dis option.
.IP
A Solaris x86 boot CD uses a 1024 byte sized primary boot dat uses the
.B El-Torito no-emulation
boot mode n' a secondary generic boot dat is up in CD sectors 1\|.\|.15.
For dis reason, both
.BI "-b " bootimage " \-no\-emul\-boot"
and
.BI \-G " genboot"
must be specified.
.TP
.BI \-sunx86\-label " label"
Set tha SVr4 disk label name fo' tha SVr4 disk label dat is pimped with
.BR \-sunx86-boot .
.TP
.BI \-sysid " ID"
Specifies tha system ID.  There is space fo' 32 characters.
Equivalent to
.B SYSI
in the
.I .genisoimagerc
file.
.TP
.B \-T
.TP
.B \-translation\-table
Generate a gangbangin' file
.I TRANS.TBL
in each directory on tha CD-ROM, which can be used
on non-Rock\ Ridge-capable systems ta help establish tha erect filenames.
There be also shiznit present up in tha file dat indicates tha major and
minor numbers fo' block n' characta devices, n' each symlink has tha name of
the link file given.
.TP
.BI \-table\-name " table_name"
Alternatizzle translation table filename (see above). Implies
.BR \-T .
If yo ass is bustin a multisession image you must use tha same name
as up in tha previous session.
.TP
.BI \-ucs\-level " level"
Set Unicode conformizzle level up in tha Joliet SVD. Da default level is 3.
It may be set ta 1..3 rockin dis option.
.TP
.B \-udf
Include UDF filesystem support up in tha generated filesystem image.  UDF
support is currently up in alpha status n' fo' dis reason, it is not
possible ta create UDF-only images.  UDF data structures is currently
coupled ta tha Joliet structures, so there be nuff pitfalls wit the
current implementation. I aint talkin' bout chicken n' gravy biatch. There is no UID/GID support, there is no POSIX
permission support, there is no support fo' symlinks.  Note dat UDF
wastes tha space from sector ~20 ta sector 256 all up in tha beginnin of the
disc up in addizzle ta tha space needed fo' real UDF data structures.
.TP
.BI \-uid " uid"
Overrides tha uid read from tha source filez ta tha value of
.IR uid . 
Specifyin dis option automatically enablez Rock Ridge extensions.
.TP
.B \-use\-fileversion
Da option 
.B \-use\-fileversion
allows
.B genisoimage
to use file version numbers from tha filesystem.
If tha option aint specified, 
.B genisoimage
creates a version number of 1 fo' all files.
File versions is strings up in tha range 
.I ;1
to
.I ;32767
This option is tha default on VMS. 
.TP
.B \-U
.TP
.B \-untranslated\-filenames
Allows "untranslated" filenames, straight-up violatin tha ISO9660 standards
busted lyrics bout above.  Enablez tha followin flags:
.B \-d \-l \-N \-allow\-leading\-dots \-relaxed\-filenames
.BR "\-allow\-lowercase \-allow\-multidot \-no\-iso\-translate" .
Allows mo' than one `.' characta up in tha filename, as well as
mixed-case filenames.  This is useful on HP-UX, where tha built-in
.I cdfs
filesystem do not recognize any extensions. Use wit off tha hook caution.
.TP
.B \-no\-iso\-translate
Do not translate tha charactas `#' n' `~' which is invalid fo' ISO9660 filenames.
Although invalid, these charactas is often used by Microsizzlez systems.
.br
This violates tha ISO9660 standard yo, but it happens ta work on nuff systems.
Use wit caution.
.TP
.BI \-V " volid"
Specifies tha volume ID (volume name or label) ta be freestyled tha fuck into the
masta block.  There is space fo' 32 characters.  Equivalent to
.B VOLI
in the
.I .genisoimagerc
file.  Da volume ID is used as tha mount point by tha Solaris volume
manager n' as a label assigned ta a gangbangin' finger-lickin' disc on various other platforms
like fuckin Windows n' Applez Mac OS.
.TP
.BI \-volset " ID"
Specifies tha volume set ID.  There is space fo' 128 characters.
Equivalent to
.B VOLS
in the
.I .genisoimagerc
file.
.TP
.BI \-volset\-size " #"
Sets tha volume set size ta #.
Da volume set size is tha number of CDs dat is up in a CD volume set.
A volume set be a cold-ass lil collection of one or mo' volumes, on which a set of
filez is recorded.
.IP
Volume Sets is not intended ta be used ta create a set numbered CDs
that is part of e.g. a Operation System installation set of CDs.
Volume Sets is rather used ta record a funky-ass big-ass directory tree dat would not
fit on a single volume.
Each volume of a Volume Set gotz nuff a thugged-out description of all tha directories
and filez dat is recorded on tha volumes where tha sequence numbers
are less than, or equal to, tha assigned Volume Set Size of tha current
volume.
.IP
.B genisoimage
currently do not support a
.B \-volset\-size
that is larger than 1.
.IP
Da option
.B \-volset\-size
must be specified before
.B \-volset\-seqno
on each command line.
.TP
.BI \-volset\-seqno " #"
Sets tha volume set sequence number ta #.
Da volume set sequence number is tha index number of tha current
CD up in a CD set.
Da option
.B \-volset\-size
must be specified before
.B \-volset\-seqno
on each command line.
.TP
.B \-v
.TP
.B \-verbose
Verbose execution. I aint talkin' bout chicken n' gravy biatch. If given twice on tha command line, extra debug shiznit
will be printed.
.TP
.BI \-x " glob"
Identical to
.B \-m
.IR glob .
.TP
.B \-XA
Generate XA directory attruibutes.
.TP
.B \-xa
Generate rationalized XA directory attruibutes.
.TP
.B \-z
.TP
.B \-transparent\-compression
Generate special
.I RRIP
recordz fo' transparently compressed files.
This is only of use n' interest fo' hosts dat support transparent
decompression, like fuckin Linux 2.4.14 or later n' shit.  Yo ass must specify
.BR \-R " or " \-r
to enable Rock Ridge, n' generate compressed filez rockin the
.B mkzftree
utilitizzle before hustlin
.BR genisoimage .
Note dat transparent compression be a nonstandard Rock Ridge extension.
Da resultin disks is only transparently readable if used on Linux.
On other operatin systems yo big-ass booty is ghon need ta call
.B mkzftree
by hand ta decompress tha files.
.\" ----------------------------------------
.SH "HFS OPTIONS"
.TP
.B \-hfs
Smoke a ISO9660/HFS hybrid CD. This option should be used up in conjunction
with the
.BR \-map ,
.B \-magic
and/or tha various
.I double dash
options given below.
.TP
.B \-apple
Smoke a ISO9660 CD wit Applez extensions. Right back up in yo muthafuckin ass. Similar to
.BR \-hfs ,
except dat tha Applez Extensions ta ISO9660 is added instead of
bustin a HFS hybrid volume.
Forma 
.B genisoimage
versions did include Rock Ridge attributes by default if 
.B \-apple
was specified. Y'all KNOW dat shit, muthafucka! This versions of
.B genisoimage
does not do dis no mo'. If you like ta have Rock Ridge attributes,
you need ta specify dis separately.
.TP
.BI \-map " mapping_file"
Use the
.I mapping_file
to set tha CREATOR n' TYPE shiznit fo' a gangbangin' file based on the
filenamez extension. I aint talkin' bout chicken n' gravy biatch fo' realz. A filename is 
mapped only if it aint one of tha know Apple/Unix file formats, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. See the
.B HFS CREATOR/TYPE
section below.
.TP
.BI \-magic " magic_file"
Da CREATOR n' TYPE shiznit is set by rockin a gangbangin' file's
.I magic number
(usually tha straight-up original gangsta few bytez of a gangbangin' file). The
.I magic_file
is only used if a gangbangin' file aint one of tha known Apple/Unix file formats, or
the filename extension has not been mapped using
.BR \-map .
See tha 
.B HFS CREATOR/TYPE
section below fo' mo' details.
.TP
.BI \-hfs\-creator " creator"
Set tha default CREATOR fo' all files. Must be exactly 4 characters. Right back up in yo muthafuckin ass. See the
.B HFS CREATOR/TYPE
section below fo' mo' details.
.TP
.BI \-hfs\-type " type"
Set tha default TYPE fo' all files. Must be exactly 4 characters. Right back up in yo muthafuckin ass. See the
.B HFS CREATOR/TYPE
section below fo' mo' details.
.TP
.B \-probe
Search tha contentz of filez fo' all tha known Apple/Unix file formats.
See the
.B HFS MACINTOSH FILE FORMATS
section below fo' mo' bout these formats.
But fuck dat shiznit yo, tha word on tha street is dat tha only way ta check for
.I MacBinary
and
.I AppleSingle
filez is ta open n' read them, so dis option may
increase processin time. Well shiiiit, it is betta ta use one or more
.I double dash
options given below if tha Apple/Unix formats up in use is known.
.TP
.B \-no\-desktop
Do not create (empty) Desktop files. New HFS Desktop filez is ghon be pimped
when tha CD is used on a Macintosh (and stored up in tha System Folder).
By default, empty Desktop filez is added ta tha HFS volume.
.TP
.B \-mac\-name
Use tha HFS filename as tha startin point fo' tha ISO9660, Joliet and
Rock Ridge filenames. Right back up in yo muthafuckin ass. See the
.B HFS MACINTOSH FILENAMES
section below fo' mo' shiznit.
.TP
.BI \-boot\-hfs\-file " driver_file"
Installs the
.I driver_file
that
.I may
make tha CD bootable on a Macintosh. Right back up in yo muthafuckin ass. See the
.B HFS BOOT DRIVER
section below. (Alpha).
.TP
.B \-part
Generate a HFS partizzle table. By default, no partizzle table is generated,
but some olda Macintosh CD-ROM drivers need a HFS partizzle table on the
CD-ROM ta be able ta recognize a hybrid CD-ROM.
.TP
.BI \-auto " AutoStart_file"
Make tha HFS CD use tha QuickTime 2.0 Autostart feature ta launch an
application or document. Da given filename must be tha name of a thugged-out document or
application located all up in tha top level of tha CD. Da filename must be less
than 12 characters. (Alpha).
.TP
.BI \-cluster\-size " size"
Set tha size up in bytez of tha clusta or allocation unitz of PC Exchange
files. Implies
.BR \-\-exchange .
See the
.B HFS MACINTOSH FILE FORMATS
section below.
.TP
.BI \-hide\-hfs " glob"
Hide
.IR glob ,
a shell wildcard pattern, from tha HFS volume.  Da file or directory
will still exist up in tha ISO9660 and/or Joliet directory.
.I glob
may match any part of tha filename.  Multiple globs may be excluded.
Example:
.sp
     genisoimage \-o rom \-hfs \-hide\-hfs \(aq*.o\(aq \-hide\-hfs foobar
.sp
would exclude all filez endin up in `.o' or called
.I foobar
from tha HFS volume. Note dat if you had a gangbangin' finger-lickin' directory called
.IR foobar ,
it too (and of course all its descendants) would be excluded. Y'all KNOW dat shit, muthafucka!  The
.I glob
can also be a path name relatizzle ta tha source directories given on the
command line. Example:
.sp
     genisoimage \-o rom \-hfs \-hide\-hfs src/html src
.sp
would exclude just tha file or directory called
.I html
from the
.I src
directory.  Any other file or directory called
.I html
in tha tree aint gonna be excluded. Y'all KNOW dat shit, muthafucka!  Should be used with
.B \-hide
and/or
.BR \-hide\-joliet .
In order ta match a gangbangin' finger-lickin' directory name, make shizzle tha pattern do not
include a trailin `/' character n' shit. Right back up in yo muthafuckin ass. See
.I README.hide
for mo' details.
.TP
.BI \-hide\-hfs\-list " file"
Specify a gangbangin' file containin a list of wildcard patterns ta be hidden as in
.BR \-hide\-hfs .
.TP
.BI \-hfs\-volid " hfs_volid"
Volume name fo' tha HFS partition. I aint talkin' bout chicken n' gravy biatch. This is tha name dat is
assigned ta tha disc on a Macintosh n' replaces the
.I volid
used with
.BR \-V .
.TP
.B \-icon\-position
Use tha icon posizzle shiznit, if it exists, from tha Apple/Unix file.
Da icons will step tha fuck up in tha same posizzle as they would on a Macintosh
desktop. Folda location n' size on screen, its scroll positions, folder
View (view as Icons, Lil Small-Ass Icons, etc.) is also preserved.
.\" This option may become set by default up in tha future.
(Alpha).
.TP
.BI \-root\-info " file"
Set tha location, size on screen, scroll positions, folda View etc. fo' the
root folda of a HFS volume. Right back up in yo muthafuckin ass. See
.I README.rootinfo
for mo' shiznit. I aint talkin' bout chicken n' gravy biatch.  (Alpha)
.TP
.BI \-prep\-boot " file"
PReP boot image file. Up ta 4 is allowed. Y'all KNOW dat shit, muthafucka! See
.I README.prep_boot
for mo' shiznit. I aint talkin' bout chicken n' gravy biatch.  (Alpha)
.TP
.BI \-chrp\-boot
Add CHRP boot header.
.TP
.BI \-input\-hfs\-charset " charset"
Input charset dat defines tha charactas used up in HFS filenames when
used with
.BR \-mac\-name .
Da default charset is
.I cp10000
(Mac Roman).  See the
.B CHARACTER SETS
and
.B HFS MACINTOSH FILENAMES
sections below fo' mo' details.
.TP
.BI \-output\-hfs\-charset " charset"
Output charset dat defines tha charactas dat is ghon be used up in tha HFS
filenames. Defaults ta tha input charset. Right back up in yo muthafuckin ass. See the
.B CHARACTER SETS
section below fo' mo' details.
.TP
.B \-hfs\-unlock
By default,
.B genisoimage
will create a HFS volume dat is locked.
This option leaves tha volume unlocked so dat other applications (e.g.
.BR hfsutils )
can modify tha volume. Right back up in yo muthafuckin ass. See the
.B HFS PROBLEMS/LIMITATIONS
section below fo' warnings bout rockin dis option.
.TP
.BI \-hfs\-bless " folder_name"
"Bless" tha given directory (folder). This is probably tha 
.I System Folder
and is used up in bustin HFS bootable CDs. Da name of tha directory must
be tha whole path name as
.B genisoimage
sees dat shit.  E.g., if tha given pathspec is
.I ./cddata
and tha required folda is called
.IR "System Folder" ,
the whole path name is
.I \(dq/cddata/System Folder\(dq
(remember ta use quotes if tha name gotz nuff spaces).
.TP
.BI \-hfs\-parms " parameters"
Override certain parametas used ta create tha HFS filesystem. Unlikely to
be used up in aiiight circumstances.  See the
.I libhfs_iso/hybrid.h
source file fo' details.
.TP
.B \-\-cap
Look fo' AUFS CAP Macintosh files. Right back up in yo muthafuckin ass. Search fo' CAP Apple/Unix file formats
only. Right back up in yo muthafuckin ass. Searchin fo' tha other possible Apple/Unix file formats is disabled,
unless other
.I double dash
options is given.
.TP
.B \-\-netatalk
Look fo' NETATALK Macintosh files
.TP
.B \-\-double
Look fo' AppleDouble Macintosh files
.TP
.B \-\-ethershare
Look fo' Helios EtherSmoke up Macintosh files
.TP
.B \-\-ushare
Look fo' IPT USmoke up Macintosh files
.TP
.B \-\-exchange
Look fo' PC Exchange Macintosh files
.TP
.B \-\-sgi
Look fo' SGI Macintosh files
.TP
.B \-\-xinet
Look fo' XINET Macintosh files
.TP
.B \-\-macbin
Look fo' MacBinary Macintosh files
.TP
.B \-\-single
Look fo' AppleSingle Macintosh files
.TP
.B \-\-dave
Look fo' Thursby Software Systems DAVE Macintosh files
.TP
.B \-\-sfm
Look fo' Microsoftz Skillz fo' Macintosh filez (NT only) (Alpha)
.TP
.B \-\-osx\-double
Look fo' Mac OS X AppleDouble Macintosh files
.TP
.B \-\-osx\-hfs
Look fo' Mac OS X HFS Macintosh files
.\" ----------------------------------------
.SH "CHARACTER SETS"
.B genisoimage
processes filenames up in a POSIX-compliant way as stringz of 8-bit characters.
To represent all codings fo' all languages, 8-bit charactas is not
sufficient.  Unicode or ISO-10646
define characta codings dat need at least 21 bits ta represent all
known languages. They may be represented with
.IR UTF-32 ", " UTF-16 " or " UTF-8
coding.  UTF-32 uses a plain 32-bit codin but seems ta be uncommon.
UTF-16 is used by Microsizzlez wit Win32 wit tha disadvantage that
16-bit charactas is not compliant wit tha POSIX filesystem
interface.
.PP
Modern Unix operatin systems may use UTF-8 codin fo' filenames.
Each 32-bit characta is represented by one or mo' 8-bit characters.
If a cold-ass lil characta is coded in
.I ISO-8859-1
(used up in Central Europe n' Uptown America) is maps 1:1 ta a 
UTF-32 or UTF-16 coded Unicode character.
If a cold-ass lil characta is coded in
.I 7-Bit ASCII
(used up in USA n' other ghettos wit limited characta set)
is maps 1:1 ta a UTF-32, UTF-16 or UTF-8 coded Unicode character.
Characta codes dat cannot be represented as a single byte up in UTF-8
(if tha value is > 0x7F) use escape sequences dat map ta mo' than
one 8-bit character.
.PP
If all operatin systems used UTF-8,
.B genisoimage
would not need ta recode charactas up in filenames.
Unfortunately, Applez uses straight-up nonstandard codings n' Microsoft
uses a Unicode codin dat aint compatible wit tha POSIX filename
interface.
.PP
For all non-UTF-8-coded operatin systems, tha actual character
that each byte represents dependz on the
.I characta set
or
.I codepage
(the name used by Microsoft)
used by tha local operatin system \(em tha charactas up in a cold-ass lil character
set will reflect tha region or natural language set by tha user.
.PP
Usually characta codes 0x00-0x1f is control characters, codes 0x20-0x7f
are tha 7-bit ASCII charactas n' (on PCs n' Macs) 0x80-0xff is used
for other characters.
.PP
As there be a shitload mo' than 256 characters/symbols up in use, only a small
subset is represented up in a cold-ass lil characta set. Therefore tha same characta code
may represent a gangbangin' finger-lickin' different characta up in different characta sets, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. So a gangbangin' filename
generated, say up in central Europe, may not display tha same character
when viewed on a machine in, say eastsideern Europe.
.PP
To make mattas mo' fucked up, different operatin systems use
different characta sets fo' tha region or language. For example, the
characta code fo' `\('e' (small e wit acute accent)
may be characta code 0x82 on a PC, 
code 0x8e on a Macintosh, code 0xe9 on a Unix system up in westside Europe,
and code 0x000e9 up in Unicode.
.PP
As long as not all operatin systems n' applications use tha same
characta set as tha basis fo' filenames, it may be
necessary ta specify which characta set yo' filenames use up in n' which
characta set tha filenames should step tha fuck up on tha CD.
.PP
There is four options ta specify tha characta sets you wanna use:
.TP
.B \-input\-charset
Defines tha local characta set yo ass is rockin on yo' host machine.
Any characta set conversions dat take place will use dis character
set as tha startin point. Da default input characta sets are
.I cp437
on MS-DOS-based systems and
.I iso8859-1
on all other systems.  If
.B \-J
is given, tha Unicode equivalentz of tha input characta set
will be used up in tha Joliet directory.
.B \-jcharset
is tha same ol' dirty as
.BR "\-input\-charset \-J" .
.TP
.B \-output\-charset
Defines tha characta set dat is ghon be used wit fo' tha Rock Ridge names
on tha CD.  Defaults ta tha input characta set.
.TP
.B \-input\-hfs\-charset
Defines tha HFS characta set used fo' HFS filenames decoded from
any of tha various Apple/Unix file formats, n' you can put dat on yo' toast. Only useful when used with
.BR \-mac\-name .
See the
.B HFS MACINTOSH FILENAMES
for mo' shiznit. I aint talkin' bout chicken n' gravy biatch. Defaults to
.I cp10000
(Mac Roman).
.TP
.B \-output\-hfs\-charset
Defines tha HFS characta set used ta create HFS filenames from tha input
characta set up in use. In most cases dis is ghon be from tha characta set
given with
.BR \-input\-charset .
Defaults ta tha input HFS characta set.
.PP
There is a fuckin shitload of characta sets built up in to
.BR genisoimage .
To git a listing, use
.BR "\-input\-charset help" .
This list don't include tha charset derived from tha current locale,
if
.B genisoimage
is built with
.I iconv
support.
.PP
Additionizzle characta sets can be read from file fo' any of tha character
set options by givin a gangbangin' filename as tha argument ta tha options. Da given
file will only be read if its name do not match one of tha built-in
characta sets.
.PP
Da format of tha characta set filez is tha same ol' dirty as tha mappin files
available from
.IR http://www.unicode.org/Public/MAPPINGS .
This format is:
.IP
Column #1 is tha input byte code (in hex as 0xXX)
.br
Column #2 is tha Unicode (in hex as 0xXXXX)
.br
Da rest of tha line is ignored.
.PP
Any blank line, line without two (or more) columns up in tha above format
or comments lines (startin wit tha # character) is ignored without any
warnings fo' realz. Any missin input code is mapped ta Unicode characta 0x0000.
.PP
Note that, while UTF-8 is supported, other Unicode encodings such as
UCS-2/UTF-16 n' UCS-4/UTF-32 is not, as POSIX operatin systems
cannot handle dem natively.
.PP
A 1:1 characta set mappin can be defined by rockin tha keyword
.I default
as tha argument ta any of tha characta set options. This is tha behaviour
of oldschool versions of
.BR mkisofs .
.PP
Da ISO9660 filenames generated from tha input filenames is not converted
from tha input characta set. Da ISO9660 characta set be a straight-up limited
subset of tha ASCII characters, so any conversion would be pointless.
.PP
Any characta that
.B genisoimage
cannot convert is ghon be replaced wit a `_' character.
.\" ----------------------------------------
.SH "HFS CREATOR/TYPE"
A Macintosh file has two propertizzles associated wit it which define
which application pimped tha file, the
.I CREATOR
and what tha fuck data tha file gotz nuff, the
.IR TYPE .
Both is (exactly) 4 letta strings. Usually this
allows a Macintosh user ta double-click on a gangbangin' file n' launch tha erect
application etc. Da CREATOR n' TYPE of a particular file can be found by
usin suttin' like ResEdit (or similar) on a Macintosh.
.PP
Da CREATOR n' TYPE shiznit is stored up in all tha various Apple/Unix
encoded files.
For other filez it is possible ta base tha CREATOR n' TYPE on the
filenamez extension rockin a
.I mapping
file (with
.BR \-map )
and/or rockin the
.I magic number
(usually a
.I signature
in tha straight-up original gangsta few bytes) of a gangbangin' file (with
.BR \-magic ).
If both these options is given, they order on tha command
line is significant.  If
.B \-map
is given first, a gangbangin' filename extension match be attempted
before a magic number match. But fuck dat shiznit yo, tha word on tha street is dat if
.B \-magic
is given first, a magic number match be attempted before a
filename extension match.
.PP
If a mappin or magic file aint used, or no match is found, tha default
CREATOR n' TYPE fo' all regular filez can be set by rockin entries up in tha 
.I .genisoimagerc
file or using
.B \-hfs\-creator
and/or
.BR \-hfs\-type ,
otherwise tha default CREATOR n' TYPE are
.IR Unix " n' " TEXT .
.PP
Da format of the
.I mapping
file is tha same
.I afpfile
format as used by
.BR aufs .
This file has five columns fo' the
.IR extension ,
.IR "file translation" ,
.IR CREATOR ,
.IR TYPE " and"
.IR Comment .
Lines startin wit tha `#' characta are
comment lines n' is ignored. Y'all KNOW dat shit, muthafucka! An example file would be like:
.PP
.TS
tab (/);
l s s s s
l s s s s
l l l l l .
# Example filename mappin file
#
# EXTN/XLate/CREATOR/TYPE/Comment
\&.tif/Raw/\(aq8BIM\(aq/\(aqTIFF\(aq/\(dqPhotoshop TIFF image\(dq
\&.hqx/Ascii/\(aqBnHq\(aq/\(aqTEXT\(aq/\(dqBinHex file\(dq
\&.doc/Raw/\(aqMSWD\(aq/\(aqWDBN\(aq/\(dqWord file\(dq
\&.mov/Raw/\(aqTVOD\(aq/\(aqMooV\(aq/\(dqQuickTime Porno\(dq
*/Ascii/\(aqttxt\(aq/\(aqTEXT\(aq/\(dqText file\(dq
.TE
.PP
Where:
.IP
Da first column
.I EXTN
defines tha Unix filename extension ta be
mapped. Y'all KNOW dat shit, muthafucka! Da default mappin fo' any filename extension dat don't
match is defined wit tha `*' character.
.IP
The
.I Xlate
column defines tha type of text translation between tha Unix and
Macintosh file it is ignored by
.BR genisoimage ,
but is kept ta be compatible with
.BR aufs (1).
Although 
.B genisoimage
does not alta tha contentz of a gangbangin' file, if a funky-ass binary file has its TYPE
set as
.IR TEXT ", it " may
be read incorrectly on a Macintosh. Therefore a funky-ass betta chizzle fo' the
default TYPE may be
.IR ???? .
.IP
The
.I CREATOR
and
.I TYPE
keywordz must be 4 charactas long n' enclosed up in single quotes.
.IP
Da comment field is enclosed up in double quotes \(em it is ignored by
.BR genisoimage ,
but is kept ta be compatible wit 
.BR aufs .
.PP
Da format of the
.I magic
file be almost identical ta the
.BR magic (5)
file used by the
.BR file (1)
command.
.PP
This file has four tab-separated columns fo' the
.IR "byte offset" ,
.IR type ,
.I test
and
.IR message .
Lines startin wit tha `#' characta are
comment lines n' is ignored. Y'all KNOW dat shit, muthafucka! An example file would be like:
.PP
.TS
tab (/);
l s s s
l s s s
l l l l .
# Example magic file
#
# off/type/test/message
0/string/GIF8/8BIM GIFf  GIF image
0/beshort/0xffd8/8BIM JPEG  image data
0/string/SIT!/SIT! SIT!  StuffIt Archive
0/string/\(rs037\(rs235/LZIV ZIVU  standard Unix compress
0/string/\(rs037\(rs213/GNUz ZIVU  gzip compressed data
0/string/%!/ASPS TEXT  Postscript
0/string/\(rs004%!/ASPS TEXT  PC Postscript wit a ^D ta start
4/string/moov/txtt MooV  QuickTime porno file (moov)
4/string/mdat/txtt MooV  QuickTime porno file (mdat)
.TE
.PP
Da format of tha file is busted lyrics bout in
.BR magic (5).
Da only difference here is dat fo' each entry up in tha magic file, the
.I message
for tha initial offset must be be 4 charactas fo' tha CREATOR followed
by 4 charactas fo' tha TYPE \(em white space is
optionizzle between em fo' realz. Any other charactas on dis line is ignored.
Continuation lines (startin wit a `>') is also ignored, i.e., only
the initial offset lines is used.
.PP
Using
.B \-magic
may hella increase processin time as each file has ta opened
and read ta find its magic number.
.PP
In summary, fo' all files, tha default CREATOR is
.I Unix
and tha default TYPE is
.IR TEXT .
These can be chizzled by rockin entries up in the
.I .genisoimagerc
file or by using
.B \-hfs\-creator
and/or
.BR \-hfs\-type .
.PP
If tha a gangbangin' file is up in one of tha known Apple/Unix formats (and tha format
has been selected), tha CREATOR n' TYPE is taken from tha joints
stored up in tha Apple/Unix file.
.PP
Other filez can have they CREATOR n' TYPE set from they filename
extension (with
.BR \-map ),
or they magic number (with
.BR \-magic ).
If tha default match is used up in the
.I mapping
file, these joints override tha default CREATOR n' TYPE.
.PP
A full CREATOR/TYPE database can be found at 
.IR http://www.angelfire.com/il/szekely/ .
.\" ----------------------------------------
.SH "HFS MACINTOSH FILE FORMATS"
Macintosh filez have two parts called the
.I Data
and
.IR "Resource fork" .
Either may be empty. Unix (and nuff other OSs) can only
cope wit filez havin one part (or fork). To add ta this, Macintosh files
have a fuckin shitload of attributes associated wit dem \(em probably da most thugged-out
important is tha TYPE n' CREATOR.  Again, Unix has no concept of these
typez of attributes.
.PP
E.g., a Macintosh file may be a JPEG image where tha image is stored up in the
Data fork n' a thugged-out desktop thumbnail stored up in tha Resource fork. Well shiiiit, it is usually
the shiznit up in tha data fork dat is useful across platforms.
.PP
Therefore ta store a Macintosh file on a Unix filesystem, a way has ta be
found ta cope wit tha two forks n' tha extra attributes (which are
referred ta as the
.IR "Finder info" ).
Unfortunately, it seems dat every last muthafuckin software package dat stores Macintosh
filez on Unix has chosen a cold-ass lil straight-up different storage method.
.PP
Da Apple/Unix formats that
.B genisoimage
(partially) supports are:
.IP "CAP AUFS format"
Data fork stored up in a gangbangin' file. Resource fork up in subdirectory
.I .resource
with same filename as data fork. Finder info up in subdirectory
.I .finderinfo
with same filename.
.IP "AppleDouble/Netatalk"
Data fork stored up in a gangbangin' file. Resource fork stored up in a gangbangin' file with
same name prefixed wit `%'. Finder info also stored up in same
`%' file. Netatalk uses tha same ol' dirty format yo, but tha resource
fork/Finder info stored up in subdirectory
.I .AppleDouble
with same filename as data fork.
.IP AppleSingle
Data structures similar ta above, except both forks n' Finder
info is stored up in one file.
.IP "Helios EtherShare"
Data fork stored up in a gangbangin' file.  Resource fork n' Finder info together in
subdirectory
.I .rsrc
with same filename as data fork.
.IP "IPT UShare"
Like tha EtherSmoke up format yo, but tha Finder info
is stored slightly differently.
.IP MacBinary
Both forks n' Finder info stored up in one file.
.IP "Applez PC Exchange"
Used by Macintoshes ta store Applez filez on DOS (FAT) disks.
Data fork stored up in a gangbangin' file. Resource fork up in subdirectory
.IR resource.frk " (or " RESOURCE.FRK ).
Finder info as one record up in file
.IR finder.dat " (or " FINDER.DAT ).
Separate
.I finder.dat
for each data fork directory.
.IP
Note: 
.B genisoimage
needz ta know tha natizzle FAT clusta size of tha disk dat tha PC Exchange
filez is on (or done been copied from). This size is given by
.BR \-cluster\-size .
Da clusta or allocation size can be found by rockin tha DOS utility
.BR chkdsk .
.IP
May not work wit PC Exchange v2.2 or higher filez (available wit MacOS 8.1).
DOS media containin PC Exchange filez should be mounted as type
.I msdos
(not
.IR vfat )
when rockin Linux.
.IP SGI/XINET
Used by SGI machines when they mount HFS disks. Data fork stored
in a gangbangin' file.  Resource fork up in subdirectory
.I .HSResource
with same filename.  Finder info as one record up in file
.IR .HSancillary ".  Separate " .HSancillary
for each data fork directory.
.IP "Thursby Software Systems DAVE"
Allows Macintoshes ta store Applez filez on SMB servers.
Data fork stored up in a gangbangin' file. Resource fork up in subdirectory
.IR resource.frk .
Uses tha AppleDouble format ta store resource fork.
.IP "Skillz fo' Macintosh"
Format of filez stored by NT Servers on NTFS filesystems. Data fork is
stored as
.IR filename .
Resource fork stored as a NTFS stream called
.IR filename:AFP_Resource .
Da Finder info is stored as a NTFS stream called
.IR filename:Afp_AfpInfo .
NTFS streams is normally invisible ta tha user.
.IP
Warning:
.B genisoimage
only partially supports tha SFM format. If a HFS file
or folda stored on tha NT server gotz nuff a illegal
NT characta up in its name, NT converts these charactas to
.I Private Use Unicode
characters.  Da charactas are: \(dq * / < > ? \(rs | n' a space or
period if it is tha last characta of tha filename, characta codes 0x01
to 0x1f (control characters) n' Applez apple logo.
.IP
Unfortunately, these private Unicode charactas is not readable by the
.B genisoimage
NT executable. Therefore any file or directory
name containin these charactas is ghon be ignored \(em includin tha contents of
any such directory.
.IP "Mac OS X AppleDouble"
When HFS/HFS+ filez is copied or saved by Mac OS X on ta a non-HFS
filesystem (e.g. UFS, NFS etc.), tha filez is stored up in AppleDouble format.
Data fork stored up in a gangbangin' file. Resource fork stored up in a gangbangin' file with
same name prefixed wit `._'. Finder info also stored up in same `._' file.
.IP "Mac OS X HFS (Alpha)"
Not straight-up a Apple/Unix encodin yo, but actual HFS/HFS+ filez on a Mac\ OS\ X
system. Data fork stored up in a gangbangin' file. Resource fork stored up in a pseudo file
with tha same name wit tha suffix
.IR /rsrc .
Da Finder info is only available via a Mac OS X library call.
.IP
See also
.IR README.macosx .
.IP
Only works when used on Mac OS X.
.IP
If a gangbangin' file is found wit a zero
length resource fork n' empty finderinfo, it be assumed not ta have
any Apple/Unix encodin \(em therefore a TYPE n' CREATOR can be set using
other methods.
.PP
.B genisoimage
will attempt ta set tha CREATOR, TYPE, date n' possibly other flags from
the finder info fo' realz. Additionally, if it exists, tha Macintosh filename is set
from tha finder info, otherwise tha Macintosh name is based on tha Unix
filename \(em peep the
.B HFS MACINTOSH FILENAMES
section below.
.PP
When using
.BR \-apple ,
the TYPE n' CREATOR is stored up in tha optionizzle System Use or
.I SUSP
field
in tha ISO9660 Directory Record \(em up in much tha same way as tha Rock Ridge
attributes are. In fact ta make game easy as fuck , tha Applez extensions is added
at tha beginnin of tha existin Rock Ridge attributes (i.e., ta git tha Apple
extensions you git tha Rock Ridge extensions as well).
.PP
Da Applez extensions require tha resource fork ta be stored as a ISO9660
.I associated
file. This is just like any aiiight file stored up in tha ISO9660 filesystem
except dat tha associated file flag is set up in tha Directory Record (bit
2). This file has tha same ol' dirty name as tha data fork (the file peeped by
non-Applez machines) fo' realz. Associated filez is normally ignored by other OSs
.PP
When using
.BR \-hfs ,
the TYPE n' CREATOR plus other finder info, is stored up in a separate
HFS directory, not visible on tha ISO9660 volume. Da HFS directory references
the same data n' resource fork filez busted lyrics bout above.
.PP
In most cases, it is betta ta use
.B \-hfs
instead of
.BR \-apple ,
as tha latta imposes tha limited ISO9660 charactas allowed in
filenames. But fuck dat shiznit yo, tha word on tha street is dat tha Applez extensions do give tha advantage dat the
filez is packed on tha disk mo' efficiently n' it may be possible ta fit 
more filez on a CD.
.\" ----------------------------------------
.SH "HFS MACINTOSH FILENAMES"
Where possible, tha HFS filename dat is stored wit a Apple/Unix file
is used fo' tha HFS part of tha CD. But fuck dat shiznit yo, tha word on tha street is dat not all tha Apple/Unix
encodings store tha HFS filename wit tha finderinfo. In these cases,
the Unix filename is used \(em wit escaped special characters. Right back up in yo muthafuckin ass. Special
charactas include `/' n' charactas wit codes over 127.
.PP
AUFS escapes these charactas by rockin `:' followed by tha characta code
as two hex digits, n' you can put dat on yo' toast. Netatalk n' EtherSmoke up gotz a similar scheme yo, but uses
`%' instead of a `:'.
.PP
If
.B genisoimage
cannot find a HFS filename, it uses tha Unix name, wit any
.IR %xx " or " :xx
characters
.RI ( xx
are two hex digits) converted ta a single characta code.  If
.I xx
are not hex digits ([0-9a-fA-F]), they are
left ridin' solo \(em although any remainin `:' is converted ta `%', as `:'
is tha HFS directory separator. Shiiit, dis aint no joke. Care must be taken, as a ordinary Unix
file with
.I %xx
or
.I :xx
will also be converted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. e.g.
.PP
.TS
l l 
l s
l l
l s
l l .
This:2fFile	converted ta This/File
	
This:File	converted ta This%File
	
This:t7File	converted ta This%t7File
.TE
.PP
Although HFS filenames step tha fuck up ta support uppercase n' lowercase letters,
the filesystem is case-insensitive, i.e., tha filenames
.IR aBc " n' " AbC
are tha same. If a gangbangin' file is found up in a gangbangin' finger-lickin' directory wit tha same HFS name,
.B genisoimage
will attempt ta cook up a unique name by addin `_' characters
to one of tha filenames. 
.PP
If a HFS filename exists fo' a gangbangin' file,
.B genisoimage
can use dis name as tha startin point fo' tha ISO9660, Joliet and
Rock Ridge filenames using
.BR \-mac\-name .
Normal Unix filez without a HFS name will still use they Unix name.
e.g.
.PP
If a MacBinary (or PC Exchange) file is stored as
.I someimage.gif.bin
on tha Unix filesystem yo, but gotz nuff a HFS file called
.IR someimage.gif ,
this is tha name dat would step tha fuck up on tha HFS part of tha CD. But fuck dat shiznit yo, tha word on tha street is dat as
.B genisoimage
uses tha Unix name as tha startin point fo' tha other names,
the ISO9660 name generated will probably be 
.I SOMEIMAG.BIN
and tha Joliet/Rock Ridge would be
.IR someimage.gif.bin .
This option will use
the HFS filename as tha startin point n' tha ISO9660 name will probably be
.I SOMEIMAG.GIF
and tha Joliet/Rock Ridge would be
.IR someimage.gif .
.PP
.B \-mac\-name
will not currently work with
.B \-T
\(em tha Unix name is ghon be used up in the
.I TRANS.TBL
file, not tha Macintosh name.
.PP
Da characta set used ta convert any HFS filename ta a Joliet/Rock Ridge
filename defaults to
.I cp10000
(Mac Roman).
Da characta set used can be specified using
.BR \-input\-hfs\-charset .
Other built-in HFS characta sets are:
.I cp10006
(MacGreek),
.I cp10007
(MacCyrillic),
.I cp10029
(MacLatin2),
.I cp10079
(MacIcelandandic) and
.I cp10081
(MacTurkish).
.PP
Note: tha characta codes used by HFS filenames taken from tha various
Apple/Unix formats aint gonna be converted as they is assumed ta be up in the
correct Applez characta set. Only tha Joliet/Rock Ridge names derived from
the HFS filenames is ghon be converted.
.PP
Da existing
.B genisoimage
code will filta up any illegal charactas fo' tha ISO9660 n' Joliet
filenames yo, but as
.B genisoimage
expects ta be dealin directly wit Unix names, it leaves tha Rock
Ridge names as is.  But as `/' be a legal HFS filename character,
.B \-mac\-name
converts `/' ta a `_' up in Rock Ridge filenames.
.PP
If tha Applez extensions is used, only tha ISO9660 filenames will
appear on tha Macintosh. But fuck dat shiznit yo, tha word on tha street is dat as tha Macintosh ISO9660 drivers can use
.I Level 2
filenames, you can use options like
.B \-allow\-multidot
without problems on
a Macintosh \(em still take care over tha names, fo' example
.I all dis bullshit.file.name
will be converted to
.I THIS.FILE
i.e. only have one `.', also filename
.I abcdefgh
will be peeped as
.I ABCDEFGH
but
.I abcdefghi
will be peeped as
.I ABCDEFGHI.
i.e. wit a `.' all up in tha end \(em don't give a fuck if dis be a Macintosh
problem or a
.BR genisoimage / mkhybrid
problem fo' realz. All filenames is ghon be up in uppercase
when viewed on a Macintosh. Of course, DOS/Win3.X machines aint gonna be able
to peep Level 2 filenames...
.\" ----------------------------------------
.SH "HFS CUSTOM VOLUME/FOLDER ICONS"
To give a HFS CD a cold-ass lil custom icon, make shizzle tha root (top level) folda includes
a standard Macintosh volume icon file. To give a volume a cold-ass lil custom icon on
a Macintosh, a icon has ta be pasted over tha volumez icon up in tha "Git Info"
box of tha volume. This creates a invisible file called
.I Icon\(rsr
(`\(rsr' is tha carriage return character) up in tha root folder.
.P
A custom folda icon is straight-up similar \(em a invisible file called
.I Icon\(rsr
exists up in tha folda itself.
.P
Probably tha easiest way ta create a cold-ass lil custom icon that
.B genisoimage
can use is ta format a funky-ass blank HFS floppy disk on a Mac n' paste a icon
to its "Git Info" box. If rockin Linux wit tha HFS module installed,
mount tha floppy:
.IP
mount \-t hfs /dev/fd0 /mnt/floppy
.PP
Da floppy is ghon be mounted as a CAP filesystem by default.  Then run
.B genisoimage
usin suttin' like:
.IP
genisoimage \-\-cap \-o output source_dir /mnt/floppy
.PP
If yo ass is not rockin Linux, you can use
.B hfsutils
to copy tha icon file from tha floppy.  But fuck dat shiznit yo, tha word on tha street is dat care has ta be taken,
as tha icon file gotz nuff a cold-ass lil control character n' shit.  For example:
.IP
hmount /dev/fd0
.br
hdir \-a
.br
hcopy \-m Icon^V^M icon_dir/icon
.PP
Where `^V^M' is control-V followed by control-M. Then run 
.B genisoimage
by rockin suttin' like:
.IP
genisoimage \-\-macbin \-o output source_dir icon_dir
.PP
Da procedure fo' bustin/usin custom folda icons is straight-up similar \(em paste
an icon ta folderz "Git Info" box n' transfer tha resulting
.I Icon\(rsr
file ta tha relevant directory up in the
.B genisoimage
source tree.
.PP
Yo ass may wanna hide tha icon filez from tha ISO9660 n' Joliet trees.
.PP
To give a cold-ass lil custom icon ta a Joliet CD, follow tha instructions found at
.IR http://www.cdrfaq.org/faq03.html#S3-21-1 .
.\" ----------------------------------------
.SH "HFS BOOT DRIVER"
It 
.I may
be possible ta make tha hybrid CD bootable on a Macintosh.
.PP
A bootable HFS CD requires a Applez CD-ROM (or compatible) driver, a funky-ass bootable
HFS partizzle n' tha necessary System, Finder, etc. files.
.PP
A driver can be obtained from any other Macintosh bootable CD-ROM rockin the
.B apple_driver
utility. This file can then be used with
.BR \-boot\-hfs\-file .
.PP
Da HFS partizzle (i.e. tha hybrid disk up in our case) must contain a
suitable System Folder, again n' again n' again from another CD-ROM or disk.
.PP
For a partizzle ta be bootable, it must have its 
.I boot block
set. Da boot
block is up in tha straight-up original gangsta two blockz of a partition. I aint talkin' bout chicken n' gravy biatch. For a non-bootable partition
the boot block is full of zeros. Normally, when a System file is copied to
partizzle on a Macintosh disk, tha boot block is filled wit a number of
required settings \(em unfortunately I don't give a fuck tha full spec fo' tha boot
block, so I be guessin dat tha followin will work.
.PP
Therefore, tha utility
.B apple_driver
also extracts tha boot block from the
first HFS partizzle it findz on tha given CD-ROM n' dis is used fo' the
HFS partizzle pimped by
.BR genisoimage .
.PP
.I Please note:
By rockin a thugged-out driver from a Applez CD n' copyin Applez software ta yo' CD,
you become liable ta obey Applez Computer, Inc. Right back up in yo muthafuckin ass. Software License Agreements.
.\" ----------------------------------------
.SH "EL TORITO BOOT INFORMATION TABLE"
When
.B \-boot\-info\-table
is given,
.B genisoimage
will modify tha boot file specified by
.B \-b
by insertin a 56-byte
.I boot shiznit table
at offset 8 in
the file.  This modification is done up in tha source filesystem, so make
sure you bust a cold-ass lil copy if dis file aint easily recreated hommie!  This file
gotz nuff pointas which may not be easily or reliably obtained at boot
time.
.PP
Da format of dis table be as bigs up; all integers is in
section 7.3.1 ("lil endian") format.
.sp
.RS +.2i
.ta 1.0i 2.5i 3.5i
.nf
Offset	Name	Size	Meaning
 8	bi_pvd	4 bytes	LBA of primary volume descriptor
12	bi_file	4 bytes	LBA of boot file
16	bi_length	4 bytes	Boot file length up in bytes
20	bi_csum	4 bytes	32-bit checksum
24	bi_reserved	40 bytes	Reserved
.fi
.RE
.IP
Da 32-bit checksum is tha sum of all tha 32-bit lyrics up in tha boot
file startin at byte offset 64.  All linear block addresses (LBAs)
are given up in CD sectors (normally 2048 bytes).
.\" ----------------------------------------
.SH "HPPA NOTES"
To cook up a funky-ass bootable CD fo' HPPA, all up in tha straight-up least a funky-ass boot loader file
.RB ( \-hppa\-bootloader ),
a kernel image file (32-bit, 64-bit, or both, dependin on hardware)
and a funky-ass boot command line
.RB ( \-hppa\-cmdline )
must be specified. Y'all KNOW dat shit, muthafucka! Some systems can boot either a 32- or a 64-bit
kernel, n' tha firmware will chizzle one if both is present.
Optionally, a ramdisk can be used fo' tha root filesystem using
.BR \-hppa\-cmdline .
.\" ----------------------------------------
.SH "JIGDO NOTES"
Jigdo be a tool ta help up in tha distribution of big-ass filez like CD and
DVD images; see
.I http://atterer.org/jigdo/
for mo' details.  Debian CDs n' STD ISO
images is published on tha wizzy up in jigdo format ta allow end playas ta download
them mo' efficiently.
.PP
To create jigdo n' template filez alongside tha ISO image from
.BR genisoimage ,
you must first generate a list of tha filez dat will be
used, up in tha followin format:
.sp
.RS +.2i
.ta 2.0i 2.0i 5.0i
.nf
MD5sum   File size  Path
32 chars 12 chars   ta end of line
.fi
.RE
.IP
.PP
Da MD5sum must be freestyled up in standard hexadecimal notation, the
file size must list tha size of tha file up in bytes, n' tha path
must list tha absolute path ta tha file. For example:
.sp
.nf
00006dcd58ff0756c36d2efae21be376         14736  /mirror/debian/file1
000635c69b254a1be8badcec3a8d05c1        211822  /mirror/debian/file2
00083436a3899a09633fc1026ef1e66e         22762  /mirror/debian/file3
.fi
.PP
Once you have dis file, call
.B genisoimage
with all of yo' aiiight command-line parameters. Right back up in yo muthafuckin ass. Specify tha output
filenames fo' tha jigdo n' template filez using
.BR \-jigdo\-jigdo " n' " \-jigdo\-template ,
and pass up in tha location of yo' MD5 list with
.BR \-md5\-list .
.PP
If there be filez dat you do NOT wanna be added tha fuck into tha jigdo
file (e.g. if they is likely ta chizzle often), specify dem using
\-jigdo\-exclude. If you wanna verify a shitload of tha filez as they are
written tha fuck into tha image, specify dem rockin \-jigdo\-force\-md5. If any
filez don't match,
.B genisoimage
will then abort.  Both of these options take
regular expressions as input. Well shiiiit, it is possible ta restrict tha set of
filez dat is ghon be used further based on size \(em use the
\-jigdo\-min\-file\-size option.
.PP
Finally, tha jigdo code need ta know how tha fuck ta map tha filez it is given
onto a mirror-style configuration. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Specify how tha fuck ta map paths using
.BR \-jigdo\-map .
Using
.I Debian=/mirror/debian
will cause all
paths startin with
.I /mirror/debian
to be mapped to
.I Debian:<file>
in tha output jigdo file.
.\" ----------------------------------------
.SH EXAMPLES
.PP
To create a vanilla ISO9660 filesystem image up in tha file 
.IR cd.iso ,
where tha directory
.I cd_dir
will become tha root directory of tha CD, call:
.IP
% genisoimage \-o cd.iso cd_dir
.PP
To create a CD wit Rock Ridge extensions of
the source directory
.IR cd_dir :
.IP
% genisoimage \-o cd.iso \-R cd_dir
.PP
To create a CD wit Rock Ridge extensions of
the source directory
.I cd_dir
where all filez have at least read permission n' all files
are owned by
.IR root ,
call:
.IP
% genisoimage \-o cd.iso \-r cd_dir
.PP
To write a tar archive directly ta a CD dat will lata contain a simple
ISO9660 filesystem wit tha tar archive call:
.IP
% tar cf \- . | genisoimage \-stream\-media\-size 333000 | \(rs
.br
     wodim dev=b,t,l \-dao tsize=333000s \-
.PP
To create a HFS hybrid CD wit tha Joliet n' Rock Ridge extensions of
the source directory
.IR cd_dir :
.IP
% genisoimage \-o cd.iso \-R \-J \-hfs cd_dir
.PP
To create a HFS hybrid CD from tha source directory 
.I cd_dir
that gotz nuff
Netatalk Apple/Unix files:
.IP
% genisoimage \-o cd.iso \-\-netatalk cd_dir
.PP
To create a HFS hybrid CD from tha source directory
.IR cd_dir ,
givin all files
CREATOR n' TYPES based on just they filename extensions listed up in tha file 
"mapping".:
.IP
% genisoimage \-o cd.iso \-map mappin cd_dir
.PP
To create a CD wit tha Applez Extensions ta ISO9660, from tha source
directories
.I cd_dir
and
.IR another_dir .
Filez up in all tha known Apple/Unix format
are decoded n' any other filez is given CREATOR n' TYPE based on their
magic number given up in tha file
.IR magic :
.IP
% genisoimage \-o cd.iso \-apple \-magic magic \-probe \(rs
.br
        cd_dir another_dir
.PP
Da followin example puts different filez on tha CD dat all have
the name README yo, but have different contents when peeped as a
ISO9660/Rock Ridge, Joliet or HFS CD.
.PP
Current directory gotz nuff:
.IP
% ls \-F
.br
README.hfs     README.joliet  README.Unix    cd_dir/
.PP
Da followin command puts tha contentz of tha directory
.I cd_dir
on the
CD along wit tha three README filez \(em but only one is ghon be peeped from
each of tha three filesystems:
.IP
% genisoimage \-o cd.iso \-hfs \-J \-r \-graft\-points \(rs
.br
        \-hide README.hfs \-hide README.joliet \(rs
.br
        \-hide\-joliet README.hfs \-hide\-joliet README.Unix \(rs
.br
        \-hide\-hfs README.joliet \-hide\-hfs README.Unix \(rs
.br
        README=README.hfs README=README.joliet \(rs
.br
        README=README.Unix cd_dir
.PP
i.e. tha file README.hfs is ghon be peeped as README on tha HFS CD n' the
other two README filez is ghon be hidden. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Similarly fo' tha Joliet and
ISO9660/Rock Ridge CD.
.PP
There is probably all sortz of strange thangs up in dis biatch possible with
combinationz of tha hide options ...
.\" ----------------------------------------
.SH NOTES
.PP
.B genisoimage
may safely be installed suid root. This may be needed ta allow
.B genisoimage
to read tha previous session when bustin a multisession image.
.PP
If 
.B genisoimage 
is bustin a gangbangin' filesystem image wit Rock Ridge attributes n' the
directory nestin level of tha source directory tree is too much
for ISO9660, 
.B genisoimage 
will do deep directory relocation.
This thangs up in dis biatch up in a gangbangin' finger-lickin' directory called
.B RR_MOVED
in tha root directory of tha CD. Yo ass cannot avoid dis directory.
.PP
Many boot code options fo' different platforms is mutualy exclusive cuz
the boot blocks cannot coexist, ie. different platforms share tha same data
locations up in tha image. Right back up in yo muthafuckin ass. See
http://lists.debian.org/debian-cd/2006/12/msg00109.html fo' details.
.\" ----------------------------------------
.SH BUGS
.PP
Any filez dat have hard links ta filez not up in tha tree bein copied ta the
ISO9660 filesystem gonna git a incorrect file reference count.
.PP
Do not check fo' SUSP record(s) up in `.' entry of the
root directory ta verify tha existence of Rock Ridge
enhancements.
This problem is present when readin oldschool sessions while
addin data up in multisession mode.
.PP
Do not properly read relocated directories up in multisession
mode when addin data.
Any relocated deep directory is lost if tha freshly smoked up session do not
include tha deep directory.
.\" Repeat by: create first session wit deep directory relocation
.\" then add freshly smoked up session wit a single dir dat differs from the
.\" oldschool deep path.
.PP
Do not re-use
.I RR_MOVED
when bustin multisession from
.IR TRANS.TBL .
.PP
Do not create whole_name entry for
.I RR_MOVED
in multisession mode.
.PP
There may be other bugs.  Please, report dem ta tha maintainers.
.\" ----------------------------------------
.SH "HFS PROBLEMS/LIMITATIONS"
I have had ta make nuff muthafuckin assumptions on how tha fuck I expect tha modified
libhfs routines ta work, however there may be thangs dat either
I aint thought of, or come across when these assumptions fail.
Therefore I can't guarantee that
.B genisoimage
will work as expected
(although I aint had a major problem yet). Most of tha HFS features work
fine yo, but some is not straight-up tested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. These is marked as
.I Alpha
above.
.PP
Although HFS filenames step tha fuck up ta support uppercase n' lowercase letters,
the filesystem is case-insensitive, i.e., tha filenames
.IR aBc " n' "AbC
are tha same. If a gangbangin' file is found up in a gangbangin' finger-lickin' directory wit tha same HFS name,
.B genisoimage
will attempt ta cook up a unique name by addin `_' characters
to one of tha filenames.
.PP
HFS file/directory names dat share tha straight-up original gangsta 31 charactas have
`_N' (a decimal number) substituted fo' tha last few characters
to generate unique names.
.PP
Care must be taken when "grafting" Apple/Unix filez or directories (see
above fo' tha method n' syntax involved). Well shiiiit, it aint possible ta use a
new name fo' a Apple/Unix encoded file/directory. e.g. If a Apple/Unix
encoded file called
.I oldname
is ta added ta tha CD, you cannot use tha command line:
.IP
genisoimage \-o output.raw \-hfs \-graft\-points newname=oldname cd_dir
.PP
.B genisoimage
will be unable ta decode
.IR oldname .
But fuck dat shiznit yo, tha word on tha street is dat you can graft
Apple/Unix encoded filez or directories as long as you do not attempt to
give dem freshly smoked up names as above.
.PP
When bustin a HFS volume wit tha multisession options,
.B \-M
and
.BR \-C ,
only filez up in tha last session is ghon be up in tha HFS volume. i.e.
.B genisoimage
cannot
.I add
existin filez from previous sessions ta tha HFS volume.
.PP
But fuck dat shiznit yo, tha word on tha street is dat if each session is pimped with
.BR \-part ,
each session will step tha fuck up as 
separate volumes when mounted on a Mac. In dis case, it is worth using
.BR \-V " or " \-hfs\-volid
to give each session a unique volume name,
otherwise each "volume" will step tha fuck up on tha Desktop wit tha same name.
.PP
Symbolic links (as wit all other non-regular files) is not added to
the HFS directory.
.PP
Hybrid volumes may be larger than pure ISO9660 volumes
containin tha same data. In some cases (e.g. Right back up in yo muthafuckin ass. STD sized volumes) the
difference can be significant fo' realz. As a HFS volume gets bigger, so do the
allocation block size (the smallest amount of space a gangbangin' file can occupy).
For a 650MB CD, tha allocation block is 10kB, fo' a 4.7GB STD it will be
about 70kB.
.PP
Da maximum number of filez up in a HFS volume be bout 65500 \(em although
the real limit is ghon be somewhat less than all dis bullshit.
.PP
Da resultin hybrid volume can be accessed on a Unix machine by using
the hfsutils routines. But fuck dat shiznit yo, tha word on tha street is dat no chizzlez can be made ta tha volume as it
is set as
.B locked.
Da option
.B \-hfs\-unlock
will create a output image dat is unlocked \(em however no chizzlez should be
made ta tha contentz of tha volume (unless you straight-up know what tha fuck yo ass is
doing) as it aint a "real" HFS volume.
.PP
.B \-mac\-name
will not currently work with
.B \-T
\(em tha Unix name is ghon be used up in the
.I TRANS.TBL
file, not tha Macintosh name.
.PP
Although 
.B genisoimage
does not alta tha contentz of a gangbangin' file, if a funky-ass binary file has its TYPE
set as
.IR TEXT ", it " may
be read incorrectly on a Macintosh. Therefore a funky-ass betta chizzle fo' the
default TYPE may be
.IR ???? .
.PP
.B \-mac\-boot\-file
may not work at all...
.PP
May not work wit PC Exchange v2.2 or higher filez (available wit MacOS 8.1).
DOS media containin PC Exchange filez should be mounted as type
.B msdos
(not
.BR vfat )
when rockin Linux.
.PP
Da SFM format is only partially supported \(em see
.B HFS MACINTOSH FILE FORMATS
section above.
.PP
It aint possible ta use
.BR \-sparc\-boot " or " \-generic\-boot " with"
.BR \-boot\-hfs\-file " or " \-prep\-boot .
.PP
.B genisoimage
should be able ta create HFS hybrid images over 4Gb, although dis has not
been straight-up tested.
.\" ----------------------------------------
.SH "SEE ALSO"
.BR genisoimagerc (5),
.BR wodim (1),
.BR mkzftree (8),
.BR magic (5).
.\" ----------------------------------------
.SH AUTHORS
.B genisoimage
is derived from
.B mkisofs
from the
.B cdrtools 2.01.01a08
package from May 2006 (with few thugged-out shiznit extracted from cdrtools 2.01.01a24 from
March 2007) from .IR http://cdrecord.berlios.de/ ,
but is now part of the
.B cdrkit
suite, maintained by Joerg Jaspert, Eduard Bloch, Steve McIntyre, Peter
Samuelson, Christian Fromme, Lil' Bow Wow Hutchings, n' other contributors.
Da maintainers can be contacted at
.IR debburn-devel@lists.alioth.debian.org ,
or peep the
.B cdrkit
project wizzy joint at
.IR http://www.cdrkit.org/ .
.PP
Eric Youngdale freestyled tha straight-up original gangsta versions (1993\(en1998) of
.BR mkisofs .
J\(:org Schillin freestyled tha SCSI transhiznit library n' its
interface, n' has maintained
.B mkisofs
since 1999.  Jizzy Pearson freestyled tha HFS hybrid code, using
.I libhfs
by Robert Leslie.  Pearson, Schilling, Jungshik Shin n' Jaakko
Heinonen contributed ta tha characta set conversion code.  The
.B cdrkit
maintainers have maintained
.B genisoimage
since 2006.
.PP
.nf
Copyright 1993-1998 by Yggdrasil Computing, Inc.
Copyright 1996-1997 by Robert Leslie
Copyright 1997-2001 by Jizzy Pearson
Copyright 1999-2006 by J\(:org Schilling
Copyright 2007 by J\(:org Schillin (originatin few thugged-out shit)
Copyright 2002-2003 by Jungshik Shin
Copyright 2003 by Jaakko Heinonen
Copyright 2006 by tha Cdrkit maintainers
.fi
.PP
If you wanna take part up in tha pimpment of
.BR genisoimage ,
you may join the
.B cdrkit
developer mailin list by followin tha instructions on
.IR http://alioth.debian.org/mail/?group_id=31006 .
Da email address of tha list is
.IR debburn-devel@lists.alioth.debian.org .
This be also tha address fo' user support thangs.  Note that
.BR cdrkit " n' " cdrtools
are not affiliated.
.PP
.\" ----------------------------------------
.SH ACKNOWLEDGEMENTS
UNIX be a registered trademark of Da Open Group up in tha US n' other countries.
