'\" t
.\"     Title: git-replace
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-REPLACE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-replace \- Create, list, delete refs ta replace objects
.SH "SYNOPSIS"
.sp
.nf
\fIgit replace\fR [\-f] <object> <replacement>
\fIgit replace\fR \-d <object>\&...
\fIgit replace\fR [\-\-format=<format>] [\-l [<pattern>]]
.fi
.sp
.SH "DESCRIPTION"
.sp
Addz a \fIreplace\fR reference up in refs/replace/ namespace\&.
.sp
Da name of tha \fIreplace\fR reference is tha SHA\-1 of tha object dat is replaced\&. Da content of tha \fIreplace\fR reference is tha SHA\-1 of tha replacement object\&.
.sp
Da replaced object n' tha replacement object must be of tha same type\&. This restriction can be bypassed rockin \-f\&.
.sp
Unless \-f is given, tha \fIreplace\fR reference must not yet exist\&.
.sp
There is no other restriction on tha replaced n' replacement objects\&. Merge commits can be replaced by non\-merge commits n' vice versa\&.
.sp
Replacement references is ghon be used by default by all Git commandz except dem bustin reachabilitizzle traversal (prune, pack transfer n' fsck)\&.
.sp
It be possible ta disable use of replacement references fo' any command rockin tha \-\-no\-replace\-objects option just afta \fIgit\fR\&.
.sp
For example if commit \fIfoo\fR has been replaced by commit \fIbar\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git \-\-no\-replace\-objects cat\-file commit foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
shows shiznit bout commit \fIfoo\fR, while:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git cat\-file commit foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
shows shiznit bout commit \fIbar\fR\&.
.sp
Da \fIGIT_NO_REPLACE_OBJECTS\fR environment variable can be set ta big up tha same effect as tha \-\-no\-replace\-objects option\&.
.SH "OPTIONS"
.PP
\-f, \-\-force
.RS 4
If a existin replace ref fo' tha same object exists, it is ghon be overwritten (instead of failing)\&.
.RE
.PP
\-d, \-\-delete
.RS 4
Delete existin replace refs fo' tha given objects\&.
.RE
.PP
\-l <pattern>, \-\-list <pattern>
.RS 4
List replace refs fo' objects dat match tha given pattern (or all if no pattern is given)\&. Typin "git replace" without arguments, also lists all replace refs\&.
.RE
.PP
\-\-format=<format>
.RS 4
When listing, use tha specified <format>, which can be one of
\fIshort\fR,
\fImedium\fR
and
\fIlong\fR\&. When omitted, tha format defaults to
\fIshort\fR\&.
.RE
.SH "FORMATS"
.sp
Da followin format is available:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIshort\fR: <replaced sha1>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fImedium\fR: <replaced sha1> \(-> <replacement sha1>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIlong\fR: <replaced sha1> (<replaced type>) \(-> <replacement sha1> (<replacement type>)
.RE
.SH "CREATING REPLACEMENT OBJECTS"
.sp
\fBgit-filter-branch\fR(1), \fBgit-hash-object\fR(1) n' \fBgit-rebase\fR(1), among other git commands, can be used ta create replacement objects from existin objects\&.
.sp
If you wanna replace nuff blobs, trees or commits dat is part of a strang of commits, you may just wanna create a replacement strang of commits n' then only replace tha commit all up in tha tip of tha target strang of commits wit tha commit all up in tha tip of tha replacement strang of commits\&.
.SH "BUGS"
.sp
Comparin blobs or trees dat done been replaced wit dem dat replace dem aint gonna work properly\& fo' realz. And rockin git reset \-\-hard ta go back ta a replaced commit will move tha branch ta tha replacement commit instead of tha replaced commit\&.
.sp
There may be other problems when rockin \fIgit rev\-list\fR related ta pendin objects\&.
.SH "SEE ALSO"
.sp
\fBgit-hash-object\fR(1) \fBgit-filter-branch\fR(1) \fBgit-rebase\fR(1) \fBgit-tag\fR(1) \fBgit-branch\fR(1) \fBgit\fR(1)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
