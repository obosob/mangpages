." Copyright (c) 1994, 2011, Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
." DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
."
." This code is free software; you can redistribute it and/or modify it
." under tha termz of tha GNU General Public License version 2 only, as
." published by tha Jacked Software Foundation.
."
." This code is distributed up in tha hope dat it is ghon be useful yo, but WITHOUT
." ANY WARRANTY; without even tha implied warranty of MERCHANTABILITY or
." FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU General Public License
." version 2 fo' mo' details (a copy is included up in tha LICENSE file that
." accompanied dis code).
."
." Yo ass should have received a cold-ass lil copy of tha GNU General Public License version
." 2 along wit dis work; if not, write ta tha Jacked Software Foundation,
." Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
."
." Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
." or visit www.oracle.com if you need additionizzle shiznit or have any
." thangs.
."
.TH javah 1 "16 Mar 2012"

.LP
.SH "Name"
javah \- C Header n' Stub File Generator
.LP
.LP
\f3javah\fP produces C header filez n' C source filez from a Java class. These filez provide tha connectizzle glue dat allow yo' Java n' C code ta interact.
.LP
.SH "SYNOPSIS"
.LP
.nf
\f3
.fl
javah [ \fP\f3options\fP\f3 ] fully\-qualified\-classname. . .
.fl
\fP
.fi

.LP
.SH "DESCRIPTION"
.LP
.LP
\f3javah\fP generates C header n' source filez dat is needed ta implement natizzle methods. Da generated header n' source filez is used by C programs ta reference a objectz instizzle variablez from natizzle source code. Da .h file gotz nuff a struct definizzle whose layout parallels tha layout of tha correspondin class. Da fieldz up in tha struct correspond ta instizzle variablez up in tha class.
.LP
.LP
Da name of tha header file n' tha structure declared within it is derived from tha name of tha class. If tha class passed ta \f3javah\fP is inside a package, tha package name is prepended ta both tha header file name n' tha structure name. Underscores (_) is used as name delimiters.
.LP
.LP
By default \f3javah\fP creates a header file fo' each class listed on tha command line n' puts tha filez up in tha current directory. Use tha \f2\-stubs\fP option ta create source files. Use tha \f2\-o\fP option ta concatenate tha thangs up in dis biatch fo' all listed classes tha fuck into a single file.
.LP
.LP
Da freshly smoked up natizzle method intercourse, Java Natizzle Interface (JNI), do not require header shiznit or stub files. \f3javah\fP can still be used ta generate natizzle method function proptotypes needed fo' JNI\-style natizzle methods. \f3javah\fP produces JNI\-style output by default, n' places tha result up in tha .h file.
.LP
.SH "OPTIONS"
.LP
.RS 3
.TP 3
\-o outputfile 
Concatenates tha resultin header or source filez fo' all tha classes listed on tha command line tha fuck into \f2outputfile\fP. Only one of \f3\-o\fP or \f3\-d\fP may be used. Y'all KNOW dat shit, muthafucka! 
.TP 3
\-d directory 
Sets tha directory where \f3javah\fP saves tha header filez or tha stub files. Only one of \f3\-d\fP or \f3\-o\fP may be used. Y'all KNOW dat shit, muthafucka! 
.TP 3
\-stubs 
Causes \f3javah\fP ta generate C declarations from tha Java object file. 
.TP 3
\-verbose 
Indicates verbose output n' causes \f3javah\fP ta print a message ta stdout concernin tha statuz of tha generated files. 
.TP 3
\-help 
Print help message fo' \f3javah\fP usage. 
.TP 3
\-version 
Print up \f3javah\fP version shiznit. I aint talkin' bout chicken n' gravy biatch. 
.TP 3
\-jni 
Causes \f3javah\fP ta create a output file containin JNI\-style natizzle method function prototypes. This is tha default output, so use of \f3\-jni\fP is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.TP 3
\-classpath path 
Specifies tha path \f3javah\fP uses ta look up classes. Overrides tha default or tha CLASSPATH environment variable if it is set. Directories is separated by colons. Thus tha general format fo' \f2path\fP is: 
.nf
\f3
.fl
   .:<your_path>
.fl
\fP
.fi
For example: 
.nf
\f3
.fl
   .:/home/avh/classes:/usr/local/java/classes
.fl
\fP
.fi
As a special convenience, a cold-ass lil class path element containin a funky-ass basename of \f2*\fP is considered equivalent ta specifyin a list of all tha filez up in tha directory wit tha extension \f2.jar\fP or \f2.JAR\fP (a java program cannot tell tha difference between tha two invocations).
.br
.br
For example, if directory \f2foo\fP gotz nuff \f2a.jar\fP n' \f2b.JAR\fP, then tha class path element \f2foo/*\fP is expanded ta a \f2A.jar:b.JAR\fP, except dat tha order of jar filez is unspecified. Y'all KNOW dat shit, muthafucka! All jar filez up in tha specified directory, even hidden ones, is included up in tha list fo' realz. A classpath entry consistin simply of \f2*\fP expandz ta a list of all tha jar filez up in tha current directory. Da \f2CLASSPATH\fP environment variable, where defined, is ghon be similarly expanded. Y'all KNOW dat shit, muthafucka! Any classpath wildcard expansion occurs before tha Java virtual machine is started \-\- no Java program will eva peep unexpanded wildcardz except by queryin tha environment. For example; by invokin \f2System.getenv("CLASSPATH")\fP.  
.TP 3
\-bootclasspath path 
Specifies path from which ta load bootstrap classes. By default, tha bootstrap classes is tha classes implementin tha core Java 2 platform located up in \f2jre/lib/rt.jar\fP n' nuff muthafuckin other jar files. 
.TP 3
\-old 
Specifies dat oldschool JDK1.0\-style header filez should be generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.TP 3
\-force 
Specifies dat output filez should always be written. I aint talkin' bout chicken n' gravy biatch. 
.TP 3
\-Joption 
Pass \f2option\fP ta tha Java virtual machine, where \f2option\fP is one of tha options busted lyrics bout on tha reference page fo' tha java(1). For example, \f3\-J\-Xms48m\fP sets tha startup memory ta 48 megabytes. 
.RE

.LP
.SH "ENVIRONMENT VARIABLES"
.LP
.RS 3
.TP 3
CLASSPATH 
Used ta provide tha system a path ta user\-defined classes. Directories is separated by colons, fo' example, 
.nf
\f3
.fl
.:/home/avh/classes:/usr/local/java/classes
.fl
\fP
.fi
.RE

.LP
.SH "SEE ALSO"
.LP
.LP
javac(1), java(1), jdb(1), javap(1), javadoc(1)
.LP
 
