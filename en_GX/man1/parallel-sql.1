.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQL 1"
.TH SQL 1 "2013-05-21" "20130522" "parallel"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
sql \- execute a cold-ass lil command on a thugged-out database determined by a thugged-out dburl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBsql\fR [options] \fIdburl\fR [\fIcommands\fR]
.PP
\&\fBsql\fR [options] \fIdburl\fR < commandfile
.PP
\&\fB#!/usr/bin/sql\fR \fB\-\-shebang\fR [options] \fIdburl\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1GNU \s0\fBsql\fR aims ta give a simple, unified intercourse fo' accessing
databases all up in all tha different databases' command line
clients, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. So far tha focus has been on givin a cold-ass lil common way ta specify
login shiznit (protocol, username, password, hostname, n' port
number), size (database n' table size), n' hustlin queries.
.PP
Da database be addressed rockin a \s-1DBURL.\s0 If \fIcommands\fR is left out
you will git dat databasez interactizzle shell.
.PP
\&\s-1GNU \s0\fBsql\fR is often used up in combination wit \s-1GNU \s0\fBparallel\fR.
.IP "\fIdburl\fR" 9
.IX Item "dburl"
A \s-1DBURL\s0 has tha followin syntax:
[sql:]vendor://
[[user][:password]@][host][:port]/[database][?sqlquery]
.Sp
See tha section \s-1DBURL\s0 below.
.IP "\fIcommands\fR" 9
.IX Item "commands"
Da \s-1SQL\s0 commandz ta run. I aint talkin' bout chicken n' gravy biatch. Each argument gonna git a newline
appended.
.Sp
Example: \*(L"\s-1SELECT\s0 * \s-1FROM\s0 foo;\*(R" \*(L"\s-1SELECT\s0 * \s-1FROM\s0 bar;\*(R"
.Sp
If tha arguments contain '\en' or '\ex0a' dis is ghon be replaced wit a
newline:
.Sp
Example: \*(L"\s-1SELECT\s0 * \s-1FROM\s0 foo;\en \s-1SELECT\s0 * \s-1FROM\s0 bar;\*(R"
.Sp
If no commandz is given \s-1SQL\s0 is read from tha keyboard or \s-1STDIN.\s0
.Sp
Example: echo '\s-1SELECT\s0 * \s-1FROM\s0 foo;' | sql mysql:///
.IP "\fB\-\-db\-size\fR" 9
.IX Item "--db-size"
.PD 0
.IP "\fB\-\-dbsize\fR" 9
.IX Item "--dbsize"
.PD
Size of database. Right back up in yo muthafuckin ass. Show tha size of tha database on disk. For Oracle
this requires access ta read tha table \fIdba_data_files\fR \- tha user
\&\fIsystem\fR has dis shit.
.IP "\fB\-\-help\fR" 9
.IX Item "--help"
.PD 0
.IP "\fB\-h\fR" 9
.IX Item "-h"
.PD
Print a summary of tha options ta \s-1GNU \s0\fBsql\fR n' exit.
.IP "\fB\-\-html\fR" 9
.IX Item "--html"
\&\s-1HTML\s0 output. Turn on \s-1HTML\s0 tabular output.
.IP "\fB\-\-show\-processlist\fR" 9
.IX Item "--show-processlist"
.PD 0
.IP "\fB\-\-proclist\fR" 9
.IX Item "--proclist"
.IP "\fB\-\-listproc\fR" 9
.IX Item "--listproc"
.PD
Show tha list of hustlin queries.
.IP "\fB\-\-show\-databases\fR" 9
.IX Item "--show-databases"
.PD 0
.IP "\fB\-\-showdbs\fR" 9
.IX Item "--showdbs"
.IP "\fB\-\-list\-databases\fR" 9
.IX Item "--list-databases"
.IP "\fB\-\-listdbs\fR" 9
.IX Item "--listdbs"
.PD
List tha databases (table spaces) up in tha database.
.IP "\fB\-\-show\-tables\fR" 9
.IX Item "--show-tables"
.PD 0
.IP "\fB\-\-list\-tables\fR" 9
.IX Item "--list-tables"
.IP "\fB\-\-table\-list\fR" 9
.IX Item "--table-list"
.PD
List tha tablez up in tha database.
.IP "\fB\-\-noheaders\fR" 9
.IX Item "--noheaders"
.PD 0
.IP "\fB\-\-no\-headers\fR" 9
.IX Item "--no-headers"
.IP "\fB\-n\fR" 9
.IX Item "-n"
.PD
Remove headaz n' footas n' print only tuples. Bug up in Oracle: it
still prints number of rows found.
.IP "\fB\-p\fR \fIpass-through\fR" 9
.IX Item "-p pass-through"
Da strang followin \-p is ghon be given ta tha database connection
program as arguments, n' you can put dat on yo' toast. Multiple \-pz is ghon be joined with
space. Example: pass '\-U' n' tha user name ta tha program:
.Sp
\&\fI\-p \*(L"\-U scott\*(R"\fR can also be freestyled \fI\-p \-U \-p scott\fR.
.IP "\fB\-r\fR" 9
.IX Item "-r"
Try 3 times. Right back up in yo muthafuckin ass. Short version of \fI\-\-retries 3\fR.
.IP "\fB\-\-retries\fR \fIntimes\fR" 9
.IX Item "--retries ntimes"
Try \fIntimes\fR times. If tha client program returns wit a error,
retry tha command. Y'all KNOW dat shit, muthafucka! Default is \fI\-\-retries 1\fR.
.IP "\fB\-\-sep\fR \fIstring\fR" 9
.IX Item "--sep string"
.PD 0
.IP "\fB\-s\fR \fIstring\fR" 9
.IX Item "-s string"
.PD
Field separator. Shiiit, dis aint no joke. Use \fIstring\fR as separator between columns.
.IP "\fB\-\-skip\-first\-line\fR" 9
.IX Item "--skip-first-line"
Do not use tha straight-up original gangsta line of input (used by \s-1GNU \s0\fBsql\fR itself
when called wit \fB\-\-shebang\fR).
.IP "\fB\-\-table\-size\fR" 9
.IX Item "--table-size"
.PD 0
.IP "\fB\-\-tablesize\fR" 9
.IX Item "--tablesize"
.PD
Size of tables. Right back up in yo muthafuckin ass. Show tha size of tha tablez up in tha database.
.IP "\fB\-\-version\fR" 9
.IX Item "--version"
.PD 0
.IP "\fB\-V\fR" 9
.IX Item "-V"
.PD
Print tha version \s-1GNU \s0\fBsql\fR n' exit.
.IP "\fB\-\-shebang\fR" 9
.IX Item "--shebang"
.PD 0
.IP "\fB\-Y\fR" 9
.IX Item "-Y"
.PD
\&\s-1GNU \s0\fBsql\fR can be called as a gangbangin' finger-lickin' dirty-ass shebang (#!) command as tha straight-up original gangsta line of a script. Like this:
.Sp
.Vb 1
\&  #!/usr/bin/sql \-Y mysql:///
\&
\&  SELECT * FROM foo;
.Ve
.Sp
For dis ta work \fB\-\-shebang\fR or \fB\-Y\fR must be set as tha straight-up original gangsta option.
.SH "DBURL"
.IX Header "DBURL"
A \s-1DBURL\s0 has tha followin syntax:
[sql:]vendor://
[[user][:password]@][host][:port]/[database][?sqlquery]
.PP
To quote special charactas use %\-encodin specified in
http://tools.ietf.org/html/rfc3986#section\-2.1 (E.g. a password
containin '/' would contain '%2F').
.PP
Examples:
 mysql://scott:tiger@my.example.com/mydb
 sql:oracle://scott:tiger@ora.example.com/xe
 postgresql://scott:tiger@pg.example.com/pgdb
 pg:///
 postgresqlssl://scott@pg.example.com:3333/pgdb
 sql:sqlite2:////tmp/db.sqlite?SELECT * \s-1FROM\s0 foo;
 sqlite3:///../db.sqlite3?SELECT%20*%20FROM%20foo;
.PP
Currently supported vendors: MySQL (mysql), MySQL wit \s-1SSL \s0(mysqls,
mysqlssl), Oracle (oracle, ora), PostgreSQL (postgresql, pg, pgsql,
postgres), PostgreSQL wit \s-1SSL \s0(postgresqlssl, pgs, pgsqlssl,
postgresssl, pgssl, postgresqls, pgsqls, postgress), SQLite2 (sqlite,
sqlite2), SQLite3 (sqlite3).
.PP
Aliases must start wit ':' n' is read from 
/etc/sql/aliases n' ~/.sql/aliases. Da userz own
~/.sql/aliases should only be readable by tha user.
.PP
Example of aliases:
.PP
.Vb 12
\& :myalias1 pg://scott:tiger@pg.example.com/pgdb
\& :myalias2 ora://scott:tiger@ora.example.com/xe
\& # Short form of mysql://\`whoami\`:nopassword@localhost:3306/\`whoami\`
\& :myalias3 mysql:///
\& # Short form of mysql://\`whoami\`:nopassword@localhost:33333/mydb
\& :myalias4 mysql://:33333/mydb
\& # Alias fo' a alias
\& :m      :myalias4
\& # tha sortest alias possible
\& :       sqlite2:////tmp/db.sqlite
\& # Includin a SQL query
\& :query  sqlite:////tmp/db.sqlite?SELECT * FROM foo;
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Git a interactizzle prompt"
.IX Subsection "Git a interactizzle prompt"
Da most basic use of \s-1GNU \s0\fBsql\fR is ta git a interactizzle prompt:
.PP
\&\fBsql sql:oracle://scott:tiger@ora.example.com/xe\fR
.PP
If you have setup a alias you can do:
.PP
\&\fBsql :myora\fR
.SS "Run a query"
.IX Subsection "Run a query"
To run a query directly from tha command line:
.PP
\&\fBsql :myalias \*(L"\s-1SELECT\s0 * \s-1FROM\s0 foo;\*(R"\fR
.PP
Oracle requires newlines afta each statement. This can be done like
this:
.PP
\&\fBsql :myora \*(L"\s-1SELECT\s0 * \s-1FROM\s0 foo;\*(R" \*(L"\s-1SELECT\s0 * \s-1FROM\s0 bar;\*(R"\fR
.PP
Or this:
.PP
\&\fBsql :myora \*(L"\s-1SELECT\s0 * \s-1FROM\s0 foo;\enSELECT * \s-1FROM\s0 bar;\*(R"\fR
.SS "Copy a PostgreSQL database"
.IX Subsection "Copy a PostgreSQL database"
To copy a PostgreSQL database use pg_dump ta generate tha dump n' \s-1GNU
\&\s0\fBsql\fR ta import it:
.PP
\&\fBpg_dump pg_database | sql pg://scott:tiger@pg.example.com/pgdb\fR
.SS "Empty all tablez up in a MySQL database"
.IX Subsection "Empty all tablez up in a MySQL database"
Usin \s-1GNU \s0\fBparallel\fR it is easy as fuck  ta empty all tablez without droppin them:
.PP
\&\fBsql \-n mysql:/// 'show tables' | parallel sql mysql:/// \s-1DELETE FROM\s0 {};\fR
.SS "Drop all tablez up in a PostgreSQL database"
.IX Subsection "Drop all tablez up in a PostgreSQL database"
To drop all tablez up in a PostgreSQL database do:
.PP
\&\fBsql \-n pg:/// '\edt' | parallel \-\-colsep '\e|' \-r sql pg:/// \s-1DROP TABLE\s0 {2};\fR
.SS "Run as a script"
.IX Subsection "Run as a script"
Instead of bustin:
.PP
\&\fBsql mysql:/// < sqlfile\fR
.PP
you can combine tha sqlfile wit tha \s-1DBURL\s0 ta make a
UNIX-script. Right back up in yo muthafuckin ass. Smoke a script called \fIdemosql\fR:
.PP
\&\fB#!/usr/bin/sql \-Y mysql:///\fR
.PP
\&\fB\s-1SELECT\s0 * \s-1FROM\s0 foo;\fR
.PP
Then do:
.PP
\&\fBchmod +x demosql; ./demosql\fR
.SS "Use \-\-colsep ta process multiple columns"
.IX Subsection "Use --colsep ta process multiple columns"
Use \s-1GNU \s0\fBparallel\fRz \fB\-\-colsep\fR ta separate columns:
.PP
\&\fBsql \-s '\et' :myalias '\s-1SELECT\s0 * \s-1FROM\s0 foo;' | parallel \-\-colsep '\et' do_shiznit {4} {1}\fR
.SS "Retry if tha connection fails"
.IX Subsection "Retry if tha connection fails"
If tha access ta tha database fails occationally \fB\-\-retries\fR can help
make shizzle tha query succeeds:
.PP
\&\fBsql \-\-retries 5 :myalias '\s-1SELECT\s0 * \s-1FROM\s0 straight-up_big_foo;'\fR
.SS "Git info bout tha hustlin database system"
.IX Subsection "Git info bout tha hustlin database system"
Show how tha fuck big-ass tha database is:
.PP
\&\fBsql \-\-db\-size :myalias\fR
.PP
List tha tables:
.PP
\&\fBsql \-\-list\-tablez :myalias\fR
.PP
List tha size of tha tables:
.PP
\&\fBsql \-\-table\-size :myalias\fR
.PP
List tha hustlin processes:
.PP
\&\fBsql \-\-show\-processlist :myalias\fR
.SH "REPORTING BUGS"
.IX Header "REPORTING BUGS"
\&\s-1GNU \s0\fBsql\fR is part of \s-1GNU \s0\fBparallel\fR. Report bugs ta <bug\-parallel@gnu.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
When rockin \s-1GNU \s0\fBsql\fR fo' a publication please cite:
.PP
O. Tange (2011): \s-1GNU SQL \- A\s0 Command Line Tool fo' Accessin Different
Databases Usin DBURLs, ;login: Da \s-1USENIX\s0 Magazine, April 2011:29\-32.
.PP
Copyright (C) 2008,2009,2010 Ole Tange http://ole.tange.dk
.PP
Copyright (C) 2010,2011 Ole Tange, http://ole.tange.dk n' Free
Software Foundation, Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2007,2008,2009,2010,2011 Jacked Software Foundation, Inc.
.PP
This program is free software; you can redistribute it and/or modify
it under tha termz of tha \s-1GNU\s0 General Public License as published by
the Jacked Software Foundation; either version 3 of tha License, or
at yo' option any lata version.
.PP
This program is distributed up in tha hope dat it is ghon be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even tha implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License fo' mo' details.
.PP
Yo ass should have received a cold-ass lil copy of tha \s-1GNU\s0 General Public License
along wit dis program.  If not, peep <http://www.gnu.org/licenses/>.
.SS "Documentation license I"
.IX Subsection "Documentation license I"
Permission is granted ta copy, distribute and/or modify dis documentation
under tha termz of tha \s-1GNU\s0 Jacked Documentation License, Version 1.3 or
any lata version published by tha Jacked Software Foundation; wit no
Invariant Sections, wit no Front-Cover Texts, n' wit no Back-Cover
Texts, n' you can put dat on yo' toast.  A copy of tha license is included up in tha file fdl.txt.
.SS "Documentation license \s-1II\s0"
.IX Subsection "Documentation license Pt II"
Yo ass is free:
.IP "\fBto Share\fR" 9
.IX Item "to Share"
to copy, distribute n' transmit tha work
.IP "\fBto Remix\fR" 9
.IX Item "to Remix"
to adapt tha work
.PP
Under tha followin conditions:
.IP "\fBAttribution\fR" 9
.IX Item "Attribution"
Yo ass must attribute tha work up in tha manner specified by tha lyricist or
licensor (but not up in any way dat suggests dat they endorse you or
your use of tha work).
.IP "\fBSmoke up Alike\fR" 9
.IX Item "Smoke up Alike"
If you alter, transform, or build upon dis work, you may distribute
the resultin work only under tha same, similar or a cold-ass lil compatible
license.
.PP
With tha understandin that:
.IP "\fBWaiver\fR" 9
.IX Item "Waiver"
Any of tha above conditions can be waived if you git permission from
the copyright holder.
.IP "\fBPublic Domain\fR" 9
.IX Item "Public Domain"
Where tha work or any of its elements is up in tha hood domain under
applicable law, dat status is up in no way affected by tha license.
.IP "\fBOther Rights\fR" 9
.IX Item "Other Rights"
In no way is any of tha followin muthafuckin rights affected by tha license:
.RS 9
.IP "\(bu" 9
Yo crazy-ass fair dealin or fair use rights, or other applicable
copyright exceptions n' limitations;
.IP "\(bu" 9
Da authorz moral rights;
.IP "\(bu" 9
Rights other peeps may have either up in tha work itself or in
how tha work is used, like fuckin publicitizzle or privacy rights.
.RE
.RS 9
.RE
.IP "\fBNotice\fR" 9
.IX Item "Notice"
For any reuse or distribution, you must make clear ta others the
license termz of dis work.
.PP
A copy of tha full license is included up in tha file as cc\-by\-sa.txt.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
\&\s-1GNU \s0\fBsql\fR uses Perl. If \fBmysql\fR is installed, MySQL dburls will
work. If \fBpsql\fR is installed, PostgreSQL dburls will work.  If
\&\fBsqlite\fR is installed, SQLite2 dburls will work.  If \fBsqlite3\fR is
installed, SQLite3 dburls will work. If \fBsqlplus\fR is installed,
Oracle dburls will work. If \fBrlwrap\fR is installed, \s-1GNU \s0\fBsql\fR will
have a cold-ass lil command history fo' Oracle.
.SH "FILES"
.IX Header "FILES"
~/.sql/aliases \- userz own aliases wit DBURLs
.PP
/etc/sql/aliases \- common aliases wit DBURLs
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBmysql\fR(1), \fBpsql\fR(1), \fBrlwrap\fR(1), \fBsqlite\fR(1), \fBsqlite3\fR(1), \fBsqlplus\fR(1)
