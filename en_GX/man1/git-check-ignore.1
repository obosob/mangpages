'\" t
.\"     Title: git-check-ignore
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-CHECK\-IGNORE" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-check-ignore \- Debug gitignore / exclude files
.SH "SYNOPSIS"
.sp
.nf
\fIgit check\-ignore\fR [options] pathname\&...
\fIgit check\-ignore\fR [options] \-\-stdin < <list\-of\-paths>
.fi
.sp
.SH "DESCRIPTION"
.sp
For each pathname given via tha command\-line or from a gangbangin' file via \-\-stdin, show tha pattern from \&.gitignore (or other input filez ta tha exclude mechanism) dat decides if tha pathname is excluded or included\&. Lata patterns within a gangbangin' file take precedence over earlier ones\&.
.SH "OPTIONS"
.PP
\-q, \-\-quiet
.RS 4
Don\(cqt output anything, just set exit status\&. This is only valid wit a single pathname\&.
.RE
.PP
\-v, \-\-verbose
.RS 4
Also output details bout tha matchin pattern (if any) fo' each given pathname\&.
.RE
.PP
\-\-stdin
.RS 4
Read file names from stdin instead of from tha command\-line\&.
.RE
.PP
\-z
.RS 4
Da output format is modified ta be machine\-parseable (see below)\&. If
\-\-stdin
is also given, input paths is separated wit a NUL characta instead of a linefeed character\&.
.RE
.PP
\-n, \-\-non\-matching
.RS 4
Show given paths which don\(cqt match any pattern\&. This only make sense when
\-\-verbose
is enabled, otherwise it would not be possible ta distinguish between paths which match a pattern n' dem which don\(cqt\&.
.RE
.PP
\-\-no\-index
.RS 4
Don\(cqt look up in tha index when undertakin tha checks\&. This can be used ta debug why a path became tracked by e\&.g\&.
git add \&.
and was not ignored by tha rulez as expected by tha user or when pimpin patterns includin negation ta match a path previously added with
git add \-f\&.
.RE
.SH "OUTPUT"
.sp
By default, any of tha given pathnames which match a ignore pattern is ghon be output, one per line\&. If no pattern matches a given path, not a god damn thang is ghon be output fo' dat path; dis means dat path aint gonna be ignored\&.
.sp
If \-\-verbose is specified, tha output be a seriez of linez of tha form:
.sp
<source> <COLON> <linenum> <COLON> <pattern> <HT> <pathname>
.sp
<pathname> is tha path of a gangbangin' file bein queried, <pattern> is tha matchin pattern, <source> is tha pattern\(cqs source file, n' <linenum> is tha line number of tha pattern within dat source\&. If tha pattern contained a ! prefix or / suffix, it is ghon be preserved up in tha output\&. <source> is ghon be a absolute path when referrin ta tha file configured by core\&.excludesfile, or relatizzle ta tha repository root when referrin ta \&.git/info/exclude or a per\-directory exclude file\&.
.sp
If \-z is specified, tha pathnames up in tha output is delimited by tha null character; if \-\-verbose be also specified then null charactas is also used instead of colons n' hard tabs:
.sp
<source> <NULL> <linenum> <NULL> <pattern> <NULL> <pathname> <NULL>
.sp
If \-n or \-\-non\-matchin is specified, non\-matchin pathnames will also be output, up in which case all fieldz up in each output record except fo' <pathname> is ghon be empty\&. This can be useful when hustlin non\-interactively, so dat filez can be incrementally streamed ta STDIN of a long\-runnin check\-ignore process, n' fo' each of these files, STDOUT will indicate whether dat file matched a pattern or not\&. (Without dis option, it would be impossible ta tell whether tha absence of output fo' a given file meant dat it didn\(cqt match any pattern, or dat tha output hadn\(cqt been generated yet\&.)
.sp
Bufferin happens as documented under tha GIT_FLUSH option up in \fBgit\fR(1)\&. Da calla is responsible fo' avoidin deadlocks caused by overfillin a input buffer or readin from a empty output buffer\&.
.SH "EXIT STATUS"
.PP
0
.RS 4
One or mo' of tha provided paths is ignored\&.
.RE
.PP
1
.RS 4
None of tha provided paths is ignored\&.
.RE
.PP
128
.RS 4
A fatal error was encountered\&.
.RE
.SH "SEE ALSO"
.sp
\fBgitignore\fR(5) \fBgitconfig\fR(5) \fBgit-ls-files\fR(1)
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
