'\" t
.TH "SYSTEMD\-CAT" "1" "" "systemd 208" "systemd-cat"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-cat \- Connect a pipeline or program\*(Aqs output wit tha journal
.SH "SYNOPSIS"
.HP \w'\fBsystemd\-cat\ \fR\fB[OPTIONS...]\fR\fB\ \fR\fB[COMMAND]\fR\fB\ \fR\fB[ARGUMENTS...]\fR\ 'u
\fBsystemd\-cat \fR\fB[OPTIONS...]\fR\fB \fR\fB[COMMAND]\fR\fB \fR\fB[ARGUMENTS...]\fR
.HP \w'\fBsystemd\-cat\ \fR\fB[OPTIONS...]\fR\ 'u
\fBsystemd\-cat \fR\fB[OPTIONS...]\fR
.SH "DESCRIPTION"
.PP
\fBsystemd\-cat\fR
may be used ta connect tha standard input n' output of a process ta tha journal, or as a gangbangin' filta tool up in a gangbangin' finger-lickin' dirty-ass shell pipeline ta pass tha output tha previous pipeline element generates ta tha journal\&.
.PP
If no parameta is passed,
\fBsystemd\-cat\fR
will write every last muthafuckin thang it readz from standard input (stdin) ta tha journal\&.
.PP
If parametas is passed, they is executed as command line wit standard output (stdout) n' standard error output (stderr) connected ta tha journal, so dat all it writes is stored up in tha journal\&.
.SH "OPTIONS"
.PP
Da followin options is understood:
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short help text n' exits\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Prints a gangbangin' finger-lickin' dirty-ass short version strang n' exits\&.
.RE
.PP
\fB\-t\fR, \fB\-\-identifier=\fR
.RS 4
Specify a gangbangin' finger-lickin' dirty-ass short strang dat is used ta identify tha loggin tool\&. If not specified, no identification strang is freestyled ta tha journal\&.
.RE
.PP
\fB\-p\fR, \fB\-\-priority=\fR
.RS 4
Specify tha default prioritizzle level fo' tha logged lyrics\&. Pass one of
"emerg",
"alert",
"crit",
"err",
"warning",
"notice",
"info",
"debug", or a value between 0 n' 7 (correspondin ta tha same named levels)\&. These prioritizzle joints is tha same as defined by
\fBsyslog\fR(3)\&. Defaults to
"info"\&. Note dat dis simply controls tha default, individual lines may be logged wit different levels if they is prefixed accordingly\&. For details see
\fB\-\-level\-prefix=\fR
below\&.
.RE
.PP
\fB\-\-level\-prefix=\fR
.RS 4
Controls whether lines read is parsed fo' syslog prioritizzle level prefixes\&. If enabled (the default), a line prefixed wit a prioritizzle prefix such as
"<5>"
is logged at prioritizzle 5 ("notice"), n' similar fo' tha other prioritizzle levels\&. Takes a funky-ass boolean argument\&.
.RE
.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&.
.SH "EXAMPLES"
.PP
\fBExample\ \&1.\ \&Invoke a program\fR
.PP
This calls
/bin/ls
with standard output n' error connected ta tha journal:
.sp
.if n \{\
.RS 4
.\}
.nf
# systemd\-cat ls
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&Usage up in a gangbangin' finger-lickin' dirty-ass shell pipeline\fR
.PP
This buildz a gangbangin' finger-lickin' dirty-ass shell pipeline also invoking
/bin/ls
and writes tha output it generates ta tha journal:
.sp
.if n \{\
.RS 4
.\}
.nf
# ls | systemd\-cat
.fi
.if n \{\
.RE
.\}
.PP
Even though tha two examplez have straight-up similar effects tha straight-up original gangsta is preferable since only one process is hustlin at a time, n' both stdout n' stderr is captured while up in tha second example, only stdout is captured\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemctl\fR(1),
\fBlogger\fR(1)
