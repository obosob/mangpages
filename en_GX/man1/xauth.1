.\" Copyright 1993, 1998  Da Open Group
.\"
.\" Permission ta use, copy, modify, distribute, n' push dis software n' its
.\" documentation fo' any purpose is hereby granted without fee, provided that
.\" tha above copyright notice step tha fuck up in all copies n' dat both that
.\" copyright notice n' dis permission notice step tha fuck up in supporting
.\" documentation.
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of Da Open Group shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from Da Open Group.
.\"
.\"
.TH XAUTH 1 "xauth 1.0.9" "X Version 11"
.SH NAME
xauth \- X authoritizzle file utility
.SH SYNOPSIS
.B xauth
[ \fB\-f\fP \fIauthfile\fP ] [ \fB\-vqibn\fP ] [ \fIcommand arg ...\fP ]
.SH DESCRIPTION
.PP
Da \fIxauth\fP program is used ta edit n' display tha authorization
information used up in connectin ta tha X server n' shit.  This program is usually
used ta extract authorization recordz from one machine n' merge dem up in on
another (as is tha case when rockin remote logins or grantin access to
other users).  Commandz (busted lyrics bout below) may be entered interactively,
on tha \fIxauth\fP command line, or up in scripts, n' you can put dat on yo' toast.  Note dat dis program
does \fBnot\fP contact tha X server except when tha generate command is used.
Normally \fIxauth\fP aint used ta create tha authoritizzle file entry in
the first place; tha program dat starts tha X server (often \fIxdm\fP
or \fIstartx\fP) do dis shit.
.SH OPTIONS
Da followin options may be used wit \fIxauth\fP.  They may be given
individually (e.g., \fI\-q \-i\|\fP) or may combined (e.g., \fI\-qi\|\fP).
.TP 8
.B "\-f \fIauthfile\fP"
This option specifies tha name of tha authoritizzle file ta use.  By default,
\fIxauth\fP will use tha file specified by tha XAUTHORITY environment variable
or \fI\.Xauthority\fP up in tha userz home directory.
.TP 8
.B \-q
This option indicates dat \fIxauth\fP should operate on tha fuckin' down-lowly n' not print
unsolicited status lyrics.  This is tha default if a \fIxauth\fP command
is given on tha command line or if tha standard output aint pimped up ta a
terminal.
.TP 8
.B \-v
This option indicates dat \fIxauth\fP should operate verbosely n' print
status lyrics indicatin tha thangs up in dis biatch of various operations (e.g., how tha fuck many
recordz done been read up in or freestyled out).  This is tha default if \fIxauth\fP
is readin commandz from its standard input n' its standard output is
pimped up ta a terminal.
.TP 8
.B \-i
This option indicates dat \fIxauth\fP should ignore any authoritizzle file
locks.  Normally, \fIxauth\fP will refuse ta read or edit any authoritizzle files
that done been locked by other programs (usually \fIxdm\fP or another
\fIxauth\fP).
.TP 8
.B \-b
This option indicates dat \fIxauth\fP should attempt ta break any authority
file locks before proceeding.  Use dis option only ta clean up stale locks.
.TP 8
.B \-n
This option indicates dat \fIxauth\fP should not attempt ta resolve any
hostnames yo, but should simply always print tha host address as stored in
the authoritizzle file.
.TP 8
.B \-V
This option shows tha version number of tha xauth executable.
.SH COMMANDS
Da followin commandz may be used ta manipulate authoritizzle files:
.TP 8
.B "add \fIdisplayname protocolname hexkey"
An authorization entry fo' tha indicated display rockin tha given protocol
and key data be added ta tha authorization file.  Da data is specified as
an even-lengthed strang of hexadecimal digits, each pair representing
one octet.  Da first digit of each pair gives da most thugged-out dope 4 bits
of tha octet, n' tha second digit of tha pair gives tha least dope 4
bits, n' you can put dat on yo' toast.  For example, a 32 characta hexkey would represent a 128-bit value.
A protocol name consistin of just a
single period is treated as a abbreviation fo' \fIMIT-MAGIC-COOKIE-1\fP.

.TP 8
.B "generate \fIdisplayname protocolname\fP \fR[\fPtrusted|untrusted\fR]\fP"
.B \fR[\fPtimeout \fIseconds\fP\fR]\fP  \fR[\fPgroup \fIgroup-id\fP\fR]\fP \fR[\fBdata \fIhexdata\fR]

This command is similar ta add. Y'all KNOW dat shit, muthafucka!  Da main difference is dat instead
of requirin tha user ta supply tha key data, it connects ta the
server specified up in \fIdisplayname\fP n' uses tha SECURITY extension
in order ta git tha key data ta store up in tha authorization file.  If
the server cannot be contacted or if it do not support tha SECURITY
extension, tha command fails.  Otherwise, a authorization entry for
the indicated display rockin tha given protocol be added ta the
authorization file.  A protocol name consistin of just a single
period is treated as a abbreviation fo' \fIMIT-MAGIC-COOKIE-1\fP.

If tha \fBtrusted\fP option is used, clients dat connect rockin this
authorization gonna git full run of tha display, as usual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If
\fBuntrusted\fP is used, clients dat connect rockin dis authorization
will be considered untrusted n' prevented from jackin or tampering
with data belongin ta trusted clients, n' you can put dat on yo' toast.  See tha SECURITY extension
specification fo' full details on tha restrictions imposed on
untrusted clients, n' you can put dat on yo' toast.  Da default is \fBuntrusted\fP.

Da \fBtimeout\fP option specifies how tha fuck long up in secondz this
authorization is ghon be valid. Y'all KNOW dat shit, muthafucka!  If tha authorization remains unused (no
clients is connected wit it) fo' longer than dis time period, the
server purges tha authorization, n' future attempts ta connect using
it will fail.  Note dat tha purgin done by tha server do \fBnot\fP
delete tha authorization entry from tha authorization file.  The
default timeout is 60 seconds.

Da \fBgroup\fP option specifies tha application crew dat clients
connectin wit dis authorization should belong to.  See the
application crew extension justification fo' mo' details.  The
default is ta not belong ta a application group.

Da \fBdata\fP option specifies data dat tha server should use to
generate tha authorization. I aint talkin' bout chicken n' gravy biatch.  Note dat dis is \fBnot\fP tha same data
that gets freestyled ta tha authorization file.  Da interpretation of
this data dependz on tha authorization protocol.  Da \fIhexdata\fP is
in tha same format as tha \fIhexkey\fP busted lyrics bout up in tha add command.
Da default is ta bust no data.

.TP 8
.B "[n]extract \fIfilename displayname..."
Authorization entries fo' each of tha specified displays is freestyled ta the
indicated file.  If tha \fInextract\fP command is used, tha entries is written
in a numeric format suitable fo' non-binary transmission (like fuckin secure
electronic mail).  Da extracted entries can be read back up in rockin the
\fImerge\fP n' \fInmerge\fP commands.  If tha filename consists of
just a single dash, tha entries is ghon be freestyled ta tha standard output.
.TP 8
.B "[n]list \fR[\fIdisplayname\fP...]"
Authorization entries fo' each of tha specified displays (or all if no
displays is named) is printed on tha standard output.  If tha \fInlist\fP
command is used, entries is ghon be shown up in tha numeric format used by
the \fInextract\fP command; otherwise, they is shown up in a textual format.
Key data be always displayed up in tha hexadecimal format given up in the
description of tha \fIadd\fP command.
.TP 8
.B "[n]merge \fR[\fIfilename\fP...]"
Authorization entries is read from tha specified filez n' is merged into
the authorization database, supersedin any matchin existin entries. Put ya muthafuckin choppers up if ya feel dis! If
the \fInmerge\fP command is used, tha numeric format given up in tha description
of tha \fIextract\fP command is used. Y'all KNOW dat shit, muthafucka!  If a gangbangin' filename consistz of just a single
dash, tha standard input is ghon be read if it aint been read before.
.TP 8
.B "remove \fIdisplayname\fR..."
Authorization entries matchin tha specified displays is removed from the
authoritizzle file.
.TP 8
.B "source \fIfilename"
Da specified file is treated as a script containin \fIxauth\fP commands
to execute.  Blank lines n' lines beginnin wit a gangbangin' finger-lickin' dirty-ass sharp sign (#) are
ignored. Y'all KNOW dat shit, muthafucka!  A single dash may be used ta indicate tha standard input, if it
hasn't already been read.
.TP 8
.B "info"
Hype describin tha authorization file, whether or not any chizzles
have been made, n' from where \fIxauth\fP commandz is bein read
is printed on tha standard output.
.TP 8
.B "exit"
If any modifications done been made, tha authoritizzle file is freestyled up (if
allowed), n' tha program exits, n' you can put dat on yo' toast.  An end of file is treated as a implicit
\fIexit\fP command.
.TP 8
.B "quit"
Da program exits, ignorin any modifications.  This may also be accomplished
by pressin tha interrupt character.
.TP 8
.B "version"
This command shows tha version number of tha xauth executable.
.TP 8
.B "help [\fIstring\fP]"
A description of all commandz dat begin wit tha given strang (or all
commandz if no strang is given) is printed on tha standard output.
.TP 8
.B "?"
A short list of tha valid commandz is printed on tha standard output.
.SH "DISPLAY NAMES"
Display names fo' tha \fIadd\fP, \fI[n]extract\fP, \fI[n]list\fP,
\fI[n]merge\fP, n' \fIremove\fP commandz use tha same format as the
DISPLAY environment variable n' tha common \fI\-display\fP command line
argument.  Display-specific shiznit (like fuckin tha screen number)
is unnecessary n' is ghon be ignored.
Same-machine connections (like fuckin local-host sockets,
shared memory, n' tha Internizzle Protocol hostname \fIlocalhost\fP) are
referred ta as \fIhostname\fP/unix:\fIdisplaynumber\fP so that
local entries fo' different machines may be stored up in one authoritizzle file.
.SH EXAMPLE
.PP
Da most common use fo' \fIxauth\fP is ta extract tha entry fo' the
current display, copy it ta another machine, n' merge it tha fuck into the
userz authoritizzle file on tha remote machine:
.sp
.nf
        %  xauth extract \- $DISPLAY | ssh otherhost xauth merge \-
.fi
.PP
.sp
Da followin command contacts tha server :0 ta create an
authorization rockin tha MIT-MAGIC-COOKIE-1 protocol.  Clients that
hook tha fuck up wit dis authorization is ghon be untrusted.
.nf
	%  xauth generate :0 .
.fi
.SH ENVIRONMENT
This \fIxauth\fP program uses tha followin environment variables:
.TP 8
.B XAUTHORITY
to git tha name of tha authoritizzle file ta use if tha \fI\-f\fP option aint
used.
.TP 8
.B HOME
to git tha userz home directory if XAUTHORITY aint defined.
.SH FILES
.TP 8
.I $HOME/.Xauthority
default authoritizzle file if XAUTHORITY aint defined.
.SH "SEE ALSO"
X(7), Xsecurity(7), xhost(1),
Xserver(1), xdm(1), startx(1),
Xau(3).
.SH BUGS
.PP
Users dat have unsecure networks should take care ta use encrypted
file transfer mechanizzlez ta copy authorization entries between machines.
Similarly, tha \fIMIT-MAGIC-COOKIE-1\fP protocol aint straight-up useful in
unsecure environments, n' you can put dat on yo' toast.  Joints dat is horny bout additionizzle security
may need ta use encrypted authorization mechanizzlez like fuckin Kerberos.
.PP
Spaces is currently not allowed up in tha protocol name.  Quotin could be
added fo' tha truly perverse.
.SH AUTHOR
Jim Fulton, MIT X Consortium
