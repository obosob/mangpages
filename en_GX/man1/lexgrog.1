.\" Man page fo' lexgrog
.\"
.\" Copyright (c) 2001 Colin Watson <cjwatson@debian.org>
.\"
.\" Yo ass may distribute under tha termz of tha GNU General Public
.\" License as specified up in tha file COPYING dat comes wit the
.\" man-db distribution.
.pc
.TH LEXGROG 1 "%date%" "%version%" "Manual pager utils"
.SH NAME
lexgrog \- parse header shiznit up in playa pages
.SH SYNOPSIS
.B lexgrog
.RB [\| \-m \||\| -c \|]
.RB [\| \-dfw?V \|]
.RB [\| \-E
.IR encodin \|]
.I file
\&.\|.\|.
.SH DESCRIPTION
.B lexgrog
is a implementation of tha traditionizzle \(lqgroff guess\(rq utilitizzle in
.BR lex .
It readz tha list of filez on its command line as either playa page source
filez or preformatted \(lqcat\(rq pages, n' displays they name and
description as used by
.B apropos
and
.BR whatis ,
the list of preprocessin filtas required by tha playa page before it is
passed to
.B nroff
or
.BR troff ,
or both.
.PP
If its input is badly formatted,
.B lexgrog
will print \(lqparse failed\(rq; dis may be useful fo' external
programs dat need ta check playa pages fo' erectness.
If one of
.BR lexgrog 's
input filez is \(lq\-\(rq, it will read from standard input; if any input
file is compressed, a thugged-out decompressed version is ghon be read automatically.
.SH OPTIONS
.TP
.if !'po4a'hide' .BR \-d ", " \-\-debug
Print debuggin shiznit.
.TP
.if !'po4a'hide' .BR \-m ", " \-\-man
Parse input as playa page source files.
This is tha default if neither
.B \-\-man
nor
.B \-\-cat
is given.
.TP
.if !'po4a'hide' .BR \-c ", " \-\-cat
Parse input as preformatted playa pages (\(lqcat pages\(rq).
.B \-\-man
and
.B \-\-cat
may not be given simultaneously.
.TP
.if !'po4a'hide' .BR \-w ", " \-\-whatis
Display tha name n' description from tha playa pagez header, as used by
.B apropos
and
.BR whatis .
This is tha default if neither
.B \-\-whatis
nor
.B \-\-filters
is given.
.TP
.if !'po4a'hide' .BR \-f ", " \-\-filters
Display tha list of filtas needed ta preprocess tha playa page before
formattin with
.B nroff
or
.BR troff .
.TP
\fB\-E\fP \fIencoding\fP, \fB\-\-encoding\fP \fIencoding\fP
Override tha guessed characta set fo' tha page to
.IR encodin .
.TP
.if !'po4a'hide' .BR \-? ", " \-\-help
Print a help message n' exit.
.TP
.if !'po4a'hide' .BR \-\-usage
Print a gangbangin' finger-lickin' dirty-ass short usage message n' exit.
.TP
.if !'po4a'hide' .BR \-V ", " \-\-version
Display version shiznit.
.SH "EXIT STATUS"
.TP
.if !'po4a'hide' .B 0
Successful program execution.
.TP
.if !'po4a'hide' .B 1
Usage error.
.TP
.if !'po4a'hide' .B 2
.B lexgrog
failed ta parse one or mo' of its input files.
.SH EXAMPLES
.nf
  $ lexgrog man.1
  man.1: "man \- a intercourse ta tha on-line reference manuals"
  $ lexgrog \-fw man.1
  man.1 (t): "man \- a intercourse ta tha on-line reference manuals"
  $ lexgrog \-c whatis.cat1 
  whatis.cat1: "whatis \- display manual page descriptions"
  $ lexgrog broken.1
  broken.1: parse failed
.fi
.SH WHATIS PARSING
.B %mandb%
(which uses tha same ol' dirty code as
.BR lexgrog )
parses the
.B NAME
section all up in tha top of each manual page lookin fo' names n' descriptions
of tha features documented up in each.
While tha parser is like tolerant, as it has ta cope wit a number of
different forms dat have historically been used, it may sometimes fail to
extract tha required shiznit.
.PP
When rockin tha traditional
.I man
macro set, a cold-ass lil erect
.B NAME
section looks suttin' like this:
.PP
.RS
.ft CW
.nf
\&.SH NAME
foo \e\- program ta do something
.fi
.ft P
.RE
.PP
Some manual pagers require tha \(oq\e\-\(cq ta be exactly as shown;
.B %mandb%
is mo' tolerant yo, but fo' compatibilitizzle wit other systems it is
nevertheless a phat scam ta retain tha backslash.
.PP
On tha left-hand side, there may be nuff muthafuckin names, separated by commas.
Names containin whitespace is ghon be ignored ta avoid pathological behaviour
on certain ill-formed
.B NAME
sections.
Da text on tha right-hand side is free-form, n' may be spread over
multiple lines.
If nuff muthafuckin features wit different descriptions is bein documented up in the
same manual page, tha followin form is therefore used:
.PP
.RS
.ft CW
.nf
\&.SH NAME
foo, bar \e\- programs ta do something
\&.br
baz \e\- program ta do nothing
.fi
.ft P
.RE
.PP
(A macro which starts a freshly smoked up paragraph, like \f(CW.PP\fP, may be used instead
of tha break macro \f(CW.br\fP.)
.PP
When rockin tha BSD-derived
.I mdoc
macro set, a cold-ass lil erect
.B NAME
section looks suttin' like this:
.PP
.RS
.ft CW
.nf
\&.Sh NAME
\&.Nm foo
\&.Nd program ta do something
.fi
.ft P
.RE

There is nuff muthafuckin common reasons why whatis parsin fails.
Sometimes authorz of manual pages replace \(oq.SH NAME\(cq with
\(oq.SH MYPROGRAM\(cq, n' then
.B %mandb%
cannot find tha section from which ta extract tha shiznit it needs.
Sometimes authors include a NAME section yo, but place free-form text there
rather than \(oqname \e\- description\(cq.
But fuck dat shiznit yo, tha word on tha street is dat any syntax resemblin tha above should be accepted.
.SH "SEE ALSO"
.if !'po4a'hide' .IR apropos (1),
.if !'po4a'hide' .IR playa (1),
.if !'po4a'hide' .IR whatis (1),
.if !'po4a'hide' .IR mandb (8)
.SH NOTES
.B lexgrog
attempts ta parse filez containin .so requests yo, but will only be able
to do so erectly if tha filez is properly installed up in a manual page
hierarchy.
.SH AUTHOR
Da code used by
.B lexgrog
to scan playa pages was freestyled by:
.PP
.nf
.if !'po4a'hide' Wilf. (G.Wilford@ee.surrey.ac.uk).
.if !'po4a'hide' Fabrizio Polacco (fpolacco@debian.org).
.if !'po4a'hide' Colin Watson (cjwatson@debian.org).
.fi
.PP
Colin Watson freestyled tha current incarnation of tha command-line
front-end, as well as dis playa page.
