.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "S_TIME 1"
.TH S_TIME 1 "2015-01-13" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
s_time \- SSL/TLS performizzle timin program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBopenssl\fR \fBs_time\fR
[\fB\-connect host:port\fR]
[\fB\-www page\fR]
[\fB\-cert filename\fR]
[\fB\-key filename\fR]
[\fB\-CApath directory\fR]
[\fB\-CAfile filename\fR]
[\fB\-trusted_first\fR]
[\fB\-reuse\fR]
[\fB\-new\fR]
[\fB\-verify depth\fR]
[\fB\-nbio\fR]
[\fB\-time seconds\fR]
[\fB\-ssl2\fR]
[\fB\-ssl3\fR]
[\fB\-bugs\fR]
[\fB\-cipher cipherlist\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBs_client\fR command implements a generic \s-1SSL/TLS\s0 client which connects ta a
remote host rockin \s-1SSL/TLS.\s0 It can request a page from tha server n' includes
the time ta transfer tha payload data up in its timin measurements, n' you can put dat on yo' toast. Well shiiiit, it measures
the number of connections within a given timeframe, tha amount of data
transferred (if any), n' calculates tha average time dropped fo' one connection.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-connect host:port\fR" 4
.IX Item "-connect host:port"
This specifies tha host n' optionizzle port ta connect to.
.IP "\fB\-www page\fR" 4
.IX Item "-www page"
This specifies tha page ta \s-1GET\s0 from tha server n' shiznit fo' realz. A value of '/' gets the
index.htm[l] page. If dis parameta aint specified, then \fBs_time\fR will only
perform tha handshake ta establish \s-1SSL\s0 connections but not transfer any
payload data.
.IP "\fB\-cert certname\fR" 4
.IX Item "-cert certname"
Da certificate ta use, if one be axed by tha server n' shit. Da default is
not ta bust a cold-ass lil certificate. Da file is up in \s-1PEM\s0 format.
.IP "\fB\-key keyfile\fR" 4
.IX Item "-key keyfile"
Da private key ta use. If not specified then tha certificate file will
be used. Y'all KNOW dat shit, muthafucka! Da file is up in \s-1PEM\s0 format.
.IP "\fB\-verify depth\fR" 4
.IX Item "-verify depth"
Da verify depth ta use. This specifies tha maximum length of the
server certificate chain n' turns on server certificate verification.
Currently tha verify operation continues afta errors so all tha problems
with a cold-ass lil certificate chain can be seen. I aint talkin' bout chicken n' gravy biatch fo' realz. As a side effect tha connection
will never fail cuz of a server certificate verify failure.
.IP "\fB\-CApath directory\fR" 4
.IX Item "-CApath directory"
Da directory ta use fo' server certificate verification. I aint talkin' bout chicken n' gravy biatch. This directory
must be up in \*(L"hash format\*(R", peep \fBverify\fR fo' mo' shiznit. I aint talkin' bout chicken n' gravy biatch. These are
also used when buildin tha client certificate chain.
.IP "\fB\-CAfile file\fR" 4
.IX Item "-CAfile file"
A file containin trusted certificates ta use durin server authentication
and ta use when attemptin ta build tha client certificate chain.
.IP "\fB\-trusted_first\fR" 4
.IX Item "-trusted_first"
Use certificates up in \s-1CA\s0 file or \s-1CA\s0 directory over tha certificates provided
by tha server when buildin tha trust chain ta verify server certificate.
This is mainly useful up in environments wit Bridge \s-1CA\s0 or Cross-Certified CAs.
.IP "\fB\-new\fR" 4
.IX Item "-new"
performs tha timin test rockin a freshly smoked up session \s-1ID\s0 fo' each connection.
If neither \fB\-new\fR nor \fB\-reuse\fR is specified, they is both on by default
and executed up in sequence.
.IP "\fB\-reuse\fR" 4
.IX Item "-reuse"
performs tha timin test rockin tha same session \s-1ID\s0; dis can be used as a test
that session cachin is working. If neither \fB\-new\fR nor \fB\-reuse\fR are
specified, they is both on by default n' executed up in sequence.
.IP "\fB\-nbio\fR" 4
.IX Item "-nbio"
turns on non-blockin I/O.
.IP "\fB\-ssl2\fR, \fB\-ssl3\fR" 4
.IX Item "-ssl2, -ssl3"
these options disable tha use of certain \s-1SSL\s0 or \s-1TLS\s0 protocols. By default
the initial handshake uses a method which should be compatible wit all
servers n' permit dem ta use \s-1SSL\s0 v3, \s-1SSL\s0 v2 or \s-1TLS\s0 as appropriate.
Da timin program aint as rich up in options ta turn protocols on n' off as
the \fIs_client\fR\|(1) program n' may not connect ta all servers.
.Sp
Unfortunately there be a shitload of ancient n' fucked up servers up in use which
cannot handle dis technique n' will fail ta connect. Right back up in yo muthafuckin ass. Some servers only
work if \s-1TLS\s0 is turned off wit tha \fB\-ssl3\fR option; others
will only support \s-1SSL\s0 v2 n' may need tha \fB\-ssl2\fR option.
.IP "\fB\-bugs\fR" 4
.IX Item "-bugs"
there is nuff muthafuckin known bug up in \s-1SSL\s0 n' \s-1TLS\s0 implementations fo' realz. Addin this
option enablez various workarounds.
.IP "\fB\-cipher cipherlist\fR" 4
.IX Item "-cipher cipherlist"
this allows tha cipher list busted by tha client ta be modified. Y'all KNOW dat shit, muthafucka! Although
the server determines which cipher suite is used it should take tha first
supported cipher up in tha list busted by tha client.
See tha \fIciphers\fR\|(1) command fo' mo' shiznit.
.IP "\fB\-time length\fR" 4
.IX Item "-time length"
specifies how tha fuck long (in seconds) \fBs_time\fR should establish connections and
optionally transfer payload data from a server n' shit. Right back up in yo muthafuckin ass. Server n' client performance
and tha link speed determine how tha fuck nuff connections \fBs_time\fR can establish.
.SH "NOTES"
.IX Header "NOTES"
\&\fBs_client\fR can be used ta measure tha performizzle of a \s-1SSL\s0 connection.
To connect ta a \s-1SSL HTTP\s0 server n' git tha default page tha command
.PP
.Vb 1
\& openssl s_time \-connect servername:443 \-www / \-CApath yourdir \-CAfile yourfile.pem \-cipher commoncipher [\-ssl3]
.Ve
.PP
would typically be used (https uses port 443). 'commoncipher' be a cold-ass lil cipher to
which both client n' server can agree, peep tha \fIciphers\fR\|(1) command
for details.
.PP
If tha handshake fails then there be nuff muthafuckin possible causes, if it is
nothang obvious like no client certificate then tha \fB\-bugs\fR, \fB\-ssl2\fR,
\&\fB\-ssl3\fR options can be tried
in case it aint nuthin but a funky-ass buggy server n' shit. In particular you should fuck wit these
options \fBbefore\fR submittin a funky-ass bug report ta a OpenSSL mailin list.
.PP
A frequent problem when attemptin ta git client certificates working
is dat a wizzy client bitches it has no certificates or gives a empty
list ta chizzle from. This is normally cuz tha server aint sending
the clients certificate authoritizzle up in its \*(L"acceptable \s-1CA\s0 list\*(R" when it
requests a cold-ass lil certificate. By rockin \fIs_client\fR\|(1) tha \s-1CA\s0 list can be
viewed n' checked. Y'all KNOW dat shit, muthafucka! However some servers only request client authentication
afta a specific \s-1URL\s0 is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. To obtain tha list up in dis case it
is necessary ta use tha \fB\-prexit\fR option of \fIs_client\fR\|(1) and
send a \s-1HTTP\s0 request fo' a appropriate page.
.PP
If a cold-ass lil certificate is specified on tha command line rockin tha \fB\-cert\fR
option it aint gonna be used unless tha server specifically requests
a client certificate. Therefor merely includin a cold-ass lil client certificate
on tha command line is no guarantee dat tha certificate works.
.SH "BUGS"
.IX Header "BUGS"
Because dis program aint gots all tha optionz of the
\&\fIs_client\fR\|(1) program ta turn protocols on n' off, you may not be
able ta measure tha performizzle of all protocols wit all servers.
.PP
Da \fB\-verify\fR option should straight-up exit if tha server verification
fails.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIs_client\fR\|(1), \fIs_server\fR\|(1), \fIciphers\fR\|(1)
