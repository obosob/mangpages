'\" t
.\"     Title: git-symbolic-ref
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GIT\-SYMBOLIC\-REF" "1" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-symbolic-ref \- Read, modify n' delete symbolic refs
.SH "SYNOPSIS"
.sp
.nf
\fIgit symbolic\-ref\fR [\-m <reason>] <name> <ref>
\fIgit symbolic\-ref\fR [\-q] [\-\-short] <name>
\fIgit symbolic\-ref\fR \-\-delete [\-q] <name>
.fi
.sp
.SH "DESCRIPTION"
.sp
Given one argument, readz which branch head tha given symbolic ref refers ta n' outputs its path, relatizzle ta tha \&.git/ directory\&. Typically you would give HEAD as tha <name> argument ta peep which branch yo' hustlin tree is on\&.
.sp
Given two arguments, creates or thugged-out shiznit a symbolic ref <name> ta point all up in tha given branch <ref>\&.
.sp
Given \-\-delete n' a additionizzle argument, deletes tha given symbolic ref\&.
.sp
A symbolic ref be a regular file dat stores a strang dat begins wit ref: refs/\&. For example, yo' \&.git/HEAD be a regular file whose contents is ref: refs/heads/master\&.
.SH "OPTIONS"
.PP
\-d, \-\-delete
.RS 4
Delete tha symbolic ref <name>\&.
.RE
.PP
\-q, \-\-quiet
.RS 4
Do not issue a error message if tha <name> aint a symbolic ref but a thugged-out detached HEAD; instead exit wit non\-zero status silently\&.
.RE
.PP
\-\-short
.RS 4
When showin tha value of <name> as a symbolic ref, try ta shorten tha value, e\&.g\&. from
refs/heads/master
to
master\&.
.RE
.PP
\-m
.RS 4
Update tha reflog fo' <name> wit <reason>\&. This is valid only when bustin or uppimpin a symbolic ref\&.
.RE
.SH "NOTES"
.sp
In tha past, \&.git/HEAD was a symbolic link pointin at refs/heads/master\&. When we wanted ta switch ta another branch, our phat asses did ln \-sf refs/heads/newbranch \&.git/HEAD, n' when we wanted ta smoke up which branch we is on, our phat asses did readlink \&.git/HEAD\&. But symbolic links is not entirely portable, so they is now deprecated n' symbolic refs (as busted lyrics bout above) is used by default\&.
.sp
\fIgit symbolic\-ref\fR will exit wit status 0 if tha contentz of tha symbolic ref was printed erectly, wit status 1 if tha axed name aint a symbolic ref, or 128 if another error occurs\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
