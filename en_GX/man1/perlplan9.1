.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLPLAN9 1"
.TH PERLPLAN9 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perlplan9 \- Plan 9\-specific documentation fo' Perl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These is all dem notes describin features peculiar to
Plan 9 Perl fo' realz. As such, it aint intended ta be a replacement
for tha rest of tha Perl 5 documentation (which is both 
copious n' pimpin). If you have any thangs ta 
which you can't find lyrics up in these playa pages, contact 
Luther Huffman at lutherh@stratcom.com n' we'll try ta 
answer em.
.SS "Invokin Perl"
.IX Subsection "Invokin Perl"
Perl is invoked from tha command line as busted lyrics bout up in 
perl. Most perl scripts, however, do gotz a gangbangin' first line 
like fuckin \*(L"#!/usr/local/bin/perl\*(R". This is known as a gangbangin' finger-lickin' dirty-ass shebang 
(shell-bang) statement n'  drops some lyrics ta tha \s-1OS\s0 shell where ta find 
the perl interpreter n' shit. In Plan 9 Perl dis statement should be 
\&\*(L"#!/bin/perl\*(R" if you wish ta be able ta directly invoke tha 
script by its name.
     Alternatively, you may invoke perl wit tha command \*(L"Perl\*(R"
instead of \*(L"perl\*(R". This will produce Acme-friendly error
lyrics of tha form \*(L"filename:18\*(R".
.PP
Some scripts, probably identified wit a *.PL extension, is 
self-configurin n' is able ta erectly create they own 
shebang path from config shiznit located up in Plan 9 
Perl. These you won't need ta be worried about.
.SS "Whatz up in Plan 9 Perl"
.IX Subsection "Whatz up in Plan 9 Perl"
Although Plan 9 Perl currently only  serves up static 
loading, it is built wit a fuckin shitload of useful extensions. 
These include Opcode, FileHandle, Fcntl, n' \s-1POSIX.\s0 Expect 
to peep others (and DynaLoading!) up in tha future.
.SS "Whatz not up in Plan 9 Perl"
.IX Subsection "Whatz not up in Plan 9 Perl"
As mentioned previously, dynamic loadin aint currently 
available nor is MakeMaker n' shit. Both is high-prioritizzle items.
.SS "Perl5 Functions not currently supported up in Plan 9 Perl"
.IX Subsection "Perl5 Functions not currently supported up in Plan 9 Perl"
Some, like fuckin \f(CW\*(C`chown\*(C'\fR n' \f(CW\*(C`umask\*(C'\fR aren't provided 
because tha concept do not exist within Plan 9. Others,
like fuckin a shitload of tha socket-related functions, simply
haven't been freestyled yet. Many up in tha latta category 
may be supported up in tha future.
.PP
Da functions not currently implemented include:
.PP
.Vb 5
\&    chown, chroot, dbmclose, dbmopen, getsockopt, 
\&    setsockopt, recvmsg, sendmsg, getnetbyname, 
\&    getnetbyaddr, getnetent, getprotoent, getservent, 
\&    sethostent, setnetent, setprotoent, setservent, 
\&    endservent, endnetent, endprotoent, umask
.Ve
.PP
There may be nuff muthafuckin other functions dat have undefined 
behavior so dis list shouldn't be considered complete.
.SS "Signals up in Plan 9 Perl"
.IX Subsection "Signals up in Plan 9 Perl"
For compatibilitizzle wit perl scripts freestyled fo' tha Unix 
environment, Plan 9 Perl uses tha \s-1POSIX\s0 signal emulation
provided up in Plan 9z \s-1ANSI POSIX\s0 Environment (\s-1APE\s0). Right back up in yo muthafuckin ass. Signal stacking
aint supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da signals provided are:
.PP
.Vb 4
\&    SIGHUP, SIGINT, SIGQUIT, SIGILL, SIGABRT,
\&    SIGFPE, SIGKILL, SIGSEGV, SIGPIPE, SIGPIPE, SIGALRM, 
\&    SIGTERM, SIGUSR1, SIGUSR2, SIGCHLD, SIGCONT,
\&    SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU
.Ve
.SH "COMPILING AND INSTALLING PERL ON PLAN 9"
.IX Header "COMPILING AND INSTALLING PERL ON PLAN 9"
\&\s-1WELCOME\s0 ta Plan 9 Perl, brave soul!
.PP
.Vb 5
\&   This be a preliminary alpha version of Plan 9 Perl. Right back up in yo muthafuckin ass. Still ta be
\&implemented is MakeMaker n' DynaLoader n' shit. Many perl commandz are
\&missin or currently behave up in a inscrutable manner n' shit. These gaps will,
\&with perseverizzle n' a modicum of luck, be remedied up in tha near
\&future.To install dis software:
.Ve
.PP
1. Right back up in yo muthafuckin ass. Smoke tha source directories n' libraries fo' perl by hustlin the
plan9/setup.rc command (i.e., located up in tha plan9 subdirectory).
Note: tha setup routine assumes dat you aint dearchived these
filez tha fuck into /sys/src/cmd/perl fo' realz. Afta hustlin setup.rc you may delete
the copy of tha source you originally detarred, as source code has now
been installed up in /sys/src/cmd/perl. If you plan on installin perl
binaries fo' all architectures, run \*(L"setup.rc \-a\*(R".
.PP
2 fo' realz. Afta makin shizzle dat you have adequate privileges ta build system
software, from /sys/src/cmd/perl/5.00301 (adjust version
appropriately) run:
.PP
.Vb 1
\&        mk install
.Ve
.PP
If you wish ta install perl versions fo' all architectures (68020,
mips, sparc n' 386) run:
.PP
.Vb 1
\&        mk installall
.Ve
.PP
3. Wait. Da build process will take a *long* time cuz perl
bootstraps itself fo' realz. A 75MHz Pentium, 16MB \s-1RAM\s0 machine takes roughly 30
minutes ta build tha distribution from scratch.
.SS "Installin Perl Documentation on Plan 9"
.IX Subsection "Installin Perl Documentation on Plan 9"
This perl distribution comes wit a tremendous amount of
documentation. I aint talkin' bout chicken n' gravy biatch. To add these ta tha built-in manuals dat come with
Plan 9, from /sys/src/cmd/perl/5.00301 (adjust version appropriately)
run:
.PP
.Vb 1
\&        mk man
.Ve
.PP
To begin yo' reading, start with:
.PP
.Vb 1
\&        playa perl
.Ve
.PP
This be a phat introduction n' will direct you towardz other man
pages dat may interest yo thugged-out ass.
.PP
(Note: \*(L"mk man\*(R" may produce some extraneous noise. Fear not.)
.SH "BUGS"
.IX Header "BUGS"
\&\*(L"As nuff as there be grainz of sand on all tha beachez of tha 
world . . .\*(R" \- Carl Sagan
.SH "Revision date"
.IX Header "Revision date"
This document was revised 09\-October\-1996 fo' Perl 5.003_7.
.SH "AUTHOR"
.IX Header "AUTHOR"
Direct thangs, comments, n' tha unlikely bug report (ahem) direct
comments toward:
.PP
Luther Huffman, lutherh@stratcom.com, 
Strategic Computa Solutions, Inc.
