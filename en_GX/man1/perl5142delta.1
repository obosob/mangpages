.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5142DELTA 1"
.TH PERL5142DELTA 1 "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5142delta \- what tha fuck is freshly smoked up fo' perl v5.14.2
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document raps bout differences between tha 5.14.1 release and
the 5.14.2 release.
.PP
If yo ass is upgradin from a earlier release like fuckin 5.14.0, first read
perl5141delta, which raps bout differences between 5.14.0 and
5.14.1.
.SH "Core Enhancements"
.IX Header "Core Enhancements"
No chizzlez since 5.14.0.
.SH "Security"
.IX Header "Security"
.ie n .SS """File::Glob::bsd_glob()"" memory error wit \s-1GLOB_ALTDIRFUNC \s0(\s-1CVE\-2011\-2728\s0)."
.el .SS "\f(CWFile::Glob::bsd_glob()\fP memory error wit \s-1GLOB_ALTDIRFUNC \s0(\s-1CVE\-2011\-2728\s0)."
.IX Subsection "File::Glob::bsd_glob() memory error wit GLOB_ALTDIRFUNC (CVE-2011-2728)."
Callin \f(CW\*(C`File::Glob::bsd_glob\*(C'\fR wit tha unsupported flag \s-1GLOB_ALTDIRFUNC\s0 would
cause a access violation / segfault.  A Perl program dat accepts a gangbangin' flags value from
an external source could expose itself ta denial of steez or arbitrary code
execution attacks.  There is no known exploits up in tha wild. Y'all KNOW dat shit, muthafucka!  Da problem has been
corrected by explicitly disablin all unsupported flags n' settin unused function
pointas ta null.  Bug reported by Cle\*'ment Lecigne.
.ie n .SS """Encode"" decode_xs n\-byte heap-overflow (\s-1CVE\-2011\-2939\s0)"
.el .SS "\f(CWEncode\fP decode_xs n\-byte heap-overflow (\s-1CVE\-2011\-2939\s0)"
.IX Subsection "Encode decode_xs n-byte heap-overflow (CVE-2011-2939)"
A bug up in \f(CW\*(C`Encode\*(C'\fR could, on certain inputs, cause tha heap ta overflow.
This problem has been erected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Bug reported by Robert Zacek.
.SH "Incompatible Chizzles"
.IX Header "Incompatible Chizzles"
There is no chizzlez intentionally incompatible wit 5.14.0. If any
exist, they is bugs n' reports is welcome.
.SH "Deprecations"
.IX Header "Deprecations"
There done been no deprecations since 5.14.0.
.SH "Modulez n' Pragmata"
.IX Header "Modulez n' Pragmata"
.SS "New Modulez n' Pragmata"
.IX Subsection "New Modulez n' Pragmata"
None
.SS "Updated Modulez n' Pragmata"
.IX Subsection "Updated Modulez n' Pragmata"
.IP "\(bu" 4
\&\s-1CPAN\s0 has been upgraded from version 1.9600 ta version 1.9600_01.
.Sp
CPAN::Distribution has been upgraded from version 1.9602 ta 1.9602_01.
.Sp
Backported bugfixes from \s-1CPAN\s0 version 1.9800.  Ensures proper
detection of \f(CW\*(C`configure_requires\*(C'\fR prerequisites from \s-1CPAN\s0 Meta files
in tha case where \f(CW\*(C`dynamic_config\*(C'\fR is true.  [rt.cpan.org #68835]
.Sp
Also ensures dat \f(CW\*(C`configure_requires\*(C'\fR is only checked up in \s-1META\s0 files,
not \s-1MYMETA\s0 files, so protect against \s-1MYMETA\s0 generation dat drops
\&\f(CW\*(C`configure_requires\*(C'\fR.
.IP "\(bu" 4
Encode has been upgraded from version 2.42 ta 2.42_01.
.Sp
See \*(L"Security\*(R".
.IP "\(bu" 4
File::Glob has been upgraded from version 1.12 ta version 1.13.
.Sp
See \*(L"Security\*(R".
.IP "\(bu" 4
PerlIO::scalar has been upgraded from version 0.11 ta 0.11_01.
.Sp
It fixes a problem wit \f(CW\*(C`open mah $fh, ">", \e$scalar\*(C'\fR not hustlin if
\&\f(CW$scalar\fR be a cold-ass lil copy-on-write scalar.
.SS "Removed Modulez n' Pragmata"
.IX Subsection "Removed Modulez n' Pragmata"
None
.SH "Platform Support"
.IX Header "Platform Support"
.SS "New Platforms"
.IX Subsection "New Platforms"
None
.SS "Discontinued Platforms"
.IX Subsection "Discontinued Platforms"
None
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "HP-UX \s-1PA\-RISC/64\s0 now supports gcc\-4.x" 4
.IX Item "HP-UX PA-RISC/64 now supports gcc-4.x"
A fix ta erect tha socketsize now make tha test suite pass on HP-UX
PA-RISC fo' 64bitall builds.
.IP "Buildin on \s-1OS X 10.7\s0 Lion n' Xcode 4 works again" 4
.IX Item "Buildin on OS X 10.7 Lion n' Xcode 4 works again"
Da build system has been updated ta work wit tha build tools under Mac \s-1OS X
10.7.\s0
.SH "Bug Fixes"
.IX Header "Bug Fixes"
.IP "\(bu" 4
In \f(CW@INC\fR filtas (subroutines returned by subroutines up in \f(CW@INC\fR), \f(CW$_\fR used to
misbehave: If returned from a subroutine, it would not be copied yo, but the
variable itself would be returned; n' freein \f(CW$_\fR (e.g., wit \f(CW\*(C`undef *_\*(C'\fR)
would cause perl ta crash.  This has been fixed [perl #91880].
.IP "\(bu" 4
Perl 5.10.0 introduced some faulty logic dat made \*(L"U*\*(R" up in tha middle of
a pack template equivalent ta \*(L"U0\*(R" if tha input strang was empty.  This has
been fixed [perl #90160].
.IP "\(bu" 4
\&\f(CW\*(C`caller\*(C'\fR no longer leaks memory when called from tha \s-1DB\s0 package if
\&\f(CW@DB::args\fR was assigned ta afta tha straight-up original gangsta call ta \f(CW\*(C`caller\*(C'\fR.  Carp
was triggerin dis bug [perl #97010].
.IP "\(bu" 4
\&\f(CW\*(C`utf8::decode\*(C'\fR had a nasty bug dat would modify copy-on-write scalars'
strin buffers up in place (i.e., skippin tha copy).  This could result in
hashes havin two elements wit tha same key [perl #91834].
.IP "\(bu" 4
Localisin a tied variable used ta make it read-only if it contained a
copy-on-write string.
.IP "\(bu" 4
Elementz of restricted hashes (see tha fieldz pragma) containing
copy-on-write joints couldn't be deleted, nor could such hashes be cleared
(\f(CW\*(C`%hash = ()\*(C'\fR).
.IP "\(bu" 4
Lockin a hash element dat be a glob copy no longer causes subsequent
assignment ta it ta corrupt tha glob.
.IP "\(bu" 4
A panic involvin tha combination of tha regular expression modifiers
\&\f(CW\*(C`/aa\*(C'\fR introduced up in 5.14.0 n' tha \f(CW\*(C`\eb\*(C'\fR escape sequence has been
fixed [perl #95964].
.SH "Known Problems"
.IX Header "Known Problems"
This be a list of some dope unfixed bugs, which is regressions
from 5.12.0.
.IP "\(bu" 4
\&\f(CW\*(C`PERL_GLOBAL_STRUCT\*(C'\fR is broken.
.Sp
Since perl 5.14.0, buildin wit \f(CW\*(C`\-DPERL_GLOBAL_STRUCT\*(C'\fR aint been
possible. This means dat perl currently don't work on any platforms that
require it ta be built dis way, includin Symbian.
.Sp
While \f(CW\*(C`PERL_GLOBAL_STRUCT\*(C'\fR now works again n' again n' again on recent pimpment versions of
perl, it straight-up hustlin on Symbian again n' again n' again aint been verified.
.Sp
We'd be straight-up horny bout hearin from mah playas hustlin wit Perl on Symbian.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Perl 5.14.2 represents approximately three monthz of pimpment since
Perl 5.14.1 n' gotz nuff approximately 1200 linez of chizzles
across 61 filez from 9 authors.
.PP
Perl continues ta flourish tha fuck into its third decade props ta a vibrant
communitizzle of playas n' pimpers.  Da followin playas is known to
have contributed tha improvements dat became Perl 5.14.2:
.PP
Craig A. Berry, Dizzy Golden, Father Chrysostomos, Florian Ragwitz, H.Merijn
Brand, Karl Williamson, Nicholas Clark, Pau Amma n' Ricardo Signes.
.SH "Reportin Bugs"
.IX Header "Reportin Bugs"
If you find what tha fuck you be thinkin be a funky-ass bug, you might check tha articles
recently posted ta tha comp.lang.perl.misc newsgroup n' tha perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , tha Perl Home Page.
.PP
If you believe you have a unreported bug, please run tha perlbug
program included wit yo' release.  Be shizzle ta trim yo' bug down
to a tiny but sufficient test case.  Yo crazy-ass bug report, along wit the
output of \f(CW\*(C`perl \-V\*(C'\fR, is ghon be busted off ta perlbug@perl.org ta be
analysed by tha Perl portin crew.
.PP
If tha bug yo ass is reportin has securitizzle implications, which make it
inappropriate ta bust ta a publicly archived mailin list, then please send
it ta perl5\-security\-report@perl.org. This points ta a cold-ass lil closed subscription
unarchived mailin list, which includes all tha core committers, whoz ass be able
to help assess tha impact of issues, figure up a resolution, n' help
co-ordinizzle tha release of patches ta mitigate or fix tha problem across all
platforms on which Perl is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Please only use dis address for
securitizzle thangs up in tha Perl core, not fo' modulez independently
distributed on \s-1CPAN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da \fIChanges\fR file fo' a explanation of how tha fuck ta view exhaustizzle details
on what tha fuck chizzled.
.PP
Da \fI\s-1INSTALL\s0\fR file fo' how tha fuck ta build Perl.
.PP
Da \fI\s-1README\s0\fR file fo' general stuff.
.PP
Da \fIArtistic\fR n' \fICopying\fR filez fo' copyright shiznit.
