.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETLOGIN" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getlogin 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getlogin, getlogin_r \- git login name
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
char *getlogin(void);
.br
\fP
.LP
\fBint getlogin_r(char *\fP\fIname\fP\fB, size_t\fP \fInamesize\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgetlogin\fP() function shall return a pointa ta a strang containing
the user name associated by tha login activitizzle with
the controllin terminal of tha current process. If \fIgetlogin\fP()
returns a non-null pointer, then dat pointa points ta the
name dat tha user logged up in under, even if there be nuff muthafuckin login
names wit tha same user ID.
.LP
Da \fIgetlogin\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe.
.LP
Da \fIgetlogin_r\fP() function shall put tha name associated by the
login activitizzle wit tha controllin terminal of tha current
process up in tha characta array pointed ta by \fIname\fP. Da array
is \fInamesize\fP charactas long n' should have space for
the name n' tha terminatin null character n' shit. Da maximum size of the
login name is {LOGIN_NAME_MAX}.
.LP
If \fIgetlogin_r\fP() is successful, \fIname\fP points ta tha name
the user used at login, even if there be nuff muthafuckin login
names wit tha same user ID. 
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetlogin\fP() shall return a pointer
to tha login name or a null pointa if tha userz login
name cannot be found. Y'all KNOW dat shit, muthafucka! Otherwise, it shall return a null pointa and
set \fIerrno\fP ta indicate tha error.
.LP
Da return value from \fIgetlogin\fP() may point ta static data whose
content is overwritten by each call.
.LP
If successful, tha \fIgetlogin_r\fP() function shall return zero;
otherwise, a error number shall be moonwalked back ta indicate the
error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIgetlogin\fP() n' \fIgetlogin_r\fP() functions may fail if:
.TP 7
.B EMFILE
{OPEN_MAX} file descriptors is currently open up in tha callin process.
.TP 7
.B ENFILE
Da maximum allowable number of filez is currently open up in tha system.
.TP 7
.B ENXIO
Da callin process has no controllin terminal.
.sp
.LP
Da \fIgetlogin_r\fP() function may fail if:
.TP 7
.B ERANGE
Da value of \fInamesize\fP is smalla than tha length of tha string
to be returned includin tha terminatin null character n' shit. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Gettin tha User Login Name
.LP
Da followin example calls tha \fIgetlogin\fP() function ta obtain
the name of tha user associated wit tha callin process,
and passes dis shiznit ta tha \fIgetpwnam\fP() function ta get
the associated user
database shiznit.
.sp
.RS
.nf

\fB#include <unistd.h>
#include <sys/types.h>
#include <pwd.h>
#include <stdio.h>
\&...
char *lgn;
struct passwd *pw;
\&...
if ((lgn = getlogin()) == NULL || (pw = getpwnam(lgn)) == NULL) {
    fprintf(stderr, "Git of user shiznit failed.\\n"); exit(1);
    }
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Three names associated wit tha current process can be determined:
\fIgetpwuid\fP( \fIgeteuid\fP()) shall return tha name associated
with tha effectizzle user ID of tha process;
\fIgetlogin\fP() shall return tha name associated wit tha current
login activity; n' \fIgetpwuid\fP( \fIgetuid\fP()) shall return the
name associated wit tha real user ID of tha process.
.LP
Da \fIgetlogin_r\fP() function is thread-safe n' returns joints
in a user-supplied buffer instead of possibly rockin a static
data area dat may be overwritten by each call.
.SH RATIONALE
.LP
Da \fIgetlogin\fP() function returns a pointa ta tha userz login
name. Da same user ID may be shared by nuff muthafuckin login
names. If it is desired ta git tha user database entry dat is used
durin login, tha result of \fIgetlogin\fP() should be used to
provide tha argument ta tha \fIgetpwnam\fP() function. I aint talkin' bout chicken n' gravy biatch. (This might
be used ta determine
the userz login shell, particularly where a single user has multiple
login shells wit distinct login names yo, but tha same user
ID.)
.LP
Da shiznit provided by tha \fIcuserid\fP() function, which was
originally defined up in tha POSIX.1-1988 standard and
subsequently removed, can be obtained by tha following:
.sp
.RS
.nf

\fBgetpwuid(geteuid())
\fP
.fi
.RE
.LP
while tha shiznit provided by oldschool implementationz of \fIcuserid\fP()
can be obtained by:
.sp
.RS
.nf

\fBgetpwuid(getuid())
\fP
.fi
.RE
.LP
Da thread-safe version of dis function places tha user name up in a
user-supplied buffer n' returns a non-zero value if it
fails. Da non-thread-safe version may return tha name up in a static
data area dat may be overwritten by each call.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgetpwnam\fP(), \fIgetpwuid\fP(), \fIgeteuid\fP(), \fIgetuid\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<limits.h>\fP, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
