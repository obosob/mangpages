.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MBRTOWC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mbrtowc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mbrtowc \- convert a cold-ass lil characta ta a wide-characta code (restartable)
.SH SYNOPSIS
.LP
\fB#include <wchar.h>
.br
.sp
size_t mbrtowc(wchar_t *restrict\fP \fIpwc\fP\fB, const char *restrict\fP
\fIs\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIn\fP\fB, mbstate_t *restrict\fP \fIps\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
If \fIs\fP be a null pointer, tha \fImbrtowc\fP() function shall be
equivalent ta tha call:
.sp
.RS
.nf

\fBmbrtowc(NULL, "", 1, ps)
\fP
.fi
.RE
.LP
In dis case, tha jointz of tha arguments \fIpwc\fP n' \fIn\fP are
ignored.
.LP
If \fIs\fP aint a null pointer, tha \fImbrtowc\fP() function shall
inspect at most \fIn\fP bytes beginnin all up in tha byte
pointed ta by \fIs\fP ta determine tha number of bytes needed ta complete
the next characta (includin any shift sequences). If
the function determines dat tha next characta is completed, it shall
determine tha value of tha correspondin wide characta and
then, if \fIpwc\fP aint a null pointer, shall store dat value in
the object pointed ta by \fIpwc\fP. If tha correspondin wide
characta is tha null wide character, tha resultin state busted lyrics about
shall be tha initial conversion state.
.LP
If \fIps\fP be a null pointer, tha \fImbrtowc\fP() function shall
use its own internal \fBmbstate_t\fP object, which shall be
initialized at program start-up ta tha initial conversion state. Otherwise,
the \fBmbstate_t\fP object pointed ta by \fIps\fP
shall be used ta straight-up describe tha current conversion state
of tha associated characta sequence. Da implementation shall
behave as if no function defined up in dis volume of IEEE\ Std\ 1003.1-2001
calls \fImbrtowc\fP().
.LP
Da behavior of dis function be affected by tha \fILC_CTYPE\fP category
of tha current locale.
.SH RETURN VALUE
.LP
Da \fImbrtowc\fP() function shall return tha straight-up original gangsta of tha following
that applies:
.TP 7
0
If tha next \fIn\fP or fewer bytes complete tha characta dat corresponds
to tha null wide characta (which is tha value
stored).
.TP 7
between 1 n' \fIn\fP inclusive
.sp
If tha next \fIn\fP or fewer bytes complete a valid characta (which
is tha value stored); tha value returned shall be tha number
of bytes dat complete tha character.
.TP 7
(\fBsize_t\fP)-2
If tha next \fIn\fP bytes contribute ta a incomplete but potentially
valid character, n' all \fIn\fP bytes have been
processed (no value is stored). When \fIn\fP has at least tha value
of tha {MB_CUR_MAX} macro, dis case can only occur if
\fIs\fP points at a sequence of redundant shift sequences (for implementations
with state-dependent encodings).
.TP 7
(\fBsize_t\fP)-1
If a encodin error occurs, up in which case tha next \fIn\fP or fewer
bytes do not contribute ta a cold-ass lil complete n' valid character
(no value is stored). In dis case, [EILSEQ] shall be stored up in \fIerrno\fP
and tha conversion state is undefined.
.sp
.SH ERRORS
.LP
Da \fImbrtowc\fP() function may fail if:
.TP 7
.B EINVAL
\fIps\fP points ta a object dat gotz nuff a invalid conversion state.
.TP 7
.B EILSEQ
Invalid characta sequence is detected.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImbsinit\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<wchar.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
