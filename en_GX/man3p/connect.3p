.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CONNECT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" connect 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
connect \- connect a socket
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
int connect(int\fP \fIsocket\fP\fB, const struct sockaddr *\fP\fIaddress\fP\fB,
.br
\ \ \ \ \ \  socklen_t\fP \fIaddress_len\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIconnect\fP() function shall attempt ta cook up a cold-ass lil connection on
a socket. Da function takes tha followin arguments:
.TP 7
\fIsocket\fP
Specifies tha file descriptor associated wit tha socket.
.TP 7
\fIaddress\fP
Points ta a \fBsockaddr\fP structure containin tha peer address.
Da length n' format of tha address depend on tha address
family of tha socket.
.TP 7
\fIaddress_len\fP
Specifies tha length of tha \fBsockaddr\fP structure pointed ta by
the \fIaddress\fP argument.
.sp
.LP
If tha socket has not already been bound ta a local address, \fIconnect\fP()
shall bind it ta a address which, unless the
socketz address crew is AF_UNIX, be a unused local address.
.LP
If tha initiatin socket aint connection-mode, then \fIconnect\fP()
shall set tha socketz peer address, n' no connection is
made. For SOCK_DGRAM sockets, tha peer address identifies where all
datagrams is busted on subsequent \fIsend\fP() functions, n' limits
the remote sender fo' subsequent \fIrecv\fP() functions. If \fIaddress\fP
is a null address fo' tha protocol, tha socketz peer
address shall be reset.
.LP
If tha initiatin socket is connection-mode, then \fIconnect\fP()
shall attempt ta establish a cold-ass lil connection ta tha address
specified by tha \fIaddress\fP argument. If tha connection cannot
be established immediately n' O_NONBLOCK aint set fo' the
file descriptor fo' tha socket, \fIconnect\fP() shall block fo' up
to a unspecified timeout interval until tha connection is
established. Y'all KNOW dat shit, muthafucka! If tha timeout interval expires before tha connection
is established, \fIconnect\fP() shall fail n' tha connection
attempt shall be aborted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If \fIconnect\fP() is interrupted by a signal
that is caught while blocked waitin ta establish a
connection, \fIconnect\fP() shall fail n' set \fIerrno\fP ta [EINTR],
but tha connection request shall not be aborted, n' the
connection shall be established asynchronously.
.LP
If tha connection cannot be established immediately n' O_NONBLOCK
is set fo' tha file descriptor fo' tha socket,
\fIconnect\fP() shall fail n' set \fIerrno\fP ta [EINPROGRESS] yo, but
the connection request shall not be aborted, n' the
connection shall be established asynchronously. Right back up in yo muthafuckin ass. Subsequent calls to
\fIconnect\fP() fo' tha same socket, before tha connection is
established, shall fail n' set \fIerrno\fP ta [EALREADY].
.LP
When tha connection has been established asynchronously, \fIselect\fP()
and \fIpoll\fP() shall indicate dat tha file descriptor fo' tha socket
is locked n loaded fo' writing.
.LP
Da socket up in use may require tha process ta have appropriate privileges
to use tha \fIconnect\fP() function.
.SH RETURN VALUE
.LP
Upon successful completion, \fIconnect\fP() shall return 0; otherwise,
-1 shall be returned n' \fIerrno\fP set ta indicate
the error.
.SH ERRORS
.LP
Da \fIconnect\fP() function shall fail if:
.TP 7
.B EADDRNOTAVAIL
Da specified address aint available from tha local machine.
.TP 7
.B EAFNOSUPPORT
Da specified address aint a valid address fo' tha address crew
of tha specified socket.
.TP 7
.B EALREADY
A connection request be already up in progress fo' tha specified socket.
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid file descriptor.
.TP 7
.B ECONNREFUSED
Da target address was not listenin fo' connections or refused the
connection request.
.TP 7
.B EINPROGRESS
O_NONBLOCK is set fo' tha file descriptor fo' tha socket n' tha connection
cannot be immediately established; tha connection
shall be established asynchronously.
.TP 7
.B EINTR
Da attempt ta establish a cold-ass lil connection was interrupted by delivery
of a signal dat was caught; tha connection shall be
established asynchronously.
.TP 7
.B EISCONN
Da specified socket is connection-mode n' be already connected.
.TP 7
.B ENETUNREACH
No route ta tha network is present.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.TP 7
.B EPROTOTYPE
Da specified address has a gangbangin' finger-lickin' different type than tha socket bound to
the specified peer address.
.TP 7
.B ETIMEDOUT
Da attempt ta connect timed up before a cold-ass lil connection was made.
.sp
.LP
If tha address crew of tha socket is AF_UNIX, then \fIconnect\fP()
shall fail if:
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
pathname up in \fIaddress\fP.
.TP 7
.B ENAMETOOLONG
A component of a pathname exceeded {NAME_MAX} characters, or a entire
pathname exceeded {PATH_MAX} characters.
.TP 7
.B ENOENT
A component of tha pathname do not name a existin file or the
pathname be a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix of tha pathname up in \fIaddress\fP is
not a gangbangin' finger-lickin' directory.
.sp
.LP
Da \fIconnect\fP() function may fail if:
.TP 7
.B EACCES
Search permission is denied fo' a cold-ass lil component of tha path prefix; or
write access ta tha named socket is denied.
.TP 7
.B EADDRINUSE
Attempt ta establish a cold-ass lil connection dat uses addresses dat is already
in use.
.TP 7
.B ECONNRESET
Remote host reset tha connection request.
.TP 7
.B EHOSTUNREACH
Da destination host cannot be reached (probably cuz tha host
is down or a remote routa cannot reach it).
.TP 7
.B EINVAL
Da \fIaddress_len\fP argument aint a valid length fo' tha address
family; or invalid address crew up in tha \fBsockaddr\fP
structure.
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha pathname up in \fIaddress\fP.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.TP 7
.B ENETDOWN
Da local network intercourse used ta reach tha destination is down.
.TP 7
.B ENOBUFS
No buffer space be available.
.TP 7
.B EOPNOTSUPP
Da socket is listenin n' cannot be connected.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
If \fIconnect\fP() fails, tha state of tha socket is unspecified.
Conformin applications should close tha file descriptor and
create a freshly smoked up socket before attemptin ta reconnect.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIaccept\fP(), \fIbind\fP(), \fIclose\fP(), \fIgetsockname\fP(),
\fIpoll\fP(), \fIselect\fP(), \fIsend\fP(), \fIshutdown\fP(),
\fIsocket\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
