.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FTW" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ftw 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ftw \- traverse (walk) a gangbangin' file tree
.SH SYNOPSIS
.LP
\fB#include <ftw.h>
.br
.sp
int ftw(const char *\fP\fIpath\fP\fB, int (*\fP\fIfn\fP\fB)(const
char *,
.br
\ \ \ \ \ \  const struct stat *\fP\fIptr\fP\fB, int\fP \fIflag\fP\fB),
int\fP
\fIndirs\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIftw\fP() function shall recursively descend tha directory hierarchy
rooted up in \fIpath\fP. For each object up in the
hierarchy, \fIftw\fP() shall call tha function pointed ta by \fIfn\fP,
passin it a pointa ta a null-terminated characta string
containin tha name of tha object, a pointa ta a \fBstat\fP structure
containin shiznit bout tha object, n' a integer.
Possible jointz of tha integer, defined up in tha \fI<ftw.h>\fP header,
are:
.TP 7
FTW_D
For a gangbangin' finger-lickin' directory.
.TP 7
FTW_DNR
For a gangbangin' finger-lickin' directory dat cannot be read.
.TP 7
FTW_F
For a gangbangin' file.
.TP 7
FTW_SL
For a symbolic link (but peep also FTW_NS below).
.TP 7
FTW_NS
For a object other than a symbolic link on which \fIstat\fP() could
not successfully be
executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha object be a symbolic link n' \fIstat\fP() failed,
it is unspecified whether
\fIftw\fP() passes FTW_SL or FTW_NS ta tha user-supplied function.
.sp
.LP
If tha integer is FTW_DNR, descendantz of dat directory shall not
be processed. Y'all KNOW dat shit, muthafucka! If tha integer is FTW_NS, tha \fBstat\fP
structure gotz nuff undefined joints fo' realz. An example of a object that
would cause FTW_NS ta be passed ta tha function pointed ta by
\fIfn\fP would be a gangbangin' file up in a gangbangin' finger-lickin' directory wit read but without execute
(search) permission.
.LP
Da \fIftw\fP() function shall visit a gangbangin' finger-lickin' directory before visitin any
of its descendants.
.LP
Da \fIftw\fP() function shall use at most one file descriptor for
each level up in tha tree.
.LP
Da argument \fIndirs\fP should be up in tha range [1, {OPEN_MAX}].
.LP
Da tree traversal shall continue until either tha tree is exhausted,
an invocation of \fIfn\fP returns a non-zero value, or
some error, other than [EACCES], is detected within \fIftw\fP().
.LP
Da \fIndirs\fP argument shall specify tha maximum number of directory
streams or file descriptors or both available fo' use by
\fIftw\fP() while traversin tha tree. When \fIftw\fP() returns it
shall close any directory streams n' file descriptors it uses
not countin any opened by tha application-supplied \fIfn\fP function.
.LP
Da thangs up in dis biatch is unspecified if tha application-supplied \fIfn\fP function
does not preserve tha current hustlin directory.
.LP
Da \fIftw\fP() function need not be reentrant fo' realz. A function dat is
not required ta be reentrant aint required ta be
thread-safe.
.SH RETURN VALUE
.LP
If tha tree is exhausted, \fIftw\fP() shall return 0. If tha function
pointed ta by \fIfn\fP returns a non-zero value,
\fIftw\fP() shall stop its tree traversal n' return whatever value
was returned by tha function pointed ta by \fIfn\fP. If
\fIftw\fP() detects a error, it shall return -1 n' set \fIerrno\fP
to indicate tha error.
.LP
If \fIftw\fP() encountas a error other than [EACCES] (see FTW_DNR
and FTW_NS above), it shall return -1 n' set \fIerrno\fP
to indicate tha error. Shiiit, dis aint no joke. Da external variable \fIerrno\fP may contain
any error value dat is possible when a gangbangin' finger-lickin' directory is opened
or when one of tha \fIstat\fP functions is executed on a gangbangin' finger-lickin' directory
or file.
.SH ERRORS
.LP
Da \fIftw\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied fo' any component of \fIpath\fP or read
permission is denied fo' \fIpath\fP.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B ENOTDIR
A component of \fIpath\fP aint a gangbangin' finger-lickin' directory.
.TP 7
.B EOVERFLOW
A field up in tha \fBstat\fP structure cannot be represented erectly
in tha current programmin environment fo' one or more
filez found up in tha file hierarchy.
.sp
.LP
Da \fIftw\fP() function may fail if:
.TP 7
.B EINVAL
Da value of tha \fIndirs\fP argument is invalid.
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.sp
.LP
In addition, if tha function pointed ta by \fIfn\fP encountas system
errors, \fIerrno\fP may be set accordingly.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Walkin a Directory Structure
.LP
Da followin example strutts tha current directory structure, calling
the \fIfn\fP function fo' every last muthafuckin directory entry, rockin at
most 10 file descriptors:
.sp
.RS
.nf

\fB#include <ftw.h>
\&...
if (ftw(".", fn, 10) != 0) {
    perror("ftw"); exit(2);
}
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da \fIftw\fP() function may allocate dynamic storage durin its operation.
If \fIftw\fP() is forcibly terminated, like fuckin by
\fIlongjmp\fP() or \fIsiglongjmp\fP() being
executed by tha function pointed ta by \fIfn\fP or a interrupt routine,
\fIftw\fP() aint gots a cold-ass lil chizzle ta free dat storage,
so it remains permanently allocated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A safe way ta handle interrupts
is ta store tha fact dat a interrupt has occurred, and
arrange ta have tha function pointed ta by \fIfn\fP return a non-zero
value at its next invocation.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIlongjmp\fP(), \fIlstat\fP(), \fImalloc\fP(), \fInftw\fP(),
\fIopendir\fP(), \fIsiglongjmp\fP(), \fIstat\fP(), tha Base Definitions
volume of
IEEE\ Std\ 1003.1-2001, \fI<ftw.h>\fP, \fI<sys/stat.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
