.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETGROUPS" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getgroups 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getgroups \- git supplementary crew IDs
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int getgroups(int\fP \fIgidsetsize\fP\fB, gid_t\fP \fIgrouplist\fP\fB[]);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgetgroups\fP() function shall fill up in tha array \fIgrouplist\fP
with tha current supplementary crew IDz of tha calling
process. Well shiiiit, it is implementation-defined whether \fIgetgroups\fP() also
returns tha effectizzle crew ID up in tha \fIgrouplist\fP
array.
.LP
Da \fIgidsetsize\fP argument specifies tha number of elements in
the array \fIgrouplist\fP. Da actual number of crew IDs
stored up in tha array shall be returned. Y'all KNOW dat shit, muthafucka! Da jointz of array entries
with indices pimped outa than or equal ta tha value returned are
undefined.
.LP
If \fIgidsetsize\fP is 0, \fIgetgroups\fP() shall return tha number
of crew IDs dat it would otherwise return without
modifyin tha array pointed ta by \fIgrouplist\fP.
.LP
If tha effectizzle crew ID of tha process is returned wit tha supplementary
group IDs, tha value returned shall always be
greata than or equal ta one n' less than or equal ta tha value of
{NGROUPS_MAX}+1.
.SH RETURN VALUE
.LP
Upon successful completion, tha number of supplementary crew IDs
shall be returned. Y'all KNOW dat shit, muthafucka! A return value of -1 indicates failure and
\fIerrno\fP shall be set ta indicate tha error.
.SH ERRORS
.LP
Da \fIgetgroups\fP() function shall fail if:
.TP 7
.B EINVAL
Da \fIgidsetsize\fP argument is non-zero n' less than tha number
of crew IDs dat would done been returned.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Gettin tha Supplementary Group IDz of tha Callin Process
.LP
Da followin example places tha current supplementary crew IDs of
the callin process tha fuck into tha \fIgroup\fP array.
.sp
.RS
.nf

\fB#include <sys/types.h>
#include <unistd.h>
\&...
gid_t *group;
int nogroups;
long ngroups_max;
.sp

ngroups_max = sysconf(_SC_NGROUPS_MAX) + 1;
group = (gid_t *)malloc(ngroups_max *sizeof(gid_t));
.sp

ngroups = getgroups(ngroups_max, group);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da related function \fIsetgroups\fP() be a privileged operation and
therefore aint covered by dis volume of
IEEE\ Std\ 1003.1-2001.
.LP
As implied by tha definizzle of supplementary groups, tha effective
group ID may step tha fuck up in tha array returned by
\fIgetgroups\fP() or it may be returned only by \fIgetegid\fP(). Duplication
may exist,
but tha application need ta call \fIgetegid\fP() ta be shizzle of getting
all of the
information. I aint talkin' bout chicken n' gravy biatch. Various implementation variations n' administrative
sequences cause tha set of crews appearin up in tha result of
\fIgetgroups\fP() ta vary up in order n' as ta whether tha effective
group ID is included, even when tha set of crews is tha same
(in tha mathematical sense of "set"). (Da history of a process and
its muthafathas could affect tha detailz of tha result.)
.LP
Application writas should note dat {NGROUPS_MAX} aint necessarily
a constant on all implementations.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgetegid\fP(), \fIsetgid\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/types.h>\fP, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
