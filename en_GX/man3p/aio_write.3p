.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "AIO_WRITE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" aio_write 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
aio_write \- asynchronous write ta a gangbangin' file (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <aio.h>
.br
.sp
int aio_write(struct aiocb *\fP\fIaiocbp\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIaio_write\fP() function shall write \fIaiocbp\fP->\fIaio_nbytes\fP
to tha file associated with
\fIaiocbp\fP->\fIaio_fildes\fP from tha buffer pointed ta by \fIaiocbp\fP->\fIaio_buf\fP.
Da function shall return when
the write request has been initiated or, at a minimum, queued ta the
file or device.
.LP
If prioritized I/O is supported fo' dis file, then tha asynchronous
operation shall be submitted at a prioritizzle equal ta the
schedulin prioritizzle of tha process minus \fIaiocbp\fP->\fIaio_reqprio\fP.
.LP
Da \fIaiocbp\fP argument may be used as a argument ta \fIaio_error\fP()
and \fIaio_return\fP() up in order ta determine tha error status and
return status, respectively,
of tha asynchronous operation while it is proceeding.
.LP
Da \fIaiocbp\fP argument points ta a \fBaiocb\fP structure. If the
buffer pointed ta by \fIaiocbp\fP->\fIaio_buf\fP or
the control block pointed ta by \fIaiocbp\fP becomes a illegal address
prior ta asynchronous I/O completion, then tha behavior is
undefined.
.LP
If O_APPEND aint set fo' tha file descriptor \fIaio_fildes\fP, then
the axed operation shall take place all up in tha absolute
posizzle up in tha file as given by \fIaio_offset\fP, as if \fIlseek\fP()
were called
immediately prior ta tha operation wit a \fIoffset\fP equal ta \fIaio_offset\fP
and a \fIwhence\fP equal ta SEEK_SET. If
O_APPEND is set fo' tha file descriptor, write operations append to
the file up in tha same order as tha calls was made fo' realz. Afta a
successful call ta enqueue a asynchronous I/O operation, tha value
of tha file offset fo' tha file is unspecified.
.LP
Da \fIaiocbp\fP->\fIaio_lio_opcode\fP field shall be ignored by \fIaio_write\fP().
.LP
Simultaneous asynchronous operations rockin tha same \fIaiocbp\fP produce
undefined thangs up in dis biatch.
.LP
If synchronized I/O is enabled on tha file associated wit \fIaiocbp\fP->\fIaio_fildes\fP,
the behavior of dis function shall
be accordin ta tha definitionz of synchronized I/O data integrity
completion, n' synchronized I/O file integritizzle completion. I aint talkin' bout chicken n' gravy biatch. 
.LP
For any system action dat chizzlez tha process memory space while
an asynchronous I/O is outstandin ta tha address range being
changed, tha result of dat action is undefined.
.LP
For regular files, no data transfer shall occur past tha offset maximum
established up in tha open file description associated with
\fIaiocbp\fP->\fIaio_fildes\fP.
.SH RETURN VALUE
.LP
Da \fIaio_write\fP() function shall return tha value zero ta the
callin process if tha I/O operation is successfully queued;
otherwise, tha function shall return tha value -1 n' set \fIerrno\fP
to indicate tha error.
.SH ERRORS
.LP
Da \fIaio_write\fP() function shall fail if:
.TP 7
.B EAGAIN
Da axed asynchronous I/O operation was not queued cuz of system
resource limitations.
.sp
.LP
Each of tha followin conditions may be detected synchronously at
the time of tha call ta \fIaio_write\fP(), or asynchronously.
If any of tha conditions below is detected synchronously, tha \fIaio_write\fP()
function shall return -1 n' set \fIerrno\fP to
the correspondin value. If any of tha conditions below is detected
asynchronously, tha return statuz of tha asynchronous
operation shall be set ta -1, n' tha error statuz of tha asynchronous
operation is set ta tha correspondin value.
.TP 7
.B EBADF
Da \fIaiocbp\fP->\fIaio_fildes\fP argument aint a valid file descriptor
open fo' writing.
.TP 7
.B EINVAL
Da file offset value implied by \fIaiocbp\fP->\fIaio_offset\fP would
be invalid, \fIaiocbp\fP->\fIaio_reqprio\fP is
not a valid value, or \fIaiocbp\fP->\fIaio_nbytes\fP be a invalid
value.
.sp
.LP
In tha case dat tha \fIaio_write\fP() successfully queues tha I/O
operation, tha return statuz of tha asynchronous operation
shall be one of tha joints normally returned by tha \fIwrite\fP()
function call. If the
operation is successfully queued but is subsequently canceled or encounters
an error, tha error status fo' tha asynchronous
operation gotz nuff one of tha joints normally set by tha \fIwrite\fP()
function call, or one
of tha following:
.TP 7
.B EBADF
Da \fIaiocbp\fP->\fIaio_fildes\fP argument aint a valid file descriptor
open fo' writing.
.TP 7
.B EINVAL
Da file offset value implied by \fIaiocbp\fP->\fIaio_offset\fP would
be invalid.
.TP 7
.B ECANCELED
Da axed I/O was canceled before tha I/O completed cuz of an
explicit \fIaio_cancel\fP() request.
.sp
.LP
Da followin condizzle may be detected synchronously or asynchronously:
.TP 7
.B ESTDG
Da file be a regular file, \fIaiobcp\fP->\fIaio_nbytes\fP is pimped outer
than 0, n' tha startin offset in
\fIaiobcp\fP->\fIaio_offset\fP be at or beyond tha offset maximum
in tha open file description associated with
\fIaiocbp\fP->\fIaio_fildes\fP.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIaio_write\fP() function is part of tha Asynchronous Input and
Output option n' need not be available on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIaio_cancel\fP(), \fIaio_error\fP(), \fIaio_read\fP(), \fIaio_return\fP(),
\fIclose\fP(),
\fIexec\fP(), \fIexit\fP(), \fIfork\fP(), \fIlio_listio\fP(),
\fIlseek\fP(), \fIwrite\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<aio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
