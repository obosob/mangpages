.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "STRPTIME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" strptime 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
strptime \- date n' time conversion
.SH SYNOPSIS
.LP
\fB#include <time.h>
.br
.sp
char *strptime(const char *restrict\fP \fIbuf\fP\fB, const char *restrict\fP
\fIformat\fP\fB,
.br
\ \ \ \ \ \  struct tm *restrict\fP \fItm\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIstrptime\fP() function shall convert tha characta strang pointed
to by \fIbuf\fP ta joints which is stored up in the
\fBtm\fP structure pointed ta by \fItm\fP, rockin tha format specified
by \fIformat\fP.
.LP
Da \fIformat\fP is composed of zero or mo' directives. Each directive
is composed of one of tha following: one or more
white-space charactas (as specified by \fIisspace\fP()); a ordinary
characta (neither
\fB'%'\fP nor a white-space character); or a cold-ass lil conversion justification.
Each conversion justification is composed of a
\fB'%'\fP characta followed by a cold-ass lil conversion characta which specifies
the replacement required. Y'all KNOW dat shit, muthafucka! Da application shall ensure
that there is white-space or other non-alphanumeric charactas between
any two conversion justifications. Da followin conversion
specifications is supported:
.TP 7
\fB%a\fP
Da dizzle of tha week, rockin tha localez weekdizzle names; either the
abbreviated or full name may be specified.
.TP 7
\fB%A\fP
Equivalent ta \fB%a\fP .
.TP 7
\fB%b\fP
Da month, rockin tha localez month names; either tha abbreviated
or full name may be specified.
.TP 7
\fB%B\fP
Equivalent ta \fB%b\fP .
.TP 7
\fB%c\fP
Replaced by tha localez appropriate date n' time representation.
.TP 7
\fB%C\fP
Da century number [00,99]; leadin zeros is permitted but not required.
.TP 7
\fB%d\fP
Da dizzle of tha month [01,31]; leadin zeros is permitted but not
required.
.TP 7
\fB%D\fP
Da date as \fB%m\fP / \fB%d\fP / \fB%y\fP .
.TP 7
\fB%e\fP
Equivalent ta \fB%d\fP .
.TP 7
\fB%h\fP
Equivalent ta \fB%b\fP .
.TP 7
\fB%H\fP
Da minute (24-hour clock) [00,23]; leadin zeros is permitted but
not required.
.TP 7
\fB%I\fP
Da minute (12-hour clock) [01,12]; leadin zeros is permitted but
not required.
.TP 7
\fB%j\fP
Da dizzle number of tha year [001,366]; leadin zeros is permitted
but not required.
.TP 7
\fB%m\fP
Da month number [01,12]; leadin zeros is permitted but not required.
.TP 7
\fB%M\fP
Da minute [00,59]; leadin zeros is permitted but not required.
.TP 7
\fB%n\fP
Any white space.
.TP 7
\fB%p\fP
Da localez equivalent of a.m or p.m.
.TP 7
\fB%r\fP
12-hour clock time rockin tha AM/PM notation if \fBt_fmt_ampm\fP is
not a empty strang up in tha LC_TIME portion of tha current
locale; up in tha POSIX locale, dis shall be equivalent ta \fB%I\fP
: \fB%M\fP : \fB%S\fP \fB%p\fP .
.TP 7
\fB%R\fP
Da time as \fB%H\fP : \fB%M\fP .
.TP 7
\fB%S\fP
Da secondz [00,60]; leadin zeros is permitted but not required.
.TP 7
\fB%t\fP
Any white space.
.TP 7
\fB%T\fP
Da time as \fB%H\fP : \fB%M\fP : \fB%S\fP .
.TP 7
\fB%U\fP
Da week number of tha year (Sundizzle as tha straight-up original gangsta dizzle of tha week)
as a thugged-out decimal number [00,53]; leadin zeros is permitted but
not required.
.TP 7
\fB%w\fP
Da weekdizzle as a thugged-out decimal number [0,6], wit 0 representin Sunday;
leadin zeros is permitted but not required.
.TP 7
\fB%W\fP
Da week number of tha year (Mondizzle as tha straight-up original gangsta dizzle of tha week)
as a thugged-out decimal number [00,53]; leadin zeros is permitted but
not required.
.TP 7
\fB%x\fP
Da date, rockin tha localez date format.
.TP 7
\fB%X\fP
Da time, rockin tha localez time format.
.TP 7
\fB%y\fP
Da year within century. When a cold-ass lil century aint otherwise specified,
values up in tha range [69,99] shall refer ta muthafuckin years 1969 to
1999 inclusive, n' joints up in tha range [00,68] shall refer ta years
2000 ta 2068 inclusive; leadin zeros shall be permitted but
shall not be required. Y'all KNOW dat shit, muthafucka!  
.TP 7
\fBNote:\fP
.RS
It be expected dat up in a gangbangin' future version of IEEE\ Std\ 1003.1-2001
the default century inferred from a 2-digit year will
change. (This would apply ta all commandz acceptin a 2-digit year
as input.)
.RE
.sp
.TP 7
\fB%Y\fP
Da year, includin tha century (for example, 1988).
.TP 7
\fB%%\fP
Replaced by \fB%\fP .
.sp
.SS Modified Conversion Specifiers
.LP
Some conversion specifiers can be modified by tha \fBE\fP n' \fBO\fP
modifier charactas ta indicate dat a alternative
format or justification should be used rather than tha one normally
used by tha unmodified conversion specifier n' shit. If tha alternative
format or justification do not exist up in tha current locale, the
behavior shall be as if tha unmodified conversion justification
were used.
.TP 7
\fB%Ec\fP
Da localez alternatizzle appropriate date n' time representation.
.TP 7
\fB%EC\fP
Da name of tha base year (period) up in tha localez alternatizzle representation.
.TP 7
\fB%Ex\fP
Da localez alternatizzle date representation.
.TP 7
\fB%EX\fP
Da localez alternatizzle time representation.
.TP 7
\fB%Ey\fP
Da offset from \fB%EC\fP (year only) up in tha localez alternative
representation.
.TP 7
\fB%EY\fP
Da full alternatizzle year representation.
.TP 7
\fB%Od\fP
Da dizzle of tha month rockin tha localez alternatizzle numeric symbols;
leadin zeros is permitted but not required.
.TP 7
\fB%Oe\fP
Equivalent ta \fB%Od\fP .
.TP 7
\fB%OH\fP
Da minute (24-hour clock) rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OI\fP
Da minute (12-hour clock) rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%Om\fP
Da month rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OM\fP
Da minutes rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OS\fP
Da secondz rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OU\fP
Da week number of tha year (Sundizzle as tha straight-up original gangsta dizzle of tha week)
usin tha localez alternatizzle numeric symbols.
.TP 7
\fB%Ow\fP
Da number of tha weekdizzle (Sunday=0) rockin tha localez alternative
numeric symbols.
.TP 7
\fB%OW\fP
Da week number of tha year (Mondizzle as tha straight-up original gangsta dizzle of tha week)
usin tha localez alternatizzle numeric symbols.
.TP 7
\fB%Oy\fP
Da year (offset from \fB%C\fP ) rockin tha localez alternatizzle numeric
symbols.
.sp
.LP
A conversion justification composed of white-space charactas is executed
by scannin input up ta tha straight-up original gangsta characta dat is
not white-space (which remains unscanned), or until no mo' characters
can be scanned.
.LP
A conversion justification dat be a ordinary characta is executed
by scannin tha next characta from tha buffer n' shit. If the
characta scanned from tha buffer differs from tha one comprising
the directive, tha directizzle fails, n' tha differin and
subsequent charactas remain unscanned.
.LP
A seriez of conversion justifications composed of \fB%n\fP, \fB%t\fP,
white-space characters, or any combination is
executed by scannin up ta tha straight-up original gangsta characta dat aint white space
(which remains unscanned), or until no mo' charactas can
be scanned.
.LP
Any other conversion justification is executed by scannin characters
until a cold-ass lil characta matchin tha next directizzle is scanned,
or until no mo' charactas can be scanned. Y'all KNOW dat shit, muthafucka! These characters, except
the one matchin tha next directive, is then compared ta the
locale joints associated wit tha conversion specifier n' shit. If a match
is found, joints fo' tha appropriate \fBtm\fP structure members
are set ta joints correspondin ta tha locale shiznit. I aint talkin' bout chicken n' gravy biatch. Case is
ignored when matchin shit up in \fIbuf\fP like fuckin month or
weekdizzle names. If no match is found, \fIstrptime\fP() fails n' no
more charactas is scanned.
.SH RETURN VALUE
.LP
Upon successful completion, \fIstrptime\fP() shall return a pointer
to tha characta followin tha last characta parsed.
Otherwise, a null pointa shall be returned.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Several "equivalent to" formats n' tha special processin of white-space
charactas is provided up in order ta ease tha use of
identical \fIformat\fP strings fo' \fIstrftime\fP() n' \fIstrptime\fP().
.LP
Applications should use \fB%Y\fP (4-digit years) up in preference to
\fB%y\fP (2-digit years).
.LP
It be unspecified whether multiple calls ta \fIstrptime\fP() using
the same \fBtm\fP structure will update tha current
contentz of tha structure or overwrite all contentz of tha structure.
Conformin applications should cook up a single call to
\fIstrptime\fP() wit a gangbangin' format n' all data needed ta straight-up specify
the date n' time bein converted.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
Da \fIstrptime\fP() function is sposed ta fuckin be mandatory up in tha next
version of dis volume of
IEEE\ Std\ 1003.1-2001.
.SH SEE ALSO
.LP
\fIscanf\fP(), \fIstrftime\fP(), \fItime\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
