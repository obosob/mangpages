.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "AIO_FSYNC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" aio_fsync 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
aio_fsync \- asynchronous file synchronization (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <aio.h>
.br
.sp
int aio_fsync(int\fP \fIop\fP\fB, struct aiocb *\fP\fIaiocbp\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIaio_fsync\fP() function shall asynchronously force all I/O
operations associated wit tha file indicated by tha file
descriptor \fIaio_fildes\fP gangmember of tha \fBaiocb\fP structure referenced
by tha \fIaiocbp\fP argument n' queued all up in tha time
of tha call ta \fIaio_fsync\fP() ta tha synchronized I/O completion
state. Da function call shall return when tha synchronization
request has been initiated or queued ta tha file or thang (even when
the data cannot be synchronized immediately).
.LP
If \fIop\fP is O_DSYNC, all currently queued I/O operations shall
be completed as if by a cold-ass lil call ta \fIfdatasync\fP(); dat is, as defined
for synchronized I/O data integritizzle completion. I aint talkin' bout chicken n' gravy biatch. If
\fIop\fP is O_SYNC, all currently queued I/O operations shall be completed
as if by a cold-ass lil call ta \fIfsync\fP(); dat is, as defined fo' synchronized
I/O file integritizzle completion. I aint talkin' bout chicken n' gravy biatch. If the
\fIaio_fsync\fP() function fails, or if tha operation queued by \fIaio_fsync\fP()
fails, then, as fo' \fIfsync\fP() n' \fIfdatasync\fP(), outstanding
I/O
operations is not guaranteed ta done been completed.
.LP
If \fIaio_fsync\fP() succeeds, then it is only tha I/O dat was queued
at tha time of tha call ta \fIaio_fsync\fP() dat is
guaranteed ta be forced ta tha relevant completion state. Da completion
of subsequent I/O on tha file descriptor aint guaranteed
to be completed up in a synchronized fashion.
.LP
Da \fIaiocbp\fP argument refers ta a asynchronous I/O control block.
Da \fIaiocbp\fP value may be used as a argument ta \fIaio_error\fP()
and \fIaio_return\fP() in
order ta determine tha error status n' return status, respectively,
of tha asynchronous operation while it is proceeding. When the
request is queued, tha error status fo' tha operation is [EINPROGRESS].
When all data has been successfully transferred, tha error
status shall be reset ta reflect tha success or failure of tha operation.
If tha operation do not complete successfully, the
error status fo' tha operation shall be set ta indicate tha error.
Da \fIaio_sigevent\fP member determines tha asynchronous
notification ta occur as specified up in \fISignal Generation n' Delivery\fP
when all
operations have  bigged up  synchronized I/O completion. I aint talkin' bout chicken n' gravy biatch fo' realz. All other members
of tha structure referenced by \fIaiocbp\fP is ignored.
If tha control block referenced by \fIaiocbp\fP becomes a illegal
address prior ta asynchronous I/O completion, then tha behavior
is undefined.
.LP
If tha \fIaio_fsync\fP() function fails or \fIaiocbp\fP indicates
an error condition, data aint guaranteed ta have been
successfully transferred.
.SH RETURN VALUE
.LP
Da \fIaio_fsync\fP() function shall return tha value 0 ta tha calling
process if tha I/O operation is successfully queued;
otherwise, tha function shall return tha value -1 n' set \fIerrno\fP
to indicate tha error.
.SH ERRORS
.LP
Da \fIaio_fsync\fP() function shall fail if:
.TP 7
.B EAGAIN
Da axed asynchronous operation was not queued cuz of temporary
resource limitations.
.TP 7
.B EBADF
Da \fIaio_fildes\fP gangmember of tha \fBaiocb\fP structure referenced
by tha \fIaiocbp\fP argument aint a valid file
descriptor open fo' writing.
.TP 7
.B EINVAL
This implementation do not support synchronized I/O fo' dis file.
.TP 7
.B EINVAL
A value of \fIop\fP other than O_DSYNC or O_SYNC was specified.
.sp
.LP
In tha event dat any of tha queued I/O operations fail, \fIaio_fsync\fP()
shall return tha error condizzle defined fo' \fIread\fP() n' \fIwrite\fP().
Da error is returned in
the error status fo' tha asynchronous \fIfsync\fP() operation, which
can be retrieved using
\fIaio_error\fP().
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIaio_fsync\fP() function is part of tha Asynchronous Input and
Output option n' need not be available on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfcntl\fP(), \fIfdatasync\fP(), \fIfsync\fP(), \fIopen\fP(),
\fIread\fP(), \fIwrite\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<aio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
