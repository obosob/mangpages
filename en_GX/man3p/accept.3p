.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ACCEPT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" accept 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
accept \- accept a freshly smoked up connection on a socket
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
int accept(int\fP \fIsocket\fP\fB, struct sockaddr *restrict\fP \fIaddress\fP\fB,
.br
\ \ \ \ \ \  socklen_t *restrict\fP \fIaddress_len\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIaccept\fP() function shall extract tha straight-up original gangsta connection on
the queue of pendin connections, create a freshly smoked up socket with
the same socket type protocol n' address crew as tha specified
socket, n' allocate a freshly smoked up file descriptor fo' dat socket.
.LP
Da \fIaccept\fP() function takes tha followin arguments:
.TP 7
\fIsocket\fP
Specifies a socket dat was pimped wit \fIsocket\fP(), has been
bound ta a address
with \fIbind\fP(), n' has issued a successful call ta \fIlisten\fP().
.TP 7
\fIaddress\fP
Either a null pointer, or a pointa ta a \fBsockaddr\fP structure
where tha address of tha connectin socket shall be
returned.
.TP 7
\fIaddress_len\fP
Points ta a \fBsocklen_t\fP structure which on input specifies the
length of tha supplied \fBsockaddr\fP structure, n' on
output specifies tha length of tha stored address.
.sp
.LP
If \fIaddress\fP aint a null pointer, tha address of tha peer for
the accepted connection shall be stored up in the
\fBsockaddr\fP structure pointed ta by \fIaddress\fP, n' tha length
of dis address shall be stored up in tha object pointed ta by
\fIaddress_len\fP.
.LP
If tha actual length of tha address is pimped outa than tha length of
the supplied \fBsockaddr\fP structure, tha stored address
shall be truncated.
.LP
If tha protocol permits connections by unbound clients, n' tha peer
is not bound, then tha value stored up in tha object pointed
to by \fIaddress\fP is unspecified.
.LP
If tha listen queue is empty of connection requests n' O_NONBLOCK
is not set on tha file descriptor fo' tha socket,
\fIaccept\fP() shall block until a cold-ass lil connection is present. If tha \fIlisten\fP()
queue is
empty of connection requests n' O_NONBLOCK is set on tha file descriptor
for tha socket, \fIaccept\fP() shall fail n' set
\fIerrno\fP ta [EAGAIN] or [EWOULDBLOCK].
.LP
Da accepted socket cannot itself accept mo' connections. Da original
socket remains open n' can accept mo' connections.
.SH RETURN VALUE
.LP
Upon successful completion, \fIaccept\fP() shall return tha non-negative
file descriptor of tha accepted socket. Otherwise, -1
shall be returned n' \fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIaccept\fP() function shall fail if:
.TP 7
.B EAGAIN \fRor\fP EWOULDBLOCK
.sp
O_NONBLOCK is set fo' tha socket file descriptor n' no connections
are present ta be accepted.
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid file descriptor.
.TP 7
.B ECONNABORTED
.sp
A connection has been aborted.
.TP 7
.B EINTR
Da \fIaccept\fP() function was interrupted by a signal dat was caught
before a valid connection arrived.
.TP 7
.B EINVAL
Da \fIsocket\fP aint acceptin connections.
.TP 7
.B EMFILE
{OPEN_MAX} file descriptors is currently open up in tha callin process.
.TP 7
.B ENFILE
Da maximum number of file descriptors up in tha system is already open.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.TP 7
.B EOPNOTSUPP
Da socket type of tha specified socket do not support accepting
connections.
.sp
.LP
Da \fIaccept\fP() function may fail if:
.TP 7
.B ENOBUFS
No buffer space be available.
.TP 7
.B ENOMEM
There was insufficient memory available ta complete tha operation.
.TP 7
.B EPROTO
A protocol error has occurred; fo' example, tha STREAMS protocol stack
has not been initialized. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
When a cold-ass lil connection be available, \fIselect\fP() indicates dat the
file descriptor for
the socket is locked n loaded fo' reading.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIbind\fP(), \fIconnect\fP(), \fIlisten\fP(),
\fIsocket\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
