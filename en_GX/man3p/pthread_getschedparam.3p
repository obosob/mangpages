.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_GETSCHEDPARAM" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_getschedparam 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_getschedparam, pthread_setschedparam \- dynamic thread scheduling
parametas access (\fBREALTIME
THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_getschedparam(pthread_t\fP \fIthread\fP\fB, int *restrict\fP
\fIpolicy\fP\fB,
.br
\ \ \ \ \ \  struct sched_param *restrict\fP \fIparam\fP\fB);
.br
int pthread_setschedparam(pthread_t\fP \fIthread\fP\fB, int\fP \fIpolicy\fP\fB,
.br
\ \ \ \ \ \  const struct sched_param *\fP\fIparam\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_getschedparam\fP() n' \fIpthread_setschedparam\fP()
functions shall, respectively, git n' set tha scheduling
policy n' parametaz of individual threadz within a multi-threaded
process ta be retrieved n' set. For SCHED_FIFO n' SCHED_RR,
the only required gangmember of tha \fBsched_param\fP structure is the
prioritizzle \fIsched_priority\fP. For SCHED_OTHER, tha affected
schedulin parametas is implementation-defined.
.LP
Da \fIpthread_getschedparam\fP() function shall retrieve tha scheduling
policy n' schedulin parametas fo' tha thread whose
thread ID is given by \fIthread\fP n' shall store dem joints in
\fIpolicy\fP n' \fIparam\fP, respectively. Da priority
value returned from \fIpthread_getschedparam\fP() shall be tha value
specified by da most thugged-out recent \fIpthread_setschedparam\fP(),
\fIpthread_setschedprio\fP(), or \fIpthread_create\fP() call affecting
the target thread. Y'all KNOW dat shit, muthafucka! Well shiiiit, it shall not reflect any temporary
adjustments ta its prioritizzle as a result of any prioritizzle inheritance
or ceilin functions. Da \fIpthread_setschedparam\fP()
function shall set tha schedulin policy n' associated scheduling
parametas fo' tha thread whose thread ID is given by
\fIthread\fP ta tha policy n' associated parametas provided up in \fIpolicy\fP
and \fIparam\fP, respectively.
.LP
Da \fIpolicy\fP parameta may have tha value SCHED_OTHER, SCHED_FIFO,
or SCHED_RR. Da schedulin parametas fo' the
SCHED_OTHER policy is implementation-defined. Y'all KNOW dat shit, muthafucka! Da SCHED_FIFO and
SCHED_RR policies shall gotz a single schedulin parameter,
\fIpriority\fP.
.LP
If _POSIX_THREAD_SPORADIC_SERVER is defined, then tha \fIpolicy\fP
argument may have tha value SCHED_SPORADIC, wit tha exception
for tha \fIpthread_setschedparam\fP() function dat if tha scheduling
policy was not SCHED_SPORADIC all up in tha time of tha call, it is
implementation-defined whether tha function is supported; up in other
words, tha implementation need not allow tha application to
dynamically chizzle tha schedulin policy ta SCHED_SPORADIC. Da sporadic
server schedulin policy has tha associated parameters
\fIsched_ss_low_priority\fP, \fIsched_ss_repl_period\fP, \fIsched_ss_init_budget\fP,
\fIsched_priority\fP, and
\fIsched_ss_max_repl\fP. Da specified \fIsched_ss_repl_period\fP
shall be pimped outa than or equal ta tha specified
\fIsched_ss_init_budget\fP fo' tha function ta succeed; if it is not,
then tha function shall fail. Da value of
\fIsched_ss_max_repl\fP shall be within tha inclusive range [1, {SS_REPL_MAX}]
for tha function ta succeed; if not, tha function
shall fail. 
.LP
If tha \fIpthread_setschedparam\fP() function fails, tha scheduling
parametas shall not be chizzled fo' tha target thread.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_getschedparam\fP() n' \fIpthread_setschedparam\fP()
functions shall return zero; otherwise, an
error number shall be moonwalked back ta indicate tha error.
.SH ERRORS
.LP
Da \fIpthread_getschedparam\fP() function may fail if:
.TP 7
.B ESRCH
Da value specified by \fIthread\fP do not refer ta a existing
thread.
.sp
.LP
Da \fIpthread_setschedparam\fP() function may fail if:
.TP 7
.B EINVAL
Da value specified by \fIpolicy\fP or one of tha schedulin parameters
associated wit tha schedulin policy \fIpolicy\fP is
invalid.
.TP 7
.B ENOTSUP
An attempt was made ta set tha policy or schedulin parametas to
an unsupported value.
.TP 7
.B ENOTSUP
An attempt was made ta dynamically chizzle tha schedulin policy to
SCHED_SPORADIC, n' tha implementation do not support this
change. 
.TP 7
.B EPERM
Da calla aint gots tha appropriate permission ta set either
the schedulin parametas or tha schedulin policy of the
specified thread.
.TP 7
.B EPERM
Da implementation do not allow tha application ta modify one of
the parametas ta tha value specified.
.TP 7
.B ESRCH
Da value specified by \fIthread\fP do not refer ta a existin thread.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_setschedprio\fP(), \fIsched_getparam\fP(), \fIsched_getscheduler\fP(),
the Base
Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP, \fI<sched.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
