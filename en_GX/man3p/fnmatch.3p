.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FNMATCH" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fnmatch 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fnmatch \- match a gangbangin' filename or a pathname
.SH SYNOPSIS
.LP
\fB#include <fnmatch.h>
.br
.sp
int fnmatch(const char *\fP\fIpattern\fP\fB, const char *\fP\fIstring\fP\fB,
int\fP \fIflags\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfnmatch\fP() function shall match patterns as busted lyrics bout in
the Shell n' Utilitizzles volume of
IEEE\ Std\ 1003.1-2001, Section 2.13.1, Patterns Matchin a Single
Character, n' Section 2.13.2, Patterns Matchin Multiple Characters.
It checks tha strang specified by tha \fIstring\fP
argument ta peep if it matches tha pattern specified by tha \fIpattern\fP
argument.
.LP
Da \fIflags\fP argument shall modify tha interpretation of \fIpattern\fP
and \fIstring\fP. Well shiiiit, it is tha bitwise-inclusive OR of
zero or mo' of tha flags defined up in \fI<fnmatch.h>\fP. If tha FNM_PATHNAME
flag is
set up in \fIflags\fP, then a slash characta ( \fB'/'\fP ) up in \fIstring\fP
shall be explicitly matched by a slash in
\fIpattern\fP; it shall not be matched by either tha asterisk or question-mark
special characters, nor by a funky-ass bracket expression. I aint talkin' bout chicken n' gravy biatch. If
the FNM_PATHNAME flag aint set, tha slash characta shall be treated
as a ordinary character.
.LP
If FNM_NOESCAPE aint set up in \fIflags\fP, a funky-ass backslash characta (
\fB'\\'\fP ) up in \fIpattern\fP followed by any other
characta shall match dat second characta up in \fIstring\fP. In particular,
\fB"\\\\"\fP shall match a funky-ass backslash in
\fIstring\fP. If FNM_NOESCAPE is set, a funky-ass backslash characta shall
be treated as a ordinary character.
.LP
If FNM_PERIOD is set up in \fIflags\fP, then a leadin period ( \fB'.'\fP
) up in \fIstring\fP shall match a period in
\fIpattern\fP; as busted lyrics bout by rule 2 up in tha Shell n' Utilitizzles volume
of IEEE\ Std\ 1003.1-2001, Section 2.13.3, Patterns Used fo' Filename
Expansion where tha location of
"leading" is indicated by tha value of FNM_PATHNAME:
.IP " *" 3
If FNM_PATHNAME is set, a period is "leading" if it is tha straight-up original gangsta character
in \fIstring\fP or if it immediately bigs up a
slash.
.LP
.IP " *" 3
If FNM_PATHNAME aint set, a period is "leading" only if it is the
first characta of \fIstring\fP.
.LP
.LP
If FNM_PERIOD aint set, then no special restrictions is placed
on matchin a period.
.SH RETURN VALUE
.LP
If \fIstring\fP matches tha pattern specified by \fIpattern\fP, then
\fIfnmatch\fP() shall return 0. If there is no match,
\fIfnmatch\fP() shall return FNM_NOMATCH, which is defined up in \fI<fnmatch.h>\fP.
If a error occurs, \fIfnmatch\fP() shall return another non-zero
value.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIfnmatch\fP() function has two major uses. Well shiiiit, it could be used
by a application or utilitizzle dat need ta read a gangbangin' finger-lickin' directory
and apply a pattern against each entry. Da \fIfind\fP utilitizzle is
an example of all dis bullshit. Well shiiiit, it can
also be used by tha \fIpax\fP utilitizzle ta process its \fIpattern\fP
operands, or by
applications dat need ta match strings up in a similar manner.
.LP
Da name \fIfnmatch\fP() is intended ta imply \fIfilename\fP match,
rather than \fIpathname\fP match. Da default action of
this function is ta match filenames, rather than pathnames, since
it gives no special significizzle ta tha slash character n' shit. With the
FNM_PATHNAME flag, \fIfnmatch\fP() do match pathnames yo, but without
tilde expansion, parameta expansion, or special treatment
for a period all up in tha beginnin of a gangbangin' filename.
.SH RATIONALE
.LP
This function replaced tha REG_FILENAME flag of \fIregcomp\fP() in
early proposals of
this volume of IEEE\ Std\ 1003.1-2001. Well shiiiit, it serves up virtually tha same
functionalitizzle as tha \fIregcomp\fP() n' \fIregexec\fP() functions
usin the
REG_FILENAME n' REG_FSLASH flags (the REG_FSLASH flag was proposed
for \fIregcomp\fP(),
and would have had tha opposite effect from FNM_PATHNAME) yo, but with
a simpla function n' less system overhead.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIglob\fP(), \fIwordexp\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<fnmatch.h>\fP, tha Shell n' Utilities
volume
of IEEE\ Std\ 1003.1-2001
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
