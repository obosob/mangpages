.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "TCGETATTR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" tcgetattr 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
tcgetattr \- git tha parametas associated wit tha terminal
.SH SYNOPSIS
.LP
\fB#include <termios.h>
.br
.sp
int tcgetattr(int\fP \fIfildes\fP\fB, struct termios *\fP\fItermios_p\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fItcgetattr\fP() function shall git tha parametas associated
with tha terminal referred ta by \fIfildes\fP n' store
them up in tha \fBtermios\fP structure referenced by \fItermios_p\fP.
Da \fIfildes\fP argument be a open file descriptor
associated wit a terminal.
.LP
Da \fItermios_p\fP argument be a pointa ta a \fBtermios\fP structure.
.LP
Da \fItcgetattr\fP() operation be allowed from any process.
.LP
If tha terminal thang supports different input n' output baud rates,
the baud rates stored up in tha \fBtermios\fP structure
returned by \fItcgetattr\fP() shall reflect tha actual baud rates,
even if they is equal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. If differin baud rates is not
supported, tha rate returned as tha output baud rate shall be the
actual baud rate. If tha terminal thang do not support split
baud rates, tha input baud rate stored up in tha \fBtermios\fP structure
shall be tha output rate (as one of tha symbolic
values).
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise, -1 shall
be returned n' \fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fItcgetattr\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIfildes\fP argument aint a valid file descriptor.
.TP 7
.B ENOTTY
Da file associated wit \fIfildes\fP aint a terminal.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Care must be taken when changin tha terminal attributes fo' realz. Applications
should always do a \fItcgetattr\fP(), save the
\fBtermios\fP structure joints returned, n' then do a \fItcsetattr\fP(),
changin only
the necessary fields. Da application should use tha joints saved
from tha \fItcgetattr\fP() ta reset tha terminal state whenever
it is done wit tha terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. This is necessary cuz terminal attributes
apply ta tha underlyin port n' not ta each individual
open instance; dat is, all processes dat have used tha terminal
see tha sickest fuckin attribute chizzles.
.LP
A program dat uses these functions should be freestyled ta catch all
signals n' take other appropriate actions ta ensure that
when tha program terminates, whether planned or not, tha terminal
devicez state is restored ta its original gangsta state.
.LP
Existin practice dealin wit error returns when only part of a request
can be honored is based on calls ta tha \fIioctl\fP() function. I aint talkin' bout chicken n' gravy biatch. In
historical BSD n' System V implementations, tha correspondin \fIioctl\fP()
returns zero if tha axed actions was semantically erect, even
if a shitload of the
axed chizzlez could not be made. Many existin applications assume
this behavior n' would no longer work erectly if the
return value was chizzled from zero ta -1 up in dis case.
.LP
Note dat either justification has a problem. When zero is returned,
it implies every last muthafuckin thang succeeded even if a shitload of tha chizzles
were not made. When -1 is returned, it implies every last muthafuckin thang failed even
though a shitload of tha chizzlez was made.
.LP
Applications dat need all of tha axed chizzlez made ta work properly
should follow \fItcsetattr\fP() wit a cold-ass lil call ta \fItcgetattr\fP() and
compare tha appropriate field
values.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fItcsetattr\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Chapta 11, General Terminal Interface, \fI<termios.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
