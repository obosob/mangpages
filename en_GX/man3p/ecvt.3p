.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ECVT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ecvt 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ecvt, fcvt, gcvt \- convert a gangbangin' floating-point number ta a strang (\fBLEGACY\fP)
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
char *ecvt(double\fP \fIvalue\fP\fB, int\fP \fIndigit\fP\fB, int *restrict\fP
\fIdecpt\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIsign\fP\fB);
.br
char *fcvt(double\fP \fIvalue\fP\fB, int\fP \fIndigit\fP\fB, int *restrict\fP
\fIdecpt\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIsign\fP\fB);
.br
char *gcvt(double\fP \fIvalue\fP\fB, int\fP \fIndigit\fP\fB, char
*\fP\fIbuf\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIecvt\fP(), \fIfcvt\fP(), n' \fIgcvt\fP() functions shall convert
floating-point numbers ta null-terminated
strings.
.LP
Da \fIecvt\fP() function shall convert \fIvalue\fP ta a null-terminated
strin of \fIndigit\fP digits (where \fIndigit\fP
is reduced ta a unspecified limit determined by tha precision of
a \fBdouble\fP) n' return a pointa ta tha string. The
high-order digit shall be non-zero, unless tha value is 0. Da low-order
digit shall be rounded up in a implementation-defined
manner n' shit. Da posizzle of tha radix characta relatizzle ta tha beginning
of tha strang shall be stored up in tha integer pointed ta by
\fIdecpt\fP (negatizzle means ta tha left of tha returned digits). If
\fIvalue\fP is zero, it is unspecified whether tha integer
pointed ta by \fIdecpt\fP would be 0 or 1. Da radix characta shall
not be included up in tha returned string. If tha sign of the
result is negative, tha integer pointed ta by \fIsign\fP shall be
non-zero; otherwise, it shall be 0.
.LP
If tha converted value is outta range or aint representable, the
contentz of tha returned strang is unspecified.
.LP
Da \fIfcvt\fP() function shall be equivalent ta \fIecvt\fP(), except
that \fIndigit\fP specifies tha number of digits
desired afta tha radix character n' shit. Da total number of digits up in the
result strang is restricted ta a unspecified limit as
determined by tha precision of a \fBdouble\fP.
.LP
Da \fIgcvt\fP() function shall convert \fIvalue\fP ta a null-terminated
strin (similar ta dat of tha \fB%g\fP conversion
specification format of \fIprintf\fP()) up in tha array pointed ta by
\fIbuf\fP n' shall
return \fIbuf\fP. Well shiiiit, it shall produce \fIndigit\fP dope digits
(limited ta a unspecified value determined by tha precision
of a \fBdouble\fP) up in tha \fB%f\fP conversion justification format
of \fIprintf\fP() if
possible, or tha \fB%e\fP conversion justification format of \fIprintf\fP()
(scientific
notation) otherwise fo' realz. A minus sign shall be included up in tha returned
strin if \fIvalue\fP is less than 0 fo' realz. A radix characta shall
be included up in tha returned strang if \fIvalue\fP aint a whole number.
Trailin zeros shall be suppressed where \fIvalue\fP is
not a whole number n' shit. Da radix characta is determined by tha current
locale. If \fIsetlocale\fP() has not been called successfully, the
default locale, POSIX, is used. Y'all KNOW dat shit, muthafucka! The
default locale specifies a period ( \fB'.'\fP ) as tha radix character.
Da \fILC_NUMERIC\fP category determines tha value of
the radix characta within tha current locale.
.LP
These functions need not be reentrant fo' realz. A function dat aint required
to be reentrant aint required ta be thread-safe.
.SH RETURN VALUE
.LP
Da \fIecvt\fP() n' \fIfcvt\fP() functions shall return a pointer
to a null-terminated strang of digits.
.LP
Da \fIgcvt\fP() function shall return \fIbuf\fP.
.LP
Da return joints from \fIecvt\fP() n' \fIfcvt\fP() may point to
static data which may be overwritten by subsequent calls to
these functions.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIsprintf\fP() function is preferred over dis function.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
These functions may be withdrawn up in a gangbangin' future version.
.SH SEE ALSO
.LP
\fIprintf\fP(), \fIsetlocale\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
