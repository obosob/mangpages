.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ENDSERVENT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" endservent 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
endservent, getservbyname, getservbyport, getservent, setservent \-
network skillz database functions
.SH SYNOPSIS
.LP
\fB#include <netdb.h>
.br
.sp
void endservent(void);
.br
struct servent *getservbyname(const char *\fP\fIname\fP\fB, const
char *\fP\fIproto\fP\fB);
.br
struct servent *getservbyport(int\fP \fIport\fP\fB, const char *\fP\fIproto\fP\fB);
.br
struct servent *getservent(void);
.br
void setservent(int\fP \fIstayopen\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall retrieve shiznit bout network skillz.
This shiznit is considered ta be stored up in a thugged-out database
that can be accessed sequentially or randomly. Da implementation
of dis database is unspecified.
.LP
Da \fIsetservent\fP() function shall open a cold-ass lil connection ta tha database,
and set tha next entry ta tha straight-up original gangsta entry. If the
\fIstayopen\fP argument is non-zero, tha \fInet\fP database shall
not be closed afta each call ta tha \fIgetservent\fP()
function (either directly, or indirectly all up in one of tha other
\fIgetserv*\fP()
functions), n' tha implementation may maintain a open file descriptor
for tha database.
.LP
Da \fIgetservent\fP() function shall read tha next entry of tha database,
openin n' closin a cold-ass lil connection ta tha database as
necessary.
.LP
Da \fIgetservbyname\fP() function shall search tha database from
the beginnin n' find tha straight-up original gangsta entry fo' which tha service
name specified by \fIname\fP matches tha \fIs_name\fP member n' the
protocol name specified by \fIproto\fP matches the
\fIs_proto\fP member, openin n' closin a cold-ass lil connection ta tha database
as necessary. If \fIproto\fP be a null pointer, any value
of tha \fIs_proto\fP member shall be matched.
.LP
Da \fIgetservbyport\fP() function shall search tha database from
the beginnin n' find tha straight-up original gangsta entry fo' which tha port
specified by \fIport\fP matches tha \fIs_port\fP member n' tha protocol
name specified by \fIproto\fP matches the
\fIs_proto\fP member, openin n' closin a cold-ass lil connection ta tha database
as necessary. If \fIproto\fP be a null pointer, any value
of tha \fIs_proto\fP member shall be matched. Y'all KNOW dat shit, muthafucka! Da \fIport\fP argument
shall be up in network byte order.
.LP
Da \fIgetservbyname\fP(), \fIgetservbyport\fP(), n' \fIgetservent\fP()
functions shall each return a pointa ta a
\fBservent\fP structure, tha thugz of which shall contain tha fields
of a entry up in tha network skillz database.
.LP
Da \fIendservent\fP() function shall close tha database, releasing
any open file descriptor.
.LP
These functions need not be reentrant fo' realz. A function dat aint required
to be reentrant aint required ta be thread-safe.
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetservbyname\fP(), \fIgetservbyport\fP(),
and \fIgetservent\fP() return a pointa ta a
\fBservent\fP structure if tha axed entry was found, n' a null
pointa if tha end of tha database was reached or the
axed entry was not found. Y'all KNOW dat shit, muthafucka! Otherwise, a null pointa is returned.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIport\fP argument of \fIgetservbyport\fP() need not be compatible
with tha port jointz of all address crews.
.LP
Da \fIgetservbyname\fP(), \fIgetservbyport\fP(), n' \fIgetservent\fP()
functions may return pointas ta static data, which
may be overwritten by subsequent calls ta any of these functions.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIendhostent\fP(), \fIendprotoent\fP(), \fIhtonl\fP(), \fIinet_addr\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<netdb.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
