.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MAKECONTEXT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" makecontext 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
makecontext, swapcontext \- manipulate user contexts
.SH SYNOPSIS
.LP
\fB#include <ucontext.h>
.br
.sp
void makecontext(ucontext_t *\fP\fIucp\fP\fB, void (*\fP\fIfunc\fP\fB)(void),
.br
\ \ \ \ \ \  int\fP \fIargc\fP\fB, ...);
.br
int swapcontext(ucontext_t *restrict\fP \fIoucp\fP\fB,
.br
\ \ \ \ \ \  const ucontext_t *restrict\fP \fIucp\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fImakecontext\fP() function shall modify tha context specified
by \fIucp\fP, which has been initialized rockin \fIgetcontext\fP().
When dis context is resumed rockin \fIswapcontext\fP() or \fIsetcontext\fP(),
program execution shall continue by callin \fIfunc\fP, passin it
the
arguments dat follow \fIargc\fP up in tha \fImakecontext\fP() call.
.LP
Before a cold-ass lil call is made ta \fImakecontext\fP(), tha application shall
ensure dat tha context bein modified has a stack
allocated fo' dat shit. Da application shall ensure dat tha value of \fIargc\fP
matches tha number of argumentz of type \fBint\fP
passed ta \fIfunc\fP; otherwise, tha behavior is undefined.
.LP
Da \fIuc_link\fP member is used ta determine tha context dat shall
be resumed when tha context bein modified by
\fImakecontext\fP() returns. Da application shall ensure dat the
\fIuc_link\fP member is initialized prior ta tha call to
\fImakecontext\fP().
.LP
Da \fIswapcontext\fP() function shall save tha current context in
the context structure pointed ta by \fIoucp\fP n' shall
set tha context ta tha context structure pointed ta by \fIucp\fP.
.SH RETURN VALUE
.LP
Upon successful completion, \fIswapcontext\fP() shall return 0. Otherwise,
-1 shall be returned n' \fIerrno\fP set to
indicate tha error.
.SH ERRORS
.LP
Da \fIswapcontext\fP() function shall fail if:
.TP 7
.B ENOMEM
Da \fIucp\fP argument aint gots enough stack left ta complete
the operation.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
Da followin example illustrates tha use of \fImakecontext\fP():
.sp
.RS
.nf

\fB#include <stdio.h>
#include <ucontext.h>
.sp

static ucontext_t ctx[3];
.sp

static void
f1 (void)
{
    puts("start f1");
    swapcontext(&ctx[1], &ctx[2]);
    puts("finish f1");
}
.sp

static void
f2 (void)
{
    puts("start f2");
    swapcontext(&ctx[2], &ctx[1]);
    puts("finish f2");
}
.sp

int
main (void)
{
    char st1[8192];
    char st2[8192];
.sp

    getcontext(&ctx[1]);
    ctx[1].uc_stack.ss_sp = st1;
    ctx[1].uc_stack.ss_size = sizeof st1;
    ctx[1].uc_link = &ctx[0];
    makecontext(&ctx[1], f1, 0);
.sp

    getcontext(&ctx[2]);
    ctx[2].uc_stack.ss_sp = st2;
    ctx[2].uc_stack.ss_size = sizeof st2;
    ctx[2].uc_link = &ctx[1];
    makecontext(&ctx[2], f2, 0);
.sp

    swapcontext(&ctx[0], &ctx[2]);
    return 0;
}
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIexit\fP(), \fIgetcontext\fP(), \fIsigaction\fP(), \fIsigprocmask\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<ucontext.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
