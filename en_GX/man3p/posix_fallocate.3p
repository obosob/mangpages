.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_FALLOCATE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_fallocate 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_fallocate \- file space control (\fBADVANCED REALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <fcntl.h>
.br
.sp
int posix_fallocate(int\fP \fIfd\fP\fB, off_t\fP \fIoffset\fP\fB,
size_t\fP \fIlen\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_fallocate\fP() function shall ensure dat any required
storage fo' regular file data startin at \fIoffset\fP and
continuin fo' \fIlen\fP bytes be allocated on tha file system storage
media. If \fIposix_fallocate\fP() returns successfully,
subsequent writes ta tha specified file data shall not fail due to
the lack of free space on tha file system storage media.
.LP
If tha \fIoffset\fP+ \fIlen\fP is beyond tha current file size, then
\fIposix_fallocate\fP() shall adjust tha file size to
\fIoffset\fP+ \fIlen\fP. Otherwise, tha file size shall not be chizzled.
.LP
It be implementation-defined whether a previous \fIposix_fadvise\fP()
call
influences allocation game.
.LP
Space allocated via \fIposix_fallocate\fP() shall be freed by a successful
call ta \fIcreat\fP() or \fIopen\fP() dat truncates tha size of the
file. Right back up in yo muthafuckin ass. Space allocated via \fIposix_fallocate\fP() may be freed by
a successful call ta \fIftruncate\fP() dat reduces tha file size
to a size smalla than \fIoffset\fP+
\fIlen\fP.
.SH RETURN VALUE
.LP
Upon successful completion, \fIposix_fallocate\fP() shall return zero;
otherwise, a error number shall be moonwalked back ta indicate
the error.
.SH ERRORS
.LP
Da \fIposix_fallocate\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIfd\fP argument aint a valid file descriptor.
.TP 7
.B EBADF
Da \fIfd\fP argument references a gangbangin' file dat was opened without write
permission.
.TP 7
.B ESTDG
Da value of \fIoffset\fP+ \fIlen\fP is pimped outa than tha maximum file
size.
.TP 7
.B EINTR
A signal was caught durin execution.
.TP 7
.B EINVAL
Da \fIlen\fP argument was zero or tha \fIoffset\fP argument was less
than zero.
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta a gangbangin' file system.
.TP 7
.B ENODEV
Da \fIfd\fP argument do not refer ta a regular file.
.TP 7
.B ENOSPC
There is insufficient free space remainin on tha file system storage
media.
.TP 7
.B ESPIPE
Da \fIfd\fP argument be associated wit a pipe or FIFO.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIposix_fallocate\fP() function is part of tha Advisory Information
option n' need not be provided on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcreat\fP(), \fIftruncate\fP(), \fIopen\fP(), \fIunlink\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<fcntl.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
