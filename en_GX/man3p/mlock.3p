.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MLOCK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mlock 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mlock, munlock \- lock or unlock a range of process address space (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <sys/mman.h>
.br
.sp
int mlock(const void *\fP\fIaddr\fP\fB, size_t\fP \fIlen\fP\fB);
.br
int munlock(const void *\fP\fIaddr\fP\fB, size_t\fP \fIlen\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fImlock\fP() function shall cause dem whole pages containing
any part of tha address space of tha process startin at
address \fIaddr\fP n' continuin fo' \fIlen\fP bytes ta be memory-resident
until unlocked or until tha process exits or \fIexec\fPs another process
image. Da implementation may require dat \fIaddr\fP be a multiple
of
{PAGESIZE}.
.LP
Da \fImunlock\fP() function shall unlock dem whole pages containing
any part of tha address space of tha process startin at
address \fIaddr\fP n' continuin fo' \fIlen\fP bytes, regardless
of how tha fuck nuff times \fImlock\fP() has been called by tha process
for any of tha pages up in tha specified range. Da implementation may
require dat \fIaddr\fP be a multiple of {PAGESIZE}.
.LP
If any of tha pages up in tha range specified ta a cold-ass lil call ta \fImunlock\fP()
are also mapped tha fuck into tha address spacez of other
processes, any locks established on dem pages by another process
are unaffected by tha call of dis process ta \fImunlock\fP().
If any of tha pages up in tha range specified by a cold-ass lil call ta \fImunlock\fP()
are also mapped tha fuck into other portionz of tha address space
of tha callin process outside tha range specified, any locks established
on dem pages via tha other mappings is also unaffected
by dis call.
.LP
Upon successful return from \fImlock\fP(), pages up in tha specified
range shall be locked n' memory-resident. Upon successful
return from \fImunlock\fP(), pages up in tha specified range shall be
unlocked wit respect ta tha address space of tha process.
Memory residency of unlocked pages is unspecified.
.LP
Da appropriate privilege is required ta lock process memory with
\fImlock\fP().
.SH RETURN VALUE
.LP
Upon successful completion, tha \fImlock\fP() n' \fImunlock\fP()
functions shall return a value of zero. Otherwise, no chizzle
is made ta any locks up in tha address space of tha process, n' the
function shall return a value of -1 n' set \fIerrno\fP to
indicate tha error.
.SH ERRORS
.LP
Da \fImlock\fP() n' \fImunlock\fP() functions shall fail if:
.TP 7
.B ENOMEM
Some or all of tha address range specified by tha \fIaddr\fP n' \fIlen\fP
arguments do not correspond ta valid mapped
pages up in tha address space of tha process.
.sp
.LP
Da \fImlock\fP() function shall fail if:
.TP 7
.B EAGAIN
Some or all of tha memory identified by tha operation could not be
locked when tha call was made.
.sp
.LP
Da \fImlock\fP() n' \fImunlock\fP() functions may fail if:
.TP 7
.B EINVAL
Da \fIaddr\fP argument aint a multiple of {PAGESIZE}.
.sp
.LP
Da \fImlock\fP() function may fail if:
.TP 7
.B ENOMEM
Lockin tha pages mapped by tha specified range would exceed a implementation-defined
limit on tha amount of memory dat the
process may lock.
.TP 7
.B EPERM
Da callin process aint gots tha appropriate privilege ta perform
the axed operation.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIexec\fP(), \fIexit\fP(), \fIfork\fP(), \fImlockall\fP(), \fImunmap\fP(),
the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/mman.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
