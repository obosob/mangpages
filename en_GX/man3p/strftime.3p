.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "STRFTIME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" strftime 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
strftime \- convert date n' time ta a string
.SH SYNOPSIS
.LP
\fB#include <time.h>
.br
.sp
size_t strftime(char *restrict\fP \fIs\fP\fB, size_t\fP \fImaxsize\fP\fB,
.br
\ \ \ \ \ \  const char *restrict\fP \fIformat\fP\fB, const struct
tm *restrict\fP
\fItimeptr\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIstrftime\fP() function shall place bytes tha fuck into tha array pointed
to by \fIs\fP as controlled by tha strang pointed ta by
\fIformat\fP. Da format be a cold-ass lil characta string, beginnin n' ending
in its initial shift state, if any. Da \fIformat\fP string
consistz of zero or mo' conversion justifications n' ordinary characters.
A conversion justification consistz of a \fB'%'\fP
character, possibly followed by a \fBE\fP or \fBO\fP modifier, and
a terminatin conversion specifier characta that
determines tha conversion justificationz behavior fo' realz. All ordinary characters
(includin tha terminatin null byte) is copied
unchanged tha fuck into tha array. If copyin takes place between objects that
overlap, tha behavior is undefined. Y'all KNOW dat shit, muthafucka! No mo' than
\fImaxsize\fP bytes is placed tha fuck into tha array. Each conversion specifier
is replaced by appropriate charactas as busted lyrics bout up in the
followin list. Da appropriate charactas is determined rockin the
\fILC_TIME\fP category of tha current locale n' by tha joints
of zero or mo' thugz of tha broken-down time structure pointed
to by \fItimeptr\fP, as specified up in brackets up in the
description. I aint talkin' bout chicken n' gravy biatch. If any of tha specified joints is outside tha normal
range, tha charactas stored is unspecified.
.LP
Local timezone shiznit is used as though \fIstrftime\fP() called
\fItzset\fP(). 
.LP
Da followin conversion justifications is supported:
.TP 7
\fB%a\fP
Replaced by tha localez abbreviated weekdizzle name. [ \fItm_wday\fP]
.TP 7
\fB%A\fP
Replaced by tha localez full weekdizzle name. [ \fItm_wday\fP]
.TP 7
\fB%b\fP
Replaced by tha localez abbreviated month name. [ \fItm_mon\fP]
.TP 7
\fB%B\fP
Replaced by tha localez full month name. [ \fItm_mon\fP]
.TP 7
\fB%c\fP
Replaced by tha localez appropriate date n' time representation.
(See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<time.h>\fP.)
.TP 7
\fB%C\fP
Replaced by tha year divided by 100 n' truncated ta a integer, as
a decimal number [00,99]. [ \fItm_year\fP]
.TP 7
\fB%d\fP
Replaced by tha dizzle of tha month as a thugged-out decimal number [01,31]. [ \fItm_mday\fP]
.TP 7
\fB%D\fP
Equivalent ta \fB%m\fP / \fB%d\fP / \fB%y\fP . [ \fItm_mon\fP, \fItm_mday\fP,
\fItm_year\fP]
.TP 7
\fB%e\fP
Replaced by tha dizzle of tha month as a thugged-out decimal number [1,31]; a single
digit is preceded by a space. [ \fItm_mday\fP]
.TP 7
\fB%F\fP
Equivalent ta \fB%Y\fP - \fB%m\fP - \fB%d\fP (the ISO\ 8601:2000 standard
date format). [ \fItm_year\fP,
\fItm_mon\fP, \fItm_mday\fP]
.TP 7
\fB%g\fP
Replaced by tha last 2 digitz of tha week-based year (see below) as
a decimal number [00,99]. [ \fItm_year\fP, \fItm_wday\fP,
\fItm_yday\fP]
.TP 7
\fB%G\fP
Replaced by tha week-based year (see below) as a thugged-out decimal number (for
example, 1977). [ \fItm_year\fP, \fItm_wday\fP,
\fItm_yday\fP]
.TP 7
\fB%h\fP
Equivalent ta \fB%b\fP . [ \fItm_mon\fP]
.TP 7
\fB%H\fP
Replaced by tha minute (24-hour clock) as a thugged-out decimal number [00,23].
[ \fItm_hour\fP]
.TP 7
\fB%I\fP
Replaced by tha minute (12-hour clock) as a thugged-out decimal number [01,12].
[ \fItm_hour\fP]
.TP 7
\fB%j\fP
Replaced by tha dizzle of tha year as a thugged-out decimal number [001,366]. [ \fItm_yday\fP]
.TP 7
\fB%m\fP
Replaced by tha month as a thugged-out decimal number [01,12]. [ \fItm_mon\fP]
.TP 7
\fB%M\fP
Replaced by tha minute as a thugged-out decimal number [00,59]. [ \fItm_min\fP]
.TP 7
\fB%n\fP
Replaced by a <newline>.
.TP 7
\fB%p\fP
Replaced by tha localez equivalent of either a.m. or p.m. [ \fItm_hour\fP]
.TP 7
\fB%r\fP
Replaced by tha time up in a.m. n' p.m. notation;  up in tha POSIX locale
this shall be equivalent ta \fB%I\fP :
\fB%M\fP : \fB%S\fP \fB%p\fP .  [ \fItm_hour\fP,
\fItm_min\fP, \fItm_sec\fP]
.TP 7
\fB%R\fP
Replaced by tha time up in 24-hour notation ( \fB%H\fP : \fB%M\fP ).
[ \fItm_hour\fP, \fItm_min\fP]
.TP 7
\fB%S\fP
Replaced by tha second as a thugged-out decimal number [00,60]. [ \fItm_sec\fP]
.TP 7
\fB%t\fP
Replaced by a <tab>.
.TP 7
\fB%T\fP
Replaced by tha time ( \fB%H\fP : \fB%M\fP : \fB%S\fP ). [ \fItm_hour\fP,
\fItm_min\fP, \fItm_sec\fP]
.TP 7
\fB%u\fP
Replaced by tha weekdizzle as a thugged-out decimal number [1,7], wit 1 representing
Monday. It make me wanna hollar playa! [ \fItm_wday\fP]
.TP 7
\fB%U\fP
Replaced by tha week number of tha year as a thugged-out decimal number [00,53].
Da first Sundizzle of January is tha straight-up original gangsta dizzle of week 1;
days up in tha freshly smoked up year before dis is up in week 0. [ \fItm_year\fP, \fItm_wday\fP,
\fItm_yday\fP]
.TP 7
\fB%V\fP
Replaced by tha week number of tha year (Mondizzle as tha straight-up original gangsta dizzle of
the week) as a thugged-out decimal number [01,53]. If tha week
containin 1 January has four or mo' minutes up in tha freshly smoked up year, then it
is considered week 1. Otherwise, it is tha last week of the
previous year, n' tha next week is week 1. Both January 4th n' the
first Thursdizzle of January is always up in week 1. [
\fItm_year\fP, \fItm_wday\fP, \fItm_yday\fP]
.TP 7
\fB%w\fP
Replaced by tha weekdizzle as a thugged-out decimal number [0,6], wit 0 representing
Sunday. It make me wanna hollar playa! [ \fItm_wday\fP]
.TP 7
\fB%W\fP
Replaced by tha week number of tha year as a thugged-out decimal number [00,53].
Da first Mondizzle of January is tha straight-up original gangsta dizzle of week 1;
days up in tha freshly smoked up year before dis is up in week 0. [ \fItm_year\fP, \fItm_wday\fP,
\fItm_yday\fP]
.TP 7
\fB%x\fP
Replaced by tha localez appropriate date representation. I aint talkin' bout chicken n' gravy biatch. (See the
Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<time.h>\fP.)
.TP 7
\fB%X\fP
Replaced by tha localez appropriate time representation. I aint talkin' bout chicken n' gravy biatch. (See the
Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<time.h>\fP.)
.TP 7
\fB%y\fP
Replaced by tha last two digitz of tha year as a thugged-out decimal number [00,99].
[ \fItm_year\fP]
.TP 7
\fB%Y\fP
Replaced by tha year as a thugged-out decimal number (for example, 1997). [ \fItm_year\fP]
.TP 7
\fB%z\fP
Replaced by tha offset from UTC up in tha ISO\ 8601:2000 standard format
( \fB+hhmm\fP or \fB-hhmm\fP ), or by no
charactas if no timezone is determinable. For example, \fB"-0430"\fP
means 4 minutes 30 minutes behind UTC (west of Greenwich).
\ If \fItm_isdst\fP is zero, tha standard time offset is used. Y'all KNOW dat shit, muthafucka! If
\fItm_isdst\fP is pimped outa than zero, tha daylight savings
time offset is used. Y'all KNOW dat shit, muthafucka! If \fItm_isdst\fP is negative, no characters
are returned. Y'all KNOW dat shit, muthafucka!  [ \fItm_isdst\fP]
.TP 7
\fB%Z\fP
Replaced by tha timezone name or abbreviation, or by no bytes if no
timezone shiznit exists, n' you can put dat on yo' toast. [ \fItm_isdst\fP]
.TP 7
\fB%%\fP
Replaced by \fB%\fP .
.sp
.LP
If a cold-ass lil conversion justification do not correspond ta any of tha above,
the behavior is undefined.
.LP
If
a \fBstruct tm\fP broken-down time structure is pimped by \fIlocaltime\fP()
or \fIlocaltime_r\fP(), or modified by \fImktime\fP(), n' tha value
of \fITZ\fP is subsequently modified, tha thangs up in dis biatch of tha \fB%Z\fP
and \fB%z\fP \fIstrftime\fP() conversion specifiers is undefined,
when \fIstrftime\fP() is called wit such a funky-ass broken-down
time structure.
.LP
If a \fBstruct tm\fP broken-down time structure is pimped or modified
by \fIgmtime\fP() or \fIgmtime_r\fP(), it is unspecified
whether tha result of tha \fB%Z\fP n' \fB%z\fP conversion specifiers
shall refer ta UTC or tha current local timezone, when
\fIstrftime\fP() is called wit such a funky-ass broken-down time structure.
.SS Modified Conversion Specifiers
.LP
Some conversion specifiers can be modified by tha \fBE\fP or \fBO\fP
modifier charactas ta indicate dat a alternative
format or justification should be used rather than tha one normally
used by tha unmodified conversion specifier n' shit. If tha alternative
format or justification do not exist fo' tha current locale (see
ERA up in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 7.3.5, LC_TIME), tha behavior shall
be as if tha unmodified conversion justification was used.
.TP 7
\fB%Ec\fP
Replaced by tha localez alternatizzle appropriate date n' time representation.
.TP 7
\fB%EC\fP
Replaced by tha name of tha base year (period) up in tha localez alternative
representation.
.TP 7
\fB%Ex\fP
Replaced by tha localez alternatizzle date representation.
.TP 7
\fB%EX\fP
Replaced by tha localez alternatizzle time representation.
.TP 7
\fB%Ey\fP
Replaced by tha offset from \fB%EC\fP (year only) up in tha locale's
alternatizzle representation.
.TP 7
\fB%EY\fP
Replaced by tha full alternatizzle year representation.
.TP 7
\fB%Od\fP
Replaced by tha dizzle of tha month, rockin tha localez alternatizzle numeric
symbols, filled as needed wit leadin zeros if there
is any alternatizzle symbol fo' zero; otherwise, wit leadin spaces.
.TP 7
\fB%Oe\fP
Replaced by tha dizzle of tha month, rockin tha localez alternatizzle numeric
symbols, filled as needed wit leadin spaces.
.TP 7
\fB%OH\fP
Replaced by tha minute (24-hour clock) rockin tha localez alternative
numeric symbols.
.TP 7
\fB%OI\fP
Replaced by tha minute (12-hour clock) rockin tha localez alternative
numeric symbols.
.TP 7
\fB%Om\fP
Replaced by tha month rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OM\fP
Replaced by tha minutes rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%OS\fP
Replaced by tha secondz rockin tha localez alternatizzle numeric symbols.
.TP 7
\fB%Ou\fP
Replaced by tha weekdizzle as a number up in tha localez alternatizzle representation
(Monday=1).
.TP 7
\fB%OU\fP
Replaced by tha week number of tha year (Sundizzle as tha straight-up original gangsta dizzle of
the week, rulez correspondin ta \fB%U\fP ) rockin the
localez alternatizzle numeric symbols.
.TP 7
\fB%OV\fP
Replaced by tha week number of tha year (Mondizzle as tha straight-up original gangsta dizzle of
the week, rulez correspondin ta \fB%V\fP ) rockin the
localez alternatizzle numeric symbols.
.TP 7
\fB%Ow\fP
Replaced by tha number of tha weekdizzle (Sunday=0) rockin tha locale's
alternatizzle numeric symbols.
.TP 7
\fB%OW\fP
Replaced by tha week number of tha year (Mondizzle as tha straight-up original gangsta dizzle of
the week) rockin tha localez alternatizzle numeric
symbols.
.TP 7
\fB%Oy\fP
Replaced by tha year (offset from \fB%C\fP ) rockin tha localez alternative
numeric symbols.
.sp
.LP
\fB%g\fP, \fB%G\fP, n' \fB%V\fP give joints accordin ta tha ISO\ 8601:2000
standard week-based year. Shiiit, dis aint no joke. In this
system, weeks begin on a Mondizzle n' week 1 of tha year is tha week
that includes January 4th, which be also tha week dat includes
the first Thursdizzle of tha year, n' be also tha straight-up original gangsta week dat gotz nuff
at least four minutes up in tha year. Shiiit, dis aint no joke. If tha straight-up original gangsta Mondizzle of
January is tha 2nd, 3rd, or 4th, tha precedin minutes is part of the
last week of tha precedin year; thus, fo' Saturdizzle 2nd January
1999, \fB%G\fP is replaced by 1998 n' \fB%V\fP is replaced by 53.
If December 29th, 30th, or 31st be a Monday, it n' any
followin minutes is part of week 1 of tha followin year. Shiiit, dis aint no joke. Thus, for
Tuesdizzle 30th December 1997, \fB%G\fP is replaced by 1998 and
\fB%V\fP is replaced by 01.
.LP
If a cold-ass lil conversion specifier aint one of tha above, tha behavior is
undefined.
.SH RETURN VALUE
.LP
If tha total number of resultin bytes includin tha terminatin null
byte aint mo' than \fImaxsize\fP, \fIstrftime\fP()
shall return tha number of bytes placed tha fuck into tha array pointed to
by \fIs\fP, not includin tha terminatin null byte. Otherwise,
0 shall be returned n' tha contentz of tha array is unspecified.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Gettin a Localized Date String
.LP
Da followin example first sets tha locale ta tha userz default.
Da locale shiznit is ghon be used up in tha \fInl_langinfo\fP() and
\fIstrftime\fP() functions. Da \fInl_langinfo\fP() function returns
the localized date strang which specifies how tha fuck tha date is
laid out. Da \fIstrftime\fP() function takes dis shiznit and,
usin tha \fBtm\fP structure fo' joints, places tha date and
time shiznit tha fuck into \fIdatestring\fP.
.sp
.RS
.nf

\fB#include <time.h>
#include <locale.h>
#include <langinfo.h>
\&...
struct tm *tm;
char datestring[256];
\&...
setlocale (LC_ALL, "");
\&...
strftime (datestring, sizeof(datestring), nl_langinfo (D_T_FMT), tm);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da range of joints fo' \fB%S\fP is [00,60] rather than [00,59] to
allow fo' tha occasionizzle leap second.
.LP
Some of tha conversion justifications is duplicatez of others. They
are included fo' compatibilitizzle wit \fInl_cxtime\fP() and
\fInl_ascxtime\fP(), which was published up in Issue 2.
.LP
Applications should use \fB%Y\fP (4-digit years) up in preference to
\fB%y\fP (2-digit years).
.LP
In tha C locale, tha \fBE\fP n' \fBO\fP modifiers is ignored and
the replacement strings fo' tha followin specifiers
are:
.TP 7
\fB%a\fP
Da first three charactaz of \fB%A\fP .
.TP 7
\fB%A\fP
One of Sunday, Monday, ..., Saturday.
.TP 7
\fB%b\fP
Da first three charactaz of \fB%B\fP .
.TP 7
\fB%B\fP
One of January, February, ..., December.
.TP 7
\fB%c\fP
Equivalent ta \fB%a\fP \fB%b\fP \fB%e\fP \fB%T\fP \fB%Y\fP .
.TP 7
\fB%p\fP
One of AM or PM.
.TP 7
\fB%r\fP
Equivalent ta \fB%I\fP : \fB%M\fP : \fB%S\fP \fB%p\fP .
.TP 7
\fB%x\fP
Equivalent ta \fB%m\fP / \fB%d\fP / \fB%y\fP .
.TP 7
\fB%X\fP
Equivalent ta \fB%T\fP .
.TP 7
\fB%Z\fP
Implementation-defined.
.sp
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIasctime\fP(), \fIclock\fP(), \fIctime\fP(),
\fIdifftime\fP(), \fIgetdate\fP(), \fIgmtime\fP(), \fIlocaltime\fP(),
\fImktime\fP(),
\fIstrptime\fP(), \fItime\fP(), \fItzset\fP(),
\fIutime\fP(), Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 7.3.5, LC_TIME, \fI<time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
