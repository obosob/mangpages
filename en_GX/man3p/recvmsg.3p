.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "RECVMSG" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" recvmsg 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
recvmsg \- receive a message from a socket
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
ssize_t recvmsg(int\fP \fIsocket\fP\fB, struct msghdr *\fP\fImessage\fP\fB,
int\fP \fIflags\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIrecvmsg\fP() function shall receive a message from a cold-ass lil connection-mode
or connectionless-mode socket. Well shiiiit, it is normally used
with connectionless-mode sockets cuz it permits tha application
to retrieve tha source address of received data.
.LP
Da \fIrecvmsg\fP() function takes tha followin arguments:
.TP 7
\fIsocket\fP
Specifies tha socket file descriptor.
.TP 7
\fImessage\fP
Points ta a \fBmsghdr\fP structure, containin both tha buffer to
store tha source address n' tha buffers fo' tha incoming
message. Da length n' format of tha address depend on tha address
family of tha socket. Da \fImsg_flags\fP member is ignored on
input yo, but may contain meaningful joints on output.
.TP 7
\fIflags\fP
Specifies tha type of message reception. I aint talkin' bout chicken n' gravy biatch. Valuez of dis argument are
formed by logically OR'in zero or mo' of tha following
values: 
.TP 7
MSG_OOB
.RS
Requests out-of-band data. Da significizzle n' semantics of out-of-band
data is protocol-specific.
.RE
.TP 7
MSG_PEEK
.RS
Peeks all up in tha incomin message.
.RE
.TP 7
MSG_WAITALL
.RS
On SOCK_STREAM sockets dis requests dat tha function block until
the full amount of data can be returned. Y'all KNOW dat shit, muthafucka! Da function may
return tha smalla amount of data if tha socket be a message-based
socket, if a signal is caught, if tha connection is terminated,
if MSG_PEEK was specified, or if a error is pendin fo' tha socket.
.RE
.sp
.sp
.LP
Da \fIrecvmsg\fP() function shall receive lyrics from unconnected
or connected sockets n' shall return tha length of the
message.
.LP
Da \fIrecvmsg\fP() function shall return tha total length of the
message. For message-based sockets, like fuckin SOCK_DGRAM and
SOCK_SEQPACKET, tha entire message shall be read up in a single operation.
If a message is too long ta fit up in tha supplied buffers,
and MSG_PEEK aint set up in tha \fIflags\fP argument, tha excess bytes
shall be discarded, n' MSG_TRUNC shall be set up in the
\fImsg_flags\fP gangmember of tha \fBmsghdr\fP structure. For stream-based
sockets, like fuckin SOCK_STREAM, message boundaries shall be
ignored. Y'all KNOW dat shit, muthafucka! In dis case, data shall be moonwalked back ta tha user as soon
as it becomes available, n' no data shall be discarded.
.LP
If tha MSG_WAITALL flag aint set, data shall be returned only up
to tha end of tha straight-up original gangsta message.
.LP
If no lyrics is available all up in tha socket n' O_NONBLOCK aint set
on tha socketz file descriptor, \fIrecvmsg\fP() shall
block until a message arrives. If no lyrics is available at the
socket n' O_NONBLOCK is set on tha socketz file descriptor,
the \fIrecvmsg\fP() function shall fail n' set \fIerrno\fP ta [EAGAIN]
or [EWOULDBLOCK].
.LP
In tha \fBmsghdr\fP structure, tha \fImsg_name\fP n' \fImsg_namelen\fP
thugz specify tha source address if tha socket is
unconnected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha socket is connected, tha \fImsg_name\fP n' \fImsg_namelen\fP
thugz shall be ignored. Y'all KNOW dat shit, muthafucka! Da \fImsg_name\fP
member may be a null pointa if no names is desired or required.
Da \fImsg_iov\fP n' \fImsg_iovlen\fP fieldz is used to
specify where tha received data shall be stored. Y'all KNOW dat shit, muthafucka! \fImsg_iov\fP points
to a array of \fBiovec\fP structures; \fImsg_iovlen\fP
shall be set ta tha dimension of dis array. In each \fBiovec\fP structure,
the \fIiov_base\fP field specifies a storage area and
the \fIiov_len\fP field gives its size up in bytes. Each storage area
indicated by \fImsg_iov\fP is filled wit received data in
turn until all of tha received data is stored or all of tha areas
have been filled.
.LP
Upon successful completion, tha \fImsg_flags\fP gangmember of tha message
header shall be tha bitwise-inclusive OR of all of the
followin flags dat indicate conditions detected fo' tha received
message:
.TP 7
MSG_EOR
End-of-record was received (if supported by tha protocol).
.TP 7
MSG_OOB
Out-of-band data was received.
.TP 7
MSG_TRUNC
Normal data was truncated.
.TP 7
MSG_CTRUNC
Control data was truncated.
.sp
.SH RETURN VALUE
.LP
Upon successful completion, \fIrecvmsg\fP() shall return tha length
of tha message up in bytes. If no lyrics is available ta be
received n' tha peer has performed a orderly shutdown, \fIrecvmsg\fP()
shall return 0. Otherwise, -1 shall be returned and
\fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIrecvmsg\fP() function shall fail if:
.TP 7
.B EAGAIN \fRor\fP EWOULDBLOCK
.sp
Da socketz file descriptor is marked O_NONBLOCK n' no data is waiting
to be received; or MSG_OOB is set n' no out-of-band data
is available n' either tha socketz file descriptor is marked O_NONBLOCK
or tha socket do not support blockin ta await
out-of-band data.
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid open file descriptor.
.TP 7
.B ECONNRESET
A connection was forcibly closed by a peer.
.TP 7
.B EINTR
This function was interrupted by a signal before any data was available.
.TP 7
.B EINVAL
Da sum of tha \fIiov_len\fP joints overflows a \fBssize_t\fP, or
the MSG_OOB flag is set n' no out-of-band data is
available.
.TP 7
.B EMSGSIZE
Da \fImsg_iovlen\fP gangmember of tha \fBmsghdr\fP structure pointed
to by \fImessage\fP is less than or equal ta 0, or is
greata than {IOV_MAX}.
.TP 7
.B ENOTCONN
A receive be attempted on a cold-ass lil connection-mode socket dat aint connected.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.TP 7
.B EOPNOTSUPP
Da specified flags is not supported fo' dis socket type.
.TP 7
.B ETIMEDOUT
Da connection timed up durin connection establishment, or due to
a transmission timeout on actizzle connection.
.sp
.LP
Da \fIrecvmsg\fP() function may fail if:
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta tha file system.
.TP 7
.B ENOBUFS
Insufficient resources was available up in tha system ta big-ass up the
operation.
.TP 7
.B ENOMEM
Insufficient memory was available ta fulfill tha request.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIselect\fP() n' \fIpoll\fP() functions can
be used ta determine when data be available ta be received.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpoll\fP(), \fIrecv\fP(), \fIrecvfrom\fP(),
\fIselect\fP(), \fIsend\fP(), \fIsendmsg\fP(),
\fIsendto\fP(), \fIshutdown\fP(), \fIsocket\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
