.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "DIRNAME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" dirname 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
dirname \- report tha parent directory name of a gangbangin' file pathname
.SH SYNOPSIS
.LP
\fB#include <libgen.h>
.br
.sp
char *dirname(char *\fP\fIpath\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIdirname\fP() function shall take a pointa ta a cold-ass lil characta string
that gotz nuff a pathname, n' return a pointa ta a
strin dat be a pathname of tha parent directory of dat file. Trailing
\fB'/'\fP charactas up in tha path is not counted as
part of tha path.
.LP
If \fIpath\fP do not contain a \fB'/'\fP, then \fIdirname\fP()
shall return a pointa ta tha strang \fB"."\fP . If
\fIpath\fP be a null pointa or points ta a empty string, \fIdirname\fP()
shall return a pointa ta tha strang \fB"."\fP
\&.
.LP
Da \fIdirname\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe.
.SH RETURN VALUE
.LP
Da \fIdirname\fP() function shall return a pointa ta a strang that
is tha parent directory of \fIpath\fP. If \fIpath\fP is
a null pointa or points ta a empty string, a pointa ta a string
\fB"."\fP is returned.
.LP
Da \fIdirname\fP() function may modify tha strang pointed ta by \fIpath\fP,
and may return a pointa ta static storage that
may then be overwritten by subsequent calls ta \fIdirname\fP().
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
Da followin code fragment readz a pathname, chizzlez tha current
workin directory ta tha parent directory, n' opens the
file.
.sp
.RS
.nf

\fBchar path[PATH_MAX], *pathcopy;
int fd;
fgets(path, PATH_MAX, stdin);
pathcopy = strdup(path);
chdir(dirname(pathcopy));
fd = open(basename(path), O_RDONLY);
\fP
.fi
.RE
.SS Sample Input n' Output Strings fo' dirname()
.LP
In tha followin table, tha input strang is tha value pointed ta by
\fIpath\fP, n' tha output strang is tha return value of
the \fIdirname\fP() function.
.TS C
center; l l.
\fBInput String\fP	\fBOutput String\fP
"/usr/lib"	"/usr"
"/usr/"	"/"
"usr"	"."
"/"	"/"
"."	"."
".."	"."
.TE
.SS Changin tha Current Directory ta tha Parent Directory
.LP
Da followin program fragment readz a pathname, chizzlez tha current
workin directory ta tha parent directory, n' opens the
file.
.sp
.RS
.nf

\fB#include <unistd.h>
#include <limits.h>
#include <stdio.h>
#include <fcntl.h>
#include <string.h>
#include <libgen.h>
\&...
char path[PATH_MAX], *pathcopy;
int fd;
\&...
fgets(path, PATH_MAX, stdin);
pathcopy = strdup(path);
chdir(dirname(pathcopy));
fd = open(basename(path), O_RDONLY);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da \fIdirname\fP() n' \fIbasename\fP() functions together yield
a complete
pathname. Da expression \fIdirname\fP(\fIpath\fP) obtains tha pathname
of tha directory where \fIbasename\fP(\fIpath\fP) is
found.
.LP
Since tha meanin of tha leadin \fB"//"\fP is implementation-defined,
\fIdirname\fP(" \fB//foo\fP) may return either
\fB"//"\fP or \fB'/'\fP (but not a god damn thang else).
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIbasename\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<libgen.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
