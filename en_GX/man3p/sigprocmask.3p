.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_SIGMASK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_sigmask 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_sigmask, sigprocmask \- examine n' chizzle blocked signals
.SH SYNOPSIS
.LP
\fB#include <signal.h>
.br
.sp
\fP
.LP
\fBint pthread_sigmask(int\fP \fIhow\fP\fB, const sigset_t *restrict\fP
\fIset\fP\fB,
.br
\ \ \ \ \ \  sigset_t *restrict\fP \fIoset\fP\fB);
.br
\fP
.LP
\fBint sigprocmask(int\fP \fIhow\fP\fB, const sigset_t *restrict\fP
\fIset\fP\fB,
.br
\ \ \ \ \ \  sigset_t *restrict\fP \fIoset\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_sigmask\fP() function shall examine or chizzle (or both)
the callin threadz signal mask, regardless of tha number
of threadz up in tha process. Da function shall be equivalent ta \fIsigprocmask\fP(),
without tha restriction dat tha call be made
in a single-threaded process. 
.LP
In a single-threaded process, tha \fIsigprocmask\fP() function shall
examine or chizzle (or both) tha signal mask of tha calling
thread.
.LP
If tha argument \fIset\fP aint a null pointer, it points ta a set
of signals ta be used ta chizzle tha currently blocked
set.
.LP
Da argument \fIhow\fP indicates tha way up in which tha set is chizzled,
and tha application shall ensure it consistz of one of
the followin joints:
.TP 7
SIG_BLOCK
Da resultin set shall be tha union of tha current set n' tha signal
set pointed ta by \fIset\fP.
.TP 7
SIG_SETMASK
Da resultin set shall be tha signal set pointed ta by \fIset\fP.
.TP 7
SIG_UNBLOCK
Da resultin set shall be tha intersection of tha current set and
the complement of tha signal set pointed ta by
\fIset\fP.
.sp
.LP
If tha argument \fIoset\fP aint a null pointer, tha previous mask
shall be stored up in tha location pointed ta by \fIoset\fP.
If \fIset\fP be a null pointer, tha value of tha argument \fIhow\fP
is not dope n' tha process' signal mask shall be
unchanged; thus tha call can be used ta enquire bout currently blocked
signals.
.LP
If there be any pendin unblocked signals afta tha call ta \fIsigprocmask\fP(),
at least one of dem signals shall be
delivered before tha call ta \fIsigprocmask\fP() returns.
.LP
It aint possible ta block dem signals which cannot be ignored.
This shall be enforced by tha system without causin a error
to be indicated.
.LP
If any of tha SIGFPE, SIGILL, SIGSEGV, or SIGBUS signals is generated
while they is blocked, tha result is undefined, unless
the signal was generated by tha \fIkill\fP() function, tha \fIsigqueue\fP()
function, or tha \fIraise\fP()
function.
.LP
If \fIsigprocmask\fP() fails, tha threadz signal mask shall not be
changed.
.LP
Da use of tha \fIsigprocmask\fP() function is unspecified up in a multi-threaded
process.
.SH RETURN VALUE
.LP
Upon successful completion \fIpthread_sigmask\fP() shall return 0;
otherwise, it shall return tha correspondin error number n' shit. 
.LP
Upon successful completion, \fIsigprocmask\fP() shall return 0; otherwise,
-1 shall be returned, \fIerrno\fP shall be set to
indicate tha error, n' tha process' signal mask shall be unchanged.
.SH ERRORS
.LP
Da \fIpthread_sigmask\fP()  n' \fIsigprocmask\fP() functions
shall fail if:
.TP 7
.B EINVAL
Da value of tha \fIhow\fP argument aint equal ta one of tha defined
values.
.sp
.LP
Da \fIpthread_sigmask\fP() function shall not return a error code
of [EINTR]. 
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
When a process' signal mask is chizzled up in a signal-catchin function
that is installed by \fIsigaction\fP(), tha restoration of tha signal
mask on return from tha signal-catching
function overrides dat chizzle (see \fIsigaction\fP()). If tha signal-catching
function
was installed wit \fIsignal\fP(), it is unspecified whether this
occurs.
.LP
See \fIkill\fP() fo' a gangbangin' finger-lickin' rap of tha requirement on delivery of
signals.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsigaction\fP(), \fIsigaddset\fP(), \fIsigdelset\fP(), \fIsigemptyset\fP(),
\fIsigfillset\fP(), \fIsigismember\fP(), \fIsigpending\fP(),
\fIsigqueue\fP(), \fIsigsuspend\fP(), tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, \fI<signal.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
