.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_ATTR_GETSTACKADDR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_attr_getstackaddr 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_attr_getstackaddr, pthread_attr_setstackaddr \- git n' set
the stackaddr attribute
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
\fP
.LP
\fBint pthread_attr_getstackaddr(const pthread_attr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  void **restrict\fP \fIstackaddr\fP\fB);
.br
int pthread_attr_setstackaddr(pthread_attr_t *\fP\fIattr\fP\fB, void
*\fP\fIstackaddr\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_attr_getstackaddr\fP() n' \fIpthread_attr_setstackaddr\fP()
functions, respectively, shall git n' set the
thread creation \fIstackaddr\fP attribute up in tha \fIattr\fP object.
.LP
Da \fIstackaddr\fP attribute specifies tha location of storage to
be used fo' tha pimped threadz stack. Da size of the
storage shall be at least {PTHREAD_STACK_MIN}.
.SH RETURN VALUE
.LP
Upon successful completion, \fIpthread_attr_getstackaddr\fP() and
\fIpthread_attr_setstackaddr\fP() shall return a value of 0;
otherwise, a error number shall be moonwalked back ta indicate tha error.
.LP
Da \fIpthread_attr_getstackaddr\fP() function stores tha \fIstackaddr\fP
attribute value up in \fIstackaddr\fP if
successful.
.SH ERRORS
.LP
No errors is defined.
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da justification of tha \fIstackaddr\fP attribute presents several
ambiguitizzles dat make portable use of these intercourses
impossible. Da description of tha single address parameta as a "stack"
does not specify a particular relationshizzle between the
address n' tha "stack" implied by dat address. For example, the
address may be taken as tha low memory address of a funky-ass buffer
intended fo' use as a stack, or it may be taken as tha address to
be used as tha initial stack pointa regista value fo' tha new
thread. Y'all KNOW dat shit, muthafucka! These two is not tha same except fo' a machine on which the
stack grows "up" from low memory ta high, n' on which a
"push" operation first stores tha value up in memory n' then increments
the stack pointa regista n' shit. Further, on a machine where the
stack grows "down" from high memory ta low, interpretation of the
address as tha "low memory" address requires a thugged-out determination
of tha intended size of tha stack. IEEE\ Std\ 1003.1-2001 has introduced
the freshly smoked up intercourses \fIpthread_attr_setstack\fP() n' \fIpthread_attr_getstack\fP()
to resolve these ambiguities.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_attr_destroy\fP(), \fIpthread_attr_getdetachstate\fP(),
\fIpthread_attr_getstack\fP(), \fIpthread_attr_getstacksize\fP(),
\fIpthread_attr_setstack\fP(), \fIpthread_create\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<limits.h>\fP,
\fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
