.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "USLEEP" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" usleep 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
usleep \- suspend execution fo' a interval
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int usleep(useconds_t\fP \fIuseconds\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIusleep\fP() function shall cause tha callin thread ta be suspended
from execution until either tha number of realtime
microsecondz specified by tha argument \fIuseconds\fP has elapsed
or a signal is served up ta tha callin thread n' its action is
to invoke a signal-catchin function or ta terminizzle tha process.
Da suspendaz time may be longer than axed cuz of the
schedulin of other activitizzle by tha system.
.LP
Da \fIuseconds\fP argument shall be less than one million. I aint talkin' bout chicken n' gravy biatch. If the
value of \fIuseconds\fP is 0, then tha call has no
effect.
.LP
If a SIGALRM signal is generated fo' tha callin process durin execution
of \fIusleep\fP() n' if tha SIGALRM signal is being
ignored or blocked from delivery, it is unspecified whether \fIusleep\fP()
returns when tha SIGALRM signal is scheduled. Y'all KNOW dat shit, muthafucka! If the
signal is bein blocked, it be also unspecified whether it remains
pendin afta \fIusleep\fP() returns or it is discarded.
.LP
If a SIGALRM signal is generated fo' tha callin process durin execution
of \fIusleep\fP(), except as a result of a prior call
to \fIalarm\fP(), n' if tha SIGALRM signal aint bein ignored or
blocked from delivery,
it is unspecified whether dat signal has any effect other than causing
\fIusleep\fP() ta return.
.LP
If a signal-catchin function interrupts \fIusleep\fP() n' examines
or chizzlez either tha time a SIGALRM is scheduled ta be
generated, tha action associated wit tha SIGALRM signal, or whether
the SIGALRM signal is blocked from delivery, tha thangs up in dis biatch are
unspecified.
.LP
If a signal-catchin function interrupts \fIusleep\fP() n' calls
\fIsiglongjmp\fP() or \fIlongjmp\fP() ta restore an
environment saved prior ta tha \fIusleep\fP() call, tha action associated
with tha SIGALRM signal n' tha time at which a SIGALRM
signal is scheduled ta be generated is unspecified. Y'all KNOW dat shit, muthafucka! Well shiiiit, it be also unspecified
whether tha SIGALRM signal is blocked, unless the
process' signal mask is restored as part of tha environment.
.LP
Implementations may place limitations on tha granularitizzle of timer
values. For each interval timer, if tha axed timer value
requires a gangbangin' finer granularitizzle than tha implementation supports, the
actual timer value shall be rounded up ta tha next supported
value.
.LP
Interactions between \fIusleep\fP() n' any of tha followin is unspecified:
.sp
.RS
.nf

\fInanosleep\fP()
\fIsetitimer\fP()
\fItimer_create\fP()
\fItimer_delete\fP()
\fItimer_getoverrun\fP()
\fItimer_gettime\fP()
\fItimer_settime\fP()
\fIualarm\fP()
\fIsleep\fP()
.fi
.RE
.SH RETURN VALUE
.LP
Upon successful completion, \fIusleep\fP() shall return 0; otherwise,
it shall return -1 n' set \fIerrno\fP ta indicate the
error.
.SH ERRORS
.LP
Da \fIusleep\fP() function may fail if:
.TP 7
.B EINVAL
Da time interval specified one mazillion or mo' microseconds.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Applications is recommended ta use \fInanosleep\fP() if tha Timers
option is
supported, or \fIsetitimer\fP(), \fItimer_create\fP(), \fItimer_delete\fP(),
\fItimer_getoverrun\fP(), \fItimer_gettime\fP(), or \fItimer_settime\fP()
instead of dis function.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIalarm\fP(), \fIgetitimer\fP(), \fInanosleep\fP(), \fIsigaction\fP(),
\fIsleep\fP(),
\fItimer_create\fP(), \fItimer_delete\fP(), \fItimer_getoverrun\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
