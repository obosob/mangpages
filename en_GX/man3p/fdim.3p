.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FDIM" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fdim 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fdim, fdimf, fdiml \- compute positizzle difference between two floating-point
numbers
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double fdim(double\fP \fIx\fP\fB, double\fP \fIy\fP\fB);
.br
float fdimf(float\fP \fIx\fP\fB, float\fP \fIy\fP\fB);
.br
long double fdiml(long double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall determine tha positizzle difference between their
arguments, n' you can put dat on yo' toast. If \fIx\fP is pimped outa than \fIy\fP, \fIx\fP-
\fIy\fP is returned. Y'all KNOW dat shit, muthafucka! If \fIx\fP is less than or equal ta \fIy\fP,
+0 is returned.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha positive
difference value.
.LP
If \fIx\fP- \fIy\fP is positizzle n' overflows, a range error shall
occur n' \fIfdim\fP(), \fIfdimf\fP(), n' \fIfdiml\fP()
shall return tha value of tha macro HUGE_VAL, HUGE_VALF, n' HUGE_VALL,
respectively.
.LP
If \fIx\fP- \fIy\fP is positizzle n' underflows, a range error may
occur, n' either ( \fIx\fP- \fIy\fP) (if representable),
\ or 0.0 (if supported),  or a implementation-defined value
shall be returned.
.LP
If
\fIx\fP or \fIy\fP is NaN, a NaN shall be returned. Y'all KNOW dat shit, muthafucka! 
.SH ERRORS
.LP
Da \fIfdim\fP() function shall fail if:
.TP 7
Range\ Error
Da result overflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.sp
.LP
Da \fIfdim\fP() function may fail if:
.TP 7
Range\ Error
Da result underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On implementations supportin IEEE\ Std\ 754-1985, \fIx\fP- \fIy\fP
cannot underflow, n' hence tha 0.0 return value
is shaded as a extension fo' implementations supportin tha XSI extension
rather than a MX extension.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIfmax\fP(), \fIfmin\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
