.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FLOOR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" floor 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
floor, floorf, floorl \- floor function
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double floor(double\fP \fIx\fP\fB);
.br
float floorf(float\fP \fIx\fP\fB);
.br
long double floorl(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute tha phattest integral value not pimped outer
than \fIx\fP.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha phattest
integral value not pimped outa than \fIx\fP, expressed as a
\fBdouble\fP, \fBfloat\fP, or \fBlong double\fP, as appropriate for
the return type of tha function.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0 or \(+-Inf, \fIx\fP shall be returned. Y'all KNOW dat shit, muthafucka! 
.LP
If tha erect value would cause overflow, a range error shall occur
and \fIfloor\fP(), \fIfloorf\fP(), n' \fIfloorl\fP() shall
return tha value of tha macro -HUGE_VAL, -HUGE_VALF, n' -HUGE_VALL,
respectively. 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Range\ Error
Da result would cause a overflow. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da integral value returned by these functions might not be expressible
as a \fBint\fP or \fBlong\fP. Da return value should
be tested before assignin it ta a integer type ta avoid tha undefined
resultz of a integer overflow.
.LP
Da \fIfloor\fP() function can only overflow when tha floating-point
representation has DBL_MANT_DIG > DBL_MAX_EXP.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIceil\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
