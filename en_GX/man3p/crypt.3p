.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CRYPT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" crypt 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
crypt \- strang encodin function (\fBCRYPT\fP)
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
char *crypt(const char *\fP\fIkey\fP\fB, const char *\fP\fIsalt\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIcrypt\fP() function be a strang encodin function. I aint talkin' bout chicken n' gravy biatch. Da algorithm
is implementation-defined.
.LP
Da \fIkey\fP argument points ta a strang ta be encoded. Y'all KNOW dat shit, muthafucka! Da \fIsalt\fP
argument be a strang chosen from tha set:
.sp
.RS
.nf

\fBa b c d e f g h i j k l m n o p q r s t u v w x y z
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
0 1 2 3 4 5 6 7 8 9 . /
\fP
.fi
.RE
.LP
Da first two charactaz of dis strang may be used ta perturb the
encodin algorithm.
.LP
Da return value of \fIcrypt\fP() points ta static data dat is overwritten
by each call.
.LP
Da \fIcrypt\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe.
.SH RETURN VALUE
.LP
Upon successful completion, \fIcrypt\fP() shall return a pointa to
the encoded string. Da first two charactaz of the
returned value shall be dem of tha \fIsalt\fP argument. Otherwise,
it shall return a null pointa n' set \fIerrno\fP to
indicate tha error.
.SH ERRORS
.LP
Da \fIcrypt\fP() function shall fail if:
.TP 7
.B ENOSYS
Da functionalitizzle aint supported on dis implementation.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Encodin Passwords
.LP
Da followin example findz a user database entry matchin a particular
user name n' chizzlez tha current password ta a new
password. Y'all KNOW dat shit, muthafucka! Da \fIcrypt\fP() function generates a encoded version
of each password. Y'all KNOW dat shit, muthafucka! Da first call ta \fIcrypt\fP() produces an
encoded version of tha oldschool password; dat encoded password is then
compared ta tha password stored up in tha user database. Da second
call ta \fIcrypt\fP() encodes tha freshly smoked up password before it is stored.
.LP
Da \fIputpwent\fP() function, used up in tha followin example, is not
part of IEEE\ Std\ 1003.1-2001.
.sp
.RS
.nf

\fB#include <unistd.h>
#include <pwd.h>
#include <string.h>
#include <stdio.h>
\&...
int valid_change;
int pfd;  /* Integer fo' file descriptor returned by open(). */
FILE *fpfd;  /* File pointa fo' use up in putpwent(). */
struct passwd *p;
char user[100];
char oldpasswd[100];
char newpasswd[100];
char savepasswd[100];
\&...
valid_change = 0;
while ((p = getpwent()) != NULL) {
    /* Chizzle entry if found. Y'all KNOW dat shit, muthafucka! */
    if (strcmp(p->pw_name, user) == 0) {
        if (strcmp(p->pw_passwd, crypt(oldpasswd, p->pw_passwd)) == 0) {
            strcpy(savepasswd, crypt(newpasswd, user));
            p->pw_passwd = savepasswd;
            valid_change = 1;
        }
        else {
            fprintf(stderr, "Oldskool password aint valid\\n");
        }
    }
    /* Put passwd entry tha fuck into ptmp. */
    putpwent(p, fpfd);
}
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da joints returned by dis function need not be portable among XSI-conformant
systems.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIencrypt\fP(), \fIsetkey\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
