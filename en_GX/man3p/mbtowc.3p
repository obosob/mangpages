.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MBTOWC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mbtowc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mbtowc \- convert a cold-ass lil characta ta a wide-characta code
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
int mbtowc(wchar_t *restrict\fP \fIpwc\fP\fB, const char *restrict\fP
\fIs\fP\fB, size_t\fP \fIn\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
If \fIs\fP aint a null pointer, \fImbtowc\fP() shall determine the
number of bytes dat constitute tha characta pointed to
by \fIs\fP. Well shiiiit, it shall then determine tha wide-characta code fo' the
value of type \fBwchar_t\fP dat correspondz ta that
character n' shit. (Da value of tha wide-characta code correspondin to
the null byte is 0.) If tha characta is valid n' \fIpwc\fP is
not a null pointer, \fImbtowc\fP() shall store tha wide-character
code up in tha object pointed ta by \fIpwc\fP.
.LP
Da behavior of dis function be affected by tha \fILC_CTYPE\fP category
of tha current locale. For a state-dependent encoding,
this function is placed tha fuck into its initial state by a cold-ass lil call fo' which
its characta pointa argument, \fIs\fP, be a null pointer.
Subsequent calls wit \fIs\fP as other than a null pointa shall cause
the internal state of tha function ta be altered as
necessary fo' realz. A call wit \fIs\fP as a null pointa shall cause this
function ta return a non-zero value if encodings have state
dependency, n' 0 otherwise. If tha implementation employs special
bytes ta chizzle tha shift state, these bytes shall not produce
separate wide-characta codes yo, but shall be grouped wit a adjacent
character n' shit. Changin tha \fILC_CTYPE\fP category causes the
shift state of dis function ta be unspecified. Y'all KNOW dat shit, muthafucka! At most \fIn\fP bytes
of tha array pointed ta by \fIs\fP shall be examined.
.LP
Da implementation shall behave as if no function defined up in this
volume of IEEE\ Std\ 1003.1-2001 calls
\fImbtowc\fP().
.SH RETURN VALUE
.LP
If \fIs\fP be a null pointer, \fImbtowc\fP() shall return a non-zero
or 0 value, if characta encodings, respectively, do or
do not have state-dependent encodings. If \fIs\fP aint a null pointer,
\fImbtowc\fP() shall either return 0 (if \fIs\fP points
to tha null byte), or return tha number of bytes dat constitute the
converted characta (if tha next \fIn\fP or fewer bytes form
a valid character), or return -1  n' may set \fIerrno\fP ta indicate
the error  (if they do not form a valid character).
.LP
In no case shall tha value returned be pimped outa than \fIn\fP or the
value of tha {MB_CUR_MAX} macro.
.SH ERRORS
.LP
Da \fImbtowc\fP() function may fail if:
.TP 7
.B EILSEQ
Invalid characta sequence is detected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImblen\fP(), \fImbstowcs\fP(), \fIwctomb\fP(), \fIwcstombs\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
