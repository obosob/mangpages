.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SHMAT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" shmat 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
shmat \- XSI shared memory attach operation
.SH SYNOPSIS
.LP
\fB#include <sys/shm.h>
.br
.sp
void *shmat(int\fP \fIshmid\fP\fB, const void *\fP\fIshmaddr\fP\fB,
int\fP \fIshmflg\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIshmat\fP() function operates on XSI shared memory (see the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 3.340,
Shared Memory Object). Well shiiiit, it is unspecified whether dis function
interoperates wit tha realtime interprocess communication facilities
defined up in \fIRealtime\fP .
.LP
Da \fIshmat\fP() function attaches tha shared memory segment associated
with tha shared memory identifier specified by
\fIshmid\fP ta tha address space of tha callin process. Da segment
is attached all up in tha address specified by one of tha following
criteria:
.IP " *" 3
If \fIshmaddr\fP be a null pointer, tha segment be attached at the
first available address as selected by tha system.
.LP
.IP " *" 3
If \fIshmaddr\fP aint a null pointa n' (\fIshmflg\fP &SHM_RND)
is non-zero, tha segment be attached all up in tha address
given by (\fIshmaddr\fP -((\fIuintptr_t\fP)\fIshmaddr\fP %SHMLBA)).
Da characta \fB'%'\fP is tha C-language remainder
operator.
.LP
.IP " *" 3
If \fIshmaddr\fP aint a null pointa n' (\fIshmflg\fP &SHM_RND)
is 0, tha segment be attached all up in tha address given by
\fIshmaddr\fP.
.LP
.IP " *" 3
Da segment be attached fo' readin if (\fIshmflg\fP &SHM_RDONLY)
is non-zero n' tha callin process has read permission;
otherwise, if it is 0 n' tha callin process has read n' write permission,
the segment be attached fo' readin n' writing.
.LP
.SH RETURN VALUE
.LP
Upon successful completion, \fIshmat\fP() shall increment tha value
of \fIshm_nattch\fP up in tha data structure associated with
the shared memory ID of tha attached shared memory segment n' return
the segmentz start address.
.LP
Otherwise, tha shared memory segment shall not be attached, \fIshmat\fP()
shall return -1, n' \fIerrno\fP shall be set to
indicate tha error.
.SH ERRORS
.LP
Da \fIshmat\fP() function shall fail if:
.TP 7
.B EACCES
Operation permission is denied ta tha callin process; peep \fIXSI
Interprocess
Communication\fP .
.TP 7
.B EINVAL
Da value of \fIshmid\fP aint a valid shared memory identifier,
the \fIshmaddr\fP aint a null pointer, n' tha value of
(\fIshmaddr\fP -((\fIuintptr_t\fP)\fIshmaddr\fP %SHMLBA)) be a illegal
address fo' attachin shared memory; or the
\fIshmaddr\fP aint a null pointer, (\fIshmflg\fP &SHM_RND) is 0,
and tha value of \fIshmaddr\fP be a illegal address for
attachin shared memory.
.TP 7
.B EMFILE
Da number of shared memory segments attached ta tha callin process
would exceed tha system-imposed limit.
.TP 7
.B ENOMEM
Da available data space aint big-ass enough ta accommodate tha shared
memory segment.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da POSIX Realtime Extension defines alternatizzle intercourses fo' interprocess
communication. I aint talkin' bout chicken n' gravy biatch fo' realz. Application pimpers whoz ass need to
use IPC should design they applications so dat modulez rockin the
IPC routines busted lyrics bout up in \fIXSI Interprocess Communication\fP can
be easily modified ta use tha alternative
interfaces.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIXSI Interprocess Communication\fP, \fIRealtime\fP, \fIexec\fP()
,
\fIexit\fP(), \fIfork\fP(), \fIshmctl\fP(), \fIshmdt\fP(), \fIshmget\fP(),
\fIshm_open\fP(),
\fIshm_unlink\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/shm.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
