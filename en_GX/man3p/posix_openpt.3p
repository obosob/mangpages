.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_OPENPT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_openpt 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_openpt \- open a pseudo-terminal device
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
#include <fcntl.h>
.br
.sp
int posix_openpt(int\fP \fIoflag\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_openpt\fP() function shall establish a cold-ass lil connection between
a masta thang fo' a pseudo-terminal n' a gangbangin' file
descriptor. Shiiit, dis aint no joke. Da file descriptor is used by other I/O functions that
refer ta dat pseudo-terminal.
.LP
Da file status flags n' file access modez of tha open file description
shall be set accordin ta tha value of
\fIoflag\fP.
.LP
Values fo' \fIoflag\fP is constructed by a funky-ass bitwise-inclusive OR of
flags from tha followin list, defined up in \fI<fcntl.h>\fP:
.TP 7
O_RDWR
Open fo' readin n' writing.
.TP 7
O_NOCTTY
If set \fIposix_openpt\fP() shall not cause tha terminal thang to
become tha controllin terminal fo' tha process.
.sp
.LP
Da behavior of other joints fo' tha \fIoflag\fP argument is unspecified.
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIposix_openpt\fP() function shall
open a masta pseudo-terminal thang n' return a
non-negatizzle integer representin tha lowest numbered unused file
descriptor. Shiiit, dis aint no joke. Otherwise, -1 shall be returned n' \fIerrno\fP set
to indicate tha error.
.SH ERRORS
.LP
Da \fIposix_openpt\fP() function shall fail if:
.TP 7
.B EMFILE
{OPEN_MAX} file descriptors is currently open up in tha callin process.
.TP 7
.B ENFILE
Da maximum allowable number of filez is currently open up in tha system.
.sp
.LP
Da \fIposix_openpt\fP() function may fail if:
.TP 7
.B EINVAL
Da value of \fIoflag\fP aint valid.
.TP 7
.B EAGAIN
Out of pseudo-terminal resources.
.TP 7
.B ENOSR
Out of STREAMS resources. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Openin a Pseudo-Terminal n' Returnin tha Name of tha Slave
Device n' a File Descriptor
.sp
.RS
.nf

\fB#include <fcntl.h>
#include <stdio.h>
.sp

int masterfd, slavefd;
char *slavedevice;
.sp

masterfd = posix_openpt(O_RDWR|O_NOCTTY);
.sp

if (masterfd == -1
    || grantpt (masterfd) == -1
    || unlockpt (masterfd) == -1
    || (slavedevice = ptsname (masterfd)) == NULL)
    return -1;
.sp

printf("slave thang is: %s\\n", slavedevice);
.sp

slavefd = open(slave, O_RDWR|O_NOCTTY);
if (slavefd < 0)
    return -1;
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
This function be a method fo' portably obtainin a gangbangin' file descriptor
of a masta terminal thang fo' a pseudo-terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da \fIgrantpt\fP()
and \fIptsname\fP() functions can be
used ta manipulate mode n' ballershizzle permissions, n' ta obtain the
name of tha slave device, respectively.
.SH RATIONALE
.LP
Da standard pimpers considered tha matta of addin a special
device fo' clonin masta pseudo-terminals: the
\fB/dev/ptmx\fP device. But fuck dat shiznit yo, tha word on tha street is dat consensus could not be reached, and
it was felt dat addin a freshly smoked up function would permit other
implementations. Da \fIposix_openpt\fP() function is designed to
complement tha \fIgrantpt\fP(), \fIptsname\fP(), n' \fIunlockpt\fP()
functions.
.LP
On implementations supportin tha \fB/dev/ptmx\fP clone device, opening
the masta thang of a pseudo-terminal is simply:
.sp
.RS
.nf

\fBmfdp = open("/dev/ptmx", oflag );
if (mfdp < 0)
    return -1;
\fP
.fi
.RE
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgrantpt\fP(), \fIopen\fP(), \fIptsname\fP(), \fIunlockpt\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<fcntl.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
