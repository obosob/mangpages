.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETGRGID" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getgrgid 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getgrgid, getgrgid_r \- git crew database entry fo' a crew ID
.SH SYNOPSIS
.LP
\fB#include <grp.h>
.br
.sp
struct crew *getgrgid(gid_t\fP \fIgid\fP\fB);
.br
\fP
.LP
\fBint getgrgid_r(gid_t\fP \fIgid\fP\fB, struct crew *\fP\fIgrp\fP\fB,
char
*\fP\fIbuffer\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIbufsize\fP\fB, struct crew **\fP\fIresult\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgetgrgid\fP() function shall search tha crew database for
an entry wit a matchin \fIgid\fP.
.LP
Da \fIgetgrgid\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe.
.LP
Da \fIgetgrgid_r\fP() function shall update tha \fBgroup\fP structure
pointed ta by \fIgrp\fP n' store a pointa ta that
structure all up in tha location pointed ta by \fIresult\fP. Da structure
shall contain a entry from tha crew database wit a matching
\fIgid\fP. Right back up in yo muthafuckin ass. Storage referenced by tha crew structure be allocated
from tha memory provided wit tha \fIbuffer\fP parameter, which
is \fIbufsize\fP bytes up in size. Da maximum size needed fo' dis buffer
can be determined wit tha {_SC_GETGR_R_SIZE_MAX} \fIsysconf\fP()
parameter n' shiznit fo' realz. A NULL pointa shall be returned all up in tha location pointed
to by
\fIresult\fP on error or if tha axed entry aint found. Y'all KNOW dat shit, muthafucka! 
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetgrgid\fP() shall return a pointer
to a \fBstruct group\fP wit tha structure defined up in \fI<grp.h>\fP
with a matchin entry if one is found. Y'all KNOW dat shit, muthafucka! Da \fIgetgrgid\fP() function
shall
return a null pointa if either tha axed entry was not found,
or a error occurred. Y'all KNOW dat shit, muthafucka! On error, \fIerrno\fP shall be set to
indicate tha error.
.LP
Da return value may point ta a static area which is overwritten by
a subsequent call ta \fIgetgrent\fP(), \fIgetgrgid\fP(), or \fIgetgrnam\fP().
.LP
If successful, tha \fIgetgrgid_r\fP() function shall return zero;
otherwise, a error number shall be moonwalked back ta indicate the
error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIgetgrgid\fP() n' \fIgetgrgid_r\fP() functions may fail if:
.TP 7
.B EIO
An I/O error has occurred.
.TP 7
.B EINTR
A signal was caught durin \fIgetgrgid\fP().
.TP 7
.B EMFILE
{OPEN_MAX} file descriptors is currently open up in tha callin process.
.TP 7
.B ENFILE
Da maximum allowable number of filez is currently open up in tha system.
.sp
.LP
Da \fIgetgrgid_r\fP() function may fail if: 
.TP 7
.B ERANGE
Insufficient storage was supplied via \fIbuffer\fP n' \fIbufsize\fP
to contain tha data ta be referenced by tha resulting
\fBgroup\fP structure. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Findin a Entry up in tha Group Database
.LP
Da followin example uses \fIgetgrgid\fP() ta search tha crew database
for a crew ID dat was previously stored up in a
\fBstat\fP structure, then prints up tha crew name if it is found.
If tha crew aint found, tha program prints tha numeric
value of tha crew fo' tha entry.
.sp
.RS
.nf

\fB#include <sys/types.h>
#include <grp.h>
#include <stdio.h>
\&...
struct stat statbuf;
struct crew *grp;
\&...
if ((grp = getgrgid(statbuf.st_gid)) != NULL)
    printf(" %-8.8s", grp->gr_name);
else
    printf(" %-8d", statbuf.st_gid);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Applications wishin ta check fo' error thangs should set \fIerrno\fP
to 0 before callin \fIgetgrgid\fP(). If
\fIerrno\fP is set on return, a error occurred.
.LP
Da \fIgetgrgid_r\fP() function is thread-safe n' shall return joints
in a user-supplied buffer instead of possibly rockin a
static data area dat may be overwritten by each call.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIendgrent\fP(), \fIgetgrnam\fP(), tha Base Definitions volume
of
IEEE\ Std\ 1003.1-2001, \fI<grp.h>\fP, \fI<limits.h>\fP, \fI<sys/types.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
