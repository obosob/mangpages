.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_SPAWNATTR_DESTROY" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_spawnattr_destroy 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_spawnattr_destroy, posix_spawnattr_init \- destroy n' initialize
spawn attributes object (\fBADVANCED
REALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <spawn.h>
.br
.sp
int posix_spawnattr_destroy(posix_spawnattr_t *\fP\fIattr\fP\fB);
.br
int posix_spawnattr_init(posix_spawnattr_t *\fP\fIattr\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_spawnattr_destroy\fP() function shall destroy a spawn
attributes object fo' realz. A destroyed \fIattr\fP attributes object
can be reinitialized rockin \fIposix_spawnattr_init\fP(); tha thangs up in dis biatch
of otherwise referencin tha object afta it has been
destroyed is undefined. Y'all KNOW dat shit, muthafucka! An implementation may cause \fIposix_spawnattr_destroy\fP()
to set tha object referenced by \fIattr\fP
to a invalid value.
.LP
Da \fIposix_spawnattr_init\fP() function shall initialize a spawn
attributes object \fIattr\fP wit tha default value fo' all
of tha individual attributes used by tha implementation. I aint talkin' bout chicken n' gravy biatch. Results are
undefined if \fIposix_spawnattr_init\fP() is called
specifyin a already initialized \fIattr\fP attributes object.
.LP
A spawn attributes object iz of type \fBposix_spawnattr_t\fP (defined
in \fI<spawn.h>\fP) n' is used ta specify tha inheritizzle of process
attributes across a spawn
operation. I aint talkin' bout chicken n' gravy biatch. IEEE\ Std\ 1003.1-2001 do not define comparison or assignment
operators fo' tha type
\fBposix_spawnattr_t\fP.
.LP
Each implementation shall document tha individual attributes it uses
and they default joints unless these joints is defined by
IEEE\ Std\ 1003.1-2001 fo' realz. Attributes not defined by IEEE\ Std\ 1003.1-2001,
their default joints, n' tha names of
the associated functions ta git n' set dem attribute joints are
implementation-defined.
.LP
Da resultin spawn attributes object (possibly modified by setting
individual attribute joints), is used ta modify tha behavior
of \fIposix_spawn\fP() or \fIposix_spawnp\fP() fo' realz. Afta a spawn attributes
object has been used ta spawn a process by a
call ta a \fIposix_spawn\fP() or \fIposix_spawnp\fP(), any function
affectin tha attributes object (includin destruction)
shall not affect any process dat has been spawned up in dis way.
.SH RETURN VALUE
.LP
Upon successful completion, \fIposix_spawnattr_destroy\fP() n' \fIposix_spawnattr_init\fP()
shall return zero; otherwise, an
error number shall be moonwalked back ta indicate tha error.
.SH ERRORS
.LP
Da \fIposix_spawnattr_init\fP() function shall fail if:
.TP 7
.B ENOMEM
Insufficient memory exists ta initialize tha spawn attributes object.
.sp
.LP
Da \fIposix_spawnattr_destroy\fP() function may fail if:
.TP 7
.B EINVAL
Da value specified by attr is invalid.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
These functions is part of tha Spawn option n' need not be provided
on all implementations.
.SH RATIONALE
.LP
Da original gangsta spawn intercourse proposed up in IEEE\ Std\ 1003.1-2001 defined
the attributes dat specify tha inheritizzle of
process attributes across a spawn operation as a structure. In order
to be able ta separate optionizzle individual attributes under
their appropriate options (that is, tha \fIspawn-schedparam\fP and
\fIspawn-schedpolicy\fP attributes dependin upon tha Process
Schedulin option), n' also fo' extensibilitizzle n' consistency with
the newer POSIX intercourses, tha attributes intercourse has been
changed ta a opaque data type. This intercourse now consistz of the
type \fBposix_spawnattr_t\fP, representin a spawn attributes
object, together wit associated functions ta initialize or destroy
the attributes object, n' ta set or git each individual
attribute fo' realz. Although tha freshly smoked up object-oriented intercourse is mo' verbose
than tha original gangsta structure, it is simple ta use, more
extensible, n' easy as fuck  ta implement.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIposix_spawn\fP(), \fIposix_spawnattr_getsigdefault\fP(), \fIposix_spawnattr_getflags\fP(),
\fIposix_spawnattr_getpgroup\fP(), \fIposix_spawnattr_getschedparam\fP(),
\fIposix_spawnattr_getschedpolicy\fP(), \fIposix_spawnattr_getsigmask\fP(),
\fIposix_spawnattr_setsigdefault\fP(), \fIposix_spawnattr_setflags\fP(),
\fIposix_spawnattr_setpgroup\fP(), \fIposix_spawnattr_setsigmask\fP(),
\fIposix_spawnattr_setschedpolicy\fP(), \fIposix_spawnattr_setschedparam\fP(),
\fIposix_spawnp\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<spawn.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
