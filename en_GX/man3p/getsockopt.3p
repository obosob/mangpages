.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETSOCKOPT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getsockopt 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getsockopt \- git tha socket options
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
int getsockopt(int\fP \fIsocket\fP\fB, int\fP \fIlevel\fP\fB, int\fP
\fIoption_name,\fP\fB
.br
\ \ \ \ \ \  void *restrict\fP \fIoption_value\fP\fB, socklen_t *restrict\fP
\fIoption_len\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgetsockopt\fP() function manipulates options associated with
a socket.
.LP
Da \fIgetsockopt\fP() function shall retrieve tha value fo' tha option
specified by tha \fIoption_name\fP argument fo' the
socket specified by tha \fIsocket\fP argument. If tha size of the
option value is pimped outa than \fIoption_len\fP, tha value stored
in tha object pointed ta by tha \fIoption_value\fP argument shall
be silently truncated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Otherwise, tha object pointed ta by the
\fIoption_len\fP argument shall be modified ta indicate tha actual
length of tha value.
.LP
Da \fIlevel\fP argument specifies tha protocol level at which the
option resides. To retrieve options all up in tha socket level,
specify tha \fIlevel\fP argument as SOL_SOCKET. To retrieve options
at other levels, supply tha appropriate level identifier for
the protocol controllin tha option. I aint talkin' bout chicken n' gravy biatch. For example, ta indicate that
an option is interpreted by tha TCP (Transmission Control
Protocol), set \fIlevel\fP ta IPPROTO_TCP as defined up in tha \fI<netinet/in.h>\fP
header.
.LP
Da socket up in use may require tha process ta have appropriate privileges
to use tha \fIgetsockopt\fP() function.
.LP
Da \fIoption_name\fP argument specifies a single option ta be retrieved.
It can be one of tha followin joints defined up in \fI<sys/socket.h>\fP:
.TP 7
SO_DEBUG
Reports whether debuggin shiznit is bein recorded. Y'all KNOW dat shit, muthafucka! This option
shall store a \fBint\fP value. This be a Boolean
option.
.TP 7
SO_ACCEPTCONN
Reports whether socket listenin is enabled. Y'all KNOW dat shit, muthafucka! This option shall store
an \fBint\fP value. This be a Boolean option.
.TP 7
SO_BROADCAST
Reports whether transmission of broadcast lyrics is supported, if
this is supported by tha protocol. This option shall store
an \fBint\fP value. This be a Boolean option.
.TP 7
SO_REUSEADDR
Reports whether tha rulez used up in valipimpin addresses supplied to
\fIbind\fP() should
allow reuse of local addresses, if dis is supported by tha protocol.
This option shall store a \fBint\fP value. This be a
Boolean option.
.TP 7
SO_KEEPALIVE
Reports whether connections is kept actizzle wit periodic transmission
of lyrics, if dis is supported by tha protocol. 
.LP
If tha connected socket fails ta respond ta these lyrics, tha connection
shall be fucked up n' threadz freestylin ta dat socket
shall be notified wit a SIGPIPE signal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. This option shall store an
\fBint\fP value. This be a Boolean option.
.TP 7
SO_LINGER
Reports whether tha socket lingers on \fIclose\fP() if data is present.
If SO_LINGER is
set, tha system blocks tha process durin \fIclose\fP() until it can
transmit tha data or
until tha end of tha interval indicated by tha \fIl_linger\fP member,
whichever comes first. If SO_LINGER aint specified, n' \fIclose\fP()
is issued, tha system handlez tha call up in a way dat allows tha process
to
continue as quickly as possible. This option shall store a \fBlinger\fP
structure.
.TP 7
SO_OOBINLINE
Reports whether tha socket leaves received out-of-band data (data
marked urgent) inline. This option shall store a \fBint\fP
value. This be a Boolean option.
.TP 7
SO_SNDBUF
Reports bust buffer size shiznit. I aint talkin' bout chicken n' gravy biatch. This option shall store a \fBint\fP
value.
.TP 7
SO_RCVBUF
Reports receive buffer size shiznit. I aint talkin' bout chicken n' gravy biatch. This option shall store an
\fBint\fP value.
.TP 7
SO_ERROR
Reports shiznit bout error status n' clears dat shit. This option
shall store a \fBint\fP value.
.TP 7
SO_TYPE
Reports tha socket type. This option shall store a \fBint\fP value.
Socket types is busted lyrics bout up in \fISocket Types\fP .
.TP 7
SO_DONTROUTE
Reports whether outgoin lyrics bypass tha standard routin facilities.
Da destination shall be on a gangbangin' finger-lickin' directly-connected
network, n' lyrics is pimped up ta tha appropriate network intercourse
accordin ta tha destination address. Da effect, if any,
of dis option dependz on what tha fuck protocol is up in use. This option shall
store a \fBint\fP value. This be a Boolean option.
.TP 7
SO_RCVLOWAT
Reports tha minimum number of bytes ta process fo' socket input operations.
Da default value fo' SO_RCVLOWAT is 1. If
SO_RCVLOWAT is set ta a larger value, blockin receive calls normally
wait until they have received tha smalla of tha low water
mark value or tha axed amount. (They may return less than the
low wata mark if a error occurs, a signal is caught, or the
type of data next up in tha receive queue is different from dat returned;
for example, out-of-band data.) This option shall store an
\fBint\fP value. Note dat not all implementations allow dis option
to be retrieved.
.TP 7
SO_RCVTIMEO
Reports tha timeout value fo' input operations. This option shall
store a \fBtimeval\fP structure wit tha number of seconds
and microsecondz specifyin tha limit on how tha fuck long ta wait fo' a input
operation ta complete. If a receive operation has blocked
for dis much time without receivin additionizzle data, it shall return
with a partial count or \fIerrno\fP set ta [EAGAIN] or
[EWOULDBLOCK] if no data was received. Y'all KNOW dat shit, muthafucka! Da default fo' dis option
is zero, which indicates dat a receive operation shall not time
out. Note dat not all implementations allow dis option ta be retrieved.
.TP 7
SO_SNDLOWAT
Reports tha minimum number of bytes ta process fo' socket output operations.
Non-blockin output operations shall process no
data if flow control do not allow tha smalla of tha bust low water
mark value or tha entire request ta be processed. Y'all KNOW dat shit, muthafucka! This option
shall store a \fBint\fP value. Note dat not all implementations
allow dis option ta be retrieved.
.TP 7
SO_SNDTIMEO
Reports tha timeout value specifyin tha amount of time dat a output
function blocks cuz flow control prevents data from
bein sent. If a bust operation has blocked fo' dis time, it shall
return wit a partial count or wit \fIerrno\fP set to
[EAGAIN] or [EWOULDBLOCK] if no data was sent. Da default fo' this
option is zero, which indicates dat a bust operation shall not
time out. Da option shall store a \fBtimeval\fP structure. Note that
not all implementations allow dis option ta be
retrieved.
.sp
.LP
For Boolean options, a zero value indicates dat tha option is disabled
and a non-zero value indicates dat tha option is
enabled.
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetsockopt\fP() shall return 0; otherwise,
-1 shall be returned n' \fIerrno\fP set ta indicate
the error.
.SH ERRORS
.LP
Da \fIgetsockopt\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid file descriptor.
.TP 7
.B EINVAL
Da specified option is invalid all up in tha specified socket level.
.TP 7
.B ENOPROTOOPT
.sp
Da option aint supported by tha protocol.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.sp
.LP
Da \fIgetsockopt\fP() function may fail if:
.TP 7
.B EACCES
Da callin process aint gots tha appropriate privileges.
.TP 7
.B EINVAL
Da socket has been shut down.
.TP 7
.B ENOBUFS
Insufficient resources is available up in tha system ta complete the
function.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIbind\fP(), \fIclose\fP(), \fIendprotoent\fP(), \fIsetsockopt\fP(),
\fIsocket\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/socket.h>\fP, \fI<netinet/in.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
