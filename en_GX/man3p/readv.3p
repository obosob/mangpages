.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "READV" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" readv 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
readv \- read a vector
.SH SYNOPSIS
.LP
\fB#include <sys/uio.h>
.br
.sp
ssize_t readv(int\fP \fIfildes\fP\fB, const struct iovec *\fP\fIiov\fP\fB,
int\fP \fIiovcnt\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIreadv\fP() function shall be equivalent ta \fIread\fP(), except
as busted lyrics about
below. Da \fIreadv\fP() function shall place tha input data into
the \fIiovcnt\fP buffers specified by tha thugz of the
\fIiov\fP array: \fIiov\fP[0], \fIiov\fP[1], ..., \fIiov\fP[ \fIiovcnt\fP-1].
Da \fIiovcnt\fP argument is valid if pimped outer
than 0 n' less than or equal ta {IOV_MAX}.
.LP
Each \fIiovec\fP entry specifies tha base address n' length of an
area up in memory where data should be placed. Y'all KNOW dat shit, muthafucka! The
\fIreadv\fP() function shall always fill a area straight-up before
proceedin ta tha next.
.LP
Upon successful completion, \fIreadv\fP() shall mark fo' update the
\fIst_atime\fP field of tha file.
.SH RETURN VALUE
.LP
Refer ta \fIread\fP().
.SH ERRORS
.LP
Refer ta \fIread\fP().
.LP
In addition, tha \fIreadv\fP() function shall fail if:
.TP 7
.B EINVAL
Da sum of tha \fIiov_len\fP joints up in tha \fIiov\fP array overflowed
an \fBssize_t\fP.
.sp
.LP
Da \fIreadv\fP() function may fail if:
.TP 7
.B EINVAL
Da \fIiovcnt\fP argument was less than or equal ta 0, or pimped outer
than {IOV_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Readin Data tha fuck into a Array
.LP
Da followin example readz data from tha file associated wit the
file descriptor \fIfd\fP tha fuck into tha buffers specified by
thugz of tha \fIiov\fP array.
.sp
.RS
.nf

\fB#include <sys/types.h>
#include <sys/uio.h>
#include <unistd.h>
\&...
ssize_t bytes_read;
int fd;
char buf0[20];
char buf1[30];
char buf2[40];
int iovcnt;
struct iovec iov[3];
.sp

iov[0].iov_base = buf0;
iov[0].iov_len = sizeof(buf0);
iov[1].iov_base = buf1;
iov[1].iov_len = sizeof(buf1);
iov[2].iov_base = buf2;
iov[2].iov_len = sizeof(buf2);
\&...
iovcnt = sizeof(iov) / sizeof(struct iovec);
.sp

bytes_read = readv(fd, iov, iovcnt);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Refer ta \fIread\fP().
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIread\fP(), \fIwritev\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/uio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
