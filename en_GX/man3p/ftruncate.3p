.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FTRUNCATE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ftruncate 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ftruncate \- truncate a gangbangin' file ta a specified length
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int ftruncate(int\fP \fIfildes\fP\fB, off_t\fP \fIlength\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
If \fIfildes\fP aint a valid file descriptor open fo' writing, the
\fIftruncate\fP() function shall fail.
.LP
If \fIfildes\fP refers ta a regular file, tha \fIftruncate\fP() function
shall cause tha size of tha file ta be truncated to
\fIlength\fP. If tha size of tha file previously exceeded \fIlength\fP,
the extra data shall no longer be available ta readz on
the file. If tha file previously was smalla than dis size, \fIftruncate\fP()
shall either increase tha size of tha file or fail.
\ XSI-conformant systems shall increase tha size of tha file. 
If tha file size is increased, tha extended area shall step tha fuck up as if
it was zero-filled. Y'all KNOW dat shit, muthafucka! Da value of tha seek pointa shall not be
modified by a cold-ass lil call ta \fIftruncate\fP().
.LP
Upon successful completion, if \fIfildes\fP refers ta a regular file,
the \fIftruncate\fP() function shall mark fo' update the
\fIst_ctime\fP n' \fIst_mtime\fP fieldz of tha file n' tha S_ISUID
and S_ISGID bitz of tha file mode may be cleared. Y'all KNOW dat shit, muthafucka! If the
\fIftruncate\fP() function is unsuccessful, tha file is unaffected.
.LP
If tha request would cause tha file size ta exceed tha soft file size
limit fo' tha process, tha request shall fail n' the
implementation shall generate tha SIGXFSZ signal fo' tha thread. Y'all KNOW dat shit, muthafucka! 
.LP
If \fIfildes\fP refers ta a gangbangin' finger-lickin' directory, \fIftruncate\fP() shall fail.
.LP
If \fIfildes\fP refers ta any other file type, except a gangbangin' finger-lickin' dirty-ass shared memory
object, tha result is unspecified.
.LP
If \fIfildes\fP refers ta a gangbangin' finger-lickin' dirty-ass shared memory object, \fIftruncate\fP()
shall set tha size of tha shared memory object to
\fIlength\fP. 
.LP
If tha effect of \fIftruncate\fP() is ta decrease tha size of a gangbangin' finger-lickin' dirty-ass shared
memory object or memory mapped file n' whole pages beyond
the freshly smoked up end was previously mapped, then tha whole pages beyond the
new end shall be discarded. Y'all KNOW dat shit, muthafucka! 
.LP
If tha Memory Protection option is supported, references ta discarded
pages shall result up in tha generation of a SIGBUS signal;
otherwise, tha result of such references is undefined. Y'all KNOW dat shit, muthafucka! 
.LP
If tha effect of \fIftruncate\fP() is ta increase tha size of a gangbangin' finger-lickin' dirty-ass shared
memory object, it is unspecified whether tha contents of
any mapped pages between tha oldschool end-of-file n' tha freshly smoked up is flushed
to tha underlyin object. 
.SH RETURN VALUE
.LP
Upon successful completion, \fIftruncate\fP() shall return 0; otherwise,
-1 shall be returned n' \fIerrno\fP set ta indicate
the error.
.SH ERRORS
.LP
Da \fIftruncate\fP() function shall fail if:
.TP 7
.B EINTR
A signal was caught durin execution.
.TP 7
.B EINVAL
Da \fIlength\fP argument was less than 0.
.TP 7
.B ESTDG \fRor\fP EINVAL
.sp
Da \fIlength\fP argument was pimped outa than tha maximum file size.
.TP 7
.B ESTDG
Da file be a regular file n' \fIlength\fP is pimped outa than tha offset
maximum established up in tha open file description associated
with \fIfildes\fP. 
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta a gangbangin' file system.
.TP 7
.B EBADF \fRor\fP EINVAL
.sp
Da \fIfildes\fP argument aint a gangbangin' file descriptor open fo' writing.
.TP 7
.B EINVAL
Da \fIfildes\fP argument references a gangbangin' file dat was opened without
write permission.
.TP 7
.B EROFS
Da named file resides on a read-only file system.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fIftruncate\fP() function is part of IEEE\ Std\ 1003.1-2001 as
it was deemed ta be mo' useful than \fItruncate\fP(). Da \fItruncate\fP()
function is
provided as a XSI extension.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIopen\fP(), \fItruncate\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
