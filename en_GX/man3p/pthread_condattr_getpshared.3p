.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_CONDATTR_GETPSHARED" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_condattr_getpshared 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_condattr_getpshared, pthread_condattr_setpshared \- git and
set tha process\-shared condizzle variable
attributes
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_condattr_getpshared(const pthread_condattr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIpshared\fP\fB);
.br
int pthread_condattr_setpshared(pthread_condattr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIpshared\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_condattr_getpshared\fP() function shall obtain the
value of tha \fIprocess-shared\fP attribute from the
attributes object referenced by \fIattr\fP. Da \fIpthread_condattr_setpshared\fP()
function shall set tha \fIprocess-shared\fP
attribute up in a initialized attributes object referenced by \fIattr\fP.
.LP
Da \fIprocess-shared\fP attribute is set ta PTHREAD_PROCESS_SHARED
to permit a cold-ass lil condizzle variable ta be operated upon by any
thread dat has access ta tha memory where tha condizzle variable
is allocated, even if tha condizzle variable be allocated in
memory dat is shared by multiple processes. If tha \fIprocess-shared\fP
attribute is PTHREAD_PROCESS_PRIVATE, tha condition
variable shall only be operated upon by threadz pimped within the
same process as tha thread dat initialized tha condition
variable; if threadz of differin processes attempt ta operate on
such a cold-ass lil condizzle variable, tha behavior is undefined. Y'all KNOW dat shit, muthafucka! Da default
value of tha attribute is PTHREAD_PROCESS_PRIVATE.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_condattr_setpshared\fP() function shall
return zero; otherwise, a error number shall be returned
to indicate tha error.
.LP
If successful, tha \fIpthread_condattr_getpshared\fP() function shall
return zero n' store tha value of the
\fIprocess-shared\fP attribute of \fIattr\fP tha fuck into tha object referenced
by tha \fIpshared\fP parameter n' shit. Otherwise, a error
number shall be moonwalked back ta indicate tha error.
.SH ERRORS
.LP
Da \fIpthread_condattr_getpshared\fP() n' \fIpthread_condattr_setpshared\fP()
functions may fail if:
.TP 7
.B EINVAL
Da value specified by \fIattr\fP is invalid.
.sp
.LP
Da \fIpthread_condattr_setpshared\fP() function may fail if:
.TP 7
.B EINVAL
Da freshly smoked up value specified fo' tha attribute is outside tha range of
legal joints fo' dat attribute.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_create\fP(), \fIpthread_cond_destroy\fP(), \fIpthread_condattr_destroy\fP(),
\fIpthread_mutex_destroy\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
