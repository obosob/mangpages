.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PIPE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pipe 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pipe \- create a interprocess channel
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int pipe(int\fP \fIfildes\fP\fB[2]);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpipe\fP() function shall create a pipe n' place two file descriptors,
one each tha fuck into tha arguments \fIfildes\fP[0] and
\fIfildes\fP[1], dat refer ta tha open file descriptions fo' the
read n' write endz of tha pipe. Their integer joints shall be
the two lowest available all up in tha time of tha \fIpipe\fP() call. The
O_NONBLOCK n' FD_CLOEXEC flags shall be clear on both file
descriptors. (Da \fIfcntl\fP() function can be used ta set both these
flags.)
.LP
Data can be freestyled ta tha file descriptor \fIfildes\fP[1] n' read
from tha file descriptor \fIfildes\fP[0] fo' realz. A read on the
file descriptor \fIfildes\fP[0] shall access data freestyled ta tha file
descriptor \fIfildes\fP[1] on a gangbangin' first-in-first-out basis.
It be unspecified whether \fIfildes\fP[0] be also open fo' writing
and whether \fIfildes\fP[1] be also open fo' reading.
.LP
A process has tha pipe open fo' readin (correspondingly writing)
if it has a gangbangin' file descriptor open dat refers ta tha read end,
\fIfildes\fP[0] (write end, \fIfildes\fP[1]).
.LP
Upon successful completion, \fIpipe\fP() shall mark fo' update the
\fIst_atime\fP, \fIst_ctime\fP, n' \fIst_mtime\fP fields
of tha pipe.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned; otherwise, -1 shall
be returned n' \fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIpipe\fP() function shall fail if:
.TP 7
.B EMFILE
Mo' than {OPEN_MAX} minus two file descriptors is already up in use
by dis process.
.TP 7
.B ENFILE
Da number of simultaneously open filez up in tha system would exceed
a system-imposed limit.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da wordin carefully avoidz rockin tha verb "to open" up in order to
avoid any implication of use of \fIopen\fP(); peep also \fIwrite\fP()
\&.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfcntl\fP(), \fIread\fP(), \fIwrite\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<fcntl.h>\fP,
\fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
