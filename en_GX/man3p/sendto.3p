.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SENDTO" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sendto 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sendto \- bust a message on a socket
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
ssize_t sendto(int\fP \fIsocket\fP\fB, const void *\fP\fImessage\fP\fB,
size_t\fP \fIlength\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIflags\fP\fB, const struct sockaddr *\fP\fIdest_addr\fP\fB,
.br
\ \ \ \ \ \  socklen_t\fP \fIdest_len\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsendto\fP() function shall bust a message all up in a cold-ass lil connection-mode
or connectionless-mode socket. If tha socket is
connectionless-mode, tha message shall be busted ta tha address specified
by \fIdest_addr\fP. If tha socket is connection-mode,
\fIdest_addr\fP shall be ignored.
.LP
Da \fIsendto\fP() function takes tha followin arguments:
.TP 7
\fIsocket\fP
Specifies tha socket file descriptor.
.TP 7
\fImessage\fP
Points ta a funky-ass buffer containin tha message ta be sent.
.TP 7
\fIlength\fP
Specifies tha size of tha message up in bytes.
.TP 7
\fIflags\fP
Specifies tha type of message transmission. I aint talkin' bout chicken n' gravy biatch. Valuez of dis argument
are formed by logically OR'in zero or mo' of the
followin flags: 
.TP 7
MSG_EOR
.RS
Terminates a record (if supported by tha protocol).
.RE
.TP 7
MSG_OOB
.RS
Sendz out-of-band data on sockets dat support out-of-band data. The
significizzle n' semantics of out-of-band data are
protocol-specific.
.RE
.sp
.TP 7
\fIdest_addr\fP
Points ta a \fBsockaddr\fP structure containin tha destination address.
Da length n' format of tha address depend on the
address crew of tha socket.
.TP 7
\fIdest_len\fP
Specifies tha length of tha \fBsockaddr\fP structure pointed ta by
the \fIdest_addr\fP argument.
.sp
.LP
If tha socket protocol supports broadcast n' tha specified address
is a funky-ass broadcast address fo' tha socket protocol,
\fIsendto\fP() shall fail if tha SO_BROADCAST option aint set for
the socket.
.LP
Da \fIdest_addr\fP argument specifies tha address of tha target.
Da \fIlength\fP argument specifies tha length of the
message.
.LP
Successful completion of a cold-ass lil call ta \fIsendto\fP() do not guarantee
delivery of tha message fo' realz. A return value of -1 indicates
only locally-detected errors.
.LP
If space aint available all up in tha bustin  socket ta hold tha message
to be transmitted n' tha socket file descriptor do not
have O_NONBLOCK set, \fIsendto\fP() shall block until space be available.
If space aint available all up in tha bustin  socket ta hold
the message ta be transmitted n' tha socket file descriptor do
have O_NONBLOCK set, \fIsendto\fP() shall fail.
.LP
Da socket up in use may require tha process ta have appropriate privileges
to use tha \fIsendto\fP() function.
.SH RETURN VALUE
.LP
Upon successful completion, \fIsendto\fP() shall return tha number
of bytes sent. Otherwise, -1 shall be returned and
\fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIsendto\fP() function shall fail if:
.TP 7
.B EAFNOSUPPORT
Addresses up in tha specified address crew cannot be used wit this
socket.
.TP 7
.B EAGAIN \fRor\fP EWOULDBLOCK
Da socketz file descriptor is marked O_NONBLOCK n' tha requested
operation would block.
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid file descriptor.
.TP 7
.B ECONNRESET
A connection was forcibly closed by a peer.
.TP 7
.B EINTR
A signal interrupted \fIsendto\fP() before any data was transmitted.
.TP 7
.B EMSGSIZE
Da message is too big-ass ta be busted all at once, as tha socket requires.
.TP 7
.B ENOTCONN
Da socket is connection-mode but aint connected.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.TP 7
.B EOPNOTSUPP
Da \fIsocket\fP argument be associated wit a socket dat do not
support one or mo' of tha joints set in
\fIflags\fP.
.TP 7
.B EPIPE
Da socket is shut down fo' writing, or tha socket is connection-mode
and is no longer connected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In tha latta case, n' if
the socket iz of type SOCK_STREAM, tha SIGPIPE signal is generated
to tha callin thread.
.sp
.LP
If tha address crew of tha socket is AF_UNIX, then \fIsendto\fP()
shall fail if:
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
pathname up in tha socket address.
.TP 7
.B ENAMETOOLONG
A component of a pathname exceeded {NAME_MAX} characters, or a entire
pathname exceeded {PATH_MAX} characters.
.TP 7
.B ENOENT
A component of tha pathname do not name a existin file or the
pathname be a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix of tha pathname up in tha socket address
is not a gangbangin' finger-lickin' directory.
.sp
.LP
Da \fIsendto\fP() function may fail if:
.TP 7
.B EACCES
Search permission is denied fo' a cold-ass lil component of tha path prefix; or
write access ta tha named socket is denied.
.TP 7
.B EDESTADDRREQ
Da socket aint connection-mode n' aint gots its peer address
set, n' no destination address was specified.
.TP 7
.B EHOSTUNREACH
Da destination host cannot be reached (probably cuz tha host
is down or a remote routa cannot reach it).
.TP 7
.B EINVAL
Da \fIdest_len\fP argument aint a valid length fo' tha address
family.
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta tha file system.
.TP 7
.B EISCONN
A destination address was specified n' tha socket be already connected.
This error may or may not be returned fo' connection
mode sockets.
.TP 7
.B ENETDOWN
Da local network intercourse used ta reach tha destination is down.
.TP 7
.B ENETUNREACH
No route ta tha network is present.
.TP 7
.B ENOBUFS
Insufficient resources was available up in tha system ta big-ass up the
operation.
.TP 7
.B ENOMEM
Insufficient memory was available ta fulfill tha request.
.sp
.LP
If tha address crew of tha socket is AF_UNIX, then \fIsendto\fP()
may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha pathname up in tha socket address.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIselect\fP() n' \fIpoll\fP() functions can
be used ta determine when it is possible ta bust mo' data.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgetsockopt\fP(), \fIpoll\fP(), \fIrecv\fP(), \fIrecvfrom\fP(),
\fIrecvmsg\fP(), \fIselect\fP(), \fIsend\fP(), \fIsendmsg\fP(),
\fIsetsockopt\fP(), \fIshutdown\fP(), \fIsocket\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
