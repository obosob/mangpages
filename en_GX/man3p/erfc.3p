.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ERFC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" erfc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
erfc, erfcf, erfcl \- complementary error functions
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double erfc(double\fP \fIx\fP\fB);
.br
float erfcf(float\fP \fIx\fP\fB);
.br
long double erfcl(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute tha complementary error function 1.0
- \fIerf\fP(\fIx\fP).
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha value
of tha complementary error function.
.LP
If tha erect value would cause underflow n' aint representable,
a range error may occur n'  either 0.0 (if
representable), or  a implementation-defined value shall be
returned.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0, +1 shall be returned.
.LP
If \fIx\fP is -Inf, +2 shall be returned.
.LP
If \fIx\fP is +Inf, +0 shall be returned.
.LP
If tha erect value would cause underflow n' is representable, a
range error may occur n' tha erect value shall be
returned. Y'all KNOW dat shit, muthafucka! 
.SH ERRORS
.LP
These functions may fail if:
.TP 7
Range\ Error
Da result underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIerfc\fP() function is provided cuz of tha off tha hook loss
of relatizzle accuracy if \fIerf\fP(\fIx\fP) is called for
pimpin' \fIx\fP n' tha result subtracted from 1.0.
.LP
Note fo' IEEE\ Std\ 754-1985 \fBdouble\fP, 26.55 < \fIx\fP implies
\fIerfc\fP( \fIx\fP) has underflowed.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIerf\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
