.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FSTAT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fstat 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fstat \- git file status
.SH SYNOPSIS
.LP
\fB#include <sys/stat.h>
.br
.sp
int fstat(int\fP \fIfildes\fP\fB, struct stat *\fP\fIbuf\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfstat\fP() function shall obtain shiznit bout a open
file associated wit tha file descriptor \fIfildes\fP, and
shall write it ta tha area pointed ta by \fIbuf\fP.
.LP
If \fIfildes\fP references a gangbangin' finger-lickin' dirty-ass shared memory object, tha implementation
shall update up in tha \fBstat\fP structure pointed ta by the
\fIbuf\fP argument only tha \fIst_uid\fP, \fIst_gid\fP, \fIst_size\fP,
and \fIst_mode\fP fields, n' only tha S_IRUSR,
S_IWUSR, S_IRGRP, S_IWGRP, S_IROTH, n' S_IWOTH file permission bits
need be valid. Y'all KNOW dat shit, muthafucka! Da implementation may update other fieldz and
flags. 
.LP
If \fIfildes\fP references a typed memory object, tha implementation
shall update up in tha \fBstat\fP structure pointed ta by the
\fIbuf\fP argument only tha \fIst_uid\fP, \fIst_gid\fP, \fIst_size\fP,
and \fIst_mode\fP fields, n' only tha S_IRUSR,
S_IWUSR, S_IRGRP, S_IWGRP, S_IROTH, n' S_IWOTH file permission bits
need be valid. Y'all KNOW dat shit, muthafucka! Da implementation may update other fieldz and
flags. 
.LP
Da \fIbuf\fP argument be a pointa ta a \fBstat\fP structure, as
defined up in \fI<sys/stat.h>\fP, tha fuck into which shiznit is placed concerning
the file.
.LP
Da structure thugz \fIst_mode\fP, \fIst_ino\fP, \fIst_dev\fP, \fIst_uid\fP,
\fIst_gid\fP, \fIst_atime\fP,
\fIst_ctime\fP, n' \fIst_mtime\fP shall have meaningful joints for
all other file types defined up in dis volume of
IEEE\ Std\ 1003.1-2001. Da value of tha member \fIst_nlink\fP shall
be set ta tha number of links ta tha file.
.LP
An implementation dat serves up additionizzle or alternatizzle file access
control mechanizzlez may, under implementation-defined
conditions, cause \fIfstat\fP() ta fail.
.LP
Da \fIfstat\fP() function shall update any time-related fieldz as
busted lyrics bout up in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.7, File Times Update, before writing
into tha \fBstat\fP structure.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise, -1 shall
be returned n' \fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIfstat\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIfildes\fP argument aint a valid file descriptor.
.TP 7
.B EIO
An I/O error occurred while readin from tha file system.
.TP 7
.B EOVERFLOW
Da file size up in bytes or tha number of blocks allocated ta tha file
or tha file serial number cannot be represented erectly
in tha structure pointed ta by \fIbuf\fP.
.sp
.LP
Da \fIfstat\fP() function may fail if:
.TP 7
.B EOVERFLOW
One of tha joints is too big-ass ta store tha fuck into tha structure pointed
to by tha \fIbuf\fP argument.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Obtainin File Status Information
.LP
Da followin example shows how tha fuck ta obtain file status shiznit
for a gangbangin' file named \fB/home/cnd/mod1\fP. Da structure variable
\fIbuffer\fP is defined fo' tha \fBstat\fP structure. Da \fB/home/cnd/mod1\fP
file is opened wit read/write privileges n' is
passed ta tha open file descriptor \fIfildes\fP.
.sp
.RS
.nf

\fB#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
.sp

struct stat buffer;
int         status;
\&...
fildes = open("/home/cnd/mod1", O_RDWR);
status = fstat(fildes, &buffer);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIlstat\fP(), \fIstat\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/stat.h>\fP, \fI<sys/types.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
