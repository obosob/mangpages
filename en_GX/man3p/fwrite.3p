.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FWRITE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fwrite 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fwrite \- binary output
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
size_t fwrite(const void *restrict\fP \fIptr\fP\fB, size_t\fP \fIsize\fP\fB,
size_t\fP \fInitems\fP\fB,
.br
\ \ \ \ \ \  FILE *restrict\fP \fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfwrite\fP() function shall write, from tha array pointed to
by \fIptr\fP, up ta \fInitems\fP elements whose size is
specified by \fIsize\fP, ta tha stream pointed ta by \fIstream\fP.
For each object, \fIsize\fP calls shall be made ta tha \fIfputc\fP()
function, takin tha joints (in order) from a array of \fBunsigned
char\fP
exactly overlayin tha object. Da file-posizzle indicator fo' the
stream (if defined) shall be advanced by tha number of bytes
successfully written. I aint talkin' bout chicken n' gravy biatch. If a error occurs, tha resultin value of the
file-posizzle indicator fo' tha stream is unspecified.
.LP
The
\fIst_ctime\fP n' \fIst_mtime\fP fieldz of tha file shall be marked
for update between tha successful execution of
\fIfwrite\fP() n' tha next successful completion of a cold-ass lil call ta \fIfflush\fP()
or \fIfclose\fP() on tha same stream, or a cold-ass lil call ta \fIexit\fP()
or \fIabort\fP(). 
.SH RETURN VALUE
.LP
Da \fIfwrite\fP() function shall return tha number of elements successfully
written, which may be less than \fInitems\fP if a
write error is encountered. Y'all KNOW dat shit, muthafucka! If \fIsize\fP or \fInitems\fP is 0, \fIfwrite\fP()
shall return 0 n' tha state of tha stream
remains unchanged. Y'all KNOW dat shit, muthafucka! Otherwise, if a write error occurs, tha error indicator
for tha stream shall be set,  and
\fIerrno\fP shall be set ta indicate tha error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Refer ta \fIfputc\fP().
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Because of possible differences up in element length n' byte ordering,
filez freestyled rockin \fIfwrite\fP() are
application-dependent, n' possibly cannot be read rockin \fIfread\fP()
by a gangbangin' finger-lickin' different
application or by tha same application on a gangbangin' finger-lickin' different processor.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIferror\fP(), \fIfopen\fP(), \fIprintf\fP(),
\fIputc\fP(), \fIputs\fP(), \fIwrite\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
