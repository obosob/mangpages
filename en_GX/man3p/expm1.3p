.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "EXPM1" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" expm1 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
expm1, expm1f, expm1l \- compute exponential functions
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double expm1(double\fP \fIx\fP\fB);
.br
float expm1f(float\fP \fIx\fP\fB);
.br
long double expm1l(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute \fIe**x\fP-1.0.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions return \fIe**x\fP-1.0.
.LP
If tha erect value would cause overflow, a range error shall occur
and \fIexpm1\fP(), \fIexpm1f\fP(), n' \fIexpm1l\fP()
shall return tha value of tha macro HUGE_VAL, HUGE_VALF, n' HUGE_VALL,
respectively.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0, \(+-0 shall be returned.
.LP
If \fIx\fP is -Inf, -1 shall be returned.
.LP
If \fIx\fP is +Inf, \fIx\fP shall be returned.
.LP
If \fIx\fP is subnormal, a range error may occur n' \fIx\fP should
be returned. Y'all KNOW dat shit, muthafucka! 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Range\ Error
Da result overflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.sp
.LP
These functions may fail if:
.TP 7
Range\ Error
Da value of \fIx\fP is subnormal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da value of \fIexpm1\fP(\fIx\fP) may be mo' accurate than \fIexp\fP(\fIx\fP)-1.0
for lil' small-ass jointz of \fIx\fP.
.LP
Da \fIexpm1\fP() n' \fIlog1p\fP() functions is useful fo' financial
calculations of
((1+\fIx\fP)**\fIn\fP-1)/\fIx\fP, namely:
.sp
.RS
.nf

\fBexpm1(\fP\fIn\fP \fB* log1p(\fP\fIx\fP\fB))/\fP\fIx\fP
.fi
.RE
.LP
when \fIx\fP is straight-up lil' small-ass (for example, when calculatin lil' small-ass everyday
interest rates). These functions also simplify writing
accurate inverse hyperbolic functions.
.LP
For IEEE\ Std\ 754-1985 \fBdouble\fP, 709.8 < \fIx\fP implies \fIexpm1\fP(
\fIx\fP) has overflowed.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIexp\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIilogb\fP(),
\fIlog1p\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18,
Treatment of Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
