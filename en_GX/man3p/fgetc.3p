.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FGETC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fgetc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fgetc \- git a funky-ass byte from a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
int fgetc(FILE *\fP\fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
If tha end-of-file indicator fo' tha input stream pointed ta by \fIstream\fP
is not set n' a next byte is present, the
\fIfgetc\fP() function shall obtain tha next byte as a \fBunsigned
char\fP converted ta a \fBint\fP, from tha input stream
pointed ta by \fIstream\fP, n' advizzle tha associated file position
indicator fo' tha stream (if defined). Right back up in yo muthafuckin ass. Since \fIfgetc\fP()
operates on bytes, readin a cold-ass lil characta consistin of multiple bytes
(or "a multi-byte character") may require multiple calls to
\fIfgetc\fP().
.LP
The
\fIfgetc\fP() function may mark tha \fIst_atime\fP field of tha file
associated wit \fIstream\fP fo' update. The
\fIst_atime\fP field shall be marked fo' update by tha straight-up original gangsta successful
execution of \fIfgetc\fP(), \fIfgets\fP(), \fIfgetwc\fP(), \fIfgetws\fP(),
\fIfread\fP(), \fIfscanf\fP(), \fIgetc\fP(), \fIgetchar\fP(), \fIgets\fP(),
or \fIscanf\fP() rockin \fIstream\fP dat returns data not supplied
by a prior call ta \fIungetc\fP() or \fIungetwc\fP(). 
.SH RETURN VALUE
.LP
Upon successful completion, \fIfgetc\fP() shall return tha next byte
from tha input stream pointed ta by \fIstream\fP. If the
end-of-file indicator fo' tha stream is set, or if tha stream be at
end-of-file, tha end-of-file indicator fo' tha stream shall be
set n' \fIfgetc\fP() shall return EOF. If a read error occurs, the
error indicator fo' tha stream shall be set, \fIfgetc\fP()
shall return EOF,  n' shall set \fIerrno\fP ta indicate tha error.
.SH ERRORS
.LP
Da \fIfgetc\fP() function shall fail if data need ta be read and:
.TP 7
.B EAGAIN
Da O_NONBLOCK flag is set fo' tha file descriptor underlyin \fIstream\fP
and tha process would be delayed up in tha \fIfgetc\fP()
operation. I aint talkin' bout chicken n' gravy biatch. 
.TP 7
.B EBADF
Da file descriptor underlyin \fIstream\fP aint a valid file descriptor
open fo' reading. 
.TP 7
.B EINTR
Da read operation was terminated cuz of tha receipt of a signal,
and no data was transferred. Y'all KNOW dat shit, muthafucka! 
.TP 7
.B EIO
A
physical I/O error has occurred, or tha process is up in a funky-ass background
process crew attemptin ta read from its controllin terminal,
and either tha process is ignorin or blockin tha SIGTTIN signal
or tha process crew is orphaned. Y'all KNOW dat shit, muthafucka! This error may also be
generated fo' implementation-defined reasons. 
.TP 7
.B EOVERFLOW
Da file be a regular file n' a attempt was made ta read at or beyond
the offset maximum associated wit tha corresponding
stream. 
.sp
.LP
Da \fIfgetc\fP() function may fail if:
.TP 7
.B ENOMEM
Insufficient storage space be available. 
.TP 7
.B ENXIO
A
request was made of a nonexistent device, or tha request was outside
the capabilitizzlez of tha device. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
If tha integer value returned by \fIfgetc\fP() is stored tha fuck into a variable
of type \fBchar\fP n' then compared against the
integer constant EOF, tha comparison may never succeed, cuz sign-extension
of a variable of type \fBchar\fP on widenin to
integer is implementation-defined.
.LP
Da \fIferror\fP() or \fIfeof\fP() functions must
be used ta distinguish between a error condizzle n' a end-of-file
condition.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeof\fP(), \fIferror\fP(), \fIfopen\fP(), \fIgetchar\fP(),
\fIgetc\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
