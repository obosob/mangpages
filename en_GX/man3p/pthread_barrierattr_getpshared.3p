.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_BARRIERATTR_GETPSHARED" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_barrierattr_getpshared 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_barrierattr_getpshared, pthread_barrierattr_setpshared \- get
and set tha process\-shared attribute of the
barrier attributes object (\fBADVANCED REALTIME THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
\fP
.LP
\fBint pthread_barrierattr_getpshared(const pthread_barrierattr_t
*
.br
\ \ \ \ \ \  restrict\fP \fIattr\fP\fB, int *restrict\fP \fIpshared\fP\fB);
.br
int pthread_barrierattr_setpshared(pthread_barrierattr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIpshared\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_barrierattr_getpshared\fP() function shall obtain the
value of tha \fIprocess-shared\fP attribute from the
attributes object referenced by \fIattr\fP. Da \fIpthread_barrierattr_setpshared\fP()
function shall set the
\fIprocess-shared\fP attribute up in a initialized attributes object
referenced by \fIattr\fP.
.LP
Da \fIprocess-shared\fP attribute is set ta PTHREAD_PROCESS_SHARED
to permit a funky-ass barrier ta be operated upon by any thread that
has access ta tha memory where tha barrier be allocated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha \fIprocess-shared\fP
attribute is PTHREAD_PROCESS_PRIVATE, the
barrier shall only be operated upon by threadz pimped within the
same process as tha thread dat initialized tha barrier; if
threadz of different processes attempt ta operate on such a funky-ass barrier,
the behavior is undefined. Y'all KNOW dat shit, muthafucka! Da default value of tha attribute
shall be PTHREAD_PROCESS_PRIVATE. Both constants PTHREAD_PROCESS_SHARED
and PTHREAD_PROCESS_PRIVATE is defined up in \fI<pthread.h>\fP.
.LP
Additionizzle attributes, they default joints, n' tha namez of the
associated functions ta git n' set dem attribute joints are
implementation-defined.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_barrierattr_getpshared\fP() function
shall return zero n' store tha value of the
\fIprocess-shared\fP attribute of \fIattr\fP tha fuck into tha object referenced
by tha \fIpshared\fP parameter n' shit. Otherwise, a error
number shall be moonwalked back ta indicate tha error.
.LP
If successful, tha \fIpthread_barrierattr_setpshared\fP() function
shall return zero; otherwise, a error number shall be
returned ta indicate tha error.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
.B EINVAL
Da value specified by \fIattr\fP is invalid.
.sp
.LP
Da \fIpthread_barrierattr_setpshared\fP() function may fail if:
.TP 7
.B EINVAL
Da freshly smoked up value specified fo' tha \fIprocess-shared\fP attribute is
not one of tha legal joints PTHREAD_PROCESS_SHARED or
PTHREAD_PROCESS_PRIVATE.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIpthread_barrierattr_getpshared\fP() n' \fIpthread_barrierattr_setpshared\fP()
functions is part of tha Barriers
option n' need not be provided on all implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_barrier_destroy\fP(), \fIpthread_barrierattr_destroy\fP(),
\fIpthread_barrierattr_init\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
