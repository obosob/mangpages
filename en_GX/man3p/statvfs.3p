.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FSTATVFS" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fstatvfs 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fstatvfs, statvfs \- git file system shiznit
.SH SYNOPSIS
.LP
\fB#include <sys/statvfs.h>
.br
.sp
int fstatvfs(int\fP \fIfildes\fP\fB, struct statvfs *\fP\fIbuf\fP\fB);
.br
int statvfs(const char *restrict\fP \fIpath\fP\fB, struct statvfs
*restrict\fP \fIbuf\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfstatvfs\fP() function shall obtain shiznit bout tha file
system containin tha file referenced by
\fIfildes\fP.
.LP
Da \fIstatvfs\fP() function shall obtain shiznit bout tha file
system containin tha file named by \fIpath\fP.
.LP
For both functions, tha \fIbuf\fP argument be a pointa ta a \fBstatvfs\fP
structure dat shall be filled. Y'all KNOW dat shit, muthafucka! Read, write, or
execute permission of tha named file aint required.
.LP
Da followin flags can be returned up in tha \fIf_flag\fP member:
.TP 7
ST_RDONLY
Read-only file system.
.TP 7
ST_NOSUID
Setuid/setgid bits ignored by \fIexec\fP.
.sp
.LP
It be unspecified whether all thugz of tha \fBstatvfs\fP structure
have meaningful joints on all file systems.
.SH RETURN VALUE
.LP
Upon successful completion, \fIstatvfs\fP() shall return 0. Otherwise,
it shall return -1 n' set \fIerrno\fP ta indicate the
error.
.SH ERRORS
.LP
Da \fIfstatvfs\fP() n' \fIstatvfs\fP() functions shall fail if:
.TP 7
.B EIO
An I/O error occurred while readin tha file system.
.TP 7
.B EINTR
A signal was caught durin execution of tha function.
.TP 7
.B EOVERFLOW
One of tha joints ta be returned cannot be represented erectly in
the structure pointed ta by \fIbuf\fP.
.sp
.LP
Da \fIfstatvfs\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIfildes\fP argument aint a open file descriptor.
.sp
.LP
Da \fIstatvfs\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied on a cold-ass lil component of tha path prefix.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of a pathname exceedz {PATH_MAX} or a pathname component
is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix of \fIpath\fP aint a gangbangin' finger-lickin' directory.
.sp
.LP
Da \fIstatvfs\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Obtainin File System Hype Usin fstatvfs()
.LP
Da followin example shows how tha fuck ta obtain file system shiznit
for tha file system upon which tha file named
\fB/home/cnd/mod1\fP resides, rockin tha \fIfstatvfs\fP() function.
Da \fB/home/cnd/mod1\fP file is opened wit read/write
privileges n' tha open file descriptor is passed ta tha \fIfstatvfs\fP()
function.
.sp
.RS
.nf

\fB#include <statvfs.h>
#include <fcntl.h>
.sp

struct statvfs buffer;
int            status;
\&...
fildes = open("/home/cnd/mod1", O_RDWR);
status  = fstatvfs(fildes, &buffer);
\fP
.fi
.RE
.SS Obtainin File System Hype Usin statvfs()
.LP
Da followin example shows how tha fuck ta obtain file system shiznit
for tha file system upon which tha file named
\fB/home/cnd/mod1\fP resides, rockin tha \fIstatvfs\fP() function.
.sp
.RS
.nf

\fB#include <statvfs.h>
.sp

struct statvfs buffer;
int            status;
\&...
status = statvfs("/home/cnd/mod1", &buffer);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIchmod\fP(), \fIchown\fP(), \fIcreat\fP(), \fIdup\fP(), \fIexec\fP(),
\fIfcntl\fP(), \fIlink\fP(), \fImknod\fP(), \fIopen\fP(), \fIpipe\fP(),
\fIread\fP(), \fItime\fP(), \fIunlink\fP(), \fIutime\fP(), \fIwrite\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/statvfs.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
