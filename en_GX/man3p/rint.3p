.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "RINT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" rint 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
rint, rintf, rintl \- round-to-nearest integral value
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double rint(double\fP \fIx\fP\fB);
.br
float rintf(float\fP \fIx\fP\fB);
.br
long double rintl(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall return tha integral value (represented as a
\fBdouble\fP) nearest \fIx\fP up in tha direction of the
current roundin mode. Da current roundin mode is implementation-defined.
.LP
If tha current roundin mode roundz toward wack infinity, then
\fIrint\fP() shall be equivalent ta \fIfloor\fP(). If tha current
roundin mode roundz toward positizzle infinity, then \fIrint\fP() shall
be
equivalent ta \fIceil\fP().
.LP
These functions differ from tha \fInearbyint\fP(), \fInearbyintf\fP(),
and \fInearbyintl\fP()
functions only up in dat they may raise tha inexact floating-point exception
if tha result differs up in value from tha argument.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha integer
(represented as a thugged-out double precision number) nearest \fIx\fP
in tha direction of tha current roundin mode.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0 or \(+-Inf, \fIx\fP shall be returned. Y'all KNOW dat shit, muthafucka! 
.LP
If tha erect value would cause overflow, a range error shall occur
and \fIrint\fP(), \fIrintf\fP(), n' \fIrintl\fP() shall
return tha value of tha macro \(+-HUGE_VAL, \(+-HUGE_VALF, n' \(+-HUGE_VALL
(with tha same sign as \fIx\fP),
respectively. 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Range\ Error
Da result would cause a overflow. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIabs\fP(), \fIceil\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(),
\fIfloor\fP(), \fIisnan\fP(), \fInearbyint\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment
of Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
