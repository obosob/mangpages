.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ASCTIME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" asctime 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
asctime, asctime_r \- convert date n' time ta a string
.SH SYNOPSIS
.LP
\fB#include <time.h>
.br
.sp
char *asctime(const struct tm *\fP\fItimeptr\fP\fB);
.br
\fP
.LP
\fBchar *asctime_r(const struct tm *restrict\fP \fItm\fP\fB, char
*restrict\fP \fIbuf\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
For \fIasctime\fP():   Da functionalitizzle busted lyrics bout on dis reference
page be aligned wit tha ISO\ C standard. Y'all KNOW dat shit, muthafucka! Any
conflict between tha requirements busted lyrics bout here n' tha ISO\ C standard
is unintentional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. This volume of
IEEE\ Std\ 1003.1-2001 defers ta tha ISO\ C standard. Y'all KNOW dat shit, muthafucka! 
.LP
Da \fIasctime\fP() function shall convert tha broken-down time in
the structure pointed ta by \fItimeptr\fP tha fuck into a strang in
the form:
.sp
.RS
.nf

\fBSun Sep 16 01:03:52 1973\\n\\0
\fP
.fi
.RE
.LP
usin tha equivalent of tha followin algorithm:
.sp
.RS
.nf

\fBchar *asctime(const struct tm *timeptr)
{
    static char wday_name[7][3] = {
        "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
    };
    static char mon_name[12][3] = {
        "Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
    };
    static char result[26];
.sp

    sprintf(result, "%.3s %.3s%3d %.2d:%.2d:%.2d %d\\n",
        wday_name[timeptr->tm_wday],
        mon_name[timeptr->tm_mon],
        timeptr->tm_mday, timeptr->tm_hour,
        timeptr->tm_min, timeptr->tm_sec,
        1900 + timeptr->tm_year);
    return result;
}
\fP
.fi
.RE
.LP
Da \fBtm\fP structure is defined up in tha \fI<time.h>\fP header.
.LP
The
\fIasctime\fP(), \fIctime\fP(), \fIgmtime\fP(), and
\fIlocaltime\fP() functions shall return joints up in one of two static
objects: a
broken-down time structure n' a array of type \fBchar\fP. Execution
of any of tha functions may overwrite tha shiznit
returned up in either of these objects by any of tha other functions.
.LP
Da \fIasctime\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe. 
.LP
Da \fIasctime_r\fP() function shall convert tha broken-down time
in tha structure pointed ta by \fItm\fP tha fuck into a strang (of the
same form as dat returned by \fIasctime\fP()) dat is placed up in the
user-supplied buffer pointed ta by \fIbuf\fP (which shall
contain at least 26 bytes) n' then return \fIbuf\fP. 
.SH RETURN VALUE
.LP
Upon successful completion, \fIasctime\fP() shall return a pointer
to tha string.
.LP
Upon successful completion, \fIasctime_r\fP() shall return a pointer
to a cold-ass lil characta strang containin tha date n' time. This
strin is pointed ta by tha argument \fIbuf\fP. If tha function is
unsuccessful, it shall return NULL. 
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Values fo' tha broken-down time structure can be obtained by calling
\fIgmtime\fP() or
\fIlocaltime\fP(). This function is included fo' compatibilitizzle with
older
implementations, n' do not support localized date n' time formats.
Applications should use \fIstrftime\fP() ta big up maximum portability.
.LP
Da \fIasctime_r\fP() function is thread-safe n' shall return joints
in a user-supplied buffer instead of possibly rockin a
static data area dat may be overwritten by each call.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIclock\fP(), \fIctime\fP(), \fIdifftime\fP(), \fIgmtime\fP(),
\fIlocaltime\fP(),
\fImktime\fP(), \fIstrftime\fP(), \fIstrptime\fP(), \fItime\fP(),
\fIutime\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
