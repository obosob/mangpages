.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "REALLOC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" realloc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
realloc \- memory reallocator
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
void *realloc(void *\fP\fIptr\fP\fB, size_t\fP \fIsize\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIrealloc\fP() function shall chizzle tha size of tha memory object
pointed ta by \fIptr\fP ta tha size specified by
\fIsize\fP. Da contentz of tha object shall remain unchanged up to
the lesser of tha freshly smoked up n' oldschool sizes. If tha freshly smoked up size of the
memory object would require movement of tha object, tha space for
the previous instantiation of tha object is freed. Y'all KNOW dat shit, muthafucka! If tha new
size is larger, tha contentz of tha newly allocated portion of the
object is unspecified. Y'all KNOW dat shit, muthafucka! If \fIsize\fP is 0 n' \fIptr\fP is
not a null pointer, tha object pointed ta is freed. Y'all KNOW dat shit, muthafucka! If tha space cannot
be allocated, tha object shall remain unchanged.
.LP
If \fIptr\fP be a null pointer, \fIrealloc\fP() shall be equivalent
to \fImalloc\fP()
for tha specified size.
.LP
If \fIptr\fP do not match a pointa returned earlier by \fIcalloc\fP(),
\fImalloc\fP(), or \fIrealloc\fP() or if tha space has previously
been deallocated by a cold-ass lil call ta \fIfree\fP() or \fIrealloc\fP(), the
behavior is undefined.
.LP
Da order n' contiguitizzle of storage allocated by successive calls
to \fIrealloc\fP() is unspecified. Y'all KNOW dat shit, muthafucka! Da pointa returned if
the allocation succeedz shall be suitably aligned so dat it may be
assigned ta a pointa ta any type of object n' then used to
access such a object up in tha space allocated (until tha space is explicitly
freed or reallocated). Each such allocation shall yield
a pointa ta a object disjoint from any other object. Da pointer
returned shall point ta tha start (lowest byte address) of the
allocated space. If tha space cannot be allocated, a null pointer
shall be returned.
.SH RETURN VALUE
.LP
Upon successful completion wit a size not equal ta 0, \fIrealloc\fP()
shall return a pointa ta tha (possibly moved) allocated
space. If \fIsize\fP is 0, either a null pointa or a unique pointer
that can be successfully passed ta \fIfree\fP() shall be returned.
If there aint enough available memory, \fIrealloc\fP() shall
return a null pointa  n' set \fIerrno\fP ta [ENOMEM]. 
.SH ERRORS
.LP
Da \fIrealloc\fP() function shall fail if:
.TP 7
.B ENOMEM
Insufficient memory be available. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcalloc\fP(), \fIfree\fP(), \fImalloc\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
