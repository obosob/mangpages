.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SHM_UNLINK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" shm_unlink 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
shm_unlink \- remove a gangbangin' finger-lickin' dirty-ass shared memory object (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <sys/mman.h>
.br
.sp
int shm_unlink(const char *\fP\fIname\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIshm_unlink\fP() function shall remove tha name of tha shared
memory object named by tha strang pointed ta by
\fIname\fP.
.LP
If one or mo' references ta tha shared memory object exist when the
object is unlinked, tha name shall be removed before
\fIshm_unlink\fP() returns yo, but tha removal of tha memory object contents
shall be postponed until all open n' map references to
the shared memory object done been removed.
.LP
Even if tha object continues ta exist afta tha last \fIshm_unlink\fP(),
reuse of tha name shall subsequently cause \fIshm_open\fP() ta behave
as if no shared memory object of dis name exists (that is, \fIshm_open\fP()
will fail if O_CREAT aint set, or will create a freshly smoked up shared memory
object if
O_CREAT is set).
.SH RETURN VALUE
.LP
Upon successful completion, a value of zero shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise,
a value of -1 shall be returned n' \fIerrno\fP set
to indicate tha error. Shiiit, dis aint no joke. If -1 is returned, tha named shared memory
object shall not be chizzled by dis function call.
.SH ERRORS
.LP
Da \fIshm_unlink\fP() function shall fail if:
.TP 7
.B EACCES
Permission is denied ta unlink tha named shared memory object.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIname\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
Da named shared memory object do not exist.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Namez of memory objects dat was allocated wit \fIopen\fP() are
deleted wit \fIunlink\fP() up in tha usual fashion. I aint talkin' bout chicken n' gravy biatch. Namez of memory
objects dat was allocated wit \fIshm_open\fP() is deleted with
\fIshm_unlink\fP(). Note dat tha actual memory object is not
destroyed until tha last close n' unmap on it have occurred if it
was already up in use.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIclose\fP(), \fImmap\fP(), \fImunmap\fP(), \fIshmat\fP(), \fIshmctl\fP(),
\fIshmdt\fP(), \fIshm_open\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/mman.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
