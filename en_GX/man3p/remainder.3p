.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "REMAINDER" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" remainder 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
remainder, remainderf, remainderl \- remainder function
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double remainder(double\fP \fIx\fP\fB, double\fP \fIy\fP\fB);
.br
float remainderf(float\fP \fIx\fP\fB, float\fP \fIy\fP\fB);
.br
long double remainderl(long double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall return tha floating-point remainder \fIr\fP=
\fIx\fP- \fIny\fP when \fIy\fP is non-zero. Da value
\fIn\fP is tha integral value nearest tha exact value \fIx\fP/ \fIy\fP.
When |\fIn\fP-\fIx\fP/\fIy\fP|=0.5, tha value
\fIn\fP is chosen ta be even.
.LP
Da behavior of \fIremainder\fP() shall be independent of tha rounding
mode.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha floating-point
remainder \fIr\fP= \fIx\fP- \fIny\fP when
\fIy\fP is non-zero.
.LP
If
\fIx\fP or \fIy\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is infinite or \fIy\fP is 0 n' tha other is non-NaN, a
domain error shall occur, n' either a NaN (if supported),
or a implementation-defined value shall be returned. Y'all KNOW dat shit, muthafucka! 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Domain\ Error
Da \fIx\fP argument is \(+-Inf, or tha \fIy\fP argument is \(+-0
and tha other argument is non-NaN. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [EDOM]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha invalid floating-point exception shall be raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIabs\fP(), \fIdiv\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(),
\fIldiv\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 4.18, Treatment of Error Conditions fo' Mathematical Functions,
\fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
