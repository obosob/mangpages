.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "NANOSLEEP" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" nanosleep 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
nanosleep \- high resolution chill (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <time.h>
.br
.sp
int nanosleep(const struct timespec *\fP\fIrqtp\fP\fB, struct timespec
*\fP\fIrmtp\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fInanosleep\fP() function shall cause tha current thread ta be
suspended from execution until either tha time interval
specified by tha \fIrqtp\fP argument has elapsed or a signal is delivered
to tha callin thread, n' its action is ta invoke a
signal-catchin function or ta terminizzle tha process. Da suspension
time may be longer than axed cuz tha argument value
is rounded up ta a integer multiple of tha chill resolution or cuz
of tha schedulin of other activitizzle by tha system. But,
except fo' tha case of bein interrupted by a signal, tha suspension
time shall not be less than tha time specified by \fIrqtp\fP,
as measured by tha system clock CLOCK_REALTIME.
.LP
Da use of tha \fInanosleep\fP() function has no effect on tha action
or blockage of any signal.
.SH RETURN VALUE
.LP
If tha \fInanosleep\fP() function returns cuz tha axed time
has elapsed, its return value shall be zero.
.LP
If tha \fInanosleep\fP() function returns cuz it has been interrupted
by a signal, it shall return a value of -1 n' set
\fIerrno\fP ta indicate tha interruption. I aint talkin' bout chicken n' gravy biatch. If tha \fIrmtp\fP argument
is non-NULL, tha \fBtimespec\fP structure referenced by it
is updated ta contain tha amount of time remainin up in tha interval
(the axed time minus tha time straight-up slept). If the
\fIrmtp\fP argument is NULL, tha remainin time aint returned.
.LP
If \fInanosleep\fP() fails, it shall return a value of -1 n' set
\fIerrno\fP ta indicate tha error.
.SH ERRORS
.LP
Da \fInanosleep\fP() function shall fail if:
.TP 7
.B EINTR
Da \fInanosleep\fP() function was interrupted by a signal.
.TP 7
.B EINVAL
Da \fIrqtp\fP argument specified a nanosecond value less than zero
or pimped outa than or equal ta 1000 million.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
It be common ta suspend execution of a process fo' a interval in
order ta poll tha statuz of a non-interruptin function. I aint talkin' bout chicken n' gravy biatch fo' realz. A
pimpin' number of actual needz can be kicked it wit wit a simple extension to
\fIsleep\fP() that
provides finer resolution.
.LP
In tha POSIX.1-1990 standard n' SVR4, it is possible ta implement
such a routine yo, but tha frequency of wakeup is limited by the
resolution of tha \fIalarm\fP() n' \fIsleep\fP()
functions. In 4.3 BSD, it is possible ta write such a routine using
no static storage n' reservin no system facilitizzles fo' realz. Although
it is possible ta write a gangbangin' function wit similar functionalitizzle ta \fIsleep\fP()
usin the
remainder of tha \fItimer_*\fP() functions, such a gangbangin' function requires
the use of signals
and tha reservation of some signal number n' shit. This volume of IEEE\ Std\ 1003.1-2001
requires dat \fInanosleep\fP() be
non-intrusive of tha signals function.
.LP
Da \fInanosleep\fP() function shall return a value of 0 on success
and -1 on failure or if interrupted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This latta case is
different from \fIsleep\fP(). This was done cuz tha remaining
time is returned via an
argument structure pointer, \fIrmtp\fP, instead of as tha return value.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsleep\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
