.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SETVBUF" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" setvbuf 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
setvbuf \- assign bufferin ta a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
int setvbuf(FILE *restrict\fP \fIstream\fP\fB, char *restrict\fP \fIbuf\fP\fB,
int\fP \fItype\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIsize\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsetvbuf\fP() function may be used afta tha stream pointed
to by \fIstream\fP be associated wit a open file but
before any other operation (other than a unsuccessful call ta \fIsetvbuf\fP())
is performed on tha stream. Da argument
\fItype\fP determines how tha fuck \fIstream\fP shall be buffered, as bigs up:
.IP " *" 3
{_IOFBF} shall cause input/output ta be straight-up buffered.
.LP
.IP " *" 3
{_IOLBF} shall cause input/output ta be line buffered.
.LP
.IP " *" 3
{_IONBF} shall cause input/output ta be unbuffered.
.LP
.LP
If \fIbuf\fP aint a null pointer, tha array it points ta may be
used instead of a funky-ass buffer allocated by \fIsetvbuf\fP() and
the argument \fIsize\fP specifies tha size of tha array; otherwise,
\fIsize\fP may determine tha size of a funky-ass buffer allocated by
the \fIsetvbuf\fP() function. I aint talkin' bout chicken n' gravy biatch. Da contentz of tha array at any time
are unspecified.
.LP
For shiznit bout streams, peep \fIStandard I/O Streams\fP .
.SH RETURN VALUE
.LP
Upon successful completion, \fIsetvbuf\fP() shall return 0. Otherwise,
it shall return a non-zero value if a invalid value is
given fo' \fItype\fP or if tha request cannot be honored,  and
may set \fIerrno\fP ta indicate tha error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIsetvbuf\fP() function may fail if:
.TP 7
.B EBADF
Da file descriptor underlyin \fIstream\fP aint valid. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
A common source of error be allocatin buffer space as a "automatic"
variable up in a cold-ass lil code block, n' then failin ta close the
stream up in tha same block.
.LP
With \fIsetvbuf\fP(), allocatin a funky-ass buffer of \fIsize\fP bytes do
not necessarily imply dat all of \fIsize\fP bytes are
used fo' tha buffer area.
.LP
Applications should note dat nuff implementations only provide line
bufferin on input from terminal devices.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIStandard I/O Streams\fP, \fIfopen\fP(), \fIsetbuf\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
