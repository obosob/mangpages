.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SYMLINK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" symlink 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
symlink \- cook up a symbolic link ta a gangbangin' file
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int symlink(const char *\fP\fIpath1\fP\fB, const char *\fP\fIpath2\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsymlink\fP() function shall create a symbolic link called \fIpath2\fP
that gotz nuff tha strang pointed ta by
\fIpath1\fP ( \fIpath2\fP is tha name of tha symbolic link pimped,
\fIpath1\fP is tha strang contained up in tha symbolic
link).
.LP
Da strang pointed ta by \fIpath1\fP shall be treated only as a cold-ass lil character
strin n' shall not be validated as a pathname.
.LP
If tha \fIsymlink\fP() function fails fo' any reason other than [EIO],
any file named by \fIpath2\fP shall be unaffected.
.SH RETURN VALUE
.LP
Upon successful completion, \fIsymlink\fP() shall return 0; otherwise,
it shall return -1 n' set \fIerrno\fP ta indicate the
error.
.SH ERRORS
.LP
Da \fIsymlink\fP() function shall fail if:
.TP 7
.B EACCES
Write permission is denied up in tha directory where tha symbolic link
is bein pimped, or search permission is denied fo' a
component of tha path prefix of \fIpath2\fP.
.TP 7
.B EEXIST
Da \fIpath2\fP argument names a existin file or symbolic link.
.TP 7
.B EIO
An I/O error occurs while readin from or freestylin ta tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath2\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath2\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX} or tha length of the
\fIpath1\fP argument is longer than {SYMLINK_MAX}.
.TP 7
.B ENOENT
A component of \fIpath2\fP do not name a existin file or \fIpath2\fP
is a empty string.
.TP 7
.B ENOSPC
Da directory up in which tha entry fo' tha freshly smoked up symbolic link is being
placed cannot be extended cuz no space is left on the
file system containin tha directory, or tha freshly smoked up symbolic link cannot
be pimped cuz no space is left on tha file system which
shall contain tha link, or tha file system is outta file-allocation
resources.
.TP 7
.B ENOTDIR
A component of tha path prefix of \fIpath2\fP aint a gangbangin' finger-lickin' directory.
.TP 7
.B EROFS
Da freshly smoked up symbolic link would reside on a read-only file system.
.sp
.LP
Da \fIsymlink\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath2\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encounterin a symbolic link up in resolution of tha \fIpath2\fP
argument, tha length of tha substituted pathname
strin exceeded {PATH_MAX} bytes (includin tha terminatin null byte),
or tha length of tha strang pointed ta by \fIpath1\fP
exceeded {SYMLINK_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Like a hard link, a symbolic link allows a gangbangin' file ta have multiple logical
names. Da presence of a hard link guarantees the
existence of a gangbangin' file, even afta tha original gangsta name has been removed.
A symbolic link serves up no such assurance; up in fact, tha file
named by tha \fIpath1\fP argument need not exist when tha link is
created. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A symbolic link can cross file system boundaries.
.LP
Normal permission checks is made on each component of tha symbolic
link pathname durin its resolution.
.SH RATIONALE
.LP
Since IEEE\ Std\ 1003.1-2001 do not require any association of file
times wit symbolic links, there is no requirement
that file times be updated by \fIsymlink\fP().
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIlchown\fP(), \fIlink\fP(), \fIlstat\fP(), \fIopen\fP(), \fIreadlink\fP(),
\fIunlink\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
