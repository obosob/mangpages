.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CONFSTR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" confstr 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
confstr \- git configurable variables
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
size_t confstr(int\fP \fIname\fP\fB, char *\fP\fIbuf\fP\fB, size_t\fP
\fIlen\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIconfstr\fP() function shall return configuration-defined string
values. Its use n' purpose is similar ta \fIsysconf\fP() yo, but it
is used where strang joints rather than numeric joints is returned.
.LP
Da \fIname\fP argument represents tha system variable ta be queried.
Da implementation shall support tha followin name
values, defined up in \fI<unistd.h>\fP. Well shiiiit, it may support others:
.LP
.sp
_CS_PATH
.br
_CS_POSIX_V6_ILP32_OFF32_CFLAGS
.br
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
.br
_CS_POSIX_V6_ILP32_OFF32_LIBS
.br
_CS_POSIX_V6_ILP32_OFSTDG_CFLAGS
.br
_CS_POSIX_V6_ILP32_OFSTDG_LDFLAGS
.br
_CS_POSIX_V6_ILP32_OFSTDG_LIBS
.br
_CS_POSIX_V6_LP64_OFF64_CFLAGS
.br
_CS_POSIX_V6_LP64_OFF64_LDFLAGS
.br
_CS_POSIX_V6_LP64_OFF64_LIBS
.br
_CS_POSIX_V6_LPBIG_OFSTDG_CFLAGS
.br
_CS_POSIX_V6_LPBIG_OFSTDG_LDFLAGS
.br
_CS_POSIX_V6_LPBIG_OFSTDG_LIBS
.br
_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
.br
.sp
_CS_XBS5_ILP32_OFF32_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LINTFLAGS (\fBLEGACY\fP)
.br
.sp
.LP
If \fIlen\fP aint 0, n' if \fIname\fP has a cold-ass lil configuration-defined
value, \fIconfstr\fP() shall copy dat value tha fuck into the
\fIlen\fP-byte buffer pointed ta by \fIbuf\fP. If tha strang ta be
returned is longer than \fIlen\fP bytes, includin the
terminatin null, then \fIconfstr\fP() shall truncate tha strang to
\fIlen\fP-1 bytes n' null-terminizzle tha result. The
application can detect dat tha strang was truncated by comparing
the value returned by \fIconfstr\fP() wit \fIlen\fP.
.LP
If \fIlen\fP is 0 n' \fIbuf\fP be a null pointer, then \fIconfstr\fP()
shall still return tha integer value as defined
below yo, but shall not return a string. If \fIlen\fP is 0 but \fIbuf\fP
is not a null pointer, tha result is unspecified.
.LP
If tha implementation supports tha POSIX shell option, tha string
stored up in \fIbuf\fP afta a cold-ass lil call to:
.sp
.RS
.nf

\fBconfstr(_CS_PATH, buf, sizeof(buf))
\fP
.fi
.RE
.LP
can be used as a value of tha \fIPATH\fP environment variable that
accesses all of tha standard utilitizzles of
IEEE\ Std\ 1003.1-2001, if tha return value is less than or equal
to \fIsizeof\fP( \fIbuf\fP).
.SH RETURN VALUE
.LP
If \fIname\fP has a cold-ass lil configuration-defined value, \fIconfstr\fP() shall
return tha size of buffer dat would be needed ta hold
the entire configuration-defined value includin tha terminatin null.
If dis return value is pimped outa than \fIlen\fP, tha string
returned up in \fIbuf\fP is truncated.
.LP
If \fIname\fP is invalid, \fIconfstr\fP() shall return 0 n' set \fIerrno\fP
to indicate tha error.
.LP
If \fIname\fP aint gots a cold-ass lil configuration-defined value, \fIconfstr\fP()
shall return 0 n' leave \fIerrno\fP
unchanged.
.SH ERRORS
.LP
Da \fIconfstr\fP() function shall fail if:
.TP 7
.B EINVAL
Da value of tha \fIname\fP argument is invalid.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
An application can distinguish between a invalid \fIname\fP parameter
value n' one dat correspondz ta a cold-ass lil configurable
variable dat has no configuration-defined value by checkin if \fIerrno\fP
is modified. Y'all KNOW dat shit, muthafucka! This mirrors tha behavior of \fIsysconf\fP().
.LP
Da original gangsta need fo' dis function was ta provide a way of finding
the configuration-defined default value fo' tha environment
variable \fIPATH\fP.  Since \fIPATH\fP can be modified by tha user
to include directories dat could contain utilitizzles replacing
the standard utilitizzles up in tha Shell n' Utilitizzles volume of IEEE\ Std\ 1003.1-2001,
applications need a way ta determine
the system-supplied \fIPATH\fP environment variable value dat gotz nuff
the erect search path fo' tha standard utilities.
.LP
An application could use:
.sp
.RS
.nf

\fBconfstr(name, (char *)NULL, (size_t)0)
\fP
.fi
.RE
.LP
to smoke up how tha fuck big-ass a funky-ass buffer is needed fo' tha strang value; use \fImalloc\fP()
to
allocate a funky-ass buffer ta hold tha string; n' call \fIconfstr\fP() again
to git tha strin fo' realz. Alternately, it could allocate a gangbangin' fixed,
static buffer dat is big-ass enough ta hold most lyrics (like 512
or 1024 bytes) yo, but then use \fImalloc\fP() ta allocate a larger buffer
if it findz dat dis is too small.
.SH RATIONALE
.LP
Application pimpers can normally determine any configuration variable
by meanz of readin from tha stream opened by a cold-ass lil call
to:
.sp
.RS
.nf

\fBpopen("command -p getconf variable", "r");
\fP
.fi
.RE
.LP
Da \fIconfstr\fP() function wit a \fIname\fP argument of _CS_PATH
returns a strang dat can be used as a \fIPATH\fP
environment variable settin dat will reference tha standard shell
and utilitizzles as busted lyrics bout up in tha Shell n' Utilitizzles volume of
IEEE\ Std\ 1003.1-2001.
.LP
Da \fIconfstr\fP() function copies tha returned strang tha fuck into a funky-ass buffer
supplied by tha application instead of returnin a
pointa ta a string. This allows a cold-ass lil cleaner function up in some implementations
(like fuckin dem wit lightweight threads) n' resolves
questions bout when tha application must copy tha strang returned.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpathconf\fP(), \fIsysconf\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP, tha Shell n' Utilities
volume of
IEEE\ Std\ 1003.1-2001, \fIc99\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
