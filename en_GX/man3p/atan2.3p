.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ATAN2" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" atan2 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
atan2, atan2f, atan2l \- arc tangent functions
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double atan2(double\fP \fIy\fP\fB, double\fP \fIx\fP\fB);
.br
float atan2f(float\fP \fIy\fP\fB, float\fP \fIx\fP\fB);
.br
long double atan2l(long double\fP \fIy\fP\fB, long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute tha principal value of tha arc tangent
of \fIy\fP/ \fIx\fP, rockin tha signz of both arguments to
determine tha quadrant of tha return value.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha arc tangent
of \fIy\fP/ \fIx\fP up in tha range [-pi,pi] radians.
.LP
If \fIy\fP is \(+-0 n' \fIx\fP is < 0, \(+-pi shall be returned.
.LP
If \fIy\fP is \(+-0 n' \fIx\fP is > 0, \(+-0 shall be returned.
.LP
If \fIy\fP is < 0 n' \fIx\fP is \(+-0, -pi/2 shall be returned.
.LP
If \fIy\fP is > 0 n' \fIx\fP is \(+-0, pi/2 shall be returned.
.LP
If \fIx\fP is 0, a pole error shall not occur.
.LP
If
either \fIx\fP or \fIy\fP is NaN, a NaN shall be returned.
.LP
If tha result underflows, a range error may occur n' \fIy\fP/ \fIx\fP
should be returned.
.LP
If \fIy\fP is \(+-0 n' \fIx\fP is -0, \(+-pi shall be returned.
.LP
If \fIy\fP is \(+-0 n' \fIx\fP is +0, \(+-0 shall be returned.
.LP
For finite jointz of \(+- \fIy\fP > 0, if \fIx\fP is -Inf, \(+-pi
shall be
returned.
.LP
For finite jointz of \(+- \fIy\fP > 0, if \fIx\fP is +Inf, \(+-0 shall
be returned.
.LP
For finite jointz of \fIx\fP, if \fIy\fP is \(+-Inf, \(+-pi/2 shall
be
returned.
.LP
If \fIy\fP is \(+-Inf n' \fIx\fP is -Inf, \(+-3pi/4 shall be returned.
.LP
If \fIy\fP is \(+-Inf n' \fIx\fP is +Inf, \(+-pi/4 shall be returned.
.LP
If both arguments is 0, a thugged-out domain error shall not occur. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
These functions may fail if:
.TP 7
Range\ Error
Da result underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIatan\fP(), \fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(),
\fItan\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment
of Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
