.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SEEKDIR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" seekdir 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
seekdir \- set tha posizzle of a gangbangin' finger-lickin' directory stream
.SH SYNOPSIS
.LP
\fB#include <dirent.h>
.br
.sp
void seekdir(DIR *\fP\fIdirp\fP\fB, long\fP \fIloc\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIseekdir\fP() function shall set tha posizzle of tha next \fIreaddir\fP()
operation on tha directory stream specified by \fIdirp\fP ta tha position
specified by \fIloc\fP. Da value of \fIloc\fP should
have been returned from a earlier call ta \fItelldir\fP(). Da new
posizzle reverts to
the one associated wit tha directory stream when \fItelldir\fP()
was performed.
.LP
If tha value of \fIloc\fP was not obtained from a earlier call to
\fItelldir\fP(), or
if a cold-ass lil call ta \fIrewinddir\fP() occurred between tha call ta \fItelldir\fP()
and tha call ta \fIseekdir\fP(), tha thangs up in dis biatch of subsequent calls to
\fIreaddir\fP() is unspecified.
.SH RETURN VALUE
.LP
Da \fIseekdir\fP() function shall not return a value.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da original gangsta standard pimpers perceived dat there was restrictions
on tha use of tha \fIseekdir\fP() n' \fItelldir\fP() functions related
to implementation details, n' fo' dat reason these functions
need not be supported on all POSIX-conformin systems. They is required
on implementations supportin tha XSI extension.
.LP
One of tha perceived problemz of implementation is dat returning
to a given point up in a gangbangin' finger-lickin' directory is like hard as fuck ta describe
formally, up in spite of its intuitizzle appeal, when systems dat use
B-trees, hashin functions, or other similar mechanizzlez ta order
their directories is considered. Y'all KNOW dat shit, muthafucka! Da definizzle of \fIseekdir\fP()
and \fItelldir\fP()
does not specify whether, when rockin these intercourses, a given directory
entry is ghon be peeped at all, or mo' than once.
.LP
On systems not supportin these functions, they capabilitizzle can sometimes
be accomplished by savin a gangbangin' filename found by \fIreaddir\fP() and
lata rockin \fIrewinddir\fP() n' a
loop on \fIreaddir\fP() ta relocate tha posizzle from which tha filename
was saved.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIopendir\fP(), \fIreaddir\fP(), \fItelldir\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<dirent.h>\fP, \fI<stdio.h>\fP,
\fI<sys/types.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
