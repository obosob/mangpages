.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SIGHOLD" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sighold 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sighold, sigignore, sigpause, sigrelse, sigset \- signal pimpment
.SH SYNOPSIS
.LP
\fB#include <signal.h>
.br
.sp
int sighold(int\fP \fIsig\fP\fB);
.br
int sigignore(int\fP \fIsig\fP\fB);
.br
int sigpause(int\fP \fIsig\fP\fB);
.br
int sigrelse(int\fP \fIsig\fP\fB);
.br
void (*sigset(int\fP \fIsig\fP\fB, void (*\fP\fIdisp\fP\fB)(int)))(int);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Use of any of these functions is unspecified up in a multi-threaded process.
.LP
Da \fIsighold\fP(), \fIsigignore\fP(), \fIsigpause\fP(), \fIsigrelse\fP(),
and \fIsigset\fP() functions provide simplified
signal pimpment.
.LP
Da \fIsigset\fP() function shall modify signal dispositions. The
\fIsig\fP argument specifies tha signal, which may be any
signal except SIGKILL n' SIGSTOP. Da \fIdisp\fP argument specifies
the signalz disposition, which may be SIG_DFL, SIG_IGN, or
the address of a signal handlez n' shit. If \fIsigset\fP() is used, n' \fIdisp\fP
is tha address of a signal handlez, tha system shall
add \fIsig\fP ta tha callin process' signal mask before executing
the signal handlez; when tha signal handlez returns, tha system
shall restore tha callin process' signal mask ta its state prior
to tha delivery of tha signal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. In addition, if \fIsigset\fP() is
used, n' \fIdisp\fP is equal ta SIG_HOLD, \fIsig\fP shall be added
to tha callin process' signal mask n' \fIsig\fP's
disposizzle shall remain unchanged. Y'all KNOW dat shit, muthafucka! If \fIsigset\fP() is used, and
\fIdisp\fP aint equal ta SIG_HOLD, \fIsig\fP shall be
removed from tha callin process' signal mask.
.LP
Da \fIsighold\fP() function shall add \fIsig\fP ta tha callin process'
signal mask.
.LP
Da \fIsigrelse\fP() function shall remove \fIsig\fP from tha calling
process' signal mask.
.LP
Da \fIsigignore\fP() function shall set tha disposizzle of \fIsig\fP
to SIG_IGN.
.LP
Da \fIsigpause\fP() function shall remove \fIsig\fP from tha calling
process' signal mask n' suspend tha callin process
until a signal is received. Y'all KNOW dat shit, muthafucka! Da \fIsigpause\fP() function shall restore
the process' signal mask ta its original gangsta state before
returning.
.LP
If tha action fo' tha SIGCHLD signal is set ta SIG_IGN, lil pimp processes
of tha callin processes shall not be transformed into
zombie processes when they terminate. If tha callin process subsequently
waits fo' its children, n' tha process has no
unwaited-for lil pimps dat was transformed tha fuck into zombie processes,
it shall block until all of its lil pimps terminate, n' \fIwait\fP(),
\fIwaitid\fP(), n' \fIwaitpid\fP() shall fail n' set \fIerrno\fP
to [ECHILD].
.SH RETURN VALUE
.LP
Upon successful completion, \fIsigset\fP() shall return SIG_HOLD if
the signal had been blocked n' tha signalz previous
disposizzle if it had not been blocked. Y'all KNOW dat shit, muthafucka! Otherwise, SIG_ERR shall be
returned n' \fIerrno\fP set ta indicate tha error.
.LP
Da \fIsigpause\fP() function shall suspend execution of tha thread
until a signal is received, whereupon it shall return -1
and set \fIerrno\fP ta [EINTR].
.LP
For all other functions, upon successful completion, 0 shall be returned.
Otherwise, -1 shall be returned n' \fIerrno\fP set
to indicate tha error.
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
.B EINVAL
Da \fIsig\fP argument be a illegal signal number.
.sp
.LP
Da \fIsigset\fP() n' \fIsigignore\fP() functions shall fail if:
.TP 7
.B EINVAL
An attempt is made ta catch a signal dat cannot be caught, or to
ignore a signal dat cannot be ignored.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIsigaction\fP() function serves up a mo' comprehensive n' reliable
mechanism
for controllin signals; freshly smoked up applications should use \fIsigaction\fP()
rather than
\fIsigset\fP().
.LP
Da \fIsighold\fP() function, up in conjunction wit \fIsigrelse\fP()
or \fIsigpause\fP(), may be used ta establish critical
regionz of code dat require tha delivery of a signal ta be temporarily
deferred.
.LP
Da \fIsigsuspend\fP() function should be used up in preference ta \fIsigpause\fP()
for broader portability.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fISignal Concepts\fP, \fIexec\fP(), \fIpause\fP(), \fIsigaction\fP(),
\fIsignal\fP(), \fIsigsuspend\fP(), \fIwaitid\fP(), tha Base
Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<signal.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
