.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_TRACE_GET_FILTER" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_trace_get_filta 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_trace_get_filter, posix_trace_set_filta \- retrieve n' set
the filta of a initialized trace stream
(\fBTRACING\fP)
.SH SYNOPSIS
.LP
\fB#include <trace.h>
.br
.sp
int posix_trace_get_filter(trace_id_t\fP \fItrid\fP\fB, trace_event_set_t
*\fP\fIset\fP\fB);
.br
int posix_trace_set_filter(trace_id_t\fP \fItrid\fP\fB,
.br
\ \ \ \ \ \  const trace_event_set_t *\fP\fIset\fP\fB, int\fP \fIhow\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_trace_get_filter\fP() function shall retrieve, tha fuck into the
argument pointed ta by \fIset\fP, tha actual trace event
filta from tha trace stream specified by \fItrid\fP.
.LP
Da \fIposix_trace_set_filter\fP() function shall chizzle tha set of
filtered trace event types afta a trace stream identified
by tha \fItrid\fP argument is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This function may be called
prior ta startin tha trace stream, or while tha trace stream
is active. By default, if no call is made ta \fIposix_trace_set_filter\fP(),
all trace events shall be recorded (that is, none of
the trace event types is filtered out).
.LP
If dis function is called while tha trace is up in progress, a special
system trace event, POSIX_TRACE_FILTER, shall be recorded
in tha trace indicatin both tha oldschool n' tha freshly smoked up setz of filtered
trace event types (see \fITrace n' Trace Event Filta Options: System
Trace Events\fP n' \fITrace, Trace Log, n' Trace Event Filta Options:
System Trace Events\fP ).
.LP
If tha \fIposix_trace_set_filter\fP() function is interrupted by a
signal, a error shall be returned n' tha filta shall not
be chizzled. Y'all KNOW dat shit, muthafucka! In dis case, tha state of tha trace stream shall not
be chizzled.
.LP
Da value of tha argument \fIhow\fP indicates tha manner up in which
the set is ta be chizzled n' shall have one of tha following
values, as defined up in tha \fI<trace.h>\fP header:
.TP 7
POSIX_TRACE_SET_EVENTSET
.sp
Da resultin set of trace event types ta be filtered shall be the
trace event type set pointed ta by tha argument \fIset\fP.
.TP 7
POSIX_TRACE_ADD_EVENTSET
.sp
Da resultin set of trace event types ta be filtered shall be the
union of tha current set n' tha trace event type set pointed to
by tha argument \fIset\fP.
.TP 7
POSIX_TRACE_SUB_EVENTSET
.sp
Da resultin set of trace event types ta be filtered shall be all
trace event types up in tha current set dat is not up in tha set
pointed ta by tha argument \fIset\fP; dat is, remove each element
of tha specified set from tha current filter.
.sp
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return a value of
zero. Otherwise, they shall return tha correspondin error
number.
.LP
Da \fIposix_trace_get_filter\fP() function stores tha set of filtered
trace event types up in \fIset\fP, if successful.
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
.B EINVAL
Da value of tha \fItrid\fP argument do not correspond ta a active
trace stream or tha value of tha argument pointed ta by
\fIset\fP is invalid.
.TP 7
.B EINTR
Da operation was interrupted by a signal.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fITrace n' Trace Event Filta Options: System Trace Events\fP,
\fITrace, Trace Log, n' Trace Event Filta Options: System Trace
Events\fP, \fIposix_trace_eventset_add\fP(), tha Base Definitions
volume of
IEEE\ Std\ 1003.1-2001, \fI<trace.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
