.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CLOSELOG" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" closelog 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
closelog, openlog, setlogmask, syslog \- control system log
.SH SYNOPSIS
.LP
\fB#include <syslog.h>
.br
.sp
void closelog(void);
.br
void openlog(const char *\fP\fIident\fP\fB, int\fP \fIlogopt\fP\fB,
int\fP \fIfacility\fP\fB);
.br
int setlogmask(int\fP \fImaskpri\fP\fB);
.br
void syslog(int\fP \fIpriority\fP\fB, const char *\fP\fImessage\fP\fB,
\&... /*\fP \fIarguments\fP \fB*/); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsyslog\fP() function shall bust a message ta a implementation-defined
loggin facility, which may log it up in an
implementation-defined system log, write it ta tha system console,
forward it ta a list of users, or forward it ta tha logging
facilitizzle on another host over tha network. Da logged message shall
include a message header n' a message body. Da message header
gotz nuff at least a timestamp n' a tag string.
.LP
Da message body is generated from tha \fImessage\fP n' following
arguments up in tha same manner as if these was arguments to
\fIprintf\fP(), except dat tha additionizzle conversion justification
\fB%m\fP shall be
recognized; it shall convert no arguments, shall cause tha output
of tha error message strang associated wit tha value of
\fIerrno\fP on entry ta \fIsyslog\fP(), n' may be mixed wit argument
specificationz of tha \fB"%\fP\fIn\fP\fB$"\fP form.
If a cold-ass lil complete conversion justification wit tha \fBm\fP conversion
specifier characta aint just \fB%m\fP, tha behavior is
undefined. Y'all KNOW dat shit, muthafucka! A trailin <newline> may be added if needed.
.LP
Valuez of tha \fIpriority\fP argument is formed by OR'in together
a severity-level value n' a optionizzle facilitizzle value. If
no facilitizzle value is specified, tha current default facilitizzle value
is used.
.LP
Possible jointz of severitizzle level include:
.TP 7
LOG_EMERG
A panic condition.
.TP 7
LOG_ALERT
A condizzle dat should be erected immediately, like fuckin a cold-ass lil corrupted
system database.
.TP 7
LOG_CRIT
Critical conditions, like fuckin hard thang errors.
.TP 7
LOG_ERR
Errors.
.TP 7
LOG_WARNING
.sp
Warnin lyrics.
.TP 7
LOG_NOTICE
Conditions dat is not error conditions yo, but dat may require special
handling.
.TP 7
LOG_INFO
Informationizzle lyrics.
.TP 7
LOG_DEBUG
Lyrics dat contain shiznit normally of use only when debugging
a program.
.sp
.LP
Da facilitizzle indicates tha application or system component generating
the message. Possible facilitizzle joints include:
.TP 7
LOG_USER
Lyrics generated by arbitrary processes. This is tha default facility
identifier if none is specified.
.TP 7
LOG_LOCAL0
Reserved fo' local use.
.TP 7
LOG_LOCAL1
Reserved fo' local use.
.TP 7
LOG_LOCAL2
Reserved fo' local use.
.TP 7
LOG_LOCAL3
Reserved fo' local use.
.TP 7
LOG_LOCAL4
Reserved fo' local use.
.TP 7
LOG_LOCAL5
Reserved fo' local use.
.TP 7
LOG_LOCAL6
Reserved fo' local use.
.TP 7
LOG_LOCAL7
Reserved fo' local use.
.sp
.LP
Da \fIopenlog\fP() function shall set process attributes dat affect
subsequent calls ta \fIsyslog\fP(). Da \fIident\fP
argument be a strang dat is prepended ta every last muthafuckin message. Da \fIlogopt\fP
argument indicates loggin options. Values for
\fIlogopt\fP is constructed by a funky-ass bitwise-inclusive OR of zero or
more of tha following:
.TP 7
LOG_PID
Log tha process ID wit each message. This is useful fo' identifying
specific processes.
.TP 7
LOG_CONS
Write lyrics ta tha system console if they cannot be busted ta the
loggin facility. Da \fIsyslog\fP() function ensures that
the process do not acquire tha console as a cold-ass lil controllin terminal
in tha process of freestylin tha message.
.TP 7
LOG_NDELAY
Open tha connection ta tha loggin facilitizzle immediately. Normally
the open is delayed until tha straight-up original gangsta message is logged. Y'all KNOW dat shit, muthafucka! This
is useful fo' programs dat need ta manage tha order up in which file
descriptors is allocated.
.TP 7
LOG_ODELAY
Delay open until \fIsyslog\fP() is called.
.TP 7
LOG_NOWAIT
Do not wait fo' lil pimp processes dat may done been pimped during
the course of loggin tha message. This option should be used
by processes dat enable notification of lil pimp termination rockin SIGCHLD,
since \fIsyslog\fP() may otherwise block waitin fo' a
child whose exit status has already been collected.
.sp
.LP
Da \fIfacility\fP argument encodes a thugged-out default facilitizzle ta be assigned
to all lyrics dat aint gots a explicit facility
already encoded. Y'all KNOW dat shit, muthafucka! Da initial default facilitizzle is LOG_USER.
.LP
Da \fIopenlog\fP() n' \fIsyslog\fP() functions may allocate a gangbangin' file
descriptor. Shiiit, dis aint no joke. Well shiiiit, it aint necessary ta booty-call \fIopenlog\fP()
prior ta callin \fIsyslog\fP().
.LP
Da \fIcloselog\fP() function shall close any open file descriptors
allocated by previous calls ta \fIopenlog\fP() or
\fIsyslog\fP().
.LP
Da \fIsetlogmask\fP() function shall set tha log prioritizzle mask for
the current process ta \fImaskpri\fP n' return the
previous mask. If tha \fImaskpri\fP argument is 0, tha current log
mask aint modified. Y'all KNOW dat shit, muthafucka! Calls by tha current process to
\fIsyslog\fP() wit a prioritizzle not set up in \fImaskpri\fP shall be rejected.
Da default log mask allows all prioritizzles ta be
logged. Y'all KNOW dat shit, muthafucka! A call ta \fIopenlog\fP() aint required prior ta calling
\fIsetlogmask\fP().
.LP
Symbolic constants fo' use as jointz of tha \fIlogopt\fP, \fIfacility\fP,
\fIpriority\fP, n' \fImaskpri\fP arguments are
defined up in tha \fI<syslog.h>\fP header.
.SH RETURN VALUE
.LP
Da \fIsetlogmask\fP() function shall return tha previous log priority
mask. Da \fIcloselog\fP(), \fIopenlog\fP(), and
\fIsyslog\fP() functions shall not return a value.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Usin openlog()
.LP
Da followin example causes subsequent calls ta \fIsyslog\fP() to
log tha process ID wit each message, n' ta write lyrics
to tha system console if they cannot be busted ta tha loggin facility.
.sp
.RS
.nf

\fB#include <syslog.h>
.sp

char *ident = "Process demo";
int logopt = LOG_PID | LOG_CONS;
int facilitizzle = LOG_USER;
\&...
openlog(ident, logopt, facility);
\fP
.fi
.RE
.SS Usin setlogmask()
.LP
Da followin example causes subsequent calls ta \fIsyslog\fP() to
accept error lyrics, n' ta reject all other lyrics.
.sp
.RS
.nf

\fB#include <syslog.h>
.sp

int result;
int mask = LOG_MASK (LOG_ERR);
\&...
result = setlogmask(mask);
\fP
.fi
.RE
.SS Usin syslog
.LP
Da followin example sendz tha message \fB"This be a message"\fP
to tha default loggin facility, markin tha message as an
error message generated by random processes.
.sp
.RS
.nf

\fB#include <syslog.h>
.sp

char *message = "This be a message";
int prioritizzle = LOG_ERR | LOG_USER;
\&...
syslog(priority, message);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIprintf\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<syslog.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
