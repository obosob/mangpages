.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "AIO_CANCEL" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" aio_cancel 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
aio_cancel \- quit a asynchronous I/O request (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <aio.h>
.br
.sp
int aio_cancel(int\fP \fIfildes\fP\fB, struct aiocb *\fP\fIaiocbp\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIaio_cancel\fP() function shall attempt ta quit one or more
asynchronous I/O requests currently outstandin against
file descriptor \fIfildes\fP. Da \fIaiocbp\fP argument points to
the asynchronous I/O control block fo' a particular request to
be canceled. Y'all KNOW dat shit, muthafucka! If \fIaiocbp\fP is NULL, then all outstandin cancelable
asynchronous I/O requests against \fIfildes\fP shall be
canceled.
.LP
Normal asynchronous notification shall occur fo' asynchronous I/O
operations dat is successfully canceled. Y'all KNOW dat shit, muthafucka! If there are
requests dat cannot be canceled, then tha aiiight asynchronous completion
process shall take place fo' dem requests when they are
completed.
.LP
For axed operations dat is successfully canceled, tha associated
error status shall be set ta [ECANCELED] n' tha return
status shall be -1. For axed operations dat is not successfully
canceled, tha \fIaiocbp\fP shall not be modified by
\fIaio_cancel\fP().
.LP
If \fIaiocbp\fP aint NULL, then if \fIfildes\fP aint gots the
same value as tha file descriptor wit which the
asynchronous operation was initiated, unspecified thangs up in dis biatch occur.
.LP
Which operations is cancelable is implementation-defined.
.SH RETURN VALUE
.LP
Da \fIaio_cancel\fP() function shall return tha value AIO_CANCELED
to tha callin process if tha axed operation(s) were
canceled. Y'all KNOW dat shit, muthafucka! Da value AIO_NOTCANCELED shall be returned if at least
one of tha axed operation(s) cannot be canceled cuz it
is up in progress. In dis case, tha state of tha other operations, if
any, referenced up in tha call ta \fIaio_cancel\fP() is not
indicated by tha return value of \fIaio_cancel\fP(). Da application
may determine tha state of affairs fo' these operations by
usin \fIaio_error\fP(). Da value AIO_ALLDONE is returned if all
of tha operations have
already completed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Otherwise, tha function shall return -1 n' set
\fIerrno\fP ta indicate tha error.
.SH ERRORS
.LP
Da \fIaio_cancel\fP() function shall fail if:
.TP 7
.B EBADF
Da \fIfildes\fP argument aint a valid file descriptor.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIaio_cancel\fP() function is part of tha Asynchronous Input
and Output option n' need not be available on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIaio_read\fP(), \fIaio_write\fP(), tha Base Definitions volume
of
IEEE\ Std\ 1003.1-2001, \fI<aio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
