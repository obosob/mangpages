.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "WCSTOK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" wcstok 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
wcstok \- split a wide-characta strang tha fuck into tokens
.SH SYNOPSIS
.LP
\fB#include <wchar.h>
.br
.sp
wchar_t *wcstok(wchar_t *restrict\fP \fIws1\fP\fB, const wchar_t *restrict\fP
\fIws2\fP\fB,
.br
\ \ \ \ \ \  wchar_t **restrict\fP \fIptr\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
A sequence of calls ta \fIwcstok\fP() shall break tha wide-character
strin pointed ta by \fIws1\fP tha fuck into a sequence of tokens,
each of which shall be delimited by a wide-characta code from the
wide-characta strang pointed ta by \fIws2\fP. Da \fIptr\fP
argument points ta a cold-ass lil caller-provided \fBwchar_t\fP pointa tha fuck into which
the \fIwcstok\fP() function shall store shiznit
necessary fo' it ta continue scannin tha same wide-characta string.
.LP
Da first call up in tha sequence has \fIws1\fP as its first argument,
and is followed by calls wit a null pointa as they first
argument. Da separator strang pointed ta by \fIws2\fP may be different
from call ta call.
.LP
Da first call up in tha sequence shall search tha wide-characta string
pointed ta by \fIws1\fP fo' tha straight-up original gangsta wide-characta code
that is \fInot\fP contained up in tha current separator strang pointed
to by \fIws2\fP. If no such wide-characta code is found,
then there be no tokens up in tha wide-characta strang pointed ta by
\fIws1\fP n' \fIwcstok\fP() shall return a null pointer n' shit. If
such a wide-characta code is found, it shall be tha start of the
first token.
.LP
Da \fIwcstok\fP() function shall then search from there fo' a wide-character
code dat \fIis\fP contained up in tha current
separator string. If no such wide-characta code is found, tha current
token extendz ta tha end of tha wide-characta string
pointed ta by \fIws1\fP, n' subsequent searches fo' a token shall
return a null pointer n' shit. If such a wide-characta code is found,
it shall be overwritten by a null wide character, which terminates
the current token. I aint talkin' bout chicken n' gravy biatch. Da \fIwcstok\fP() function shall save a
pointa ta tha followin wide-characta code, from which tha next
search fo' a token shall start.
.LP
Each subsequent call, wit a null pointa as tha value of tha first
argument, shall start searchin from tha saved pointa and
behave as busted lyrics bout above.
.LP
Da implementation shall behave as if no function calls \fIwcstok\fP().
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIwcstok\fP() function shall return
a pointa ta tha straight-up original gangsta wide-characta code of a token.
Otherwise, if there is no token, \fIwcstok\fP() shall return a null
pointer.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<wchar.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
