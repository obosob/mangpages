.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "Y0" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" y0 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
y0, y1, yn \- Bessel functionz of tha second kind
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double y0(double\fP \fIx\fP\fB);
.br
double y1(double\fP \fIx\fP\fB);
.br
double yn(int\fP \fIn\fP\fB, double\fP \fIx\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIy0\fP(), \fIy1\fP(), n' \fIyn\fP() functions shall compute
Bessel functionz of \fIx\fP of tha second kind of orders
0, 1, n' \fIn\fP, respectively.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha relevant
Bessel value of \fIx\fP of tha second kind.
.LP
If \fIx\fP is NaN, NaN shall be returned.
.LP
If tha \fIx\fP argument ta these functions is negative, -HUGE_VAL
or NaN shall be returned, n' a thugged-out domain error may occur.
.LP
If \fIx\fP is 0.0, -HUGE_VAL shall be returned n' a range error may
occur.
.LP
If tha erect result would cause underflow, 0.0 shall be returned
and a range error may occur.
.LP
If tha erect result would cause overflow, -HUGE_VAL or 0.0 shall
be returned n' a range error may occur.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
Domain\ Error
Da value of \fIx\fP is negative. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [EDOM]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha invalid floating-point exception shall be
raised.
.TP 7
Range\ Error
Da value of \fIx\fP is 0.0, or tha erect result would cause overflow.
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.TP 7
Range\ Error
Da value of \fIx\fP is too big-ass up in magnitude, or tha erect result
would cause underflow. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(), \fIj0\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
