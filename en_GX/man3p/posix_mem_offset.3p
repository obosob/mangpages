.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_MEM_OFFSET" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_mem_offset 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_mem_offset \- find offset n' length of a mapped typed memory
block (\fBADVANCED REALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <sys/mman.h>
.br
.sp
int posix_mem_offset(const void *restrict\fP \fIaddr\fP\fB, size_t\fP
\fIlen\fP\fB,
.br
\ \ \ \ \ \  off_t *restrict\fP \fIoff\fP\fB, size_t *restrict\fP
\fIcontig_len\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIfildes\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_mem_offset\fP() function shall return up in tha variable
pointed ta by \fIoff\fP a value dat identifies tha offset
(or location), within a memory object, of tha memory block currently
mapped at \fIaddr\fP. Da function shall return up in the
variable pointed ta by \fIfildes\fP, tha descriptor used (via \fImmap\fP())
to establish the
mappin which gotz nuff \fIaddr\fP. If dat descriptor was closed since
the mappin was established, tha returned value of
\fIfildes\fP shall be -1. Da \fIlen\fP argument specifies tha length
of tha block of tha memory object tha user wishes the
offset for; upon return, tha value pointed ta by \fIcontig_len\fP
shall equal either \fIlen\fP, or tha length of tha phattest
contiguous block of tha memory object dat is currently mapped to
the callin process startin at \fIaddr\fP, whichever is
smaller.
.LP
If tha memory object mapped at \fIaddr\fP be a typed memory object,
then if tha \fIoff\fP n' \fIcontig_len\fP joints
obtained by callin \fIposix_mem_offset\fP() is used up in a cold-ass lil call to
\fImmap\fP() wit a gangbangin' file
descriptor dat refers ta tha same memory pool as \fIfildes\fP (either
all up in tha same port or all up in a gangbangin' finger-lickin' different port), and
that was opened wit neither tha POSIX_TYPED_MEM_ALLOCATE nor the
POSIX_TYPED_MEM_ALLOCATE_CONTIG flag, tha typed memory area that
is mapped shall be exactly tha same area dat was mapped at \fIaddr\fP
in tha address space of tha process dat called
\fIposix_mem_offset\fP().
.LP
If tha memory object specified by \fIfildes\fP aint a typed memory
object, then tha behavior of dis function is
implementation-defined.
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIposix_mem_offset\fP() function
shall return zero; otherwise, tha correspondin error status
value shall be returned.
.SH ERRORS
.LP
Da \fIposix_mem_offset\fP() function shall fail if:
.TP 7
.B EACCES
Da process has not mapped a memory object supported by dis function
at tha given address \fIaddr\fP.
.sp
.LP
This function shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImmap\fP(), \fIposix_typed_mem_open\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/mman.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
