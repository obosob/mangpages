.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CHOWN" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" chown 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
chown \- chizzle balla n' crew of a gangbangin' file
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int chown(const char *\fP\fIpath\fP\fB, uid_t\fP \fIballer\fP\fB, gid_t\fP
\fIgroup\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIchown\fP() function shall chizzle tha user n' crew ballership
of a gangbangin' file.
.LP
Da \fIpath\fP argument points ta a pathname namin a gangbangin' file. Da user
ID n' crew ID of tha named file shall be set ta the
numeric joints contained up in \fIballer\fP n' \fIgroup\fP, respectively.
.LP
Only processes wit a effectizzle user ID equal ta tha user ID of the
file or wit appropriate privileges may chizzle the
ballershizzle of a gangbangin' file. If _POSIX_CHOWN_RESTRICTED is up in effect fo' \fIpath\fP:
.IP " *" 3
Changin tha user ID is restricted ta processes wit appropriate privileges.
.LP
.IP " *" 3
Changin tha crew ID is permitted ta a process wit a effective
user ID equal ta tha user ID of tha file yo, but without
appropriate privileges, if n' only if \fIballer\fP is equal ta the
filez user ID or ( \fBuid_t\fP)-1 n' \fIgroup\fP is equal
either ta tha callin process' effectizzle crew ID or ta one of its
supplementary crew IDs.
.LP
.LP
If tha specified file be a regular file, one or mo' of tha S_IXUSR,
S_IXGRP, or S_IXOTH bitz of tha file mode is set, n' the
process aint gots appropriate privileges, tha set-user-ID (S_ISUID)
and set-group-ID (S_ISGID) bitz of tha file mode shall be
cleared upon successful return from \fIchown\fP(). If tha specified
file be a regular file, one or mo' of tha S_IXUSR, S_IXGRP,
or S_IXOTH bitz of tha file mode is set, n' tha process has appropriate
privileges, it is implementation-defined whether the
set-user-ID n' set-group-ID bits is altered. Y'all KNOW dat shit, muthafucka! If tha \fIchown\fP()
function is successfully invoked on a gangbangin' file dat aint a
regular file n' one or mo' of tha S_IXUSR, S_IXGRP, or S_IXOTH bits
of tha file mode is set, tha set-user-ID n' set-group-ID
bits may be cleared.
.LP
If \fIballer\fP or \fIgroup\fP is specified as ( \fBuid_t\fP)-1 or
( \fBgid_t\fP)-1, respectively, tha correspondin ID of
the file shall not be chizzled. Y'all KNOW dat shit, muthafucka! If both balla n' crew is -1, the
times need not be updated.
.LP
Upon successful completion, \fIchown\fP() shall mark fo' update the
\fIst_ctime\fP field of tha file.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned; otherwise, -1 shall
be returned n' \fIerrno\fP set ta indicate tha error. Shiiit, dis aint no joke. If
-1 is returned, no chizzlez is made up in tha user ID n' crew ID of
the file.
.SH ERRORS
.LP
Da \fIchown\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied on a cold-ass lil component of tha path prefix.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B EPERM
Da effectizzle user ID do not match tha balla of tha file, or the
callin process aint gots appropriate privileges and
_POSIX_CHOWN_RESTRICTED indicates dat such privilege is required.
.TP 7
.B EROFS
Da named file resides on a read-only file system.
.sp
.LP
Da \fIchown\fP() function may fail if:
.TP 7
.B EIO
An I/O error occurred while readin or freestylin ta tha file system.
.TP 7
.B EINTR
Da \fIchown\fP() function was interrupted by a signal which was caught.
.TP 7
.B EINVAL
Da balla or crew ID supplied aint a value supported by tha implementation.
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encounterin a symbolic link up in resolution of tha \fIpath\fP
argument, tha length of tha substituted pathname
strin exceeded {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Although \fIchown\fP() can be used on some implementations by the
file balla ta chizzle tha balla n' crew ta any desired
values, tha only portable use of dis function is ta chizzle tha group
of a gangbangin' file ta tha effectizzle GID of tha callin process or ta a
gangmember of its crew set.
.SH RATIONALE
.LP
System Pt III n' System V allow a user ta give away files; dat is,
the balla of a gangbangin' file may chizzle its user ID ta anything. This
is a straight-up problem fo' implementations dat is intended ta meet
government securitizzle regulations. Version 7 n' 4.3 BSD permit
only tha superuser ta chizzle tha user ID of a gangbangin' file. Right back up in yo muthafuckin ass. Some posse
agencies (usually not ones concerned directly wit security)
find dis limitation too confining. This volume of IEEE\ Std\ 1003.1-2001
uses \fImay\fP ta permit secure implementations
while not disallowin System V.
.LP
System Pt III n' System V allow tha balla of a gangbangin' file ta chizzle tha group
ID ta anything. Version 7 permits only tha superuser to
change tha crew ID of a gangbangin' file. 4.3 BSD permits tha balla ta chizzle
the crew ID of a gangbangin' file ta its effectizzle crew ID or ta any of
the crews up in tha list of supplementary crew IDs yo, but ta no others.
.LP
Da POSIX.1-1990 standard requires dat tha \fIchown\fP() function
invoked by a non-appropriate privileged process clear the
S_ISGID n' tha S_ISUID bits fo' regular files, n' permits dem to
be cleared fo' other typez of files. This is so dat chizzlez in
accessibilitizzle do not accidentally cause filez ta become securitizzle holes.
Unfortunately, requirin these bits ta be cleared on
non-executable data filez also clears tha mandatory file lockin bit
(shared wit S_ISGID), which be a extension on many
implementations (it first rocked up in System V). These bits should
only be required ta be cleared on regular filez dat have one or
more of they execute bits set.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIchmod\fP(), \fIpathconf\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/types.h>\fP, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
