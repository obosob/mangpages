.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_TRACE_ATTR_GETLOGSIZE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_trace_attr_getlogsize 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_trace_attr_getlogsize, posix_trace_attr_getmaxdatasize, posix_trace_attr_getmaxsystemeventsize,
posix_trace_attr_getmaxusereventsize, posix_trace_attr_getstreamsize,
posix_trace_attr_setlogsize, posix_trace_attr_setmaxdatasize,
posix_trace_attr_setstreamsize \- retrieve n' set trace stream size
attributes (\fBTRACING\fP)
.SH SYNOPSIS
.LP
\fB#include <sys/types.h>
.br
#include <trace.h>
.br
.sp
\fP
.LP
\fBint posix_trace_attr_getlogsize(const trace_attr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t *restrict\fP \fIlogsize\fP\fB);
.br
\fP
.LP
\fBint posix_trace_attr_getmaxdatasize(const trace_attr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t *restrict\fP \fImaxdatasize\fP\fB);
.br
int posix_trace_attr_getmaxsystemeventsize(
.br
\ \ \ \ \ \  const trace_attr_t *restrict\fP \fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t *restrict\fP \fIeventsize\fP\fB);
.br
int posix_trace_attr_getmaxusereventsize(
.br
\ \ \ \ \ \  const trace_attr_t *restrict\fP \fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIdata_len\fP\fB, size_t *restrict\fP \fIeventsize\fP\fB);
.br
int posix_trace_attr_getstreamsize(const trace_attr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t *restrict\fP \fIstreamsize\fP\fB);
.br
\fP
.LP
\fBint posix_trace_attr_setlogsize(trace_attr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIlogsize\fP\fB);
.br
\fP
.LP
\fBint posix_trace_attr_setmaxdatasize(trace_attr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fImaxdatasize\fP\fB);
.br
int posix_trace_attr_setstreamsize(trace_attr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIstreamsize\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIposix_trace_attr_getlogsize\fP() function shall copy tha log
size, up in bytes, from tha \fIlog-max-size\fP attribute of the
attributes object pointed ta by tha \fIattr\fP argument tha fuck into tha variable
pointed ta by tha \fIlogsize\fP argument. This log size
is tha maximum total of bytes dat shall be allocated fo' system and
user trace events up in tha trace log. Da default value fo' the
\fIlog-max-size\fP attribute is implementation-defined.
.LP
Da \fIposix_trace_attr_setlogsize\fP() function shall set tha maximum
allowed size, up in bytes, up in tha \fIlog-max-size\fP
attribute of tha attributes object pointed ta by tha \fIattr\fP argument,
usin tha size value supplied by tha \fIlogsize\fP
argument.
.LP
Da trace log size shall be used if tha \fIlog-full-policy\fP attribute
is set ta POSIX_TRACE_LOOP or POSIX_TRACE_UNTIL_FULL.
If tha \fIlog-full-policy\fP attribute is set ta POSIX_TRACE_APPEND,
the implementation shall ignore tha \fIlog-max-size\fP
attribute. 
.LP
Da \fIposix_trace_attr_getmaxdatasize\fP() function shall copy the
maximum user trace event data size, up in bytes, from the
\fImax-data-size\fP attribute of tha attributes object pointed to
by tha \fIattr\fP argument tha fuck into tha variable pointed ta by the
\fImaxdatasize\fP argument. Da default value fo' tha \fImax-data-size\fP
attribute is implementation-defined.
.LP
Da \fIposix_trace_attr_getmaxsystemeventsize\fP() function shall
calculate tha maximum memory size, up in bytes, required to
store a single system trace event. This value is calculated fo' the
trace stream attributes object pointed ta by tha \fIattr\fP
argument n' is returned up in tha variable pointed ta by tha \fIeventsize\fP
argument.
.LP
Da joints returned as tha maximum memory sizez of tha user n' system
trace events shall be such dat if tha sum of tha maximum
memory sizez of a set of tha trace events dat may be recorded in
a trace stream is less than or equal ta the
\fIstream-min-size\fP attribute of dat trace stream, tha system provides
the necessary resources fo' recordin all dem trace
events, without loss.
.LP
Da \fIposix_trace_attr_getmaxusereventsize\fP() function shall calculate
the maximum memory size, up in bytes, required ta store
a single user trace event generated by a cold-ass lil call ta \fIposix_trace_event\fP()
with
a \fIdata_len\fP parameta equal ta tha \fIdata_len\fP value specified
in dis call. This value is calculated fo' tha trace
stream attributes object pointed ta by tha \fIattr\fP argument and
is returned up in tha variable pointed ta by tha \fIeventsize\fP
argument.
.LP
Da \fIposix_trace_attr_getstreamsize\fP() function shall copy the
stream size, up in bytes, from tha \fIstream-min-size\fP
attribute of tha attributes object pointed ta by tha \fIattr\fP argument
into tha variable pointed ta by tha \fIstreamsize\fP
argument.
.LP
This stream size is tha current total memory size reserved fo' system
and user trace events up in tha trace stream. Da default
value fo' tha \fIstream-min-size\fP attribute is implementation-defined.
Da stream size refers ta memory used ta store trace
event records. Other stream data (for example, trace attribute joints)
shall not be included up in dis size.
.LP
Da \fIposix_trace_attr_setmaxdatasize\fP() function shall set the
maximum allowed size, up in bytes, up in tha \fImax-data-size\fP
attribute of tha attributes object pointed ta by tha \fIattr\fP argument,
usin tha size value supplied by tha \fImaxdatasize\fP
argument. This maximum size is tha maximum allowed size fo' tha user
data argument which may be passed ta \fIposix_trace_event\fP(). The
implementation shall be allowed ta truncate data passed
to \fItrace_user_event\fP which is longer than \fImaxdatasize\fP.
.LP
Da \fIposix_trace_attr_setstreamsize\fP() function shall set the
minimum allowed size, up in bytes, up in tha \fIstream-min-size\fP
attribute of tha attributes object pointed ta by tha \fIattr\fP argument,
usin tha size value supplied by tha \fIstreamsize\fP
argument.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return a value of
zero. Otherwise, they shall return tha correspondin error
number.
.LP
Da \fIposix_trace_attr_getlogsize\fP() function stores tha maximum
trace log allowed size up in tha object pointed ta by
\fIlogsize\fP, if successful naaahhmean, biatch? 
.LP
Da \fIposix_trace_attr_getmaxdatasize\fP() function stores tha maximum
trace event record memory size up in tha object pointed to
by \fImaxdatasize\fP, if successful.
.LP
Da \fIposix_trace_attr_getmaxsystemeventsize\fP() function stores
the maximum memory size ta store a single system trace event
in tha object pointed ta by \fIeventsize\fP, if successful.
.LP
Da \fIposix_trace_attr_getmaxusereventsize\fP() function stores the
maximum memory size ta store a single user trace event in
the object pointed ta by \fIeventsize\fP, if successful.
.LP
Da \fIposix_trace_attr_getstreamsize\fP() function stores tha maximum
trace stream allowed size up in tha object pointed ta by
\fIstreamsize\fP, if successful.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
.B EINVAL
Da value specified by one of tha arguments is invalid.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIposix_trace_attr_init\fP(), \fIposix_trace_create\fP(), \fIposix_trace_event\fP(),
\fIposix_trace_get_attr\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/types.h>\fP, \fI<trace.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
