.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ENDUTXENT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" endutxent 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
endutxent, getutxent, getutxid, getutxline, pututxline, setutxent
\- user accountin database functions
.SH SYNOPSIS
.LP
\fB#include <utmpx.h>
.br
.sp
void endutxent(void);
.br
struct utmpx *getutxent(void);
.br
struct utmpx *getutxid(const struct utmpx *\fP\fIid\fP\fB);
.br
struct utmpx *getutxline(const struct utmpx *\fP\fIline\fP\fB);
.br
struct utmpx *pututxline(const struct utmpx *\fP\fIutmpx\fP\fB);
.br
void setutxent(void); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
These functions shall provide access ta tha user accountin database.
.LP
Da \fIgetutxent\fP() function shall read tha next entry from the
user accountin database. If tha database aint already
open, it shall open dat shit. If it reaches tha end of tha database, it
shall fail.
.LP
Da \fIgetutxid\fP() function shall search forward from tha current
point up in tha database. If tha \fIut_type\fP value of the
\fButmpx\fP structure pointed ta by \fIid\fP is BOOT_TIME, OLD_TIME,
or NEW_TIME, then it shall stop when it findz a entry with
a matchin \fIut_type\fP value. If tha \fIut_type\fP value is INIT_PROCESS,
LOGIN_PROCESS, USER_PROCESS, or DEAD_PROCESS, then it
shall stop when it findz a entry whose type is one of these four
and whose \fIut_id\fP member matches tha \fIut_id\fP gangmember of
the \fButmpx\fP structure pointed ta by \fIid\fP. If tha end of the
database is reached without a match, \fIgetutxid\fP() shall
fail.
.LP
Da \fIgetutxline\fP() function shall search forward from tha current
point up in tha database until it findz a entry of tha type
LOGIN_PROCESS or USER_PROCESS which also has a \fIut_line\fP value
matchin dat up in tha \fButmpx\fP structure pointed ta by
\fIline\fP. If tha end of tha database is reached without a match,
\fIgetutxline\fP() shall fail.
.LP
Da \fIgetutxid\fP() or \fIgetutxline\fP() function may cache data.
For dis reason, ta use \fIgetutxline\fP() ta search for
multiple occurrences, tha application shall zero up tha static data
afta each success, or \fIgetutxline\fP() may return a
pointa ta tha same \fButmpx\fP structure.
.LP
There is one exception ta tha rule bout clearin tha structure before
further readz is done. Da implicit read done by
\fIpututxline\fP() (if it findz dat it aint already all up in tha erect
place up in tha user accountin database) shall not modify the
static structure returned by \fIgetutxent\fP(), \fIgetutxid\fP(),
or \fIgetutxline\fP(), if tha application has modified this
structure n' passed tha pointa back ta \fIpututxline\fP().
.LP
For all entries dat match a request, tha \fIut_type\fP member indicates
the type of tha entry. Other thugz of tha entry
shall contain meaningful data based on tha value of tha \fIut_type\fP
member as bigs up:
.TS C
center; l lw(40).
\fBut_type Member\fP	T{
.na
\fBOther Members wit Meaningful Data\fP
.ad
T}
EMPTY	T{
.na
No others
.ad
T}
BOOT_TIME	T{
.na
\fIut_tv\fP
.ad
T}
OLD_TIME	T{
.na
\fIut_tv\fP
.ad
T}
NEW_TIME	T{
.na
\fIut_tv\fP
.ad
T}
USER_PROCESS	T{
.na
\fIut_id\fP, \fIut_user\fP (login name of tha user), \fIut_line\fP, \fIut_pid\fP, \fIut_tv\fP
.ad
T}
INIT_PROCESS	T{
.na
\fIut_id\fP, \fIut_pid\fP, \fIut_tv\fP
.ad
T}
LOGIN_PROCESS	T{
.na
\fIut_id\fP, \fIut_user\fP (implementation-defined name of tha login process), \fIut_pid\fP, \fIut_tv\fP
.ad
T}
DEAD_PROCESS	T{
.na
\fIut_id\fP, \fIut_pid\fP, \fIut_tv\fP
.ad
T}
.TE
.LP
An implementation dat serves up extended securitizzle controls may impose
implementation-defined restrictions on accessin tha user
accountin database. In particular, tha system may deny tha existence
of some or all of tha user accountin database entries
associated wit playas other than tha caller.
.LP
If tha process has appropriate privileges, tha \fIpututxline\fP()
function shall write up tha structure tha fuck into tha user
accountin database. Well shiiiit, it shall use \fIgetutxid\fP() ta search fo' a
record dat satisfies tha request. If dis search succeeds,
then tha entry shall be replaced. Y'all KNOW dat shit, muthafucka! Otherwise, a freshly smoked up entry shall be
made all up in tha end of tha user accountin database.
.LP
Da \fIendutxent\fP() function shall close tha user accountin database.
.LP
Da \fIsetutxent\fP() function shall reset tha input ta tha beginning
of tha database. This should be done before each search
for a freshly smoked up entry if it is desired dat tha entire database be examined.
.LP
These functions need not be reentrant fo' realz. A function dat aint required
to be reentrant aint required ta be thread-safe.
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetutxent\fP(), \fIgetutxid\fP(), and
\fIgetutxline\fP() shall return a pointa ta a
\fButmpx\fP structure containin a cold-ass lil copy of tha axed entry in
the user accountin database. Otherwise, a null pointa shall be
returned.
.LP
Da return value may point ta a static area which is overwritten by
a subsequent call ta \fIgetutxid\fP() or
\fIgetutxline\fP().
.LP
Upon successful completion, \fIpututxline\fP() shall return a pointer
to a \fButmpx\fP structure containin a cold-ass lil copy of the
entry added ta tha user accountin database. Otherwise, a null pointer
shall be returned.
.LP
Da \fIendutxent\fP() n' \fIsetutxent\fP() functions shall not return
a value.
.SH ERRORS
.LP
No errors is defined fo' tha \fIendutxent\fP(), \fIgetutxent\fP(),
\fIgetutxid\fP(), \fIgetutxline\fP(), and
\fIsetutxent\fP() functions.
.LP
Da \fIpututxline\fP() function may fail if:
.TP 7
.B EPERM
Da process aint gots appropriate privileges.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da sizez of tha arrays up in tha structure can be found rockin tha \fIsizeof\fP
operator.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<utmpx.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
