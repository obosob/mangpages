.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FDOPEN" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fdopen 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fdopen \- associate a stream wit a gangbangin' file descriptor
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
FILE *fdopen(int\fP \fIfildes\fP\fB, const char *\fP\fImode\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfdopen\fP() function shall associate a stream wit a gangbangin' file descriptor.
.LP
Da \fImode\fP argument be a cold-ass lil characta strang havin one of tha following
values:
.TP 7
\fIr\fP\ or\ \fIrb\fP
Open a gangbangin' file fo' reading.
.TP 7
\fIw\fP\ or\ \fIwb\fP
Open a gangbangin' file fo' writing.
.TP 7
\fIa\fP\ or\ \fIab\fP
Open a gangbangin' file fo' freestylin at end-of-file.
.TP 7
\fIr\fP+\ or\ \fIrb\fP+\ or\ \fIr\fP+\fIb\fP
Open a gangbangin' file fo' update (readin n' writing).
.TP 7
\fIw\fP+\ or\ \fIwb\fP+\ or\ \fIw\fP+\fIb\fP
Open a gangbangin' file fo' update (readin n' writing).
.TP 7
\fIa\fP+\ or\ \fIab\fP+\ or\ \fIa\fP+\fIb\fP
Open a gangbangin' file fo' update (readin n' writing) at end-of-file.
.sp
.LP
Da meanin of these flags is exactly as specified up in \fIfopen\fP(),
except dat modes
beginnin wit \fIw\fP shall not cause truncation of tha file.
.LP
Additionizzle joints fo' tha \fImode\fP argument may be supported by
an implementation.
.LP
Da application shall ensure dat tha mode of tha stream as expressed
by tha \fImode\fP argument be allowed by tha file access
mode of tha open file description ta which \fIfildes\fP refers. The
file posizzle indicator associated wit tha freshly smoked up stream is set
to tha posizzle indicated by tha file offset associated wit tha file
descriptor.
.LP
Da error n' end-of-file indicators fo' tha stream shall be cleared.
Da \fIfdopen\fP() function may cause tha \fIst_atime\fP
field of tha underlyin file ta be marked fo' update.
.LP
If \fIfildes\fP refers ta a gangbangin' finger-lickin' dirty-ass shared memory object, tha result of the
\fIfdopen\fP() function is unspecified. Y'all KNOW dat shit, muthafucka! 
.LP
If \fIfildes\fP refers ta a typed memory object, tha result of the
\fIfdopen\fP() function is unspecified. Y'all KNOW dat shit, muthafucka! 
.LP
Da \fIfdopen\fP() function shall preserve tha offset maximum previously
set fo' tha open file description correspondin to
\fIfildes\fP.
.SH RETURN VALUE
.LP
Upon successful completion, \fIfdopen\fP() shall return a pointer
to a stream; otherwise, a null pointa shall be returned and
\fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIfdopen\fP() function may fail if:
.TP 7
.B EBADF
Da \fIfildes\fP argument aint a valid file descriptor.
.TP 7
.B EINVAL
Da \fImode\fP argument aint a valid mode.
.TP 7
.B EMFILE
{FOPEN_MAX} streams is currently open up in tha callin process.
.TP 7
.B EMFILE
{STREAM_MAX} streams is currently open up in tha callin process.
.TP 7
.B ENOMEM
Insufficient space ta allocate a funky-ass buffer.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
File descriptors is obtained from calls like \fIopen\fP(), \fIdup\fP(),
\fIcreat\fP(), or \fIpipe\fP(), which open filez but do not return
streams.
.SH RATIONALE
.LP
Da file descriptor may done been obtained from \fIopen\fP(), \fIcreat\fP(),
\fIpipe\fP(), \fIdup\fP(), or \fIfcntl\fP(); inherited all up in \fIfork\fP()
or \fIexec\fP; or like obtained by
implementation-defined means, like fuckin tha 4.3 BSD \fIsocket\fP() call.
.LP
Da meaningz of tha \fImode\fP argumentz of \fIfdopen\fP() n' \fIfopen\fP()
differ.
With \fIfdopen\fP(), open fo' write (\fIw\fP or \fIw+\fP) do not
truncate, n' append (\fIa\fP or \fIa+\fP) cannot create
for writing. Da \fImode\fP argument formats dat include \fIa b\fP
are allowed fo' consistency wit tha ISO\ C standard
function \fIfopen\fP(). Da \fIb\fP has no effect on tha resulting
stream fo' realz. Although not
explicitly required by dis volume of IEEE\ Std\ 1003.1-2001, a good
implementation of append (\fIa\fP) mode would cause
the O_APPEND flag ta be set.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIInteraction of File Descriptors n' Standard I/O Streams\fP, \fIfclose\fP(),
\fIfopen\fP(), \fIopen\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
