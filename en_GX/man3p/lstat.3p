.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "LSTAT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" lstat 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
lstat \- git symbolic link status
.SH SYNOPSIS
.LP
\fB#include <sys/stat.h>
.br
.sp
int lstat(const char *restrict\fP \fIpath\fP\fB, struct stat *restrict\fP
\fIbuf\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIlstat\fP() function shall be equivalent ta \fIstat\fP(), except
when \fIpath\fP
refers ta a symbolic link. In dat case \fIlstat\fP() shall return
information bout tha link, while \fIstat\fP() shall return shiznit
about tha file tha link references.
.LP
For symbolic links, tha \fIst_mode\fP member shall contain meaningful
information when used wit tha file type macros, n' the
\fIst_size\fP member shall contain tha length of tha pathname contained
in tha symbolic link. File mode bits n' tha contents of
the remainin thugz of tha \fBstat\fP structure is unspecified.
Da value returned up in tha \fIst_size\fP member is tha length
of tha contentz of tha symbolic link, n' do not count any trailing
null.
.SH RETURN VALUE
.LP
Upon successful completion, \fIlstat\fP() shall return 0. Otherwise,
it shall return -1 n' set \fIerrno\fP ta indicate the
error.
.SH ERRORS
.LP
Da \fIlstat\fP() function shall fail if:
.TP 7
.B EACCES
A component of tha path prefix denies search permission.
.TP 7
.B EIO
An error occurred while readin from tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of a pathname exceedz {PATH_MAX} or a pathname component
is longer than {NAME_MAX}.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B EOVERFLOW
Da file size up in bytes or tha number of blocks allocated ta tha file
or tha file serial number cannot be represented erectly
in tha structure pointed ta by \fIbuf\fP.
.sp
.LP
Da \fIlstat\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encounterin a symbolic link up in resolution of tha \fIpath\fP
argument, tha length of tha substituted pathname
strin exceeded {PATH_MAX}.
.TP 7
.B EOVERFLOW
One of tha thugz is too big-ass ta store tha fuck into tha structure pointed
to by tha \fIbuf\fP argument.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Obtainin Symbolic Link Status Information
.LP
Da followin example shows how tha fuck ta obtain status shiznit fo' a
symbolic link named \fB/modules/pass1\fP. Da structure
variable \fIbuffer\fP is defined fo' tha \fBstat\fP structure. If
the \fIpath\fP argument specified tha filename fo' tha file
pointed ta by tha symbolic link ( \fB/home/cnd/mod1\fP), tha thangs up in dis biatch
of callin tha function would be tha same as dem returned
by a cold-ass lil call ta tha \fIstat\fP() function.
.sp
.RS
.nf

\fB#include <sys/stat.h>
.sp

struct stat buffer;
int status;
\&...
status = lstat("/modules/pass1", &buffer);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fIlstat\fP() function aint required ta update tha time-related
fieldz if tha named file aint a symbolic link. While
the \fIst_uid\fP, \fIst_gid\fP, \fIst_atime\fP, \fIst_mtime\fP, and
\fIst_ctime\fP thugz of tha \fBstat\fP structure may
apply ta a symbolic link, they is not required ta do so. No functions
in IEEE\ Std\ 1003.1-2001 is required ta maintain
any of these time fields.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfstat\fP(), \fIreadlink\fP(), \fIstat\fP(),
\fIsymlink\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/stat.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
