.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "POSIX_TRACE_EVENTSET_ADD" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" posix_trace_eventset_add 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
posix_trace_eventset_add, posix_trace_eventset_del, posix_trace_eventset_empty,
posix_trace_eventset_fill,
posix_trace_eventset_ismember \- manipulate trace event type sets (\fBTRACING\fP)
.SH SYNOPSIS
.LP
\fB#include <trace.h>
.br
.sp
int posix_trace_eventset_add(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_del(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_empty(trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_fill(trace_event_set_t *\fP\fIset\fP\fB,
int\fP \fIwhat\fP\fB);
.br
int posix_trace_eventset_ismember(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  const trace_event_set_t *restrict\fP \fIset\fP\fB, int
*restrict\fP
\fIismember\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
These primitives manipulate setz of trace event types. They operate
on data objects addressable by tha application, not on the
current trace event filta of any trace stream.
.LP
Da \fIposix_trace_eventset_add\fP() n' \fIposix_trace_eventset_del\fP()
functions, respectively, shall add or delete the
individual trace event type specified by tha value of tha argument
\fIevent_id\fP ta or from tha trace event type set pointed to
by tha argument \fIset\fP fo' realz. Addin a trace event type already up in the
set or deletin a trace event type not up in tha set shall not be
considered a error.
.LP
Da \fIposix_trace_eventset_empty\fP() function shall initialize the
trace event type set pointed ta by tha \fIset\fP argument
such dat all trace event types defined, both system n' user, shall
be excluded from tha set.
.LP
Da \fIposix_trace_eventset_fill\fP() function shall initialize the
trace event type set pointed ta by tha argument \fIset\fP,
such dat tha set of trace event types defined by tha argument \fIwhat\fP
shall be included up in tha set. Da value of tha argument
\fIwhat\fP shall consist of one of tha followin joints, as defined
in tha \fI<trace.h>\fP header:
.TP 7
POSIX_TRACE_WOPID_EVENTS
.sp
All tha process-independent implementation-defined system trace event
types is included up in tha set.
.TP 7
POSIX_TRACE_SYSTEM_EVENTS
.sp
All tha implementation-defined system trace event types is included
in tha set, as is dem defined in
IEEE\ Std\ 1003.1-2001.
.TP 7
POSIX_TRACE_ALL_EVENTS
.sp
All trace event types defined, both system n' user, is included
in tha set.
.sp
.LP
Applications shall call either \fIposix_trace_eventset_empty\fP()
or \fIposix_trace_eventset_fill\fP() at least once fo' each
object of type \fBtrace_event_set_t\fP prior ta any other use of that
object. If such a object aint initialized up in dis way,
but is nonetheless supplied as a argument ta any of tha \fIposix_trace_eventset_add\fP(),
\fIposix_trace_eventset_del\fP(), or
\fIposix_trace_eventset_ismember\fP() functions, tha thangs up in dis biatch is undefined.
.LP
Da \fIposix_trace_eventset_ismember\fP() function shall test whether
the trace event type specified by tha value of the
argument \fIevent_id\fP be a gangmember of tha set pointed ta by tha argument
\fIset\fP. Da value returned up in tha object pointed to
by \fIismember\fP argument is zero if tha trace event type identifier
is not a gangmember of tha set n' a value different from zero
if it aint nuthin but a gangmember of tha set.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return a value of
zero. Otherwise, they shall return tha correspondin error
number.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
.B EINVAL
Da value of one of tha arguments is invalid.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIposix_trace_set_filter\fP(), \fIposix_trace_trid_eventid_open\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<trace.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
