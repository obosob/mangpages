.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "UTIMES" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" utimes 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
utimes \- set file access n' modification times (\fBLEGACY\fP)
.SH SYNOPSIS
.LP
\fB#include <sys/time.h>
.br
.sp
int utimes(const char *\fP\fIpath\fP\fB, const struct timeval\fP \fItimes[2]\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIutimes\fP() function shall set tha access n' modification
timez of tha file pointed ta by tha \fIpath\fP argument to
the value of tha \fItimes\fP argument. Da \fIutimes\fP() function
allows time justifications accurate ta tha microsecond.
.LP
For \fIutimes\fP(), tha \fItimes\fP argument be a array of \fBtimeval\fP
structures. Da first array member represents the
date n' time of last access, n' tha second member represents the
date n' time of last modification. I aint talkin' bout chicken n' gravy biatch. Da times up in the
\fBtimeval\fP structure is measured up in secondz n' microsecondz since
the Epoch, although roundin toward tha nearest second may
occur.
.LP
If tha \fItimes\fP argument be a null pointer, tha access n' modification
timez of tha file shall be set ta tha current time.
Da effectizzle user ID of tha process shall match tha balla of the
file, or has write access ta tha file or appropriate privileges
to use dis call up in dis manner n' shit. Upon completion, \fIutimes\fP() shall
mark tha time of tha last file status chizzle,
\fIst_ctime\fP, fo' update.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise, -1 shall
be returned n' \fIerrno\fP shall be set ta indicate the
error, n' tha file times shall not be affected.
.SH ERRORS
.LP
Da \fIutimes\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied by a cold-ass lil component of tha path prefix; or
the \fItimes\fP argument be a null pointa n' tha effective
user ID of tha process do not match tha balla of tha file n' write
access is denied.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP 7
.B EPERM
Da \fItimes\fP argument aint a null pointa n' tha callin process'
effectizzle user ID has write access ta tha file but
does not match tha balla of tha file n' tha callin process do
not have tha appropriate privileges.
.TP 7
.B EROFS
Da file system containin tha file is read-only.
.sp
.LP
Da \fIutimes\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
For applications portability, tha \fIutime\fP() function should be
used ta set file
access n' modification times instead of \fIutimes\fP().
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
This function may be withdrawn up in a gangbangin' future version.
.SH SEE ALSO
.LP
\fIutime\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
