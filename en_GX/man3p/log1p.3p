.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "LOG1P" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" log1p 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
log1p, log1pf, log1pl \- compute a natural logarithm
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double log1p(double\fP \fIx\fP\fB);
.br
float log1pf(float\fP \fIx\fP\fB);
.br
long double log1pl(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute log_e(1.0 + \fIx\fP).
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha natural
logarithm of 1.0 + \fIx\fP.
.LP
If \fIx\fP is -1, a pole error shall occur n' \fIlog1p\fP(), \fIlog1pf\fP(),
and \fIlog1pl\fP() shall return -HUGE_VAL,
-HUGE_VALF, n' -HUGE_VALL, respectively.
.LP
For finite jointz of \fIx\fP dat is less than -1,  or if \fIx\fP
is -Inf,  a thugged-out domain error shall occur, n'  either a NaN (if supported),
or a implementation-defined value shall be returned.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0, or +Inf, \fIx\fP shall be returned.
.LP
If \fIx\fP is subnormal, a range error may occur n' \fIx\fP should
be returned. Y'all KNOW dat shit, muthafucka! 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Domain\ Error
Da finite value of \fIx\fP is less than -1,  or \fIx\fP is -Inf.
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [EDOM]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha invalid floating-point exception shall be
raised.
.TP 7
Pole\ Error
Da value of \fIx\fP is -1. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha divide-by-zero floating-point exception shall be
raised.
.sp
.LP
These functions may fail if:
.TP 7
Range\ Error
Da value of \fIx\fP is subnormal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIlog\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment
of Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
