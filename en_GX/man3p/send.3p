.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SEND" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" bust 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
send \- bust a message on a socket
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
ssize_t send(int\fP \fIsocket\fP\fB, const void *\fP\fIbuffer\fP\fB,
size_t\fP \fIlength\fP\fB, int\fP
\fIflags\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsend\fP() function shall initiate transmission of a message
from tha specified socket ta its peer n' shit. Da \fIsend\fP()
function shall bust a message only when tha socket is connected (including
when tha peer of a cold-ass lil connectionless socket has been set
via \fIconnect\fP()).
.LP
Da \fIsend\fP() function takes tha followin arguments:
.TP 7
\fIsocket\fP
Specifies tha socket file descriptor.
.TP 7
\fIbuffer\fP
Points ta tha buffer containin tha message ta send.
.TP 7
\fIlength\fP
Specifies tha length of tha message up in bytes.
.TP 7
\fIflags\fP
Specifies tha type of message transmission. I aint talkin' bout chicken n' gravy biatch. Valuez of dis argument
are formed by logically OR'in zero or mo' of the
followin flags: 
.TP 7
MSG_EOR
.RS
Terminates a record (if supported by tha protocol).
.RE
.TP 7
MSG_OOB
.RS
Sendz out-of-band data on sockets dat support out-of-band communications.
Da significizzle n' semantics of out-of-band data
are protocol-specific.
.RE
.sp
.sp
.LP
Da length of tha message ta be busted is specified by tha \fIlength\fP
argument. If tha message is too long ta pass all up in the
underlyin protocol, \fIsend\fP() shall fail n' no data shall be
transmitted.
.LP
Successful completion of a cold-ass lil call ta \fIsend\fP() do not guarantee
delivery of tha message fo' realz. A return value of -1 indicates only
locally-detected errors.
.LP
If space aint available all up in tha bustin  socket ta hold tha message
to be transmitted, n' tha socket file descriptor do not
have O_NONBLOCK set, \fIsend\fP() shall block until space be available.
If space aint available all up in tha bustin  socket ta hold
the message ta be transmitted, n' tha socket file descriptor do
have O_NONBLOCK set, \fIsend\fP() shall fail. Da \fIselect\fP() and
\fIpoll\fP() functions can be used to
determine when it is possible ta bust mo' data.
.LP
Da socket up in use may require tha process ta have appropriate privileges
to use tha \fIsend\fP() function.
.SH RETURN VALUE
.LP
Upon successful completion, \fIsend\fP() shall return tha number of
bytes sent. Otherwise, -1 shall be returned and
\fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIsend\fP() function shall fail if:
.TP 7
.B EAGAIN \fRor\fP EWOULDBLOCK
.sp
Da socketz file descriptor is marked O_NONBLOCK n' tha requested
operation would block.
.TP 7
.B EBADF
Da \fIsocket\fP argument aint a valid file descriptor.
.TP 7
.B ECONNRESET
A connection was forcibly closed by a peer.
.TP 7
.B EDESTADDRREQ
.sp
Da socket aint connection-mode n' no peer address is set.
.TP 7
.B EINTR
A signal interrupted \fIsend\fP() before any data was transmitted.
.TP 7
.B EMSGSIZE
Da message is too big-ass ta be busted all at once, as tha socket requires.
.TP 7
.B ENOTCONN
Da socket aint connected or otherwise has not had tha peer pre-specified.
.TP 7
.B ENOTSOCK
Da \fIsocket\fP argument do not refer ta a socket.
.TP 7
.B EOPNOTSUPP
Da \fIsocket\fP argument be associated wit a socket dat do not
support one or mo' of tha joints set in
\fIflags\fP.
.TP 7
.B EPIPE
Da socket is shut down fo' writing, or tha socket is connection-mode
and is no longer connected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In tha latta case, n' if
the socket iz of type SOCK_STREAM, tha SIGPIPE signal is generated
to tha callin thread.
.sp
.LP
Da \fIsend\fP() function may fail if:
.TP 7
.B EACCES
Da callin process aint gots tha appropriate privileges.
.TP 7
.B EIO
An I/O error occurred while readin from or freestylin ta tha file system.
.TP 7
.B ENETDOWN
Da local network intercourse used ta reach tha destination is down.
.TP 7
.B ENETUNREACH
.sp
No route ta tha network is present.
.TP 7
.B ENOBUFS
Insufficient resources was available up in tha system ta big-ass up the
operation.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIsend\fP() function is equivalent ta \fIsendto\fP() wit a null
pointer
\fIdest_len\fP argument, n' ta \fIwrite\fP() if no flags is used.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIconnect\fP(), \fIgetsockopt\fP(), \fIpoll\fP(), \fIrecv\fP(),
\fIrecvfrom\fP(), \fIrecvmsg\fP(), \fIselect\fP(), \fIsendmsg\fP(),
\fIsendto\fP(), \fIsetsockopt\fP(), \fIshutdown\fP(), \fIsocket\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
