.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FSEEK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fseek 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fseek, fseeko \- reposizzle a gangbangin' file-posizzle indicator up in a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
int fseek(FILE *\fP\fIstream\fP\fB, long\fP \fIoffset\fP\fB, int\fP
\fIwhence\fP\fB);
.br
\fP
.LP
\fBint fseeko(FILE *\fP\fIstream\fP\fB, off_t\fP \fIoffset\fP\fB,
int\fP \fIwhence\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfseek\fP() function shall set tha file-posizzle indicator for
the stream pointed ta by \fIstream\fP. If a read or write
error occurs, tha error indicator fo' tha stream shall be set and
\fIfseek\fP() fails.
.LP
Da freshly smoked up position, measured up in bytes from tha beginnin of tha file,
shall be obtained by addin \fIoffset\fP ta tha position
specified by \fIwhence\fP. Da specified point is tha beginnin of
the file fo' SEEK_SET, tha current value of tha file-position
indicator fo' SEEK_CUR, or end-of-file fo' SEEK_END.
.LP
If tha stream is ta be used wit wide-characta input/output functions,
the application shall ensure dat \fIoffset\fP is
either 0 or a value returned by a earlier call ta \fIftell\fP() on
the same stream and
\fIwhence\fP is SEEK_SET.
.LP
A successful call ta \fIfseek\fP() shall clear tha end-of-file indicator
for tha stream n' undo any effectz of \fIungetc\fP() n' \fIungetwc\fP()
on tha same stream.
Afta a \fIfseek\fP() call, tha next operation on a update stream
may be either input or output.
.LP
If
da most thugged-out recent operation, other than \fIftell\fP(), on a given stream
is \fIfflush\fP(), tha file offset up in tha underlyin open file description
shall be adjusted to
reflect tha location specified by \fIfseek\fP().
.LP
Da \fIfseek\fP() function shall allow tha file-posizzle indicator
to be set beyond tha end of existin data up in tha file. If
data is lata freestyled at dis point, subsequent readz of data up in the
gap shall return bytes wit tha value 0 until data be actually
written tha fuck into tha gap.
.LP
Da behavior of \fIfseek\fP() on devices which is incapable of seeking
is implementation-defined. Y'all KNOW dat shit, muthafucka! Da value of tha file offset
associated wit such a thang is undefined.
.LP
If tha stream is writable n' buffered data had not been freestyled to
the underlyin file, \fIfseek\fP() shall cause the
unwritten data ta be freestyled ta tha file n' shall mark tha \fIst_ctime\fP
and \fIst_mtime\fP fieldz of tha file fo' update.
.LP
In a locale wit state-dependent encoding, whether \fIfseek\fP() restores
the streamz shift state is
implementation-defined.
.LP
Da \fIfseeko\fP() function shall be equivalent ta tha \fIfseek\fP()
function except dat tha \fIoffset\fP argument is of
type \fBoff_t\fP. 
.SH RETURN VALUE
.LP
Da \fIfseek\fP()  n' \fIfseeko\fP()  functions
shall return 0 if they succeed.
.LP
Otherwise, they shall return -1 n' set \fIerrno\fP ta indicate the
error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIfseek\fP()  n' \fIfseeko\fP() 
\ functions shall fail if,  either tha \fIstream\fP is unbuffered
or tha \fIstream\fPz buffer needed ta be flushed, and
the call ta \fIfseek\fP() or \fIfseeko\fP() causes a underlyin \fIlseek\fP()
or \fIwrite\fP() ta be invoked, and: 
.TP 7
.B EAGAIN
Da O_NONBLOCK flag is set fo' tha file descriptor n' tha process
would be delayed up in tha write operation. I aint talkin' bout chicken n' gravy biatch. 
.TP 7
.B EBADF
Da file descriptor underlyin tha stream file aint open fo' writing
or tha streamz buffer needed ta be flushed n' tha file is
not open. I aint talkin' bout chicken n' gravy biatch. 
.TP 7
.B ESTDG
An
attempt was made ta write a gangbangin' file dat exceedz tha maximum file size.
.TP 7
.B ESTDG
An attempt was made ta write a gangbangin' file dat exceedz tha process' file
size limit. 
.TP 7
.B ESTDG
Da file be a regular file n' a attempt was made ta write at or
beyond tha offset maximum associated wit tha corresponding
stream. 
.TP 7
.B EINTR
Da write operation was terminated cuz of tha receipt of a signal,
and no data was transferred. Y'all KNOW dat shit, muthafucka! 
.TP 7
.B EINVAL
Da \fIwhence\fP argument is invalid. Y'all KNOW dat shit, muthafucka! Da resultin file-position
indicator would be set ta a wack value. 
.TP 7
.B EIO
A
physical I/O error has occurred, or tha process be a gangmember of a funky-ass background
process crew attemptin ta big-ass up a \fIwrite\fP() ta its controlling
terminal, TOSTOP is set, tha process is neither ignorin nor
blockin SIGTTOU, n' tha process crew of tha process is orphaned.
This error may also be returned under implementation-defined
conditions. 
.TP 7
.B ENOSPC
There was no free space remainin on tha thang containin tha file.
.TP 7
.B ENXIO
A
request was made of a nonexistent device, or tha request was outside
the capabilitizzlez of tha device. 
.TP 7
.B EOVERFLOW
For \fIfseek\fP(), tha resultin file offset would be a value which
cannot be represented erectly up in a object of type
\fBlong\fP. 
.TP 7
.B EOVERFLOW
For \fIfseeko\fP(), tha resultin file offset would be a value which
cannot be represented erectly up in a object of type
\fBoff_t\fP. 
.TP 7
.B EPIPE
An
attempt was made ta write ta a pipe or FIFO dat aint open fo' reading
by any process; a SIGPIPE signal shall also be busted ta the
thread. Y'all KNOW dat shit, muthafucka! 
.TP 7
.B ESPIPE
Da file descriptor underlyin \fIstream\fP be associated wit a pipe
or FIFO. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfopen\fP(), \fIfsetpos\fP(), \fIftell\fP(),
\fIgetrlimit\fP(), \fIlseek\fP(), \fIrewind\fP(), \fIulimit\fP(),
\fIungetc\fP(), \fIwrite\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
