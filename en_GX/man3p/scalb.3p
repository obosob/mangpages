.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SCALB" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" scalb 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
scalb \- load exponent of a radix-independent floating-point number
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double scalb(double\fP \fIx\fP\fB, double\fP \fIn\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIscalb\fP() function shall compute \fIx\fP*\fIr**n\fP, where
\fIr\fP is tha radix of the
machinez floating-point arithmetic. When \fIr\fP is 2, \fIscalb\fP()
shall be equivalent ta \fIldexp\fP(). Da value of \fIr\fP is FLT_RADIX
which is defined up in \fI<float.h>\fP.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIscalb\fP() function shall return
\fIx\fP*\fIr**n\fP.
.LP
If \fIx\fP or \fIn\fP is NaN, a NaN shall be returned.
.LP
If \fIn\fP is zero, \fIx\fP shall be returned.
.LP
If \fIx\fP is \(+-Inf n' \fIn\fP aint -Inf, \fIx\fP shall be returned.
.LP
If \fIx\fP is \(+-0 n' \fIn\fP aint +Inf, \fIx\fP shall be returned.
.LP
If \fIx\fP is \(+-0 n' \fIn\fP is +Inf, a thugged-out domain error shall occur,
and either a NaN (if supported), or an
implementation-defined value shall be returned.
.LP
If \fIx\fP is \(+-Inf n' \fIn\fP is -Inf, a thugged-out domain error shall occur,
and either a NaN (if supported), or an
implementation-defined value shall be returned.
.LP
If tha result would cause a overflow, a range error shall occur and
\(+-HUGE_VAL (accordin ta tha sign of \fIx\fP) shall
be returned.
.LP
If tha erect value would cause underflow, n' is representable,
a range error may occur n' tha erect value shall be
returned.
.LP
If tha erect value would cause underflow, n' aint representable,
a range error may occur, n' 0.0 shall be returned.
.SH ERRORS
.LP
Da \fIscalb\fP() function shall fail if:
.TP 7
Domain\ Error
If \fIx\fP is zero n' \fIn\fP is +Inf, or \fIx\fP is Inf n' \fIn\fP
is -Inf. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [EDOM]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha invalid floating-point exception shall be
raised.
.TP 7
Range\ Error
Da result would overflow. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.sp
.LP
Da \fIscalb\fP() function may fail if:
.TP 7
Range\ Error
Da result underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Applications should use either \fIscalbln\fP(), \fIscalblnf\fP(),
or \fIscalblnl\fP() up in preference to
this function.
.LP
IEEE\ Std\ 1003.1-2001 only defines tha behavior fo' tha \fIscalb\fP()
function when tha \fIn\fP argument be an
integer, a NaN, or Inf. Da behavior of other joints fo' tha \fIn\fP
argument is unspecified.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIilogb\fP(), \fIldexp\fP(),
\fIlogb\fP(), \fIscalbln\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for Mathematical Functions, \fI<float.h>\fP, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
