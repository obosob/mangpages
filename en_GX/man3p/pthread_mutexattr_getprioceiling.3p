.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_MUTEXATTR_GETPRIOCEILING" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_mutexattr_getprioceilin 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_mutexattr_getprioceiling, pthread_mutexattr_setprioceiling
\- git n' set tha prioceilin attribute of tha mutex
attributes object (\fBREALTIME THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *
.br
\ \ \ \ \ \  restrict\fP \fIattr\fP\fB, int *restrict\fP \fIprioceiling\fP\fB);
.br
int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIprioceiling\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_mutexattr_getprioceiling\fP() n' \fIpthread_mutexattr_setprioceiling\fP()
functions, respectively, shall get
and set tha prioritizzle ceilin attribute of a mutex attributes object
pointed ta by \fIattr\fP which was previously pimped by the
function \fIpthread_mutexattr_init\fP().
.LP
Da \fIprioceiling\fP attribute gotz nuff tha prioritizzle ceilin of initialized
mutexes. Da jointz of \fIprioceiling\fP are
within tha maximum range of prioritizzles defined by SCHED_FIFO.
.LP
Da \fIprioceiling\fP attribute defines tha prioritizzle ceilin of initialized
mutexes, which is tha minimum prioritizzle level at
which tha critical section guarded by tha mutex is executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In order
to avoid prioritizzle inversion, tha prioritizzle ceilin of the
mutex shall be set ta a prioritizzle higher than or equal ta tha highest
prioritizzle of all tha threadz dat may lock dat mutex. The
valuez of \fIprioceiling\fP is within tha maximum range of priorities
defined under tha SCHED_FIFO schedulin policy.
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIpthread_mutexattr_getprioceiling\fP()
and \fIpthread_mutexattr_setprioceiling\fP()
functions shall return zero; otherwise, a error number shall be returned
to indicate tha error.
.SH ERRORS
.LP
Da \fIpthread_mutexattr_getprioceiling\fP() n' \fIpthread_mutexattr_setprioceiling\fP()
functions may fail if:
.TP 7
.B EINVAL
Da value specified by \fIattr\fP or \fIprioceiling\fP is invalid.
.TP 7
.B EPERM
Da calla aint gots tha privilege ta big-ass up tha operation.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_cond_destroy\fP(), \fIpthread_create\fP(), \fIpthread_mutex_destroy\fP(),
the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
