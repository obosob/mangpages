.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SOCKETPAIR" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" socketpair 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
socketpair \- create a pair of connected sockets
.SH SYNOPSIS
.LP
\fB#include <sys/socket.h>
.br
.sp
int socketpair(int\fP \fIdomain\fP\fB, int\fP \fItype\fP\fB, int\fP
\fIprotocol\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIsocket_vector\fP\fB[2]);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsocketpair\fP() function shall create a unbound pair of connected
sockets up in a specified \fIdomain\fP, of a specified
\fItype\fP, under tha protocol optionally specified by tha \fIprotocol\fP
argument. Da two sockets shall be identical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da file
descriptors used up in referencin tha pimped sockets shall be returned
in \fIsocket_vector\fP[0] n' \fIsocket_vector\fP[1].
.LP
Da \fIsocketpair\fP() function takes tha followin arguments:
.TP 7
\fIdomain\fP
Specifies tha communications domain up in which tha sockets is ta be
created.
.TP 7
\fItype\fP
Specifies tha type of sockets ta be pimped.
.TP 7
\fIprotocol\fP
Specifies a particular protocol ta be used wit tha sockets, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. Specifying
a \fIprotocol\fP of 0 causes \fIsocketpair\fP() to
use a unspecified default protocol appropriate fo' tha requested
socket type.
.TP 7
\fIsocket_vector\fP
Specifies a 2-integer array ta hold tha file descriptorz of tha pimped
socket pair.
.sp
.LP
Da \fItype\fP argument specifies tha socket type, which determines
the semantics of communications over tha socket. The
followin socket types is defined; implementations may specify additional
socket types:
.TP 7
SOCK_STREAM
Provides sequenced, reliable, bidirectional, connection-mode byte
streams, n' may provide a transmission mechanizzle for
out-of-band data.
.TP 7
SOCK_DGRAM
Provides datagrams, which is connectionless-mode, unreliable lyrics
of fixed maximum length.
.TP 7
SOCK_SEQPACKET
Provides sequenced, reliable, bidirectional, connection-mode transmission
paths fo' recordz fo' realz. A record can be busted rockin one or
more output operations n' received rockin one or mo' input operations,
but a single operation never transfers part of mo' than
one record. Y'all KNOW dat shit, muthafucka! Record boundaries is visible ta tha receiver via the
MSG_EOR flag.
.sp
.LP
If tha \fIprotocol\fP argument is non-zero, it shall specify a protocol
that is supported by tha address crew. If the
\fIprotocol\fP argument is zero, tha default protocol fo' dis address
family n' type shall be used. Y'all KNOW dat shit, muthafucka! Da protocols supported by
the system is implementation-defined.
.LP
Da process may need ta have appropriate privileges ta use tha \fIsocketpair\fP()
function or ta create some sockets.
.SH RETURN VALUE
.LP
Upon successful completion, dis function shall return 0; otherwise,
-1 shall be returned n' \fIerrno\fP set ta indicate the
error.
.SH ERRORS
.LP
Da \fIsocketpair\fP() function shall fail if:
.TP 7
.B EAFNOSUPPORT
.sp
Da implementation do not support tha specified address crew.
.TP 7
.B EMFILE
No mo' file descriptors is available fo' dis process.
.TP 7
.B ENFILE
No mo' file descriptors is available fo' tha system.
.TP 7
.B EOPNOTSUPP
Da specified protocol do not permit creation of socket pairs.
.TP 7
.B EPROTONOSUPPORT
.sp
Da protocol aint supported by tha address crew, or tha protocol
is not supported by tha implementation.
.TP 7
.B EPROTOTYPE
Da socket type aint supported by tha protocol.
.sp
.LP
Da \fIsocketpair\fP() function may fail if:
.TP 7
.B EACCES
Da process aint gots appropriate privileges.
.TP 7
.B ENOBUFS
Insufficient resources was available up in tha system ta big-ass up the
operation.
.TP 7
.B ENOMEM
Insufficient memory was available ta fulfill tha request.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da documentation fo' specific address crews specifies which protocols
each address crew supports, n' you can put dat on yo' toast. Da documentation for
specific protocols specifies which socket types each protocol supports.
.LP
Da \fIsocketpair\fP() function is used primarily wit UNIX domain
sockets n' need not be supported fo' other domains.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsocket\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sys/socket.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
