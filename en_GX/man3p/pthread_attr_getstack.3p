.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_ATTR_GETSTACK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_attr_getstack 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_attr_getstack, pthread_attr_setstack \- git n' set stack attributes
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
\fBint pthread_attr_getstack(const pthread_attr_t *restrict\fP \fIattr\fP\fB,
.br
\ \ \ \ \ \  void **restrict\fP \fIstackaddr\fP\fB, size_t *restrict\fP
\fIstacksize\fP\fB);
.br
int pthread_attr_setstack(pthread_attr_t *\fP\fIattr\fP\fB, void *\fP\fIstackaddr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIstacksize\fP\fB); \fP
.sp
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_attr_getstack\fP() n' \fIpthread_attr_setstack\fP()
functions, respectively, shall git n' set tha thread
creation stack attributes \fIstackaddr\fP n' \fIstacksize\fP up in the
\fIattr\fP object.
.LP
Da stack attributes specify tha area of storage ta be used fo' the
created threadz stack. Da base (lowest addressable byte)
of tha storage shall be \fIstackaddr\fP, n' tha size of tha storage
shall be \fIstacksize\fP bytes. Da \fIstacksize\fP shall
be at least {PTHREAD_STACK_MIN}. Da \fIstackaddr\fP shall be aligned
appropriately ta be used as a stack; fo' example,
\fIpthread_attr_setstack\fP() may fail wit [EINVAL] if ( \fIstackaddr\fP
& 0x7) aint 0 fo' realz. All pages within tha stack
busted lyrics bout by \fIstackaddr\fP n' \fIstacksize\fP shall be both readable
and writable by tha thread.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return a value of
0; otherwise, a error number shall be moonwalked back ta indicate
the error.
.LP
Da \fIpthread_attr_getstack\fP() function shall store tha stack attribute
values up in \fIstackaddr\fP n' \fIstacksize\fP if
successful.
.SH ERRORS
.LP
Da \fIpthread_attr_setstack\fP() function shall fail if:
.TP 7
.B EINVAL
Da value of \fIstacksize\fP is less than {PTHREAD_STACK_MIN} or exceeds
an implementation-defined limit.
.sp
.LP
Da \fIpthread_attr_setstack\fP() function may fail if:
.TP 7
.B EINVAL
Da value of \fIstackaddr\fP aint gots proper alignment ta be
used as a stack, or if ( \fIstackaddr\fP +
\fIstacksize\fP) lacks proper alignment.
.TP 7
.B EACCES
Da stack page(s) busted lyrics bout by \fIstackaddr\fP n' \fIstacksize\fP
are not both readable n' writable by tha thread.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
These functions is appropriate fo' use by applications up in a environment
where tha stack fo' a thread must be placed up in some
particular region of memory.
.LP
While it might seem dat a application could detect stack overflow
by providin a protected page outside tha specified stack
region, dis cannot be done portably. Implementations is free to
place tha threadz initial stack pointa anywhere within the
specified region ta accommodate tha machinez stack pointa behavior
and allocation requirements, n' you can put dat on yo' toast. Furthermore, on some
architectures, like fuckin tha IA-64, "overflow" might mean dat two separate
stack pointas allocated within tha region will overlap
somewhere up in tha middle of tha region.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_attr_init\fP(), \fIpthread_attr_setdetachstate\fP(),
\fIpthread_attr_setstacksize\fP(), \fIpthread_create\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<limits.h>\fP,
\fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
