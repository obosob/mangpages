.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_MUTEX_GETPRIOCEILING" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_mutex_getprioceilin 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_mutex_getprioceiling, pthread_mutex_setprioceilin \- git and
set tha prioritizzle ceilin of a mutex (\fBREALTIME
THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict\fP
\fImutex\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIprioceiling\fP\fB);
.br
int pthread_mutex_setprioceiling(pthread_mutex_t *restrict\fP \fImutex\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIprioceiling\fP\fB, int *restrict\fP \fIold_ceiling\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_mutex_getprioceiling\fP() function shall return the
current prioritizzle ceilin of tha mutex.
.LP
Da \fIpthread_mutex_setprioceiling\fP() function shall either lock
the mutex if it is unlocked, or block until it can
successfully lock tha mutex, then it shall chizzle tha mutexz priority
ceilin n' release tha mutex. When tha chizzle is
successful, tha previous value of tha prioritizzle ceilin shall be returned
in \fIold_ceiling\fP. Da process of lockin tha mutex
need not adhere ta tha prioritizzle protect protocol.
.LP
If tha \fIpthread_mutex_setprioceiling\fP() function fails, tha mutex
prioritizzle ceilin shall not be chizzled.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_mutex_getprioceiling\fP() n' \fIpthread_mutex_setprioceiling\fP()
functions shall return zero;
otherwise, a error number shall be moonwalked back ta indicate tha error.
.SH ERRORS
.LP
Da \fIpthread_mutex_getprioceiling\fP() n' \fIpthread_mutex_setprioceiling\fP()
functions may fail if:
.TP 7
.B EINVAL
Da prioritizzle axed by \fIprioceiling\fP is outta range.
.TP 7
.B EINVAL
Da value specified by \fImutex\fP do not refer ta a cold-ass lil currently existing
mutex.
.TP 7
.B EPERM
Da calla aint gots tha privilege ta big-ass up tha operation.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_mutex_destroy\fP(), \fIpthread_mutex_lock\fP(), \fIpthread_mutex_timedlock\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
