.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_GETSPECIFIC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_getspecific 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_getspecific, pthread_setspecific \- thread-specific data pimpment
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
void *pthread_getspecific(pthread_key_t\fP \fIkey\fP\fB);
.br
int pthread_setspecific(pthread_key_t\fP \fIkey\fP\fB, const void
*\fP\fIvalue\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_getspecific\fP() function shall return tha value currently
bound ta tha specified \fIkey\fP on behalf of the
callin thread.
.LP
Da \fIpthread_setspecific\fP() function shall associate a thread-specific
\fIvalue\fP wit a \fIkey\fP obtained via a
previous call ta \fIpthread_key_create\fP(). Different threadz may
bind
different joints ta tha same key. These joints is typically pointers
to blockz of dynamically allocated memory dat have been
reserved fo' use by tha callin thread.
.LP
Da effect of callin \fIpthread_getspecific\fP() or \fIpthread_setspecific\fP()
with a \fIkey\fP value not obtained from \fIpthread_key_create\fP()
or afta \fIkey\fP has been deleted wit \fIpthread_key_delete\fP()
is undefined.
.LP
Both \fIpthread_getspecific\fP() n' \fIpthread_setspecific\fP() may
be called from a thread-specific data destructor
function. I aint talkin' bout chicken n' gravy biatch fo' realz. A call ta \fIpthread_getspecific\fP() fo' tha thread-specific
data key bein destroyed shall return tha value NULL,
unless tha value is chizzled (afta tha destructor starts) by a cold-ass lil call
to \fIpthread_setspecific\fP(). Calling
\fIpthread_setspecific\fP() from a thread-specific data destructor
routine may result either up in lost storage (afta at least
PTHREAD_DESTRUCTOR_ITERATIONS attempts at destruction) or up in a infinite
loop.
.LP
Both functions may be implemented as macros.
.SH RETURN VALUE
.LP
Da \fIpthread_getspecific\fP() function shall return tha thread-specific
data value associated wit tha given \fIkey\fP. If
no thread-specific data value be associated wit \fIkey\fP, then the
value NULL shall be returned.
.LP
If successful, tha \fIpthread_setspecific\fP() function shall return
zero; otherwise, a error number shall be returned to
indicate tha error.
.SH ERRORS
.LP
No errors is returned from \fIpthread_getspecific\fP().
.LP
Da \fIpthread_setspecific\fP() function shall fail if:
.TP 7
.B ENOMEM
Insufficient memory exists ta associate tha value wit tha key.
.sp
.LP
Da \fIpthread_setspecific\fP() function may fail if:
.TP 7
.B EINVAL
Da key value is invalid.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Performizzle n' ease-of-use of \fIpthread_getspecific\fP() is critical
for functions dat rely on maintainin state in
thread-specific data. Right back up in yo muthafuckin ass. Since no errors is required ta be detected
by it, n' since tha only error dat could be detected is tha use
of a invalid key, tha function ta \fIpthread_getspecific\fP() has
been designed ta favor speed n' simplicitizzle over error
reporting.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_key_create\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
