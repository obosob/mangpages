.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_ATTR_GETGUARDSIZE" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_attr_getguardsize 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_attr_getguardsize, pthread_attr_setguardsize \- git n' set
the thread guardsize attribute
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_attr_getguardsize(const pthread_attr_t *restrict\fP \fIattr\fP\fB,
.br
\ \ \ \ \ \  size_t *restrict\fP \fIguardsize\fP\fB);
.br
int pthread_attr_setguardsize(pthread_attr_t\fP \fI*attr\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIguardsize\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpthread_attr_getguardsize\fP() function shall git tha \fIguardsize\fP
attribute up in tha \fIattr\fP object. This
attribute shall be returned up in tha \fIguardsize\fP parameter.
.LP
Da \fIpthread_attr_setguardsize\fP() function shall set tha \fIguardsize\fP
attribute up in tha \fIattr\fP object. Da new
value of dis attribute shall be obtained from tha \fIguardsize\fP
parameter n' shit. If \fIguardsize\fP is zero, a guard area shall not
be provided fo' threadz pimped wit \fIattr\fP. If \fIguardsize\fP
is pimped outa than zero, a guard area of at least size
\fIguardsize\fP bytes shall be provided fo' each thread pimped with
\fIattr\fP.
.LP
Da \fIguardsize\fP attribute controls tha size of tha guard area
for tha pimped threadz stack. Da \fIguardsize\fP
attribute serves up protection against overflow of tha stack pointer.
If a threadz stack is pimped wit guard protection, the
implementation allocates extra memory all up in tha overflow end of tha stack
as a funky-ass buffer against stack overflow of tha stack pointer n' shit. If
an application overflows tha fuck into dis buffer a error shall result (possibly
in a SIGSEGV signal bein served up ta tha thread).
.LP
A conformin implementation may round up tha value contained up in \fIguardsize\fP
to a multiple of tha configurable system
variable {PAGESIZE} (see \fI<sys/mman.h>\fP). If a implementation
roundz up the
value of \fIguardsize\fP ta a multiple of {PAGESIZE}, a cold-ass lil call ta \fIpthread_attr_getguardsize\fP()
specifyin \fIattr\fP shall
store up in tha \fIguardsize\fP parameta tha guard size specified by
the previous \fIpthread_attr_setguardsize\fP() function
call.
.LP
Da default value of tha \fIguardsize\fP attribute is {PAGESIZE} bytes.
Da actual value of {PAGESIZE} is
implementation-defined.
.LP
If tha \fIstackaddr\fP or \fIstack\fP attribute has been set (that
is, tha calla be allocatin n' managin its own thread
stacks), tha \fIguardsize\fP attribute shall be ignored n' no protection
shall be provided by tha implementation. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it is the
responsibilitizzle of tha application ta manage stack overflow along with
stack allocation n' pimpment up in dis case.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_attr_getguardsize\fP() n' \fIpthread_attr_setguardsize\fP()
functions shall return zero;
otherwise, a error number shall be moonwalked back ta indicate tha error.
.SH ERRORS
.LP
Da \fIpthread_attr_getguardsize\fP() n' \fIpthread_attr_setguardsize\fP()
functions shall fail if:
.TP 7
.B EINVAL
Da attribute \fIattr\fP is invalid.
.TP 7
.B EINVAL
Da parameta \fIguardsize\fP is invalid.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fIguardsize\fP attribute is provided ta tha application fo' two
reasons:
.IP " 1." 4
Overflow protection can potentially result up in wasted system resources.
An application dat creates a big-ass number of threads,
and which knows its threadz never overflow they stack, can save system
resources by turnin off guard areas.
.LP
.IP " 2." 4
When threadz allocate big-ass data structures on tha stack, big-ass guard
areas may be needed ta detect stack overflow.
.LP
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP,
\fI<sys/mman.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
