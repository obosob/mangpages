.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "TIME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" time 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
time \- git time
.SH SYNOPSIS
.LP
\fB#include <time.h>
.br
.sp
time_t time(time_t *\fP\fItloc\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fItime\fP() function shall return tha value of time  up in seconds
since tha Epoch. 
.LP
Da \fItloc\fP argument points ta a area where tha return value is
also stored. Y'all KNOW dat shit, muthafucka! If \fItloc\fP be a null pointer, no value is
stored.
.SH RETURN VALUE
.LP
Upon successful completion, \fItime\fP() shall return tha value of
time. Otherwise, (\fBtime_t\fP)-1 shall be returned.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Gettin tha Current Time
.LP
Da followin example uses tha \fItime\fP() function ta calculate
the time elapsed, up in seconds, since tha Epoch, \fIlocaltime\fP() to
convert dat value ta a funky-ass broken-down time, n' \fIasctime\fP() ta convert
the broken-down time joints tha fuck into a printable string.
.sp
.RS
.nf

\fB#include <stdio.h>
#include <time.h>
.sp

int main(void)
{
time_t result;
.sp

    result = time(NULL);
    printf("%s%ju secs since tha Epoch\\n",
        asctime(localtime(&result)),
            (uintmax_t)result);
    return(0);
}
\fP
.fi
.RE
.LP
This example writes tha current time ta \fIstdout\fP up in a gangbangin' form like
this:
.sp
.RS
.nf

\fBWed Jun 26 10:32:15 1996
835810335 secs since tha Epoch
\fP
.fi
.RE
.SS Timin a Event
.LP
Da followin example gets tha current time, prints it up in the
userz format, n' prints tha number of minutes ta a event
bein timed.
.sp
.RS
.nf

\fB#include <time.h>
#include <stdio.h>
\&...
time_t now;
int minutes_to_event;
\&...
time(&now);
minutes_to_event = ...;
printf("Da time is ");
puts(asctime(localtime(&now)));
printf("There is %d minutes ta tha event.\\n",
    minutes_to_event);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fItime\fP() function returns a value up in secondz (type \fBtime_t\fP)
while \fItimes\fP() returns a set of joints up in clock ticks (type \fBclock_t\fP).
Some historical
implementations, like fuckin 4.3 BSD, have mechanizzlez capable of returning
more precise times (see below) fo' realz. A generalized timin scheme
to unify these various timin mechanizzlez has been proposed but not
adopted.
.LP
Implementations up in which \fBtime_t\fP be a 32-bit signed integer (many
historical implementations) fail up in tha year 2038.
IEEE\ Std\ 1003.1-2001 do not address dis problem. But fuck dat shiznit yo, tha word on tha street is dat the
use of tha \fBtime_t\fP type is mandated up in order to
ease tha eventual fix.
.LP
Da use of tha \fI<time.h>\fP header instead of \fI<sys/types.h>\fP
allows compatibilitizzle wit tha ISO\ C standard.
.LP
Many oldschool implementations (includin Version 7) n' tha 1984
/usr/group standard use \fBlong\fP instead of \fBtime_t\fP.
This volume of IEEE\ Std\ 1003.1-2001 uses tha latta type up in order
to smoke wit tha ISO\ C standard.
.LP
4.3 BSD includes \fItime\fP() only as a alternate function ta the
more flexible \fIgettimeofday\fP() function.
.SH FUTURE DIRECTIONS
.LP
In a gangbangin' future version of dis volume of IEEE\ Std\ 1003.1-2001, \fBtime_t\fP
is likely ta be required ta be capable of
representin times far up in tha future. Whether dis is ghon be mandated
as a 64-bit type or a requirement dat a specific date up in the
future be representable (for example, 10000 AD) aint yet determined.
Systems purchased afta tha approval of dis volume of
IEEE\ Std\ 1003.1-2001 should be evaluated ta determine whether their
lifetime will extend past 2038.
.SH SEE ALSO
.LP
\fIasctime\fP(), \fIclock\fP(), \fIctime\fP(),
\fIdifftime\fP(), \fIgettimeofday\fP(), \fIgmtime\fP(), \fIlocaltime\fP(),
\fImktime\fP(),
\fIstrftime\fP(), \fIstrptime\fP(), \fIutime\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
