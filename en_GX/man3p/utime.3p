.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "UTIME" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" utime 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
utime \- set file access n' modification times
.SH SYNOPSIS
.LP
\fB#include <utime.h>
.br
.sp
int utime(const char *\fP\fIpath\fP\fB, const struct utimbuf *\fP\fItimes\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIutime\fP() function shall set tha access n' modification times
of tha file named by tha \fIpath\fP argument.
.LP
If \fItimes\fP be a null pointer, tha access n' modification times
of tha file shall be set ta tha current time. Da effective
user ID of tha process shall match tha balla of tha file, or tha process
has write permission ta tha file or has appropriate
privileges, ta use \fIutime\fP() up in dis manner.
.LP
If \fItimes\fP aint a null pointer, \fItimes\fP shall be interpreted
as a pointa ta a \fButimbuf\fP structure n' the
access n' modification times shall be set ta tha joints contained
in tha designated structure. Only a process wit tha effective
user ID equal ta tha user ID of tha file or a process wit appropriate
privileges may use \fIutime\fP() dis way.
.LP
Da \fButimbuf\fP structure is defined up in tha \fI<utime.h>\fP header.
Da times
in tha structure \fButimbuf\fP is measured up in secondz since tha Epoch.
.LP
Upon successful completion, \fIutime\fP() shall mark tha time of the
last file status chizzle, \fIst_ctime\fP, ta be updated;
see \fI<sys/stat.h>\fP.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise, -1 shall
be returned n' \fIerrno\fP shall be set ta indicate the
error, n' tha file times shall not be affected.
.SH ERRORS
.LP
Da \fIutime\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied by a cold-ass lil component of tha path prefix; or
the \fItimes\fP argument be a null pointa n' tha effective
user ID of tha process do not match tha balla of tha file, tha process
does not have write permission fo' tha file, n' the
process aint gots appropriate privileges.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.TP 7
.B EPERM
Da \fItimes\fP argument aint a null pointa n' tha callin process'
effectizzle user ID do not match tha balla of tha file
and tha callin process aint gots tha appropriate privileges.
.TP 7
.B EROFS
Da file system containin tha file is read-only.
.sp
.LP
Da \fIutime\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encounterin a symbolic link up in resolution of tha \fIpath\fP
argument, tha length of tha substituted pathname
strin exceeded {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fIactime\fP structure member must be present so dat a application
may set it, even though a implementation may ignore
it n' not chizzle tha access time on tha file. If a application intends
to leave one of tha timez of a gangbangin' file unchanged while
changin tha other, it should use \fIstat\fP() ta retrieve tha file's
\fIst_atime\fP and
\fIst_mtime\fP parameters, set \fIactime\fP n' \fImodtime\fP up in the
buffer, n' chizzle one of dem before makin the
\fIutime\fP() call.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/stat.h>\fP,
\fI<utime.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
