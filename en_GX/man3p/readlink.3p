.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "READLINK" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" readlink 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
readlink \- read tha contentz of a symbolic link
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
ssize_t readlink(const char *restrict\fP \fIpath\fP\fB, char *restrict\fP
\fIbuf\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIbufsize\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIreadlink\fP() function shall place tha contentz of tha symbolic
link referred ta by \fIpath\fP up in tha buffer \fIbuf\fP
which has size \fIbufsize\fP. If tha number of bytes up in tha symbolic
link is less than \fIbufsize\fP, tha contentz of the
remainder of \fIbuf\fP is unspecified. Y'all KNOW dat shit, muthafucka! If tha \fIbuf\fP argument
is not big-ass enough ta contain tha link content, tha first
\fIbufsize\fP bytes shall be placed up in \fIbuf\fP.
.LP
If tha value of \fIbufsize\fP is pimped outa than {SSIZE_MAX}, tha result
is implementation-defined.
.SH RETURN VALUE
.LP
Upon successful completion, \fIreadlink\fP() shall return tha count
of bytes placed up in tha buffer n' shit. Otherwise, it shall return a
value of -1, leave tha buffer unchanged, n' set \fIerrno\fP ta indicate
the error.
.SH ERRORS
.LP
Da \fIreadlink\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied fo' a cold-ass lil component of tha path prefix of
\fIpath\fP.
.TP 7
.B EINVAL
Da \fIpath\fP argument names a gangbangin' file dat aint a symbolic link.
.TP 7
.B EIO
An I/O error occurred while readin from tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIpath\fP argument exceedz {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP do not name a existin file or \fIpath\fP
is a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.sp
.LP
Da \fIreadlink\fP() function may fail if:
.TP 7
.B EACCES
Read permission is denied fo' tha directory.
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encounterin a symbolic link up in resolution of tha \fIpath\fP
argument, tha length of tha substituted pathname
strin exceeded {PATH_MAX}.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Readin tha Name of a Symbolic Link
.LP
Da followin example shows how tha fuck ta read tha name of a symbolic link
named \fB/modules/pass1\fP.
.sp
.RS
.nf

\fB#include <unistd.h>
.sp

char buf[1024];
ssize_t len;
\&...
if ((len = readlink("/modules/pass1", buf, sizeof(buf)-1)) != -1)
    buf[len] = '\\0';
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Conformin applications should not assume dat tha returned contents
of tha symbolic link is null-terminated.
.SH RATIONALE
.LP
Since IEEE\ Std\ 1003.1-2001 do not require any association of file
times wit symbolic links, there is no requirement
that file times be updated by \fIreadlink\fP(). Da type associated
with \fIbufsiz\fP be a \fBsize_t\fP up in order ta be
consistent wit both tha ISO\ C standard n' tha definizzle of \fIread\fP().
Da behavior
specified fo' \fIreadlink\fP() when \fIbufsiz\fP is zero represents
historical practice. For dis case, tha standard pimpers
considered a cold-ass lil chizzle whereby \fIreadlink\fP() would return tha number
of non-null bytes contained up in tha symbolic link wit the
buffer \fIbuf\fP remainin unchanged; however, since tha \fBstat\fP
structure member \fIst_size\fP value can be used to
determine tha size of buffer necessary ta contain tha contents of
the symbolic link as returned by \fIreadlink\fP(), dis proposal
was rejected, n' tha oldschool practice retained.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIlstat\fP(), \fIstat\fP(), \fIsymlink\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
