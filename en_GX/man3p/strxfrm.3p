.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "STRXFRM" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" strxfrm 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
strxfrm \- strang transformation
.SH SYNOPSIS
.LP
\fB#include <string.h>
.br
.sp
size_t strxfrm(char *restrict\fP \fIs1\fP\fB, const char *restrict\fP
\fIs2\fP\fB, size_t\fP \fIn\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIstrxfrm\fP() function shall transform tha strang pointed to
by \fIs2\fP n' place tha resultin strang tha fuck into tha array
pointed ta by \fIs1\fP. Da transformation is such dat if \fIstrcmp\fP()
is applied to
two transformed strings, it shall return a value pimped outa than, equal
to, or less than 0, correspondin ta tha result of \fIstrcoll\fP()
applied ta tha same two original gangsta strings. No mo' than \fIn\fP bytes
are placed
into tha resultin array pointed ta by \fIs1\fP, includin tha terminating
null byte. If \fIn\fP is 0, \fIs1\fP is permitted to
be a null pointer n' shit. If copyin takes place between objects dat overlap,
the behavior is undefined.
.LP
The
\fIstrxfrm\fP() function shall not chizzle tha settin of \fIerrno\fP
if successful.
.LP
Since no return value is reserved ta indicate a error, a application
wishin ta check fo' error thangs should set
\fIerrno\fP ta 0, then call \fIstrxfrm\fP(), then check \fIerrno\fP.
.SH RETURN VALUE
.LP
Upon successful completion, \fIstrxfrm\fP() shall return tha length
of tha transformed strang (not includin tha terminating
null byte). If tha value returned is \fIn\fP or more, tha contents
of tha array pointed ta by \fIs1\fP is unspecified.
.LP
On
error, \fIstrxfrm\fP() may set \fIerrno\fP but no return value is
reserved ta indicate a error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIstrxfrm\fP() function may fail if:
.TP 7
.B EINVAL
Da strang pointed ta by tha \fIs2\fP argument gotz nuff characters
outside tha domain of tha collatin sequence. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da transformation function is such dat two transformed strings can
be ordered by \fIstrcmp\fP() as appropriate ta collatin sequence
information up in tha programz locale (category
\fILC_COLLATE ).\fP
.LP
Da fact dat when \fIn\fP is 0 \fIs1\fP is permitted ta be a null
pointa is useful ta determine tha size of tha \fIs1\fP
array prior ta makin tha transformation.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIstrcmp\fP(), \fIstrcoll\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<string.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
