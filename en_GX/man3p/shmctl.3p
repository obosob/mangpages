.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SHMCTL" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" shmctl 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
shmctl \- XSI shared memory control operations
.SH SYNOPSIS
.LP
\fB#include <sys/shm.h>
.br
.sp
int shmctl(int\fP \fIshmid\fP\fB, int\fP \fIcmd\fP\fB, struct shmid_ds
*\fP\fIbuf\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIshmctl\fP() function operates on XSI shared memory (see the
Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 3.340, Shared Memory Object). Well shiiiit, it is unspecified whether this
function
interoperates wit tha realtime interprocess communication facilities
defined up in \fIRealtime\fP .
.LP
Da \fIshmctl\fP() function serves up a variety of shared memory control
operations as specified by \fIcmd\fP. Da following
values fo' \fIcmd\fP is available:
.TP 7
IPC_STAT
Place tha current value of each gangmember of tha \fBshmid_ds\fP data
structure associated wit \fIshmid\fP tha fuck into tha structure
pointed ta by \fIbuf\fP. Da contentz of tha structure is defined
in \fI<sys/shm.h>\fP.
.TP 7
IPC_SET
Set tha value of tha followin thugz of tha \fBshmid_ds\fP data
structure associated wit \fIshmid\fP ta tha corresponding
value found up in tha structure pointed ta by \fIbuf\fP: 
.sp
.RS
.nf

\fBshm_perm.uid
shm_perm.gid
shm_perm.mode   \fP Low-order nine bits.
.fi
.RE
.LP
IPC_SET can only be executed by a process dat has a effectizzle user
ID equal ta either dat of a process wit appropriate
privileges or ta tha value of \fIshm_perm.cuid\fP or \fIshm_perm.uid\fP
in tha \fBshmid_ds\fP data structure associated with
\fIshmid\fP.
.TP 7
IPC_RMID
Remove tha shared memory identifier specified by \fIshmid\fP from
the system n' destroy tha shared memory segment and
\fBshmid_ds\fP data structure associated wit dat shit. IPC_RMID can only
be executed by a process dat has a effectizzle user ID equal
to either dat of a process wit appropriate privileges or ta the
value of \fIshm_perm.cuid\fP or \fIshm_perm.uid\fP up in the
\fBshmid_ds\fP data structure associated wit \fIshmid\fP.
.sp
.SH RETURN VALUE
.LP
Upon successful completion, \fIshmctl\fP() shall return 0; otherwise,
it shall return -1 n' set \fIerrno\fP ta indicate the
error.
.SH ERRORS
.LP
Da \fIshmctl\fP() function shall fail if:
.TP 7
.B EACCES
Da argument \fIcmd\fP is equal ta IPC_STAT n' tha callin process
does not have read permission; peep \fIXSI Interprocess Communication\fP
\&.
.TP 7
.B EINVAL
Da value of \fIshmid\fP aint a valid shared memory identifier,
or tha value of \fIcmd\fP aint a valid command.
.TP 7
.B EPERM
Da argument \fIcmd\fP is equal ta IPC_RMID or IPC_SET n' tha effective
user ID of tha callin process aint equal ta that
of a process wit appropriate privileges n' it aint equal ta the
value of \fIshm_perm.cuid\fP or \fIshm_perm.uid\fP up in the
data structure associated wit \fIshmid\fP.
.sp
.LP
Da \fIshmctl\fP() function may fail if:
.TP 7
.B EOVERFLOW
Da \fIcmd\fP argument is IPC_STAT n' tha \fIgid\fP or \fIuid\fP
value is too big-ass ta be stored up in tha structure pointed
to by tha \fIbuf\fP argument.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da POSIX Realtime Extension defines alternatizzle intercourses fo' interprocess
communication. I aint talkin' bout chicken n' gravy biatch fo' realz. Application pimpers whoz ass need to
use IPC should design they applications so dat modulez rockin the
IPC routines busted lyrics bout up in \fIXSI Interprocess Communication\fP can
be easily modified ta use tha alternative
interfaces.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIXSI Interprocess Communication\fP, \fIRealtime\fP, \fIshmat\fP(),
\fIshmdt\fP(), \fIshmget\fP(), \fIshm_open\fP(), \fIshm_unlink\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/shm.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
