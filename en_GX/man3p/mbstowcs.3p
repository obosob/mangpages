.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MBSTOWCS" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mbstowcs 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mbstowcs \- convert a cold-ass lil characta strang ta a wide-characta string
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
size_t mbstowcs(wchar_t *restrict\fP \fIpwcs\fP\fB, const char *restrict\fP
\fIs\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIn\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fImbstowcs\fP() function shall convert a sequence of characters
that begins up in tha initial shift state from tha array
pointed ta by \fIs\fP tha fuck into a sequence of correspondin wide-character
codes n' shall store not mo' than \fIn\fP wide-character
codes tha fuck into tha array pointed ta by \fIpwcs\fP. No charactas that
follow a null byte (which is converted tha fuck into a wide-character
code wit value 0) shall be examined or converted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Each character
shall be converted as if by a cold-ass lil call ta \fImbtowc\fP(), except that
the shift state of \fImbtowc\fP() aint affected.
.LP
No mo' than \fIn\fP elements shall be modified up in tha array pointed
to by \fIpwcs\fP. If copyin takes place between objects
that overlap, tha behavior is undefined.
.LP
Da behavior of dis function shall be affected by tha \fILC_CTYPE\fP
category of tha current locale.  If
\fIpwcs\fP be a null pointer, \fImbstowcs\fP() shall return tha length
required ta convert tha entire array regardless of the
value of \fIn\fP yo, but no joints is stored. Y'all KNOW dat shit, muthafucka! 
.SH RETURN VALUE
.LP
If a invalid characta is encountered, \fImbstowcs\fP() shall return
(\fBsize_t\fP)-1  n' may set
\fIerrno\fP ta indicate tha error. Shiiit, dis aint no joke. 
.LP
Otherwise, \fImbstowcs\fP() shall return tha number of tha array elements
modified  (or required
if \fIpwcs\fP is null),  not includin a terminatin 0 code, if
any. Da array shall not be zero-terminated if tha value returned
is \fIn\fP.
.SH ERRORS
.LP
Da \fImbstowcs\fP() function may fail if:
.TP 7
.B EILSEQ
Invalid byte sequence is detected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImblen\fP(), \fImbtowc\fP(), \fIwctomb\fP(),
\fIwcstombs\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
