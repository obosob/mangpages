.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FPUTS" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fputs 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fputs \- put a strang on a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
int fputs(const char *restrict\fP \fIs\fP\fB, FILE *restrict\fP \fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfputs\fP() function shall write tha null-terminated string
pointed ta by \fIs\fP ta tha stream pointed ta by
\fIstream\fP. Da terminatin null byte shall not be written.
.LP
The
\fIst_ctime\fP n' \fIst_mtime\fP fieldz of tha file shall be marked
for update between tha successful execution of
\fIfputs\fP() n' tha next successful completion of a cold-ass lil call ta \fIfflush\fP()
or \fIfclose\fP() on tha same stream or a cold-ass lil call ta \fIexit\fP()
or \fIabort\fP(). 
.SH RETURN VALUE
.LP
Upon successful completion, \fIfputs\fP() shall return a non-negative
number n' shit. Otherwise, it shall return EOF, set a error
indicator fo' tha stream,  n' set \fIerrno\fP ta indicate the
error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Refer ta \fIfputc\fP().
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Printin ta Standard Output
.LP
Da followin example gets tha current time, converts it ta a string
usin \fIlocaltime\fP() n' \fIasctime\fP(), n' prints it to
standard output rockin \fIfputs\fP(). Well shiiiit, it then prints tha number of
minutes ta a event fo' which it is waiting.
.sp
.RS
.nf

\fB#include <time.h>
#include <stdio.h>
\&...
time_t now;
int minutes_to_event;
\&...
time(&now);
printf("Da time is ");
fputs(asctime(localtime(&now)), stdout);
printf("There is still %d minutes ta tha event.\\n",
    minutes_to_event);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da \fIputs\fP() function appendz a <newline> while \fIfputs\fP()
does not.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfopen\fP(), \fIputc\fP(), \fIputs\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
