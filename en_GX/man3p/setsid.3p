.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SETSID" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" setsid 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
setsid \- create session n' set process crew ID
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
pid_t setsid(void);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsetsid\fP() function shall create a freshly smoked up session, if tha calling
process aint a process crew leader n' shit. Upon return the
callin process shall be tha session leader of dis freshly smoked up session, shall
be tha process crew leader of a freshly smoked up process group, and
shall have no controllin terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da process crew ID of tha calling
process shall be set equal ta tha process ID of tha calling
process. Da callin process shall be tha only process up in tha new
process crew n' tha only process up in tha freshly smoked up session.
.SH RETURN VALUE
.LP
Upon successful completion, \fIsetsid\fP() shall return tha value
of tha freshly smoked up process crew ID of tha callin process.
Otherwise, it shall return (\fBpid_t\fP)-1 n' set \fIerrno\fP to
indicate tha error.
.SH ERRORS
.LP
Da \fIsetsid\fP() function shall fail if:
.TP 7
.B EPERM
Da callin process be already a process crew leader, or tha process
group ID of a process other than tha callin process
matches tha process ID of tha callin process.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Da \fIsetsid\fP() function is similar ta tha \fIsetpgrp\fP() function
of System V.
System V, without thang control, crews processes tha fuck into process groups
and creates freshly smoked up process crews via \fIsetpgrp\fP(); only one process
group may be part of a login session.
.LP
Thang control allows multiple process crews within a login session.
In order ta limit thang control actions so dat they can only
affect processes up in tha same login session, dis volume of IEEE\ Std\ 1003.1-2001
addz tha concept of a session dat is
created via \fIsetsid\fP(). Da \fIsetsid\fP() function also creates
the initial process crew contained up in tha session.
Additionizzle process crews can be pimped via tha \fIsetpgid\fP() function.
A System V
process crew would correspond ta a POSIX System Interfaces session
containin a single POSIX process group. Note dat this
function requires dat tha callin process not be a process group
leader n' shit. Da usual way ta ensure dis is legit is ta create a new
process wit \fIfork\fP() n' have it call \fIsetsid\fP(). Da \fIfork\fP()
function guarantees dat tha process ID of tha freshly smoked up process do not
match any existing
process crew ID.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgetsid\fP(), \fIsetpgid\fP(), \fIsetpgrp\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<sys/types.h>\fP, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
