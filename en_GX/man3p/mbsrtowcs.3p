.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MBSRTOWCS" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mbsrtowcs 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mbsrtowcs \- convert a cold-ass lil characta strang ta a wide-characta string
(restartable)
.SH SYNOPSIS
.LP
\fB#include <wchar.h>
.br
.sp
size_t mbsrtowcs(wchar_t *restrict\fP \fIdst\fP\fB, const char **restrict\fP
\fIsrc\fP\fB,
.br
\ \ \ \ \ \  size_t\fP \fIlen\fP\fB, mbstate_t *restrict\fP \fIps\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fImbsrtowcs\fP() function shall convert a sequence of characters,
beginnin up in tha conversion state busted lyrics bout by the
object pointed ta by \fIps\fP, from tha array indirectly pointed to
by \fIsrc\fP tha fuck into a sequence of correspondin wide
characters. If \fIdst\fP aint a null pointer, tha converted characters
shall be stored tha fuck into tha array pointed ta by \fIdst\fP.
Conversion continues up ta n' includin a terminatin null character,
which shall also be stored. Y'all KNOW dat shit, muthafucka! Conversion shall stop early in
either of tha followin cases:
.IP " *" 3
A sequence of bytes is encountered dat do not form a valid character.
.LP
.IP " *" 3
\fIlen\fP codes done been stored tha fuck into tha array pointed ta by \fIdst\fP
(and \fIdst\fP aint a null pointer).
.LP
.LP
Each conversion shall take place as if by a cold-ass lil call ta tha \fImbrtowc\fP()
function.
.LP
If \fIdst\fP aint a null pointer, tha pointa object pointed to
by \fIsrc\fP shall be assigned either a null pointa (if
conversion stopped cuz of reachin a terminatin null character) or
the address just past tha last characta converted (if any). If
conversion stopped cuz of reachin a terminatin null character, and
if \fIdst\fP aint a null pointer, tha resultin state
busted lyrics bout shall be tha initial conversion state.
.LP
If \fIps\fP be a null pointer, tha \fImbsrtowcs\fP() function shall
use its own internal \fBmbstate_t\fP object, which is
initialized at program start-up ta tha initial conversion state. Otherwise,
the \fBmbstate_t\fP object pointed ta by \fIps\fP
shall be used ta straight-up describe tha current conversion state
of tha associated characta sequence. Da implementation behaves
as if no function defined up in dis volume of IEEE\ Std\ 1003.1-2001
calls \fImbsrtowcs\fP().
.LP
Da behavior of dis function shall be affected by tha \fILC_CTYPE\fP
category of tha current locale.
.SH RETURN VALUE
.LP
If tha input conversion encountas a sequence of bytes dat do not
form a valid character, a encodin error occurs. In this
case, tha \fImbsrtowcs\fP() function stores tha value of tha macro
[EILSEQ] up in \fIerrno\fP n' shall return (\fBsize_t\fP)-1;
the conversion state is undefined. Y'all KNOW dat shit, muthafucka! Otherwise, it shall return the
number of charactas successfully converted, not includin the
terminatin null (if any).
.SH ERRORS
.LP
Da \fImbsrtowcs\fP() function may fail if:
.TP 7
.B EINVAL
\fIps\fP points ta a object dat gotz nuff a invalid conversion state.
.TP 7
.B EILSEQ
Invalid characta sequence is detected.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImbsinit\fP(), \fImbrtowc\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<wchar.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
