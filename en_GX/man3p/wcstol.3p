.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "WCSTOL" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" wcstol 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
wcstol, wcstoll \- convert a wide-characta strang ta a long-ass integer
.SH SYNOPSIS
.LP
\fB#include <wchar.h>
.br
.sp
long wcstol(const wchar_t *restrict\fP \fInptr\fP\fB, wchar_t **restrict\fP
\fIendptr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIbase\fP\fB);
.br
long long wcstoll(const wchar_t *restrict\fP \fInptr\fP\fB,
.br
\ \ \ \ \ \  wchar_t **restrict\fP \fIendptr\fP\fB, int\fP \fIbase\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall convert tha initial portion of tha wide-character
strin pointed ta by \fInptr\fP ta \fBlong\fP, \fBlong
long\fP, \fBunsigned long\fP, n' \fBunsigned long long\fP representation,
respectively. First, they shall decompose tha input
strin tha fuck into three parts:
.IP " 1." 4
An initial, possibly empty, sequence of white-space wide-character
codes (as specified by \fIiswspace\fP())
.LP
.IP " 2." 4
A subject sequence interpreted as a integer represented up in some radix
determined by tha value of \fIbase\fP
.LP
.IP " 3." 4
A final wide-characta strang of one or mo' unrecognized wide-character
codes, includin tha terminatin null wide-character
code of tha input wide-characta string
.LP
.LP
Then they shall attempt ta convert tha subject sequence ta a integer,
and return tha result.
.LP
If \fIbase\fP is 0, tha expected form of tha subject sequence is that
of a thugged-out decimal constant, octal constant, or hexadecimal
constant, any of which may be preceded by a \fB'+'\fP or \fB'-'\fP
sign. I aint talkin' bout chicken n' gravy biatch fo' realz. A decimal constant begins wit a non-zero digit, and
consistz of a sequence of decimal digits fo' realz. An octal constant consists
of tha prefix \fB'0'\fP optionally followed by a sequence
of tha digits \fB'0'\fP ta \fB'7'\fP only fo' realz. A hexadecimal constant
consistz of tha prefix 0x or 0X followed by a sequence of
the decimal digits n' lettas \fB'a'\fP (or \fB'A'\fP ) ta \fB'f'\fP
(or \fB'F'\fP ) wit joints 10 ta 15
respectively.
.LP
If tha value of \fIbase\fP is between 2 n' 36, tha expected form
of tha subject sequence be a sequence of lettas n' digits
representin a integer wit tha radix specified by \fIbase\fP, optionally
preceded by a \fB'+'\fP or \fB'-'\fP sign yo, but
not includin a integer suffix. Da lettas from \fB'a'\fP (or \fB'A'\fP
) ta \fB'z'\fP (or \fB'Z'\fP ) inclusive are
ascribed tha joints 10 ta 35; only lettas whose ascribed joints are
less than dat of \fIbase\fP shall be permitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha value
of \fIbase\fP is 16, tha wide-characta code representationz of 0x
or 0X may optionally precede tha sequence of lettas and
digits, followin tha sign if present.
.LP
Da subject sequence is defined as tha longest initial subsequence
of tha input wide-characta string, startin wit tha first
non-white-space wide-characta code dat iz of tha expected form.
Da subject sequence gotz nuff no wide-characta codes if the
input wide-characta strang is empty or consists entirely of white-space
wide-characta code, or if tha straight-up original gangsta non-white-space
wide-characta code is other than a sign or a permissible letta or
digit.
.LP
If tha subject sequence has tha expected form n' \fIbase\fP is 0,
the sequence of wide-characta codes startin wit tha first
digit shall be interpreted as a integer constant. If tha subject
sequence has tha expected form n' tha value of \fIbase\fP is
between 2 n' 36, it shall be used as tha base fo' conversion, ascribing
to each letta its value as given above. If tha subject
sequence begins wit a minus sign, tha value resultin from tha conversion
shall be negated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A pointa ta tha final wide-character
strin shall be stored up in tha object pointed ta by \fIendptr\fP, provided
that \fIendptr\fP aint a null pointer.
.LP
In other than tha C  or POSIX  locales, other
implementation-defined subject sequences may be accepted.
.LP
If tha subject sequence is empty or aint gots tha expected form,
no conversion shall be performed; tha value of \fInptr\fP
shall be stored up in tha object pointed ta by \fIendptr\fP, provided
that \fIendptr\fP aint a null pointer.
.LP
These functions shall not chizzle tha settin of \fIerrno\fP if successful.
.LP
Since 0, {LONG_MIN} or {LLONG_MIN} n' {LONG_MAX} or {LLONG_MAX} are
returned on error n' is also valid returns on success, an
application wishin ta check fo' error thangs should set \fIerrno\fP
to 0, then call \fIwcstol\fP() or \fIwcstoll\fP(), then
check \fIerrno\fP. 
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha converted
value, if any. If no conversion could be performed, 0
shall be returned  n' \fIerrno\fP may be set ta indicate tha error.
If tha erect value is outside tha range of representable joints,
{LONG_MIN}, {LONG_MAX}, {LLONG_MIN}, or {LLONG_MAX} shall
be returned (accordin ta tha sign of tha value), n' \fIerrno\fP
set ta [ERANGE].
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
.B EINVAL
Da value of \fIbase\fP aint supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.TP 7
.B ERANGE
Da value ta be returned aint representable.
.sp
.LP
These functions may fail if:
.TP 7
.B EINVAL
No
conversion could be performed. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIiswalpha\fP(), \fIscanf\fP(), \fIwcstod\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<wchar.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
