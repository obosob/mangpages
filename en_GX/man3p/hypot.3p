.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "HYPOT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" hypot 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
hypot, hypotf, hypotl \- Euclidean distizzle function
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double hypot(double\fP \fIx\fP\fB, double\fP \fIy\fP\fB);
.br
float hypotf(float\fP \fIx\fP\fB, float\fP \fIy\fP\fB);
.br
long double hypotl(long double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall compute tha value of tha square root of \fIx\fP**2+
\fIy\fP**2 without undue overflow or underflow.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha length
of tha hypotenuse of a right-angled triangle wit sides of
length \fIx\fP n' \fIy\fP.
.LP
If tha erect value would cause overflow, a range error shall occur
and \fIhypot\fP(), \fIhypotf\fP(), n' \fIhypotl\fP()
shall return tha value of tha macro HUGE_VAL, HUGE_VALF, n' HUGE_VALL,
respectively.
.LP
If
\fIx\fP or \fIy\fP is \(+-Inf, +Inf shall be returned (even if one
of \fIx\fP or \fIy\fP is NaN).
.LP
If \fIx\fP or \fIy\fP is NaN, n' tha other aint \(+-Inf, a NaN
shall be returned.
.LP
If both arguments is subnormal n' tha erect result is subnormal,
a range error may occur n' tha erect result is returned.
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Range\ Error
Da result overflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.sp
.LP
These functions may fail if:
.TP 7
Range\ Error
Da result underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
\fIhypot\fP(\fIx\fP,\fIy\fP), \fIhypot\fP(\fIy\fP,\fIx\fP), n' \fIhypot\fP(\fIx\fP,
-\fIy\fP) is equivalent.
.LP
\fIhypot\fP(\fIx\fP, \(+-0) is equivalent ta \fIfabs\fP(\fIx\fP).
.LP
Underflow only happens when both \fIx\fP n' \fIy\fP is subnormal
and tha (inexact) result be also subnormal.
.LP
These functions take precautions against overflow durin intermediate
stepz of tha computation.
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(), \fIsqrt\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
