.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SIGSUSPEND" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sigsuspend 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sigsuspend \- wait fo' a signal
.SH SYNOPSIS
.LP
\fB#include <signal.h>
.br
.sp
int sigsuspend(const sigset_t *\fP\fIsigmask\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsigsuspend\fP() function shall replace tha current signal mask
of tha callin thread wit tha set of signals pointed to
by \fIsigmask\fP n' then suspend tha thread until delivery of a signal
whose action is either ta execute a signal-catching
function or ta terminizzle tha process. This shall not cause any other
signals dat may done been pendin on tha process ta become
pendin on tha thread.
.LP
If tha action is ta terminizzle tha process then \fIsigsuspend\fP()
shall never return, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. If tha action is ta execute a
signal-catchin function, then \fIsigsuspend\fP() shall return after
the signal-catchin function returns, wit tha signal mask
restored ta tha set dat existed prior ta tha \fIsigsuspend\fP() call.
.LP
It aint possible ta block signals dat cannot be ignored. Y'all KNOW dat shit, muthafucka! This is
enforced by tha system without causin a error ta be
indicated.
.SH RETURN VALUE
.LP
Since \fIsigsuspend\fP() suspendz thread execution indefinitely, there
is no successful completion return value. If a return
occurs, -1 shall be returned n' \fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIsigsuspend\fP() function shall fail if:
.TP 7
.B EINTR
A signal is caught by tha callin process n' control is returned
from tha signal-catchin function.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Normally, all up in tha beginnin of a cold-ass lil critical code section, a specified
set of signals is blocked rockin tha \fIsigprocmask\fP() function.
When tha thread has completed tha critical section n' needz to
wait fo' tha previously blocked signal(s), it pauses by callin \fIsigsuspend\fP()
with tha mask dat was returned by tha \fIsigprocmask\fP() call.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fISignal Concepts\fP, \fIpause\fP(), \fIsigaction\fP(), \fIsigaddset\fP(),
\fIsigdelset\fP(), \fIsigemptyset\fP(), \fIsigfillset\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<signal.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
