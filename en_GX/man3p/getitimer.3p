.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETITIMER" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getitimer 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getitimer, setitimer \- git n' set value of interval timer
.SH SYNOPSIS
.LP
\fB#include <sys/time.h>
.br
.sp
int getitimer(int\fP \fIwhich\fP\fB, struct itimerval *\fP\fIvalue\fP\fB);
.br
int setitimer(int\fP \fIwhich\fP\fB, const struct itimerval *restrict\fP
\fIvalue\fP\fB,
.br
\ \ \ \ \ \  struct itimerval *restrict\fP \fIovalue\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgetitimer\fP() function shall store tha current value of the
timer specified by \fIwhich\fP tha fuck into tha structure pointed
to by \fIvalue\fP. Da \fIsetitimer\fP() function shall set tha timer
specified by \fIwhich\fP ta tha value specified up in the
structure pointed ta by \fIvalue\fP, n' if \fIovalue\fP aint a
null pointer, store tha previous value of tha timer up in the
structure pointed ta by \fIovalue\fP.
.LP
A timer value is defined by tha \fBitimerval\fP structure, specified
in \fI<sys/time.h>\fP. If \fIit_value\fP is non-zero, it shall indicate
the time ta tha next
timer expiration. I aint talkin' bout chicken n' gravy biatch. If \fIit_interval\fP is non-zero, it shall specify
a value ta be used up in reloadin \fIit_value\fP when the
timer expires. Right back up in yo muthafuckin ass. Settin \fIit_value\fP ta 0 shall disable a timer,
regardless of tha value of \fIit_interval\fP. Right back up in yo muthafuckin ass. Setting
\fIit_interval\fP ta 0 shall disable a timer afta its next expiration
(assumin \fIit_value\fP is non-zero).
.LP
Implementations may place limitations on tha granularitizzle of timer
values. For each interval timer, if tha axed timer value
requires a gangbangin' finer granularitizzle than tha implementation supports, the
actual timer value shall be rounded up ta tha next supported
value.
.LP
An XSI-conformin implementation serves up each process wit at least
three interval timers, which is indicated by the
\fIwhich\fP argument:
.TP 7
ITIMER_REAL
Decrements up in real time fo' realz. A SIGALRM signal is served up when dis timer
expires.
.TP 7
ITIMER_VIRTUAL
Decrements up in process virtual time. Well shiiiit, it runs only when tha process
is executin fo' realz. A SIGVTALRM signal is served up when it
expires.
.TP 7
ITIMER_PROF
Decrements both up in process virtual time n' when tha system is hustlin
on behalf of tha process. Well shiiiit, it is designed ta be used by
interpretas up in statistically profilin tha execution of interpreted
programs. Each time tha ITIMER_PROF timer expires, tha SIGPROF
signal is delivered.
.sp
.LP
Da interaction between \fIsetitimer\fP() n' any of \fIalarm\fP(),
\fIsleep\fP(), or \fIusleep\fP() is unspecified.
.SH RETURN VALUE
.LP
Upon successful completion, \fIgetitimer\fP() or \fIsetitimer\fP()
shall return 0; otherwise, -1 shall be returned and
\fIerrno\fP set ta indicate tha error.
.SH ERRORS
.LP
Da \fIsetitimer\fP() function shall fail if:
.TP 7
.B EINVAL
Da \fIvalue\fP argument aint up in canonical form. (In canonical form,
the number of microsecondz be a non-negatizzle integer
less than 1000000 n' tha number of secondz be a non-negatizzle integer.)
.sp
.LP
Da \fIgetitimer\fP() n' \fIsetitimer\fP() functions may fail if:
.TP 7
.B EINVAL
Da \fIwhich\fP argument aint recognized.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIalarm\fP(), \fIsleep\fP(), \fItimer_getoverrun\fP(), \fIualarm\fP(),
\fIusleep\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<signal.h>\fP, \fI<sys/time.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
