.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SEM_TRYWAIT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sem_trywait 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sem_trywait, sem_wait \- lock a semaphore (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <semaphore.h>
.br
.sp
int sem_trywait(sem_t *\fP\fIsem\fP\fB);
.br
int sem_wait(sem_t *\fP\fIsem\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsem_trywait\fP() function shall lock tha semaphore referenced
by \fIsem\fP only if tha semaphore is currently not
locked; dat is, if tha semaphore value is currently positive. Otherwise,
it shall not lock tha semaphore.
.LP
Da \fIsem_wait\fP() function shall lock tha semaphore referenced
by \fIsem\fP by struttin a semaphore lock operation on
that semaphore. If tha semaphore value is currently zero, then the
callin thread shall not return from tha call to
\fIsem_wait\fP() until it either locks tha semaphore or tha call is
interrupted by a signal.
.LP
Upon successful return, tha state of tha semaphore shall be locked
and shall remain locked until tha \fIsem_post\fP() function is executed
and returns successfully.
.LP
Da \fIsem_wait\fP() function is interruptible by tha delivery of
a signal.
.SH RETURN VALUE
.LP
Da \fIsem_trywait\fP() n' \fIsem_wait\fP() functions shall return
zero if tha callin process successfully performed the
semaphore lock operation on tha semaphore designated by \fIsem\fP.
If tha call was unsuccessful, tha state of tha semaphore shall
be unchanged, n' tha function shall return a value of -1 n' set
\fIerrno\fP ta indicate tha error.
.SH ERRORS
.LP
Da \fIsem_trywait\fP() n' \fIsem_wait\fP() functions shall fail
if:
.TP 7
.B EAGAIN
Da semaphore was already locked, so it cannot be immediately locked
by tha \fIsem_trywait\fP() operation (
\fIsem_trywait\fP() only).
.TP 7
.B EINVAL
Da \fIsem\fP argument do not refer ta a valid semaphore.
.sp
.LP
Da \fIsem_trywait\fP() n' \fIsem_wait\fP() functions may fail if:
.TP 7
.B EDEADLK
A deadlock condizzle was detected.
.TP 7
.B EINTR
A signal interrupted dis function.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Applications rockin these functions may be subject ta prioritizzle inversion,
as discussed up in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 3.285, Prioritizzle Inversion.
.LP
Da \fIsem_trywait\fP() n' \fIsem_wait\fP() functions is part of
the Semaphores option n' need not be provided on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsemctl\fP(), \fIsemget\fP(), \fIsemop\fP(),
\fIsem_post\fP(), \fIsem_timedwait\fP(), tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<semaphore.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
