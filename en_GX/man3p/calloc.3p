.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CALLOC" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" calloc 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
calloc \- a memory allocator
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
void *calloc(size_t\fP \fInelem\fP\fB, size_t\fP \fIelsize\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIcalloc\fP() function shall allocate unused space fo' a array
of \fInelem\fP elements each of whose size up in bytes is
\fIelsize\fP. Da space shall be initialized ta all bits 0.
.LP
Da order n' contiguitizzle of storage allocated by successive calls
to \fIcalloc\fP() is unspecified. Y'all KNOW dat shit, muthafucka! Da pointa returned if the
allocation succeedz shall be suitably aligned so dat it may be assigned
to a pointa ta any type of object n' then used ta access
such a object or a array of such objects up in tha space allocated
(until tha space is explicitly freed or reallocated). Each such
allocation shall yield a pointa ta a object disjoint from any other
object. Da pointa returned shall point ta tha start (lowest
byte address) of tha allocated space. If tha space cannot be allocated,
a null pointa shall be returned. Y'all KNOW dat shit, muthafucka! If tha size of tha space
axed is 0, tha behavior is implementation-defined: tha value
returned shall be either a null pointa or a unique pointer.
.SH RETURN VALUE
.LP
Upon successful completion wit both \fInelem\fP n' \fIelsize\fP
non-zero, \fIcalloc\fP() shall return a pointa ta the
allocated space. If either \fInelem\fP or \fIelsize\fP is 0, then
either a null pointa or a unique pointa value dat can be
successfully passed ta \fIfree\fP() shall be returned. Y'all KNOW dat shit, muthafucka! Otherwise,
it shall return a null
pointa  n' set \fIerrno\fP ta indicate tha error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIcalloc\fP() function shall fail if:
.TP 7
.B ENOMEM
Insufficient memory be available. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
There is now no requirement fo' tha implementation ta support the
inclusion of \fI<malloc.h>\fP.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfree\fP(), \fImalloc\fP(), \fIrealloc\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
