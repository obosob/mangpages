.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "WCTOMB" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" wctomb 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
wctomb \- convert a wide-characta code ta a cold-ass lil character
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
int wctomb(char *\fP\fIs\fP\fB, wchar_t\fP \fIwchar\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIwctomb\fP() function shall determine tha number of bytes needed
to represent tha characta correspondin ta the
wide-characta code whose value is \fIwchar\fP (includin any chizzle
in tha shift state). Well shiiiit, it shall store tha character
representation (possibly multiple bytes n' any special bytes ta chizzle
shift state) up in tha array object pointed ta by \fIs\fP (if
\fIs\fP aint a null pointer) fo' realz. At most {MB_CUR_MAX} bytes shall be
stored. Y'all KNOW dat shit, muthafucka! If \fIwchar\fP is 0, a null byte shall be stored,
preceded by any shift sequence needed ta restore tha initial shift
state, n' \fIwctomb\fP() shall be left up in tha initial shift
state.
.LP
The
behavior of dis function be affected by tha \fILC_CTYPE\fP category
of tha current locale. For a state-dependent encoding, this
function shall be placed tha fuck into its initial state by a cold-ass lil call fo' which
its characta pointa argument, \fIs\fP, be a null pointer.
Subsequent calls wit \fIs\fP as other than a null pointa shall cause
the internal state of tha function ta be altered as
necessary fo' realz. A call wit \fIs\fP as a null pointa shall cause this
function ta return a non-zero value if encodings have state
dependency, n' 0 otherwise. Changin tha \fILC_CTYPE\fP category
causes tha shift state of dis function ta be unspecified.
.LP
Da \fIwctomb\fP() function need not be reentrant fo' realz. A function that
is not required ta be reentrant aint required ta be
thread-safe. 
.LP
Da implementation shall behave as if no function defined up in this
volume of IEEE\ Std\ 1003.1-2001 calls
\fIwctomb\fP().
.SH RETURN VALUE
.LP
If \fIs\fP be a null pointer, \fIwctomb\fP() shall return a non-zero
or 0 value, if characta encodings, respectively, do or
do not have state-dependent encodings. If \fIs\fP aint a null pointer,
\fIwctomb\fP() shall return -1 if tha value of
\fIwchar\fP do not correspond ta a valid character, or return the
number of bytes dat constitute tha characta correspondin to
the value of \fIwchar\fP.
.LP
In no case shall tha value returned be pimped outa than tha value of the
{MB_CUR_MAX} macro.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImblen\fP(), \fImbtowc\fP(), \fImbstowcs\fP(), \fIwcstombs\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
