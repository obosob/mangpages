.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "REALPATH" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" realpath 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
realpath \- resolve a pathname
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
char *realpath(const char *restrict\fP \fIfile_name\fP\fB,
.br
\ \ \ \ \ \  char *restrict\fP \fIresolved_name\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIrealpath\fP() function shall derive, from tha pathname pointed
to by \fIfile_name\fP, a absolute pathname dat names
the same file, whose resolution do not involve \fB'.'\fP, \fB'..'\fP,
or symbolic links. Da generated pathname shall be
stored as a null-terminated string, up ta a maximum of {PATH_MAX}
bytes, up in tha buffer pointed ta by \fIresolved_name\fP.
.LP
If \fIresolved_name\fP be a null pointer, tha behavior of \fIrealpath\fP()
is implementation-defined.
.SH RETURN VALUE
.LP
Upon successful completion, \fIrealpath\fP() shall return a pointer
to tha resolved name. Otherwise, \fIrealpath\fP() shall
return a null pointa n' set \fIerrno\fP ta indicate tha error, and
the contentz of tha buffer pointed ta by \fIresolved_name\fP
are undefined.
.SH ERRORS
.LP
Da \fIrealpath\fP() function shall fail if:
.TP 7
.B EACCES
Read or search permission was denied fo' a cold-ass lil component of \fIfile_name\fP.
.TP 7
.B EINVAL
Da \fIfile_name\fP argument be a null pointer.
.TP 7
.B EIO
An error occurred while readin from tha file system.
.TP 7
.B ELOOP
A loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Da length of tha \fIfile_name\fP argument exceedz {PATH_MAX} or a
pathname component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIfile_name\fP do not name a existin file or \fIfile_name\fP
points ta a empty string.
.TP 7
.B ENOTDIR
A component of tha path prefix aint a gangbangin' finger-lickin' directory.
.sp
.LP
Da \fIrealpath\fP() function may fail if:
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}.
.TP 7
.B ENOMEM
Insufficient storage space be available.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Generatin a Absolute Pathname
.LP
Da followin example generates a absolute pathname fo' tha file
identified by tha \fIsymlinkpath\fP argument. Da generated
pathname is stored up in tha \fIactualpath\fP array.
.sp
.RS
.nf

\fB#include <stdlib.h>
\&...
char *symlinkpath = "/tmp/symlink/file";
char actualpath [PATH_MAX+1];
char *ptr;
.sp

ptr = realpath(symlinkpath, actualpath);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Since tha maximum pathname length be arbitrary unless {PATH_MAX} is
defined, a application generally cannot supply a
\fIresolved_name\fP buffer wit size {{PATH_MAX}+1}.
.SH FUTURE DIRECTIONS
.LP
In tha future, passin a null pointa ta \fIrealpath\fP() fo' the
\fIresolved_name\fP argument may be defined ta have
\fIrealpath\fP() allocate space fo' tha generated pathname.
.SH SEE ALSO
.LP
\fIgetcwd\fP(), \fIsysconf\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
