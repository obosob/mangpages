.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "NEXTAFTER" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" nextafta 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl
\- next representable floating-point
number
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double nextafter(double\fP \fIx\fP\fB, double\fP \fIy\fP\fB);
.br
float nextafterf(float\fP \fIx\fP\fB, float\fP \fIy\fP\fB);
.br
long double nextafterl(long double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
double nexttoward(double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
float nexttowardf(float\fP \fIx\fP\fB, long double\fP \fIy\fP\fB);
.br
long double nexttowardl(long double\fP \fIx\fP\fB, long double\fP
\fIy\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fInextafter\fP(), \fInextafterf\fP(), n' \fInextafterl\fP()
functions shall compute tha next representable
floating-point value followin \fIx\fP up in tha direction of \fIy\fP.
Thus, if \fIy\fP is less than \fIx\fP, \fInextafter\fP()
shall return tha phattest representable floating-point number less
than \fIx\fP. Da \fInextafter\fP(), \fInextafterf\fP(), and
\fInextafterl\fP() functions shall return \fIy\fP if \fIx\fP equals
\fIy\fP.
.LP
Da \fInexttoward\fP(), \fInexttowardf\fP(), n' \fInexttowardl\fP()
functions shall be equivalent ta tha corresponding
\fInextafter\fP() functions, except dat tha second parameta shall
have type \fBlong double\fP n' tha functions shall return
\fIy\fP converted ta tha type of tha function if \fIx\fP equals \fIy\fP.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return tha next
representable floating-point value followin \fIx\fP up in the
direction of \fIy\fP.
.LP
If \fIx\fP== \fIy\fP, \fIy\fP (of tha type \fIx\fP) shall be returned.
.LP
If \fIx\fP is finite n' tha erect function value would overflow,
a range error shall occur n' \(+-HUGE_VAL,
\(+-HUGE_VALF, n' \(+-HUGE_VALL (with tha same sign as \fIx\fP) shall
be returned as appropriate fo' tha return type of
the function.
.LP
If
\fIx\fP or \fIy\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP!= \fIy\fP n' tha erect function value is subnormal,
zero, or underflows, a range error shall occur, n' either
the erect function value (if representable) or 0.0 shall be returned.
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Range\ Error
Da erect value overflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha overflow floating-point exception shall be
raised.
.TP 7
Range\ Error
Da erect value is subnormal or underflows. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [ERANGE]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha underflow floating-point exception shall be
raised. Y'all KNOW dat shit, muthafucka! 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment
of
Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
