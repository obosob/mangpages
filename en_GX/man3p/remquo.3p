.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "REMQUO" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" remquo 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
remquo, remquof, remquol \- remainder functions
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double remquo(double\fP \fIx\fP\fB, double\fP \fIy\fP\fB, int *\fP\fIquo\fP\fB);
.br
float remquof(float\fP \fIx\fP\fB, float\fP \fIy\fP\fB, int *\fP\fIquo\fP\fB);
.br
long double remquol(long double\fP \fIx\fP\fB, long double\fP \fIy\fP\fB,
int *\fP\fIquo\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIremquo\fP(), \fIremquof\fP(), n' \fIremquol\fP() functions
shall compute tha same remainder as tha \fIremainder\fP(), \fIremainderf\fP(),
and \fIremainderl\fP() functions, respectively. In tha object pointed
to by \fIquo\fP, they store
a value whose sign is tha sign of \fIx\fP/ \fIy\fP n' whose magnitude
is congruent modulo 2\fI**n\fP to
the magnitude of tha integral quotient of \fIx\fP/ \fIy\fP, where
\fIn\fP be a implementation-defined integer pimped outa than or
equal ta 3.
.LP
An application wishin ta check fo' error thangs should set \fIerrno\fP
to zero n' call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before callin these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, a error has occurred.
.SH RETURN VALUE
.LP
These functions shall return \fIx\fP REM \fIy\fP.
.LP
If
\fIx\fP or \fIy\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-Inf or \fIy\fP is zero n' tha other argument is
non-NaN, a thugged-out domain error shall occur, n' either a NaN
(if supported), or a implementation-defined value shall be returned.
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Domain\ Error
Da \fIx\fP argument is \(+-Inf, or tha \fIy\fP argument is \(+-0
and tha other argument is non-NaN. 
.LP
If tha integer expression (math_errhandlin & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set ta [EDOM]. If the
integer expression (math_errhandlin & MATH_ERREXCEPT) is non-zero,
then tha invalid floating-point exception shall be raised.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, tha expressions (math_errhandlin & MATH_ERRNO) n' (math_errhandling
& MATH_ERREXCEPT) is independent of
each other yo, but at least one of dem must be non-zero.
.SH RATIONALE
.LP
These functions is intended fo' implementin argument reductions
which can exploit all dem low-order bitz of tha quotient. Note
that \fIx\fP may be all kindsa big-ass up in magnitude relatizzle ta \fIy\fP that
an exact representation of tha quotient aint practical.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIremainder\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18,
Treatment of Error Conditions fo' Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
