.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "MBSINIT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" mbsinit 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
mbsinit \- determine conversion object status
.SH SYNOPSIS
.LP
\fB#include <wchar.h>
.br
.sp
int mbsinit(const mbstate_t *\fP\fIps\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
If \fIps\fP aint a null pointer, tha \fImbsinit\fP() function shall
determine whether tha object pointed ta by \fIps\fP
raps bout a initial conversion state.
.SH RETURN VALUE
.LP
Da \fImbsinit\fP() function shall return non-zero if \fIps\fP is
a null pointer, or if tha pointed-to object raps bout an
initial conversion state; otherwise, it shall return zero.
.LP
If a \fBmbstate_t\fP object be altered by any of tha functions busted lyrics about
as "restartable", n' is then used wit a gangbangin' finger-lickin' different
characta sequence, or up in tha other conversion direction, or with
a different \fILC_CTYPE\fP category settin than on earlier
function calls, tha behavior is undefined.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fBmbstate_t\fP object is used ta describe tha current conversion
state from a particular characta sequence ta a
wide-characta sequence (or \fIvice versa\fP) under tha rulez of a
particular settin of tha \fILC_CTYPE\fP category of the
current locale.
.LP
Da initial conversion state corresponds, fo' a cold-ass lil conversion up in either
direction, ta tha beginnin of a freshly smoked up characta sequence in
the initial shift state fo' realz. A zero valued \fBmbstate_t\fP object be at
least one way ta describe a initial conversion state fo' realz. A zero
valued \fBmbstate_t\fP object can be used ta initiate conversion involving
any characta sequence, up in any \fILC_CTYPE\fP category
setting.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImbrlen\fP(), \fImbrtowc\fP(), \fIwcrtomb\fP(), \fImbsrtowcs\fP(),
\fIwcsrtombs\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<wchar.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
