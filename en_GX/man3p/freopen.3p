.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FREOPEN" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" freopen 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
freopen \- open a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
FILE *freopen(const char *restrict\fP \fIfilename\fP\fB, const char
*restrict\fP \fImode\fP\fB,
.br
\ \ \ \ \ \  FILE *restrict\fP \fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIfreopen\fP() function shall first attempt ta flush tha stream
and close any file descriptor associated with
\fIstream\fP. Failure ta flush or close tha file descriptor successfully
shall be ignored. Y'all KNOW dat shit, muthafucka! Da error n' end-of-file indicators
for tha stream shall be cleared.
.LP
Da \fIfreopen\fP() function shall open tha file whose pathname is
the strang pointed ta by \fIfilename\fP n' associate the
stream pointed ta by \fIstream\fP wit dat shit. Da \fImode\fP argument
shall be used just as up in \fIfopen\fP().
.LP
Da original gangsta stream shall be closed regardless of whether tha subsequent
open succeeds.
.LP
If \fIfilename\fP be a null pointer, tha \fIfreopen\fP() function
shall attempt ta chizzle tha mode of tha stream ta that
specified by \fImode\fP, as if tha name of tha file currently associated
with tha stream had been used. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is
implementation-defined which chizzlez of mode is permitted (if any),
and under what tha fuck circumstances.
.LP
Afta a successful call ta tha \fIfreopen\fP() function, tha orientation
of tha stream shall be cleared,  tha encoding
rule shall be cleared,  n' tha associated \fBmbstate_t\fP object
shall be set ta describe a initial conversion state.
.LP
The
largest value dat can be represented erectly up in a object of type
\fBoff_t\fP shall be established as tha offset maximum up in the
open file description. I aint talkin' bout chicken n' gravy biatch. 
.SH RETURN VALUE
.LP
Upon successful completion, \fIfreopen\fP() shall return tha value
of \fIstream\fP. Otherwise, a null pointa shall be
returned,  n' \fIerrno\fP shall be set ta indicate tha error.
.SH ERRORS
.LP
Da \fIfreopen\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied on a cold-ass lil component of tha path prefix, or
the file exists n' tha permissions specified by \fImode\fP are
denied, or tha file do not exist n' write permission is denied
for tha parent directory of tha file ta be pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 
.TP 7
.B EINTR
A
signal was caught durin \fIfreopen\fP(). 
.TP 7
.B EISDIR
Da named file be a gangbangin' finger-lickin' directory n' \fImode\fP requires write access.
.TP 7
.B ELOOP
A
loop exists up in symbolic links encountered durin resolution of the
\fIpath\fP argument. 
.TP 7
.B EMFILE
{OPEN_MAX} file descriptors is currently open up in tha callin process.
.TP 7
.B ENAMETOOLONG
.sp
Da length of tha \fIfilename\fP argument exceedz {PATH_MAX} or a
pathname component is longer than {NAME_MAX}. 
.TP 7
.B ENFILE
Da maximum allowable number of filez is currently open up in tha system.
.TP 7
.B ENOENT
A
component of \fIfilename\fP do not name a existin file or \fIfilename\fP
is a empty string. 
.TP 7
.B ENOSPC
Da directory or file system dat would contain tha freshly smoked up file cannot
be expanded, tha file do not exist, n' dat shiznit was ta be pimped.
.TP 7
.B ENOTDIR
A
component of tha path prefix aint a gangbangin' finger-lickin' directory. 
.TP 7
.B ENXIO
Da named file be a cold-ass lil characta special or block special file, n' the
device associated wit dis special file do not exist. 
.TP 7
.B EOVERFLOW
Da named file be a regular file n' tha size of tha file cannot be
represented erectly up in a object of type \fBoff_t\fP. 
.TP 7
.B EROFS
Da named file resides on a read-only file system n' \fImode\fP requires
write access. 
.sp
.LP
Da \fIfreopen\fP() function may fail if:
.TP 7
.B EINVAL
Da value of tha \fImode\fP argument aint valid. Y'all KNOW dat shit, muthafucka! 
.TP 7
.B ELOOP
Mo' than {SYMLOOP_MAX} symbolic links was encountered durin resolution
of tha \fIpath\fP argument. 
.TP 7
.B ENAMETOOLONG
.sp
Pathname resolution of a symbolic link produced a intermediate result
whose length exceedz {PATH_MAX}. 
.TP 7
.B ENOMEM
Insufficient storage space be available. 
.TP 7
.B ENXIO
A
request was made of a nonexistent device, or tha request was outside
the capabilitizzlez of tha device. 
.TP 7
.B ETXTBSY
Da file be a pure procedure (shared text) file dat is bein executed
and \fImode\fP requires write access. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Directin Standard Output ta a File
.LP
Da followin example logs all standard output ta tha \fB/tmp/logfile\fP
file.
.sp
.RS
.nf

\fB#include <stdio.h>
\&...
FILE *fp;
\&...
fp = freopen ("/tmp/logfile", "a+", stdout);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da \fIfreopen\fP() function is typically used ta attach tha preopened
\fIstreams\fP associated wit \fIstdin\fP,
\fIstdout\fP, n' \fIstderr\fP ta other files.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfclose\fP(), \fIfopen\fP(), \fIfdopen\fP(),
\fImbsinit\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<stdio.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
