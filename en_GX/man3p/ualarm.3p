.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "UALARM" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ualarm 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ualarm \- set tha interval timer
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
useconds_t ualarm(useconds_t\fP \fIuseconds\fP\fB, useconds_t\fP \fIinterval\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIualarm\fP() function shall cause tha SIGALRM signal ta be generated
for tha callin process afta tha number of realtime
microsecondz specified by tha \fIuseconds\fP argument has elapsed.
When tha \fIinterval\fP argument is non-zero, repeated timeout
notification occurs wit a period up in microsecondz specified by the
\fIinterval\fP argument. If tha notification signal, SIGALRM,
is not caught or ignored, tha callin process is terminated.
.LP
Implementations may place limitations on tha granularitizzle of timer
values. For each interval timer, if tha axed timer value
requires a gangbangin' finer granularitizzle than tha implementation supports, the
actual timer value shall be rounded up ta tha next supported
value.
.LP
Interactions between \fIualarm\fP() n' any of tha followin is unspecified:
.sp
.RS
.nf

\fIalarm\fP()
\fInanosleep\fP()
\fIsetitimer\fP()
\fItimer_create\fP()
\fItimer_delete\fP()
\fItimer_getoverrun\fP()
\fItimer_gettime\fP()
\fItimer_settime\fP()
\fIsleep\fP()
.fi
.RE
.SH RETURN VALUE
.LP
Da \fIualarm\fP() function shall return tha number of microseconds
remainin from tha previous \fIualarm\fP() call. If no
timeouts is pendin or if \fIualarm\fP() has not previously been
called, \fIualarm\fP() shall return 0.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Applications is recommended ta use \fInanosleep\fP() if tha Timers
option is
supported, or \fIsetitimer\fP(), \fItimer_create\fP(), \fItimer_delete\fP(),
\fItimer_getoverrun\fP(), \fItimer_gettime\fP(), or \fItimer_settime\fP()
instead of dis function.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIalarm\fP(), \fInanosleep\fP(), \fIsetitimer\fP(), \fIsleep\fP(),
\fItimer_create\fP(), \fItimer_delete\fP(), \fItimer_getoverrun\fP(),
the Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
