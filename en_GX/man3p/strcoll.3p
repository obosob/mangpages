.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "STRCOLL" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" strcoll 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
strcoll \- strang comparison rockin collatin shiznit
.SH SYNOPSIS
.LP
\fB#include <string.h>
.br
.sp
int strcoll(const char *\fP\fIs1\fP\fB, const char *\fP\fIs2\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIstrcoll\fP() function shall compare tha strang pointed ta by
\fIs1\fP ta tha strang pointed ta by \fIs2\fP, both
interpreted as appropriate ta tha \fILC_COLLATE\fP category of the
current locale.
.LP
The
\fIstrcoll\fP() function shall not chizzle tha settin of \fIerrno\fP
if successful.
.LP
Since no return value is reserved ta indicate a error, a application
wishin ta check fo' error thangs should set
\fIerrno\fP ta 0, then call \fIstrcoll\fP(), then check \fIerrno\fP.
.SH RETURN VALUE
.LP
Upon successful completion, \fIstrcoll\fP() shall return a integer
greata than, equal to, or less than 0, accordin to
whether tha strang pointed ta by \fIs1\fP is pimped outa than, equal to,
or less than tha strang pointed ta by \fIs2\fP when both are
interpreted as appropriate ta tha current locale.  On error, \fIstrcoll\fP()
may set \fIerrno\fP yo, but no return
value is reserved ta indicate a error. Shiiit, dis aint no joke. 
.SH ERRORS
.LP
Da \fIstrcoll\fP() function may fail if:
.TP 7
.B EINVAL
Da \fIs1\fP or \fIs2\fP arguments contain charactas outside the
domain of tha collatin sequence. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Comparin Nodes
.LP
Da followin example uses a application-defined function, \fInode_compare\fP(),
to compare two nodes based on a alphabetical
orderin of tha \fIstring\fP field.
.sp
.RS
.nf

\fB#include <string.h>
\&...
struct node { /* These is stored up in tha table. */
    char *string;
    int length;
};
\&...
int node_compare(const void *node1, const void *node2)
{
    return strcoll(((const struct node *)node1)->string,
        ((const struct node *)node2)->string);
}
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
Da \fIstrxfrm\fP() n' \fIstrcmp\fP()
functions should be used fo' sortin big-ass lists.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIstrcmp\fP(), \fIstrxfrm\fP(), tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<string.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
