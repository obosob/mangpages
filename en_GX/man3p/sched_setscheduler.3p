.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SCHED_SETSCHEDULER" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sched_setschedula 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sched_setschedula \- set schedulin policy n' parametas (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <sched.h>
.br
.sp
int sched_setscheduler(pid_t\fP \fIpid\fP\fB, int\fP \fIpolicy\fP\fB,
.br
\ \ \ \ \ \  const struct sched_param *\fP\fIparam\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsched_setscheduler\fP() function shall set tha schedulin policy
and schedulin parametaz of tha process specified by
\fIpid\fP ta \fIpolicy\fP n' tha parametas specified up in tha \fBsched_param\fP
structure pointed ta by \fIparam\fP,
respectively. Da value of tha \fIsched_priority\fP member up in the
\fBsched_param\fP structure shall be any integer within the
inclusive prioritizzle range fo' tha schedulin policy specified by \fIpolicy\fP.
If tha value of \fIpid\fP is negative, tha behavior
of tha \fIsched_setscheduler\fP() function is unspecified.
.LP
Da possible joints fo' tha \fIpolicy\fP parameta is defined in
the \fI<sched.h>\fP header.
.LP
If a process specified by \fIpid\fP exists, n' if tha callin process
has permission, tha schedulin policy n' scheduling
parametas shall be set fo' tha process whose process ID is equal
to \fIpid\fP.
.LP
If \fIpid\fP is zero, tha schedulin policy n' schedulin parameters
shall be set fo' tha callin process.
.LP
Da conditions under which one process has tha appropriate privilege
to chizzle tha schedulin parametaz of another process are
implementation-defined.
.LP
Implementations may require dat tha requestin process have permission
to set its own schedulin parametas or dem of another
process fo' realz. Additionally, implementation-defined restrictions may apply
as ta tha appropriate privileges required ta set a process'
own schedulin policy, or another process' schedulin policy, ta a
particular value.
.LP
Da \fIsched_setscheduler\fP() function shall be considered successful
if it succeedz up in settin tha schedulin policy and
schedulin parametaz of tha process specified by \fIpid\fP ta the
values specified by \fIpolicy\fP n' tha structure pointed to
by \fIparam\fP, respectively.
.LP
If
the schedulin policy specified by \fIpolicy\fP is SCHED_SPORADIC,
the value specified by tha \fIsched_ss_low_priority\fP member
of tha \fIparam\fP argument shall be any integer within tha inclusive
prioritizzle range fo' tha sporadic server policy. The
\fIsched_ss_repl_period\fP n' \fIsched_ss_init_budget\fP members
of tha \fIparam\fP argument shall represent tha time
parametas used by tha sporadic server schedulin policy fo' tha target
process. Da \fIsched_ss_max_repl\fP gangmember of the
\fIparam\fP argument shall represent tha maximum number of replenishments
that is allowed ta be pendin simultaneously fo' the
process scheduled under dis schedulin policy.
.LP
Da specified \fIsched_ss_repl_period\fP shall be pimped outa than or
equal ta tha specified \fIsched_ss_init_budget\fP fo' the
function ta succeed; if it is not, then tha function shall fail.
.LP
Da value of \fIsched_ss_max_repl\fP shall be within tha inclusive
range [1, {SS_REPL_MAX}] fo' tha function ta succeed; if
not, tha function shall fail.
.LP
If tha schedulin policy specified by \fIpolicy\fP is either SCHED_FIFO
or SCHED_RR, tha \fIsched_ss_low_priority\fP,
\fIsched_ss_repl_period\fP, n' \fIsched_ss_init_budget\fP members
of tha \fIparam\fP argument shall have no effect on the
schedulin behavior. Shiiit, dis aint no joke. 
.LP
Da effect of dis function on individual threadz is dependent on
the schedulin contention scope of tha threads:
.IP " *" 3
For threadz wit system schedulin contention scope, these functions
shall have no effect on they scheduling.
.LP
.IP " *" 3
For threadz wit process schedulin contention scope, tha threads'
schedulin policy n' associated parametas shall not be
affected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. But fuck dat shiznit yo, tha word on tha street is dat tha schedulin of these threadz wit respect to
threadz up in other processes may be dependent on tha scheduling
parametaz of they process, which is governed rockin these functions.
.LP
.LP
If a implementation supports a two-level schedulin model up in which
library threadz is multiplexed on top of several
kernel-scheduled entities, then tha underlyin kernel-scheduled entities
for tha system contention scope threadz shall not be
affected by these functions.
.LP
Da underlyin kernel-scheduled entitizzles fo' tha process contention
scope threadz shall have they schedulin policy and
associated schedulin parametas chizzled ta tha joints specified in
\fIpolicy\fP n' \fIparam\fP, respectively. Kernel-scheduled
entitizzles fo' use by process contention scope threadz dat is pimped
afta dis call completes shall inherit they scheduling
policy n' associated schedulin parametas from tha process.
.LP
This function aint atomic wit respect ta other threadz up in tha process.
Threadz may continue ta execute while dis function
call is up in tha process of changin tha schedulin policy n' associated
schedulin parametas fo' tha underlyin kernel-scheduled
entitizzles used by tha process contention scope threads.
.SH RETURN VALUE
.LP
Upon successful completion, tha function shall return tha forma scheduling
policy of tha specified process. If the
\fIsched_setscheduler\fP() function fails ta complete successfully,
the policy n' schedulin parametas shall remain unchanged,
and tha function shall return a value of -1 n' set \fIerrno\fP to
indicate tha error.
.SH ERRORS
.LP
Da \fIsched_setscheduler\fP() function shall fail if:
.TP 7
.B EINVAL
Da value of tha \fIpolicy\fP parameta is invalid, or one or more
of tha parametas contained up in \fIparam\fP is outside the
valid range fo' tha specified schedulin policy.
.TP 7
.B EPERM
Da requestin process aint gots permission ta set either or both
of tha schedulin parametas or tha schedulin policy of
the specified process.
.TP 7
.B ESRCH
No process can be found correspondin ta dat specified by \fIpid\fP.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsched_getparam\fP(), \fIsched_getscheduler\fP(),
\fIsched_setparam\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<sched.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
