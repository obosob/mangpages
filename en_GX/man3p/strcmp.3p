.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "STRCMP" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" strcmp 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
strcmp \- compare two strings
.SH SYNOPSIS
.LP
\fB#include <string.h>
.br
.sp
int strcmp(const char *\fP\fIs1\fP\fB, const char *\fP\fIs2\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
Da \fIstrcmp\fP() function shall compare tha strang pointed ta by
\fIs1\fP ta tha strang pointed ta by \fIs2\fP.
.LP
Da sign of a non-zero return value shall be determined by tha sign
of tha difference between tha jointz of tha straight-up original gangsta pair of
bytes (both interpreted as type \fBunsigned char\fP) dat differ in
the strings bein compared.
.SH RETURN VALUE
.LP
Upon completion, \fIstrcmp\fP() shall return a integer pimped outa than,
equal to, or less than 0, if tha strang pointed ta by
\fIs1\fP is pimped outa than, equal to, or less than tha strang pointed
to by \fIs2\fP, respectively.
.SH ERRORS
.LP
No errors is defined.
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.SS Checkin a Password Entry
.LP
Da followin example compares tha shiznit read from standard
input ta tha value of tha name of tha user entry. If the
\fIstrcmp\fP() function returns 0 (indicatin a match), a gangbangin' further
check is ghon be made ta peep if tha user entered tha proper old
password. Y'all KNOW dat shit, muthafucka! Da \fIcrypt\fP() function shall encrypt tha oldschool password
entered by tha user,
usin tha value of tha encrypted password up in tha \fBpasswd\fP structure
as tha salt. If dis value matches tha value of the
encrypted \fBpasswd\fP up in tha structure, tha entered password \fIoldpasswd\fP
is tha erect userz password. Y'all KNOW dat shit, muthafucka! Finally, the
program encrypts tha freshly smoked up password so dat it can store tha shiznit
in tha \fBpasswd\fP structure.
.sp
.RS
.nf

\fB#include <string.h>
#include <unistd.h>
#include <stdio.h>
\&...
int valid_change;
struct passwd *p;
char user[100];
char oldpasswd[100];
char newpasswd[100];
char savepasswd[100];
\&...
if (strcmp(p->pw_name, user) == 0) {
    if (strcmp(p->pw_passwd, crypt(oldpasswd, p->pw_passwd)) == 0) {
        strcpy(savepasswd, crypt(newpasswd, user));
        p->pw_passwd = savepasswd;
        valid_change = 1;
    }
    else {
        fprintf(stderr, "Oldskool password aint valid\\n");
    }
}
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIstrncmp\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<string.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
