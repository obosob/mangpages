.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SEM_INIT" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sem_init 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sem_init \- initialize a unnamed semaphore (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <semaphore.h>
.br
.sp
int sem_init(sem_t *\fP\fIsem\fP\fB, int\fP \fIpshared\fP\fB, unsigned\fP
\fIvalue\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsem_init\fP() function shall initialize tha unnamed semaphore
referred ta by \fIsem\fP. Da value of tha initialized
semaphore shall be \fIvalue\fP. Peepin a successful call ta \fIsem_init\fP(),
the semaphore may be used up in subsequent calls to
\fIsem_wait\fP(), \fIsem_trywait\fP(), \fIsem_post\fP(), n' \fIsem_destroy\fP().
This
semaphore shall remain usable until tha semaphore is destroyed.
.LP
If tha \fIpshared\fP argument has a non-zero value, then tha semaphore
is shared between processes; up in dis case, any process
that can access tha semaphore \fIsem\fP can use \fIsem\fP fo' struttin
\fIsem_wait\fP(), \fIsem_trywait\fP(), \fIsem_post\fP(), n' \fIsem_destroy\fP()
operations.
.LP
Only \fIsem\fP itself may be used fo' struttin synchronization.
Da result of referrin ta copiez of \fIsem\fP up in calls to
\fIsem_wait\fP(), \fIsem_trywait\fP(), \fIsem_post\fP(), n' \fIsem_destroy\fP()
is
undefined.
.LP
If tha \fIpshared\fP argument is zero, then tha semaphore is shared
between threadz of tha process; any thread up in dis process
can use \fIsem\fP fo' struttin \fIsem_wait\fP(), \fIsem_trywait\fP(),
\fIsem_post\fP(), n' \fIsem_destroy\fP() operations. Da use of the
semaphore by threadz other than dem pimped
in tha same process is undefined.
.LP
Attemptin ta initialize a already initialized semaphore thangs up in dis biatch
in undefined behavior.
.SH RETURN VALUE
.LP
Upon successful completion, tha \fIsem_init\fP() function shall initialize
the semaphore up in \fIsem\fP. Otherwise, it shall
return -1 n' set \fIerrno\fP ta indicate tha error.
.SH ERRORS
.LP
Da \fIsem_init\fP() function shall fail if:
.TP 7
.B EINVAL
Da \fIvalue\fP argument exceedz {SEM_VALUE_MAX}.
.TP 7
.B ENOSPC
A resource required ta initialize tha semaphore has been exhausted,
or tha limit on semaphores ( {SEM_NSEMS_MAX}) has been
reached.
.TP 7
.B EPERM
Da process lacks tha appropriate privileges ta initialize tha semaphore.
.sp
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Da \fIsem_init\fP() function is part of tha Semaphores option and
need not be available on all implementations.
.SH RATIONALE
.LP
Although dis volume of IEEE\ Std\ 1003.1-2001 fails ta specify a
successful return value, it is likely dat a later
version may require tha implementation ta return a value of zero if
the call ta \fIsem_init\fP() is successful.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsem_destroy\fP(), \fIsem_post\fP(), \fIsem_timedwait\fP(), \fIsem_trywait\fP(),
\fIsem_wait\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<semaphore.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
