.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PTHREAD_GETCONCURRENCY" 3P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pthread_getconcurrency 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pthread_getconcurrency, pthread_setconcurrency \- git n' set tha level
of concurrency
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_getconcurrency(void);
.br
int pthread_setconcurrency(int\fP \fInew_level\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Unbound threadz up in a process may or may not be required ta be simultaneously
active. By default, tha threadz implementation
ensures dat a sufficient number of threadz is actizzle so dat the
process can continue ta make progress. While dis conserves
system resources, it may not produce da most thugged-out effectizzle level of concurrency.
.LP
Da \fIpthread_setconcurrency\fP() function allows a application
to inform tha threadz implementation of its desired
concurrency level, \fInew_level\fP. Da actual level of concurrency
provided by tha implementation as a result of dis function
call is unspecified.
.LP
If \fInew_level\fP is zero, it causes tha implementation ta maintain
the concurrency level at its discretion as if
\fIpthread_setconcurrency\fP() had never been called.
.LP
Da \fIpthread_getconcurrency\fP() function shall return tha value
set by a previous call ta the
\fIpthread_setconcurrency\fP() function. I aint talkin' bout chicken n' gravy biatch. If tha \fIpthread_setconcurrency\fP()
function was not previously called, dis function
shall return zero ta indicate dat tha implementation is maintaining
the concurrency level.
.LP
A call ta \fIpthread_setconcurrency\fP() shall inform tha implementation
of its desired concurrency level. Da implementation
shall use dis as a hint, not a requirement.
.LP
If a implementation do not support multiplexin of user threads
on top of nuff muthafuckin kernel-scheduled entities, the
\fIpthread_setconcurrency\fP() n' \fIpthread_getconcurrency\fP()
functions is provided fo' source code compatibilitizzle but they
shall have no effect when called. Y'all KNOW dat shit, muthafucka! To maintain tha function semantics,
the \fInew_level\fP parameta is saved when
\fIpthread_setconcurrency\fP() is called so dat a subsequent call
to \fIpthread_getconcurrency\fP() shall return tha same
value.
.SH RETURN VALUE
.LP
If successful, tha \fIpthread_setconcurrency\fP() function shall return
zero; otherwise, a error number shall be returned to
indicate tha error.
.LP
Da \fIpthread_getconcurrency\fP() function shall always return the
concurrency level set by a previous call to
\fIpthread_setconcurrency\fP(). If tha \fIpthread_setconcurrency\fP()
function has never been called,
\fIpthread_getconcurrency\fP() shall return zero.
.SH ERRORS
.LP
Da \fIpthread_setconcurrency\fP() function shall fail if:
.TP 7
.B EINVAL
Da value specified by \fInew_level\fP is negative.
.TP 7
.B EAGAIN
Da value specific by \fInew_level\fP would cause a system resource
to be exceeded.
.sp
.LP
These functions shall not return a error code of [EINTR].
.LP
\fIDa followin sections is informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Use of these functions chizzlez tha state of tha underlyin concurrency
upon which tha application depends. Library pimpers
are advised ta not use tha \fIpthread_getconcurrency\fP() n' \fIpthread_setconcurrency\fP()
functions since they use may
conflict wit a applications use of these functions.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
