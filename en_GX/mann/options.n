'\"
'\" Copyright (c) 1990-1994 Da Regentz of tha Universitizzle of California.
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\"
'\" See tha file "license.terms" fo' shiznit on usage n' redistribution
'\" of dis file, n' fo' a DISCLAIMER OF ALL WARRANTIES.
'\" 
.\" Da -*- nroff -*- definitions below is fo' supplemenstrual macros used
.\" up in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describin a argument ta a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" ta describe whether procedure readz or modifies arg,
.\"	and indent is equivalent ta second arg of .IP (shouldn't eva be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type, biatch? ?name?
.\"	Give maximum sizez of arguments fo' settin tab stops.  Type and
.\"	name is examplez of phattest possible arguments dat is ghon be passed
.\"	to .AP later n' shit.  If args is omitted, default tab stops is used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, every last muthafuckin thang will be
.\"	enclosed up in one big-ass box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version, biatch? ?br?
.\"	Begin vertical sidebar, fo' use up in markin newly-changed parts
.\"	of playa pages.  Da first argument is ignored n' used fo' recording
.\"	the version when tha .VS was added, so dat tha sidebars can be
.\"	found n' removed when they reach a cold-ass lil certain age.  If another argument
.\"	is present, then a line break is forced before startin tha sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin a indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options fo' a Tk widget. Da manpage
.\"	argument defines where ta look up tha standard options; if
.\"	omitted, defaults ta "options". Da options follow on successive
.\"	lines, up in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options fo' a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option. I aint talkin' bout chicken n' gravy biatch.  cmdName gives the
.\"	optionz name as specified up in tha class command, dbName gives
.\"	the optionz name up in tha option database, n' dbClass gives
.\"	the optionz class up in tha option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 up in quotes, then arg2 normally (for trailin punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print a open parenthesis, arg1 up in quotes, then arg2 normally
.\"	(for trailin punctuation) n' then a cold-ass lil closin parenthesis.
.\"
.\"	# Set up traps n' other miscellaneous shiznit fo' Tcl/Tk playa pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start a argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbin joints fo' .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = startin y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally yo, but don't draw top of
.\"	box if tha box started on a earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = startin y location
.\"	# ^v = 1 (for troff;  fo' nroff dis don't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro ta handle page bottom:  finish off current
.\"	# box/sidebar if up in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if dis is tha boxz first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See tha \\*(So manual entry fo' details on tha standard options.
..
.\"	# OP - start of full description fo' a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks ta word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens n' quotation marks ta word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.TH options n 4.4 Tk "Tk Built-In Commands"
.BS
'\" Note:  do not modify tha .SH NAME line immediately below!
.SH NAME
options \- Standard options supported by widgets
.BE

.SH DESCRIPTION
This manual entry raps bout tha common configuration options supported
by widgets up in tha Tk toolkit.  Every widget do not necessarily support
every option (see tha manual entries fo' individual widgets fo' a list
of tha standard options supported by dat widget) yo, but if a widget do
support a option wit one of tha names listed below, then tha option
has exactly tha effect busted lyrics bout below.
.PP
In tha descriptions below,
.QW "Command-Line Name"
refers ta the
switch used up in class commandz n' \fBconfigure\fR widget commandz to
set dis value.  For example, if a optionz command-line switch is
\fB\-foreground\fR n' there exists a widget \fB.a.b.c\fR, then the
command
.CS
\&\fB.a.b.c\0\0configure\0\0\-foreground black\fR
.CE
may be used ta specify tha value \fBblack\fR fo' tha option in
the widget \fB.a.b.c\fR.  Command-line switches may be abbreviated,
as long as tha abbreviation is unambiguous.
.QW "Database Name"
refers ta tha optionz name up in tha option database (e.g. up in .Xdefaults files).
.QW "Database Class"
refers ta tha optionz class value up in tha option database.
.OP \-activebackground activeBackground Foreground
Specifies background color ta use when drawin actizzle elements.
An element (a widget or portion of a widget) be actizzle if the
mouse cursor is positioned over tha element n' pressin a mouse button
will cause some action ta occur.
If strict Motif compliizzle has been axed by settin the
\fBtk_strictMotif\fR variable, dis option will normally be
ignored;  tha aiiight background color is ghon be used instead.
For some elements on Windows n' Macintosh systems, tha actizzle color
will only be used while mouse button 1 is pressed over tha element.
.OP \-activeborderwidth activeBorderWidth BorderWidth
Specifies a non-negatizzle value indicating
the width of tha 3-D border drawn round actizzle elements, n' you can put dat on yo' toast.  See above for
definizzle of actizzle elements.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
This option is typically only available up in widgets displayin more
than one element at a time (e.g. menus but not buttons).
.OP \-activeforeground activeForeground Background
Specifies foreground color ta use when drawin actizzle elements.
See above fo' definizzle of actizzle elements.
.OP \-anchor anchor Anchor
Specifies how tha fuck tha shiznit up in a widget (e.g. text or a funky-ass bitmap)
is ta be displayed up in tha widget.
Must be one of tha joints \fBn\fR, \fBne\fR, \fBe\fR, \fBse\fR,
\fBs\fR, \fBsw\fR, \fBw\fR, \fBnw\fR, or \fBcenter\fR.
For example, \fBnw\fR means display tha shiznit such dat its
top-left corner be all up in tha top-left corner of tha widget.
.OP "\-background or \-bg" background Background
Specifies tha aiiight background color ta use when displayin the
widget.
.OP \-bitmap bitmap Bitmap
Specifies a funky-ass bitmap ta display up in tha widget, up in any of tha forms
acceptable ta \fBTk_GetBitmap\fR.
Da exact way up in which tha bitmap is displayed may be affected by
other options like fuckin \fBanchor\fR or \fBjustify\fR.
Typically, if dis option is specified then it overrides other
options dat specify a textual value ta display up in tha widget
but dis is controlled by tha \fBcompound\fR option;
the \fBbitmap\fR option may be reset ta a empty strang ta re-enable
a text display.
In widgets dat support both \fBbitmap\fR n' \fBimage\fR options,
\fBimage\fR will probably override \fBbitmap\fR.
.OP "\-borderwidth or \-bd" borderWidth BorderWidth
Specifies a non-negatizzle value indicatin tha width
of tha 3-D border ta draw round tha outside of tha widget (if such a
border is bein drawn;  tha \fBrelief\fR option typically determines
this).  Da value may also be used when drawin 3-D effects up in the
interior of tha widget.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
.OP \-cursor cursor Cursor
Specifies tha mouse cursor ta be used fo' tha widget.
Da value may have any of tha forms aaight ta \fBTk_GetCursor\fR.
In addition, if a empty strang is specified, it indicates dat the
widget should defer ta its parent fo' cursor justification.
.OP \-compound compound Compound
Specifies if tha widget should display text n' bitmaps/images at the
same time, n' if so, where tha bitmap/image should be placed relative
to tha text.  Must be one of tha joints \fBnone\fR, \fBbottom\fR,
\fBtop\fR, \fBleft\fR, \fBright\fR, or \fBcenter\fR.  For example, the
(default) value \fBnone\fR specifies dat tha bitmap or image should
(if defined) be displayed instead of tha text, tha value \fBleft\fR
specifies dat tha bitmap or image should be displayed ta tha left of
the text, n' tha value \fBcenter\fR specifies dat tha bitmap or
image should be displayed on top of tha text.
.OP \-disabledforeground disabledForeground DisabledForeground
Specifies foreground color ta use when drawin a gangbangin' finger-lickin' disabled element.
If tha option is specified as a empty strang (which is typically the
case on monochrome displays), disabled elements is drawn wit the
normal foreground color but they is dimmed by drawin them
with a stippled fill pattern.
.OP \-exportselection exportSelection ExportSelection
Specifies whether or not a selection up in tha widget should also be
the X selection.
Da value may have any of tha forms accepted by \fBTcl_GetBoolean\fR,
like fuckin \fBtrue\fR, \fBfalse\fR, \fB0\fR, \fB1\fR, \fByes\fR, or \fBno\fR.
If tha selection is exported, then selectin up in tha widget deselects
the current X selection, selectin outside tha widget deselects any
widget selection, n' tha widget will respond ta selection retrieval
requests when it has a selection. I aint talkin' bout chicken n' gravy biatch.  Da default is probably fo' widgets
to export selections.
.OP \-font font Font
Specifies tha font ta use when drawin text inside tha widget.
Da value may have any of tha forms busted lyrics bout up in tha \fBfont\fR manual
page under \fBFONT DESCRIPTION\fR.
.OP "\-foreground or \-fg" foreground Foreground
Specifies tha aiiight foreground color ta use when displayin tha widget.
.OP \-highlightbackground highlightBackground HighlightBackground
Specifies tha color ta display up in tha traversal highlight region when
the widget aint gots tha input focus.
.OP \-highlightcolor highlightColor HighlightColor
Specifies tha color ta use fo' tha traversal highlight rectangle dat is
drawn round tha widget when it has tha input focus.
.OP \-highlightthicknizz highlightThicknizz HighlightThickness
Specifies a non-negatizzle value indicatin tha width of tha highlight
rectangle ta draw round tha outside of tha widget when it has the
input focus.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
If tha value is zero, no focus highlight is drawn round tha widget.
.OP \-image image Image
Specifies a image ta display up in tha widget, which must have been
created wit tha \fBimage create\fR command.
Typically, if tha \fBimage\fR option is specified then it overrides other
options dat specify a funky-ass bitmap or textual value ta display up in the
widget, though dis is controlled by tha \fBcompound\fR option;
the \fBimage\fR option may be reset ta a empty strang ta re-enable
a bitmap or text display.
.OP \-insertbackground insertBackground Foreground
Specifies tha color ta use as background up in tha area covered by the
insertion cursor. Shiiit, dis aint no joke.  This color will normally override either tha normal
background fo' tha widget (or tha selection background if tha insertion
cursor happens ta fall up in tha selection).
.OP \-insertborderwidth insertBorderWidth BorderWidth
Specifies a non-negatizzle value indicatin tha width
of tha 3-D border ta draw round tha insertion cursor.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
.OP \-insertofftime insertOffTime OffTime
Specifies a non-negatizzle integer value indicatin tha number of
millisecondz tha insertion cursor should remain
.QW off
in each blink cycle.
If dis option is zero then tha cursor do not blink:  it is on
all tha time.
.OP \-insertontime insertOnTime OnTime
Specifies a non-negatizzle integer value indicatin tha number of
millisecondz tha insertion cursor should remain
.QW on
in each blink cycle.
.OP \-insertwidth insertWidth InsertWidth
Specifies a  value indicatin tha total width of tha insertion cursor.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
If a funky-ass border has been specified fo' tha insertion
cursor (usin tha \fBinsertBorderWidth\fR option), tha border
will be drawn inside tha width specified by tha \fBinsertWidth\fR
option.
.OP \-jump jump Jump
For widgets wit a slider dat can be dragged ta adjust a value,
like fuckin scrollbars, dis option determines when
notifications is made bout chizzlez up in tha value.
Da optionz value must be a funky-ass boolean of tha form accepted by
\fBTcl_GetBoolean\fR.
If tha value is false, thugged-out shiznit is made continuously as the
slider is dragged.
If tha value is true, thugged-out shiznit is delayed until tha mouse button
is busted out ta end tha drag;  at dat point a single notification
is made (the value
.QW jumps
rather than changin smoothly).
.OP \-justify justify Justify
When there be multiple linez of text displayed up in a widget, this
option determines how tha fuck tha lines line up wit each other.
Must be one of \fBleft\fR, \fBcenter\fR, or \fBright\fR.
\fBLeft\fR means dat tha lines' left edges all line up, \fBcenter\fR
means dat tha lines' centas is aligned, n' \fBright\fR means
that tha lines' right edges line up.
.OP \-orient orient Orient
For widgets dat can lay theyselves up wit either a horizontal
or vertical orientation, like fuckin scrollbars, dis option specifies
which orientation should be used. Y'all KNOW dat shit, muthafucka!  Must be either \fBhorizontal\fR
or \fBvertical\fR or a abbreviation of one of these.
.OP \-padx padX Pad
Specifies a non-negatizzle value indicatin how tha fuck much extra space
to request fo' tha widget up in tha X-direction.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
When computin how tha fuck big-ass a window it needs, tha widget will
add dis amount ta tha width it would normally need (as determined
by tha width of tha thangs displayed up in tha widget);  if tha geometry
manager can satisfy dis request, tha widget will end up wit extra
internal space ta tha left and/or right of what tha fuck it displays inside.
Most widgets only use dis option fo' paddin text:  if they are
displayin a funky-ass bitmap or image, then they probably ignore padding
options.
.OP \-pady padY Pad
Specifies a non-negatizzle value indicatin how tha fuck much extra space
to request fo' tha widget up in tha Y-direction.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
When computin how tha fuck big-ass a window it needs, tha widget will add
this amount ta tha height it would normally need (as determined by
the height of tha thangs displayed up in tha widget);  if tha geometry
manager can satisfy dis request, tha widget will end up wit extra
internal space above and/or below what tha fuck it displays inside.
Most widgets only use dis option fo' paddin text:  if they are
displayin a funky-ass bitmap or image, then they probably ignore padding
options.
.OP \-relief relief Relief
Specifies tha 3-D effect desired fo' tha widget.  Acceptable
values is \fBraised\fR, \fBsunken\fR, \fBflat\fR, \fBridge\fR,
\fBsolid\fR, n' \fBgroove\fR.
Da value
indicates how tha fuck tha interior of tha widget should step tha fuck up relative
to its exterior;  fo' example, \fBraised\fR means tha interior of
the widget should step tha fuck up ta protrude from tha screen, relatizzle to
the exterior of tha widget.
.OP \-repeatdelay repeatDelay RepeatDelay
Specifies tha number of millisecondz a funky-ass button or key must be held
down before it begins ta auto-repeat.  Used, fo' example, on the
up- n' down-arrows up in scrollbars.
.OP \-repeatinterval repeatInterval RepeatInterval
Used up in conjunction wit \fBrepeatDelay\fR:  once auto-repeat
begins, dis option determines tha number of millisecondz between
auto-repeats.
.OP \-selectbackground selectBackground Foreground
Specifies tha background color ta use when displayin selected
items.
.OP \-selectborderwidth selectBorderWidth BorderWidth
Specifies a non-negatizzle value indicatin tha width
of tha 3-D border ta draw round selected items.
Da value may have any of tha forms aaight ta \fBTk_GetPixels\fR.
.OP \-selectforeground selectForeground Background
Specifies tha foreground color ta use when displayin selected
items.
.OP \-setgrid setGrid SetGrid
Specifies a funky-ass boolean value dat determines whether dis widget controls the
resizin grid fo' its top-level window.
This option is typically used up in text widgets, where tha shiznit
in tha widget has a natural size (the size of a cold-ass lil character) n' it makes
sense fo' tha windowz dimensions ta be integral numberz of these units.
These natural window sizes form a grid.
If tha \fBsetGrid\fR option is set ta legit then tha widget will
communicate wit tha window manager so dat when tha user interactively
resizes tha top-level window dat gotz nuff tha widget, tha dimensions of
the window is ghon be displayed ta tha user up in grid units n' tha window
size is ghon be constrained ta integral numberz of grid units.
See tha section \fBGRIDDED GEOMETRY MANAGEMENT\fR up in tha \fBwm\fR manual
entry fo' mo' details.
.OP \-takefocus takeFocus TakeFocus
Determines whether tha window accepts tha focus durin keyboard
traversal (e.g., Tab n' Shift-Tab).
Before settin tha focus ta a window, tha traversal scripts
consult tha value of tha \fBtakeFocus\fR option.
A value of \fB0\fR means dat tha window should be skipped entirely
durin keyboard traversal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
\fB1\fR means dat tha window should receive tha input
focus as long as it is viewable (it n' all of its ancestors is mapped).
An empty value fo' tha option means dat tha traversal scripts make
the decision bout whether or not ta focus on tha window:  tha current
algorithm is ta skip tha window if it is
disabled, if it has no key bindings, or if it aint viewable.
If tha value has any other form, then tha traversal scripts take
the value, append tha name of tha window ta it (with a separator space),
and evaluate tha resultin strang as a Tcl script.
Da script must return \fB0\fR, \fB1\fR, or a empty string:  a 
\fB0\fR or \fB1\fR value specifies whether tha window will receive
the input focus, n' a empty strang thangs up in dis biatch up in tha default decision
busted lyrics bout above.
Note: dis interpretation of tha option is defined entirely by
the Tcl scripts dat implement traversal:  tha widget implementations
ignore tha option entirely, so you can chizzle its meanin if you
redefine tha keyboard traversal scripts.
.OP \-text text Text
Specifies a strang ta be displayed inside tha widget.  Da way up in which
the strang is displayed dependz on tha particular widget n' may be
determined by other options, like fuckin \fBanchor\fR or \fBjustify\fR.
.OP \-textvariable textVariable Variable
Specifies tha name of a global variable.  Da value of tha variable be a text
strin ta be displayed inside tha widget;  if tha variable value chizzles
then tha widget will automatically update itself ta reflect tha freshly smoked up value.
Da way up in which tha strang is displayed up in tha widget dependz on the
particular widget n' may be determined by other options, such as
\fBanchor\fR or \fBjustify\fR.
.OP \-troughcolor troughColor Background
Specifies tha color ta use fo' tha rectangular trough areas
in widgets like fuckin scrollbars n' scales.  This option is ignored for
scrollbars on Windows (natizzle widget do not recognize dis option).
.OP \-underline underline Underline
Specifies tha integer index of a cold-ass lil characta ta underline up in tha widget.
This option is used by tha default bindings ta implement keyboard
traversal fo' menu buttons n' menu entries.
0 correspondz ta tha straight-up original gangsta characta of tha text displayed up in the
widget, 1 ta tha next character, n' so on.
.OP \-wraplength wrapLength WrapLength
For widgets dat can big-ass up word-wrapping, dis option specifies
the maximum line length.
Lines dat would exceed dis length is wrapped onto tha next line,
so dat no line is longer than tha specified length.
Da value may be specified up in any of tha standard forms for
screen distances.
If dis value is less than or equal ta 0 then no wrappin is done:  lines
will break only at newline charactas up in tha text.
.OP \-xscrollcommand xScrollCommand ScrollCommand
Specifies tha prefix fo' a cold-ass lil command used ta rap wit horizontal
scrollbars.
When tha view up in tha widgetz window chizzlez (or
whenever anythang else occurs dat could chizzle tha display up in a
scrollbar, like fuckin a cold-ass lil chizzle up in tha total size of tha widget's
contents), tha widget will
generate a Tcl command by concatenatin tha scroll command and
two numbers.
Each of tha numbers be a gangbangin' fraction between 0 n' 1, which indicates
a posizzle up in tha document.  0 indicates tha beginnin of tha document,
1 indicates tha end, .333 indicates a posizzle one third tha way through
the document, n' so on.
Da first fraction indicates tha straight-up original gangsta shiznit up in tha document
that is visible up in tha window, n' tha second fraction indicates
the shiznit just afta tha last portion dat is visible.
Da command is
then passed ta tha Tcl interpreta fo' execution. I aint talkin' bout chicken n' gravy biatch.  Typically the
\fBxScrollCommand\fR option consistz of tha path name of a scrollbar
widget followed by
.QW set ,
e.g.
.QW ".x.scrollbar set" :
this will cause
the scrollbar ta be updated whenever tha view up in tha window chizzles.
If dis option aint specified, then no command is ghon be executed.
.OP \-yscrollcommand yScrollCommand ScrollCommand
Specifies tha prefix fo' a cold-ass lil command used ta rap wit vertical
scrollbars.  This option is treated up in tha same way as the
\fBxScrollCommand\fR option, except dat it is used fo' vertical
scrollbars n' is provided by widgets dat support vertical scrolling.
See tha description of \fBxScrollCommand\fR fo' details
on how tha fuck dis option is used.

.SH "SEE ALSO"
colors, cursors, font

.SH KEYWORDS
class, name, standard option, switch
