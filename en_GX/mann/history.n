'\"
'\" Copyright (c) 1993 Da Regentz of tha Universitizzle of California.
'\" Copyright (c) 1994-1997 Sun Microsystems, Inc.
'\"
'\" See tha file "license.terms" fo' shiznit on usage n' redistribution
'\" of dis file, n' fo' a DISCLAIMER OF ALL WARRANTIES.
'\" 
.\" Da -*- nroff -*- definitions below is fo' supplemenstrual macros used
.\" up in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describin a argument ta a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" ta describe whether procedure readz or modifies arg,
.\"	and indent is equivalent ta second arg of .IP (shouldn't eva be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type, biatch? ?name?
.\"	Give maximum sizez of arguments fo' settin tab stops.  Type and
.\"	name is examplez of phattest possible arguments dat is ghon be passed
.\"	to .AP later n' shit.  If args is omitted, default tab stops is used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, every last muthafuckin thang will be
.\"	enclosed up in one big-ass box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version, biatch? ?br?
.\"	Begin vertical sidebar, fo' use up in markin newly-changed parts
.\"	of playa pages.  Da first argument is ignored n' used fo' recording
.\"	the version when tha .VS was added, so dat tha sidebars can be
.\"	found n' removed when they reach a cold-ass lil certain age.  If another argument
.\"	is present, then a line break is forced before startin tha sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin a indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options fo' a Tk widget. Da manpage
.\"	argument defines where ta look up tha standard options; if
.\"	omitted, defaults ta "options". Da options follow on successive
.\"	lines, up in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options fo' a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option. I aint talkin' bout chicken n' gravy biatch.  cmdName gives the
.\"	optionz name as specified up in tha class command, dbName gives
.\"	the optionz name up in tha option database, n' dbClass gives
.\"	the optionz class up in tha option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 up in quotes, then arg2 normally (for trailin punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print a open parenthesis, arg1 up in quotes, then arg2 normally
.\"	(for trailin punctuation) n' then a cold-ass lil closin parenthesis.
.\"
.\"	# Set up traps n' other miscellaneous shiznit fo' Tcl/Tk playa pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start a argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbin joints fo' .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = startin y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally yo, but don't draw top of
.\"	box if tha box started on a earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = startin y location
.\"	# ^v = 1 (for troff;  fo' nroff dis don't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro ta handle page bottom:  finish off current
.\"	# box/sidebar if up in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if dis is tha boxz first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See tha \\*(So manual entry fo' details on tha standard options.
..
.\"	# OP - start of full description fo' a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks ta word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens n' quotation marks ta word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.TH history n "" Tcl "Tcl Built-In Commands"
.BS
'\" Note:  do not modify tha .SH NAME line immediately below!
.SH NAME
history \- Manipulate tha history list
.SH SYNOPSIS
\fBhistory \fR?\fIoption\fR, biatch? ?\fIarg arg ...\fR?
.BE
.SH DESCRIPTION
.PP
Da \fBhistory\fR command performs one of nuff muthafuckin operations related to
recently-executed commandz recorded up in a history list.  Each of
these recorded commandz is referred ta as an
.QW event .
When specifyin a event ta tha \fBhistory\fR command, tha following
forms may be used:
.IP [1]
A number:  if positive, it refers ta tha event with
that number (all events is numbered startin at 1).  If tha number
is negative, it selects a event relatizzle ta tha current event
(\fB\-1\fR refers ta tha previous event, \fB\-2\fR ta tha one before that, and
so on).  Event \fB0\fR refers ta tha current event.
.IP [2]
A string:  selects da most thugged-out recent event dat matches tha string.
An event is considered ta match tha strang either if tha strang is
the same as tha straight-up original gangsta charactaz of tha event, or if tha string
matches tha event up in tha sense of tha \fBstrin match\fR command.
.PP
Da \fBhistory\fR command can take any of tha followin forms:
.TP
\fBhistory\fR
Same
as \fBhistory info\fR, busted lyrics bout below.
.TP
\fBhistory add\fI command \fR?\fBexec\fR?
Addz tha \fIcommand\fR argument ta tha history list as a freshly smoked up event.  If
\fBexec\fR is specified (or abbreviated) then tha command be also
executed n' its result is returned. Y'all KNOW dat shit, muthafucka!  If \fBexec\fR aint specified
then a empty strang is returned as result.
.TP
\fBhistory chizzle\fI newValue\fR ?\fIevent\fR?
Replaces tha value recorded fo' a event wit \fInewValue\fR.  \fIEvent\fR
specifies tha event ta replace, and
defaults ta tha \fIcurrent\fR event (not event \fB\-1\fR).  This command
is intended fo' use up in commandz dat implement freshly smoked up formz of history
substitution n' wish ta replace tha current event (which invokes the
substitution) wit tha command pimped all up in substitution. I aint talkin' bout chicken n' gravy biatch.  Da return
value be a empty string.
.TP
\fBhistory clear\fR
Erase tha history list.  Da current keep limit is retained.
Da history event numbers is reset.
.TP
\fBhistory event\fR ?\fIevent\fR?
Returns tha value of tha event given by \fIevent\fR.  \fIEvent\fR
defaults ta \fB\-1\fR.
.TP
\fBhistory info \fR?\fIcount\fR?
Returns a gangbangin' formatted strang (intended fo' humans ta read) giving
the event number n' contents fo' each of tha events up in tha history
list except tha current event.  If \fIcount\fR is specified
then only da most thugged-out recent \fIcount\fR events is returned.
.TP
\fBhistory keep \fR?\fIcount\fR?
This command may be used ta chizzle tha size of tha history list to
\fIcount\fR events, n' you can put dat on yo' toast.  Initially, 20 events is retained up in tha history
list.  If \fIcount\fR aint specified, tha current keep limit is returned.
.TP
\fBhistory nextid\fR
Returns tha number of tha next event ta be recorded
in tha history list.  It be useful fo' thangs like printin the
event number up in command-line prompts.
.TP
\fBhistory redo \fR?\fIevent\fR?
Re-executes tha command indicated by \fIevent\fR n' returns its result.
\fIEvent\fR defaults ta \fB\-1\fR.  This command thangs up in dis biatch up in history
revision:  peep below fo' details.
.SH "HISTORY REVISION"
.PP
Pre-8.0 Tcl had a cold-ass lil complex history revision mechanism.
Da current mechanizzle is mo' limited, n' tha old
history operations \fBsubstitute\fR n' \fBwords\fR done been removed.
(As a cold-ass lil consolation, tha \fBclear\fR operation was added.)
.PP
Da history option \fBredo\fR thangs up in dis biatch up in much simpler
.QW "history revision" .
When dis option is invoked then da most thugged-out recent event
is modified ta eliminizzle tha history command n' replace it with
the result of tha history command.
If you wanna redo a event without modifyin history, then use
the \fBevent\fR operation ta retrieve some event,
and tha \fBadd\fR operation ta add it ta history n' execute dat shit.
.SH KEYWORDS
event, history, record
