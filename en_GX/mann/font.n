'\"
'\" Copyright (c) 1996 Sun Microsystems, Inc.
'\" Copyright (c) 2006-2007 Daniel A. Right back up in yo muthafuckin ass. Steffen <das@users.sourceforge.net>
'\"
'\" See tha file "license.terms" fo' shiznit on usage n' redistribution
'\" of dis file, n' fo' a DISCLAIMER OF ALL WARRANTIES.
'\" 
.\" Da -*- nroff -*- definitions below is fo' supplemenstrual macros used
.\" up in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describin a argument ta a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" ta describe whether procedure readz or modifies arg,
.\"	and indent is equivalent ta second arg of .IP (shouldn't eva be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type? ?name?
.\"	Give maximum sizez of arguments fo' settin tab stops.  Type and
.\"	name is examplez of phattest possible arguments dat is ghon be passed
.\"	to .AP later n' shit.  If args is omitted, default tab stops is used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, every last muthafuckin thang will be
.\"	enclosed up in one big-ass box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version? ?br?
.\"	Begin vertical sidebar, fo' use up in markin newly-changed parts
.\"	of playa pages.  Da first argument is ignored n' used fo' recording
.\"	the version when tha .VS was added, so dat tha sidebars can be
.\"	found n' removed when they reach a cold-ass lil certain age.  If another argument
.\"	is present, then a line break is forced before startin tha sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin a indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options fo' a Tk widget. Da manpage
.\"	argument defines where ta look up tha standard options; if
.\"	omitted, defaults ta "options". Da options follow on successive
.\"	lines, up in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options fo' a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option. I aint talkin' bout chicken n' gravy biatch.  cmdName gives the
.\"	optionz name as specified up in tha class command, dbName gives
.\"	the optionz name up in tha option database, n' dbClass gives
.\"	the optionz class up in tha option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 up in quotes, then arg2 normally (for trailin punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print a open parenthesis, arg1 up in quotes, then arg2 normally
.\"	(for trailin punctuation) n' then a cold-ass lil closin parenthesis.
.\"
.\"	# Set up traps n' other miscellaneous shiznit fo' Tcl/Tk playa pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start a argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbin joints fo' .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = startin y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally yo, but don't draw top of
.\"	box if tha box started on a earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = startin y location
.\"	# ^v = 1 (for troff;  fo' nroff dis don't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro ta handle page bottom:  finish off current
.\"	# box/sidebar if up in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if dis is tha boxz first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See tha \\*(So manual entry fo' details on tha standard options.
..
.\"	# OP - start of full description fo' a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks ta word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens n' quotation marks ta word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.TH font n 8.0 Tk "Tk Built-In Commands"
.BS
'\" Note:  do not modify tha .SH NAME line immediately below!
.SH NAME
font \- Smoke n' inspect fonts.
.SH SYNOPSIS
\fBfont\fI option \fR?\fIarg arg ...\fR?
.BE
.SH DESCRIPTION
.PP
Da \fBfont\fR command serves up nuff muthafuckin facilitizzles fo' dealin with
fonts, like fuckin definin named fonts n' inspectin tha actual attributes of
a font.  Da command has nuff muthafuckin different forms, determined by the
first argument.  Da followin forms is currently supported:
.TP
\fBfont actual \fIfont\fR ?\fB\-displayof \fIwindow\fR? ?\fIoption\fR? ?\fB\-\|\-\fR? ?\fIchar\fR?
.
Returns shiznit bout tha actual attributes dat is obtained when
\fIfont\fR is used on \fIwindow\fRz display; tha actual attributes obtained
may differ from tha attributes axed cuz of platform-dependent
limitations, like fuckin tha availabilitizzle of font crews n' pointsizes.
\fIfont\fR be a gangbangin' font description; peep \fBFONT DESCRIPTIONS\fR below.  If the
\fIwindow\fR argument is omitted, it defaults ta tha main window.  If
\fIoption\fR is specified, returns tha value of dat attribute; if it is
omitted, tha return value be a list of all tha attributes n' they joints.
See \fBFONT OPTIONS\fR below fo' a list of tha possible attributes.  If the
\fIchar\fR argument is supplied, it must be a single character n' shit. Da font
attributes returned is ghon be dem of tha specific font used ta render
that character, which is ghon be different from tha base font if tha base
font do not contain tha given character n' shit.  If \fIchar\fR may be a hyphen, it
should be preceded by \fB\-\|\-\fR ta distinguish it from a misspelled
\fIoption\fR.
.TP 
\fBfont configure \fIfontname\fR ?\fIoption\fR? ?\fIvalue option value ...\fR?
.
Query or modify tha desired attributes fo' tha named font called
\fIfontname\fR.  If no \fIoption\fR is specified, returns a list describing
all tha options n' they joints fo' \fIfontname\fR.  If a single \fIoption\fR
is specified wit no \fIvalue\fR, then returns tha current value of that
attribute.  If one or mo' \fIoption\fR\-\fIvalue\fR pairs is specified,
then tha command modifies tha given named font ta have tha given joints; in
this case, all widgets rockin dat font will redisplay theyselves rockin the
new attributes fo' tha font.  See \fBFONT OPTIONS\fR below fo' a list of the
possible attributes.
.TP
\fBfont create\fR ?\fIfontname\fR? ?\fIoption value ...\fR?
.
Creates a freshly smoked up named font n' returns its name.  \fIfontname\fR specifies the
name fo' tha font; if it is omitted, then Tk generates a freshly smoked up name of the
form \fBfont\fIx\fR, where \fIx\fR be a integer n' shit.  There may be any number
of \fIoption\fR\-\fIvalue\fR pairs, which provide tha desired attributes for
the freshly smoked up named font.  See \fBFONT OPTIONS\fR below fo' a list of tha possible
attributes.
.TP
\fBfont delete\fR \fIfontname\fR ?\fIfontname ...\fR?
.
Delete tha specified named fonts, n' you can put dat on yo' toast.  If there be widgets rockin tha named font,
the named font aint gonna straight-up be deleted until all tha instances are
released. Y'all KNOW dat shit, muthafucka!  Those widgets will continue ta display rockin tha last known joints
for tha named font.  If a thugged-out deleted named font is subsequently recreated with
another call ta \fBfont create\fR, tha widgets will use tha freshly smoked up named font
and redisplay theyselves rockin tha freshly smoked up attributez of dat font.
.TP
\fBfont crews\fR ?\fB\-displayof \fIwindow\fR?
.
Da return value be a list of tha case-insensitizzle namez of all font crews
that exist on \fIwindow\fRz display.  If tha \fIwindow\fR argument is
omitted, it defaults ta tha main window.
.TP
\fBfont measure \fIfont\fR ?\fB\-displayof \fIwindow\fR? \fItext\fR
.
Measures tha amount of space tha strang \fItext\fR would use up in tha given
\fIfont\fR when displayed up in \fIwindow\fR.  \fIfont\fR be a gangbangin' font description;
see \fBFONT DESCRIPTIONS\fR below.  If tha \fIwindow\fR argument is
omitted, it 
defaults ta tha main window.  Da return value is tha total width up in pixels
of \fItext\fR, not includin tha extra pixels used by highly exaggerated
charactas like fuckin cursive
.QW f .
If tha strang gotz nuff newlines or tabs,
those charactas is not expanded or treated specially when measurin the
string.
.TP
\fBfont metrics \fIfont\fR ?\fB\-displayof \fIwindow\fR? ?\fIoption\fR?
.
Returns shiznit bout tha metrics (the font-specific data), for
\fIfont\fR when it is used on \fIwindow\fRz display.  \fIfont\fR be a gangbangin' font
description; peep \fBFONT DESCRIPTIONS\fR below.  If tha \fIwindow\fR
argument is
omitted, it defaults ta tha main window.  If \fIoption\fR is specified,
returns tha value of dat metric; if it is omitted, tha return value be a
list of all tha metrics n' they joints, n' you can put dat on yo' toast.  See \fBFONT METRICS\fR
below fo' a list of tha possible metrics.
.TP
\fBfont names\fR
Da return value be a list of all tha named fonts dat is currently defined.
.SH "FONT DESCRIPTION"
.PP
Da followin formats is accepted as a gangbangin' font description anywhere
\fIfont\fR is specified as a argument above; these same forms is also
permitted when specifyin tha \fB\-font\fR option fo' widgets.
.TP
[1] \fIfontname\fR
.
Da name of a named font, pimped rockin tha \fBfont create\fR command. Y'all KNOW dat shit, muthafucka!  When
a widget uses a named font, it is guaranteed dat dis aint NEVER gonna cause an
error, as long as tha named font exists, no matta what tha fuck potentially invalid
or meaningless set of attributes tha named font has.  If tha named font
cannot be displayed wit exactly tha specified attributes, some other close
font is ghon be substituted automatically.
.TP
[2] \fIsystemfont\fR
.
Da platform-specific name of a gangbangin' font, interpreted by tha graphics server.
This also includes, under X, a XLFD (see [4]) fo' which a single
.QW \fB*\fR
characta was used ta elide mo' than one field up in tha middle of the
name.  See \fBPLATFORM-SPECIFIC\fR thangs fo' a list of tha system fonts.
.TP
[3] \fIfamily \fR?\fIsize\fR? ?\fIstyle\fR? ?\fIstyle ...\fR?
.
A properly formed list whose first element is tha desired font
\fIfamily\fR n' whose optionizzle second element is tha desired \fIsize\fR.
Da interpretation of tha \fIsize\fR attribute bigs up tha same ol' dirty rules
busted lyrics bout fo' \fB\-size\fR up in \fBFONT OPTIONS\fR below.  Any
additionizzle optional
arguments followin tha \fIsize\fR is font \fIstyle\fRs.  Possible joints
for tha \fIstyle\fR arguments is as bigs up:
.RS
.DS
.ta 3c 6c 9c
\fBnormal\fR	\fBbold\fR	\fBroman\fR	\fBitalic\fR
\fBunderline\fR	\fBoverstrike\fR
.DE
.RE
.TP
[4] X-font names (XLFD)
.
A Unix-centric font name of tha form
\fI\-foundry\-family\-weight\-slant\-setwidth\-addstyle\-pixel\-point\-resx\-resy\-spacing\-width\-charset\-encoding\fR.
The
.QW \fB*\fR
characta may be used ta skip individual fieldz dat the
user do not care about.  There must be exactly one
.QW \fB*\fR
for each field skipped, except dat a
.QW \fB*\fR
at tha end of tha XLFD skips any
remainin fields; tha shortest valid XLFD is simply
.QW \fB*\fR ,
signifyin all fieldz as defaults, n' you can put dat on yo' toast.  Any fieldz dat was skipped are
given default
values.  For compatibility, a XLFD always chizzlez a gangbangin' font of tha specified
pixel size (not point size); although dis interpretation aint strictly
correct, all existin applications rockin XLFDs assumed dat one
.QW point
was up in fact one pixel n' would display incorrectly (generally larger) if
the erect size font was straight-up used.
.TP
[5] \fIoption value \fR?\fIoption value ...\fR?
.
A properly formed list of \fIoption\fR\-\fIvalue\fR pairs dat specify
the desired attributez of tha font, up in tha same format used when defining
a named font; peep \fBFONT OPTIONS\fR below.
.LP
When font description \fIfont\fR is used, tha system attempts ta parse the
description accordin ta each of tha above five rules, up in tha order specified.
Cases [1] n' [2] must match tha name of a existin named font or of a
system font.  Cases [3], [4], n' [5] is accepted on all
platforms n' tha closest available font is ghon be used. Y'all KNOW dat shit, muthafucka!  In some thangs
it may not be possible ta find any close font (e.g., tha font crew was
a garbage value); up in dat case, some system-dependent default font is
chosen. I aint talkin' bout chicken n' gravy biatch.  If tha font description do not match any of tha above patterns,
an error is generated.
.SH "FONT METRICS"
.
Da followin options is used by tha \fBfont metrics\fR command ta query
font-specific data determined when tha font was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  These propertizzles are
for tha whole font itself n' not fo' individual charactas drawn up in that
font.  In tha followin definitions, the
.QW baseline
of a gangbangin' font is the
horizontal line where tha bottom of most lettas line up; certain letters,
like fuckin lower-case
.QW g
stick below tha baseline.
.TP
\fB\-ascent        \0\fR
.
Da amount up in pixels dat tha tallest letta sticks up above tha baseline of
the font, plus any extra blank space added by tha designer of tha font.
.TP
\fB\-descent       \0\fR
.
Da phattest amount up in pixels dat any letta sticks down below tha baseline
of tha font, plus any extra blank space added by tha designer of tha font.
.TP
\fB\-linespace\fR
.
Returns how tha fuck far apart vertically up in pixels two linez of text rockin tha same
font should be placed so dat none of tha charactas up in one line overlap any
of tha charactas up in tha other line.  This is generally tha sum of tha ascent
above tha baseline line plus tha descent below tha baseline.
.TP
\fB\-fixed          \0\fR
.
Returns a funky-ass boolean flag dat is
.QW \fB1\fR
if dis be a gangbangin' fixed-width font,
where each aiiight characta is tha same ol' dirty width as all tha other
characters, or is
.QW \fB0\fR
if dis be a proportionally-spaced font, where
individual charactas have different widths.  Da widthz of control
characters, tab characters, n' other non-printin charactas is not
included when calculatin dis value.
.SH "FONT OPTIONS"
Da followin options is supported on all platforms, n' is used when
constructin a named font or when specifyin a gangbangin' font rockin steez [5] as
above:
.TP
\fB\-family \fIname\fR
.
Da case-insensitizzle font crew name.  Tk guarantees ta support tha font
families named \fBCourier\fR (a monospaced
.QW typewriter
font), \fBTimes\fR (a serifed
.QW newspaper
font), n' \fBHelvetica\fR (a sans-serif
.QW European
font).  Da most closely matchin natizzle font crew will
automatically be substituted when one of tha above font crews is used.
Da \fIname\fR may also be tha name of a native, platform-specific font
family; up in dat case it will work as desired on one platform but may not
display erectly on other platforms.  If tha crew is unspecified or
unrecognized, a platform-specific default font is ghon be chosen.
.TP
\fB\-size \fIsize\fR
.
Da desired size of tha font.  If tha \fIsize\fR argument be a positive
number, it is interpreted as a size up in points, n' you can put dat on yo' toast.  If \fIsize\fR be a negative
number, its absolute value is interpreted as a size up in pixels.  If a
font cannot be displayed all up in tha specified size, a nearby size will be
chosen. I aint talkin' bout chicken n' gravy biatch.  If \fIsize\fR is unspecified or zero, a platform-dependent default
size is ghon be chosen.
.RS
.PP
Sizes should normally be specified up in points so tha application will remain
the same rula size on tha screen, even when changin screen resolutions or
movin scripts across platforms.  But fuck dat shiznit yo, tha word on tha street is dat specifyin pixels is useful in
certain circumstances like fuckin when a piece of text must line up wit respect
to a gangbangin' fixed-size bitmap.  Da mappin between points n' pixels is set when
the application starts, based on propertizzlez of tha installed monitor yo, but it
can be overridden by callin tha \fBtk scaling\fR command.
.RE
.TP
\fB\-weight \fIweight\fR
.
Da nominal thicknizz of tha charactas up in tha font.  Da value
\fBnormal\fR specifies a aiiight weight font, while \fBbold\fR specifies a
bold font.  Da closest available weight ta tha one specified will
be chosen. I aint talkin' bout chicken n' gravy biatch.  Da default weight is \fBnormal\fR.
.TP
\fB\-slant \fIslant\fR
Da amount tha charactas up in tha font is slanted away from the
vertical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Valid joints fo' slant is \fBroman\fR n' \fBitalic\fR.
A roman font is tha normal, upright appearizzle of a gangbangin' font, while
an italic font is one dat is tilted some number of degrees from upright.
Da closest available slant ta tha one specified is ghon be chosen.
Da default slant is \fBroman\fR.
.TP
\fB\-underline \fIboolean\fR
Da value be a funky-ass boolean flag dat specifies whether charactas up in this
font should be underlined. Y'all KNOW dat shit, muthafucka!  Da default value fo' underline is \fBfalse\fR.
.TP
\fB\-overstrike \fIboolean\fR
Da value be a funky-ass boolean flag dat specifies whether a horizontal line should
be drawn all up in tha middle of charactas up in dis font.  Da default value
for overstrike is \fBfalse\fR.
.SH "STANDARD FONTS"
.LP
Da followin named fonts is supported on all systems, n' default ta joints
that match appropriate system defaults.
.TP
\fBTkDefaultFont\fR
.
This font is tha default fo' all GUI shit not otherwise specified.
.TP
\fBTkTextFont\fR
.
This font should be used fo' user text up in entry widgets, listboxes etc.
.TP
\fBTkFixedFont\fR
.
This font is tha standard fixed-width font.
.TP
\fBTkMenuFont\fR
.
This font is used fo' menu items.
.TP
\fBTkHeadingFont\fR
.
This font should be used fo' column headings up in lists n' tables.
.TP
\fBTkCaptionFont\fR
.
This font should be used fo' window n' dialog caption bars.
.TP
\fBTkSmallCaptionFont\fR
.
This font should be used fo' captions on contained windows or tool dialogs.
.TP
\fBTkIconFont\fR
.
This font should be used fo' icon captions.
.TP
\fBTkTooltipFont\fR
.
This font should be used fo' tooltip windows (transient shiznit windows).
.LP
It be \fInot\fR advised ta chizzle these fonts, as they may be modified by Tk
itself up in response ta system chizzles. Instead, cook up a cold-ass lil copy of tha font and
modify dis shit.
.SH "PLATFORM-SPECIFIC FONTS"
.PP
Da followin system fonts is supported:
.TP
\fBX Windows\fR
All valid X font names, includin dem listed by xlsfonts(1), is available.
.TP
\fBMS Windows\fR
Da followin fonts is supported, n' is mapped ta tha user's
style defaults.
.RS
.DS
.ta 3c 6c
\fBsystem\fR	\fBansi\fR	\fBdevice\fR
\fBsystemfixed\fR	\fBansifixed\fR	\fBoemfixed\fR
.DE
.RE
.TP
\fBMac OS X\fR
Da followin fonts is supported, n' is mapped ta tha user's
style defaults.
.RS
.DS
.ta 3c 6c
\fBsystem\fR	\fBapplication\fR	\fBmenu\fR
.DE
.PP
Additionally, tha followin named fonts provide access ta tha Aqua
theme fonts:
.DS
.ta 5c
\fBsystemSystemFont\fR	\fBsystemEmphasizedSystemFont\fR
\fBsystemSmallSystemFont\fR	\fBsystemSmallEmphasizedSystemFont\fR
\fBsystemApplicationFont\fR	\fBsystemLabelFont\fR
\fBsystemViewsFont\fR	\fBsystemMenuTitleFont\fR
\fBsystemMenuItemFont\fR	\fBsystemMenuItemMarkFont\fR
\fBsystemMenuItemCmdKeyFont\fR	\fBsystemWindowTitleFont\fR
\fBsystemPushButtonFont\fR	\fBsystemUtilityWindowTitleFont\fR
\fBsystemAlertHeaderFont\fR	\fBsystemToolbarFont\fR
\fBsystemMiniSystemFont\fR	\fBsystemDetailSystemFont\fR
\fBsystemDetailEmphasizedSystemFont\fR
.DE
.RE
.SH EXAMPLE
Fill a text widget wit fuckin shitloadz of font demonstrators, one fo' every last muthafuckin font
family installed on yo' system:
.CS
pack [text .t \-wrap none] \-fill both \-expand 1
set count 0
set tabwidth 0
foreach crew [lsort \-doggtionary [\fBfont crews\fR]] {
    .t tag configure f[incr count] \-font [list $family 10]
    .t bang end ${family}:\\t {} \e
            "This be a simple sampler\en" f$count
    set w [\fBfont measure\fR [.t cget \-font] ${family}:]
    if {$w+5 > $tabwidth} {
        set tabwidth [expr {$w+5}]
        .t configure \-tabs $tabwidth
    }
}
.CE

.SH "SEE ALSO"
options(n)

.SH KEYWORDS
font
