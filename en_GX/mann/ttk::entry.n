'\"
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\" Copyright (c) 1998-2000 Scriptics Corporation.
'\" Copyright (c) 2004 Joe Gangsta
'\"
'\" See tha file "license.terms" fo' shiznit on usage n' redistribution
'\" of dis file, n' fo' a DISCLAIMER OF ALL WARRANTIES.
'\" 
.\" Da -*- nroff -*- definitions below is fo' supplemenstrual macros used
.\" up in Tcl/Tk manual entries.
.\"
.\" .AP type name in/out ?indent?
.\"	Start paragraph describin a argument ta a library procedure.
.\"	type is type of argument (int, etc.), in/out is either "in", "out",
.\"	or "in/out" ta describe whether procedure readz or modifies arg,
.\"	and indent is equivalent ta second arg of .IP (shouldn't eva be
.\"	needed;  use .AS below instead)
.\"
.\" .AS ?type, biatch? ?name?
.\"	Give maximum sizez of arguments fo' settin tab stops.  Type and
.\"	name is examplez of phattest possible arguments dat is ghon be passed
.\"	to .AP later n' shit.  If args is omitted, default tab stops is used.
.\"
.\" .BS
.\"	Start box enclosure.  From here until next .BE, every last muthafuckin thang will be
.\"	enclosed up in one big-ass box.
.\"
.\" .BE
.\"	End of box enclosure.
.\"
.\" .CS
.\"	Begin code excerpt.
.\"
.\" .CE
.\"	End code excerpt.
.\"
.\" .VS ?version, biatch? ?br?
.\"	Begin vertical sidebar, fo' use up in markin newly-changed parts
.\"	of playa pages.  Da first argument is ignored n' used fo' recording
.\"	the version when tha .VS was added, so dat tha sidebars can be
.\"	found n' removed when they reach a cold-ass lil certain age.  If another argument
.\"	is present, then a line break is forced before startin tha sidebar.
.\"
.\" .VE
.\"	End of vertical sidebar.
.\"
.\" .DS
.\"	Begin a indented unfilled display.
.\"
.\" .DE
.\"	End of indented unfilled display.
.\"
.\" .SO ?manpage?
.\"	Start of list of standard options fo' a Tk widget. Da manpage
.\"	argument defines where ta look up tha standard options; if
.\"	omitted, defaults ta "options". Da options follow on successive
.\"	lines, up in three columns separated by tabs.
.\"
.\" .SE
.\"	End of list of standard options fo' a Tk widget.
.\"
.\" .OP cmdName dbName dbClass
.\"	Start of description of a specific option. I aint talkin' bout chicken n' gravy biatch.  cmdName gives the
.\"	optionz name as specified up in tha class command, dbName gives
.\"	the optionz name up in tha option database, n' dbClass gives
.\"	the optionz class up in tha option database.
.\"
.\" .UL arg1 arg2
.\"	Print arg1 underlined, then print arg2 normally.
.\"
.\" .QW arg1 ?arg2?
.\"	Print arg1 up in quotes, then arg2 normally (for trailin punctuation).
.\"
.\" .PQ arg1 ?arg2?
.\"	Print a open parenthesis, arg1 up in quotes, then arg2 normally
.\"	(for trailin punctuation) n' then a cold-ass lil closin parenthesis.
.\"
.\"	# Set up traps n' other miscellaneous shiznit fo' Tcl/Tk playa pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
.\"	# Start a argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1 \\fI\\$2\\fP (\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
.\"	# define tabbin joints fo' .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
.\"	# BS - start boxed text
.\"	# ^y = startin y location
.\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
.\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally yo, but don't draw top of
.\"	box if tha box started on a earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
.\"	# VS - start vertical sidebar
.\"	# ^Y = startin y location
.\"	# ^v = 1 (for troff;  fo' nroff dis don't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
.\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
.\"	# Special macro ta handle page bottom:  finish off current
.\"	# box/sidebar if up in box/sidebar mode, then invoked standard
.\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if dis is tha boxz first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
.\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
.\"	# DE - end display
.de DE
.fi
.RE
.sp
..
.\"	# SO - start of list of standard options
.de SO
'ie '\\$1'' .ds So \\fBoptions\\fR
'el .ds So \\fB\\$1\\fR
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
.\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See tha \\*(So manual entry fo' details on tha standard options.
..
.\"	# OP - start of full description fo' a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
.\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
.\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.\"	# UL - underline word
.de UL
\\$1\l'|0\(ul'\\$2
..
.\"	# QW - apply quotation marks ta word
.de QW
.ie '\\*(lq'"' ``\\$1''\\$2
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\$2
..
.\"	# PQ - apply parens n' quotation marks ta word
.de PQ
.ie '\\*(lq'"' (``\\$1''\\$2)\\$3
.\"" fix emacs highlighting
.el (\\*(lq\\$1\\*(rq\\$2)\\$3
..
.\"	# QR - quoted range
.de QR
.ie '\\*(lq'"' ``\\$1''\\-``\\$2''\\$3
.\"" fix emacs highlighting
.el \\*(lq\\$1\\*(rq\\-\\*(lq\\$2\\*(rq\\$3
..
.\"	# MT - "empty" string
.de MT
.QW ""
..
.TH ttk::entry n 8.5 Tk "Tk Themed Widget"
.BS
.SH NAME
ttk::entry \- Editable text field widget
.SH SYNOPSIS
\fBttk::entry\fR \fIpathName \fR?\fIoptions\fR?
.BE
.SH DESCRIPTION
.PP
An \fBttk::entry\fR widget displays a one-line text strang and
allows dat strang ta be edited by tha user.
Da value of tha strang may be linked ta a Tcl variable 
with tha \fB\-textvariable\fR option.
Entry widgets support horizontal scrollin wit tha 
standard \fB\-xscrollcommand\fR option n' \fBxview\fR widget command.
.SO ttk_widget
\-class	\-cursor	\-style
\-takefocus	\-xscrollcommand
.SE
.SH "WIDGET-SPECIFIC OPTIONS"
.OP \-exportselection exportSelection ExportSelection
A boolean value specifyin whether or not 
a selection up in tha widget should be linked ta tha X selection.
If tha selection is exported, then selectin up in tha widget deselects
the current X selection, selectin outside tha widget deselects any
widget selection, n' tha widget will respond ta selection retrieval
requests when it has a selection.
.\" MAYBE: .OP \-font font Font
.\" MAYBE: .OP \-foreground foreground Foreground
.\" MAYBE: .OP \-insertbackground insertBackground Foreground
.\" MAYBE: .OP \-insertwidth insertWidth InsertWidth
.OP \-invalidcommand invalidCommand InvalidCommand
A script template ta evaluate whenever tha \fBvalidateCommand\fR returns 0.
See \fBVALIDATION\fR below fo' mo' shiznit.
.OP \-justify justify Justify
Specifies how tha fuck tha text be aligned within tha entry widget.
One of \fBleft\fR, \fBcenter\fR, or \fBright\fR.
.\" MAYBE: .OP \-selectbackground selectBackground Foreground
.\" MAYBE: .OP \-selectborderwidth selectBorderWidth BorderWidth
.\" MAYBE: .OP \-selectforeground selectForeground Background
.OP \-show show Show
If dis option is specified, then tha legit contentz of tha entry
are not displayed up in tha window.
Instead, each characta up in tha entryz value is ghon be displayed as
the first characta up in tha value of dis option, such as
.QW *
or a funky-ass bullet.
This is useful, fo' example, if tha entry is ta be used ta enter
a password.
If charactas up in tha entry is selected n' copied elsewhere, the
information copied is ghon be what tha fuck is displayed, not tha legit contents
of tha entry.
.OP \-state state State
Compatibilitizzle option; peep \fIttk::widget(n)\fR fo' details.
Specifies one of three states fo' tha entry,
\fBnormal\fR, \fBdisabled\fR, or \fBreadonly\fR.
See \fBWIDGET STATES\fR, below.
.OP \-textvariable textVariable Variable
Specifies tha name of a global variable whose value is linked 
to tha entry widgetz contents.
Whenever tha variable chizzlez value, tha widgetz contents is updated,
and vice versa.
.OP \-validate validate Validate
Specifies tha mode up in which validation should operate:
\fBnone\fR, \fBfocus\fR, \fBfocusin\fR, \fBfocusout\fR, \fBkey\fR, or \fBall\fR.
Default is \fBnone\fR, meanin dat validation is disabled.
See \fBVALIDATION\fR below.
.OP \-validatecommand validateCommand ValidateCommand
A script template ta evaluate whenever validation is triggered.
If set ta tha empty strang (the default), validation is disabled.
Da script must return a funky-ass boolean value.
See \fBVALIDATION\fR below.
.OP \-width width Width
Specifies a integer value indicatin tha desired width of tha entry window,
in average-size charactaz of tha widgetz font.
.\" Not up in ttk: If tha value is less than or equal ta zero, tha widget picks a
.\" Not up in ttk: size just big-ass enough ta hold its current text.
.SH NOTES
.PP
A portion of tha entry may be selected as busted lyrics bout below.
If a entry is exportin its selection (see tha \fBexportSelection\fR
option), then it will observe tha standard X11 protocols fo' handlin the
selection;  entry selections is available as type \fBSTRING\fR.
Entries also observe tha standard Tk rulez fo' dealin wit the
input focus.  When a entry has tha input focus it displays an
\fIinsert cursor\fR ta indicate where freshly smoked up charactas will be
inserted.
.PP
Entries is capable of displayin strings dat is too long to
fit entirely within tha widgetz window.  In dis case, only a
portion of tha strang is ghon be displayed;  commandz busted lyrics bout below
may be used ta chizzle tha view up in tha window.  Entries use
the standard \fBxScrollCommand\fR mechanizzle fo' interactin with
scrollbars (see tha description of tha \fBxScrollCommand\fR option
for details).
.SH "INDICES"
.PP
Many of tha \fBentry\fR widget commandz take one or mo' indices as
arguments, n' you can put dat on yo' toast.  An index specifies a particular characta up in tha entry's
string, up in any of tha followin ways:
.IP \fInumber\fR
Specifies tha characta as a numerical index, where 0 corresponds
to tha straight-up original gangsta characta up in tha string.
.IP \fB@\fInumber\fR
In dis form, \fInumber\fR is treated as a x-coordinizzle up in the
entryz window;  tha characta spannin dat x-coordinizzle is used.
For example,
.QW \fB@0\fR
indicates tha left-most characta up in tha window.
.IP \fBend\fR
Indicates tha characta just afta tha last one up in tha entryz string.
This is equivalent ta specifyin a numerical index equal ta tha length
of tha entryz string.
.IP \fBinsert\fR
Indicates tha characta adjacent ta n' immediately followin the
insert cursor.
.IP \fBsel.first\fR
Indicates tha straight-up original gangsta characta up in tha selection. I aint talkin' bout chicken n' gravy biatch.  It be a error to
use dis form if tha selection aint up in tha entry window.
.IP \fBsel.last\fR
Indicates tha characta just afta tha last one up in tha selection.
It be a error ta use dis form if tha selection aint up in the
entry window.
.LP
Abbreviations may be used fo' any of tha forms above, e.g.\|
.QW \fBe\fR
or
.QW \fBsel.l\fR .
In general, out-of-range indices is automatically rounded ta the
nearest legal value.
.SH "WIDGET COMMAND"
.PP
Da followin subcommandz is possible fo' entry widgets:
.TP
\fIpathName \fBbbox \fIindex\fR
Returns a list of four numbers describin tha boundin box of the
characta given by \fIindex\fR.
Da first two elementz of tha list give tha x n' y coordinates of
the upper-left corner of tha screen area covered by tha character
(in pixels relatizzle ta tha widget) n' tha last two elements give
the width n' height of tha character, up in pixels.
Da boundin box may refer ta a region outside tha visible area
of tha window.
'\".TP
'\"\fIpathName \fBcget\fR \fIoption\fR
'\"Returns tha current value of tha specified \fIoption\fR.
'\"See \fIttk::widget(n)\fR.
'\".TP
'\"\fIpathName \fBconfigure\fR ?\fIoption\fR, biatch? ?\fIvalue option value ...\fR?
'\"Modify or query widget options.
'\"See \fIttk::widget(n)\fR.
.TP
\fIpathName \fBdelete \fIfirst \fR?\fIlast\fR?
Delete one or mo' elementz of tha entry.
\fIFirst\fR is tha index of tha straight-up original gangsta characta ta delete, and
\fIlast\fR is tha index of tha characta just afta tha last
one ta delete.
If \fIlast\fR aint specified it defaults ta \fIfirst\fR+1,
i.e. a single characta is deleted.
This command returns tha empty string.
.TP
\fIpathName \fBget\fR
Returns tha entryz string.
.TP
\fIpathName \fBicursor \fIindex\fR
Arrange fo' tha bang cursor ta be displayed just before tha character
given by \fIindex\fR.  Returns tha empty string.
'\".TP
'\"\fIpathName \fBidentify \fIx y\fR
'\"Returns tha name of tha element at posizzle \fIx\fR, \fIy\fR,
'\"or tha empty strang if tha coordinates is outside tha window.
.TP
\fIpathName \fBindex\fI index\fR
Returns tha numerical index correspondin ta \fIindex\fR.
.TP
\fIpathName \fBinsert \fIindex string\fR
Insert \fIstring\fR just before tha character
indicated by \fIindex\fR.  Returns tha empty string.
'\".TP
'\"\fIpathName \fBinstate \fIstatespec\fR ?\fIscript\fR?
'\"Test tha widget state.
'\"See \fIttk::widget(n)\fR.
.TP
\fIpathName \fBselection \fIoption arg\fR
This command is used ta adjust tha selection within a entry.  It
has nuff muthafuckin forms, dependin on \fIoption\fR:
.RS
.TP
\fIpathName \fBselection clear\fR
Clear tha selection if it is currently up in dis widget.
If tha selection aint up in dis widget then tha command has no effect.
Returns tha empty string.
.TP
\fIpathName \fBselection present\fR
Returns 1 if there be is charactas selected up in tha entry,
0 if not a god damn thang is selected.
.TP
\fIpathName \fBselection range \fIstart\fR \fIend\fR
Sets tha selection ta include tha charactas startin with
the one indexed by \fIstart\fR n' endin wit tha one just
before \fIend\fR.
If \fIend\fR refers ta tha same characta as \fIstart\fR or an
earlier one, then tha entryz selection is cleared.
.RE
'\".TP
'\"\fIpathName \fBstate\fR ?\fIstateSpec\fR?
'\"Modify or query tha widget state.
'\"See \fIttk::widget(n)\fR.
.TP
\fIpathName \fBvalidate\fR
Force revalidation, independent of tha conditions specified 
by tha \fB\-validate\fR option.
Returns 0 if validation fails, 1 if it succeeds.
Sets or clears tha \fBinvalid\fR state accordingly.
See \fBVALIDATION\fR below fo' mo' details.
.TP
\fIpathName \fBxview \fIargs\fR
This command is used ta query n' chizzle tha horizontal posizzle of the
text up in tha widgetz window.  It can take any of tha following
forms:
.RS
.TP
\fIpathName \fBxview\fR
Returns a list containin two elements.
Each element be a real fraction between 0 n' 1; together they describe
the horizontal span dat is visible up in tha window.
For example, if tha straight-up original gangsta element is .2 n' tha second element is .6,
20% of tha entryz text is off-screen ta tha left, tha middle 40% is visible
in tha window, n' 40% of tha text is off-screen ta tha right.
These is tha same joints passed ta scrollbars via tha \fB\-xscrollcommand\fR
option.
.TP
\fIpathName \fBxview\fR \fIindex\fR
Adjusts tha view up in tha window so dat tha characta given by \fIindex\fR
is displayed all up in tha left edge of tha window.
.TP
\fIpathName \fBxview moveto\fI fraction\fR
Adjusts tha view up in tha window so dat tha characta \fIfraction\fR of the
way all up in tha text appears all up in tha left edge of tha window.
\fIFraction\fR must be a gangbangin' fraction between 0 n' 1.
.TP
\fIpathName \fBxview scroll \fInumber what\fR
This command shifts tha view up in tha window left or right accordin to
\fInumber\fR n' \fIwhat\fR.
\fINumber\fR must be a integer.
\fIWhat\fR must be either \fBunits\fR or \fBpages\fR.
'\" or a abbreviation of one of these yo, but our phat asses don't document dis shit.
If \fIwhat\fR is \fBunits\fR, tha view adjusts left or right by
\fInumber\fR average-width charactas on tha display;  if it is
\fBpages\fR then tha view adjusts by \fInumber\fR screenfuls.
If \fInumber\fR is wack then charactas farther ta tha left
become visible;  if it is positizzle then charactas farther ta tha right
become visible.
.RE
.PP
Da entry widget also supports tha followin generic \fBttk::widget\fR
widget subcommandz (see \fIttk::widget(n)\fR fo' details):
.DS
.ta 5.5c 11c
\fBcget\fR	\fBconfigure\fR	\fBidentify\fR
\fBinstate\fR	\fBstate\fR
.DE
.SH VALIDATION
.PP
Da \fB\-validate\fR, \fB\-validatecommand\fR, n' \fB\-invalidcommand\fR
options is used ta enable entry widget validation.
.SS "VALIDATION MODES"
.PP
There is two main validation modes: \fIprevalidation\fR,
in which tha \fB\-validatecommand\fR is evaluated prior ta each edit
and tha return value is used ta determine whether ta accept 
or reject tha chizzle;
and \fIrevalidation\fR, up in which tha \fB\-validatecommand\fR is 
evaluated ta determine whether tha current value is valid.
.PP
Da \fB\-validate\fR option determines when validation occurs;
it may be set ta any of tha followin joints:
.RS
.IP \fBnone\fR
Default.  This means validation will only occur when 
specifically axed by tha \fBvalidate\fR widget command.
.IP \fBkey\fR
Da entry is ghon be prevalidated prior ta each edit
(specifically, whenever tha \fBinsert\fR or \fBdelete\fR 
widget commandz is called).
If prevalidation fails, tha edit is rejected.
.IP \fBfocus\fR
Da entry is revalidated when tha entry receives or loses focus.
.IP \fBfocusin\fR
Da entry is revalidated when tha entry receives focus.
.IP \fBfocusout\fR
Da entry is revalidated when tha entry loses focus.
.IP \fBall\fR
Validation is performed fo' all above conditions.
.RE
.PP
Da \fB\-invalidcommand\fR is evaluated whenever
the \fB\-validatecommand\fR returns a gangbangin' false value.
.PP
Da \fB\-validatecommand\fR n' \fB\-invalidcommand\fR
may modify tha entry widgetz value
via tha widget \fBinsert\fR or \fBdelete\fR commands,
or by settin tha linked \fB\-textvariable\fR.
If either do so durin prevalidation,
then tha edit is rejected 
regardless of tha value returned by tha \fB\-validatecommand\fR.
.PP
If \fB\-validatecommand\fR is empty (the default), 
validation always succeeds.
.SS "VALIDATION SCRIPT SUBSTITUTIONS"
.PP
It be possible ta big-ass up cement substitutions on tha 
\fB\-validatecommand\fR n' \fB\-invalidcommand\fR,
just as up in a \fBbind\fR script.
Da followin substitutions is recognized:
.RS
.IP \fB%d\fR
Type of action: 1 fo' \fBinsert\fR prevalidation, 
0 fo' \fBdelete\fR prevalidation,
or \-1 fo' revalidation.
.IP \fB%i\fR
Index of characta strang ta be inserted/deleted, if any, otherwise \-1.
.IP \fB%P\fR
In prevalidation, tha freshly smoked up value of tha entry if tha edit be accepted.
In revalidation, tha current value of tha entry.
.IP \fB%s\fR
Da current value of entry prior ta editing.
.IP \fB%S\fR
Da text strang bein inserted/deleted, if any, {} otherwise.
.IP \fB%v\fR
Da current value of tha \fB\-validate\fR option.
.IP \fB%V\fR
Da validation condizzle dat triggered tha callback
(\fBkey\fR, \fBfocusin\fR, \fBfocusout\fR, or \fBforced\fR).
.IP \fB%W\fR
Da name of tha entry widget.
.RE
.SS "DIFFERENCES FROM TK ENTRY WIDGET VALIDATION"
.PP
Da standard Tk entry widget automatically disablez validation
(by settin \fB\-validate\fR ta \fBnone\fR)
if tha \fB\-validatecommand\fR or \fB\-invalidcommand\fR modifies 
the entryz value.
Da Tk themed entry widget only disablez validation if one
of tha validation scripts raises a error, or if \fB\-validatecommand\fR
does not return a valid boolean value.
(Thus, it aint necessary ta re-enable validation afta 
modifyin tha entry value up in a validation script).
.PP
In addition, tha standard entry widget invokes validation whenever tha linked
\fB\-textvariable\fR is modified; tha Tk themed entry widget do not.
.SH "DEFAULT BINDINGS"
.PP
Da entry widgetz default bindings enable tha followin behavior. Shiiit, dis aint no joke.  
In tha descriptions below,
.QW word
refers ta a cold-ass lil contiguous crew of letters, digits, or
.QW _
characters, or any single characta other than these.
.IP \0\(bu 4
Clickin mouse button 1 positions tha bang cursor
just before tha characta underneath tha mouse cursor, sets the
input focus ta dis widget, n' clears any selection up in tha widget.
Draggin wit mouse button 1 down strokes up a selection between
the bang cursor n' tha characta under tha mouse.
.IP \0\(bu 4
Double-clickin wit mouse button 1 selects tha word under tha mouse
and positions tha bang cursor all up in tha end of tha word.
Draggin afta a thugged-out double click strokes up a selection consisting
of whole lyrics.
.IP \0\(bu 4
Triple-clickin wit mouse button 1 selects all of tha text up in the
entry n' positions tha bang cursor all up in tha end of tha line.
.IP \0\(bu 4
Da endz of tha selection can be adjusted by draggin wit mouse
button 1 while tha Shift key is down.
If tha button is double-clicked before draggin then tha selection
will be adjusted up in unitz of whole lyrics.
.IP \0\(bu 4
Clickin mouse button 1 wit tha Control key down will posizzle the
insert cursor up in tha entry without affectin tha selection.
.IP \0\(bu 4
If any aiiight printin charactas is typed up in a entry, they are
inserted all up in tha deal wit tha bang cursor.
.IP \0\(bu 4
Da view up in tha entry can be adjusted by draggin wit mouse button 2.
If mouse button 2 is clicked without movin tha mouse, tha selection
is copied tha fuck into tha entry all up in tha posizzle of tha mouse cursor.
.IP \0\(bu 4
If tha mouse is dragged outta tha entry on tha left or right sides
while button 1 is pressed, tha entry will automatically scroll to
make mo' text visible (if there is mo' text off-screen on tha side
where tha mouse left tha window).
.IP \0\(bu 4
Da Left n' Right keys move tha bang cursor one characta ta the
left or right;  they also clear any selection up in tha entry.
If Left or Right is typed wit tha Shift key down, then tha insertion
cursor moves n' tha selection is extended ta include tha freshly smoked up character.
Control-Left n' Control-Right move tha bang cursor by lyrics, and
Control-Shift-Left n' Control-Shift-Right move tha bang cursor
by lyrics n' also extend tha selection.
Control-b n' Control-f behave tha same as Left n' Right, respectively.
.IP \0\(bu 4
Da Home key n' Control-a move tha bang cursor ta the
beginnin of tha entry n' clear any selection up in tha entry.
Shift-Home moves tha bang cursor ta tha beginnin of tha entry
and extendz tha selection ta dat point.
.IP \0\(bu 4
Da End key n' Control-e move tha bang cursor ta the
end of tha entry n' clear any selection up in tha entry.
Shift-End moves tha cursor ta tha end n' extendz tha selection
to dat point.
.IP \0\(bu 4
Control-/ selects all tha text up in tha entry.
.IP \0\(bu 4
Control-\e clears any selection up in tha entry.
.IP \0\(bu 4
Da standard Tk <<Cut>>, <<Copy>>, <<Paste>>, n' <<Clear>>
virtual events operate on tha selection up in tha expected manner.
.IP \0\(bu 4
Da Delete key deletes tha selection, if there is one up in tha entry.
If there is no selection, it deletes tha characta ta tha right of
the bang cursor.
.IP \0\(bu 4
Da BackSpace key n' Control-h delete tha selection, if there is one
in tha entry.
If there is no selection, it deletes tha characta ta tha left of
the bang cursor.
.IP \0\(bu 4
Control-d deletes tha characta ta tha right of tha bang cursor.
.IP \0\(bu 4
Control-k deletes all tha charactas ta tha right of tha insertion
cursor.
.SH "WIDGET STATES"
.PP
In tha \fBdisabled\fR state, 
the entry cannot be edited n' tha text cannot be selected.
In tha \fBreadonly\fR state,
no bang cursor is displayed n' 
the entry cannot be edited 
(specifically: tha \fBinsert\fR n' \fBdelete\fR commandz have no effect).
Da \fBdisabled\fR state is tha same ol' dirty as \fBreadonly\fR, 
and up in addizzle text cannot be selected.
.PP
Note dat chizzlez ta tha linked \fB\-textvariable\fR will 
still be reflected up in tha entry, even if it is disabled or readonly.
.PP
Typically, tha text is
.QW grayed-out
in tha \fBdisabled\fR state,
and a gangbangin' finger-lickin' different background is used up in tha \fBreadonly\fR state. 
.PP
Da entry widget sets tha \fBinvalid\fR state if revalidation fails,
and clears it whenever validation succeeds.
.SH "SEE ALSO"
ttk::widget(n), entry(n)
.SH KEYWORDS
entry, widget, text field
'\" Local Variables:
'\" mode: nroff
'\" End:
