'\" t
.\"     Title: glPolygonStipple
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLPOLYGONSTIPPLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glPolygonStipple \- set tha polygon stipplin pattern
.SH "C SPECIFICATION"
.HP \w'void\ glPolygonStipple('u
.BI "void glPolygonStipple(const\ GLubyte\ *\ " "pattern" ");"
.SH "PARAMETERS"
.PP
\fIpattern\fR
.RS 4
Specifies a pointa ta a
32 \(mu 32
stipple pattern dat is ghon be unpacked from memory up in tha same way that
\fBglDrawPixels\fR()
unpacks pixels\&.
.RE
.SH "DESCRIPTION"
.PP
Polygon stippling, like line stipplin (see
\fBglLineStipple\fR()), masks up certain fragments produced by rasterization, bustin a pattern\&. Right back up in yo muthafuckin ass. Stipplin is independent of polygon antialiasing\&.
.PP
\fIpattern\fR
is a pointa ta a
32 \(mu 32
stipple pattern dat is stored up in memory just like tha pixel data supplied ta a
\fBglDrawPixels\fR()
call with

height and
\fIwidth\fR
both equal ta 32, a pixel format of
\fBGL_COLOR_INDEX\fR, n' data type of
\fBGL_BITMAP\fR\&. That is, tha stipple pattern is represented as a
32 \(mu 32
array of 1\-bit color indices packed up in unsigned bytes\&.
\fBglPixelStore\fR()
parametas like
\fBGL_UNPACK_SWAP_BYTES\fR
and
\fBGL_UNPACK_LSB_FIRST\fR
affect tha assemblin of tha bits tha fuck into a stipple pattern\&. Pixel transfer operations (shift, offset, pixel map) is not applied ta tha stipple image, however\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a stipple pattern is specified,
\fIpattern\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.PP
To enable n' disable polygon stippling, call
\fBglEnable\fR()
and
\fBglDisable\fR()
with argument
\fBGL_POLYGON_STIPPLE\fR\&. Polygon stipplin is initially disabled\&. If it\*(Aqs enabled, a rasterized polygon fragment wit window coordinates
x w
and
y w
is busted ta tha next stage of tha GL if n' only if tha (x w % 32)th bit up in tha (y w % 32)th row of tha stipple pattern is 1 (one)\&. When polygon stipplin is disabled, it be as if tha stipple pattern consistz of all 1\*(Aqs\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha data would be unpacked from tha buffer object such dat tha memory readz required would exceed tha data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglPolygonStipple\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetPolygonStipple\fR()
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_POLYGON_STIPPLE\fR
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_UNPACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglDrawPixels\fR(),
\fBglLineStipple\fR(),
\fBglPixelStore\fR(),
\fBglPixelTransfer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
