'\" t
.\"     Title: xigrabenter
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XIGRABENTER" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XIGrabEnter, XIUngrabEnter, XIGrabFocusIn, XIUngrabFocusIn \- grab/ungrab enta or focus up in events\&.
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
int XIGrabEnter( Display *display,
                 int deviceid,
                 Window grab_window,
                 Cursor cursor,
                 int grab_mode,
                 int paired_device_mode,
                 Bool baller_events,
                 XIEventMask *mask,
                 int num_modifiers,
                 XIGrabModifiers *modifiers_inout);
.fi
.sp
.nf
int XIUngrabEnter( Display *display,
                   int deviceid,
                   Window grab_window
                   int num_modifiers,
                   XIGrabModifiers *modifiers);
.fi
.sp
.nf
int XIGrabFocusIn ( Display *display,
                    int deviceid,
                    Window grab_window
                    int grab_mode,
                    int paired_device_mode,
                    Bool baller_events,
                    XIEventMask *mask,
                    int num_modifiers,
                    XIGrabModifiers *modifiers_inout);
.fi
.sp
.nf
int XIUngrabFocusIn( Display *display,
                     int deviceid,
                     Window grab_window
                     int num_modifiers,
                     XIGrabModifiers *modifiers);
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang dat is ta be grabbed or busted out
.fi
.sp
.nf
num_modifiers
       Number of elements up in modifiers or modifiers_inout\&.
.fi
.sp
.nf
modifiers
       Specifies tha set of latched n' base modifiers or
       XIAnyModifier ta ungrab\&. Da data type is for
       consistency wit tha respectizzle grab request n' the
       status code of tha XIGrabModifiers struct is ignored\&.
.fi
.sp
.nf
modifiers_inout
       Specifies tha set of latched n' base modifiers or
       XIAnyModifier ta grab\&. Returns tha modifiers dat could
       not be grabbed n' they status code\&.
.fi
.sp
.nf
grab_window
       Specifies tha grab window\&.
.fi
.sp
.nf
baller_events
       Specifies a Boolean value dat indicates whether tha are
       ta be reported as usual or reported wit respect ta the
       grab window\&.
.fi
.sp
.nf
mask
       Specifies tha event mask\&.
.fi
.sp
.nf
grab_mode
       Specifies further processin of events from dis device\&.
       Yo ass can pass XIGrabModeSync or XIGrabModeAsync\&.
.fi
.sp
.nf
paired_device_mode
       Specifies further processin of events from tha paired
       masta device\&. Yo ass can pass XIGrabModeSync or
       XIGrabModeAsync\&. If deviceid specifies a gangbangin' floatin slave
       device, dis parameta is ignored\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
XIGrabEnta n' XIGrabFocusIn establish a passive grab\&. The
modifier thang fo' a enta grab is tha paired masta thang if
deviceid specifies a masta pointer\&. Otherwise, tha modifier
device is tha thang specified wit deviceid\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
For XIGrabEnta n' XIGrabFocusIn, up in tha future, tha thang is
actively grabbed (as fo' XIGrabDevice, tha last\-grab time is
set ta tha time at which tha pointer/focus entered window) if
the thang aint grabbed n' tha pointa has entered the
grab_window or tha focus has been set ta tha grab_window when
the specified modifier keys is logically down on tha modifier
device n' no other buttons or modifier keys is logically
down\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da interpretation of tha remainin arguments be as for
XIGrabDevice\&. Da actizzle grab is terminated automatically when
the pointa leaves tha window or tha focus is set ta a
different window (independent of tha logical state of the
modifier keys)\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha thang be a attached slave device, tha thang is
automatically detached from tha masta thang when tha grab
activates n' reattached ta tha same masta thang when the
grab deactivates\&. If tha masta thang is removed while the
device is floatin as a result of a grab, tha thang remains
floatin once tha grab deactivates\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Note dat tha logical state of a thang (as peeped by client
applications) may lag tha physical state if thang event
processin is frozen\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
This request overrides all previous grabs by tha same client of
the same type n' modifier combinations on tha same window\& fo' realz. A
modifierz of XIAnyModifier is equivalent ta issuin tha grab
request fo' all possible modifier combinations (includin the
combination of no modifiers)\&. Well shiiiit, it aint required dat all
modifiers specified have currently assigned KeyCodes\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If some other client has already issued a XIGrabEnta or
XIGrabFocusIn  on tha same window, a BadAccess error thangs up in dis biatch\&.
When rockin XIAnyModifier, tha request fails straight-up, n' a
XIBadAccess error thangs up in dis biatch (no grabs is established) if there
is a cold-ass lil conflictin grab fo' any combination\&. XIGrabEnta and
XIGrabFocusin have no effect on a actizzle grab\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
On success, XIGrabEnta n' XIGrabFocusIn return 0;
If one or mo' modifier combinations could not be grabbed,
XIGrabEnta n' XIGrabFocusIn return tha number of failed
combinations n' modifiers_inout gotz nuff tha failed combinations
and they respectizzle status codes\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIGrabEnta n' XIGrabFocusIn can generate BadDevice,
BadMatch, BadValue, n' BadWindow errors\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIUngrabEnta n' XIUngrabFocusIn releases tha passive grab on
the specified window if dat shiznit was grabbed by dis client\& fo' realz. A
modifier of XIAnyModifier is equivalent ta issuin tha ungrab
request fo' all possible modifier combinations, includin the
combination of no modifiers\&. XIUngrabEnta n' XIUngrabFocusIn
have no effect on a actizzle grab\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIUngrabEnta n' XIUngrabFocusIn can generate BadDevice,
BadMatch, BadValue n' BadWindow errors\&.
.fi
.if n \{\
.RE
.\}
.SH "RETURN VALUE"
.sp
.if n \{\
.RS 4
.\}
.nf
XIGrabEnta n' XIGrabFocusIn return tha number of modifier combination
that could not establish a passive grab\&. Da modifiers is returned in
modifiers_inout, along wit tha respectizzle error fo' dis modifier
combination\&. If XIGrabEnta or XIGrabFocusIn return zero, passive grabs
with all axed modifier combinations was established successfully\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid deviceid was specified\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadMatch
       This error may occur if XIGrabEnta specified a thugged-out device
       dat has no valuators, or XIGrabFocusIn specified a thugged-out device
       dat has no keys\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       Some numeric value falls outside tha range of joints
       accepted by tha request\&. Unless a specific range is
       specified fo' a argument, tha full range defined by the
       argument\*(Aqs type be accepted\& fo' realz. Any argument defined as a
       set of alternatives can generate dis error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadWindow
       A value fo' a Window argument do not name a thugged-out defined
       Window\&.
.fi
.if n \{\
.RE
.\}
.SH "BUGS"
.sp
.if n \{\
.RS 4
.\}
.nf
Da protocol headaz fo' XI 2\&.0 did not provide
XIGrabModeAsync or XIGrabModeSync\&. Use GrabModeSync and
GrabModeAsync instead, respectively\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XIAllowEvents(3)
.fi
.if n \{\
.RE
.\}
