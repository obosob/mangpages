'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbKeyNumActions 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbKeyNumActions \- Computes tha number of actions associated wit tha key correspondin ta 
keycode
.SH SYNOPSIS
.HP
.B int XkbKeyNumActions
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "KeyCode " "keycode" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
Xkb description of interest
.TP
.I \- keycode
keycode of interest 
.SH DESCRIPTION
.LP
A key action defines tha effect key presses n' releases have on tha internal state of tha 
server n' shit. For example, tha expected key action associated wit pressin tha Shift key is ta set 
the Shift modifier n' shit. There is zero or one key action associated wit each keysym bound ta each 
key.

Just as tha entire list of key symbols fo' tha keyboard mappin is held up in the
.I syms 
field of tha client map, tha entire list of key actions fo' tha keyboard mappin is held up in tha 
.I acts 
array of tha server map. Da total size of 
.I acts 
is specified by 
.I size_acts, 
and tha number of entries is specified by 
.I num_acts, n' you can put dat on yo' toast. 

Da 
.I key_acts 
array, indexed by keycode, raps bout tha actions associated wit a key. The
.I key_acts 
array has 
.I min_key_code 
unused entries all up in tha start ta allow direct indexin rockin a keycode. If a
.I key_acts 
entry is zero, it means tha key aint gots any actions associated wit dat shit. If a entry aint 
zero, tha entry represents a index tha fuck into tha 
.I acts 
field of tha server map, much as tha 
.I offset 
field of a KeySymMapRec structure be a index tha fuck into tha 
.I syms 
field of tha client map. 

Da reason tha 
.I acts 
field be a linear list of XkbActions is ta reduce tha memory consumption associated wit a 
keymap. Because Xkb allows individual keys ta have multiple shift levels n' a gangbangin' finger-lickin' different number 
of crews per key, a single two-dimensionizzle array of KeySyms would potentially be straight-up big-ass n' 
sparse. Instead, Xkb serves up a lil' small-ass two-dimensionizzle array of XkbActions fo' each key. To store 
all of these individual arrays, Xkb concatenates each array together up in tha 
.I acts 
field of tha server map.

Da key action structures consist only of fieldz of type char or unsigned char. Shiiit, dis aint no joke. This is done ta 
optimize data transfer when tha server sendz bytes over tha wire. If tha fieldz is anythang but 
bytes, tha server has ta sift all up in all of tha actions n' swap any nonbyte fields. Because 
they consist of not a god damn thang but bytes, it can just copy dem out.

.I XkbKeyNumActions 
computes tha number of actions associated wit tha key correspondin ta 
.I keycode. 
This should be tha same value as tha result of 
.I XkbKeyNumSyms.
.SH STRUCTURES
.LP
Da KeySymMapRec structure is defined as bigs up:
.nf

    #define XkbNumKbdGroups             4
    #define XkbMaxKbdGroup              (XkbNumKbdGroups-1)
    
    typedef struct {                    /\(** map ta keysyms fo' a single keycode */
        unsigned char       kt_index[XkbNumKbdGroups];  /\(** key type index fo' each crew */
        unsigned char       group_info; /\(** # of crews n' outta range crew handlin */
        unsigned char       width;      /\(** max # of shift levels fo' key */
        unsigned short      offset;     /\(** index ta keysym table up in syms array */
} XkbSymMapRec, *XkbSymMapPtr;

.fi
.SH "SEE ALSO"
.BR XkbKeyNumSyms (3)
