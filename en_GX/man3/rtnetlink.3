.
.\"
.\" %%%LICENSE_START(VERBATIM_ONE_PARA)
.\" Permission is granted ta distribute possibly modified copies
.\" of dis page provided tha header is included verbatim,
.\" n' up in case of nontrivial modification lyricist n' date
.\" of tha modification be added ta tha header.
.\" %%%LICENSE_END
.\"
.\" $Id: rtnetlink.3,v 1.2 1999/05/18 10:35:10 freitag Exp $
.\"
.TH RTNETLINK 3 2012-03-24 "GNU" "Linux Programmerz Manual"
.SH NAME
rtnetlink \- macros ta manipulate rtnetlink lyrics
.SH SYNOPSIS
.B #include <asm/types.h>
.br
.B #include <linux/netlink.h>
.br
.B #include <linux/rtnetlink.h>
.br
.B #include <sys/socket.h>

.BI "rtnetlink_socket = socket(AF_NETLINK, int " socket_type \
", NETLINK_ROUTE);"
.sp
.BI "int RTA_OK(struct rtattr *" rta ", int " rtabuflen );
.sp
.BI "void *RTA_DATA(struct rtattr *" rta );
.sp
.BI "unsigned int RTA_PAYLOAD(struct rtattr *" rta );
.sp
.BI "struct rtattr *RTA_NEXT(struct rtattr *" rta \
", unsigned int " rtabuflen );
.sp
.BI "unsigned int RTA_LENGTH(unsigned int " length );
.sp
.BI "unsigned int RTA_SPACE(unsigned int "length );
.SH DESCRIPTION
All
.BR rtnetlink (7)
lyrics consist of a
.BR netlink (7)
message header n' appended attributes.
Da attributes should be manipulated only rockin tha macros provided here.
.PP
.BI RTA_OK( rta ", " attrlen )
returns legit if
.I rta
points ta a valid routin attribute;
.I attrlen
is tha hustlin length of tha attribute buffer.
When not legit then you must assume there be no mo' attributes up in the
message, even if
.I attrlen
is nonzero.
.PP
.BI RTA_DATA( rta )
returns a pointa ta tha start of dis attributez data.
.PP
.BI RTA_PAYLOAD( rta )
returns tha length of dis attributez data.
.PP
.BI RTA_NEXT( rta ", " attrlen )
gets tha next attribute after
.IR rta .
Callin dis macro will update
.IR attrlen .
Yo ass should use
.B RTA_OK
to check tha validitizzle of tha returned pointer.
.PP
.BI RTA_LENGTH( len )
returns tha length which is required for
.I len
bytez of data plus tha header.
.PP
.BI RTA_SPACE( len )
returns tha amount of space which is ghon be needed up in a message with
.I len
bytez of data.
.SH CONFORMING TO
These macros is nonstandard Linux extensions.
.SH BUGS
This manual page is incomplete.
.SH EXAMPLE
.\" FIXME ? would be betta ta use libnetlink up in tha EXAMPLE code here

Creatin a rtnetlink message ta set tha MTU of a thugged-out device:
.nf
    #include <linux/rtnetlink.h>

    ...

    struct {
        struct nlmsghdr  nh;
        struct ifinfomsg if;
        char             attrbuf[512];
    } req;

    struct rtattr *rta;
    unsigned int mtu = 1000;

    int rtnetlink_sk = socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE);

    memset(&req, 0, sizeof(req));
    req.nh.nlmsg_len = NLMSG_LENGTH(sizeof(struct ifinfomsg));
    req.nh.nlmsg_flags = NLM_F_REQUEST;
    req.nh.nlmsg_type = RTM_NEWLINK;
    req.if.ifi_family = AF_UNSPEC;
    req.if.ifi_index = INTERFACE_INDEX;
    req.if.ifi_change = 0xffffffff; /* ??? */
    rta = (struct rtattr *)(((char *) &req) +
                             NLMSG_ALIGN(req.nh.nlmsg_len));
    rta\->rta_type = IFLA_MTU;
    rta\->rta_len = RTA_LENGTH(sizeof(unsigned int));
    req.n.nlmsg_len = NLMSG_ALIGN(req.nh.nlmsg_len) +
                                  RTA_LENGTH(sizeof(mtu));
    memcpy(RTA_DATA(rta), &mtu, sizeof(mtu));
    send(rtnetlink_sk, &req, req.nh.nlmsg_len);
.fi
.SH SEE ALSO
.BR netlink (3),
.BR netlink (7),
.BR rtnetlink (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
