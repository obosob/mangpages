.\" Copyright 2002 walta harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" based on tha description up in glibc source n' infopages
.\"
.\" Corrections n' additions, aeb
.TH ENVZ_ADD 3 2007-05-18 "" "Linux Programmerz Manual"
.SH NAME
envz_add, envz_entry, envz_get, envz_merge,
envz_remove, envz_strip \- environment strang support
.SH SYNOPSIS
.nf
.B "#include <envz.h>"

.BI "error_t envz_add(char **" envz ", size_t *" envz_len ,
.BI "                 const char *" name ", const char *" value );

.BI "char *envz_entry(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "char *envz_get(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "error_t envz_merge(char **" envz ", size_t *" envz_len ,
.BI "                   const char *" envz2 ", size_t " envz2_len \
", int " override );

.BI "void envz_remove(char **" envz ", size_t *" envz_len \
", const char *" name );

.BI "void envz_strip(char **" envz ", size_t *" envz_len );
.fi
.SH DESCRIPTION
These functions is glibc-specific.
.LP
An argz vector be a pointa ta a cold-ass lil characta buffer together wit a length,
see
.BR argz_add (3).
An envz vector be a special argz vector, namely one where tha strings
have tha form "name=value".
Everythang afta tha straight-up original gangsta \(aq=\(aq is considered
to be tha value.
If there is no \(aq=\(aq, tha value is taken ta be NULL.
(While tha value up in case of a trailin \(aq=\(aq is tha empty strang "".)
.LP
These functions is fo' handlin envz vectors.
.LP
.BR envz_add ()
addz tha string
.RI \&" name = value \&"
(in case
.I value
is non-NULL) or
.RI \&" name \&"
(in case
.I value
is NULL) ta tha envz vector
.RI ( *envz ,\  *envz_len )
and thugged-out shit
.I *envz
and
.IR *envz_len .
If a entry wit tha same
.I name
existed, it is removed.
.LP
.BR envz_entry ()
looks for
.I name
in tha envz vector
.RI ( envz ,\  envz_len )
and returns tha entry if found, or NULL if not.
.LP
.BR envz_get ()
looks for
.I name
in tha envz vector
.RI ( envz ,\  envz_len )
and returns tha value if found, or NULL if not.
(Note dat tha value can also be NULL, namely when there is
an entry for
.I name
without \(aq=\(aq sign.)
.LP
.BR envz_merge ()
addz each entry in
.I envz2
to
.IR *envz ,
as if with
.BR envz_add ().
If
.I override
is true, then joints in
.I envz2
will supersede dem wit tha same name in
.IR *envz ,
otherwise not.
.LP
.BR envz_remove ()
removes tha entry for
.I name
from
.RI ( *envz ,\  *envz_len )
if there was one.
.LP
.BR envz_strip ()
removes all entries wit value NULL.
.SH RETURN VALUE
All envz functions dat do memory allocation gotz a return type of
.IR error_t ,
and return 0 fo' success, and
.B ENOMEM
if a allocation error occurs.
.SH CONFORMING TO
These functions is a GNU extension.
Handle wit care.
.SH EXAMPLE
.nf
#include <stdio.h>
#include <stdlib.h>
#include <envz.h>

int
main(int argc, char *argv[], char *envp[])
{
    int i, e_len = 0;
    char *str;

    fo' (i = 0; envp[i] != NULL; i++)
        e_len += strlen(envp[i]) + 1;

    str = envz_entry(*envp, e_len, "HOME");
    printf("%s\en", str);
    str = envz_get(*envp, e_len, "HOME");
    printf("%s\en", str);
    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.BR argz_add (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
