'\" t
.\"     Title: glUseProgram
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLUSEPROGRAM" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glUseProgram \- Installs a program object as part of current renderin state
.SH "C SPECIFICATION"
.HP \w'void\ glUseProgram('u
.BI "void glUseProgram(GLuint\ " "program" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies tha handle of tha program object whose executablez is ta be used as part of current renderin state\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglUseProgram\fR
installs tha program object specified by
\fIprogram\fR
as part of current renderin state\&. One or mo' executablez is pimped up in a program object by successfully attachin shader objects ta it with
\fBglAttachShader\fR(), successfully compilin tha shader objects with
\fBglCompileShader\fR(), n' successfully linkin tha program object with
\fBglLinkProgram\fR()\&.
.PP
A program object will contain a executable dat will run on tha vertex processor if it gotz nuff one or mo' shader objectz of type
\fBGL_VERTEX_SHADER\fR
that done been successfully compiled n' linked\& fo' realz. A program object will contain a executable dat will run on tha geometry processor if it gotz nuff one or mo' shader objectz of type
\fBGL_GEOMETRY_SHADER\fR
that done been successfully compiled n' linked\&. Right back up in yo muthafuckin ass. Similarly, a program object will contain a executable dat will run on tha fragment processor if it gotz nuff one or mo' shader objectz of type
\fBGL_FRAGMENT_SHADER\fR
that done been successfully compiled n' linked\&.
.PP
While a program object is up in use, applications is free ta modify attached shader objects, compile attached shader objects, attach additionizzle shader objects, n' detach or delete shader objects\&. None of these operations will affect tha executablez dat is part of tha current state\&. But fuck dat shiznit yo, tha word on tha street is dat relinkin tha program object dat is currently up in use will install tha program object as part of tha current renderin state if tha link operation was successful (see
\fBglLinkProgram\fR()
)\&. If tha program object currently up in use is relinked unsuccessfully, its link status is ghon be set to
\fBGL_FALSE\fR yo, but tha executablez n' associated state will remain part of tha current state until a subsequent call to
\fBglUseProgram\fR
removes it from use\& fo' realz. Afta it is removed from use, it cannot be made part of current state until it has been successfully relinked\&.
.PP
If
\fIprogram\fR
is zero, then tha current renderin state refers ta an
\fIinvalid\fR
program object n' tha thangs up in dis biatch of shader execution is undefined\&. But fuck dat shiznit yo, tha word on tha street is dat dis aint a error\&.
.PP
If
\fIprogram\fR
does not contain shader objectz of type
\fBGL_FRAGMENT_SHADER\fR, a executable is ghon be installed on tha vertex, n' possibly geometry processors yo, but tha thangs up in dis biatch of fragment shader execution is ghon be undefined\&.
.SH "NOTES"
.PP
Like buffer n' texture objects, tha name space fo' program objects may be shared across a set of contexts, as long as tha server sidez of tha contexts share tha same address space\&. If tha name space is shared across contexts, any attached objects n' tha data associated wit dem attached objects is shared as well\&.
.PP
Applications is responsible fo' providin tha synchronization across API calls when objects is accessed from different execution threads\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is neither 0 nor a value generated by OpenGL\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
is not a program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
could not be made part of current state\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if transform feedback mode be active\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with tha argument
\fBGL_CURRENT_PROGRAM\fR
.PP
\fBglGetActiveAttrib\fR()
with a valid program object n' tha index of a actizzle attribute variable
.PP
\fBglGetActiveUniform\fR()
with a valid program object n' tha index of a actizzle uniform variable
.PP
\fBglGetAttachedShaders\fR()
with a valid program object
.PP
\fBglGetAttribLocation\fR()
with a valid program object n' tha name of a attribute variable
.PP
\fBglGetProgram\fR()
with a valid program object n' tha parameta ta be queried
.PP
\fBglGetProgramInfoLog\fR()
with a valid program object
.PP
\fBglGetUniform\fR()
with a valid program object n' tha location of a uniform variable
.PP
\fBglGetUniformLocation\fR()
with a valid program object n' tha name of a uniform variable
.PP
\fBglIsProgram\fR()
.SH "SEE ALSO"
.PP
\fBglAttachShader\fR(),
\fBglBindAttribLocation\fR(),
\fBglCompileShader\fR(),
\fBglCreateProgram\fR(),
\fBglDeleteProgram\fR(),
\fBglDetachShader\fR(),
\fBglLinkProgram\fR(),
\fBglUniform\fR(),
\fBglValidateProgram\fR(),
\fBglVertexAttrib\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
