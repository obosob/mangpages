'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbGetVirtualModz 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbGetVirtualModz \- Obtain a subset of tha virtual modifier bindings (the vmodz 
array) up in a keyboard description
.SH SYNOPSIS
.HP
.B Status XkbGetVirtualMods
.BI "(\^Display *" "dpy" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "XkbDescPtr " "xkb" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- dpy
connection ta server
.TP
.I \- which
mask indicatin virtual modifier bindings ta get
.TP
.I \- xkb
Xkb description where thangs up in dis biatch is ghon be placed
.SH DESCRIPTION
.LP
.I XkbGetVirtualModz 
sendz a request ta tha server ta obtain tha 
.I vmodz 
entries fo' tha virtual modifiers specified up in tha mask, 
.I which, 
and waits fo' a reply. 

Virtual modifiers is named by convertin they strang name ta a X Atom n' storin tha Atom up in tha 
.I names.vmodz 
array up in a XkbDescRec structure. Da posizzle of a name Atom up in tha 
.I names.vmodz 
array defines tha bit posizzle used ta represent tha virtual modifier n' also tha index used when 
accessin virtual modifier shiznit up in arrays: tha name up in tha i-th (0 relative) entry of 
.I names.vmodz 
is tha i-th virtual modifier, represented by tha mask (1<<i). Throughout Xkb, various functions have 
a parameta dat be a mask representin virtual modifier chizzles. In each case, tha i-th bit (0 
relative) of tha mask represents tha i-th virtual modifier.

To set tha name of a virtual modifier, use 
.I XkbSetNames, 
usin XkbVirtualModNamesMask up in 
.I which 
and tha name up in tha 
.I xkb 
argument; ta retrieve indicator names, use 
.I XkbGetNames.

For each bit set up in 
.I which, XkbGetVirtualModz 
updates tha correspondin virtual modifier definizzle up in tha 
.I server->vmodz 
array of 
.I xkb. 
Da 
.I xkb 
parameta must be a pointa ta a valid Xkb keyboard description. I aint talkin' bout chicken n' gravy biatch. If successful,
.I XkbGetVirtualModz 
returns Success.

.B Virtual Modifier Names n' Masks

Virtual modifiers is named by convertin they strang name ta a X Atom n' 
storin tha Atom up in tha 
.I names.vmodz 
array up in a XkbDescRec structure. Da posizzle of a name Atom up in tha 
.I names.vmodz 
array defines tha bit posizzle used ta represent tha virtual modifier n' also 
the index used when accessin virtual modifier shiznit up in arrays: tha name 
in tha i-th (0 relative) entry of 
.I names.vmodz 
is tha i-th virtual modifier, represented by tha mask (1<<i). Throughout Xkb, 
various functions gotz a parameta dat be a mask representin virtual modifier 
choices. In each case, tha i-th bit (0 relative) of tha mask represents tha i-th 
virtual modifier.

To set tha name of a virtual modifier, use 
.I XkbSetNames, 
usin XkbVirtualModNamesMask up in 
.I which 
and tha name up in tha 
.I xkb 
argument; ta retrieve indicator names, use 
.I XkbGetNames.

If tha 
.I server 
map has not been allocated up in tha 
.I xkb 
parameter, 
.I XkbGetVirtualModz 
allocates n' initializes it before obtainin tha virtual modifier bindings.

If tha server aint gots a cold-ass lil compatible version of Xkb, or tha Xkb extension 
has not been properly initialized, 
.I XkbGetVirtualModz 
returns BadMatch fo' realz. Any errors up in allocation cause 
.I XkbGetVirtualModz 
to return BadAlloc.
.SH "RETURN VALUES"
.TP 15
Success
Da 
.I XkbGetVirtualModz 
function returns Success when it successfully thugged-out shiznit tha correspondin virtual modifier definizzle 
in tha 
.I server->vmodz 
array of 
.I xkb. 
.SH STRUCTURES
.LP
Da complete description of a Xkb keyboard is given by a XkbDescRec. Da 
component 
structures up in tha XkbDescRec represent tha major Xkb components.

.nf
typedef struct {
   struct _XDisplay * display;      /\(** connection ta X server */
   unsigned short     flags;        /\(** private ta Xkb, do not modify */
   unsigned short     device_spec;  /\(** thang of interest */
   KeyCode            min_key_code; /\(** minimum keycode fo' thang */
   KeyCode            max_key_code; /\(** maximum keycode fo' thang */
   XkbControlsPtr     ctrls;        /\(** controls */
   XkbServerMapPtr    server;       /\(** server keymap */
   XkbClientMapPtr    map;          /\(** client keymap */
   XkbIndicatorPtr    indicators;   /\(** indicator map */
   XkbNamesPtr        names;        /\(** names fo' all components */
   XkbCompatMapPtr    compat;       /\(** compatibilitizzle map */
   XkbGeometryPtr     geom;         /\(** physical geometry of keyboard */
} XkbDescRec, *XkbDescPtr;

.fi
Da 
.I display 
field points ta a X display structure. Da 
.I flags 
field is private ta tha library: modifyin 
.I flags 
may yield unpredictable thangs up in dis biatch. Da 
.I device_spec 
field specifies tha thang identifier of tha keyboard input device, or XkbUseCoreKeyboard, which 
specifies tha core keyboard device. Da 
.I min_key_code
and 
.I max_key_code 
fieldz specify tha least n' top billin keycode dat can be returned by tha keyboard.

Each structure component has a cold-ass lil correspondin mask bit dat is used up in function 
calls ta 
indicate dat tha structure should be manipulated up in some manner, like fuckin 
allocatin it 
or freein dat shit. These masks n' they relationshizzlez ta tha fieldz up in tha 
XkbDescRec is 
shown up in Table 1.

.TS
c s s
l l l
l l l.
Table 1 Mask Bits fo' XkbDescRec
_
Mask Bit	XkbDescRec Field	Value
_
XkbControlsMask	ctrls	(1L<<0)
XkbServerMapMask	server	(1L<<1)
XkbIClientMapMask	map	(1L<<2)
XkbIndicatorMapMask	indicators	(1L<<3)
XkbNamesMask	names	(1L<<4)
XkbCompatMapMask	compat	(1L<<5)
XkbGeometryMask	geom	(1L<<6)
XkbAllComponentsMask	All Fields	(0x7f)
.TE
.SH DIAGNOSTICS
.TP 15
.B BadAlloc
Unable ta allocate storage
.TP 15
.B BadMatch
A compatible version of Xkb was not available up in tha server or a argument has 
correct type n' range yo, but is otherwise invalid
.SH "SEE ALSO"
.BR XkbGetNames (3),
.BR XkbSetNames (3)
