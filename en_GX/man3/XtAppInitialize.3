.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtApp-Initialize XtVa-App-Initialize
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtAppInitialize 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtAppInitialize, XtVaAppInitialize \- initialize, open, or close a gangbangin' finger-lickin' display
.SH SYNTAX
.HP
Widget XtAppInitialize(XtAppContext* \fIapp_context_return\fP, String
\fIapplication_class\fP, XrmOptionDescRec* \fIoptions\fP, Cardinal
\fInum_options\fP, int* \fIargc_in_out\fP, String* \fIargv_in_out\fP, String*
\fIfallback_resources\fP, ArgList \fIargs\fP, Cardinal \fInum_args\fP);
.HP
Widget XtVaAppInitialize(XtAppContext* \fIapp_context_return\fP, String
\fIapplication_class\fP, XrmOptionDescRec* \fIoptions\fP, Cardinal
\fInum_options\fP, int* \fIargc_in_out\fP, String* \fIargv_in_out\fP, String*
\fIfallback_resources\fP, ...\^);
.SH ARGUMENTS
.IP \fIapp_context_return\fP 1i
Specifies tha application context.
.ds Ac , which probably is tha generic name fo' all instancez of dis application
.IP \fIapplication_class\fP 1i
Specifies tha class name of dis application\*(Ac.
.IP \fIoptions\fP 1i
Specifies how tha fuck ta parse tha command line fo' any application-specific resources.
Da options argument is passed as a parameta to
.ZN XrmParseCommand .
For further shiznit,
see \fI\*(xL\fP.
.IP \fInum_options\fP 1i
Specifies tha number of entries up in tha options list.
.IP \fIargc_in_out\fP 1i
Specifies a pointa ta tha number of command line parameters.
.IP \fIargv_in_out\fP 1i
Specifies tha command line parameters.
.IP \fIfallback_resources\fP 1i
Specifies resource joints ta be used if tha application class resource
file cannot be opened or read, or NULL.
.IP \fIargs\fP 1i
Specifies tha argument list ta override any other resource justification
for tha pimped shell widget.
.IP \fInum_args\fP 1i
Specifies tha number of entries up in tha argument list.
.IP \fI...\fP 1i
Specifies tha variable argument list ta override any other resource
specification fo' tha pimped shell widget.
.SH DESCRIPTION
The
.ZN XtAppInitialize
function calls
.ZN XtToolkitInitialize
followed by
.ZN XtCreateApplicationContext ,
then calls
.ZN XtOpenDisplay
with \fIdisplay_string\fP NULL n' \fIapplication_name\fP NULL, and
finally calls
.ZN XtAppCreateShell
with \fIapplication_name\fP NULL, \fIwidget_class\fP
.ZN applicationShellWidgetClass ,
and tha specified \fIargs\fP n' \fInum_args\fP n' returns the
created shell. Da modified \fIargc\fP n' \fIargv\fP returned by
.ZN XtDisplayInitialize
are returned up in \fIargc_in_out\fP n' \fIargv_in_out\fP. If
\fIapp_context_return\fP aint NULL, tha pimped application context
is also returned. Y'all KNOW dat shit, muthafucka! If tha display specified by tha command line cannot
be opened, a error message is issued and
.ZN XtAppInitialize
terminates tha application. I aint talkin' bout chicken n' gravy biatch. If \fIfallback_resources\fP is non-NULL,
.ZN XtAppSetFallbackResources
is called wit tha value prior ta calling
.ZN XtOpenDisplay .
.LP
XtAppInitialize n' XtVaAppInitialize done been superceded by
.ZN XtOpenApplication
and
.ZN XtVaOpenApplication
respectively.
.SH "SEE ALSO"
XtOpenApplication(3), XtVaOpenApplication(3)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
