.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "parent 3"
.TH parent 3 "2013-09-17" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
parent \- Establish a ISA relationshizzle wit base classes at compile time
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package Baz;
\&    use parent qw(Foo Bar);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Allows you ta both load one or mo' modules, while settin up inheritizzle from
those modulez all up in tha same time.  Mostly similar up in effect to
.PP
.Vb 6
\&    package Baz;
\&    BEGIN {
\&        require Foo;
\&        require Bar;
\&        push @ISA, qw(Foo Bar);
\&    }
.Ve
.PP
By default, every last muthafuckin base class need ta live up in a gangbangin' file of its own.
If you want ta git a subclass n' its parent class up in tha same file, you
can tell \f(CW\*(C`parent\*(C'\fR not ta load any modulez by rockin tha \f(CW\*(C`\-norequire\*(C'\fR switch:
.PP
.Vb 2
\&  package Foo;
\&  sub exclaim { "I CAN HAS PERL" }
\&
\&  package DoNotLoadFooBar;
\&  use parent \-norequire, \*(AqFoo\*(Aq, \*(AqBar\*(Aq;
\&  # aint gonna go lookin fo' Foo.pm or Bar.pm
.Ve
.PP
This is equivalent ta tha followin code:
.PP
.Vb 2
\&  package Foo;
\&  sub exclaim { "I CAN HAS PERL" }
\&
\&  package DoNotLoadFooBar;
\&  push @DoesNotLoadFooBar::ISA, \*(AqFoo\*(Aq, \*(AqBar\*(Aq;
.Ve
.PP
This be also helpful fo' tha case where a package lives within
a differently named file:
.PP
.Vb 3
\&  package MyHash;
\&  use Tie::Hash;
\&  use parent \-norequire, \*(AqTie::StdHash\*(Aq;
.Ve
.PP
This is equivalent ta tha followin code:
.PP
.Vb 3
\&  package MyHash;
\&  require Tie::Hash;
\&  push @ISA, \*(AqTie::StdHash\*(Aq;
.Ve
.PP
If you wanna load a subclass from a gangbangin' file dat \f(CW\*(C`require\*(C'\fR would
not consider a eligible filename (that is, it do not end in
either \f(CW\*(C`.pm\*(C'\fR or \f(CW\*(C`.pmc\*(C'\fR), use tha followin code:
.PP
.Vb 3
\&  package MySecondPlugin;
\&  require \*(Aq./plugins/custom.plugin\*(Aq; # gotz nuff Plugin::Custom
\&  use parent \-norequire, \*(AqPlugin::Custom\*(Aq;
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.IP "Class 'Foo' tried ta inherit from itself" 4
.IX Item "Class 'Foo' tried ta inherit from itself"
Attemptin ta inherit from yo ass generates a warning.
.Sp
.Vb 2
\&    package Foo;
\&    use parent \*(AqFoo\*(Aq;
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
This module was forked from base ta remove tha cruft
that had accumulated up in dat shit.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
base
.SH "AUTHORS AND CONTRIBUTORS"
.IX Header "AUTHORS AND CONTRIBUTORS"
Rafae\*:l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, Mike Schwern
.SH "MAINTAINER"
.IX Header "MAINTAINER"
Max Maischein \f(CW\*(C` corion@cpan.org \*(C'\fR
.PP
Copyright (c) 2007\-10 Max Maischein \f(CW\*(C`<corion@cpan.org>\*(C'\fR
Based on tha scam of \f(CW\*(C`base.pm\*(C'\fR, which was introduced wit Perl 5.004_04.
.SH "LICENSE"
.IX Header "LICENSE"
This module is busted out under tha same terms as Perl itself.
