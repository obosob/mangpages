'\" t
.\"     Title: glEnable
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLENABLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glEnable \- enable or disable server\-side GL capabilities
.SH "C SPECIFICATION"
.HP \w'void\ glEnable('u
.BI "void glEnable(GLenum\ " "cap" ");"
.SH "PARAMETERS"
.PP
\fIcap\fR
.RS 4
Specifies a symbolic constant indicatin a GL capability\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glDisable('u
.BI "void glDisable(GLenum\ " "cap" ");"
.SH "PARAMETERS"
.PP
\fIcap\fR
.RS 4
Specifies a symbolic constant indicatin a GL capability\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glEnablei('u
.BI "void glEnablei(GLenum\ " "cap" ", GLuint\ " "index" ");"
.SH "PARAMETERS"
.PP
\fIcap\fR
.RS 4
Specifies a symbolic constant indicatin a GL capability\&.
.RE
.PP
\fIindex\fR
.RS 4
Specifies tha index of tha swtich ta enable\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glDisablei('u
.BI "void glDisablei(GLenum\ " "cap" ", GLuint\ " "index" ");"
.SH "PARAMETERS"
.PP
\fIcap\fR
.RS 4
Specifies a symbolic constant indicatin a GL capability\&.
.RE
.PP
\fIindex\fR
.RS 4
Specifies tha index of tha swtich ta disable\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglEnable\fR
and
\fBglDisable\fR()
enable n' disable various capabilities\&. Use
\fBglIsEnabled\fR()
or
\fBglGet\fR()
to determine tha current settin of any capability\&. Da initial value fo' each capabilitizzle wit tha exception of
\fBGL_DITHER\fR
and
\fBGL_MULTISAMPLE\fR
is
\fBGL_FALSE\fR\&. Da initial value for
\fBGL_DITHER\fR
and
\fBGL_MULTISAMPLE\fR
is
\fBGL_TRUE\fR\&.
.PP
Both
\fBglEnable\fR
and
\fBglDisable\fR()
take a single argument,
\fIcap\fR, which can assume one of tha followin joints:
.PP
Some of tha GL\*(Aqs capabilitizzles is indexed\&.
\fBglEnablei\fR
and
\fBglDisablei\fR
enable n' disable indexed capabilities\&.
.PP
\fBGL_BLEND\fR
.RS 4
.sp
If enabled, blend tha computed fragment color joints wit tha joints up in tha color buffers\&. Right back up in yo muthafuckin ass. See
\fBglBlendFunc\fR()\&.
.RE
.PP
\fBGL_CLIP_DISTANCE\fR\fIi\fR
.RS 4
.sp
If enabled, clip geometry against user\-defined half space
\fIi\fR\&.
.RE
.PP
\fBGL_COLOR_LOGIC_OP\fR
.RS 4
.sp
If enabled, apply tha currently selected logical operation ta tha computed fragment color n' color buffer joints\&. Right back up in yo muthafuckin ass. See
\fBglLogicOp\fR()\&.
.RE
.PP
\fBGL_CULL_FACE\fR
.RS 4
.sp
If enabled, cull polygons based on they windin up in window coordinates\&. Right back up in yo muthafuckin ass. See
\fBglCullFace\fR()\&.
.RE
.PP
\fBGL_DEBUG_OUTPUT\fR
.RS 4
.sp
If enabled, debug lyrics is produced by a thugged-out debug context\&. When disabled, tha debug message log is silenced\&. Note dat up in a non\-debug context, straight-up few, if any lyrics might be produced, even when
\fBGL_DEBUG_OUTPUT\fR
is enabled\&.
.RE
.PP
\fBGL_DEBUG_OUTPUT_SYNCHRONOUS\fR
.RS 4
.sp
If enabled, debug lyrics is produced synchronously by a thugged-out debug context\&. If disabled, debug lyrics may be produced asynchronously\&. In particular, they may be delayed relatizzle ta tha execution of GL commands, n' tha debug callback function may be called from a thread other than dat up in which tha commandz is executed\&. Right back up in yo muthafuckin ass. See
\fBglDebugMessageCallback\fR()\&.
.RE
.PP
\fBGL_DEPTH_CLAMP\fR
.RS 4
.sp
If enabled, the
\-wc≤zc≤wc
plane equation is ignored by view volume clippin (effectively, there is no near or far plane clipping)\&. Right back up in yo muthafuckin ass. See
\fBglDepthRange\fR()\&.
.RE
.PP
\fBGL_DEPTH_TEST\fR
.RS 4
.sp
If enabled, do depth comparisons n' update tha depth buffer\&. Note dat even if tha depth buffer exists n' tha depth mask is non\-zero, tha depth buffer aint updated if tha depth test is disabled\&. Right back up in yo muthafuckin ass. See
\fBglDepthFunc\fR()
and
\fBglDepthRange\fR()\&.
.RE
.PP
\fBGL_DITHER\fR
.RS 4
.sp
If enabled, dither color components or indices before they is freestyled ta tha color buffer\&.
.RE
.PP
\fBGL_FRAMEBUFFER_SRGB\fR
.RS 4
.sp
If enabled n' tha value of
\fBGL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\fR
for tha framebuffer attachment correspondin ta tha destination buffer is
\fBGL_SRGB\fR, tha R, G, n' B destination color joints (afta conversion from fixed\-point ta floating\-point) is considered ta be encoded fo' tha sRGB color space n' hence is linearized prior ta they use up in blending\&.
.RE
.PP
\fBGL_LINE_SMOOTH\fR
.RS 4
.sp
If enabled, draw lines wit erect filtering\&. Otherwise, draw aliased lines\&. Right back up in yo muthafuckin ass. See
\fBglLineWidth\fR()\&.
.RE
.PP
\fBGL_MULTISAMPLE\fR
.RS 4
.sp
If enabled, use multiple fragment samplez up in computin tha final color of a pixel\&. Right back up in yo muthafuckin ass. See
\fBglSampleCoverage\fR()\&.
.RE
.PP
\fBGL_POLYGON_OFFSET_FILL\fR
.RS 4
.sp
If enabled, n' if tha polygon is rendered in
\fBGL_FILL\fR
mode, a offset be added ta depth jointz of a polygon\*(Aqs fragments before tha depth comparison is performed\&. Right back up in yo muthafuckin ass. See
\fBglPolygonOffset\fR()\&.
.RE
.PP
\fBGL_POLYGON_OFFSET_LINE\fR
.RS 4
.sp
If enabled, n' if tha polygon is rendered in
\fBGL_LINE\fR
mode, a offset be added ta depth jointz of a polygon\*(Aqs fragments before tha depth comparison is performed\&. Right back up in yo muthafuckin ass. See
\fBglPolygonOffset\fR()\&.
.RE
.PP
\fBGL_POLYGON_OFFSET_POINT\fR
.RS 4
.sp
If enabled, a offset be added ta depth jointz of a polygon\*(Aqs fragments before tha depth comparison is performed, if tha polygon is rendered in
\fBGL_POINT\fR
mode\&. Right back up in yo muthafuckin ass. See
\fBglPolygonOffset\fR()\&.
.RE
.PP
\fBGL_POLYGON_SMOOTH\fR
.RS 4
.sp
If enabled, draw polygons wit proper filtering\&. Otherwise, draw aliased polygons\&. For erect antialiased polygons, a alpha buffer is needed n' tha polygons must be sorted front ta back\&.
.RE
.PP
\fBGL_PRIMITIVE_RESTART\fR
.RS 4
.sp
Enablez primitizzle restarting\&. If enabled, any one of tha draw commandz which transfers a set of generic attribute array elements ta tha GL will restart tha primitizzle when tha index of tha vertex is equal ta tha primitizzle restart index\&. Right back up in yo muthafuckin ass. See
\fBglPrimitiveRestartIndex\fR()\&.
.RE
.PP
\fBGL_PRIMITIVE_RESTART_FIXED_INDEX\fR
.RS 4
.sp
Enablez primitizzle restartin wit a gangbangin' fixed index\&. If enabled, any one of tha draw commandz which transfers a set of generic attribute array elements ta tha GL will restart tha primitizzle when tha index of tha vertex is equal ta tha fixed primitizzle index fo' tha specified index type\&. Da fixed index is equal to
2n−1
where
\fIn\fR
is equal ta 8 for
\fBGL_UNSIGNED_BYTE\fR, 16 for
\fBGL_UNSIGNED_SHORT\fR
and 32 for
\fBGL_UNSIGNED_INT\fR\&.
.RE
.PP
\fBGL_SAMPLE_ALPHA_TO_COVERAGE\fR
.RS 4
.sp
If enabled, compute a temporary coverage value where each bit is determined by tha alpha value all up in tha correspondin sample location\&. Da temporary coverage value is then ANDed wit tha fragment coverage value\&.
.RE
.PP
\fBGL_SAMPLE_ALPHA_TO_ONE\fR
.RS 4
.sp
If enabled, each sample alpha value is replaced by tha maximum representable alpha value\&.
.RE
.PP
\fBGL_SAMPLE_COVERAGE\fR
.RS 4
.sp
If enabled, tha fragment\*(Aqs coverage is ANDed wit tha temporary coverage value\&. If
\fBGL_SAMPLE_COVERAGE_INVERT\fR
is set to
\fBGL_TRUE\fR, invert tha coverage value\&. Right back up in yo muthafuckin ass. See
\fBglSampleCoverage\fR()\&.
.RE
.PP
\fBGL_SAMPLE_SHADING\fR
.RS 4
.sp
If enabled, tha actizzle fragment shader is run once fo' each covered sample, or at fraction of dis rate as determined by tha current value of
\fBGL_MIN_SAMPLE_SHADING_VALUE\fR\&. Right back up in yo muthafuckin ass. See
\fBglMinSampleShading\fR()\&.
.RE
.PP
\fBGL_SAMPLE_MASK\fR
.RS 4
.sp
If enabled, tha sample coverage mask generated fo' a gangbangin' fragment durin rasterization is ghon be ANDed wit tha value of
\fBGL_SAMPLE_MASK_VALUE\fR
before shadin occurs\&. Right back up in yo muthafuckin ass. See
\fBglSampleMaski\fR()\&.
.RE
.PP
\fBGL_SCISSOR_TEST\fR
.RS 4
.sp
If enabled, discard fragments dat is outside tha scissor rectangle\&. Right back up in yo muthafuckin ass. See
\fBglScissor\fR()\&.
.RE
.PP
\fBGL_STENCIL_TEST\fR
.RS 4
.sp
If enabled, do stencil testin n' update tha stencil buffer\&. Right back up in yo muthafuckin ass. See
\fBglStencilFunc\fR()
and
\fBglStencilOp\fR()\&.
.RE
.PP
\fBGL_TEXTURE_CUBE_MAP_SEAMLESS\fR
.RS 4
.sp
If enabled, cubemap textures is sampled such dat when linearly samplin from tha border between two adjacent faces, texels from both faces is used ta generate tha final sample value\&. When disabled, texels from only a single grill is used ta construct tha final sample value\&.
.RE
.PP
\fBGL_PROGRAM_POINT_SIZE\fR
.RS 4
.sp
If enabled n' a vertex or geometry shader be active, then tha derived point size is taken from tha (potentially clipped) shader builtin
\fBgl_PointSize\fR
and clamped ta tha implementation\-dependent point size range\&.
.RE
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIcap\fR
is not one of tha joints listed previously\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated by
\fBglEnablei\fR
and
\fBglDisablei\fR
if
\fIindex\fR
is pimped outa than or equal ta tha number of indexed capabilitizzles for
\fIcap\fR\&.
.SH "NOTES"
.PP
\fBGL_PRIMITIVE_RESTART\fR
is available only if tha GL version is 3\&.1 or pimped outer\&.
.PP
\fBGL_TEXTURE_CUBE_MAP_SEAMLESS\fR
is available only if tha GL version is 3\&.2 or pimped outer\&.
.PP
\fBGL_PRIMITIVE_RESTART_FIXED_INDEX\fR
is available only if tha GL version is 4\&.3 or pimped outer\&.
.PP
\fBGL_DEBUG_OUTPUT\fR
and
\fBGL_DEBUG_OUTPUT_SYNCHRONOUS\fR
are available only if tha GL version is 4\&.3 or pimped outer\&.
.PP
Any token accepted by
\fBglEnable\fR
or
\fBglDisable\fR
is also accepted by
\fBglEnablei\fR
and
\fBglDisablei\fR yo, but if tha capabilitizzle aint indexed, tha maximum value that
\fIindex\fR
may take is zero\&.
.PP
In general, passin a indexed capabilitizzle to
\fBglEnable\fR
or
\fBglDisable\fR
will enable or disable dat capabilitizzle fo' all indices, resepectively\&.
.SH "ASSOCIATED GETS"
.PP
\fBglIsEnabled\fR()
.PP
\fBglGet\fR()
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglBlendFunc\fR(),
\fBglCullFace\fR(),
\fBglDepthFunc\fR(),
\fBglDepthRange\fR(),
\fBglGet\fR(),
\fBglIsEnabled\fR(),
\fBglLineWidth\fR(),
\fBglLogicOp\fR(),
\fBglPointSize\fR(),
\fBglPolygonMode\fR(),
\fBglPolygonOffset\fR(),
\fBglSampleCoverage\fR(),
\fBglScissor\fR(),
\fBglStencilFunc\fR(),
\fBglStencilOp\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. Copyright
\(co
2010\-2011 Khronos Group\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
