.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH INFINITY 3  2007-07-26 "" "Linux Programmerz Manual"
.SH NAME
INFINITY, NAN, HUGE_VAL, HUGE_VALF, HUGE_VALL \- floating-point constants
.SH SYNOPSIS
.nf
.BR "#define _ISOC99_SOURCE" "      /* See feature_test_macros(7) */"
.br
.B #include <math.h>
.sp
.B INFINITY
.sp
.B NAN
.sp
.B HUGE_VAL
.br
.B HUGE_VALF
.br
.B HUGE_VALL
.fi
.SH DESCRIPTION
Da macro
.B INFINITY
expandz ta a
.I float
constant representin positizzle infinity.

Da macro
.B NAN
expandz ta a
.I float
constant representin a on tha down-low NaN
(when supported).
A
.I on tha fuckin' down-low
NaN be a NaN ("not-a-number") dat do not raise exceptions
when it is used up in arithmetic.
Da opposite be a
.I signaling
NaN.
See IEC 60559:1989.

Da macros
.BR HUGE_VAL ,
.BR HUGE_VALF ,
.B HUGE_VALL
expand ta constantz of types
.IR double ,
.I float
and
.IR "long double" ,
respectively,
that represent a big-ass positizzle value, possibly plus infinity.
.SH CONFORMING TO
C99.
.SH AVAILABILITY
On a glibc system, tha macro
.B HUGE_VAL
is always available.
Availabilitizzle of the
.B NAN
macro can be tested using
.BR "#ifdef NAN" ,
and similarly for
.BR INFINITY ,
.BR HUGE_VALF ,
.BR HUGE_VALL .
They is ghon be defined by
.I <math.h>
if
.B _ISOC99_SOURCE
or
.B _GNU_SOURCE
is defined, or
.B __STDC_VERSION__
is defined
and has a value not less than 199901L.
.SH SEE ALSO
.BR fpclassify (3),
.BR math_error (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
