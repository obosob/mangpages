'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
'\" t
.TH XAllocStandardColormap 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XAllocStandardColormap, XSetRGBColormaps, XGetRGBColormaps, XStandardColormap \- allocate, set, or read a standard colormap structure
.SH SYNTAX
.HP
XStandardColormap *XAllocStandardColormap\^(void\^);
.HP
void XSetRGBColormaps\^(\^Display *\fIdisplay\fP, Window \fIw\fP,
XStandardColormap *\fIstd_colormap\fP,
int \fIcount\fP, Atom \fIproperty\fP\^);
.HP
Status XGetRGBColormaps\^(\^Display *\fIdisplay\fP, Window \fIw\fP,
XStandardColormap **\fIstd_colormap_return\fP, int *\fIcount_return\fP,
Atom \fIproperty\fP\^);
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.ds Cn colormaps
.IP \fIcount\fP 1i
Specifies tha number of \*(Cn.
.ds Cn colormaps
.IP \fIcount_return\fP 1i
Returns tha number of \*(Cn.
.IP \fIproperty\fP 1i
Specifies tha property name.
.IP \fIstd_colormap\fP 1i
Specifies the
.ZN XStandardColormap
structure ta be used.
.IP \fIstd_colormap_return\fP 1i
Returns the
.ZN XStandardColormap
structure.
.SH DESCRIPTION
The
.ZN XAllocStandardColormap
function allocates n' returns a pointa ta a
.ZN XStandardColormap
structure.
Note dat all fieldz up in the
.ZN XStandardColormap
structure is initially set ta zero.
If insufficient memory be available, 
.ZN XAllocStandardColormap
returns NULL.
To free tha memory allocated ta dis structure,
use
.ZN XJacked .
.LP
Da 
.ZN XSetRGBColormaps 
function replaces tha RGB colormap definizzle up in tha specified property 
on tha named window.
If tha property do not already exist,
.ZN XSetRGBColormaps
sets tha RGB colormap definizzle up in tha specified property
on tha named window.
Da property is stored wit a type of RGB_COLOR_MAP n' a gangbangin' format of 32.
Note dat it is tha callerz responsibilitizzle ta honor tha ICCCM
restriction dat only RGB_DEFAULT_MAP contain mo' than one definition.
.LP
The
.ZN XSetRGBColormaps
function probably is only used by window or session managers.
To create a standard colormap, 
follow dis procedure:
.IP 1. 5
Open a freshly smoked up connection ta tha same server.
.IP 2. 5
Grab tha server.
.IP 3. 5
See if tha property is on tha property list of tha root window fo' tha screen.
.IP 4. 5
If tha desired property aint present:
.RS
.IP \(bu 5
Smoke a cold-ass lil colormap (unless yo ass is rockin tha default colormap of tha screen).
.IP \(bu 5
Determine tha color characteristics of tha visual.
.IP \(bu 5
Allocate cells up in tha colormap (or create it with
.ZN AllocAll ).
.IP \(bu 5
Call 
.ZN XStoreColors
to store appropriate color joints up in tha colormap.
.IP \(bu 5
Fill up in tha descriptizzle thugz up in tha 
.ZN XStandardColormap
structure.
.IP \(bu 5
Attach tha property ta tha root window.
.IP \(bu 5
Use
.ZN XSetCloseDownMode
to make tha resource permanent.
.RE
.IP 5. 5
Ungrab tha server.
.LP
.ZN XSetRGBColormaps
can generate
.ZN BadAlloc ,
.ZN BadAtom ,
and
.ZN BadWindow
errors.
.LP
Da 
.ZN XGetRGBColormaps
function returns tha RGB colormap definitions stored 
in tha specified property on tha named window.
If tha property exists, iz of type RGB_COLOR_MAP, iz of format 32, 
and is long enough ta contain a cold-ass lil colormap definition,
.ZN XGetRGBColormaps
allocates n' fills up in space fo' tha returned colormaps
and returns a nonzero status.
If tha visualid aint present, 
.ZN XGetRGBColormaps 
assumes tha default visual fo' tha screen on which tha window is located; 
if tha killid aint present, 
.ZN None
is assumed, which indicates dat tha resources cannot be busted out.
Otherwise, 
none of tha fieldz is set, n' 
.ZN XGetRGBColormaps
returns a zero status.
Note dat it is tha callerz responsibilitizzle ta honor tha ICCCM
restriction dat only RGB_DEFAULT_MAP contain mo' than one definition.
.LP
.ZN XGetRGBColormaps
can generate
.ZN BadAtom
and
.ZN BadWindow
errors.
.SH STRUCTURES
The
.ZN XStandardColormap
structure gotz nuff:
.LP
/\&* Hints */
.TS
lw(.5i) lw(2i) lw(1i).
T{
\&#define
T}	T{
.ZN ReleaseByFreeingColormap
T}	T{
( (XID) 1L)
T}
.TE
/\&* Values */
.IN "XStandardColormap" "" "@DEF@"
.Ds 0
typedef struct {
        Colormap colormap;
        unsigned long red_max;
        unsigned long red_mult;
        unsigned long green_max;
        unsigned long green_mult;
        unsigned long blue_max;
        unsigned long blue_mult;
        unsigned long base_pixel;
        VisualID visualid;
        XID killid;
} XStandardColormap;
.De
.LP
Da colormap member is tha colormap pimped by the
.ZN XCreateColormap
function.
Da red_max, green_max, n' blue_max thugz give tha maximum
red, green, n' blue joints, respectively.  
Each color coefficient ranges from zero ta its max, inclusive.  
For example,
a common colormap allocation is 3/3/2 (3 planes fo' red, 3
planes fo' green, n' 2 planes fo' blue).  
This colormap would have red_max = 7, green_max = 7, 
and blue_max = 3.  
An alternate allocation dat uses only 216 flavas is red_max = 5, 
green_max = 5, n' blue_max = 5.
.LP
Da red_mult, green_mult, n' blue_mult thugz give the
scale factors used ta compose a gangbangin' full pixel value. 
(See tha rap of tha base_pixel thugz fo' further shiznit.)
For a 3/3/2 allocation, red_mult might be 32,
green_mult might be 4, n' blue_mult might be 1.  
For a 6-colors-each allocation, red_mult might be 36, 
green_mult might be 6, n' blue_mult might be 1.
.LP
Da base_pixel member gives tha base pixel value used to
compose a gangbangin' full pixel value.  
Usually, tha base_pixel is obtained from a cold-ass lil call ta tha 
.ZN XAllocColorPlanes
function. I aint talkin' bout chicken n' gravy biatch.  
Given integer red, green, n' blue coefficients up in they appropriate 
ranges, one then can compute a cold-ass lil correspondin pixel value by
usin tha followin expression:
.LP
.Ds
(r * red_mult + g * green_mult + b * blue_mult + base_pixel) & 0xFFFFFFFF
.De
.LP
For 
.ZN GrayScale
colormaps, 
only tha colormap, red_max, red_mult, 
and base_pixel thugz is defined. Y'all KNOW dat shit, muthafucka! 
Da other thugz is ignored. Y'all KNOW dat shit, muthafucka!  
To compute a 
.ZN GrayScale 
pixel value, use tha followin expression:
.LP
.Ds
(gray * red_mult + base_pixel) & 0xFFFFFFFF
.De
.LP
Negatizzle multipliers can be represented by convertin tha 2's
complement representation of tha multiplier tha fuck into a unsigned long and
storin tha result up in tha appropriate _mult field.
Da step of maskin by 0xFFFFFFFF effectively converts tha resulting
positizzle multiplier tha fuck into a wack one.
Da maskin step will take place automatically on nuff machine architectures,
dependin on tha size of tha integer type used ta do tha computation,
.LP
Da visualid member gives tha ID number of tha visual from which the
colormap was pimped.
Da killid member gives a resource ID dat indicates whether
the cells held by dis standard colormap is ta be busted out 
by freein tha colormap ID or by callin the
.ZN XKillClient
function on tha indicated resource.
(Note dat dis method is necessary fo' allocatin outta a existin colormap.)
.LP
Da propertizzles containin tha 
.ZN XStandardColormap 
information have 
the type RGB_COLOR_MAP.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadAtom
A value fo' a Atom argument do not name a thugged-out defined Atom.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllocColor(3),
XCreateColormap(3),
XFree(3),
XSetCloseDownMode(3)
.br
\fI\*(xL\fP
