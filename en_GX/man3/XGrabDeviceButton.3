'\" t
.\"     Title: xgrabdevicebutton
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XGRABDEVICEBUTTON" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XGrabDeviceButton, XUngrabDeviceButton \- grab/ungrab extension input thang buttons
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
int XGrabDeviceButton( Display *display,
                       XDevice *device,
                       unsigned int button,
                       unsigned int modifiers,
                       XDevice* modifier_device,
                       Window grab_window,
                       Bool baller_events,
                       unsigned int event_count,
                       XEventClass *event_list,
                       int this_device_mode,
                       int other_devices_mode);
.fi
.sp
.nf
int XUngrabDeviceButton( Display *display,
                         XDevice *device,
                         unsigned int button,
                         unsigned int modifiers,
                         XDevice* modifier_device,
                         Window grab_window);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang dat is ta be grabbed or busted out
.fi
.sp
.nf
button
       Specifies tha thang button dat is ta be grabbed or
       busted out or AnyButton\&.
.fi
.sp
.nf
modifiers
       Specifies tha set of keymasks or AnyModifier\&.Da mask is
       tha bitwise inclusive OR of tha valid keymask bits\&.
       Valid bits are: Shiftmask, LockMask, ControlMask,
       Mod1Mask, Mod2Mask,Mod3Mask, Mod4Mask, Mod5Mask\&.
.fi
.sp
.nf
modifier_device
       specifies tha thang whose modifiers is ta be used\&. If
       tha modifier_devicespecified is NULL, tha X keyboard
       is ghon be used as tha modifier_device\&.
.fi
.sp
.nf
grab_window
       Specifies tha grab window\&.
.fi
.sp
.nf
baller_events
       Specifies a Boolean value dat indicates whether the
       deviceevents is ta be reported as usual or reported
       wit respect ta tha grab windowif selected by tha event
       list\&.
.fi
.sp
.nf
event_count
       Specifies tha number of event classes up in tha event list\&.
.fi
.sp
.nf
event_list
       Specifies which events is reported ta tha client\&.
.fi
.sp
.nf
this_device_mode
       Specifies further processin of events from this
       device\&.Yo ass can pass GrabModeSync or GrabModeAsync\&.
.fi
.sp
.nf
other_devices_mode
       Specifies further processin of events from all other
       devices\&.Yo ass can pass GrabModeSync or GrabModeAsync\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
Da XGrabDeviceButton request establishes a passive grab\&. In
the future, tha thang be actively grabbed (as fo' XGrabDevice,
the last\-grab time is set ta tha time at which tha button was
pressed (as transmitted up in tha DeviceButtonPress event), and
the DeviceButtonPress event is reported if all of tha following
conditions is true:
  * Da thang aint grabbed, n' tha specified button is
    logically pressed when tha specified modifier keys are
    logically down on tha specified modifier thang n' no
    other buttons or modifier keys is logically down\&.
  * Either tha grab window be a ancestor of (or is) tha focus
    window, OR tha grab window be a thugged-out descendent of tha focus
    window n' gotz nuff tha device\&.
  * A passive grab on tha same button/modifier combination do
    not exist on any ancestor of grab_window\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da interpretation of tha remainin arguments be as for
XGrabDevice\&. Da actizzle grab is terminated automatically when
the logical state of tha thang has all buttons busted out
(independent of tha logical state of tha modifier keys)\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Note dat tha logical state of a thang (as peeped by client
applications) may lag tha physical state if thang event
processin is frozen\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
This request overrides all previous grabs by tha same client on
the same button/modifier combinations on tha same window\& fo' realz. A
modifierz of AnyModifier is equivalent ta issuin tha grab
request fo' all possible modifier combinations (includin the
combination of no modifiers)\&. Well shiiiit, it aint required dat all
modifiers specified have currently assigned KeyCodes\& fo' realz. A button
of AnyButton is equivalent ta issuin tha request fo' all
possible buttons\&. Otherwise, it aint required dat the
specified button currently be assigned ta a physical button\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
A modifier_device of NULL indicates dat tha X keyboard is to
be used as tha modifier_device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If some other client has already issued a XGrabDeviceButton
with tha same button/modifier combination on tha same window, a
BadAccess error thangs up in dis biatch\&. When rockin AnyModifier or AnyButton ,
the request fails straight-up, n' a BadAccess error thangs up in dis biatch (no
grabs is established) if there be a cold-ass lil conflictin grab fo' any
combination\&. XGrabDeviceButton has no effect on a actizzle grab\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XGrabDeviceButton can generate BadClass, BadDevice, BadMatch,
BadValue, n' BadWindow errors\&.\&.P Da XUngrabDeviceButton
request releases tha passive grab fo' a funky-ass button/modifier
combination on tha specified window if dat shiznit was grabbed by this
client\& fo' realz. A modifier of AnyModifier is equivalent ta issuin the
ungrab request fo' all possible modifier combinations,
includin tha combination of no modifiers\& fo' realz. A button of
AnyButton is equivalent ta issuin tha request fo' all possible
buttons\&. XUngrabDeviceButton has no effect on a actizzle grab\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
A modifier_device of NULL indicates dat tha X keyboard should
be used as tha modifier_device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XUngrabDeviceButton can generate BadDevice, BadMatch, BadValue
and BadWindow errors\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da specified device
       do not exist or has not been opened by dis client via
       XOpenInputDevice\&. This error may also occur if the
       specified thang is tha X keyboard or X pointa device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadMatch
       This error may occur if a XGrabDeviceButton request was
       made specifyin a thang dat has no buttons, or
       specifyin a modifier thang dat has no keys\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       Some numeric value falls outside tha range of joints
       accepted by tha request\&. Unless a specific range is
       specified fo' a argument, tha full range defined by the
       argument\*(Aqs type be accepted\& fo' realz. Any argument defined as a
       set of alternatives can generate dis error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadWindow
       A value fo' a Window argument do not name a thugged-out defined
       Window\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XAllowDeviceEvents(3), XGrabDevice(3), XGrabDeviceKey(3)
.fi
.if n \{\
.RE
.\}
