" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::regex_traits< _Ch_type > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::ctype_base::mask \fBchar_class_type\fP"
.br
.ti -1c
.RI "typedef _Ch_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::locale\fP \fBlocale_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::basic_string\fP
.br
< char_type > \fBstring_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBregex_traits\fP ()"
.br
.ti -1c
.RI "\fBlocale_type\fP \fBgetloc\fP () const "
.br
.ti -1c
.RI "\fBlocale_type\fP \fBimbue\fP (\fBlocale_type\fP __loc)"
.br
.ti -1c
.RI "bool \fBisctype\fP (_Ch_type __c, char_class_type __f) const "
.br
.ti -1c
.RI "template<typename _Fwd_ita > char_class_type \fBlookup_classname\fP (_Fwd_ita __first, _Fwd_ita __last, bool __icase=false) const "
.br
.ti -1c
.RI "template<typename _Fwd_ita > \fBstring_type\fP \fBlookup_collatename\fP (_Fwd_ita __first, _Fwd_ita __last) const "
.br
.ti -1c
.RI "template<typename _Fwd_ita > \fBstring_type\fP \fBtransform\fP (_Fwd_ita __first, _Fwd_ita __last) const "
.br
.ti -1c
.RI "template<typename _Fwd_ita > \fBstring_type\fP \fBtransform_primary\fP (_Fwd_ita __first, _Fwd_ita __last) const "
.br
.ti -1c
.RI "char_type \fBtranslate\fP (char_type __c) const "
.br
.ti -1c
.RI "char_type \fBtranslate_nocase\fP (char_type __c) const "
.br
.ti -1c
.RI "int \fBvalue\fP (_Ch_type __ch, int __radix) const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static std::size_t \fBlength\fP (const char_type *__p)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBlocale_type\fP \fB_M_locale\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Ch_type>struct std::regex_traits< _Ch_type >"
Class regex_traits\&. Describes aspectz of a regular expression\&. 

A regular expression traits class dat satisfies tha requirementz of section [28\&.7]\&.
.PP
Da class regex is parameterized round a set of related types n' functions used ta complete tha definizzle of its semantics\&. This class satisfies tha requirementz of such a traits class\&. 
.PP
Definizzle at line 51 of file regex\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Ch_type > \fBstd::regex_traits\fP< _Ch_type >::\fBregex_traits\fP ()\fC [inline]\fP"

.PP
Constructs a thugged-out default traits object\&. 
.PP
Definizzle at line 63 of file regex\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Ch_type > \fBlocale_type\fP \fBstd::regex_traits\fP< _Ch_type >::getloc () const\fC [inline]\fP"

.PP
Gets a cold-ass lil copy of tha current locale up in use by tha regex_traits object\&. 
.PP
Definizzle at line 270 of file regex\&.h\&.
.SS "template<typename _Ch_type > \fBlocale_type\fP \fBstd::regex_traits\fP< _Ch_type >::imbue (\fBlocale_type\fP__loc)\fC [inline]\fP"

.PP
Imbues tha regex_traits object wit a cold-ass lil copy of a freshly smoked up locale\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__loc\fP A locale\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a copy of tha previous locale up in use by tha regex_traits object\&.
.RE
.PP
\fBNote:\fP
.RS 4
Callin imbue wit a gangbangin' finger-lickin' different locale than tha one currently up in use invalidates all cached data held by *this\&. 
.RE
.PP

.PP
Definizzle at line 259 of file regex\&.h\&.
.SS "template<typename _Ch_type > static std::size_t \fBstd::regex_traits\fP< _Ch_type >::length (const char_type *__p)\fC [inline]\fP, \fC [static]\fP"

.PP
Gives tha length of a C-style strang startin at \fC__p\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__p\fP a pointa ta tha start of a cold-ass lil characta sequence\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the number of charactas between \fC*__p\fP n' tha straight-up original gangsta default-initialized value of type \fCchar_type\fP\&. In other lyrics, uses tha C-strin algorithm fo' determinin tha length of a sequence of characters\&. 
.RE
.PP

.PP
Definizzle at line 76 of file regex\&.h\&.
.SS "template<typename _Ch_type > template<typename _Fwd_ita > char_class_type \fBstd::regex_traits\fP< _Ch_type >::lookup_classname (_Fwd_iter__first, _Fwd_iter__last, bool__icase = \fCfalse\fP) const\fC [inline]\fP"

.PP
Maps one or mo' charactas ta a named characta classification\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__first\fP beginnin of tha characta sequence\&. 
.br
\fI__last\fP one-past-the-end of tha characta sequence\&. 
.br
\fI__icase\fP ignores tha case of tha classification name\&.
.RE
.PP
\fBReturns:\fP
.RS 4
an unspecified value dat represents tha characta classification named by tha characta sequence designated by tha iterator range [__first, __last)\&. If \fCicase\fP is true, tha returned mask identifies tha classification regardless of tha case of tha charactas ta be matched (for example, [[:lower:]] is tha same ol' dirty as [[:alpha:]]), otherwise a cold-ass lil case-dependent classification is returned\&. Da value returned shall be independent of tha case of tha charactas up in tha characta sequence\&. If tha name aint recognized then returns a value dat compares equal ta 0\&.
.RE
.PP
At least tha followin names (or they wide-characta equivalent) is supported\&.
.IP "\(bu" 2
d
.IP "\(bu" 2
w
.IP "\(bu" 2
s
.IP "\(bu" 2
alnum
.IP "\(bu" 2
alpha
.IP "\(bu" 2
blank
.IP "\(bu" 2
cntrl
.IP "\(bu" 2
digit
.IP "\(bu" 2
graph
.IP "\(bu" 2
lower
.IP "\(bu" 2
print
.IP "\(bu" 2
punct
.IP "\(bu" 2
space
.IP "\(bu" 2
upper
.IP "\(bu" 2
xdigit
.PP
.PP
\fBTodo\fP
.RS 4
Implement dis function\&. 
.RE
.PP

.PP
Definizzle at line 215 of file regex\&.h\&.
.SS "template<typename _Ch_type > template<typename _Fwd_ita > \fBstring_type\fP \fBstd::regex_traits\fP< _Ch_type >::lookup_collatename (_Fwd_iter__first, _Fwd_iter__last) const\fC [inline]\fP"

.PP
Gets a cold-ass lil collation element by name\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__first\fP beginnin of tha collation element name\&. 
.br
\fI__last\fP one-past-the-end of tha collation element name\&.
.RE
.PP
\fBReturns:\fP
.RS 4
a sequence of one or mo' charactas dat represents tha collatin element consistin of tha characta sequence designated by tha iterator range [__first, __last)\&. Returns a empty strang if tha characta sequence aint a valid collatin element\&.
.RE
.PP
\fBTodo\fP
.RS 4
Implement dis function\&. 
.RE
.PP

.PP
Definizzle at line 171 of file regex\&.h\&.
.SS "template<typename _Ch_type > template<typename _Fwd_ita > \fBstring_type\fP \fBstd::regex_traits\fP< _Ch_type >::transform (_Fwd_iter__first, _Fwd_iter__last) const\fC [inline]\fP"

.PP
Gets a sort key fo' a cold-ass lil characta sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__first\fP beginnin of tha characta sequence\&. 
.br
\fI__last\fP one-past-the-end of tha characta sequence\&.
.RE
.PP
Returns a sort key fo' tha characta sequence designated by tha iterator range [F1, F2) such dat if tha characta sequence [G1, G2) sorts before tha characta sequence [H1, H2) then v\&.transform(G1, G2) < v\&.transform(H1, H2)\&.
.PP
What dis straight-up do is provide a mo' efficient way ta compare a strang ta multiple other strings up in localez wit fancy collation rulez n' equivalence classes\&.
.PP
\fBReturns:\fP
.RS 4
a locale-specific sort key equivalent ta tha input range\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIstd::bad_cast\fP if tha current locale aint gots a cold-ass lil collate facet\&. 
.RE
.PP

.PP
Definizzle at line 129 of file regex\&.h\&.
.PP
References std::basic_string< _CharT, _Traits, _Alloc >::data(), n' std::basic_string< _CharT, _Traits, _Alloc >::size()\&.
.SS "template<typename _Ch_type > template<typename _Fwd_ita > \fBstring_type\fP \fBstd::regex_traits\fP< _Ch_type >::transform_primary (_Fwd_iter__first, _Fwd_iter__last) const\fC [inline]\fP"

.PP
Gets a sort key fo' a cold-ass lil characta sequence, independent of case\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__first\fP beginnin of tha characta sequence\&. 
.br
\fI__last\fP one-past-the-end of tha characta sequence\&.
.RE
.PP
Effects: if typeid(use_facet<collate<_Ch_type> >) == typeid(collate_byname<_Ch_type>) n' tha form of tha sort key returned by collate_byname<_Ch_type>::transform(__first, __last) is known n' can be converted tha fuck into a primary sort key then returns dat key, otherwise returns a empty string\&.
.PP
\fBTodo\fP
.RS 4
Implement dis function\&. 
.RE
.PP

.PP
Definizzle at line 153 of file regex\&.h\&.
.SS "template<typename _Ch_type > char_type \fBstd::regex_traits\fP< _Ch_type >::translate (char_type__c) const\fC [inline]\fP"

.PP
Performs tha identitizzle translation\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP A characta ta tha locale-specific characta set\&.
.RE
.PP
\fBReturns:\fP
.RS 4
__c\&. 
.RE
.PP

.PP
Definizzle at line 87 of file regex\&.h\&.
.SS "template<typename _Ch_type > char_type \fBstd::regex_traits\fP< _Ch_type >::translate_nocase (char_type__c) const\fC [inline]\fP"

.PP
Translates a cold-ass lil characta tha fuck into a cold-ass lil case-insensitizzle equivalent\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP A characta ta tha locale-specific characta set\&.
.RE
.PP
\fBReturns:\fP
.RS 4
the locale-specific lower-case equivalent of __c\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIstd::bad_cast\fP if tha imbued locale do not support tha ctype facet\&. 
.RE
.PP

.PP
Definizzle at line 100 of file regex\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
