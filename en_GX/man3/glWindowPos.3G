'\" t
.\"     Title: glWindowPos
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLWINDOWPOS" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glWindowPos \- specify tha rasta posizzle up in window coordinates fo' pixel operations
.SH "C SPECIFICATION"
.HP \w'void\ glWindowPos2s('u
.BI "void glWindowPos2s(GLshort\ " "x" ", GLshort\ " "y" ");"
.HP \w'void\ glWindowPos2i('u
.BI "void glWindowPos2i(GLint\ " "x" ", GLint\ " "y" ");"
.HP \w'void\ glWindowPos2f('u
.BI "void glWindowPos2f(GLfloat\ " "x" ", GLfloat\ " "y" ");"
.HP \w'void\ glWindowPos2d('u
.BI "void glWindowPos2d(GLdouble\ " "x" ", GLdouble\ " "y" ");"
.HP \w'void\ glWindowPos3s('u
.BI "void glWindowPos3s(GLshort\ " "x" ", GLshort\ " "y" ", GLshort\ " "z" ");"
.HP \w'void\ glWindowPos3i('u
.BI "void glWindowPos3i(GLint\ " "x" ", GLint\ " "y" ", GLint\ " "z" ");"
.HP \w'void\ glWindowPos3f('u
.BI "void glWindowPos3f(GLfloat\ " "x" ", GLfloat\ " "y" ", GLfloat\ " "z" ");"
.HP \w'void\ glWindowPos3d('u
.BI "void glWindowPos3d(GLdouble\ " "x" ", GLdouble\ " "y" ", GLdouble\ " "z" ");"
.SH "PARAMETERS"
.PP
\fIx\fR, \fIy\fR, \fIz\fR
.RS 4
Specify the
x,
y,
z
coordinates fo' tha rasta position\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glWindowPos2sv('u
.BI "void glWindowPos2sv(const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glWindowPos2iv('u
.BI "void glWindowPos2iv(const\ GLint\ *\ " "v" ");"
.HP \w'void\ glWindowPos2fv('u
.BI "void glWindowPos2fv(const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glWindowPos2dv('u
.BI "void glWindowPos2dv(const\ GLdouble\ *\ " "v" ");"
.HP \w'void\ glWindowPos3sv('u
.BI "void glWindowPos3sv(const\ GLshort\ *\ " "v" ");"
.HP \w'void\ glWindowPos3iv('u
.BI "void glWindowPos3iv(const\ GLint\ *\ " "v" ");"
.HP \w'void\ glWindowPos3fv('u
.BI "void glWindowPos3fv(const\ GLfloat\ *\ " "v" ");"
.HP \w'void\ glWindowPos3dv('u
.BI "void glWindowPos3dv(const\ GLdouble\ *\ " "v" ");"
.SH "PARAMETERS"
.PP
\fIv\fR
.RS 4
Specifies a pointa ta a array of two or three elements, specifying
x,
y,
z
coordinates, respectively\&.
.RE
.SH "DESCRIPTION"
.PP
Da GL maintains a 3D posizzle up in window coordinates\&. This position, called tha rasta position, is used ta posizzle pixel n' bitmap write operations\&. Well shiiiit, it is maintained wit subpixel accuracy\&. Right back up in yo muthafuckin ass. See
\fBglBitmap\fR(),
\fBglDrawPixels\fR(), and
\fBglCopyPixels\fR()\&.
.PP
\fBglWindowPos2\fR
specifies the
x
and
y
coordinates, while
z
is implicitly set ta 0\&.
\fBglWindowPos3\fR
specifies all three coordinates\&. The
w
coordinizzle of tha current rasta posizzle be always set ta 1\&.0\&.
.PP
\fBglWindowPos\fR
directly thugged-out shiznit the
x
and
y
coordinatez of tha current rasta posizzle wit tha joints specified\&. That is, tha joints is neither transformed by tha current modelview n' projection matrices, nor by tha viewport\-to\-window transform\&. The
z
coordinizzle of tha current rasta posizzle is updated up in tha followin manner:
.PP
z = n f n + z \(mu f \- n ⁢ if ⁢ z <= 0 if ⁢ z >= 1 otherwise
.PP
.PP
where
n
is
\fBGL_DEPTH_RANGE\fR\*(Aqs near value, and
f
is
\fBGL_DEPTH_RANGE\fR\*(Aqs far value\&. Right back up in yo muthafuckin ass. See
\fBglDepthRange\fR()\&.
.PP
Da specified coordinates is not clip\-tested, causin tha rasta posizzle ta always be valid\&.
.PP
Da current rasta posizzle also includes some associated color data n' texture coordinates\&. If lightin is enabled, then
\fBGL_CURRENT_RASTER_COLOR\fR
(in RGBA mode) or
\fBGL_CURRENT_RASTER_INDEX\fR
(in color index mode) is set ta tha color produced by tha lightin calculation (see
\fBglLight\fR(),
\fBglLightModel\fR(), and
\fBglShadeModel\fR())\&. If lightin is disabled, current color (in RGBA mode, state variable
\fBGL_CURRENT_COLOR\fR) or color index (in color index mode, state variable
\fBGL_CURRENT_INDEX\fR) is used ta update tha current rasta color\&.
\fBGL_CURRENT_RASTER_SECONDARY_COLOR\fR
(in RGBA mode) is likewise updated\&.
.PP
Likewise,
\fBGL_CURRENT_RASTER_TEXTURE_COORDS\fR
is updated as a gangbangin' function of
\fBGL_CURRENT_TEXTURE_COORDS\fR, based on tha texture matrix n' tha texture generation functions (see
\fBglTexGen\fR())\&. The
\fBGL_CURRENT_RASTER_DISTANCE\fR
is set ta the
\fBGL_CURRENT_FOG_COORD\fR\&.
.PP
.SH "NOTES"
.PP
\fBglWindowPos\fR
is available only if tha GL version is 1\&.4 or pimped outer\&.
.PP
Da rasta posizzle is modified by
\fBglRasterPos\fR(),
\fBglBitmap\fR(), and
\fBglWindowPos\fR\&.
.PP
Calling
\fBglDrawElements\fR(), or
\fBglDrawRangeElements\fR()
may leave tha current color or index indeterminate\&. If
\fBglWindowPos\fR
is executed while tha current color or index is indeterminate, tha current rasta color or current rasta index remains indeterminate\&.
.PP
There is distinct rasta texture coordinates fo' each texture unit\&. Each texture unit\*(Aqs current rasta texture coordinates is updated by
\fBglWindowPos\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglWindowPos\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_POSITION\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_POSITION_VALID\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_DISTANCE\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_COLOR\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_SECONDARY_COLOR\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_INDEX\fR
.PP
\fBglGet\fR()
with argument
\fBGL_CURRENT_RASTER_TEXTURE_COORDS\fR
.SH "SEE ALSO"
.PP
\fBglBitmap\fR(),
\fBglCopyPixels\fR(),
\fBglDrawArrays\fR(),
\fBglDrawElements\fR(),
\fBglDrawRangeElements\fR(),
\fBglDrawPixels\fR(),
\fBglMultiTexCoord\fR(),
\fBglRasterPos\fR(),
\fBglTexCoord\fR(),
\fBglTexGen\fR(),
\fBglVertex\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
