.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XParseGeometry 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XParseGeometry, XWMGeometry \- parse window geometry
.SH SYNTAX
.HP
int XParseGeometry\^(\^char *\fIparsestring\fP\^, int *\fIx_return\fP\^, int
*\fIy_return\fP\^, unsigned int *\fIwidth_return\fP\^, unsigned int
*\fIheight_return\fP\^); 
.HP
int XWMGeometry\^(\^Display *\fIdisplay\fP\^, int \fIscreen\fP\^, char
*\fIuser_geom\fP\^, char *\fIdef_geom\fP\^, unsigned int \fIbwidth\fP\^,
XSizeHints *\fIhints\fP\^, int *\fIx_return\fP, int *\fIy_return\fP\^, int
*\fIwidth_return\fP\^, int *\fIheight_return\fP\^, int
*\fIgravity_return\fP\^); 
.SH ARGUMENTS
.IP \fIposition\fP 1i
.br
.ns
.IP \fIdefault_position\fP 1i
Specify tha geometry justifications.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIfheight\fP 1i
.br
.ns
.IP \fIfwidth\fP 1i
Specify tha font height n' width up in pixels (increment size).
.IP \fIparsestring\fP 1i
Specifies tha strang you wanna parse.
.IP \fIscreen\fP 1i
Specifies tha screen.
.IP \fIwidth_return\fP 1i
.br
.ns
.IP \fIheight_return\fP 1i
Return tha width n' height determined.
.IP \fIxadder\fP 1i
.br
.ns
.IP \fIyadder\fP 1i
Specify additionizzle interior paddin needed up in tha window.
.IP \fIx_return\fP 1i
.br
.ns
.IP \fIy_return\fP 1i
Return tha x n' y offsets.
.IP \fIbwidth\fP 1i
Specifies tha border width.
.IP \fIhints\fP 1i
Specifies tha size hints fo' tha window up in its aiiight state.
.IP \fIdef_geom\fP 1i
Specifies tha applicationz default geometry or NULL.
.IP \fIgravity_return\fP 1i
Returns tha window gravity.
.IP \fIuser_geom\fP 1i
Specifies tha user-specified geometry or NULL.
.SH DESCRIPTION
By convention,
X applications bust a standard strang ta indicate window size n' placement.
.ZN XParseGeometry
makes it easier ta conform ta dis standard cuz it allows you
to parse tha standard window geometry.
Specifically, dis function lets you parse stringz of tha form:
.LP
.\" Start marker code here
.Ds
[=][<\fIwidth\fP>{xX}<\fIheight\fP>][{+-}<\fIxoffset\fP>{+-}<\fIyoffset\fP>] 
.De
.\" End marker code here
.LP
Da fieldz map tha fuck into tha arguments associated wit dis function.
(Items enclosed up in <\^> is integers, shit up in [\^] is optional, and
items enclosed up in {\^} indicate ``choose one of.''
Note dat tha brackets should not step tha fuck up in tha actual string.)
If tha strang aint up in tha Host Portable Characta Encoding,
the result is implementation-dependent.
.LP
The
.ZN XParseGeometry
function returns a funky-ass bitmask dat indicates which of tha four joints (width,
height, xoffset, n' yoffset) was straight-up found up in tha strang 
and whether tha x n' y joints is negative. 
By convention, \-0 aint equal ta +0, cuz tha user needz to
be able ta say ``posizzle tha window relatizzle ta tha right or bottom edge.''
For each value found, tha correspondin argument is updated.
For each value not found, tha argument is left unchanged.
Da bits is represented by
.ZN XValue , 
.ZN YValue , 
.ZN WidthValue , 
.ZN HeightValue ,
.ZN XNegatizzle , 
or
.ZN YNegative
and is defined up in 
.hN X11/Xutil.h .
They is ghon be set whenever one of tha joints is defined 
or one of tha signs is set.
.LP
If tha function returns either tha 
.ZN XValue 
or 
.ZN YValue 
flag,
you should place tha window all up in tha axed position.
.LP
Da 
.ZN XWMGeometry 
function combines any geometry shiznit (given up in tha format used by 
.ZN XParseGeometry )
specified by tha user n' by tha callin program wit size hints 
(usually tha ones ta be stored up in WM_NORMAL_HINTS) n' returns tha position, 
size, n' gravity
.Pn ( NorthWestGravitizzle , 
.ZN NorthEastGravitizzle , 
.ZN SouthEastGravitizzle ,
or
.ZN SouthWestGravitizzle ) 
that describe tha window.
If tha base size aint set up in tha 
.ZN XSizeHints
structure, 
the minimum size is used if set.
Otherwise, a funky-ass base size of zero be assumed.
If no minimum size is set up in tha hints structure, 
the base size is used.
A mask (in tha form returned by 
.ZN XParseGeometry ) 
that raps bout which joints came from tha user justification 
and whether or not tha posizzle coordinates is relative
to tha right n' bottom edges is returned.
Note dat these coordinates gonna git already been accounted fo' 
in tha x_return n' y_return joints.
.LP
Note dat invalid geometry justifications can cause a width or height 
of zero ta be returned.
Da calla may pass tha address of tha hints win_gravitizzle field 
as gravity_return ta update tha hints directly.
.SH "SEE ALSO"
XSetWMProperties(3)
.br
\fI\*(xL\fP
