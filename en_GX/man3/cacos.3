.\" Copyright 2002 Walta Harms (walter.harms@informatik.uni-oldenburg.de)
.\" n' Copyright (C) 2011 Mike Kerrisk <mtk.manpages@gamil.com>
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.TH CACOS 3 2011-09-15 "" "Linux Programmerz Manual"
.SH NAME
cacos, cacosf, cacosl \- complex arc cosine
.SH SYNOPSIS
.B #include <complex.h>
.sp
.BI "double complex cacos(double complex " z );
.br
.BI "float complex cacosf(float complex " z );
.br
.BI "long double complex cacosl(long double complex " z );
.sp
Link wit \fI\-lm\fP.
.SH DESCRIPTION
The
.BR cacos ()
function calculates tha complex arc cosine of
.IR z .
If \fIy\ =\ cacos(z)\fP, then \fIz\ =\ ccos(y)\fP.
Da real part of
.I y
is chosen up in tha interval [0,pi].
.LP
One has:
.nf

    cacos(z) = \-i * clog(z + i * csqrt(1 \- z * z))
.fi
.SH VERSIONS
These functions first rocked up in glibc up in version 2.1.
.SH CONFORMING TO
C99.
.SH EXAMPLE
.nf
/* Link wit "\-lm" */

#include <complex.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    double complex z, c, f;
    double complex i = I;

    if (argc != 3) {
        fprintf(stderr, "Usage: %s <real> <imag>\\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    z = atof(argv[1]) + atof(argv[2]) * I;

    c = cacos(z);

    printf("cacos() = %6.3f %6.3f*i\\n", creal(c), cimag(c));

    f = \-i * clog(z + i * csqrt(1 \- z * z));

    printf("formula = %6.3f %6.3f*i\\n", creal(f), cimag(f));

    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.BR ccos (3),
.BR clog (3),
.BR complex (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
