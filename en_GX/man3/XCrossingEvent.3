.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XCrossingEvent 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XCrossingEvent \- EnterNotify n' LeaveNotify event structure
.SH STRUCTURES
Da structure for
.ZN EnterNotify 
and
.ZN LeaveNotify
events gotz nuff:
.LP
.Ds 0
typedef struct {
        int type;       /\&* EnterNotify or LeaveNotify */
        unsigned long serial;   /\&* # of last request processed by server */
        Bool send_event;        /\&* legit if dis came from a SendEvent request */
        Display *display;       /\&* Display tha event was read from */
        Window window;  /\&* ``event'' window reported relatizzle ta */
        Window root;    /\&* root window dat tha event occurred on */
        Window subwindow;       /\&* lil pimp window */
        Time time;      /\&* millisecondz */
        int x, y;       /\&* pointa x, y coordinates up in event window */
        int x_root, y_root;     /\&* coordinates relatizzle ta root */
        int mode;       /\&* NotifyNormal, NotifyGrab, NotifyUngrab */
        int detail;
                /\&*
                * NotifyAncestor, NotifyVirtual, NotifyInferior, 
                * NotifyNonlinear,NotifyNonlinearVirtual
                */
        Bool same_screen;       /\&* same screen flag */
        Bool focus;     /\&* boolean focus */
        unsigned int state;     /\&* key or button mask */
} XCrossingEvent;
typedef XCrossingEvent XEnterWindowEvent;
typedef XCrossingEvent XLeaveWindowEvent;
.De
.LP
When you receive these events,
the structure thugz is set as bigs up.
.LP
Da type member is set ta tha event type constant name dat uniquely identifies
it.
For example, when tha X server reports a
.ZN GraphicsExpose
event ta a cold-ass lil client application, it sendz an
.ZN XGraphicsExposeEvent
structure wit tha type member set to
.ZN GraphicsExpose .
Da display member is set ta a pointa ta tha display tha event was read on.
Da send_event member is set to
.ZN True
if tha event came from a
.ZN SendEvent
protocol request.
Da serial member is set from tha serial number reported up in tha protocol
but expanded from tha 16-bit least-significant bits ta a gangbangin' full 32-bit value.
Da window member is set ta tha window dat is most useful ta toolkit
dispatchers.
.LP
Da window member is set ta tha window on which the
.ZN EnterNotify
or
.ZN LeaveNotify
event was generated n' is referred ta as tha event window. 
This is tha window used by tha X server ta report tha event, 
and is relatizzle ta tha root
window on which tha event occurred. Y'all KNOW dat shit, muthafucka! 
Da root member is set ta tha root window of tha screen
on which tha event occurred.
.LP
For a
.ZN LeaveNotify 
event,
if a cold-ass lil lil pimp of tha event window gotz nuff tha initial posizzle of tha pointer,
the subwindow component is set ta dat child.
Otherwise, tha X server sets tha subwindow member to
.ZN None .
For an
.ZN EnterNotify 
event, if a cold-ass lil lil pimp of tha event window gotz nuff tha final pointa position, 
the subwindow component is set ta dat lil pimp or
.ZN None .
.LP
Da time member is set ta tha time when tha event was generated
and is expressed up in milliseconds.
Da x n' y thugz is set ta tha coordinatez of tha pointa posizzle up in 
the event window.
This posizzle be always tha pointerz final position,
not its initial position.
If tha event window is on tha same
screen as tha root window, x n' y is tha pointa coordinates
relatizzle ta tha event windowz origin. I aint talkin' bout chicken n' gravy biatch. 
Otherwise, x n' y is set ta zero.
Da x_root n' y_root thugz is set ta tha pointerz coordinates relatizzle ta the
root windowz origin all up in tha time of tha event.
.LP
Da same_screen member is set ta indicate whether tha event window is on tha same screen
as tha root window n' can be either
.ZN True 
or
.ZN False .
If
.ZN True ,
the event n' root windows is on tha same screen.
If
.ZN False ,
the event n' root windows is not on tha same screen.
.LP
Da focus member is set ta indicate whether tha event window is tha focus window or an
inferior of tha focus window.
Da X server can set dis member ta either
.ZN True 
or
.ZN False .
If
.ZN True ,
the event window is tha focus window or a inferior of tha focus window.
If
.ZN False ,
the event window aint tha focus window or a inferior of tha focus window.
.LP
Da state member is set ta indicate tha state of tha pointa buttons and
modifier keys just prior ta the
event.
Da X server can set dis member ta tha bitwise inclusive OR of one 
or mo' of tha button or modifier key masks:
.ZN Button1Mask ,
.ZN Button2Mask ,
.ZN Button3Mask ,
.ZN Button4Mask ,
.ZN Button5Mask ,
.ZN ShiftMask ,
.ZN LockMask ,
.ZN ControlMask ,
.ZN Mod1Mask ,
.ZN Mod2Mask ,
.ZN Mod3Mask ,
.ZN Mod4Mask ,
.ZN Mod5Mask .
.LP
Da mode member is set ta indicate whether tha events is aiiight events, 
pseudo-motion events
when a grab activates, or pseudo-motion events when a grab deactivates.
Da X server can set dis member ta 
.ZN NotifyNormal ,
.ZN NotifyGrab ,
or
.ZN NotifyUngrab .
.LP
Da detail member is set ta indicate tha notify detail n' can be
.ZN NotifyAncestor ,
.ZN NotifyVirtual ,
.ZN NotifyInferior ,
.ZN NotifyNonlinear ,
or
.ZN NotifyNonlinearVirtual .
.SH "SEE ALSO"
XAnyEvent(3),
XButtonEvent(3),
XCreateWindowEvent(3),
XCirculateEvent(3),
XCirculateRequestEvent(3),
XColormapEvent(3),
XConfigureEvent(3),
XConfigureRequestEvent(3),
XDestroyWindowEvent(3),
XErrorEvent(3),
XExposeEvent(3),
XFocusChangeEvent(3),
XGraphicsExposeEvent(3),
XGravityEvent(3),
XKeymapEvent(3),
XMapEvent(3),
XMapRequestEvent(3),
XPropertyEvent(3),
XReparentEvent(3),
XResizeRequestEvent(3),
XSelectionClearEvent(3),
XSelectionEvent(3),
XSelectionRequestEvent(3),
XUnmapEvent(3),
XVisibilityEvent(3)
.br
\fI\*(xL\fP
