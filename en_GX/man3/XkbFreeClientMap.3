'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbFreeClientMap 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbFreeClientMap \- Jacked memory used by tha client map gangmember of a XkbDescRec 
structure
.SH SYNOPSIS
.HP
.B void XkbFreeClientMap
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "Bool " "free_all" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
keyboard description containin client map ta free
.TP
.I \- which
mask identifyin componentz of map ta free
.TP
.I \- free_all
True => free all client components n' map itself 
.SH DESCRIPTION
.LP
.I XkbFreeClientMap 
frees tha componentz of client map specified by 
.I which 
in tha XkbDescRec structure specified by tha 
.I xkb 
parameta n' sets tha correspondin structure component joints ta NULL. The
.I which 
parameta specifies a cold-ass lil combination of tha client map masks shown up in Table 1.

If 
.I free_all 
is True, 
.I which 
is ignored; 
.I XkbFreeClientMap 
frees every last muthafuckin non-NULL structure component up in tha client map, frees tha 
XkbClientMapRec 
structure referenced by tha 
.I map 
gangmember of tha 
.I xkb 
parameter, n' sets tha 
.I map 
member ta NULL.

.TS
c s
l l
l lw(4i).
Table 1 XkbAllocClientMap Masks
_
Mask	Effect
_
XkbKeyTypesMask	T{
Da type_count field specifies tha number of entries ta preallocate fo' tha 
types field of tha client map. If tha type_count field is less than 
XkbNumRequiredTypes returns BadValue.
T}
.sp
XkbKeySymsMask	T{
Da min_key_code n' max_key_code fieldz of tha xkb parameta is used ta 
allocate tha syms n' key_sym_map fieldz of tha client map. Da fieldz is 
allocated ta contain tha maximum number of entries necessary fo' max_key_code - 
min_key_code + 1 keys.
T}
.sp
XkbModifierMapMask	T{
Da min_key_code n' max_key_code fieldz of tha xkb parameta is used ta 
allocate tha modmap field of tha client map. Da field be allocated ta contain 
the maximum number of entries necessary fo' max_key_code - min_key_code + 1 
keys.
T}
.TE

NOTE: Da 
.I min_key_code 
and 
.I max_key_code 
fieldz of tha 
.I xkb 
parameta must be legal joints if tha XkbKeySymsMask or XkbModifierMapMask masks 
are set up in tha 
.I which 
parameter n' shit. If they is not valid, 
.I XkbAllocClientMap 
returns BadValue. 
.SH STRUCTURES
.LP
Da complete description of a Xkb keyboard is given by a XkbDescRec. Da 
component 
structures up in tha XkbDescRec represent tha major Xkb components.

.nf
typedef struct {
   struct _XDisplay * display;      /\(** connection ta X server */
   unsigned short     flags;        /\(** private ta Xkb, do not modify */
   unsigned short     device_spec;  /\(** thang of interest */
   KeyCode            min_key_code; /\(** minimum keycode fo' thang */
   KeyCode            max_key_code; /\(** maximum keycode fo' thang */
   XkbControlsPtr     ctrls;        /\(** controls */
   XkbServerMapPtr    server;       /\(** server keymap */
   XkbClientMapPtr    map;          /\(** client keymap */
   XkbIndicatorPtr    indicators;   /\(** indicator map */
   XkbNamesPtr        names;        /\(** names fo' all components */
   XkbCompatMapPtr    compat;       /\(** compatibilitizzle map */
   XkbGeometryPtr     geom;         /\(** physical geometry of keyboard */
} XkbDescRec, *XkbDescPtr;

.fi
Da 
.I display 
field points ta a X display structure. Da 
.I flags field is private ta tha library: modifyin 
.I flags 
may yield unpredictable thangs up in dis biatch. Da 
.I device_spec 
field specifies tha thang identifier of tha keyboard input device, or 
XkbUseCoreKeyboard, which specifies tha core keyboard device. Da 
.I min_key_code
and 
.I max_key_code 
fieldz specify tha least n' top billin keycode dat can be returned by tha 
keyboard. Y'all KNOW dat shit, muthafucka! 

Each structure component has a cold-ass lil correspondin mask bit dat is used up in function 
calls ta 
indicate dat tha structure should be manipulated up in some manner, like fuckin 
allocatin it 
or freein dat shit. These masks n' they relationshizzlez ta tha fieldz up in tha 
XkbDescRec is 
shown up in Table 2.

.TS
c s s
l l l
l l l.
Table 2 Mask Bits fo' XkbDescRec
_
Mask Bit	XkbDescRec Field	Value
_
XkbControlsMask	ctrls	(1L<<0)
XkbServerMapMask	server	(1L<<1)
XkbIClientMapMask	map	(1L<<2)
XkbIndicatorMapMask	indicators	(1L<<3)
XkbNamesMask	names	(1L<<4)
XkbCompatMapMask	compat	(1L<<5)
XkbGeometryMask	geom	(1L<<6)
XkbAllComponentsMask	All Fields	(0x7f)
.TE

Da 
.I map 
field of tha complete Xkb keyboard description be a pointa ta tha Xkb client 
map, which is 
of type XkbClientMapRec:
.nf
 
   typedef struct {                   /\(** Client Map */
      unsigned char     size_types;   /\(** # occupied entries up in types */
      unsigned char     num_types;    /\(** # entries up in types */
      XkbKeyTypePtr     types;        /\(** vector of key types used by dis keymap */
      unsigned short    size_syms;    /\(** length of tha syms array */
      unsigned short    num_syms;     /\(** # entries up in syms */
      KeySym *          syms;         /\(** linear 2d tablez of keysyms, 1 per key */
      XkbSymMapPtr      key_sym_map;  /\(** 1 per keycode, maps keycode ta syms */
      unsigned char *   modmap;       /\(** 1 per keycode, real modz bound ta key */
} XkbClientMapRec, *XkbClientMapPtr;

.fi
.SH DIAGNOSTICS
.TP 15
.B BadValue
An argument is outta range
.SH "SEE ALSO"
.BR XkbAllocClientMap (3)
