.TH "std::chrono" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::chrono \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBduration\fP"
.br
.ti -1c
.RI "struct \fBduration_values\fP"
.br
.ti -1c
.RI "struct \fBtime_point\fP"
.br
.ti -1c
.RI "struct \fBtreat_as_floating_point\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBduration\fP< int, \fBratio\fP< 3600 > > \fBhours\fP"
.br
.ti -1c
.RI "typedef \fBduration\fP< int64_t, micro > \fBmicroseconds\fP"
.br
.ti -1c
.RI "typedef \fBduration\fP< int64_t, milli > \fBmilliseconds\fP"
.br
.ti -1c
.RI "typedef \fBduration\fP< int, \fBratio\fP< 60 > > \fBminutes\fP"
.br
.ti -1c
.RI "typedef \fBduration\fP< int64_t, nano > \fBnanoseconds\fP"
.br
.ti -1c
.RI "typedef \fBduration\fP< int64_t > \fBseconds\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _ToDur , typename _Rep , typename _Period > constexpr \fBenable_if\fP
.br
< __is_duration< _ToDur >
.br
::value, _ToDur >::type \fBduration_cast\fP (const \fBduration\fP< _Rep, _Period > &__d)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator!=\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator!=\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period , typename _Rep2 > constexpr \fBduration\fP< typename 
.br
__common_rep_type< _Rep1, 
.br
typename \fBenable_if\fP
.br
<!__is_duration< _Rep2 >
.br
::value, _Rep2 >::type >::type, 
.br
_Period > \fBoperator%\fP (const \fBduration\fP< _Rep1, _Period > &__d, const _Rep2 &__s)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr \fBcommon_type\fP
.br
< \fBduration\fP< _Rep1, _Period1 >
.br
, \fBduration\fP< _Rep2, _Period2 >
.br
 >::type \fBoperator%\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period , typename _Rep2 > constexpr \fBduration\fP< typename 
.br
__common_rep_type< _Rep1, 
.br
_Rep2 >::type, _Period > \fBoperator*\fP (const \fBduration\fP< _Rep1, _Period > &__d, const _Rep2 &__s)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Rep2 , typename _Period > constexpr \fBduration\fP< typename 
.br
__common_rep_type< _Rep2, 
.br
_Rep1 >::type, _Period > \fBoperator*\fP (const _Rep1 &__s, const \fBduration\fP< _Rep2, _Period > &__d)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr \fBcommon_type\fP
.br
< \fBduration\fP< _Rep1, _Period1 >
.br
, \fBduration\fP< _Rep2, _Period2 >
.br
 >::type \fBoperator+\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Rep2 , typename _Period2 > constexpr \fBtime_point\fP< _Clock, 
.br
typename \fBcommon_type\fP< _Dur1, 
.br
\fBduration\fP< _Rep2, _Period2 >
.br
 >::type > \fBoperator+\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Clock , typename _Dur2 > constexpr \fBtime_point\fP< _Clock, 
.br
typename \fBcommon_type\fP< \fBduration\fP
.br
< _Rep1, _Period1 >, _Dur2 >
.br
::type > \fBoperator+\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr \fBcommon_type\fP
.br
< \fBduration\fP< _Rep1, _Period1 >
.br
, \fBduration\fP< _Rep2, _Period2 >
.br
 >::type \fBoperator-\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Rep2 , typename _Period2 > constexpr \fBtime_point\fP< _Clock, 
.br
typename \fBcommon_type\fP< _Dur1, 
.br
\fBduration\fP< _Rep2, _Period2 >
.br
 >::type > \fBoperator-\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr \fBcommon_type\fP< _Dur1, 
.br
_Dur2 >::type \fBoperator-\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period , typename _Rep2 > constexpr \fBduration\fP< typename 
.br
__common_rep_type< _Rep1, 
.br
typename \fBenable_if\fP
.br
<!__is_duration< _Rep2 >
.br
::value, _Rep2 >::type >::type, 
.br
_Period > \fBoperator/\fP (const \fBduration\fP< _Rep1, _Period > &__d, const _Rep2 &__s)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr \fBcommon_type\fP< _Rep1, 
.br
_Rep2 >::type \fBoperator/\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator<\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator<\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator<=\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator<=\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator==\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator==\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator>\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator>\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Rep1 , typename _Period1 , typename _Rep2 , typename _Period2 > constexpr bool \fBoperator>=\fP (const \fBduration\fP< _Rep1, _Period1 > &__lhs, const \fBduration\fP< _Rep2, _Period2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Clock , typename _Dur1 , typename _Dur2 > constexpr bool \fBoperator>=\fP (const \fBtime_point\fP< _Clock, _Dur1 > &__lhs, const \fBtime_point\fP< _Clock, _Dur2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _ToDur , typename _Clock , typename _Dur > constexpr \fBenable_if\fP
.br
< __is_duration< _ToDur >
.br
::value, \fBtime_point\fP< _Clock, 
.br
_ToDur > >::type \fBtime_point_cast\fP (const \fBtime_point\fP< _Clock, _Dur > &__t)"
.br
.in -1c
.SH "Detailed Description"
.PP 
ISO C++ 2011 entitizzles sub-namespace fo' time n' date\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBduration\fP<int, \fBratio\fP<3600> > \fBstd::chrono::hours\fP"

.PP
hours 
.PP
Definizzle at line 541 of file chrono\&.
.SS "typedef \fBduration\fP<int64_t, micro> \fBstd::chrono::microseconds\fP"

.PP
microsecondz 
.PP
Definizzle at line 529 of file chrono\&.
.SS "typedef \fBduration\fP<int64_t, milli> \fBstd::chrono::milliseconds\fP"

.PP
millisecondz 
.PP
Definizzle at line 532 of file chrono\&.
.SS "typedef \fBduration\fP<int, \fBratio\fP< 60> > \fBstd::chrono::minutes\fP"

.PP
minutes 
.PP
Definizzle at line 538 of file chrono\&.
.SS "typedef \fBduration\fP<int64_t, nano> \fBstd::chrono::nanoseconds\fP"

.PP
nanosecondz 
.PP
Definizzle at line 526 of file chrono\&.
.SS "typedef \fBduration\fP<int64_t> \fBstd::chrono::seconds\fP"

.PP
secondz 
.PP
Definizzle at line 535 of file chrono\&.
.SH "Function Documentation"
.PP 
.SS "template<typename _ToDur , typename _Rep , typename _Period > constexpr \fBenable_if\fP<__is_duration<_ToDur>::value, _ToDur>::type std::chrono::duration_cast (const duration< _Rep, _Period > &__d)"

.PP
duration_cast 
.PP
Definizzle at line 193 of file chrono\&.
.PP
Referenced by std::this_thread::sleep_for()\&.
.SS "template<typename _ToDur , typename _Clock , typename _Dur > constexpr \fBenable_if\fP<__is_duration<_ToDur>::value, \fBtime_point\fP<_Clock, _ToDur> >::type std::chrono::time_point_cast (const time_point< _Clock, _Dur > &__t)"

.PP
time_point_cast 
.PP
Definizzle at line 602 of file chrono\&.
.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
