.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XDrawLine 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XDrawLine, XDrawLines, XDrawSegments, XSegment \- draw lines, polygons, n' line structure
.SH SYNTAX
.HP
int XDrawLine\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
int \fIx1\fP\^, int \fIy1\fP\^, int \fIx2\fP\^, int \fIy2\fP\^); 
.HP 
int XDrawLines\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, XPoint *\fIpoints\fP\^, int \fInpoints\fP\^, int \fImode\fP\^); 
.HP 
int XDrawSegments\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, XSegment *\fIsegments\fP\^, int \fInsegments\fP\^); 
.SH ARGUMENTS
.IP \fId\fP 1i
Specifies tha drawable. 
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fImode\fP 1i
Specifies tha coordinizzle mode. 
Yo ass can pass
.ZN CoordModeOrigin
or
.ZN CoordModePrevious .
.IP \fInpoints\fP 1i
Specifies tha number of points up in tha array.
.IP \fInsegments\fP 1i
Specifies tha number of segments up in tha array.
.IP \fIpoints\fP 1i
Specifies a array of points.
.IP \fIsegments\fP 1i
Specifies a array of segments.
.IP \fIx1\fP 1i
.br
.ns
.IP \fIy1\fP 1i
.br
.ns
.IP \fIx2\fP 1i
.br
.ns
.IP \fIy2\fP 1i
Specify tha points (x1, y1) n' (x2, y2) ta be connected.
.SH DESCRIPTION
The
.ZN XDrawLine
function uses tha componentz of tha specified GC to
draw a line between tha specified set of points (x1, y1) n' (x2, y2).
It do not big-ass up joinin at coincident endpoints.
For any given line, 
.ZN XDrawLine 
does not draw a pixel mo' than once.
If lines intersect, tha intersectin pixels is drawn multiple times.  
.LP
The
.ZN XDrawLines
function uses tha componentz of tha specified GC ta draw 
npoints\-1 lines between each pair of points (point[i], point[i+1]) 
in tha array of
.ZN XPoint
structures.
It draws tha lines up in tha order listed up in tha array.
Da lines join erectly at all intermediate points, n' if tha straight-up original gangsta n' last
points coincide, tha straight-up original gangsta n' last lines also join erectly.
For any given line, 
.ZN XDrawLines
does not draw a pixel mo' than once.
If thin (zero line-width) lines intersect, 
the intersectin pixels is drawn multiple times.
If wide lines intersect, tha intersectin pixels is drawn only once, as though
the entire 
.ZN PolyLine 
protocol request was a single, filled shape.
.ZN CoordModeOrigin
treats all coordinates as relatizzle ta tha origin,
and
.ZN CoordModePrevious
treats all coordinates afta tha straight-up original gangsta as relatizzle ta tha previous point.
.LP
The
.ZN XDrawSegments 
function draws multiple, unconnected lines. 
For each segment, 
.ZN XDrawSegments 
draws a
line between (x1, y1) n' (x2, y2).
It draws tha lines up in tha order listed up in tha array of
.ZN XSegment
structures n' do not big-ass up joinin at coincident endpoints.
For any given line, 
.ZN XDrawSegments
does not draw a pixel mo' than once.  
If lines intersect, tha intersectin pixels is drawn multiple times.  
.LP
All three functions use these GC components:
function, plane-mask, line-width,
line-style, cap-style, fill-style, subwindow-mode,
clip-x-origin, clip-y-origin, n' clip-mask.
The
.ZN XDrawLines
function also uses tha join-style GC component.
All three functions also use these GC mode-dependent components:
foreground, background, tile, stipple, tile-stipple-x-origin, 
tile-stipple-y-origin, dash-offset, n' dash-list.
.LP
.ZN XDrawLine ,
.ZN XDrawLines ,
and
.ZN XDrawSegments
can generate
.ZN BadDrawable ,
.ZN BadGC ,
and
.ZN BadMatch 
errors.
.ZN XDrawLines
can also generate a
.ZN BadValue 
error.
.SH STRUCTURES
The
.ZN XSegment
structure gotz nuff:
.LP
.Ds 0
typedef struct {
        short x1, y1, x2, y2;
} XSegment;
.De
.LP
All x n' y thugz is signed integers.
Da width n' height thugz is 16-bit unsigned integers.
Yo ass should be careful not ta generate coordinates n' sizes
out of tha 16-bit ranges, cuz tha protocol only has 16-bit fields
for these joints.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XDrawArc(3),
XDrawPoint(3),
XDrawRectangle(3)
.br
\fI\*(xL\fP
