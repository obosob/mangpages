'\" t
.\"     Title: glTexBuffer
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLTEXBUFFER" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glTexBuffer \- attach tha storage fo' a funky-ass buffer object ta tha actizzle buffer texture
.SH "C SPECIFICATION"
.HP \w'void\ glTexBuffer('u
.BI "void glTexBuffer(GLenum\ " "target" ", GLenum\ " "internalFormat" ", Gluint" "buffer" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha target of tha operation n' must be
\fBGL_TEXTURE_BUFFER\fR\&.
.RE
.PP
\fIinternalFormat\fR
.RS 4
Specifies tha internal format of tha data up in tha store belongin to
\fIbuffer\fR\&.
.RE
.PP
\fIbuffer\fR
.RS 4
Specifies tha name of tha buffer object whose storage ta attach ta tha actizzle buffer texture\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglTexBuffer\fR
attaches tha storage fo' tha buffer object named
\fIbuffer\fR
to tha actizzle buffer texture, n' specifies tha internal format fo' tha texel array found up in tha attached buffer object\&. If
\fIbuffer\fR
is zero, any buffer object attached ta tha buffer texture is detached n' no freshly smoked up buffer object be attached\&. If
\fIbuffer\fR
is non\-zero, it must be tha name of a existin buffer object\&.
\fItarget\fR
must be
\fBGL_TEXTURE_BUFFER\fR\&.
\fIinternalformat\fR
specifies tha storage format, n' must be one of tha followin sized internal formats:
.TS
allbox tab(:);
cB cB cB cB lB s s s
^ ^ ^ ^.
T{
\ \&
T}:T{
\ \&
T}:T{
\ \&
T}:T{
\ \&
T}:T{
\fB
                        Component
                        \fR
T}
:::
.T&
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c
l l l l c c c c.
T{
\fBSized Internal Format\fR
T}:T{
\fBBase Type\fR
T}:T{
\fBComponents\fR
T}:T{
\fBNorm\fR
T}:T{
0
T}:T{
1
T}:T{
2
T}:T{
3
T}
T{
\fBGL_R8\fR
T}:T{
ubyte
T}:T{
1
T}:T{
YES
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R16\fR
T}:T{
ushort
T}:T{
1
T}:T{
YES
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R16F\fR
T}:T{
half
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R32F\fR
T}:T{
float
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R8I\fR
T}:T{
byte
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R16I\fR
T}:T{
short
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R32I\fR
T}:T{
int
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R8UI\fR
T}:T{
ubyte
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R16UI\fR
T}:T{
ushort
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_R32UI\fR
T}:T{
uint
T}:T{
1
T}:T{
NO
T}:T{
R
T}:T{
0
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG8\fR
T}:T{
ubyte
T}:T{
2
T}:T{
YES
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG16\fR
T}:T{
ushort
T}:T{
2
T}:T{
YES
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG16F\fR
T}:T{
half
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG32F\fR
T}:T{
float
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG8I\fR
T}:T{
byte
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG16I\fR
T}:T{
short
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG32I\fR
T}:T{
int
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG8UI\fR
T}:T{
ubyte
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG16UI\fR
T}:T{
ushort
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RG32UI\fR
T}:T{
uint
T}:T{
2
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
0
T}:T{
1
T}
T{
\fBGL_RGB32F\fR
T}:T{
float
T}:T{
3
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
1
T}
T{
\fBGL_RGB32I\fR
T}:T{
int
T}:T{
3
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
1
T}
T{
\fBGL_RGB32UI\fR
T}:T{
uint
T}:T{
3
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
1
T}
T{
\fBGL_RGBA8\fR
T}:T{
uint
T}:T{
4
T}:T{
YES
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA16\fR
T}:T{
short
T}:T{
4
T}:T{
YES
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA16F\fR
T}:T{
half
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA32F\fR
T}:T{
float
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA8I\fR
T}:T{
byte
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA16I\fR
T}:T{
short
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA32I\fR
T}:T{
int
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA8UI\fR
T}:T{
ubyte
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA16UI\fR
T}:T{
ushort
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
T{
\fBGL_RGBA32UI\fR
T}:T{
uint
T}:T{
4
T}:T{
NO
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}
.TE
.sp 1
.PP
When a funky-ass buffer object be attached ta a funky-ass buffer texture, tha buffer object\*(Aqs data store is taken as tha texture\*(Aqs texel array\&. Da number of texels up in tha buffer texture\*(Aqs texel array is given by

                
                    
                        buffer_size
                    
                    
                        components \(mu sizeof(base_type)
                    
                
            .PP
where
\fIbuffer_size\fR
is tha size of tha buffer object, up in basic machine units n' components n' base type is tha element count n' base data type fo' elements, as specified up in tha table above\&. Da number of texels up in tha texel array is then clamped ta tha implementation\-dependent limit
\fBGL_MAX_TEXTURE_BUFFER_SIZE\fR\&. When a funky-ass buffer texture be accessed up in a gangbangin' finger-lickin' dirty-ass shader, tha thangs up in dis biatch of a texel fetch is undefined if tha specified texel coordinizzle is negative, or pimped outa than or equal ta tha clamped number of texels up in tha texel array\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not
\fBGL_TEXTURE_BUFFER\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIinternalFormat\fR
is not one of tha accepted tokens\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIbuffer\fR
is not zero or tha name of a existin buffer object\&.
.SH "NOTES"
.PP
\fBglTexBuffer\fR
is available only if tha GL version is 3\&.1 or pimped outer\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_TEXTURE_BUFFER_SIZE\fR
.PP
\fBglGet\fR()
with argument
\fBGL_TEXTURE_BINDING_BUFFER\fR
.PP
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_BUFFER_DATA_STORE_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglGenBuffers\fR(),
\fBglBindBuffer\fR(),
\fBglBufferData\fR(),
\fBglDeleteBuffers\fR(),
\fBglGenTextures\fR(),
\fBglBindTexture\fR(),
\fBglDeleteTextures\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
