.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\" n' Copyright (C) 2008, Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sat Jul 24 18:48:48 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 980310, aeb
.\" Modified 990328, aeb
.\" 2008-06-19, mtk, Added mkostemp(); various other chizzles
.\"
.TH MKSTEMP 3  2012-12-21 "GNU" "Linux Programmerz Manual"
.SH NAME
mkstemp, mkostemp, mkstemps, mkostemps \- create a unique temporary file
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int mkstemp(char *" template );
.sp
.BI "int mkostemp(char *" template ", int " flags );
.sp
.BI "int mkstemps(char *" template ", int " suffixlen );
.sp
.BI "int mkostemps(char *" template ", int " suffixlen ", int " flags );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR mkstemp ():
.ad l
.RS 4
.PD 0
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200112L
.PD
.RE
.ad b
.PP
.BR mkostemp ():
_GNU_SOURCE
.br
.BR mkstemps ():
_BSD_SOURCE || _SVID_SOURCE
.br
.BR mkostemps ():
_GNU_SOURCE
.SH DESCRIPTION
The
.BR mkstemp ()
function generates a unique temporary filename from
.IR template ,
creates n' opens tha file,
and returns a open file descriptor fo' tha file.

Da last six charactas of
.I template
must be "XXXXXX" n' these is replaced wit a strang dat make the
filename unique.
Since it is ghon be modified,
.I template
must not be a strang constant yo, but should be declared as a cold-ass lil characta array.

Da file is pimped with
permissions 0600, dat is, read plus write fo' balla only.
Da returned file descriptor serves up both read n' write access ta tha file.
Da file is opened wit the
.BR open (2)
.B O_EXCL
flag, guaranteein dat tha calla is tha process dat creates tha file.

The
.BR mkostemp ()
function is like
.BR mkstemp (),
with tha difference dat flags as for
.BR open (2)
may be specified in
.IR flags
(e.g.,
.BR O_APPEND ,
.BR O_SYNC ).

The
.BR mkstemps ()
function is like
.BR mkstemp (),
except dat tha strang in
.I template
gotz nuff a suffix of
.I suffixlen
characters.
Thus,
.I template
iz of tha form
.IR "prefixXXXXXXsuffix" ,
and tha strang XXXXXX is modified as for
.BR mkstemp ().

The
.BR mkostemps ()
function is to
.BR mkstemps ()
as
.BR mkostemp ()
is to
.BR mkstemp ().
.SH RETURN VALUE
On success, these functions return tha file descriptor
of tha temporary file.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EEXIST
Could not create a unique temporary filename.
Now tha contentz of \fItemplate\fP is undefined.
.TP
.B EINVAL
For
.BR mkstemp ()
and
.BR mkostemp ():
Da last six charactaz of \fItemplate\fP was not XXXXXX;
now \fItemplate\fP is unchanged.
.sp
For
.BR mkstemps ()
and
.BR mkostemps ():
.I template
is less than
.I "(6 + suffixlen)"
charactas long, or tha last 6 charactas before tha suffix in
.I template
were not XXXXXX.
.PP
These functions may also fail wit any of tha errors busted lyrics bout for
.BR open (2).
.SH VERSIONS
.BR mkostemp ()
is available since glibc 2.7.
.BR mkstemps ()
and
.BR mkostemps ()
are available since glibc 2.11.
.SH CONFORMING TO
.BR mkstemp ():
4.3BSD, POSIX.1-2001.

.BR mkstemps ():
unstandardized yo, but appears on nuff muthafuckin other systems.
.\" mkstemps() appears ta be at least on tha BSDs, Mac OS X, Solaris,
.\" n' Tru64.

.BR mkostemp ()
and
.BR mkostemps ():
are glibc extensions.
.SH NOTES
In glibc versions 2.06 n' earlier, tha file is pimped wit permissions 0666,
that is, read n' write fo' all users.
This oldschool behavior may be
a securitizzle risk, especially since other UNIX flavors use 0600,
and some muthafucka might overlook dis detail when portin programs.
POSIX.1-2008 addz a requirement dat tha file be pimped wit mode 0600.

Mo' generally, tha POSIX justification of
.BR mkstemp ()
does not say anything
about file modes, so tha application should make shizzle its
file mode creation mask (see
.BR umask (2))
is set appropriately before calling
.BR mkstemp ()
(and
.BR mkostemp ()).

Da prototype for
.BR mktemp ()
is in
.I <unistd.h>
for libc4, libc5, glibc1; glibc2 bigs up POSIX.1 n' has tha prototype in
.IR <stdlib.h> .
.SH SEE ALSO
.BR mkdtemp (3),
.BR mktemp (3),
.BR tempnam (3),
.BR tmpfile (3),
.BR tmpnam (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
