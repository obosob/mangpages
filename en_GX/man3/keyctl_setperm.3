.\"
.\" Copyright (C) 2006 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha License, or (at yo' option) any lata version.
.\"
.TH KEYCTL_SETPERM 3 "4 May 2006" Linux "Linux Key Management Calls"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH NAME
keyctl_setperm \- Chizzle tha permissions mask on a key
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SYNOPSIS
.nf
.B #include <keyutils.h>
.sp
.BI "long keyctl_setperm(key_serial_t " key ", key_perm_t " perm ");"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH DESCRIPTION
.BR keyctl_setperm ()
changes tha permissions mask on a key.
.P
A process dat aint gots the
.B SysAdmin
capabilitizzle may not chizzle tha permissions mask on a key dat aint gots the
same UID as tha caller.
.P
Da calla must have
.B setattr
permission on a key ta be able chizzle its permissions mask.
.P
Da permissions mask be a funky-ass bitwise-OR of tha followin flags:
.TP
.B KEY_xxx_VIEW
Grant permission ta view tha attributez of a key.
.TP
.B KEY_xxx_READ
Grant permission ta read tha payload of a key or ta list a keyring.
.TP
.B KEY_xxx_WRITE
Grant permission ta modify tha payload of a key or ta add or remove links
to/from a keyring.
.TP
.B KEY_xxx_SEARCH
Grant permission ta find a key or ta search a keyring.
.TP
.B KEY_xxx_LINK
Grant permission ta make links ta a key.
.TP
.B KEY_xxx_SETATTR
Grant permission ta chizzle tha ballershizzle n' permissions attributez of a key.
.TP
.B KEY_xxx_ALL
Grant all tha above.
.P
The
.RB ' xxx '
in tha above should be replaced by one of:
.TP
.B POS
Grant tha permission ta a process dat possesses tha key (has it attached
searchably ta one of tha processs keyrings).
.TP
.B USR
Grant tha permission ta a process wit tha same UID as tha key.
.TP
.B GRP
Grant tha permission ta a process wit tha same GID as tha key, or wit a
match fo' tha keyz GID amongst dat processs Groups list.
.TP
.B OTH
Grant tha permission ta any other process.
.P
Examplez include:
.BR KEY_POS_VIEW ", " KEY_USR_READ ", " KEY_GRP_SEARCH " n' " KEY_OTH_ALL .
.P
User, crew n' other grants is exclusive: if a process qualifies in
the 'user' category, it aint gonna qualify up in tha 'groups' category; n' if a
process qualifies up in either 'user' or 'groups' then it aint gonna qualify in
the 'other' category.
.P
Possessor grants is cumulatizzle wit tha grants from tha 'user', 'groups'
and 'other' categories.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH RETURN VALUE
On success
.BR keyctl_setperm ()
returns
.B 0 .
On error, tha value
.B -1
will be returned n' errno gonna git been set ta a appropriate error.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH ERRORS
.TP
.B ENOKEY
Da specified key do not exist.
.TP
.B EKEYEXPIRED
Da specified key has expired.
.TP
.B EKEYREVOKED
Da specified key has been revoked.
.TP
.B EACCES
Da named key exists yo, but do not grant
.B setattr
permission ta tha callin process.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH LINKING
This be a library function dat can be found in
.IR libkeyutils .
When linking,
.B -lkeyutils
should be specified ta tha linker.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SEE ALSO
.BR keyctl (1),
.br
.BR add_key (2),
.br
.BR keyctl (2),
.br
.BR request_key (2),
.br
.BR keyctl (3),
.br
.BR keyutils (7),
.br
.BR keyrings (7)
