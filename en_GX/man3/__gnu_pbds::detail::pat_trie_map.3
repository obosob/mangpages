" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::pat_trie_map< Key, Mapped, Node_And_It_Traits, _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits synth_access_traits, node_update, \fB__gnu_pbds::detail::types_traits< Key, Mapped, _Alloc, false >\fP, n' \fB__gnu_pbds::detail::pat_trie_base\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef traits_type::access_traits \fBaccess_traits\fP"
.br
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::pair\fP< size_type, 
.br
size_type > \fBcomp_hash\fP"
.br
.ti -1c
.RI "typedef point_const_iterator \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_type::const_reverse_iterator \fBconst_reverse_iterator\fP"
.br
.ti -1c
.RI "typedef \fBpat_trie_tag\fP \fBcontainer_category\fP"
.br
.ti -1c
.RI "typedef _Alloc::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef point_iterator \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_pointa \fBkey_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_reference \fBkey_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_pointa \fBkey_pointer\fP"
.br
.ti -1c
.RI "typedef traits_base::key_reference \fBkey_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_type \fBkey_type\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_pointa \fBmapped_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_reference \fBmapped_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_pointa \fBmapped_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_reference \fBmapped_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_type \fBmapped_type\fP"
.br
.ti -1c
.RI "typedef __nothrowcopy::indicator \fBno_throw_indicator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_type::node_const_iterator \fBnode_const_iterator\fP"
.br
.ti -1c
.RI "typedef traits_type::node_iterator \fBnode_iterator\fP"
.br
.ti -1c
.RI "enum \fBnode_type\fP { \fBi_node\fP, \fBleaf_node\fP, \fBhead_node\fP }"
.br
.ti -1c
.RI "typedef traits_type::node_update \fBnode_update\fP"
.br
.ti -1c
.RI "typedef traits_type::const_iterator \fBpoint_const_iterator\fP"
.br
.ti -1c
.RI "typedef traits_type::iterator \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef traits_base::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_type::reverse_iterator \fBreverse_iterator\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef integral_constant< int, 
.br
Store_Hash > \fBstore_extra\fP"
.br
.ti -1c
.RI "typedef traits_base::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpat_trie_map\fP (const access_traits &)"
.br
.ti -1c
.RI "\fBpat_trie_map\fP (const \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBempty\fP () const "
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const "
.br
.ti -1c
.RI "bool \fBerase\fP (key_const_reference)"
.br
.ti -1c
.RI "const_iterator \fBerase\fP (const_iterator)"
.br
.ti -1c
.RI "iterator \fBerase\fP (iterator)"
.br
.ti -1c
.RI "const_reverse_iterator \fBerase\fP (const_reverse_iterator)"
.br
.ti -1c
.RI "reverse_iterator \fBerase\fP (reverse_iterator)"
.br
.ti -1c
.RI "template<typename Pred > \fBpat_trie_map\fP< Key, Mapped, 
.br
Node_And_It_Traits, _Alloc >
.br
::size_type \fBerase_if\fP (Pred pred)"
.br
.ti -1c
.RI "template<typename Pred > size_type \fBerase_if\fP (Pred)"
.br
.ti -1c
.RI "point_iterator \fBfind\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBfind\fP (key_const_reference) const "
.br
.ti -1c
.RI "access_traits & \fBget_access_traits\fP ()"
.br
.ti -1c
.RI "const access_traits & \fBget_access_traits\fP () const "
.br
.ti -1c
.RI "node_update & \fBget_node_update\fP ()"
.br
.ti -1c
.RI "const node_update & \fBget_node_update\fP () const "
.br
.ti -1c
.RI "\fBstd::pair\fP< point_iterator, bool > \fBinsert\fP (const_reference)"
.br
.ti -1c
.RI "void \fBjoin\fP (\fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "point_iterator \fBlower_bound\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBlower_bound\fP (key_const_reference) const "
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const "
.br
.ti -1c
.RI "node_const_iterator \fBnode_begin\fP () const "
.br
.ti -1c
.RI "node_iterator \fBnode_begin\fP ()"
.br
.ti -1c
.RI "node_const_iterator \fBnode_end\fP () const "
.br
.ti -1c
.RI "node_iterator \fBnode_end\fP ()"
.br
.ti -1c
.RI "mapped_reference \fBoperator[]\fP (key_const_reference r_key)"
.br
.ti -1c
.RI "reverse_iterator \fBrbegin\fP ()"
.br
.ti -1c
.RI "const_reverse_iterator \fBrbegin\fP () const "
.br
.ti -1c
.RI "reverse_iterator \fBrend\fP ()"
.br
.ti -1c
.RI "const_reverse_iterator \fBrend\fP () const "
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.ti -1c
.RI "void \fBsplit\fP (key_const_reference, \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "point_iterator \fBupper_bound\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBupper_bound\fP (key_const_reference) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "no_throw_indicator \fBm_no_throw_copies_indicator\fP"
.br
.ti -1c
.RI "store_extra \fBm_store_extra_indicator\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "template<typename It > void \fBcopy_from_range\fP (It, It)"
.br
.ti -1c
.RI "node_pointa \fBrecursive_copy_node\fP (node_const_pointer)"
.br
.ti -1c
.RI "void \fBvalue_swap\fP (\fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc > &)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Mapped, typename Node_And_It_Traits, typename _Alloc>class __gnu_pbds::detail::pat_trie_map< Key, Mapped, Node_And_It_Traits, _Alloc >"
PATRICIA trie\&.
.PP
This implementation loosely borrows scams from: 1) Fast Mergeable Integer Maps, Okasaki, Gill 1998 2) Ptset: Setz of integers implemented as Patricia trees, Jean-Christophe Filliatr, 2000\&. 
.PP
Definizzle at line 101 of file pat_trie_\&.hpp\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fB__gnu_pbds::detail::pat_trie_base::node_type\fP\fC [inherited]\fP"

.PP
Three typez of nodes\&. i_node is used by _Inode, leaf_node by _Leaf, n' head_node by _Head\&. 
.PP
Definizzle at line 58 of file pat_trie_base\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename Key , typename Mapped , typename Node_And_It_Traits , typename _Alloc > \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_const_iterator \fB__gnu_pbds::detail::pat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_begin () const\fC [inline]\fP"

.PP
Returns a cold-ass lil const node_iterator correspondin ta tha node all up in tha root of tha tree\&. 
.PP
Definizzle at line 101 of file pat_trie_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Node_And_It_Traits , typename _Alloc > \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_iterator \fB__gnu_pbds::detail::pat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_begin ()\fC [inline]\fP"

.PP
Returns a node_iterator correspondin ta tha node all up in tha root of tha tree\&. 
.PP
Definizzle at line 107 of file pat_trie_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Node_And_It_Traits , typename _Alloc > \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_const_iterator \fB__gnu_pbds::detail::pat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_end () const\fC [inline]\fP"

.PP
Returns a cold-ass lil const node_iterator correspondin ta a node just afta a leaf of tha tree\&. 
.PP
Definizzle at line 113 of file pat_trie_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Node_And_It_Traits , typename _Alloc > \fBpat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_iterator \fB__gnu_pbds::detail::pat_trie_map\fP< Key, Mapped, Node_And_It_Traits, _Alloc >::node_end ()\fC [inline]\fP"

.PP
Returns a node_iterator correspondin ta a node just afta a leaf of tha tree\&. 
.PP
Definizzle at line 119 of file pat_trie_\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
