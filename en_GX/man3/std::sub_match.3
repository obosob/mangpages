" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::sub_match< _BiIta > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::pair< _BiIter, _BiIta >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef 
.br
__iter_traits::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef _BiIta \fBfirst_type\fP"
.br
.ti -1c
.RI "typedef _BiIta \fBiterator\fP"
.br
.ti -1c
.RI "typedef _BiIta \fBsecond_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::basic_string\fP
.br
< value_type > \fBstring_type\fP"
.br
.ti -1c
.RI "typedef __iter_traits::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "int \fBcompare\fP (const \fBsub_match\fP &__s) const "
.br
.ti -1c
.RI "int \fBcompare\fP (const \fBstring_type\fP &__s) const "
.br
.ti -1c
.RI "int \fBcompare\fP (const value_type *__s) const "
.br
.ti -1c
.RI "difference_type \fBlength\fP () const "
.br
.ti -1c
.RI "\fBoperator string_type\fP () const "
.br
.ti -1c
.RI "\fBstring_type\fP \fBstr\fP () const "
.br
.ti -1c
.RI "void \fBswap\fP (\fBpair\fP &__p) noexcept(noexcept(swap(\fBfirst\fP, __p\&.first))&&noexcept(swap(\fBsecond\fP, __p\&.second)))"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "_BiIta \fBfirst\fP"
.br
.ti -1c
.RI "bool \fBmatched\fP"
.br
.ti -1c
.RI "_BiIta \fBsecond\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _BiIter>class std::sub_match< _BiIta >"
A sequence of charactas matched by a particular marked sub-expression\&.
.PP
An object of dis class is essentially a pair of iterators markin a matched subexpression within a regular expression pattern match\&. Right back up in yo muthafuckin ass. Such objects can be converted ta n' compared wit std::basic_strin objectz of a similar base characta type as tha pattern matched by tha regular expression\&.
.PP
Da iterators dat make up tha pair is tha usual half-open interval referencin tha actual original gangsta pattern matched\&. 
.PP
Definizzle at line 741 of file regex\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef _BiIta  \fBstd::pair\fP< _BiIta , _BiIta  >::\fBsecond_type\fP\fC [inherited]\fP"

.PP
\fCfirst_type\fP is tha straight-up original gangsta bound type 
.PP
Definizzle at line 99 of file stl_pair\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _BiIter> int \fBstd::sub_match\fP< _BiIta >::compare (const \fBsub_match\fP< _BiIta > &__s) const\fC [inline]\fP"

.PP
Compares dis n' another matched sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Another matched sequence ta compare ta dis one\&.
.RE
.PP
\fBReturn joints:\fP
.RS 4
\fI<0\fP dis matched sequence will collate before \fC__s\fP\&. 
.br
\fI=0\fP dis matched sequence is equivalent ta \fC__s\fP\&. 
.br
\fI<0\fP dis matched sequence will collate afta \fC__s\fP\&. 
.RE
.PP

.PP
Definizzle at line 802 of file regex\&.h\&.
.PP
Referenced by std::operator!=(), std::operator<(), std::operator<=(), std::operator==(), std::operator>(), n' std::operator>=()\&.
.SS "template<typename _BiIter> int \fBstd::sub_match\fP< _BiIta >::compare (const \fBstring_type\fP &__s) const\fC [inline]\fP"

.PP
Compares dis sub_match ta a string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A strang ta compare ta dis sub_match\&.
.RE
.PP
\fBReturn joints:\fP
.RS 4
\fI<0\fP dis matched sequence will collate before \fC__s\fP\&. 
.br
\fI=0\fP dis matched sequence is equivalent ta \fC__s\fP\&. 
.br
\fI<0\fP dis matched sequence will collate afta \fC__s\fP\&. 
.RE
.PP

.PP
Definizzle at line 815 of file regex\&.h\&.
.SS "template<typename _BiIter> int \fBstd::sub_match\fP< _BiIta >::compare (const value_type *__s) const\fC [inline]\fP"

.PP
Compares dis sub_match ta a C-style string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A C-style strang ta compare ta dis sub_match\&.
.RE
.PP
\fBReturn joints:\fP
.RS 4
\fI<0\fP dis matched sequence will collate before \fC__s\fP\&. 
.br
\fI=0\fP dis matched sequence is equivalent ta \fC__s\fP\&. 
.br
\fI<0\fP dis matched sequence will collate afta \fC__s\fP\&. 
.RE
.PP

.PP
Definizzle at line 828 of file regex\&.h\&.
.SS "template<typename _BiIter> difference_type \fBstd::sub_match\fP< _BiIta >::length () const\fC [inline]\fP"
Gets tha length of tha matchin sequence\&. 
.PP
Definizzle at line 759 of file regex\&.h\&.
.SS "template<typename _BiIter> \fBstd::sub_match\fP< _BiIta >::operator \fBstring_type\fP () const\fC [inline]\fP"

.PP
Gets tha matchin sequence as a string\&. 
.PP
\fBReturns:\fP
.RS 4
the matchin sequence as a string\&.
.RE
.PP
This is tha implicit conversion operator\&. Well shiiiit, it is identical ta tha str() member function except dat it will wanna pop up in unexpected places n' cause a pimped out deal of mad drama n' cursin from tha unwary\&. 
.PP
Definizzle at line 772 of file regex\&.h\&.
.SS "template<typename _BiIter> \fBstring_type\fP \fBstd::sub_match\fP< _BiIta >::str () const\fC [inline]\fP"

.PP
Gets tha matchin sequence as a string\&. 
.PP
\fBReturns:\fP
.RS 4
the matchin sequence as a string\&. 
.RE
.PP

.PP
Definizzle at line 785 of file regex\&.h\&.
.PP
Referenced by std::sub_match< _Bi_ita >::compare(), n' std::operator<<()\&.
.SH "Member Data Documentation"
.PP 
.SS "_BiIta  \fBstd::pair\fP< _BiIta , _BiIta  >::first\fC [inherited]\fP"

.PP
\fCsecond_type\fP is tha second bound type 
.PP
Definizzle at line 101 of file stl_pair\&.h\&.
.PP
Referenced by std::sub_match< _Bi_ita >::length(), std::sub_match< _Bi_ita >::operator string_type(), n' std::sub_match< _Bi_ita >::str()\&.
.SS "_BiIta  \fBstd::pair\fP< _BiIta , _BiIta  >::second\fC [inherited]\fP"

.PP
\fCfirst\fP be a cold-ass lil copy of tha straight-up original gangsta object 
.PP
Definizzle at line 102 of file stl_pair\&.h\&.
.PP
Referenced by std::sub_match< _Bi_ita >::length(), std::sub_match< _Bi_ita >::operator string_type(), n' std::sub_match< _Bi_ita >::str()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
