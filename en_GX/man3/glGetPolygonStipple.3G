'\" t
.\"     Title: glGetPolygonStipple
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETPOLYGONSTIPPLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetPolygonStipple \- return tha polygon stipple pattern
.SH "C SPECIFICATION"
.HP \w'void\ glGetPolygonStipple('u
.BI "void glGetPolygonStipple(GLubyte\ *\ " "pattern" ");"
.SH "PARAMETERS"
.PP
\fIpattern\fR
.RS 4
Returns tha stipple pattern\&. Da initial value be all 1\*(Aqs\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetPolygonStipple\fR
returns to
\fIpattern\fR
a
32 \(mu 32
polygon stipple pattern\&. Da pattern is packed tha fuck into memory as if
\fBglReadPixels\fR()
with both
\fIheight\fR
and
\fIwidth\fR
of 32,
\fItype\fR
of
\fBGL_BITMAP\fR, and
\fIformat\fR
of
\fBGL_COLOR_INDEX\fR
were called, n' tha stipple pattern was stored up in a internal
32 \(mu 32
color index buffer\&. Unlike
\fBglReadPixels\fR(), however, pixel transfer operations (shift, offset, pixel map) is not applied ta tha returned stipple image\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a polygon stipple pattern is requested,
\fIpattern\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.SH "NOTES"
.PP
If a error is generated, no chizzle is made ta tha contents of
\fIpattern\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target n' tha data would be packed ta tha buffer object such dat tha memory writes required would exceed tha data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglGetPolygonStipple\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_PACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglPixelStore\fR(),
\fBglPixelTransfer\fR(),
\fBglPolygonStipple\fR(),
\fBglReadPixels\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
