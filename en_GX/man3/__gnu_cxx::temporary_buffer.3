" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::temporary_buffer< _ForwardIterator, _Tp > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::_Temporary_buffer< _ForwardIterator, _Tp >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef pointa \fBiterator\fP"
.br
.ti -1c
.RI "typedef value_type * \fBpointer\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBtemporary_buffer\fP (_ForwardIterator __first, _ForwardIterator __last)"
.br
.ti -1c
.RI "\fB~temporary_buffer\fP ()"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "size_type \fBrequested_size\fP () const "
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "pointa \fB_M_buffer\fP"
.br
.ti -1c
.RI "size_type \fB_M_len\fP"
.br
.ti -1c
.RI "size_type \fB_M_original_len\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class _ForwardIterator, class _Tp = typename std::iterator_traits<_ForwardIterator>::value_type>struct __gnu_cxx::temporary_buffer< _ForwardIterator, _Tp >"
This class serves up similar behavior n' semantics of tha standard functions get_temporary_buffer() n' return_temporary_buffer() yo, but encapsulated up in a type vaguely resemblin a standard container\&.
.PP
By default, a temporary_buffer<Iter> stores space fo' objectz of whatever type tha Ita iterator points to\&. Well shiiiit, it is constructed from a typical [first,last) range, n' serves up tha begin(), end(), size() functions, as well as requested_size()\&. For non-trivial types, copiez of *first is ghon be used ta initialize tha storage\&.
.PP
\fCmalloc\fP is used ta obtain underlyin storage\&.
.PP
Like get_temporary_buffer(), not all tha axed memory may be available\&. Ideally, tha pimped buffer is ghon be big-ass enough ta hold a cold-ass lil copy of [first,last) yo, but if size() is less than requested_size(), then dis didn't happen\&. 
.PP
Definizzle at line 183 of file ext/memory\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class _ForwardIterator , class _Tp  = typename std::iterator_traits<_ForwardIterator>::value_type> \fB__gnu_cxx::temporary_buffer\fP< _ForwardIterator, _Tp >::\fBtemporary_buffer\fP (_ForwardIterator__first, _ForwardIterator__last)\fC [inline]\fP"

.PP
Requests storage big-ass enough ta hold a cold-ass lil copy of [first,last)\&. 
.PP
Definizzle at line 186 of file ext/memory\&.
.SS "template<class _ForwardIterator , class _Tp  = typename std::iterator_traits<_ForwardIterator>::value_type> \fB__gnu_cxx::temporary_buffer\fP< _ForwardIterator, _Tp >::~\fBtemporary_buffer\fP ()\fC [inline]\fP"

.PP
Destroys objects n' frees storage\&. 
.PP
Definizzle at line 190 of file ext/memory\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _ForwardIterator, typename _Tp> iterator \fBstd::_Temporary_buffer\fP< _ForwardIterator, _Tp >::begin ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
As per Table mumble\&. 
.PP
Definizzle at line 151 of file stl_tempbuf\&.h\&.
.PP
Referenced by std::inplace_merge(), std::stable_partition(), n' std::stable_sort()\&.
.SS "template<typename _ForwardIterator, typename _Tp> iterator \fBstd::_Temporary_buffer\fP< _ForwardIterator, _Tp >::end ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
As per Table mumble\&. 
.PP
Definizzle at line 156 of file stl_tempbuf\&.h\&.
.SS "template<typename _ForwardIterator, typename _Tp> size_type \fBstd::_Temporary_buffer\fP< _ForwardIterator, _Tp >::requested_size () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Returns tha size axed by tha constructor; may be >size()\&. 
.PP
Definizzle at line 146 of file stl_tempbuf\&.h\&.
.PP
Referenced by std::stable_partition()\&.
.SS "template<typename _ForwardIterator, typename _Tp> size_type \fBstd::_Temporary_buffer\fP< _ForwardIterator, _Tp >::size () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
As per Table mumble\&. 
.PP
Definizzle at line 141 of file stl_tempbuf\&.h\&.
.PP
Referenced by std::inplace_merge(), std::stable_partition(), n' std::stable_sort()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
