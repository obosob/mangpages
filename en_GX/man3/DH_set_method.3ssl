.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DH_set_method 3"
.TH DH_set_method 3 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
DH_set_default_method, DH_get_default_method,
DH_set_method, DH_new_method, DH_OpenSSL \- select DH method
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& #include <openssl/dh.h>
\& #include <openssl/engine.h>
\&
\& void DH_set_default_method(const DH_METHOD *meth);
\&
\& const DH_METHOD *DH_get_default_method(void);
\&
\& int DH_set_method(DH *dh, const DH_METHOD *meth);
\&
\& DH *DH_new_method(ENGINE *engine);
\&
\& const DH_METHOD *DH_OpenSSL(void);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A \fB\s-1DH_METHOD\s0\fR specifies tha functions dat OpenSSL uses fo' Diffie-Hellman
operations. By modifyin tha method, alternatizzle implementations
like fuckin hardware accelerators may be used. Y'all KNOW dat shit, muthafucka! \s-1IMPORTANT:\s0 See tha \s-1NOTES\s0 section for
important shiznit bout how tha fuck these \s-1DH API\s0 functions is affected by tha use
of \fB\s-1ENGINE\s0\fR \s-1API\s0 calls.
.PP
Initially, tha default \s-1DH_METHOD\s0 is tha OpenSSL internal implementation, as
returned by \fIDH_OpenSSL()\fR.
.PP
\&\fIDH_set_default_method()\fR make \fBmeth\fR tha default method fo' all \s-1DH\s0
structures pimped later n' shit. \fB\s-1NB\s0\fR: This is legit only whilst no \s-1ENGINE\s0 has been set
as a thugged-out default fo' \s-1DH,\s0 so dis function is no longer recommended.
.PP
\&\fIDH_get_default_method()\fR returns a pointa ta tha current default \s-1DH_METHOD.\s0
But fuck dat shiznit yo, tha word on tha street is dat tha meaningfulnizz of dis result is dependent on whether tha \s-1ENGINE
API\s0 is bein used, so dis function is no longer recommended.
.PP
\&\fIDH_set_method()\fR selects \fBmeth\fR ta big-ass up all operations rockin tha key \fBdh\fR.
This will replace tha \s-1DH_METHOD\s0 used by tha \s-1DH\s0 key n' if tha previous method
was supplied by a \s-1ENGINE,\s0 tha handle ta dat \s-1ENGINE\s0 is ghon be busted out durin the
change. Well shiiiit, it is possible ta have \s-1DH\s0 keys dat only work wit certain \s-1DH_METHOD\s0
implementations (eg. from a \s-1ENGINE\s0 module dat supports embedded
hardware-protected keys), n' up in such cases attemptin ta chizzle tha \s-1DH_METHOD\s0
for tha key can have unexpected thangs up in dis biatch.
.PP
\&\fIDH_new_method()\fR allocates n' initializes a \s-1DH\s0 structure so dat \fBengine\fR will
be used fo' tha \s-1DH\s0 operations. If \fBengine\fR is \s-1NULL,\s0 tha default \s-1ENGINE\s0 fo' \s-1DH\s0
operations is used, n' if no default \s-1ENGINE\s0 is set, tha \s-1DH_METHOD\s0 controlled by
\&\fIDH_set_default_method()\fR is used.
.SH "THE DH_METHOD STRUCTURE"
.IX Header "THE DH_METHOD STRUCTURE"
.Vb 4
\& typedef struct dh_meth_st
\& {
\&     /* name of tha implementation */
\&        const char *name;
\&
\&     /* generate private n' hood DH joints fo' key agreement */
\&        int (*generate_key)(DH *dh);
\&
\&     /* compute shared secret */
\&        int (*compute_key)(unsigned char *key, BIGNUM *pub_key, DH *dh);
\&
\&     /* compute r = a ^ p mod m (May be NULL fo' some implementations) */
\&        int (*bn_mod_exp)(DH *dh, BIGNUM *r, BIGNUM *a, const BIGNUM *p,
\&                                const BIGNUM *m, BN_CTX *ctx,
\&                                BN_MONT_CTX *m_ctx);
\&
\&     /* called at DH_new */
\&        int (*init)(DH *dh);
\&
\&     /* called at DH_free */
\&        int (*finish)(DH *dh);
\&
\&        int flags;
\&
\&        char *app_data; /* ?, biatch? */
\&
\& } DH_METHOD;
.Ve
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fIDH_OpenSSL()\fR n' \fIDH_get_default_method()\fR return pointas ta tha respective
\&\fB\s-1DH_METHOD\s0\fRs.
.PP
\&\fIDH_set_default_method()\fR returns no value.
.PP
\&\fIDH_set_method()\fR returns non-zero if tha provided \fBmeth\fR was successfully set as
the method fo' \fBdh\fR (includin unloadin tha \s-1ENGINE\s0 handle if tha previous
method was supplied by a \s-1ENGINE\s0).
.PP
\&\fIDH_new_method()\fR returns \s-1NULL\s0 n' sets a error code dat can be obtained by
\&\fIERR_get_error\fR\|(3) if tha allocation fails. Otherwise it
returns a pointa ta tha newly allocated structure.
.SH "NOTES"
.IX Header "NOTES"
Az of version 0.9.7, \s-1DH_METHOD\s0 implementations is grouped together wit other
algorithmic APIs (eg. \s-1RSA_METHOD, EVP_CIPHER,\s0 etc) up in \fB\s-1ENGINE\s0\fR modules. If a
default \s-1ENGINE\s0 is specified fo' \s-1DH\s0 functionalitizzle rockin a \s-1ENGINE API\s0 function,
that will override any \s-1DH\s0 defaults set rockin tha \s-1DH API \s0(ie.
\&\fIDH_set_default_method()\fR). For dis reason, tha \s-1ENGINE API\s0 is tha recommended way
to control default implementations fo' use up in \s-1DH\s0 n' other cryptographic
algorithms.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdh\fR\|(3), \fIDH_new\fR\|(3)
.SH "HISTORY"
.IX Header "HISTORY"
\&\fIDH_set_default_method()\fR, \fIDH_get_default_method()\fR, \fIDH_set_method()\fR,
\&\fIDH_new_method()\fR n' \fIDH_OpenSSL()\fR was added up in OpenSSL 0.9.4.
.PP
\&\fIDH_set_default_openssl_method()\fR n' \fIDH_get_default_openssl_method()\fR replaced
\&\fIDH_set_default_method()\fR n' \fIDH_get_default_method()\fR respectively, and
\&\fIDH_set_method()\fR n' \fIDH_new_method()\fR was altered ta use \fB\s-1ENGINE\s0\fRs rather than
\&\fB\s-1DH_METHOD\s0\fRs durin pimpment of tha engine version of OpenSSL 0.9.6. For
0.9.7, tha handlin of defaults up in tha \s-1ENGINE API\s0 was restructured so dat this
change was reversed, n' behaviour of tha other functions resembled mo' closely
the previous behaviour. Shiiit, dis aint no joke. Da behaviour of defaults up in tha \s-1ENGINE API\s0 now
transparently overrides tha behaviour of defaults up in tha \s-1DH API\s0 without
requirin changin these function prototypes.
