.TH PCRE 3 "13 May 2013" "PCRE 8.33"
.SH NAME
PCRE - Perl-compatible regular expressions
.SH INTRODUCTION
.rs
.sp
Da PCRE library be a set of functions dat implement regular expression
pattern matchin rockin tha same syntax n' semantics as Perl, wit just a gangbangin' few
differences. Right back up in yo muthafuckin ass. Some features dat rocked up in Python n' PCRE before they
appeared up in Perl is also available rockin tha Python syntax, there is some
support fo' one or two .NET n' Oniguruma syntax items, n' there be a option
for requestin some minor chizzlez dat give betta JavaScript compatibility.
.P
Startin wit release 8.30, it is possible ta compile two separate PCRE
libraries: tha original, which supports 8-bit characta strings (including
UTF-8 strings), n' a second library dat supports 16-bit characta strings
(includin UTF-16 strings). Da build process allows either one or both ta be
built. Da majoritizzle of tha work ta make dis possible was done by Zoltan
Herczeg.
.P
Startin wit release 8.32 it is possible ta compile a third separate PCRE
library dat supports 32-bit characta strings (includin UTF-32 strings). The
build process allows any combination of tha 8-, 16- n' 32-bit libraries. Put ya muthafuckin choppers up if ya feel dis! The
work ta make dis possible was done by Christian Persch.
.P
Da three libraries contain identical setz of functions, except dat tha names
in tha 16-bit library start wit \fBpcre16_\fP instead of \fBpcre_\fP, n' the
names up in tha 32-bit library start wit \fBpcre32_\fP instead of \fBpcre_\fP. To
avoid over-complication n' reduce tha documentation maintenizzle load, most of
the documentation raps bout tha 8-bit library, wit tha differences fo' the
16-bit n' 32-bit libraries busted lyrics bout separately up in the
.\" HREF
\fBpcre16\fP
and
.\" HREF
\fBpcre32\fP
.\"
pages. References ta functions or structurez of tha form \fIpcre[16|32]_xxx\fP
should be read as meanin "\fIpcre_xxx\fP when rockin tha 8-bit library,
\fIpcre16_xxx\fP when rockin tha 16-bit library, or \fIpcre32_xxx\fP when using
the 32-bit library".
.P
Da current implementation of PCRE correspondz approximately wit Perl 5.12,
includin support fo' UTF-8/16/32 encoded strings n' Unicode general category
properties. Put ya muthafuckin choppers up if ya feel dis! But fuck dat shiznit yo, tha word on tha street is dat UTF-8/16/32 n' Unicode support has ta be explicitly
enabled; it aint tha default. Da Unicode tablez correspond ta Unicode
release 6.2.0.
.P
In addizzle ta tha Perl-compatible matchin function, PCRE gotz nuff an
alternatizzle function dat matches tha same ol' dirty compiled patterns up in a gangbangin' finger-lickin' different
way. In certain circumstances, tha alternatizzle function has some advantages.
For a gangbangin' finger-lickin' rap of tha two matchin algorithms, peep the
.\" HREF
\fBpcrematching\fP
.\"
page.
.P
PCRE is freestyled up in C n' busted out as a C library fo' realz. A number of playas have
written wrappers n' intercoursez of various kinds. In particular, Gizoogle Inc.
have provided a cold-ass lil comprehensive C++ wrapper fo' tha 8-bit library. This is now
included as part of tha PCRE distribution. I aint talkin' bout chicken n' gravy biatch. The
.\" HREF
\fBpcrecpp\fP
.\"
page has detailz of dis intercourse. Other peoplez contributions can be found
in tha \fIContrib\fP directory all up in tha primary FTP crib, which is:
.sp
.\" HTML <a href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre">
.\" </a>
ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre
.\"
.P
Detailz of exactly which Perl regular expression features is n' is not
supported by PCRE is given up in separate documents, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. See the
.\" HREF
\fBpcrepattern\fP
.\"
and
.\" HREF
\fBpcrecompat\fP
.\"
pages. There be a syntax summary up in the
.\" HREF
\fBpcresyntax\fP
.\"
page.
.P
Some featurez of PCRE can be included, excluded, or chizzled when tha library is
built. The
.\" HREF
\fBpcre_config()\fP
.\"
function make it possible fo' a cold-ass lil client ta discover which features are
available. Da features theyselves is busted lyrics bout up in the
.\" HREF
\fBpcrebuild\fP
.\"
page. Documentation bout buildin PCRE fo' various operatin systems can be
found up in the
.\" HTML <a href="README.txt">
.\" </a>
\fBREADME\fP
.\"
and
.\" HTML <a href="NON-AUTOTOOLS-BUILD.txt">
.\" </a>
\fBNON-AUTOTOOLS_BUILD\fP
.\"
filez up in tha source distribution.
.P
Da libraries gotz nuff a fuckin shitload of undocumented internal functions n' data
tablez dat is used by mo' than one of tha exported external functions yo, but
which is not intended fo' use by external callers. Their names all begin with
"_pcre_" or "_pcre16_" or "_pcre32_", which hopefully aint gonna provoke any name
clashes. In some environments, it is possible ta control which external symbols
are exported when a gangbangin' finger-lickin' dirty-ass shared library is built, n' up in these cases the
undocumented symbols is not exported.
.
.
.SH "SECURITY CONSIDERATIONS"
.rs
.sp
If yo ass is rockin PCRE up in a non-UTF application dat permits playas ta supply
arbitrary patterns fo' compilation, you should be aware of a gangbangin' feature that
allows playas ta turn on UTF support from within a pattern, provided dat PCRE
was built wit UTF support. For example, a 8-bit pattern dat begins with
"(*UTF8)" or "(*UTF)" turns on UTF-8 mode, which interprets patterns and
subjects as stringz of UTF-8 charactas instead of individual 8-bit characters.
This causes both tha pattern n' any data against which it is matched ta be
checked fo' UTF-8 validity. If tha data strang is straight-up long, such a cold-ass lil check might
use sufficiently nuff resources as ta cause yo' application ta lose
performance.
.P
One way of guardin against dis possibilitizzle is ta use the
\fBpcre_fullinfo()\fP function ta check tha compiled patternz options fo' UTF.
Alternatively, from release 8.33, you can set tha PCRE_NEVER_UTF option at
compile time. This causes a compile time error if a pattern gotz nuff a
UTF-settin sequence.
.P
If yo' application is one dat supports UTF, be aware dat validitizzle checking
can take time. If tha same data strang is ta be matched nuff times, you can use
the PCRE_NO_UTF[8|16|32]_CHECK option fo' tha second n' subsequent matches to
save redundant checks.
.P
Another way dat performizzle can be hit is by hustlin a pattern dat has a hella
pimpin' search tree against a strang dat aint NEVER gonna match. Nested unlimited
repeats up in a pattern is a cold-ass lil common example. PCRE serves up some protection
against this: peep tha PCRE_EXTRA_MATCH_LIMIT feature up in the
.\" HREF
\fBpcreapi\fP
.\"
page.
.
.
.SH "USER DOCUMENTATION"
.rs
.sp
Da user documentation fo' PCRE comprises a fuckin shitload of different sections. In
the "man" format, each of these be a separate "man page". In tha HTML format,
each be a separate page, linked from tha index page. In tha plain text format,
all tha sections, except tha \fBpcredemo\fP section, is concatenated, fo' ease
of searching. Da sections is as bigs up:
.sp
  pcre              dis document
  pcre-config       show PCRE installation configuration shiznit
  pcre16            detailz of tha 16-bit library
  pcre32            detailz of tha 32-bit library
  pcreapi           detailz of PCREz natizzle C API
  pcrebuild         buildin PCRE
  pcrecallout       detailz of tha callout feature
  pcrecompat        rap of Perl compatibility
  pcrecpp           detailz of tha C++ wrapper fo' tha 8-bit library
  pcredemo          a thugged-out demonstration C program dat uses PCRE
  pcregrep          description of tha \fBpcregrep\fP command (8-bit only)
  pcrejit           rap of tha just-in-time optimization support
  pcrelimits        detailz of size n' other limits
  pcrematchin      rap of tha two matchin algorithms
  pcrepartial       detailz of tha partial matchin facility
.\" JOIN
  pcrepattern       syntax n' semantics of supported
                      regular expressions
  pcreperform       rap of performizzle issues
  pcreposix         tha POSIX-compatible C API fo' tha 8-bit library
  pcreprecompile    detailz of savin n' re-usin precompiled patterns
  pcresample        rap of tha pcredemo program
  pcrestack         rap of stack usage
  pcresyntax        quick syntax reference
  pcretest          description of tha \fBpcretest\fP testin command
  pcreunicode       rap of Unicode n' UTF-8/16/32 support
.sp
In addition, up in tha "man" n' HTML formats, there be a gangbangin' finger-lickin' dirty-ass short page fo' each
C library function, listin its arguments n' thangs up in dis biatch.
.
.
.SH AUTHOR
.rs
.sp
.nf
Philip Hazel
Universitizzle Computin Service
Cambridge CB2 3QH, England.
.fi
.P
Puttin a actual email address here seems ta done been a spam magnet, so I've
taken it away. If you wanna email me, use mah two initials, followed by the
two digits 10, all up in tha domain cam.ac.uk.
.
.
.SH REVISION
.rs
.sp
.nf
Last updated: 13 May 2013
Copyright (c) 1997-2013 Universitizzle of Cambridge.
.fi
