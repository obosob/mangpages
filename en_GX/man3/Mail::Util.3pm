.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mail::Util 3"
.TH Mail::Util 3 "2012-12-21" "perl v5.18.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Util \- mail utilitizzle functions
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 2
\& Mail::Util
\&   be a Exporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mail::Util qw( ... );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package serves up nuff muthafuckin mail related utilitizzle functions fo' realz. Any function
required must by explicitly listed on tha use line ta be exported into
the callin package.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBmailaddress\fR([\s-1ADDRESS\s0])" 4
.IX Item "mailaddress([ADDRESS])"
Return a guess all up in tha current playas mail address. Da user can force
the return value by settin tha \s-1MAILADDRESS\s0 environment variable.
[2.10] Yo ass may set tha \s-1ADDRESS\s0 via tha parameter.
.Sp
\&\s-1WARNING:\s0
When not supplied via tha environment variable, <mailaddress> looks at
various configuration filez n' other environmenstrual data fo' realz. Although this
seems ta be smart-ass behavior, dis aint predictable enough (\s-1IMHO\s0) to
be used. Y'all KNOW dat shit, muthafucka!  Please set tha \s-1MAILADDRESS\s0 explicitly, n' do not trust on
the \*(L"automatic detection\*(R", even when dat produces a cold-ass lil erect address
(on tha moment)
.Sp
example:
.Sp
.Vb 2
\& # up in yo' main script
\& $ENV{MAILADDRESS} = \*(Aqme@example.com\*(Aq;
\&
\& # everywhere else
\& use Mail::Util \*(Aqmailaddress\*(Aq;
\& print mailaddress;
\&
\& # since v2.10
\& mailaddress "me@example.com";
.Ve
.IP "\fBmaildomain\fR()" 4
.IX Item "maildomain()"
Attempt ta determine tha current uers mail domain strang via tha following
methods
.RS 4
.IP "\(bu" 4
Look fo' tha \s-1MAILDOMAIN\s0 enviroment variable, which can be set from outside tha program.  This is by far tha dopest way ta configure tha domain.
.IP "\(bu" 4
Look fo' a sendmail.cf file n' extract \s-1DH\s0 parameter
.IP "\(bu" 4
Look fo' a smail config file n' usr tha straight-up original gangsta host defined up in hostname(s)
.IP "\(bu" 4
Try a \s-1SMTP\s0 connect (if Net::SMTP exists) first ta mailhost then localhost
.IP "\(bu" 4
Use value from Net::Domain::domainname (if Net::Domain exists)
.RE
.RS 4
.Sp
\&\s-1WARNING:\s0
On modern machines, there is only one phat way ta provide shiznit to
this method: tha first; always explicitly configure tha \s-1MAILDOMAIN.\s0
.Sp
example:
.Sp
.Vb 2
\& # up in yo' main script
\& $ENV{MAILDOMAIN} = \*(Aqexample.com\*(Aq;
\&
\& # everywhere else
\& use Mail::Util \*(Aqmaildomain\*(Aq;
\& print maildomain;
.Ve
.RE
.IP "\fBread_mbox\fR(\s-1FILE\s0)" 4
.IX Item "read_mbox(FILE)"
Read \s-1FILE,\s0 a funky-ass binmail mailbox file, n' return a list of  references.
Each reference be a reference ta a array contain one message.
.Sp
\&\s-1WARNING:\s0
This method do not quote lines which accidentally also start wit the
message separator \f(CW\*(C`From\*(C'\fR, so dis implementation can be considered
broken. I aint talkin' bout chicken n' gravy biatch.  See Mail::Box::Mbox
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of tha MailTools distribution,
\&\fIhttp://perl.overmeer.net/mailtools/\fR.
.SH "AUTHORS"
.IX Header "AUTHORS"
Da MailTools bundle was pimped by Graham Barr. Shiiit, dis aint no joke.  Later, Mark
Overmeer took over maintenizzle without commitment ta further pimpment.
.PP
Mail::Cap by Gisle Aas <aas@oslonett.no>.
Mail::Field::AddrList by Peta Orbaek <poe@cit.dk>.
Mail::Maila n' Mail::Send by Slim Tim Bunce <Tim.Bunce@ig.co.uk>.
For other contributors peep ChizzleLog.
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 1995\-2000 Graham Barr <gbarr@pobox.com> and
2001\-2007 Mark Overmeer <perl@overmeer.net>.
.PP
This program is free software; you can redistribute it and/or modify it
under tha same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR
