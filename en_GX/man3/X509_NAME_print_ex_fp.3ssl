.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "X509_NAME_print_ex 3"
.TH X509_NAME_print_ex 3 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
X509_NAME_print_ex, X509_NAME_print_ex_fp, X509_NAME_print,
X509_NAME_oneline \- X509_NAME printin routines.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/x509.h>
\&
\& int X509_NAME_print_ex(BIO *out, X509_NAME *nm, int indent, unsigned long flags);
\& int X509_NAME_print_ex_fp(FILE *fp, X509_NAME *nm, int indent, unsigned long flags);
\& char * X509_NAME_oneline(X509_NAME *a,char *buf,int size);
\& int X509_NAME_print(BIO *bp, X509_NAME *name, int obase);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIX509_NAME_print_ex()\fR prints a human readable version of \fBnm\fR ta \s-1BIO \s0\fBout\fR. Each
line (for multiline formats) is indented by \fBindent\fR spaces. Da output format
can be extensively customised by use of tha \fBflags\fR parameter.
.PP
\&\fIX509_NAME_print_ex_fp()\fR is identical ta \fIX509_NAME_print_ex()\fR except tha output is
written ta \s-1FILE\s0 pointa \fBfp\fR.
.PP
\&\fIX509_NAME_oneline()\fR prints a \s-1ASCII\s0 version of \fBa\fR ta \fBbuf\fR fo' realz. At most \fBsize\fR
bytes is ghon be written. I aint talkin' bout chicken n' gravy biatch. If \fBbuf\fR is \fB\s-1NULL\s0\fR then a funky-ass buffer is dynamically allocated
and returned, otherwise \fBbuf\fR is returned.
.PP
\&\fIX509_NAME_print()\fR prints up \fBname\fR ta \fBbp\fR indentin each line by \fBobase\fR 
characters. Multiple lines is used if tha output (includin indent) exceeds
80 characters.
.SH "NOTES"
.IX Header "NOTES"
Da functions \fIX509_NAME_oneline()\fR n' \fIX509_NAME_print()\fR is legacy functions which
produce a non standard output form, they don't handle multi characta fieldz and
have various quirks n' inconsistencies. Put ya muthafuckin choppers up if ya feel dis! Their use is straight fuckin discouraged up in new
applications.
.PP
Although there be a big-ass number of possible flags fo' most purposes
\&\fB\s-1XN_FLAG_ONELINE\s0\fR, \fB\s-1XN_FLAG_MULTILINE\s0\fR or \fB\s-1XN_FLAG_RFC2253\s0\fR will suffice.
As noted on tha \fIASN1_STRING_print_ex\fR\|(3) manual page
for \s-1UTF8\s0 terminals tha \fB\s-1ASN1_STRFLGS_ESC_MSB\s0\fR should be unset: so fo' example
\&\fB\s-1XN_FLAG_ONELINE &\s0 ~ASN1_STRFLGS_ESC_MSB\fR would be used.
.PP
Da complete set of tha flags supported by \fIX509_NAME_print_ex()\fR is listed below.
.PP
Several options can be ored together.
.PP
Da options \fB\s-1XN_FLAG_SEP_COMMA_PLUS\s0\fR, \fB\s-1XN_FLAG_SEP_CPLUS_SPC\s0\fR,
\&\fB\s-1XN_FLAG_SEP_SPLUS_SPC\s0\fR n' \fB\s-1XN_FLAG_SEP_MULTILINE\s0\fR determine tha field separators
to use. Two distinct separators is used between distinct RelativeDistinguishedName
components n' separate joints up in tha same \s-1RDN\s0 fo' a multi-valued \s-1RDN.\s0 Multi-valued
RDNs is currently straight-up rare so tha second separator will hardly eva be used.
.PP
\&\fB\s-1XN_FLAG_SEP_COMMA_PLUS\s0\fR uses comma n' plus as separators. \fB\s-1XN_FLAG_SEP_CPLUS_SPC\s0\fR
uses comma n' plus wit spaces: dis is mo' readable dat plain comma n' plus.
\&\fB\s-1XN_FLAG_SEP_SPLUS_SPC\s0\fR uses spaced semicolon n' plus. \fB\s-1XN_FLAG_SEP_MULTILINE\s0\fR uses
spaced newline n' plus respectively.
.PP
If \fB\s-1XN_FLAG_DN_REV\s0\fR is set tha whole \s-1DN\s0 is printed up in reversed order.
.PP
Da fieldz \fB\s-1XN_FLAG_FN_SN\s0\fR, \fB\s-1XN_FLAG_FN_LN\s0\fR, \fB\s-1XN_FLAG_FN_OID\s0\fR,
\&\fB\s-1XN_FLAG_FN_NONE\s0\fR determine how tha fuck a gangbangin' field name is displayed. Y'all KNOW dat shit, muthafucka! Well shiiiit, it will
use tha short name (e.g. \s-1CN\s0) tha long name (e.g. commonName) always
use \s-1OID\s0 numerical form (normally OIDs is only used if tha field name is not
recognised) n' no field name respectively.
.PP
If \fB\s-1XN_FLAG_SPC_EQ\s0\fR is set then spaces is ghon be placed round tha '=' character
separatin field names n' joints.
.PP
If \fB\s-1XN_FLAG_DUMP_UNKNOWN_FIELDS\s0\fR is set then tha encodin of unknown fieldz is
printed instead of tha joints.
.PP
If \fB\s-1XN_FLAG_FN_ALIGN\s0\fR is set then field names is padded ta 20 characters: this
is only of use fo' multiline format.
.PP
Additionally all tha options supported by \fIASN1_STRING_print_ex()\fR can be used ta 
control how tha fuck each field value is displayed.
.PP
In addizzle a number options can be set fo' commonly used formats.
.PP
\&\fB\s-1XN_FLAG_RFC2253\s0\fR sets options which produce a output compatible wit \s-1RFC2253\s0 it
is equivalent to:
 \fB\s-1ASN1_STRFLGS_RFC2253\s0 | \s-1XN_FLAG_SEP_COMMA_PLUS\s0 | \s-1XN_FLAG_DN_REV\s0 | \s-1XN_FLAG_FN_SN\s0 | \s-1XN_FLAG_DUMP_UNKNOWN_FIELDS\s0\fR
.PP
\&\fB\s-1XN_FLAG_ONELINE\s0\fR be a mo' readable one line format which is tha same ol' dirty as:
 \fB\s-1ASN1_STRFLGS_RFC2253\s0 | \s-1ASN1_STRFLGS_ESC_QUOTE\s0 | \s-1XN_FLAG_SEP_CPLUS_SPC\s0 | \s-1XN_FLAG_SPC_EQ\s0 | \s-1XN_FLAG_FN_SN\s0\fR
.PP
\&\fB\s-1XN_FLAG_MULTILINE\s0\fR be a multiline format which is tha same ol' dirty as:
 \fB\s-1ASN1_STRFLGS_ESC_CTRL\s0 | \s-1ASN1_STRFLGS_ESC_MSB\s0 | \s-1XN_FLAG_SEP_MULTILINE\s0 | \s-1XN_FLAG_SPC_EQ\s0 | \s-1XN_FLAG_FN_LN\s0 | \s-1XN_FLAG_FN_ALIGN\s0\fR
.PP
\&\fB\s-1XN_FLAG_COMPAT\s0\fR uses a gangbangin' format identical ta \fIX509_NAME_print()\fR: up in fact it calls \fIX509_NAME_print()\fR internally.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIASN1_STRING_print_ex\fR\|(3)
.SH "HISTORY"
.IX Header "HISTORY"
\&\s-1TBA\s0
