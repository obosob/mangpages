.\" Copyright (c) 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.TH Xau 3 "libXau 1.0.8" "X Version 11"
.SH NAME
Xau library: XauFileName, XauReadAuth, XauLockAuth, XauUnlockAuth,
XauWriteAuth, XauDisposeAuth,
XauGetAuthByAddr, XauGetBestAuthByAddr \- X authoritizzle database routines
.SH SYNOPSIS
.ft CW
.nf
#include <X11/Xauth.h>

typedef struct xauth {
        unsigned short  crew;
        unsigned short  address_length;
        char    *address;
        unsigned short  number_length;
        char    *number;
        unsigned short  name_length;
        char    *name;
        unsigned short  data_length;
        char    *data;
} Xauth;
.HP
char *XauFileName (void);
.HP
Xauth *XauReadAuth (FILE *\fIauth_file\fP\^);
.HP
int XauWriteAuth (FILE *\fIauth_file\fP, Xauth *\fIauth\fP\^);
.HP
Xauth *XauGetAuthByAddr (unsigned short \fIfamily\fP\^, unsigned short
\fIaddress_length\fP\^, const char *\fIaddress\fP\^, unsigned short
\fInumber_length\fP\^, const char *\fInumber\fP\^, unsigned short
\fIname_length\fP\^, const char *\fIname\fP\^);
.HP
Xauth *XauGetBestAuthByAddr (unsigned short \fIfamily\fP\^, unsigned short
\fIaddress_length\fP\^, const char *\fIaddress\fP\^, unsigned short
\fInumber_length\fP\^, const char *\fInumber\fP\^, int \fItypes_length\fP\^,
char **\fItypes\fR\^, const int *\fItype_lengths\fR\^);
.HP
int XauLockAuth (const char *\fIfile_name\fP\^, int \fIretries\fP\^, int
\fItimeout\fP\^, long \fIdead\fP\^);
.HP
int XauUnlockAuth (const char *\fIfile_name\fP\^);
.HP
int XauDisposeAuth (Xauth *\fIauth\fP\^);
.fi
.ft
.SH DESCRIPTION
.PP
\fBXauFileName\fP generates tha default authorization file name by first
checkin tha XAUTHORITY environment variable if set, else it returns
$HOME/.Xauthority.  This name is statically allocated n' should
not be freed.
.PP
\fBXauReadAuth\fP readz tha next entry from \fIauth_file\fP.  Da entry is
\fBnot\fP statically allocated n' should be freed by calling
\fIXauDisposeAuth\fP.
.PP
\fBXauWriteAuth\fP writes a authorization entry ta \fIauth_file\fP.  It
returns 1 on success, 0 on failure.
.PP
\fBXauGetAuthByAddr\fP searches fo' a entry which matches tha given network
address/display number pair. Shiiit, dis aint no joke.  Da entry is \fBnot\fP statically allocated
and should be freed by callin \fIXauDisposeAuth\fP.
.PP
\fBXauGetBestAuthByAddr\fP is similar ta \fBXauGetAuthByAddr\fP, except
that a list of aaight authentication methodz is specified. Y'all KNOW dat shit, muthafucka!  Xau will
choose tha file entry which matches tha earliest entry up in dis list (e.g., the
most secure authentication method).  Da \fItypes\fP argument be a array of
strings, one strang fo' each authentication method. Y'all KNOW dat shit, muthafucka!  \fItypes_length\fP
specifies how tha fuck nuff elements is up in tha \fItypes\fP array.
\fItypes_lengths\fP be a array of integers representin tha length
of each string.
.PP
\fBXauLockAuth\fP do tha work necessary ta synchronously update an
authorization file.  First it make two file names, one wit ``-c'' appended
to \fIfile_name\fP, tha other wit ``-l'' appended. Y'all KNOW dat shit, muthafucka!  If tha ``-c'' file
already exists n' is mo' than \fIdead\fP secondz old, \fIXauLockAuth\fP
removes it n' tha associated ``-l'' file.  To prevent possible
synchronization shits wit NFS, a \fIdead\fP value of zero forces the
filez ta be removed. Y'all KNOW dat shit, muthafucka!  \fIXauLockAuth\fP make \fIretries\fP attempts to
create n' link tha file names, pausin \fItimeout\fP secondz between each
attempt.  \fIXauLockAuth\fP returns a cold-ass lil collection of joints dependin on the
results:
.TP
LOCK_ERROR
A system error occurred, either a gangbangin' file_name which is too long, or an
unexpected failure from a system call.  errno may prove useful.
.TP
LOCK_TIMEOUT
\fIretries\fP attempts failed
.TP
LOCK_SUCCESS
Da lock succeeded.
.PP
\fBXauUnlockAuth\fP undoes tha work of \fIXauLockAuth\fP by unlinkin both
the ``-c'' n' ``-l'' file names.
.PP
\fBXauDisposeAuth\fP frees storage allocated ta hold a authorization entry.
.SH "SEE ALSO"
xauth(1), xdm(1)
.SH AUTHOR
Keith Packard, MIT X Consortium
