'\" t
.\"     Title: xichangehierarchy
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XICHANGEHIERARCHY" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XIChangeHierarchy \- chizzle tha thang hierarchy\&.
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput2\&.h>
.fi
.sp
.nf
Status XIChangeHierarchy( Display *display,
                          XIAnyHierarchyChangeInfo *changes,
                          int num_changes);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
num_changes
       Specifies tha number of elements up in chizzles\&.
.fi
.sp
.nf
changes
       Specifies tha chizzlez ta be made\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
XIChangeHierarchy modifies tha thang hierarchy by bustin or
removin masta devices or changin tha attachment of slave
devices\&. If num_changes is non\-zero, chizzlez be a array of
XIAnyHierarchyChangeInfo structures\&. If num_changes is equal or less than
zero, XIChangeHierarchy do nothing\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIChangeHierarchy processes chizzlez up in order, effective
immediately\&. If a error occurs, processin be aborted n' the
error is reported ta tha client\&. Chizzlez already made remain
effective\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da list of chizzlez be any combination of
XIAnyHierarchyChangeInfo\&. Da type of a hierarchy chizzle can be
XIAddMaster, XIRemoveMaster, XIAttachSlave or XIDetachSlave\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef union {
    int type;
    XIAddMasterInfo add;
    XIRemoveMasterInfo remove;
    XIAttachSlave attach;
    XIDetachSlave detach;
} XIAnyHierarchyChangeInfo;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int type; /* XIAddMasta */
    char* name;
    Bool send_core;
    Bool enable;
} XIAddMasterInfo;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int type; /* XIRemoveMasta */
    int deviceid;
    int return_mode;
    int return_pointer;
    int return_keyboard;
} XIRemoveMasterInfo;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int type; /* XIAttachSlave */
    int deviceid;
    int new_master;
} XIAttachSlaveInfo;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int type; /* XIDetachSlave */
    int deviceid;
} XIDetachSlaveInfo;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIAddMasterInfo creates a freshly smoked up masta pointa n' a new
masta keyboard labelled "name pointer" n' "name keyboard"
respectively\&. If sendCore is True, tha devices will bust core
events\&. If enable is True, tha thang is enabled immediately\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIAddMasterInfo can generate a BadValue error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIRemoveMasterInfo removes thang n' its paired masta device\&.
If returnMode is XIAttachToMaster, all pointas attached to
device or its paired masta thang is attached to
returnPointer\&. Likewise, all keyboardz is attached to
returnKeyboard\&. If returnMode is XIFloating, all attached
devices is set ta floating\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIRemoveMasterInfo can generate a BadValue n' a BadDevice
error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIAttachSlaveInfo attaches thang ta newMaster\&. If tha device
is currently attached ta a masta device, it is detached from
the masta thang n' attached ta tha freshly smoked up masta device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIAttachSlaveInfo can generate a BadDevice error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIDettachSlaveInfo deattaches thang from tha current master
device n' sets it floating\&. If tha thang be already floating,
no chizzlez is made\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIDetachSlaveInfo can generate a BadDevice error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIChangeHierarchy generates a XIHierarchyEvent if any
modifications was successful\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da thang do not
       exist or aint a appropriate fo' tha type of chizzle\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       Some numeric value falls outta tha allowed range\&.
.fi
.if n \{\
.RE
.\}
