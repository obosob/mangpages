" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::__pool_alloc< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_cxx::__pool_alloc_base\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef const _Tp * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef const _Tp & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef _Tp * \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBstd::true_type\fP \fBpropagate_on_container_move_assignment\fP"
.br
.ti -1c
.RI "typedef _Tp & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__pool_alloc\fP (const \fB__pool_alloc\fP &) noexcept"
.br
.ti -1c
.RI "template<typename _Tp1 > \fB__pool_alloc\fP (const \fB__pool_alloc\fP< _Tp1 > &) noexcept"
.br
.ti -1c
.RI "pointa \fBaddress\fP (reference __x) const noexcept"
.br
.ti -1c
.RI "const_pointa \fBaddress\fP (const_reference __x) const noexcept"
.br
.ti -1c
.RI "pointa \fBallocate\fP (size_type __n, const void *=0)"
.br
.ti -1c
.RI "template<typename _Up , typename\&.\&.\&. _Args> void \fBconstruct\fP (_Up *__p, _Args &&\&.\&.\&.__args)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (pointa __p, size_type __n)"
.br
.ti -1c
.RI "template<typename _Up > void \fBdestroy\fP (_Up *__p)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const noexcept"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "enum { \fB_S_align\fP }"
.br
.ti -1c
.RI "enum { \fB_S_max_bytes\fP }"
.br
.ti -1c
.RI "enum { \fB_S_free_list_size\fP }"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "char * \fB_M_allocate_chunk\fP (size_t __n, int &__nobjs)"
.br
.ti -1c
.RI "_Obj *volatile * \fB_M_get_free_list\fP (size_t __bytes)  throw ()"
.br
.ti -1c
.RI "__mutex & \fB_M_get_mutex\fP ()  throw ()"
.br
.ti -1c
.RI "void * \fB_M_refill\fP (size_t __n)"
.br
.ti -1c
.RI "size_t \fB_M_round_up\fP (size_t __bytes)"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static char * \fB_S_end_free\fP"
.br
.ti -1c
.RI "static _Obj *volatile \fB_S_free_list\fP [_S_free_list_size]"
.br
.ti -1c
.RI "static size_t \fB_S_heap_size\fP"
.br
.ti -1c
.RI "static char * \fB_S_start_free\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>class __gnu_cxx::__pool_alloc< _Tp >"
Allocator rockin a memory pool wit a single lock\&. 
.PP
Definizzle at line 126 of file pool_allocator\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
