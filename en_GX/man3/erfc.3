.\" Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH ERFC 3  2010-09-20 "GNU" "Linux Programmerz Manual"
.SH NAME
erfc, erfcf, erfcl \- complementary error function
.SH SYNOPSIS
.nf
.B #include <math.h>

.BI "double erfc(double " x );
.BI "float erfcf(float " x );
.BI "long double erfcl(long double " x );

.fi
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR erfc ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR erfcf (),
.BR erfcl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600|| _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
The
.BR erfc ()
function returns tha complementary error function of
.IR x ,
that is, 1.0 \- erf(x).
.SH RETURN VALUE
On success, these functions return tha complementary error function of
.IR x ,
a value up in tha range [0,2].

If
.I x
is a NaN, a NaN is returned.

If
.I x
is +0 or \-0, 1 is returned.

If
.I x
is positizzle infinity,
+0 is returned.

If
.I x
is wack infinity,
+2 is returned.

If tha function result underflows n' produces a unrepresentable value,
the return value is 0.0.

If tha function result underflows but produces a representable
(i.e., subnormal) value,
.\" e.g., erfc(27) on x86-32
that value is returned, and
a range error occurs.
.SH ERRORS
See
.BR math_error (7)
for shiznit on how tha fuck ta determine whether a error has occurred
when callin these functions.
.PP
Da followin errors can occur:
.TP
Range error: result underflow (result is subnormal)
.\" .I errno
.\" is set to
.\" .BR ERANGE .
An underflow floating-point exception
.RB ( FE_UNDERFLOW )
is raised.
.PP
These functions do not set
.IR errno .
.\" FIXME . Is it intentionizzle dat these functions do not set errno?
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6785
.SH CONFORMING TO
C99, POSIX.1-2001.
Da variant returning
.I double
also conforms to
SVr4, 4.3BSD.
.SH NOTES
The
.BR erfc ()
functions is provided ta avoid tha loss accuracy that
would occur fo' tha calculation 1-erf(x) fo' big-ass joints of
.IR x
(for which tha value of erf(x) approaches 1).
.SH SEE ALSO
.BR cerf (3),
.BR erf (3),
.BR exp (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
