" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__detail::_Equality< _Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBstd::_Hashtable< _Key, _Tp, _Hash, _Pred, _Alloc >\fP, n' \fBstd::_Hashtable< _Value, _Hash, _Pred, _Alloc >\fP\&.
.SH "Detailed Description"
.PP 

.SS "template<typename _Key, typename _Value, typename _Alloc, typename _ExtractKey, typename _Equal, typename _H1, typename _H2, typename _Hash, typename _RehashPolicy, typename _Traits, bool _Unique_keys = _Traits::__unique_keys::value>struct std::__detail::_Equality< _Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys >"
Primary class template _Equality\&.
.PP
This is fo' implementin equalitizzle comparison fo' unordered containers, per N3068, by Jizzy Lakos n' Pablo Halpern\& fo' realz. Algorithmically, we follow closely tha reference implementations therein\&. 
.PP
Definizzle at line 1559 of file hashtable_policy\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
