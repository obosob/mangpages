'\" t
.\"     Title: glCompressedTexImage3D
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCOMPRESSEDTEXIMAGE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCompressedTexImage3D \- specify a three\-dimensionizzle texture image up in a cold-ass lil compressed format
.SH "C SPECIFICATION"
.HP \w'void\ glCompressedTexImage3D('u
.BI "void glCompressedTexImage3D(GLenum\ " "target" ", GLint\ " "level" ", GLenum\ " "internalformat" ", GLsizei\ " "width" ", GLsizei\ " "height" ", GLsizei\ " "depth" ", GLint\ " "border" ", GLsizei\ " "imageSize" ", const\ GLvoid\ *\ " "data" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha target texture\&. Must be
\fBGL_TEXTURE_3D\fR,
\fBGL_PROXY_TEXTURE_3D\fR,
\fBGL_TEXTURE_2D_ARRAY\fR
or
\fBGL_PROXY_TEXTURE_2D_ARRAY\fR\&.
.RE
.PP
\fIlevel\fR
.RS 4
Specifies tha level\-of\-detail number\&. Level 0 is tha base image level\&. Level
\fIn\fR
is the
\fIn\fRth mipmap reduction image\&.
.RE
.PP
\fIinternalformat\fR
.RS 4
Specifies tha format of tha compressed image data stored at address
\fIdata\fR\&.
.RE
.PP
\fIwidth\fR
.RS 4
Specifies tha width of tha texture image\& fo' realz. All implementations support 3D texture images dat is at least 16 texels wide\&.
.RE
.PP
\fIheight\fR
.RS 4
Specifies tha height of tha texture image\& fo' realz. All implementations support 3D texture images dat is at least 16 texels high\&.
.RE
.PP
\fIdepth\fR
.RS 4
Specifies tha depth of tha texture image\& fo' realz. All implementations support 3D texture images dat is at least 16 texels deep\&.
.RE
.PP
\fIborder\fR
.RS 4
This value must be 0\&.
.RE
.PP
\fIimageSize\fR
.RS 4
Specifies tha number of unsigned bytez of image data startin all up in tha address specified by
\fIdata\fR\&.
.RE
.PP
\fIdata\fR
.RS 4
Specifies a pointa ta tha compressed image data up in memory\&.
.RE
.SH "DESCRIPTION"
.PP
Texturin allows elementz of a image array ta be read by shaders\&.
.PP
\fBglCompressedTexImage3D\fR
loadz a previously defined, n' retrieved, compressed three\-dimensionizzle texture image if
\fItarget\fR
is
\fBGL_TEXTURE_3D\fR
(see
\fBglTexImage3D\fR())\&.
.PP
If
\fItarget\fR
is
\fBGL_TEXTURE_2D_ARRAY\fR,
\fIdata\fR
is treated as a array of compressed 2D textures\&.
.PP
If
\fItarget\fR
is
\fBGL_PROXY_TEXTURE_3D\fR
or
\fBGL_PROXY_TEXTURE_2D_ARRAY\fR, no data is read from
\fIdata\fR yo, but all of tha texture image state is recalculated, checked fo' consistency, n' checked against tha implementation\*(Aqs capabilities\&. If tha implementation cannot handle a texture of tha axed texture size, it sets all of tha image state ta 0 yo, but do not generate a error (see
\fBglGetError\fR())\&. To query fo' a entire mipmap array, use a image array level pimped outa than or equal ta 1\&.
.PP
\fIinternalformat\fR
must be a known compressed image format (such as
\fBGL_RGTC\fR) or a extension\-specified compressed\-texture format\&. When a texture is loaded with
\fBglTexImage2D\fR()
usin a generic compressed texture format (e\&.g\&.,
\fBGL_COMPRESSED_RGB\fR), tha GL selects from one of its extensions supportin compressed textures\&. In order ta load tha compressed texture image using
\fBglCompressedTexImage3D\fR, query tha compressed texture image\*(Aqs size n' format using
\fBglGetTexLevelParameter\fR()\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a texture image is specified,
\fIdata\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.PP
If tha compressed data is arranged tha fuck into fixed\-size blockz of texels, tha pixel storage modes can be used ta select a sub\-rectangle from a larger containin rectangle\&. These pixel storage modes operate up in tha same way as they do for
\fBglTexImage1D\fR()\&. In tha followin description, denote by
bs,
bw,
bh, and
bd, tha jointz of pixel storage modes
\fBGL_UNPACK_COMPRESSED_BLOCK_SIZE\fR,
\fBGL_UNPACK_COMPRESSED_BLOCK_WIDTH\fR,
\fBGL_UNPACK_COMPRESSED_BLOCK_HEIGHT\fR, and
\fBGL_UNPACK_COMPRESSED_BLOCK_DEPTH\fR, respectively\&.
bs
is tha compressed block size up in bytes;
bw,
bh, and
bd
are tha compressed block width, height, n' depth up in pixels\&.
.PP
By default tha pixel storage modes
\fBGL_UNPACK_ROW_LENGTH\fR,
\fBGL_UNPACK_SKIP_ROWS\fR,
\fBGL_UNPACK_SKIP_PIXELS\fR,
\fBGL_UNPACK_IMAGE_HEIGHT\fR
and
\fBGL_UNPACK_SKIP_IMAGES\fR
are ignored fo' compressed images\&. To enable
\fBGL_UNPACK_SKIP_PIXELS\fR
and
\fBGL_UNPACK_ROW_LENGTH\fR,
bs
and
bw
must both be non\-zero\&. To also enable
\fBGL_UNPACK_SKIP_ROWS\fR
and
\fBGL_UNPACK_IMAGE_HEIGHT\fR,
bh
must be non\-zero\&. To also enable
\fBGL_UNPACK_SKIP_IMAGES\fR,
bd
must be non\-zero\& fo' realz. All parametas must be consistent wit tha compressed format ta produce tha desired thangs up in dis biatch\&.
.PP
When selectin a sub\-rectangle from a cold-ass lil compressed image:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the value of \fBGL_UNPACK_SKIP_PIXELS\fR must be a multiple of bw;.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the value of \fBGL_UNPACK_SKIP_ROWS\fR must be a multiple of bw;.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
the value of \fBGL_UNPACK_SKIP_IMAGES\fR must be a multiple of bw\&..RE
.PP
\fIimageSize\fR
must be equal to:
.PP
b s \(mu width b w \(mu height b h \(mu depth b d
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIinternalformat\fR
is not one of tha generic compressed internal formats:
\fBGL_COMPRESSED_RED\fR,
\fBGL_COMPRESSED_RG\fR,
\fBGL_COMPRESSED_RGB\fR,
\fBGL_COMPRESSED_RGBA\fR\&.
\fBGL_COMPRESSED_SRGB\fR, or
\fBGL_COMPRESSED_SRGB_ALPHA\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIimageSize\fR
is not consistent wit tha format, dimensions, n' contentz of tha specified compressed image data\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIborder\fR
is not 0\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if parameta combinations is not supported by tha specific compressed internal format as specified up in tha specific texture compression extension\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha data would be unpacked from tha buffer object such dat tha memory readz required would exceed tha data store size\&.
.PP
Undefined thangs up in dis biatch, includin abnormal program termination, is generated if
\fIdata\fR
is not encoded up in a manner consistent wit tha extension justification definin tha internal compression format\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetCompressedTexImage\fR()
.PP
\fBglGet\fR()
with argument
\fBGL_TEXTURE_COMPRESSED\fR
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_UNPACK_BUFFER_BINDING\fR
.PP
\fBglGetTexLevelParameter\fR()
with arguments
\fBGL_TEXTURE_INTERNAL_FORMAT\fR
and
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglCompressedTexImage1D\fR(),
\fBglCompressedTexImage2D\fR(),
\fBglCompressedTexSubImage1D\fR(),
\fBglCompressedTexSubImage2D\fR(),
\fBglCompressedTexSubImage3D\fR(),
\fBglCopyTexImage1D\fR(),
\fBglCopyTexSubImage1D\fR(),
\fBglCopyTexSubImage2D\fR(),
\fBglCopyTexSubImage3D\fR(),
\fBglPixelStore\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexSubImage3D\fR(),
\fBglTexParameter\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&.
\(co
2011 Khronos Group\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
