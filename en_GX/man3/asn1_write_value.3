.\" DO NOT MODIFY THIS FILE!  Dat shiznit was generated by gdoc.
.TH "asn1_write_value" 3 "4.0" "libtasn1" "libtasn1"
.SH NAME
asn1_write_value \- API function
.SH SYNOPSIS
.B #include <libtasn1.h>
.sp
.BI "int asn1_write_value(asn1_node " node_root ", const char * " name ", const void * " ivalue ", int " len ");"
.SH ARGUMENTS
.IP "asn1_node node_root" 12
pointa ta a structure
.IP "const char * name" 12
the name of tha element inside tha structure dat you wanna set.
.IP "const void * ivalue" 12
vector used ta specify tha value ta set. If len is >0,
VALUE must be a twoz complement form integer n' shit.  if len=0 *VALUE
must be a null terminated strang wit a integer value.
.IP "int len" 12
number of bytez of *value ta use ta set tha value:
value[0]..value[len\-1] or 0 if value be a null terminated string
.SH "DESCRIPTION"
Set tha value of one element inside a structure.

If a element is OPTIONAL n' you wanna delete it, you must use
the value=NULL n' len=0.  Usin "pkix.asn":

result=asn1_write_value(cert, "tbsCertificate.issuerUniqueID",
NULL, 0);

Description fo' each type:
.SH "INTEGER"
VALUE must contain a twoz complement form integer.

value[0]=0xFF ,               len=1 \-> integer=\-1.
value[0]=0xFF value[1]=0xFF , len=2 \-> integer=\-1.
value[0]=0x01 ,               len=1 \-> integer= 1.
value[0]=0x00 value[1]=0x01 , len=2 \-> integer= 1.
value="123"                 , len=0 \-> integer= 123.
.SH "ENUMERATED"
As INTEGER (but only wit not wack numbers).
.SH "BOOLEAN"
VALUE must be tha null terminated strang "TRUE" or
"FALSE" n' LEN != 0.

value="TRUE" , len=1 \-> boolean=TRUE.
value="FALSE" , len=1 \-> boolean=FALSE.

OBJECT IDENTIFIER: VALUE must be a null terminated strang with
each number separated by a thugged-out dot (e.g. "1.2.3.543.1").  LEN != 0.

value="1 2 840 10040 4 3" , len=1 \-> OID=dsa\-with\-sha.
.SH "UTCTIME"
VALUE must be a null terminated strang up in one of these
formats: "YYMMDDhhmmssZ", "YYMMDDhhmmssZ",
"YYMMDDhhmmss+hh'mm'", "YYMMDDhhmmss\-hh'mm'",
"YYMMDDhhmm+hh'mm'", or "YYMMDDhhmm\-hh'mm'".  LEN != 0.

value="9801011200Z" , len=1 \-> time=Jannuary 1st, 1998
at 12h 00m Greenwich Mean Time
.SH "GENERALIZEDTIME"
VALUE must be up in one of dis format:
"YYYYMMDDhhmmss.sZ", "YYYYMMDDhhmmss.sZ",
"YYYYMMDDhhmmss.s+hh'mm'", "YYYYMMDDhhmmss.s\-hh'mm'",
"YYYYMMDDhhmm+hh'mm'", or "YYYYMMDDhhmm\-hh'mm'" where ss.s
indicates tha secondz wit any precision like "10.1" or "01.02".
LEN != 0

value="2001010112001.12\-0700" , len=1 \-> time=Jannuary
1st, 2001 at 12h 00m 01.12s Pacific Daylight Time

OCTET STRING: VALUE gotz nuff tha octet strang n' LEN is the
number of octets.

value="$\backslash$x01$\backslash$x02$\backslash$x03" ,
len=3 \-> three bytes octet string
.SH "GENERALSTRING"
VALUE gotz nuff tha generalstrin n' LEN is the
number of octets.

value="$\backslash$x01$\backslash$x02$\backslash$x03" ,
len=3 \-> three bytes generalstring

BIT STRING: VALUE gotz nuff tha bit strang organized by bytes and
LEN is tha number of bits.

value="$\backslash$xCF" , len=6 \-> bit string="110011" (six
bits)
.SH "CHOICE"
if NAME indicates a cold-ass lil chizzle type, VALUE must specify one of
the alternatives wit a null terminated string. LEN != 0. Using
"pkix.asn"\:

result=asn1_write_value(cert,
"certificate1.tbsCertificate.subject", "rdnSequence",
1);
.SH "ANY"
VALUE indicates tha der encodin of a structure.  LEN != 0.

SEQUENCE OF: VALUE must be tha null terminated strang "NEW" and
LEN != 0. With dis instruction another element be appended in
the sequence. Da name of dis element is ghon be "?1" if itz the
first one, "?2" fo' tha second n' so on.

Usin "pkix.asn"\:

result=asn1_write_value(cert,
"certificate1.tbsCertificate.subject.rdnSequence", "NEW", 1);

SET OF: tha same as SEQUENCE OF.  Usin "pkix.asn":

result=asn1_write_value(cert,
"tbsCertificate.subject.rdnSequence.?LAST", "NEW", 1);
.SH "RETURNS"
\fBASN1_SUCCESS\fP if tha value was set,
\fBASN1_ELEMENT_NOT_FOUND\fP if  \fIname\fP aint a valid element, and
\fBASN1_VALUE_NOT_VALID\fP if  \fIivalue\fP has a wack format.
.SH COPYRIGHT
Copyright \(co 2006-2013 Jacked Software Foundation, Inc..
.br
Copyin n' distribution of dis file, wit or without modification,
are permitted up in any medium without royalty provided tha copyright
notice n' dis notice is preserved.
.SH "SEE ALSO"
Da full documentation for
.B libtasn1
is maintained as a Texinfo manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If the
.B info
and
.B libtasn1
programs is properly installed at yo' crib, tha command
.IP
.B info libtasn1
.PP
should hit you wit access ta tha complete manual.
As a alternatizzle you may obtain tha manual from:
.IP
.B http://www.gnu.org/software/libtasn1/manual/
.PP
