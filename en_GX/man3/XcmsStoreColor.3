.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XcmsStoreColor 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XcmsStoreColor, XcmsStoreColors \- set colors
.SH SYNTAX
.HP
Status XcmsStoreColor\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^,
XcmsColor *\fIcolor\fP\^); 
.HP
Status XcmsStoreColors\^(\^Display *\fIdisplay\fP\^, Colormap
\fIcolormap\fP\^, XcmsColor \fIcolors\fP\^[\^]\^, int \fIncolors\fP\^, Bool
\fIcompression_flags_return\fP\^[\^]\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIcolor\fP 1i
Specifies tha color cell n' tha color ta store.
Values specified up in this
.ZN XcmsColor
structure remain unchanged on return.
.IP \fIcolors\fP 1i
Specifies tha color justification array of
.ZN XcmsColor
structures, each specifyin a cold-ass lil color cell n' tha color ta store up in that
cell.
Values specified up in tha array remain unchanged upon return.
.IP \fIcolormap\fP 1i
Specifies tha colormap.
.IP \fIcompression_flags_return\fP 1i
Returns a array of Boolean joints indicatin compression status.
If a non-NULL pointa is supplied,
each element of tha array is set to
.ZN True
if tha correspondin color was compressed and
.ZN False
otherwise.
Pass NULL if tha compression status aint useful.
.IP \fIncolors\fP 1i
Specifies tha number of 
.ZN XcmsColor
structures up in tha color-specification array.
.SH DESCRIPTION
The
.ZN XcmsStoreColor
function converts tha color specified up in the
.ZN XcmsColor
structure tha fuck into RGB joints.
It then uses dis RGB justification up in an
.ZN XColor
structure, whose three flags 
.Pn ( DoRed , 
.ZN DoChronic ,
and
.ZN DoBlue )
are set, up in a cold-ass lil call to
.ZN XStoreColor
to chizzle tha color cell specified by tha pixel gangmember of the
.ZN XcmsColor
structure.
This pixel value must be a valid index fo' tha specified colormap,
and tha color cell specified by tha pixel value must be a read/write cell.
If tha pixel value aint a valid index, a
.ZN BadValue
error thangs up in dis biatch.
If tha color cell is unallocated or be allocated read-only, a
.ZN BadAccess
error thangs up in dis biatch.
If tha colormap be a installed map fo' its screen, 
the chizzlez is visible immediately.
.LP
Note dat 
.ZN XStoreColor
has no return value; therefore, an
.ZN XcmsSuccess
return value from dis function indicates dat tha conversion 
to RGB succeeded n' tha call to
.ZN XStoreColor
was made.
To obtain tha actual color stored, use
.ZN XcmsQueryColor .
Because of tha screenz hardware limitations or gamut compression,
the color stored up in tha colormap may not be identical
to tha color specified.
.LP
.ZN XcmsStoreColor
can generate
.ZN BadAccess ,
.ZN BadColor ,
and
.ZN BadValue
errors.
.LP
The
.ZN XcmsStoreColors
function converts tha flavas specified up in tha array of
.ZN XcmsColor
structures tha fuck into RGB joints n' then uses these RGB justifications in
.ZN XColor
structures, whose three flags 
.Pn ( DoRed , 
.ZN DoChronic ,
and
.ZN DoBlue )
are set, up in a cold-ass lil call to
.ZN XStoreColors
to chizzle tha color cells specified by tha pixel gangmember of tha corresponding
.ZN XcmsColor
structure.
Each pixel value must be a valid index fo' tha specified colormap,
and tha color cell specified by each pixel value must be a read/write cell.
If a pixel value aint a valid index, a
.ZN BadValue
error thangs up in dis biatch.
If a cold-ass lil color cell is unallocated or be allocated read-only, a
.ZN BadAccess
error thangs up in dis biatch.
If mo' than one pixel is up in error,
the one dat gets reported be arbitrary.
If tha colormap be a installed map fo' its screen, 
the chizzlez is visible immediately.
.LP
Note dat 
.ZN XStoreColors
has no return value; therefore, an
.ZN XcmsSuccess
return value from dis function indicates dat conversions 
to RGB succeeded n' tha call to
.ZN XStoreColors
was made.
To obtain tha actual flavas stored, use
.ZN XcmsQueryColors .
Because of tha screenz hardware limitations or gamut compression,
the flavas stored up in tha colormap may not be identical
to tha flavas specified.
.LP
.LP
.ZN XcmsStoreColors
can generate
.ZN BadAccess ,
.ZN BadColor ,
and
.ZN BadValue
errors.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAccess
A client attempted
to free a cold-ass lil color map entry dat it did not already allocate.
.TP 1i
.ZN BadAccess
A client attempted
to store tha fuck into a read-only color map entry.
.TP 1i
.ZN BadColor
A value fo' a Colormap argument do not name a thugged-out defined Colormap.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XcmsAllocColor(3),
XcmsQueryColor(3)
.br
\fI\*(xL\fP
