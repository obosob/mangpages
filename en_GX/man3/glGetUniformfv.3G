'\" t
.\"     Title: glGetUniform
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETUNIFORM" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetUniformfv, glGetUniformiv \- Returns tha value of a uniform variable
.SH "C SPECIFICATION"
.HP \w'void\ glGetUniformfv('u
.BI "void glGetUniformfv(GLuint\ " "program" ", GLint\ " "location" ", GLfloat\ *" "params" ");"
.HP \w'void\ glGetUniformiv('u
.BI "void glGetUniformiv(GLuint\ " "program" ", GLint\ " "location" ", GLint\ *" "params" ");"
.HP \w'void\ glGetUniformuiv('u
.BI "void glGetUniformuiv(GLuint\ " "program" ", GLint\ " "location" ", GLuint\ *" "params" ");"
.HP \w'void\ glGetUniformdv('u
.BI "void glGetUniformdv(GLuint\ " "program" ", GLint\ " "location" ", GLdouble\ *" "params" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies tha program object ta be queried\&.
.RE
.PP
\fIlocation\fR
.RS 4
Specifies tha location of tha uniform variable ta be queried\&.
.RE
.PP
\fIparams\fR
.RS 4
Returns tha value of tha specified uniform variable\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetUniform\fR
returns in
\fIparams\fR
the value(s) of tha specified uniform variable\&. Da type of tha uniform variable specified by
\fIlocation\fR
determines tha number of joints returned\&. If tha uniform variable is defined up in tha shader as a funky-ass boolean, int, or float, a single value is ghon be returned\&. If it is defined as a vec2, ivec2, or bvec2, two joints is ghon be returned\&. If it is defined as a vec3, ivec3, or bvec3, three joints is ghon be returned, n' so on\&. To query joints stored up in uniform variablez declared as arrays, call
\fBglGetUniform\fR
for each element of tha array\&. To query joints stored up in uniform variablez declared as structures, call
\fBglGetUniform\fR
for each field up in tha structure\&. Da joints fo' uniform variablez declared as a matrix is ghon be returned up in column major order\&.
.PP
Da locations assigned ta uniform variablez is not known until tha program object is linked\& fo' realz. Afta linkin has occurred, tha command
\fBglGetUniformLocation\fR()
can be used ta obtain tha location of a uniform variable\&. This location value can then be passed to
\fBglGetUniform\fR
in order ta query tha current value of tha uniform variable\& fo' realz. Afta a program object has been linked successfully, tha index joints fo' uniform variablez remain fixed until tha next link command occurs\&. Da uniform variable joints can only be queried afta a link if tha link was successful\&.
.SH "NOTES"
.PP
If a error is generated, no chizzle is made ta tha contents of
\fIparams\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not a value generated by OpenGL\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
is not a program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
has not been successfully linked\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIlocation\fR
does not correspond ta a valid uniform variable location fo' tha specified program object\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetActiveUniform\fR()
with arguments
\fIprogram\fR
and tha index of a actizzle uniform variable
.PP
\fBglGetProgram\fR()
with arguments
\fIprogram\fR
and
\fBGL_ACTIVE_UNIFORMS\fR
or
\fBGL_ACTIVE_UNIFORM_MAX_LENGTH\fR
.PP
\fBglGetUniformLocation\fR()
with arguments
\fIprogram\fR
and tha name of a uniform variable
.PP
\fBglIsProgram\fR()
.SH "SEE ALSO"
.PP
\fBglCreateProgram\fR(),
\fBglLinkProgram\fR(),
\fBglUniform\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
