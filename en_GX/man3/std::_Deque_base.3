" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::_Deque_base< _Tp, _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBstd::deque< _Tp, _Alloc >\fP\fC [protected]\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef \fB_Deque_iterator\fP< _Tp, 
.br
const _Tp &, const _Tp * > \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef \fB_Deque_iterator\fP< _Tp, 
.br
_Tp &, _Tp * > \fBiterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_Deque_base\fP (size_t __num_elements)"
.br
.ti -1c
.RI "\fB_Deque_base\fP (const allocator_type &__a, size_t __num_elements)"
.br
.ti -1c
.RI "\fB_Deque_base\fP (const allocator_type &__a)"
.br
.ti -1c
.RI "\fB_Deque_base\fP (\fB_Deque_base\fP &&__x)"
.br
.ti -1c
.RI "allocator_type \fBget_allocator\fP () const noexcept"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum { \fB_S_initial_map_size\fP }"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< _Tp * >::other \fB_Map_alloc_type\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< _Tp >::other \fB_Tp_alloc_type\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "_Tp ** \fB_M_allocate_map\fP (size_t __n)"
.br
.ti -1c
.RI "_Tp * \fB_M_allocate_node\fP ()"
.br
.ti -1c
.RI "void \fB_M_create_nodes\fP (_Tp **__nstart, _Tp **__nfinish)"
.br
.ti -1c
.RI "void \fB_M_deallocate_map\fP (_Tp **__p, size_t __n)"
.br
.ti -1c
.RI "void \fB_M_deallocate_node\fP (_Tp *__p)"
.br
.ti -1c
.RI "void \fB_M_destroy_nodes\fP (_Tp **__nstart, _Tp **__nfinish)"
.br
.ti -1c
.RI "_Map_alloc_type \fB_M_get_map_allocator\fP () const noexcept"
.br
.ti -1c
.RI "_Tp_alloc_type & \fB_M_get_Tp_allocator\fP () noexcept"
.br
.ti -1c
.RI "const _Tp_alloc_type & \fB_M_get_Tp_allocator\fP () const noexcept"
.br
.ti -1c
.RI "void \fB_M_initialize_map\fP (size_t)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_Deque_impl \fB_M_impl\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Alloc>class std::_Deque_base< _Tp, _Alloc >"
Deque base class\&. This class serves up tha unified grill fo' dequez allocation\&. This classs constructor n' destructor allocate n' deallocate (but do not initialize) storage\&. This make exception safety easier\&.
.PP
Nothang up in dis class eva constructs or destroys a actual Tp element\&. (Deque handlez dat itself\&.) Only/All memory pimpment is performed here\&. 
.PP
Definizzle at line 439 of file stl_deque\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Tp , typename _Alloc > void \fBstd::_Deque_base\fP< _Tp, _Alloc >::_M_initialize_map (size_t__num_elements)\fC [protected]\fP"

.PP
Layout storage\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__num_elements\fP Da count of Tz fo' which ta allocate space at first\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Nothing\&.
.RE
.PP
Da initial underlyin memory layout be a lil' bit fucked up\&.\&.\&. 
.PP
Definizzle at line 582 of file stl_deque\&.h\&.
.PP
References std::max()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
