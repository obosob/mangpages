
.\" n' Copyright (C) 2006 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(PERMISSIVE_MISC)
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be
.\" included up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
.\" CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
.\" TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
.\" SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
.\" %%%LICENSE_END
.\"
.\" References:
.\"   glibc manual n' source
.TH ERROR 3 2010-08-29 "GNU" "Linux Programmerz Manual"
.SH NAME
error, error_at_line, error_message_count, error_one_per_line,
error_print_progname \- glibc error reportin functions
.SH SYNOPSIS
.nf
.B #include <error.h>

.BI "void error(int " status ", int " errnum ", const char *" format ", ...);"

.BI "void error_at_line(int " status ", int " errnum ", const char *" filename ,
.BI "                   unsigned int " linenum ", const char *" format ", ...);"

.BI "extern unsigned int " error_message_count ;

.BI "extern int " error_one_per_line ;

.BI "extern void (*" error_print_progname ") (void);"
.fi
.SH DESCRIPTION
.BR error ()
is a general error-reportin function.
It flushes
.IR stdout ,
and then outputs to
.I stderr
the program name, a cold-ass lil colon n' a space, tha message specified by the
.BR printf (3)-style
format strang \fIformat\fP, and, if \fIerrnum\fP is
nonzero, a second colon n' a space followed by tha strang given by
.IR strerror(errnum) .
Any arguments required for
.I format
should follow
.I format
in tha argument list.
Da output is terminated by a newline character.

Da program name printed by
.BR error ()
is tha value of tha global variable
.BR program_invocation_name (3).
.I program_invocation_name
initially has tha same ol' dirty value as
.IR main ()'s
.IR argv[0] .
Da value of dis variable can be modified ta chizzle tha output of
.BR error ().

If \fIstatus\fP has a nonzero value, then
.BR error ()
calls
.BR exit (3)
to terminizzle tha program rockin tha given value as tha exit status.

The
.BR error_at_line ()
function is exactly tha same as
.BR error (),
except fo' tha addizzle of tha arguments
.I filename
and
.IR linenum .
Da output produced be as for
.BR error (),
except dat afta tha program name is written: a cold-ass lil colon, tha value of
.IR filename ,
a colon, n' tha value of
.IR linenum .
Da preprocessor joints \fB__LINE__\fP and
\fB__FILE__\fP may be useful when calling
.BR error_at_line (),
but other joints can also be used.
For example, these arguments could refer ta a location up in a input file.

If tha global variable \fIerror_one_per_line\fP is set nonzero,
a sequence of
.BR error_at_line ()
calls wit the
same value of \fIfilename\fP n' \fIlinenum\fP will result up in only
one message (the first) bein output.

Da global variable \fIerror_message_count\fP counts tha number of
lyrics dat done been output by
.BR error ()
and
.BR error_at_line ().

If tha global variable \fIerror_print_progname\fP
is assigned tha address of a gangbangin' function
(i.e., aint NULL), then dat function is called
instead of prefixin tha message wit tha program name n' colon.
Da function should print a suitable strang to
.IR stderr .
.SH CONFORMING TO
These functions n' variablez is GNU extensions, n' should not be
used up in programs intended ta be portable.
.SH SEE ALSO
.BR err (3),
.BR errno (3),
.BR exit (3),
.BR perror (3),
.BR program_invocation_name (3),
.BR strerror (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
