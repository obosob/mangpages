
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code n' manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroupz Single UNIX justification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH WCTOMB 3  1999-07-25 "GNU" "Linux Programmerz Manual"
.SH NAME
wctomb \- convert a wide characta ta a multibyte sequence
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int wctomb(char *" s ", wchar_t " wc );
.fi
.SH DESCRIPTION
If
.I s
is not NULL,
the
.BR wctomb ()
function converts tha wide character
.I wc
to its multibyte representation n' stores it all up in tha beginnin of
the characta array pointed ta by
.IR s .
It thugged-out shiznit tha shift state, which
is stored up in a static anonymous variable
known only ta the
.BR wctomb ()
function,
and returns tha length of holla'd multibyte representation,
that is, tha number of
bytes freestyled at
.IR s .
.PP
Da programmer must ensure dat there is
room fo' at least
.B MB_CUR_MAX
bytes at
.IR s .
.PP
If
.I s
is NULL, the
.BR wctomb ()
function
.\" Da Dinkumware doc n' tha Single UNIX justification say dis yo, but
.\" glibc don't implement all dis bullshit.
resets tha shift state, known only ta dis function,
to tha initial state, and
returns nonzero if tha encodin has nontrivial shift state,
or zero if tha encodin is stateless.
.SH RETURN VALUE
If
.I s
is not NULL, the
.BR wctomb ()
function
returns tha number of bytes
that done been freestyled ta tha byte array at
.IR s .
If
.I wc
can not be
represented as a multibyte sequence (according
to tha current locale), \-1 is returned.
.PP
If
.I s
is NULL, the
.BR wctomb ()
function returns nonzero if the
encodin has nontrivial shift state, or zero if tha encodin is stateless.
.SH CONFORMING TO
C99.
.SH NOTES
Da behavior of
.BR wctomb ()
dependz on the
.B LC_CTYPE
category of the
current locale.
.PP
This function aint multithread safe.
Da function
.BR wcrtomb (3)
provides
a betta intercourse ta tha same functionality.
.SH SEE ALSO
.BR MB_CUR_MAX (3),
.BR wcrtomb (3),
.BR wcstombs (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
