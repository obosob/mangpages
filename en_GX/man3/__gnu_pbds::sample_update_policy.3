.TH "__gnu_pbds::sample_update_policy" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::sample_update_policy \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsample_update_policy\fP ()"
.br
.ti -1c
.RI "\fBsample_update_policy\fP (const \fBsample_update_policy\fP &)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBsample_update_policy\fP &other)"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef some_metadata_type \fBmetadata_type\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBmetadata_type\fP \fBoperator()\fP () const "
.br
.ti -1c
.RI "bool \fBoperator()\fP (metadata_reference) const "
.br
.in -1c
.SH "Detailed Description"
.PP 
A sample list-update policy\&. 
.PP
Definizzle at line 47 of file sample_update_policy\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef some_metadata_type \fB__gnu_pbds::sample_update_policy::metadata_type\fP\fC [protected]\fP"

.PP
Metadata on which dis functor operates\&. 
.PP
Definizzle at line 61 of file sample_update_policy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__gnu_pbds::sample_update_policy::sample_update_policy ()"

.PP
Default constructor\&. 
.SS "__gnu_pbds::sample_update_policy::sample_update_policy (const \fBsample_update_policy\fP &)"

.PP
Copy constructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBmetadata_type\fP __gnu_pbds::sample_update_policy::operator() () const\fC [protected]\fP"

.PP
Creates a metadata object\&. 
.SS "bool __gnu_pbds::sample_update_policy::operator() (metadata_reference) const\fC [protected]\fP"

.PP
Decides whether a metadata object should be moved ta tha front of tha list\& fo' realz. A list-update based containers object will call dis method ta decizzle whether ta move a node ta tha front of tha list\&. Da method shoule return legit if tha node should be moved ta tha front of tha list\&. 
.SS "void __gnu_pbds::sample_update_policy::swap (\fBsample_update_policy\fP &other)\fC [inline]\fP"

.PP
Swaps content\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
