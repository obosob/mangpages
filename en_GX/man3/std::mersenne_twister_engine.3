" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::mersenne_twister_engine< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _UIntType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmersenne_twister_engine\fP (\fBresult_type\fP __sd=default_seed)"
.br
.ti -1c
.RI "template<typename _Sseq , typename  = typename std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value> ::type> \fBmersenne_twister_engine\fP (_Sseq &__q)"
.br
.ti -1c
.RI "void \fBdiscard\fP (unsigned long long __z)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBoperator()\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP (\fBresult_type\fP __sd=default_seed)"
.br
.ti -1c
.RI "template<typename _Sseq > \fBstd::enable_if\fP< \fBstd::is_class\fP
.br
< _Sseq >::value >::type \fBseed\fP (_Sseq &__q)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBmax\fP ()"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBmin\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBdefault_seed\fP"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBinitialization_multiplier\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBmask_bits\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBshift_size\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBstate_size\fP"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBtempering_b\fP"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBtempering_c\fP"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBtempering_d\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBtempering_l\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBtempering_s\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBtempering_t\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBtempering_u\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBword_size\fP"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBxor_mask\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename _UIntType1 , size_t __w1, size_t __n1, size_t __m1, size_t __r1, _UIntType1 __a1, size_t __u1, _UIntType1 __d1, size_t __s1, _UIntType1 __b1, size_t __t1, _UIntType1 __c1, size_t __l1, _UIntType1 __f1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::mersenne_twister_engine\fP< _UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1 > &__x)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBmersenne_twister_engine\fP &__lhs, const \fBmersenne_twister_engine\fP &__rhs)"
.br
.ti -1c
.RI "template<typename _UIntType1 , size_t __w1, size_t __n1, size_t __m1, size_t __r1, _UIntType1 __a1, size_t __u1, _UIntType1 __d1, size_t __s1, _UIntType1 __b1, size_t __t1, _UIntType1 __c1, size_t __l1, _UIntType1 __f1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::mersenne_twister_engine\fP< _UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1 > &__x)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>class std::mersenne_twister_engine< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >"
A generalized feedback shift regista discrete random number generator\&.
.PP
This algorithm avoidz multiplication n' division n' is designed ta be thugged-out ta a pipelined architecture\&. If tha parametas is chosen erectly, dis generator will produce numbers wit a straight-up long period n' fairly phat apparent entropy, although still not cryptographically strong\&.
.PP
Da dopest way ta use dis generator is wit tha predefined mt19937 class\&.
.PP
This algorithm was originally invented by Makoto Matsumoto n' Takuji Nishimura\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fI__w\fP Word size, tha number of bits up in each element of tha state vector\&. 
.br
\fI__n\fP Da degree of recursion\&. 
.br
\fI__m\fP Da period parameter\&. 
.br
\fI__r\fP Da separation point bit index\&. 
.br
\fI__a\fP Da last row of tha twist matrix\&. 
.br
\fI__u\fP Da first right-shift temperin matrix parameter\&. 
.br
\fI__d\fP Da first right-shift temperin matrix mask\&. 
.br
\fI__s\fP Da first left-shift temperin matrix parameter\&. 
.br
\fI__b\fP Da first left-shift temperin matrix mask\&. 
.br
\fI__t\fP Da second left-shift temperin matrix parameter\&. 
.br
\fI__c\fP Da second left-shift temperin matrix mask\&. 
.br
\fI__l\fP Da second right-shift temperin matrix parameter\&. 
.br
\fI__f\fP Initialization multiplier\&. 
.RE
.PP

.PP
Definizzle at line 449 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> typedef _UIntType \fBstd::mersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >::\fBresult_type\fP"
Da type of tha generated random value\&. 
.PP
Definizzle at line 452 of file random\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> template<typename _Sseq , typename  = typename std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value> ::type> \fBstd::mersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >::\fBmersenne_twister_engine\fP (_Sseq &__q)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Constructs a mersenne_twister_engine random number generator engine seeded from tha seed sequence \fC__q\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__q\fP tha seed sequence\&. 
.RE
.PP

.PP
Definizzle at line 513 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _UIntType , size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> void \fBstd::mersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >::discard (unsigned long long__z)"

.PP
Discard a sequence of random numbers\&. 
.PP
Definizzle at line 435 of file bits/random\&.tcc\&.
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> static constexpr \fBresult_type\fP \fBstd::mersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >::max ()\fC [inline]\fP, \fC [static]\fP"

.PP
Gets tha phattest possible value up in tha output range\&. 
.PP
Definizzle at line 534 of file random\&.h\&.
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> static constexpr \fBresult_type\fP \fBstd::mersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f >::min ()\fC [inline]\fP, \fC [static]\fP"

.PP
Gets tha smallest possible value up in tha output range\&. 
.PP
Definizzle at line 527 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> template<typename _UIntType1 , size_t __w1, size_t __n1, size_t __m1, size_t __r1, _UIntType1 __a1, size_t __u1, _UIntType1 __d1, size_t __s1, _UIntType1 __b1, size_t __t1, _UIntType1 __c1, size_t __l1, _UIntType1 __f1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP<_CharT, _Traits>& operator<< (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::mersenne_twister_engine\fP< _UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1 > &__x)\fC [friend]\fP"

.PP
Inserts tha current state of a % mersenne_twister_engine random number generator engine \fC__x\fP tha fuck into tha output stream \fC__os\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__os\fP An output stream\&. 
.br
\fI__x\fP A % mersenne_twister_engine random number generator engine\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da output stream wit tha state of \fC__x\fP banged or up in a error state\&. 
.RE
.PP

.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> bool operator== (const \fBmersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f > &__lhs, const \fBmersenne_twister_engine\fP< _UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f > &__rhs)\fC [friend]\fP"

.PP
Compares two % mersenne_twister_engine random number generator objectz of tha same type fo' equality\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP A % mersenne_twister_engine random number generator object\&. 
.br
\fI__rhs\fP Another % mersenne_twister_engine random number generator object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if tha infinite sequencez of generated joints would be equal, false otherwise\&. 
.RE
.PP

.PP
Definizzle at line 559 of file random\&.h\&.
.SS "template<typename _UIntType, size_t __w, size_t __n, size_t __m, size_t __r, _UIntType __a, size_t __u, _UIntType __d, size_t __s, _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f> template<typename _UIntType1 , size_t __w1, size_t __n1, size_t __m1, size_t __r1, _UIntType1 __a1, size_t __u1, _UIntType1 __d1, size_t __s1, _UIntType1 __b1, size_t __t1, _UIntType1 __c1, size_t __l1, _UIntType1 __f1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP<_CharT, _Traits>& operator>> (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::mersenne_twister_engine\fP< _UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1 > &__x)\fC [friend]\fP"

.PP
Extracts tha current state of a % mersenne_twister_engine random number generator engine \fC__x\fP from tha input stream \fC__is\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__is\fP An input stream\&. 
.br
\fI__x\fP A % mersenne_twister_engine random number generator engine\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da input stream wit tha state of \fC__x\fP extracted or up in a error state\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
