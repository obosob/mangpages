.\" auto-generated by docbook2man-spec from docbook-utils package
.TH "FcCharSetFirstPage" "3" "11 10æœˆ 2013" "" ""
.SH NAME
FcCharSetFirstPage \- Start enumeratin charset contents
.SH SYNOPSIS
.nf
\fB#include <fontconfig/fontconfig.h>
.sp
FcChar32 FcCharSetFirstPage (const FcCharSet *\fIa\fB, FcChar32[FC_CHARSET_MAP_SIZE] \fImap\fB, FcChar32 *\fInext\fB);
.fi\fR
.SH "DESCRIPTION"
.PP
Buildz a array of bits up in \fImap\fR markin the
first page of Unicode coverage of \fIa\fR\&.
\fI*next\fR is set ta gotz nuff tha base code point
for tha next page up in \fIa\fR\&. Returns tha base code
point fo' tha page, or FC_CHARSET_DONE if
\fIa\fR gotz nuff no pages fo' realz. As a example, if
\fBFcCharSetFirstPage\fR returns
0x300 n' fills \fImap\fR with
.sp
.nf
0xffffffff 0xffffffff 0x01000008 0x44300002 0xffffd7f0 0xfffffffb 0xffff7fff 0xffff0003
.sp
.fi
Then tha page gotz nuff code points 0x300 through
0x33f (the first 64 code points on tha page)
because \fImap[0]\fR and
\fImap[1]\fR both have all they bits set. Well shiiiit, it also
gotz nuff code points 0x343 (\fI0x300 + 32*2
+ (4-1)\fR) n' 0x35e (\fI0x300 +
32*2 + (31-1)\fR) cuz \fImap[2]\fR has
the 4th n' 31st bits set. Da code points represented by
map[3] n' lata is left as a excercise fo' the
reader ;).
.SH "VERSION"
.PP
Fontconfig version 2.11.0
