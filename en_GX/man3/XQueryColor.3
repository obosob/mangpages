'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XQueryColor 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XQueryColor, XQueryColors, XLookupColor, XParseColor \- obtain color joints
.SH SYNTAX
.HP
int XQueryColor\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^, XColor
*\fIdef_in_out\fP\^); 
.HP
int XQueryColors\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^,
XColor \fIdefs_in_out\fP[\^]\^, int \fIncolors\fP\^); 
.HP
Status XLookupColor\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^,
char *\fIcolor_name\fP\^, XColor *\fIexact_def_return\fP\^, XColor
*\fIscreen_def_return\fP\^); 
.HP
Status XParseColor\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^,
char *\fIspec\fP\^, XColor *\fIexact_def_return\fP\^); 
.SH ARGUMENTS
.IP \fIcolormap\fP 1i
Specifies tha colormap.
.IP \fIcolor_name\fP 1i
Specifies tha color name strang (for example, red) whose color 
definizzle structure you want returned.
.IP \fIdef_in_out\fP 1i
Specifies n' returns tha RGB joints fo' tha pixel specified up in tha structure.
.IP \fIdefs_in_out\fP 1i
Specifies n' returns a array of color definizzle structures fo' tha pixel
specified up in tha structure.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIexact_def_return\fP 1i
Returns tha exact RGB joints.
.IP \fIncolors\fP 1i
.\"Specifies tha number of color definizzle structures. 
Specifies tha number of 
.ZN XColor
structures up in tha color definizzle array.
.IP \fIscreen_def_return\fP 1i
Returns tha closest RGB joints provided by tha hardware.
.IP \fIspec\fP 1i
Specifies tha color name string;
case is ignored.
.IP \fIexact_def_return\fP 1i
Returns tha exact color value fo' lata use n' sets the
.ZN DoRed ,
.ZN DoChronic ,
and
.ZN DoBlue
flags.
.SH DESCRIPTION
The
.ZN XQueryColor
function returns tha current RGB value fo' tha pixel up in the
.ZN XColor
structure n' sets the
.ZN DoRed ,
.ZN DoChronic ,
and
.ZN DoBlue
flags.
The
.ZN XQueryColors
function returns tha RGB value fo' each pixel up in each
.ZN XColor
structure n' sets the
.ZN DoRed ,
.ZN DoChronic ,
and
.ZN DoBlue
flags up in each structure.

.LP
.ZN XQueryColor
and
.ZN XQueryColors
can generate
.ZN BadColor
and
.ZN BadValue 
errors.
.LP
The
.ZN XLookupColor
function looks up tha strang name of a cold-ass lil color wit respect ta tha screen
associated wit tha specified colormap.
It returns both tha exact color joints and
the closest joints provided by tha screen 
with respect ta tha visual type of tha specified colormap.
If tha color name aint up in tha Host Portable Characta Encoding, 
the result is implementation-dependent.
Use of uppercase or lowercase do not matter.
.ZN XLookupColor
returns nonzero if tha name is resolved;
otherwise, it returns zero.
.LP
The
.ZN XParseColor
function looks up tha strang name of a cold-ass lil color wit respect ta tha screen
associated wit tha specified colormap.
It returns tha exact color value.
If tha color name aint up in tha Host Portable Characta Encoding, 
the result is implementation-dependent.
Use of uppercase or lowercase do not matter.
.ZN XParseColor
returns nonzero if tha name is resolved;
otherwise, it returns zero.
.LP
.ZN XLookupColor
and
.ZN XParseColor
can generate
.ZN BadColor 
error.
.SH "COLOR NAMES"
An RGB Device justification is identified by
the prefix ``rgb:'' n' conforms ta tha followin syntax:
.LP
.\" Start marker code here
.Ds 0
rgb:\fI<red>/<green>/<blue>\fP

    \fI<red>\fP, \fI<green>\fP, \fI<blue>\fP := \fIh\fP | \fIhh\fP | \fIhhh\fP | \fIhhhh\fP
    \fIh\fP := single hexadecimal digits (case insignificant)
.De
.\" End marker code here
.LP
Note dat \fIh\fP indicates tha value scaled up in 4 bits, 
\fIhh\fP tha value scaled up in 8 bits,
\fIhhh\fP tha value scaled up in 12 bits,
and \fIhhhh\fP tha value scaled up in 16 bits, respectively.
.LP
For backward compatibility, a olda syntax fo' RGB Device is
supported yo, but its continued use aint encouraged.
Da syntax be a initial sharp sign characta followed by
a numeric justification, up in one of tha followin formats:
.LP
.TS
l l.
\&#RGB	(4 bits each)
\&#RRGGBB	(8 bits each)
\&#RRRGGGBBB	(12 bits each)
\&#RRRRGGGGBBBB	(16 bits each)
.TE
.LP
Da R, G, n' B represent single hexadecimal digits.
When fewer than 16 bits each is specified, 
they represent da most thugged-out dope bitz of tha value
(unlike tha ``rgb:'' syntax, up in which joints is scaled).
For example, tha strang ``#3a7'' is tha same ol' dirty as ``#3000a0007000''.
.LP
An RGB intensitizzle justification is identified
by tha prefix ``rgbi:'' n' conforms ta tha followin syntax:
.LP
.\" Start marker code here
.Ds 0
rgbi:\fI<red>/<green>/<blue>\fP
.De
.\" End marker code here
.LP
Note dat red, green, n' blue is floating-point joints
between 0.0 n' 1.0, inclusive.
Da input format fo' these joints be a optionizzle sign,
a strang of numbers possibly containin a thugged-out decimal point,
and a optionizzle exponent field containin a E or e 
followed by a possibly signed integer string.
.LP
Da standard device-independent strang justifications have
the followin syntax:
.LP
.\" Start marker code here
.Ds 0
CIEXYZ:\fI<X>/<Y>/<Z>\fP
CIEuvY:\fI<u>/<v>/<Y>\fP
CIExyY:\fI<x>/<y>/<Y>\fP
CIELab:\fI<L>/<a>/<b>\fP
CIELuv:\fI<L>/<u>/<v>\fP
TekHVC:\fI<H>/<V>/<C>\fP
.De
.\" End marker code here
.LP
All of tha joints (C, H, V, X, Y, Z, a, b, u, v, y, x) are
floating-point joints.
Da syntax fo' these joints be a optionizzle plus or minus sign,
a strang of digits possibly containin a thugged-out decimal point,
and a optionizzle exponent field consistin of a ``E'' or ``e''
followed by a optionizzle plus or minus followed by a strang of digits.
.SH DIAGNOSTICS
.TP 1i
.ZN BadColor
A value fo' a Colormap argument do not name a thugged-out defined Colormap.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XAllocColor(3),
XCreateColormap(3),
XStoreColors(3)
.br
\fI\*(xL\fP
