.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XLookupKeysym 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XLookupKeysym, XRefreshKeyboardMapping, XLookupString, XRebindKeysym \- handle keyboard input events up in Latin-1
.SH SYNTAX
.HP
KeySym XLookupKeysym(\^XKeyEvent *\fIkey_event\fP\^, int \fIindex\fP\^); 
.HP
int XRefreshKeyboardMapping(\^XMappingEvent *\fIevent_map\fP\^); 
.HP
int XLookupString(\^XKeyEvent *\fIevent_struct\fP\^, char
*\fIbuffer_return\fP\^, int \fIbytes_buffer\fP\^, KeySym
*\fIkeysym_return\fP\^, XComposeStatus *\fIstatus_in_out\fP\^); 
.HP
int XRebindKeysym(\^Display *\fIdisplay\fP\^, KeySym \fIkeysym\fP\^, KeySym
\fIlist\fP\^[\^]\^, int \fImod_count\fP\^, unsigned char *\fIstring\fP\^, int
\fInum_bytes\fP\^); 
.SH ARGUMENTS
.IP \fIbuffer_return\fP 1i
Returns tha translated characters.
.IP \fIbytes_buffer\fP 1i
Specifies tha length of tha buffer.
No mo' than bytes_buffer of translation is returned.
.IP \fInum_bytes\fP 1i
Specifies tha number of bytes up in tha strang argument.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIevent_map\fP 1i
Specifies tha mappin event dat is ta be used.
.IP \fIevent_struct\fP 1i
Specifies tha key event structure ta be used.
Yo ass can pass
.ZN XKeyPressedEvent
or
.ZN XKeyReleasedEvent .
.IP \fIindex\fP 1i
Specifies tha index tha fuck into tha KeySyms list fo' tha eventz KeyCode.
.IP \fIkey_event\fP 1i
Specifies tha 
.ZN KeyPress
or
.ZN KeyRelease
event.
.IP \fIkeysym\fP 1i
Specifies tha KeySym dat is ta be \*(Fn.
.IP \fIkeysym_return\fP 1i
Returns tha KeySym computed from tha event if dis argument aint NULL.
.IP \fIlist\fP 1i
Specifies tha KeySyms ta be used as modifiers.
.IP \fImod_count\fP 1i
Specifies tha number of modifiers up in tha modifier list.
.IP \fIstatus_in_out\fP 1i
Specifies or returns tha 
.ZN XComposeStatus 
structure or NULL.
.IP \fIstring\fP 1i
Specifies tha strang dat is copied n' is ghon be returned by 
.ZN XLookupStrin .
.SH DESCRIPTION
The
.ZN XLookupKeysym
function uses a given keyboard event n' tha index you specified ta return
the KeySym from tha list dat correspondz ta tha KeyCode member up in the
.ZN XKeyPressedEvent
or
.ZN XKeyReleasedEvent
structure.
If no KeySym is defined fo' tha KeyCode of tha event,
.ZN XLookupKeysym
returns
.ZN NoSymbol .
.LP
The
.ZN XRefreshKeyboardMapping
function refreshes tha stored modifier n' keymap shiznit.
Yo ass probably call dis function when a
.ZN MappingNotify
event wit a request gangmember of
.ZN MappingKeyboard
or
.ZN MappingModifier
occurs.
Da result is ta update Xlibz knowledge of tha keyboard.
.LP
The
.ZN XLookupString
function translates a key event ta a KeySym n' a string.
Da KeySym is obtained by rockin tha standard interpretation of the
.ZN Shift ,
.ZN Lock ,
group, n' numlock modifiers as defined up in tha X Protocol justification.
If tha KeySym has been rebound (see
.ZN XRebindKeysym ),
the bound strang is ghon be stored up in tha buffer.
Otherwise, tha KeySym is mapped, if possible, ta a ISO Latin-1 character
or (if tha Control modifier is on) ta a ASCII control character,
and dat characta is stored up in tha buffer.
.ZN XLookupString
returns tha number of charactas dat is stored up in tha buffer.
.LP
If present (non-NULL),
the
.ZN XComposeStatus
structure recordz tha state,
which is private ta Xlib,
that needz preservation across calls to
.ZN XLookupString
to implement compose processing.
Da creation of
.ZN XComposeStatus
structures is implementation-dependent;
a portable program must pass NULL fo' dis argument.
.LP
The
.ZN XRebindKeysym
function can be used ta rebind tha meanin of a KeySym fo' tha client.
It do not redefine any key up in tha X server but merely
provides a easy as fuck  way fo' long strings ta be attached ta keys.
.ZN XLookupString
returns dis strang when tha appropriate set of
modifier keys is pressed n' when tha KeySym would done been used for
the translation.
No text conversions is performed;
the client is responsible fo' supplyin appropriately encoded strings.
Note dat you can rebind a KeySym dat may not exist.
.SH "SEE ALSO"
XButtonEvent(3),
XMapEvent(3),
XStringToKeysym(3),
XkbLookupKeySym(3),
XkbRefreshKeyboardMapping(3),
XmbLookupString(3),
XwcLookupString(3),
Xutf8LookupString(3),
Compose(5)
.br
\fI\*(xL\fP
