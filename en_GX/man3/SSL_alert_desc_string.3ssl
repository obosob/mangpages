.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SSL_alert_type_strin 3"
.TH SSL_alert_type_strin 3 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
SSL_alert_type_string, SSL_alert_type_string_long, SSL_alert_desc_string, SSL_alert_desc_string_long \- git textual description of alert shiznit
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/ssl.h>
\&
\& const char *SSL_alert_type_string(int value);
\& const char *SSL_alert_type_string_long(int value);
\&
\& const char *SSL_alert_desc_string(int value);
\& const char *SSL_alert_desc_string_long(int value);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fISSL_alert_type_string()\fR returns a one letta strang indicatin the
type of tha alert specified by \fBvalue\fR.
.PP
\&\fISSL_alert_type_string_long()\fR returns a strang indicatin tha type of tha alert
specified by \fBvalue\fR.
.PP
\&\fISSL_alert_desc_string()\fR returns a two letta strang as a gangbangin' finger-lickin' dirty-ass short form
describin tha reason of tha alert specified by \fBvalue\fR.
.PP
\&\fISSL_alert_desc_string_long()\fR returns a strang describin tha reason
of tha alert specified by \fBvalue\fR.
.SH "NOTES"
.IX Header "NOTES"
When one side of a \s-1SSL/TLS\s0 communication wants ta inform tha peer about
a special thang, it sendz a alert. Da alert is busted as a special message
and do not influence tha aiiight data stream (unless its contents thangs up in dis biatch
in tha communication bein canceled).
.PP
A warnin alert is sent, when a non-fatal error condizzle occurs. The
\&\*(L"close notify\*(R" alert is busted as a warnin alert. Other examplez for
non-fatal errors is certificate errors (\*(L"certificate expired\*(R",
\&\*(L"unsupported certificate\*(R"), fo' which a warnin alert may be sent.
(Da bustin  jam may however decizzle ta bust a gangbangin' fatal error.) The
receivin side may quit tha connection on reception of a warning
alert on it discretion.
.PP
Several alert lyrics must be busted as fatal alert lyrics as specified
by tha \s-1TLS RFC fo' realz. A\s0 fatal alert always leadz ta a cold-ass lil connection abort.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Da followin strings can occur fo' \fISSL_alert_type_string()\fR or
\&\fISSL_alert_type_string_long()\fR:
.ie n .IP """W""/""warning""" 4
.el .IP "``W''/``warning''" 4
.IX Item "W/warning"
.PD 0
.ie n .IP """F""/""fatal""" 4
.el .IP "``F''/``fatal''" 4
.IX Item "F/fatal"
.ie n .IP """U""/""unknown""" 4
.el .IP "``U''/``unknown''" 4
.IX Item "U/unknown"
.PD
This indicates dat no support be available fo' dis alert type.
Probably \fBvalue\fR do not contain a cold-ass lil erect alert message.
.PP
Da followin strings can occur fo' \fISSL_alert_desc_string()\fR or
\&\fISSL_alert_desc_string_long()\fR:
.ie n .IP """\s-1CN""/\s0""close notify""" 4
.el .IP "``\s-1CN''/\s0``close notify''" 4
.IX Item "CN/close notify"
Da connection shall be closed. Y'all KNOW dat shit, muthafucka! This be a warnin alert.
.ie n .IP """\s-1UM""/\s0""unexpected message""" 4
.el .IP "``\s-1UM''/\s0``unexpected message''" 4
.IX Item "UM/unexpected message"
An inappropriate message was received. Y'all KNOW dat shit, muthafucka! This alert be always fatal
and should never be observed up in communication between proper
implementations.
.ie n .IP """\s-1BM""/\s0""bad record mac""" 4
.el .IP "``\s-1BM''/\s0``bad record mac''" 4
.IX Item "BM/bad record mac"
This alert is returned if a record is received wit a incorrect
\&\s-1MAC.\s0 This message be always fatal.
.ie n .IP """\s-1DF""/\s0""decompression failure""" 4
.el .IP "``\s-1DF''/\s0``decompression failure''" 4
.IX Item "DF/decompression failure"
Da decompression function received improper input (e.g. data
that would expand ta excessive length). This message be always
fatal.
.ie n .IP """\s-1HF""/\s0""handshake failure""" 4
.el .IP "``\s-1HF''/\s0``handshake failure''" 4
.IX Item "HF/handshake failure"
Reception of a handshake_failure alert message indicates dat the
sender was unable ta negotiate a aaight set of security
parametas given tha options available. This be a gangbangin' fatal error.
.ie n .IP """\s-1NC""/\s0""no certificate""" 4
.el .IP "``\s-1NC''/\s0``no certificate''" 4
.IX Item "NC/no certificate"
A client, dat was axed ta bust a cold-ass lil certificate, do not bust a cold-ass lil certificate
(SSLv3 only).
.ie n .IP """\s-1BC""/\s0""bad certificate""" 4
.el .IP "``\s-1BC''/\s0``bad certificate''" 4
.IX Item "BC/bad certificate"
A certificate was corrupt, contained signatures dat did not
verify erectly, etc
.ie n .IP """\s-1UC""/\s0""unsupported certificate""" 4
.el .IP "``\s-1UC''/\s0``unsupported certificate''" 4
.IX Item "UC/unsupported certificate"
A certificate waz of a unsupported type.
.ie n .IP """\s-1CR""/\s0""certificate revoked""" 4
.el .IP "``\s-1CR''/\s0``certificate revoked''" 4
.IX Item "CR/certificate revoked"
A certificate was revoked by its signer.
.ie n .IP """\s-1CE""/\s0""certificate expired""" 4
.el .IP "``\s-1CE''/\s0``certificate expired''" 4
.IX Item "CE/certificate expired"
A certificate has expired or aint currently valid.
.ie n .IP """\s-1CU""/\s0""certificate unknown""" 4
.el .IP "``\s-1CU''/\s0``certificate unknown''" 4
.IX Item "CU/certificate unknown"
Some other (unspecified) issue arose up in processin the
certificate, renderin it unacceptable.
.ie n .IP """\s-1IP""/\s0""illegal parameter""" 4
.el .IP "``\s-1IP''/\s0``illegal parameter''" 4
.IX Item "IP/illegal parameter"
A field up in tha handshake was outta range or inconsistent with
other fields. This be always fatal.
.ie n .IP """\s-1DC""/\s0""decryption failed""" 4
.el .IP "``\s-1DC''/\s0``decryption failed''" 4
.IX Item "DC/decryption failed"
A TLSCiphertext decrypted up in a invalid way: either it wasn't an
even multiple of tha block length or its paddin joints, when
checked, weren't erect. This message be always fatal.
.ie n .IP """\s-1RO""/\s0""record overflow""" 4
.el .IP "``\s-1RO''/\s0``record overflow''" 4
.IX Item "RO/record overflow"
A TLSCiphertext record was received which had a length mo' than
2^14+2048 bytes, or a record decrypted ta a TLSCompressed record
with mo' than 2^14+1024 bytes. This message be always fatal.
.ie n .IP """\s-1CA""/\s0""unknown \s-1CA""\s0" 4
.el .IP "``\s-1CA''/\s0``unknown \s-1CA''\s0" 4
.IX Item "CA/unknown CA"
A valid certificate chain or partial chain was received yo, but the
certificate was not accepted cuz tha \s-1CA\s0 certificate could not
be located or couldn't be matched wit a known, trusted \s-1CA. \s0 This
message be always fatal.
.ie n .IP """\s-1AD""/\s0""access denied""" 4
.el .IP "``\s-1AD''/\s0``access denied''" 4
.IX Item "AD/access denied"
A valid certificate was received yo, but when access control was
applied, tha sender decided not ta proceed wit negotiation.
This message be always fatal.
.ie n .IP """\s-1DE""/\s0""decode error""" 4
.el .IP "``\s-1DE''/\s0``decode error''" 4
.IX Item "DE/decode error"
A message could not be decoded cuz some field was outta the
specified range or tha length of tha message was incorrect. This
message be always fatal.
.ie n .IP """\s-1CY""/\s0""decrypt error""" 4
.el .IP "``\s-1CY''/\s0``decrypt error''" 4
.IX Item "CY/decrypt error"
A handshake cryptographic operation failed, includin being
unable ta erectly verify a signature, decrypt a key exchange,
or validate a gangbangin' finished message.
.ie n .IP """\s-1ER""/\s0""export restriction""" 4
.el .IP "``\s-1ER''/\s0``export restriction''" 4
.IX Item "ER/export restriction"
A negotiation not up in compliizzle wit export restrictions was
detected; fo' example, attemptin ta transfer a 1024 bit
ephemeral \s-1RSA\s0 key fo' tha \s-1RSA_EXPORT\s0 handshake method. Y'all KNOW dat shit, muthafucka! This
message be always fatal.
.ie n .IP """\s-1PV""/\s0""protocol version""" 4
.el .IP "``\s-1PV''/\s0``protocol version''" 4
.IX Item "PV/protocol version"
Da protocol version tha client has attempted ta negotiate is
recognized yo, but not supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. (For example, oldschool protocol
versions might be avoided fo' securitizzle reasons). This message is
always fatal.
.ie n .IP """\s-1IS""/\s0""insufficient security""" 4
.el .IP "``\s-1IS''/\s0``insufficient security''" 4
.IX Item "IS/insufficient security"
Returned instead of handshake_failure when a negotiation has
failed specifically cuz tha server requires ciphers more
secure than dem supported by tha client. This message be always
fatal.
.ie n .IP """\s-1IE""/\s0""internal error""" 4
.el .IP "``\s-1IE''/\s0``internal error''" 4
.IX Item "IE/internal error"
An internal error unrelated ta tha peer or tha erectnizz of the
protocol make it impossible ta continue (like fuckin a memory
allocation failure). This message be always fatal.
.ie n .IP """\s-1US""/\s0""user canceled""" 4
.el .IP "``\s-1US''/\s0``user canceled''" 4
.IX Item "US/user canceled"
This handshake is bein canceled fo' some reason unrelated ta a
protocol failure. If tha user cancels a operation afta the
handshake is complete, just closin tha connection by bustin  a
close_notify is mo' appropriate. This alert should be followed
by a cold-ass lil close_notify. This message is generally a warning.
.ie n .IP """\s-1NR""/\s0""no renegotiation""" 4
.el .IP "``\s-1NR''/\s0``no renegotiation''" 4
.IX Item "NR/no renegotiation"
Sent by tha client up in response ta a wassup request or by the
server up in response ta a cold-ass lil client wassup afta initial handbobbin.
Either of these would normally lead ta renegotiation; when that
is not appropriate, tha recipient should respond wit dis alert;
at dat point, tha original gangsta requesta can decizzle whether to
proceed wit tha connection. I aint talkin' bout chicken n' gravy biatch. One case where dis would be
appropriate would be where a server has spawned a process to
satisfy a request; tha process might receive securitizzle parameters
(key length, authentication, etc.) at startup n' it might be
hard as fuck ta rap chizzlez ta these parametas afta that
point. This message be always a warning.
.ie n .IP """\s-1UP""/\s0""unknown \s-1PSK\s0 identity""" 4
.el .IP "``\s-1UP''/\s0``unknown \s-1PSK\s0 identity''" 4
.IX Item "UP/unknown PSK identity"
Sent by tha server ta indicate dat it do not recognize a \s-1PSK\s0
identitizzle or a \s-1SRP\s0 identity.
.ie n .IP """\s-1UK""/\s0""unknown""" 4
.el .IP "``\s-1UK''/\s0``unknown''" 4
.IX Item "UK/unknown"
This indicates dat no description be available fo' dis alert type.
Probably \fBvalue\fR do not contain a cold-ass lil erect alert message.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIssl\fR\|(3), \fISSL_CTX_set_info_callback\fR\|(3)
