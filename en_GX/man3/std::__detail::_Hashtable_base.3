" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__detail::_Hashtable_base< _Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::__detail::_Hash_code_base< _Key, _Value, _ExtractKey, _H1, _H2, _Hash, _Traits::__hash_cached::value >\fP, n' \fBstd::__detail::_Hashtable_ebo_helper< 0, _Equal >\fP\&.
.PP
Inherited by \fBstd::_Hashtable< _Key, _Tp, _Hash, _Pred, _Alloc >\fP, \fBstd::_Hashtable< _Value, _Hash, _Pred, _Alloc >\fP, n' \fBstd::_Hashtable< _Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "usin \fB__constant_iterators\fP = typename __traits_type::__constant_iterators"
.br
.ti -1c
.RI "usin \fB__hash_cached\fP = typename __traits_type::__hash_cached"
.br
.ti -1c
.RI "usin \fB__hash_code\fP = typename __hash_code_base::__hash_code"
.br
.ti -1c
.RI "usin \fB__hash_code_base\fP = \fB_Hash_code_base\fP< _Key, _Value, _ExtractKey, _H1, _H2, _Hash, __hash_cached::value >"
.br
.ti -1c
.RI "usin \fB__iconv_type\fP = typename \fBstd::conditional\fP< __unique_keys::value, _Select1st, _Identitizzle >::type"
.br
.ti -1c
.RI "usin \fB__ireturn_type\fP = typename \fBstd::conditional\fP< __unique_keys::value, \fBstd::pair\fP< \fBiterator\fP, bool >, \fBiterator\fP >::type"
.br
.ti -1c
.RI "usin \fB__node_type\fP = typename __hash_code_base::__node_type"
.br
.ti -1c
.RI "usin \fB__traits_type\fP = _Traits"
.br
.ti -1c
.RI "usin \fB__unique_keys\fP = typename __traits_type::__unique_keys"
.br
.ti -1c
.RI "usin \fBconst_iterator\fP = \fB__detail::_Node_const_iterator\fP< value_type, __constant_iterators::value, __hash_cached::value >"
.br
.ti -1c
.RI "usin \fBconst_local_iterator\fP = \fB__detail::_Local_const_iterator\fP< key_type, value_type, _ExtractKey, _H1, _H2, _Hash, __constant_iterators::value, __hash_cached::value >"
.br
.ti -1c
.RI "typedef std::ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "usin \fBiterator\fP = \fB__detail::_Node_iterator\fP< value_type, __constant_iterators::value, __hash_cached::value >"
.br
.ti -1c
.RI "typedef _Equal \fBkey_equal\fP"
.br
.ti -1c
.RI "typedef _Key \fBkey_type\fP"
.br
.ti -1c
.RI "usin \fBlocal_iterator\fP = \fB__detail::_Local_iterator\fP< key_type, value_type, _ExtractKey, _H1, _H2, _Hash, __constant_iterators::value, __hash_cached::value >"
.br
.ti -1c
.RI "typedef std::size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Value \fBvalue_type\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "usin \fB__bucket_type\fP = \fB__node_base\fP *"
.br
.ti -1c
.RI "usin \fB__node_base\fP = \fB__detail::_Hash_node_base\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fB_Hashtable_base\fP (const _ExtractKey &__ex, const _H1 &__h1, const _H2 &__h2, const _Hash &__hash, const _Equal &__eq)"
.br
.ti -1c
.RI "const _Equal & \fB_M_eq\fP () const "
.br
.ti -1c
.RI "_Equal & \fB_M_eq\fP ()"
.br
.ti -1c
.RI "bool \fB_M_equals\fP (const _Key &__k, __hash_code __c, __node_type *__n) const "
.br
.ti -1c
.RI "void \fB_M_swap\fP (\fB_Hashtable_base\fP &__x)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Key, typename _Value, typename _ExtractKey, typename _Equal, typename _H1, typename _H2, typename _Hash, typename _Traits>struct std::__detail::_Hashtable_base< _Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits >"
Primary class template _Hashtable_base\&.
.PP
Helper class addin pimpment of _Equal functor ta _Hash_code_base type\&.
.PP
Base class templates are:
.IP "\(bu" 2
__detail::_Hash_code_base
.IP "\(bu" 2
__detail::_Hashtable_ebo_helper 
.PP

.PP
Definizzle at line 58 of file hashtable_policy\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
