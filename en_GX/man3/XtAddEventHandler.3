.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtAdd-Event-Handlez XtAdd-Raw-Event-Handlez XtRemove-Event-Handlez XtRemove-Raw-Event-Handlez XtInsert-Event-Handlez XtInsert-Raw-Event-Handlez wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtAddEventHandlez 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtAddEventHandlez, XtAddRawEventHandlez, XtRemoveEventHandlez, XtRemoveRawEventHandlez, XtInsertEventHandlez, XtInsertRawEventHandlez \- add n' remove event handlezs
.SH SYNTAX
.HP
void XtAddEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP, Boolean
\fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointa \fIclient_data\fP);
.HP
void XtAddRawEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP, Boolean
\fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointa \fIclient_data\fP);
.HP
void XtRemoveEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP, Boolean
\fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointa \fIclient_data\fP);
.HP
void XtRemoveRawEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP,
Boolean \fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointer
\fIclient_data\fP);
.HP
void XtInsertEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP, Boolean
\fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointa \fIclient_data\fP,
XtListPosizzle \fIposition\fP);
.HP
void XtInsertRawEventHandlez(Widget \fIw\fP, EventMask \fIevent_mask\fP,
Boolean \fInonmaskable\fP, XtEventHandlez \fIproc\fP, XtPointer
\fIclient_data\fP, XtListPosizzle \fIposition\fP);
.HP
typedef enum { XtListHead, XtListTail } XtListPosition;
.SH ARGUMENTS
.IP \fIclient_data\fP 1i
Specifies additionizzle data ta be passed ta tha clientz event handlez.
.ds Em ta booty-call or unregista dis procedure
.IP \fIevent_mask\fP 1i
Specifies tha event mask fo' which \*(Em.
.ds Nm called or removed
.IP \fInonmaskable\fP 1i
Specifies a Boolean value dat indicates whether dis procedure should be
\*(Nm on tha nonmaskable events
.Pn ( GraphicsExpose ,
.ZN NoExpose ,
.ZN SelectionClear ,
.ZN SelectionRequest ,
.ZN SelectionNotify ,
.ZN ClientMessage ,
and
.ZN MappingNotify ).
.ds Pr \ ta be added or removed
.IP \fIproc\fP 1i
Specifies tha procedure dat is\*(Pr.
.ds Wi fo' which dis event handlez is bein registered
.IP \fIw\fP 1i
Specifies tha widget \*(Wi.
.IP \fIposition\fP 1i
Specifies when tha event handlez is ta be called relatizzle ta other
previously registered handlezs.
.SH DESCRIPTION
The
.ZN XtAddEventHandlez
function registas a procedure wit tha dispatch mechanizzle dat is
to be called when a event dat matches tha mask occurs on tha specified
widget.
If tha procedure be already registered wit tha same client_data,
the specified mask is ORed tha fuck into tha existin mask.
If tha widget is realized,
.ZN XtAddEventHandlez
calls
.ZN XSelectInput ,
if necessary.
.LP
The
.ZN XtAddRawEventHandlez
function is similar to
.ZN XtAddEventHandlez
except dat it do not affect tha widgetz mask n' never causes an
.ZN XSelectInput
for its events.
Note dat tha widget might already have dem mask bits set
because of other nonraw event handlezs registered on dat shit.
.LP
The
.ZN XtRemoveRawEventHandlez
function stops tha specified procedure from receivin tha specified events.
Because tha procedure be a raw event handlez,
this do not affect tha widgetz mask n' never causes a cold-ass lil call on
.ZN XSelectInput .
.LP
.ZN XtInsertEventHandlez
is identical to
.ZN XtAddEventHandlez
with tha additionizzle \fIposition\fP argument. if \fIposition\fP is
.ZN XtListHead ,
the event handlez is registered ta dat it is ghon be called before
any event handlezs dat was previously registered fo' tha same widget.
If \fIposition\fP is
.ZN XtListTail ,
the event handlez is registered ta be called afta any previously
registered event handlezs. If tha procedure be already registered with
the same \fIclient_data\fP value, tha specified mask augments the
existin mask n' tha procedure is repositioned up in tha list.
.LP
.ZN XtInsertRawEventHandlez
is similar to
.ZN XtInsertEventHandlez
except dat it do not modify tha widgetz event mask n' never causes an
.ZN XSelectInput
for tha specified events, n' you can put dat on yo' toast. If tha procedure be already registered wit the
same \fIclient_data\fP value, tha specified mask augments tha existing
mask n' tha procedure is repositioned up in tha list.
.SH "SEE ALSO"
XtAppNextEvent(3),
XtBuildEventMask(3)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
