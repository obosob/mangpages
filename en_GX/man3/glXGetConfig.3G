'\" t
.\"     Title: glXGetConfig
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLXGETCONFIG" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glXGetConfig \- return shiznit bout GLX visuals
.SH "C SPECIFICATION"
.HP \w'int\ glXGetConfig('u
.BI "int glXGetConfig(Display\ *\ " "dpy" ", XVisualInfo\ *\ " "vis" ", int\ " "attrib" ", int\ *\ " "value" ");"
.SH "PARAMETERS"
.PP
\fIdpy\fR
.RS 4
Specifies tha connection ta tha X server\&.
.RE
.PP
\fIvis\fR
.RS 4
Specifies tha visual ta be queried\&. Well shiiiit, it aint nuthin but a pointa ta an
\fBXVisualInfo\fR
structure, not a visual ID or a pointa ta a
\fBVisual\fR\&.
.RE
.PP
\fIattrib\fR
.RS 4
Specifies tha visual attribute ta be returned\&.
.RE
.PP
\fIvalue\fR
.RS 4
Returns tha axed value\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglXGetConfig\fR
sets
\fIvalue\fR
to the
\fIattrib\fR
value of windows or GLX pixmaps pimped wit respect to
\fIvis\fR\&.
\fBglXGetConfig\fR
returns a error code if it fails fo' any reason\&. Otherwise, zero is returned\&.
.PP
\fIattrib\fR
is one of tha following:
.PP

.PP
\fBGLX_USE_GL\fR
.RS 4
\fBTrue\fR
if OpenGL renderin is supported by dis visual,
\fBFalse\fR
otherwise\&.
.RE
.PP
\fBGLX_BUFFER_SIZE\fR
.RS 4
Number of bits per color buffer\&. For RGBA visuals,
\fBGLX_BUFFER_SIZE\fR
is tha sum of
\fBGLX_RED_SIZE\fR,
\fBGLX_GREEN_SIZE\fR,
\fBGLX_BLUE_SIZE\fR, and
\fBGLX_ALPHA_SIZE\fR\&. For color index visuals,
\fBGLX_BUFFER_SIZE\fR
is tha size of tha color indexes\&.
.RE
.PP
\fBGLX_LEVEL\fR
.RS 4
Frame buffer level of tha visual\&. Level zero is tha default frame buffer\&. Positizzle levels correspond ta frame buffers dat overlay tha default buffer, n' wack levels correspond ta frame buffers dat underlay tha default buffer\&.
.RE
.PP
\fBGLX_RGBA\fR
.RS 4
\fBTrue\fR
if color buffers store red, green, blue, n' alpha joints\&.
\fBFalse\fR
if they store color indexes\&.
.RE
.PP
\fBGLX_DOUBLEBUFFER\fR
.RS 4
\fBTrue\fR
if color buffers exist up in front/back pairs dat can be swapped,
\fBFalse\fR
otherwise\&.
.RE
.PP
\fBGLX_STEREO\fR
.RS 4
\fBTrue\fR
if color buffers exist up in left/right pairs,
\fBFalse\fR
otherwise\&.
.RE
.PP
\fBGLX_AUX_BUFFERS\fR
.RS 4
Number of auxiliary color buffers dat is available\&. Zero indicates dat no auxiliary color buffers exist\&.
.RE
.PP
\fBGLX_RED_SIZE\fR
.RS 4
Number of bitz of red stored up in each color buffer\&. Undefined if
\fBGLX_RGBA\fR
is
\fBFalse\fR\&.
.RE
.PP
\fBGLX_GREEN_SIZE\fR
.RS 4
Number of bitz of chronic stored up in each color buffer\&. Undefined if
\fBGLX_RGBA\fR
is
\fBFalse\fR\&.
.RE
.PP
\fBGLX_BLUE_SIZE\fR
.RS 4
Number of bitz of blue stored up in each color buffer\&. Undefined if
\fBGLX_RGBA\fR
is
\fBFalse\fR\&.
.RE
.PP
\fBGLX_ALPHA_SIZE\fR
.RS 4
Number of bitz of alpha stored up in each color buffer\&. Undefined if
\fBGLX_RGBA\fR
is
\fBFalse\fR\&.
.RE
.PP
\fBGLX_DEPTH_SIZE\fR
.RS 4
Number of bits up in tha depth buffer\&.
.RE
.PP
\fBGLX_STENCIL_SIZE\fR
.RS 4
Number of bits up in tha stencil buffer\&.
.RE
.PP
\fBGLX_ACCUM_RED_SIZE\fR
.RS 4
Number of bitz of red stored up in tha accumulation buffer\&.
.RE
.PP
\fBGLX_ACCUM_GREEN_SIZE\fR
.RS 4
Number of bitz of chronic stored up in tha accumulation buffer\&.
.RE
.PP
\fBGLX_ACCUM_BLUE_SIZE\fR
.RS 4
Number of bitz of blue stored up in tha accumulation buffer\&.
.RE
.PP
\fBGLX_ACCUM_ALPHA_SIZE\fR
.RS 4
Number of bitz of alpha stored up in tha accumulation buffer\&.
.RE
.PP
Da X protocol allows a single visual ID ta be instantiated wit different numberz of bits per pixel\&. Windows or GLX pixmaps dat is ghon be rendered wit OpenGL, however, must be instantiated wit a cold-ass lil color buffer depth of
\fBGLX_BUFFER_SIZE\fR\&.
.PP
Although a GLX implementation can export nuff visuals dat support GL rendering, it must support at least one RGBA visual\&. This visual must have at least one color buffer, a stencil buffer of at least 1 bit, a thugged-out depth buffer of at least 12 bits, n' a accumulation buffer\& fo' realz. Alpha bitplanes is optionizzle up in dis visual\&. But fuck dat shiznit yo, tha word on tha street is dat its color buffer size must be as pimped out as dat of tha deepest
\fBTrueColor\fR,
\fBDirectColor\fR,
\fBPseudoColor\fR, or
\fBStaticColor\fR
visual supported on level zero, n' it must itself be made available on level zero\&.
.PP
In addition, if tha X server exports a
\fBPseudoColor\fR
or
\fBStaticColor\fR
visual on framebuffer level 0, a cold-ass lil color index visual be also required on dat level\&. Well shiiiit, it must have at least one color buffer, a stencil buffer of at least 1 bit, n' a thugged-out depth buffer of at least 12 bits\&. This visual must have as nuff color bitplanes as tha deepest
\fBPseudoColor\fR
or
\fBStaticColor\fR
visual supported on level 0\&.
.PP
Applications is dopest freestyled ta select tha visual dat most closely meets they requirements\&. Creatin windows or GLX pixmaps wit unnecessary buffers can result up in reduced renderin performizzle as well as skanky resource allocation\&.
.SH "NOTES"
.PP
\fBXVisualInfo\fR
is defined in
\fIXutil\&.h\&.\fR
It be a structure dat includes
\fIvisual\fR,
\fIvisualID\fR,
\fIscreen\fR, and
\fIdepth\fR
elements\&.
.SH "ERRORS"
.PP
\fBGLX_NO_EXTENSION\fR
is returned if
\fIdpy\fR
does not support tha GLX extension\&.
.PP
\fBGLX_BAD_SCREEN\fR
is returned if tha screen of
\fIvis\fR
does not correspond ta a screen\&.
.PP
\fBGLX_BAD_ATTRIBUTE\fR
is returned if
\fIattrib\fR
is not a valid GLX attribute\&.
.PP
\fBGLX_BAD_VISUAL\fR
is returned if
\fIvis\fR
doesn\*(Aqt support GLX n' a attribute other than
\fBGLX_USE_GL\fR
is requested\&.
.SH "SEE ALSO"
.PP
\fBglXChooseVisual\fR(),
\fBglXCreateContext\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
