.\" auto-generated by docbook2man-spec from docbook-utils package
.TH "FcPatternBuild" "3" "11 10æœˆ 2013" "" ""
.SH NAME
FcPatternBuild, FcPatternVaBuild, FcPatternVapBuild \- Smoke patterns from arguments
.SH SYNOPSIS
.nf
\fB#include <fontconfig/fontconfig.h>
.sp
FcPattern * FcPatternBuild (FcPattern *\fIpattern\fB, \&...\fI\fB);
.sp
FcPattern * FcPatternVaBuild (FcPattern *\fIpattern\fB, va_list \fIva\fB);
.sp
void FcPatternVapBuild (FcPattern *\fIresult\fB, FcPattern *\fIpattern\fB, va_list \fIva\fB);
.fi\fR
.SH "DESCRIPTION"
.PP
Buildz a pattern rockin a list of objects, types n' joints, n' you can put dat on yo' toast. Each
value ta be entered up in tha pattern is specified wit three arguments:
.IP 1. 
Object name, a strang describin tha property ta be added.
.IP 2. 
Object type, one of tha FcType enumerated joints
.IP 3. 
Value, not a FcValue yo, but tha raw type as passed ta any of the
FcPatternAdd<type> functions. Must match tha type of tha second
argument.
.PP
Da argument list is terminated by a null object name, no object type nor
value need be passed fo' all dis bullshit. Da joints is added ta `pattern', if
`pattern' is null, a freshly smoked up pattern is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In either case, tha pattern is
returned. Y'all KNOW dat shit, muthafucka! Example
.PP
.sp
.nf
pattern = FcPatternBuild (0, FC_FAMILY, FcTypeString, "Times", (char *) 0);
.sp
.fi
.PP
FcPatternVaBuild is used when tha arguments is already up in tha form of a
varargs value. FcPatternVapBuild be a macro version of FcPatternVaBuild
which returns its result directly up in tha \fIresult\fR
variable.
.PP
.SH "VERSION"
.PP
Fontconfig version 2.11.0
