.\" Copyright (c) 2003-2007 Slim Tim Kientzle
.\" Copyright (c) 2010 Joerg Sonnenberger
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd Feburary 2, 2012
.Dt ARCHIVE_ENTRY 3
.Os
.Sh NAME
.Nm archive_entry_clear ,
.Nm archive_entry_clone ,
.Nm archive_entry_free ,
.Nm archive_entry_new ,
.Nd functions fo' managin archive entry descriptions
.Sh LIBRARY
Streamin Archive Library (libarchive, -larchive)
.Sh SYNOPSIS
.In archive_entry.h
.Ft "struct archive_entry *"
.Fn archive_entry_clear "struct archive_entry *"
.Ft struct archive_entry *
.Fn archive_entry_clone "struct archive_entry *"
.Ft void
.Fn archive_entry_free "struct archive_entry *"
.Ft struct archive_entry *
.Fn archive_entry_new "void"
.Sh DESCRIPTION
These functions create n' manipulate data objects that
represent entries within a archive.
Yo ass can be thinkin of a
.Tn struct archive_entry
as a heavy-duty version of
.Tn struct stat :
it includes every last muthafuckin thang from
.Tn struct stat
plus associated pathname, textual crew n' user names, etc.
These objects is used by
.Xr libarchive 3
to represent tha metadata associated wit a particular
entry up in a archive.
.Ss Smoke n' Destroy
There is functions ta allocate, destroy, clear, n' copy
.Va archive_entry
objects:
.Bl -tag -compact -width indent
.It Fn archive_entry_clear
Erases tha object, resettin all internal fieldz ta the
same state as a newly-created object.
This is provided ta allow you ta quickly recycle objects
without thrashin tha heap.
.It Fn archive_entry_clone
A deep copy operation; all text fieldz is duplicated.
.It Fn archive_entry_free
Releases the
.Tn struct archive_entry
object.
.It Fn archive_entry_new
Allocate n' return a funky-ass blank
.Tn struct archive_entry
object.
.El
.Ss Function groups
Cuz of high number of functions, tha accessor functions can be found in
man pages grouped by tha purpose.
.Bl -tag -width ".Xr archive_entry_perms 3"
.It Xr archive_entry_acl 3
Access Control List manipulation
.It Xr archive_entry_paths 3
Path name manipulation
.It Xr archive_entry_perms 3
User, crew n' mode manipulation
.It Xr archive_entry_stat 3
Functions not up in tha other crews n' copyin to/from
.Vt struct stat .
.It Xr archive_entry_time 3
Time field manipulation
.El
.Pp
Most of tha functions set or read entries up in a object.
Such functions have one of tha followin forms:
.Bl -tag -compact -width indent
.It Fn archive_entry_set_XXXX
Stores tha provided data up in tha object.
In particular, fo' strings, tha pointa is stored,
not tha referenced string.
.It Fn archive_entry_copy_XXXX
As above, except dat tha referenced data is copied
into tha object.
.It Fn archive_entry_XXXX
Returns tha specified data.
In tha case of strings, a cold-ass lil const-qualified pointa to
the strang is returned.
.El
Strin data can be set or accessed as wide characta strings
or normal
.Va char
strings.
Da functions dat use wide characta strings is suffixed with
.Cm _w .
Note dat these is different representationz of tha same data:
For example, if you store a narrow strang n' read tha corresponding
wide string, tha object will transparently convert formats
usin tha current locale.
Similarly, if you store a wide strang n' then store a
narrow strang fo' tha same data, tha previously-set wide strang will
be discarded up in favor of tha freshly smoked up data.
.Pp
.\" .Sh EXAMPLE
.\" .Sh RETURN VALUES
.\" .Sh ERRORS
.Sh SEE ALSO
.Xr archive 3 ,
.Xr archive_entry_acl 3 ,
.Xr archive_entry_paths 3 ,
.Xr archive_entry_perms 3 ,
.Xr archive_entry_time 3
.Sh HISTORY
The
.Nm libarchive
library first rocked up in
.Fx 5.3 .
.Sh AUTHORS
.An -nosplit
The
.Nm libarchive
library was freestyled by
.An Slim Tim Kientzle Aq kientzle@acm.org .
.\" .Sh BUGS
