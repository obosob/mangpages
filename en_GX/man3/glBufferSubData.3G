'\" t
.\"     Title: glBufferSubData
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBUFFERSUBDATA" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBufferSubData \- thugged-out shiznit a subset of a funky-ass buffer object\*(Aqs data store
.SH "C SPECIFICATION"
.HP \w'void\ glBufferSubData('u
.BI "void glBufferSubData(GLenum\ " "target" ", GLintptr\ " "offset" ", GLsizeiptr\ " "size" ", const\ GLvoid\ *\ " "data" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha target buffer object\&. Da symbolic constant must be
\fBGL_ARRAY_BUFFER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER\fR,
\fBGL_COPY_READ_BUFFER\fR,
\fBGL_COPY_WRITE_BUFFER\fR,
\fBGL_DRAW_INDIRECT_BUFFER\fR,
\fBGL_DISPATCH_INDIRECT_BUFFER\fR,
\fBGL_ELEMENT_ARRAY_BUFFER\fR,
\fBGL_PIXEL_PACK_BUFFER\fR,
\fBGL_PIXEL_UNPACK_BUFFER\fR,
\fBGL_SHADER_STORAGE_BUFFER\fR,
\fBGL_TEXTURE_BUFFER\fR,
\fBGL_TRANSFORM_FEEDBACK_BUFFER\fR, or
\fBGL_UNIFORM_BUFFER\fR\&.
.RE
.PP
\fIoffset\fR
.RS 4
Specifies tha offset tha fuck into tha buffer object\*(Aqs data store where data replacement will begin, measured up in bytes\&.
.RE
.PP
\fIsize\fR
.RS 4
Specifies tha size up in bytez of tha data store region bein replaced\&.
.RE
.PP
\fIdata\fR
.RS 4
Specifies a pointa ta tha freshly smoked up data dat is ghon be copied tha fuck into tha data store\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBufferSubData\fR
redefines some or all of tha data store fo' tha buffer object currently bound to
\fItarget\fR\&. Data startin at byte offset
\fIoffset\fR
and extendin for
\fIsize\fR
bytes is copied ta tha data store from tha memory pointed ta by
\fIdata\fR\& fo' realz. An error is thrown if
\fIoffset\fR
and
\fIsize\fR
together define a range beyond tha boundz of tha buffer object\*(Aqs data store\&.
.SH "NOTES"
.PP
When replacin tha entire data store, consider using
\fBglBufferSubData\fR
rather than straight-up rebustin tha data store with
\fBglBufferData\fR\&. This avoidz tha cost of reallocatin tha data store\&.
.PP
Consider rockin multiple buffer objects ta avoid stallin tha renderin pipeline durin data store thugged-out shit\&. If any renderin up in tha pipeline make reference ta data up in tha buffer object bein updated by
\fBglBufferSubData\fR, especially from tha specific region bein updated, dat renderin must drain from tha pipeline before tha data store can be updated\&.
.PP
Clients must align data elements consistent wit tha requirementz of tha client platform, wit a additionizzle base\-level requirement dat a offset within a funky-ass buffer ta a thugged-out datum comprising
N bytes be a multiple of N\&.
.PP
The
\fBGL_ATOMIC_COUNTER_BUFFER\fR
target be available only if tha GL version is 4\&.2 or pimped outer\&.
.PP
The
\fBGL_DISPATCH_INDIRECT_BUFFER\fR
and
\fBGL_SHADER_STORAGE_BUFFER\fR
targets is available only if tha GL version is 4\&.3 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not one of tha accepted buffer targets\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIoffset\fR
or
\fIsize\fR
is negative, or if together they define a region of memory dat extendz beyond tha buffer object\*(Aqs allocated data store\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha reserved buffer object name 0 is bound to
\fItarget\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha buffer object bein updated is mapped\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetBufferSubData\fR()
.SH "SEE ALSO"
.PP
\fBglBindBuffer\fR(),
\fBglBufferData\fR(),
\fBglMapBuffer\fR(),
\fBglUnmapBuffer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2005 Addison\-Wesley\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
