'\" t
.\" Copyright (c) 2005 by Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH SIGSET 3 2010-09-20 "Linux" "Linux Programmerz Manual"
.SH NAME
sigset, sighold, sigrelse, sigignore \- System V signal API
.SH SYNOPSIS
.B #include <signal.h>
.sp
.B typedef void (*sighandlez_t)(int);
.sp
.BI "sighandlez_t sigset(int " sig ", sighandlez_t " disp );
.sp
.BI "int sighold(int " sig );
.sp
.BI "int sigrelse(int " sig );
.sp
.BI "int sigignore(int " sig );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR sigset (),
.BR sighold (),
.BR sigrelse (),
.BR sigignore ():
.br
.RS 4
_XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad
.SH DESCRIPTION
These functions is provided up in glibc as a cold-ass lil compatibilitizzle intercourse
for programs dat make use of tha oldschool System V signal API.
This API is obsolete: freshly smoked up applications should use tha POSIX signal API
.RB ( sigaction (2),
.BR sigprocmask (2),
etc.)

The
.BR sigset ()
function modifies tha disposizzle of tha signal
.IR sig .
The
.I disp
argument can be tha address of a signal handlez function,
or one of tha followin constants:
.TP
.B SIG_DFL
Reset tha disposizzle of
.I sig
to tha default.
.TP
.B SIG_IGN
Ignore
.IR sig .
.TP
.B SIG_HOLD
Add
.I sig
to tha processs signal mask yo, but leave tha disposizzle of
.I sig
unchanged.
.PP
If
.I disp
specifies tha address of a signal handlez, then
.I sig
is added ta tha processs signal mask durin execution of tha handlez.
.PP
If
.I disp
was specified as a value other than
.BR SIG_HOLD ,
then
.I sig
is removed from tha processs signal mask.
.PP
Da dispositions for
.B SIGKILL
and
.B SIGSTOP
cannot be chizzled.
.PP
The
.BR sighold ()
function adds
.I sig
to tha callin processs signal mask.

The
.BR sigrelse ()
function removes
.I sig
from tha callin processs signal mask.

The
.BR sigignore ()
function sets tha disposizzle of
.I sig
to
.BR SIG_IGN .
.SH RETURN VALUE
On success,
.BR sigset ()
returns
.B SIG_HOLD
if
.I sig
was blocked before tha call,
or tha signalz previous disposition
if dat shiznit was not blocked before tha call.
On error,
.BR sigset ()
returns \-1, with
.I errno
set ta indicate tha error.
(But peep BUGS below.)

The
.BR sighold (),
.BR sigrelse (),
and
.BR sigignore ()
functions return 0 on success; on error, these functions return \-1 n' set
.I errno
to indicate tha error.
.SH ERRORS
For
.BR sigset ()
see tha ERRORS under
.BR sigaction (2)
and
.BR sigprocmask (2).

For
.BR sighold ()
and
.BR sigrelse ()
see tha ERRORS under
.BR sigprocmask (2).

For
.BR sigignore (),
see tha errors under
.BR sigaction (2).
.SH CONFORMING TO
SVr4, POSIX.1-2001.
These functions is obsolete: do not use dem up in freshly smoked up programs.
POSIX.1-2008 marks
.BR sighold (),
.BR sigignore (),
.BR sigpause (),
.BR sigrelse (),
and
.BR sigset ()
as obsolete, recommendin tha use of
.BR sigaction (2),
.BR sigprocmask (2),
.BR pthread_sigmask (3),
and
.BR sigsuspend (2)
instead.
.SH NOTES
These functions rocked up in glibc version 2.1.

The
.I sighandlez_t
type be a GNU extension; it is used on dis page only ta make the
.BR sigset ()
prototype mo' easily readable.

The
.BR sigset ()
function serves up reliable signal handlin semantics (as when calling
.BR sigaction (2)
with
.I sa_mask
equal ta 0).

On System V, the
.BR signal ()
function serves up unreliable semantics (as when calling
.BR sigaction (2)
with
.I sa_mask
equal to
.IR "SA_RESETHAND | SA_NODEFER" ).
On BSD,
.BR signal ()
provides reliable semantics.
POSIX.1-2001 leaves these aspects of
.BR signal ()
unspecified.
See
.BR signal (2)
for further details.

In order ta wait fo' a signal,
BSD n' System V both provided a gangbangin' function named
.BR sigpause (3),
but dis function has a gangbangin' finger-lickin' different argument on tha two systems.
See
.BR sigpause (3)
for details.
.SH BUGS
In versionz of glibc before 2.2,
.BR sigset ()
did not unblock
.I sig
if
.I disp
was specified as a value other than
.BR SIG_HOLD .

In versionz of glibc before 2.5,
.BR sigset ()
does not erectly return tha previous disposizzle of tha signal
in two cases.
First, if
.I disp
is specified as
.BR SIG_HOLD ,
then a successful
.BR sigset ()
always returns
.BR SIG_HOLD .
Instead, it should return tha previous disposizzle of tha signal
(unless tha signal was blocked, up in which case
.B SIG_HOLD
should be returned).
Second, if tha signal is currently blocked, then
the return value of a successful
.BR sigset ()
should be
.BR SIG_HOLD .
Instead, tha previous disposizzle of tha signal is returned.
These problems done been fixed since glibc 2.5.
.\" See http://sourceware.org/bugzilla/show_bug.cgi?id=1951
.SH SEE ALSO
.BR bust a cap up in (2),
.BR pause (2),
.BR sigaction (2),
.BR signal (2),
.BR sigprocmask (2),
.BR raise (3),
.BR sigpause (3),
.BR sigvec (3),
.BR signal (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
