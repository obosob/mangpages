.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbAddGeomSection 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbAddGeomSection \- Add one section ta a existin keyboard geometry
.SH SYNOPSIS
.HP
.B XkbSectionPtr XkbAddGeomSection
.BI "(\^XkbGeometryPtr " "geom" "\^,"
.BI "Atom " "name" "\^,"
.BI "int " "sz_rows" "\^,"
.BI "int " "sz_doodads" "\^,"
.BI "int " "sz_overlays" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- geom
geometry ta be updated
.TP
.I \- name
name of tha freshly smoked up section
.TP
.I \- sz_rows
number of rows ta reserve up in tha section
.TP
.I \- sz_doodads
number of doodadz ta reserve up in tha section
.TP
.I \- sz_overlays
number of overlays ta reserve up in tha section
.SH DESCRIPTION
.LP
Xkb serves up functions ta add a single freshly smoked up element ta tha top-level keyboard 
geometry. In each case tha 
.I num_ * 
fieldz of tha correspondin structure is incremented by 1. These functions do 
not chizzle 
.I sz_* 
unless there is no mo' room up in tha array. Right back up in yo muthafuckin ass. Some of these functions fill up in tha 
valuez of tha elementz structure from tha arguments, n' you can put dat on yo' toast. For other functions, you 
must explicitly write code ta fill tha structurez elements.

Da top-level geometry description includes a list of 
.I geometry properties. Put ya muthafuckin choppers up if ya feel dis! 
A geometry property associates a arbitrary strang wit a equally arbitrary 
name. Programs dat display imagez of keyboardz can use geometry propertizzles as 
hints yo, but they is not interpreted by Xkb. No other geometry structures refer 
to geometry properties.

A keyboard geometry gotz nuff a arbitrary number of sections. 
.I XkbAddGeomSection 
addz one section ta a existin keyboard geometry 
.I geom. 
Da freshly smoked up section gotz nuff space fo' tha number of rows, doodads, n' overlays 
specified by 
.I sz_rows, sz_doodads, 
and 
.I sz_overlays. 
Da freshly smoked up section be allocated n' zeroed n' given tha name specified by 
.I name. 
If a section wit name 
.I name 
already exists up in tha geometry, a pointa ta tha existin section is returned.
.I XkbAddGeomSection 
returns NULL if any of tha parametas is empty or if dat shiznit was not able ta allocate 
space fo' tha section. I aint talkin' bout chicken n' gravy biatch. To allocate space fo' a arbitrary number of sections ta 
a geometry, use 
.I XkbAllocGeomSections.
.SH STRUCTURES
.LP
.nf

typedef struct _XkbSection {
    Atom                    name;        /\(** section name */
    unsigned char           priority;    /\(** drawin priority, 0=>highest, 255=>lowest */
    short                   top;         /\(** top coordinizzle of section origin */
    short                   left;        /\(** left coordinizzle of row origin */
    unsigned short          width;       /\(** section width, up in mm/10 */
    unsigned short          height;      /\(** section height, up in mm/10 */
    short                   angle;       /\(** angle of section rotation, counterclockwise */
    unsigned short          num_rows;    /\(** number of rows up in tha rows array */
    unsigned short          num_doodads; /\(** number of doodadz up in tha doodadz array */
    unsigned short          num_overlays; /\(** number of overlays up in tha overlays array */
    unsigned short          sz_rows;      /\(** size of tha rows array */
    unsigned short          sz_doodads;   /\(** size of tha doodadz array */
    unsigned short          sz_overlays;  /\(** size of tha overlays array */
    XkbRowPtr               rows;         /\(** section rows array */
    XkbDoodadPtr            doodads;      /\(** section doodadz array */
    XkbBoundsRec            bounds;       /\(** boundin box fo' tha section, before rotation*/
    XkbOverlayPtr           overlays;     /\(** section overlays array */
} XkbSectionRec, *XkbSectionPtr;

.fi
.I top 
and 
.I left 
are tha origin of tha section, relatizzle ta tha origin of tha keyboard, up in mm/10. angle is up in 1/10 degrees.
.SH "SEE ALSO"
.BR XkbAllocGeomSections (3)
