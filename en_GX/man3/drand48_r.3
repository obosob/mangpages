.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Created 2004-10-31. Text taken from a page by Walta Harms, 2003-09-08
.\"
.TH DRAND48_R 3 2007-07-26 "GNU" "Linux Programmerz Manual"
.SH NAME
drand48_r, erand48_r, lrand48_r, nrand48_r, mrand48_r, jrand48_r,
srand48_r, seed48_r, lcong48_r
\- generate uniformly distributed pseudo-random numbers reentrantly
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int drand48_r(struct drand48_data *" buffer ", double *" result );
.sp
.BI "int erand48_r(unsigned short " xsubi [3] ","
.br
.BI "              struct drand48_data *"buffer ", double *" result ");"
.sp
.BI "int lrand48_r(struct drand48_data *" buffer ", long int *" result );
.sp
.BI "int nrand48_r(unsigned short int " xsubi[3] ","
.br
.BI "              struct drand48_data *"buffer ", long int *" result ");"
.sp
.BI "int mrand48_r(struct drand48_data *" buffer ",long int *" result ");"
.sp
.BI "int jrand48_r(unsigned short int " xsubi[3] ","
.br
.BI "              struct drand48_data *" buffer ", long int *" result ");"
.sp
.BI "int srand48_r(long int " seedval ", struct drand48_data *" buffer ");"
.sp
.BI "int seed48_r(unsigned short int " seed16v[3] ","
.br
.BI "             struct drand48_data *" buffer ");"
.sp
.BI "int lcong48_r(unsigned short int " param[7] ","
.br
.BI "              struct drand48_data *" buffer ");"
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
All functions shown above:
.\" .BR drand48_r (),
.\" .BR erand48_r (),
.\" .BR lrand48_r (),
.\" .BR nrand48_r (),
.\" .BR mrand48_r (),
.\" .BR jrand48_r (),
.\" .BR srand48_r (),
.\" .BR seed48_r (),
.\" .BR lcong48_r ():
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE
.ad b
.SH DESCRIPTION
These functions is tha reentrant analogz of tha functions busted lyrics bout in
.BR drand48 (3).
Instead of modifyin tha global random generator state, they use
the supplied data
.IR buffer .

Before tha straight-up original gangsta use, dis struct must be initialized, fo' example,
by fillin it wit zeros, or by callin one of tha functions
.BR srand48_r (),
.BR seed48_r (),
or
.BR lcong48_r ().
.SH RETURN VALUE
Da return value is 0.
.SH CONFORMING TO
These functions is GNU extensions n' is not portable.
.SH SEE ALSO
.BR drand48 (3),
.BR rand (3),
.BR random (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
