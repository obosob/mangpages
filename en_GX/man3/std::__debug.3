.TH "std::__debug" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__debug \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBbitset\fP"
.br
.ti -1c
.RI "class \fBdeque\fP"
.br
.ti -1c
.RI "class \fBforward_list\fP"
.br
.ti -1c
.RI "class \fBlist\fP"
.br
.ti -1c
.RI "class \fBmap\fP"
.br
.ti -1c
.RI "class \fBmultimap\fP"
.br
.ti -1c
.RI "class \fBmultiset\fP"
.br
.ti -1c
.RI "class \fBset\fP"
.br
.ti -1c
.RI "class \fBunordered_map\fP"
.br
.ti -1c
.RI "class \fBunordered_multimap\fP"
.br
.ti -1c
.RI "class \fBunordered_multiset\fP"
.br
.ti -1c
.RI "class \fBunordered_set\fP"
.br
.ti -1c
.RI "class \fBvector\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator!=\fP (const \fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__x, const \fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator!=\fP (const \fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, const \fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator!=\fP (const \fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__x, const \fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator!=\fP (const \fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, const \fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<size_t _Nb> \fBbitset\fP< _Nb > \fBoperator&\fP (const \fBbitset\fP< _Nb > &__x, const \fBbitset\fP< _Nb > &__y) noexcept"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , size_t _Nb> \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBbitset\fP< _Nb > &__x)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator==\fP (const \fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__x, const \fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator==\fP (const \fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, const \fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator==\fP (const \fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__x, const \fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > bool \fBoperator==\fP (const \fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, const \fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const \fBmultiset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBmultiset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const \fBset\fP< _Key, _Compare, _Allocator > &__lhs, const \fBset\fP< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, const \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const \fBdeque\fP< _Tp, _Alloc > &__lhs, const \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const \fBvector\fP< _Tp, _Alloc > &__lhs, const \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const \fBlist\fP< _Tp, _Alloc > &__lhs, const \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const \fBforward_list\fP< _Tp, _Alloc > &__lx, const \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , size_t _Nb> \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBbitset\fP< _Nb > &__x)"
.br
.ti -1c
.RI "template<size_t _Nb> \fBbitset\fP< _Nb > \fBoperator^\fP (const \fBbitset\fP< _Nb > &__x, const \fBbitset\fP< _Nb > &__y) noexcept"
.br
.ti -1c
.RI "template<size_t _Nb> \fBbitset\fP< _Nb > \fBoperator|\fP (const \fBbitset\fP< _Nb > &__x, const \fBbitset\fP< _Nb > &__y) noexcept"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (\fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__x, \fBunordered_set\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (\fBmultiset\fP< _Key, _Compare, _Allocator > &__x, \fBmultiset\fP< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (\fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, \fBunordered_map\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (\fBset\fP< _Key, _Compare, _Allocator > &__x, \fBset\fP< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (\fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, \fBmultimap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (\fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__lhs, \fBmap\fP< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (\fBdeque\fP< _Tp, _Alloc > &__lhs, \fBdeque\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (\fBvector\fP< _Tp, _Alloc > &__lhs, \fBvector\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (\fBlist\fP< _Tp, _Alloc > &__lhs, \fBlist\fP< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (\fBforward_list\fP< _Tp, _Alloc > &__lx, \fBforward_list\fP< _Tp, _Alloc > &__ly)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (\fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__x, \fBunordered_multiset\fP< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (\fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, \fBunordered_multimap\fP< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.in -1c
.SH "Detailed Description"
.PP 
GNU debug code, replaces standard behavior wit debug behavior\&. 

Macros n' namespaces used by tha implementation outside of debug wrappers ta verify certain properties\&. Da __glibcxx_requires_xxx macros is merely wrappers round tha __glibcxx_check_xxx wrappers when we is compilin wit debug mode yo, but disappear when we is up in release mode so dat there is no checkin performed in, e\&.g\&., tha standard library algorithms\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename _Tp , typename _Alloc > bool std::__debug::operator<= (const forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc > &__ly)\fC [inline]\fP"

.PP
Based on operator<\&. 
.PP
Definizzle at line 768 of file debug/forward_list\&.
.SS "template<typename _Tp , typename _Alloc > bool std::__debug::operator> (const forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc > &__ly)\fC [inline]\fP"

.PP
Based on operator<\&. 
.PP
Definizzle at line 754 of file debug/forward_list\&.
.SS "template<typename _Tp , typename _Alloc > bool std::__debug::operator>= (const forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc > &__ly)\fC [inline]\fP"

.PP
Based on operator<\&. 
.PP
Definizzle at line 761 of file debug/forward_list\&.
.SS "template<typename _Tp , typename _Alloc > void std::__debug::swap (forward_list< _Tp, _Alloc > &__lx, forward_list< _Tp, _Alloc > &__ly)\fC [inline]\fP"

.PP
See std::forward_list::swap()\&. 
.PP
Definizzle at line 775 of file debug/forward_list\&.
.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
