.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "User::Identity::Collection::Users 3"
.TH User::Identity::Collection::Users 3 "2009-12-24" "perl v5.18.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
User::Identity::Collection::Users \- a cold-ass lil collection of users
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 3
\& User::Identity::Collection::Users
\&   be a User::Identity::Collection
\&   be a User::Identity::Item
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da User::Identity::Collection::Users object maintains a set
User::Identitizzle objects, each describin a user.
.SH "OVERLOADED"
.IX Header "OVERLOADED"
overload: \fB@{}\fR
.Sp
.RS 4
See \*(L"\s-1OVERLOADED\*(R"\s0 up in User::Identity::Collection
.RE
.PP
overload: \fBstringification\fR
.Sp
.RS 4
See \*(L"\s-1OVERLOADED\*(R"\s0 up in User::Identity::Collection
.RE
.SH "METHODS"
.IX Header "METHODS"
.SS "Constructors"
.IX Subsection "Constructors"
User::Identity::Collection::Users\->\fBnew\fR([\s-1NAME\s0], \s-1OPTIONS\s0)
.Sp
.Vb 6
\& Option     \-\-Defined up in     \-\-Default
\& description  User::Identity::Item  undef
\& item_type    User::Identity::Collection  User::Identity
\& name         User::Identity::Item  \*(Aqpeople\*(Aq
\& parent       User::Identity::Item  undef
\& rolez        User::Identity::Collection  undef
.Ve
.Sp
.RS 4
\&. description => \s-1STRING\s0
.Sp
\&. item_type => \s-1CLASS\s0
.Sp
\&. name => \s-1STRING\s0
.Sp
\&. parent => \s-1OBJECT\s0
.Sp
\&. rolez => ROLE|ARRAY
.RE
.SS "Attributes"
.IX Subsection "Attributes"
\&\f(CW$obj\fR\->\fBdescription\fR
.Sp
.RS 4
See \*(L"Attributes\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBitemType\fR
.Sp
.RS 4
See \*(L"Attributes\*(R" up in User::Identity::Collection
.RE
.PP
\&\f(CW$obj\fR\->\fBname\fR([\s-1NEWNAME\s0])
.Sp
.RS 4
See \*(L"Attributes\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBroles\fR
.Sp
.RS 4
See \*(L"Attributes\*(R" up in User::Identity::Collection
.RE
.SS "Collections"
.IX Subsection "Collections"
\&\f(CW$obj\fR\->\fBadd\fR(\s-1COLLECTION, ROLE\s0)
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBaddCollection\fR(\s-1OBJECT\s0 | ([\s-1TYPE\s0], \s-1OPTIONS\s0))
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBcollection\fR(\s-1NAME\s0)
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBparent\fR([\s-1PARENT\s0])
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBremoveCollection\fR(OBJECT|NAME)
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBtype\fR
.PP
User::Identity::Collection::Users\->\fBtype\fR
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.PP
\&\f(CW$obj\fR\->\fBuser\fR
.Sp
.RS 4
See \*(L"Collections\*(R" up in User::Identity::Item
.RE
.SS "Maintainin roles"
.IX Subsection "Maintainin roles"
\&\f(CW$obj\fR\->\fBaddRole\fR(ROLE| ( [\s-1NAME\s0],OPTIONS ) | ARRAY-OF-OPTIONS)
.Sp
.RS 4
See \*(L"Maintainin roles\*(R" up in User::Identity::Collection
.RE
.PP
\&\f(CW$obj\fR\->\fBremoveRole\fR(ROLE|NAME)
.Sp
.RS 4
See \*(L"Maintainin roles\*(R" up in User::Identity::Collection
.RE
.PP
\&\f(CW$obj\fR\->\fBrenameRole\fR(ROLE|OLDNAME, \s-1NEWNAME\s0)
.Sp
.RS 4
See \*(L"Maintainin roles\*(R" up in User::Identity::Collection
.RE
.PP
\&\f(CW$obj\fR\->\fBsorted\fR
.Sp
.RS 4
See \*(L"Maintainin roles\*(R" up in User::Identity::Collection
.RE
.SS "Searching"
.IX Subsection "Searching"
\&\f(CW$obj\fR\->\fBfind\fR(NAME|CODE|undef)
.Sp
.RS 4
See \*(L"Searching\*(R" up in User::Identity::Collection
.RE
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Error: \f(CW$object\fR aint a cold-ass lil collection.
.Sp
.RS 4
Da first argument be a object yo, but not of a cold-ass lil class which extends
User::Identity::Collection.
.RE
.PP
Error: Cannot create a \f(CW$type\fR ta add dis ta mah collection.
.Sp
.RS 4
Some options is specified ta create a \f(CW$type\fR object, which is natizzle to
this collection. I aint talkin' bout chicken n' gravy biatch.  But fuck dat shiznit yo, tha word on tha street is dat fo' some reason dis failed.
.RE
.PP
Error: Cannot load collection module fo' \f(CW$type\fR ($class).
.Sp
.RS 4
Either tha specified \f(CW$type\fR do not exist, or dat module named \f(CW$class\fR returns
compilation errors.  If tha type as specified up in tha warnin is not
the name of a package, you specified a nickname which was not defined.
Maybe you forgot tha 'require' tha package which defines tha nickname.
.RE
.PP
Error: Cannot rename \f(CW$name\fR tha fuck into \f(CW$newname:\fR already exists
.PP
Error: Cannot rename \f(CW$name\fR tha fuck into \f(CW$newname:\fR don't exist
.PP
Error: Creation of a cold-ass lil collection via \f(CW$class\fR failed.
.Sp
.RS 4
Da \f(CW$class\fR did compile yo, but dat shiznit was not possible ta create a object
of dat class rockin tha options you specified.
.RE
.PP
Error: Don't know what tha fuck type of collection you wanna add.
.Sp
.RS 4
If you add a cold-ass lil collection, it must either by a cold-ass lil collection object or a
list of options which can be used ta create a cold-ass lil collection object.  In
the latta case, tha type of collection must be specified.
.RE
.PP
Warning: No collection \f(CW$name\fR
.Sp
.RS 4
Da collection wit \f(CW$name\fR do not exist n' can not be pimped.
.RE
.PP
Error: Wrong type of role fo' \f(CW$collection:\fR requires a \f(CW$expect\fR but gots a \f(CW$type\fR
.Sp
.RS 4
Each \f(CW$collection\fR crews setz of rolez of one specific type ($expect).  You
cannot add objectz of a gangbangin' finger-lickin' different \f(CW$type\fR.
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of User-Identitizzle distribution version 0.93,
built on December 24, 2009. Website: \fIhttp://perl.overmeer.net/userid/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2003,2004,2007\-2009 by Mark Overmeer <perl@overmeer.net>. For other contributors peep Chizzles.
.PP
This program is free software; you can redistribute it and/or modify it
under tha same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR
