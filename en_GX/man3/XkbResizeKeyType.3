'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbResizeKeyType 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbResizeKeyType \- Chizzle tha number of levels up in a key type
.SH SYNOPSIS
.HP
.B Status XkbResizeKeyType
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "int " "type_ndx" "\^,"
.BI "int " "map_count" "\^,"
.BI "Bool " "want_preserve" "\^,"
.BI "int " "new_num_lvls" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
keyboard description containin client map ta update
.TP
.I \- type_ndx
index up in xkb->map->typez of type ta chizzle
.TP
.I \- map_count
total # of map entries needed fo' tha type
.TP
.I \- want_preserve
True => list of preserved modifiers is necessary
.TP
.I \- new_num_lvls
new max # of levels fo' type
.SH DESCRIPTION
.LP
.I XkbResizeKeyType 
changes tha type specified by 
.I xkb->map->types[type_ndx], 
and reallocates tha symbols n' actions bound ta all keys dat use tha type, if 
necessary. 
.I XkbResizeKeyType 
updates only tha local copy of tha types up in 
.I xkb; 
to update tha serverz copy fo' tha physical device, use 
.I XkbSetMap 
or 
.I XkbChangeMap 
afta callin 
.I XkbResizeKeyType.

Da 
.I map_count 
parameta specifies tha total number of map entries needed fo' tha type, n' can 
be zero or pimped outer n' shit. If 
.I map_count 
is zero, 
.I XkbResizeKeyType 
frees tha existin 
.I map 
and 
.I preserve 
entries fo' tha type if they exist n' sets dem ta NULL.

Da 
.I want_preserve 
parameta specifies whether a 
.I preserve 
list fo' tha key should be pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If 
.I want_preserve 
is True, tha 
.I preserve 
list wit 
.I map_count 
entries be allocated or reallocated if it already exists, n' you can put dat on yo' toast. Otherwise, if
.I want_preserve 
is False, tha 
.I preserve 
field is freed if necessary n' set ta NULL.

Da 
.I new_num_lvls 
parameta specifies tha freshly smoked up maximum number of shift levels fo' tha type n' is 
used ta calculate n' resize tha symbols n' actions bound ta all keys dat use 
the type.

If 
.I type_ndx 
does not specify a legal type, 
.I new_num_lvls 
is less than 1, or tha 
.I map_count 
is less than zero, 
.I XkbResizeKeyType 
returns BadValue. If 
.I XkbResizeKeyType 
encountas any problems wit allocation, it returns BadAlloc. Otherwise, it 
returns Success.
.SH "RETURN VALUES"
.TP 15
Success
Da 
.I XkbResizeKeyType 
function returns Success if 
.I type_ndx 
specifies a legal type,   
.I new_num_lvls 
is pimped outa than zero n' 
.I map_count 
is positive.
.SH DIAGNOSTICS
.TP 15
.B BadAlloc
Unable ta allocate storage
.TP 15
.B BadValue
An argument is outta range
.SH "SEE ALSO"
.BR XkbChangeMap (3),
.BR XkbSetMap (3)
