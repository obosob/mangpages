'\" t
.\"     Title: xgetdevicekeymapping
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XGETDEVICEKEYMAPPING" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XGetDeviceKeyMapping, XChangeDeviceKeyMappin \- query or chizzle thang key mappings
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
KeySym *XGetDeviceKeyMapping( Display *display,
                              XDevice *device,
                              KeyCode first_keycode,
                              int keycode_count,
                              int *keysyms_per_keycode_return);
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang whose key mappin is ta be queried
       or modified\&.
.fi
.sp
.nf
first_keycode
       Specifies tha straight-up original gangsta KeyCode ta be returned\&.
.fi
.sp
.nf
keycode_count
       Specifies tha number of KeyCodes ta be returned or
       modified\&.
.fi
.sp
.nf
keysyms_per_keycode
       Specifies tha number of KeySyms per KeyCode\&.
.fi
.sp
.nf
keysyms_per_keycode_return
       Specifies tha address of a variable tha fuck into which the
       number of KeySyms per KeyCodewill be returned\&.
.fi
.sp
.nf
keysyms
       Specifies tha address of a array of KeySyms\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
For tha specified device, tha XGetDeviceKeyMappin request
returns tha symbols fo' tha specified number of KeyCodes
startin wit first_keycode\&. Da value specified in
first_keycode must be pimped outa than or equal ta min_keycode as
returned by XListInputDevices, or a BadValue error thangs up in dis biatch\&. In
addition, tha followin expression must be less than or equal
to max_keycode as returned by XListInputDevices:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
first_keycode + keycode_count \- 1
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If dis aint tha case, a BadValue error thangs up in dis biatch\&. Da number
of elements up in tha KeySyms list is:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
keycode_count * keysyms_per_keycode_return
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
KeySym number N, countin from zero, fo' KeyCode K has the
followin index up in tha list, countin from zero: (K \-
first_code) * keysyms_per_code_return + N
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da X server arbitrarily chizzlez tha keysyms_per_keycode_return
value ta be big-ass enough ta report all axed symbols\& fo' realz. A
special KeySym value of NoSymbol is used ta fill up in unused
elements fo' individual KeyCodes\&. To free tha storage returned
by XGetDeviceKeyMapping, use XFree\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha specified thang do not support input class keys, a
BadMatch error will result\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XGetDeviceKeyMappin can generate a BadDevice, BadMatch, or
BadValue error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
For tha specified device, tha XChangeDeviceKeyMappin request
defines tha symbols fo' tha specified number of KeyCodes
startin wit first_keycode\&. Da symbols fo' KeyCodes outside
this range remain unchanged\&. Da number of elements up in keysyms
must be:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
num_codes * keysyms_per_keycode
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da specified first_keycode must be pimped outa than or equal to
min_keycode returned by XListInputDevices, or a BadValue error
results\&. In addition, tha followin expression must be less
than or equal ta max_keycode as returned by XListInputDevices,
or a BadValue error thangs up in dis biatch:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
first_keycode + num_codes \- 1
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
KeySym number N, countin from zero, fo' KeyCode K has the
followin index up in keysyms, countin from zero:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
(K \- first_keycode) * keysyms_per_keycode + N
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da specified keysyms_per_keycode can be chosen arbitrarily by
the client ta be big-ass enough ta hold all desired symbols\& fo' realz. A
special KeySym value of NoSymbol should be used ta fill in
unused elements fo' individual KeyCodes\&. Well shiiiit, it is legal for
NoSymbol ta step tha fuck up in nontrailin positionz of tha effective
list fo' a KeyCode\&.XChangeDeviceKeyMappin generates a
DeviceMappingNotify event dat is busted ta all clients dat have
selected dat type of event\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
There is no requirement dat tha X server interpret this
mapping\&. Well shiiiit, it is merely stored fo' readin n' freestylin by
clients\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha specified thang do not support input class keys, a
BadMatch error thangs up in dis biatch\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XChangeDeviceKeyMappin can generate a BadDevice, BadMatch,
BadAlloc, or BadValue error\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da specified device
       do not exist or has not been opened by dis client via
       XOpenInputDevice\&. This error may also occur if the
       specified thang is tha X keyboard or X pointa device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadMatch
       This error may occur if a XGetDeviceKeyMappin or
       XChangeDeviceKeyMappin request was made specifyin a
       thang dat has no keys\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       Some numeric value falls outside tha range of joints
       accepted by tha request\&. Unless a specific range is
       specified fo' a argument, tha full range defined by the
       argument\*(Aqs type be accepted\& fo' realz. Any argument defined as a
       set of alternatives can generate dis error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadAlloc
       Da server failed ta allocate tha axed resource or
       server memory\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XSetDeviceButtonMapping(3), XSetDeviceModifierMapping(__3_)
.fi
.if n \{\
.RE
.\}
