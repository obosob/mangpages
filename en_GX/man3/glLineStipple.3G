'\" t
.\"     Title: glLineStipple
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLLINESTIPPLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glLineStipple \- specify tha line stipple pattern
.SH "C SPECIFICATION"
.HP \w'void\ glLineStipple('u
.BI "void glLineStipple(GLint\ " "factor" ", GLushort\ " "pattern" ");"
.SH "PARAMETERS"
.PP
\fIfactor\fR
.RS 4
Specifies a multiplier fo' each bit up in tha line stipple pattern\&. If
\fIfactor\fR
is 3, fo' example, each bit up in tha pattern is used three times before tha next bit up in tha pattern is used\&.
\fIfactor\fR
is clamped ta tha range [1, 256] n' defaults ta 1\&.
.RE
.PP
\fIpattern\fR
.RS 4
Specifies a 16\-bit integer whose bit pattern determines which fragmentz of a line is ghon be drawn when tha line is rasterized\&. Bit zero is used first; tha default pattern be all 1\*(Aqs\&.
.RE
.SH "DESCRIPTION"
.PP
Line stipplin masks up certain fragments produced by rasterization; dem fragments aint gonna be drawn\&. Da maskin be  bigged up  by rockin three parameters: tha 16\-bit line stipple pattern
\fIpattern\fR, tha repeat count
\fIfactor\fR, n' a integer stipple counter
s\&.
.PP
Counter
s
is reset ta 0 whenever
\fBglBegin\fR()
is called n' before each line segment of a
\fBglBegin\fR()(\fBGL_LINES\fR)/\fBglEnd\fR()
sequence is generated\&. Well shiiiit, it is incremented afta each fragment of a unit width aliased line segment is generated or afta each
i
fragmentz of an
i
width line segment is generated\&. The
i
fragments associated wit count
s
are maxed up if
.PP
\fIpattern\fR
bit
s factor % 16
.PP
is 0, otherwise these fragments is busted ta tha frame buffer\&. Bit zero of
\fIpattern\fR
is tha least dope bit\&.
.PP
Antialiased lines is treated as a sequence of
1 \(mu width
rectanglez fo' purposez of stippling\&. Whether rectangle
s
is rasterized or not dependz on tha fragment rule busted lyrics bout fo' aliased lines, countin rectanglez rather than crewz of fragments\&.
.PP
To enable n' disable line stippling, call
\fBglEnable\fR()
and
\fBglDisable\fR()
with argument
\fBGL_LINE_STIPPLE\fR\&. When enabled, tha line stipple pattern be applied as busted lyrics bout above\&. When disabled, it be as if tha pattern was all 1\*(Aqs\&. Initially, line stipplin is disabled\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglLineStipple\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_LINE_STIPPLE_PATTERN\fR
.PP
\fBglGet\fR()
with argument
\fBGL_LINE_STIPPLE_REPEAT\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_LINE_STIPPLE\fR
.SH "SEE ALSO"
.PP
\fBglLineWidth\fR(),
\fBglPolygonStipple\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
