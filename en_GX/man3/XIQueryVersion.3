'\" t
.\"     Title: xiqueryversion
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/08/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XIQUERYVERSION" "3" "08/08/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XIQueryVersion \- announce n' query tha support XI2 version\&.
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput2\&.h>
.fi
.sp
.nf
Status XIQueryVersion( Display *display,
                       int *major_version_inout,
                       int *minor_version_inout);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
major_version_inout
       Specifies tha client\*(Aqs supported XI2 version, and
       returns tha server\*(Aqs supported version\&.
.fi
.sp
.nf
minor_version_inout
       Specifies tha client\*(Aqs supported XI2 version, and
       returns tha server\*(Aqs supported version\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
XIQueryVersion announces tha client\*(Aqs supported XI2 version to
the server n' returns server\*(Aqs supported X Input version\&. Clients
are required ta use XIQueryVersion instead of XGetExtensionVersion
if they use XI2 calls\&. Da server may treat a cold-ass lil client differently
dependin on tha supported version announced by tha client\&.
Da major_version_inout must be 2 or pimped outer, otherwise a BadValue
error occurs\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha server do not support XI2, XIQueryVersion returns BadRequest
to tha client\&. Otherwise, XIQueryVersion returns Success\&. In both
cases major_version_inout n' minor_version_inout is set ta the
server\*(Aqs supported version\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha client has previously called XIQueryVersion, then tha result
dependz on tha previously axed version n' tha currently
axed version\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If either tha previous or current axed versions is less than
2\&.2, or if tha axed major version numbers do not match, then
consecutizzle calls ta XIQueryVersion by tha same client always
return tha straight-up original gangsta returned major\&.minor version\&. If tha client
requests a version lower than tha straight-up original gangsta returned major\&.minor
version up in a subsequent call, a BadValue error occurs\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If all of tha axed versions is 2\&.2 or pimped outer, then
consecutizzle calls ta XIQueryVersion by tha same client wit the
same major version will return tha axed version yo, but tha server
will operate accordin ta tha highest axed version number or
the highest supported version, whichever is lower\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIQueryVersion can generate a BadValue error\&.
.fi
.if n \{\
.RE
.\}
.SH "EXAMPLES"
.sp
.if n \{\
.RS 4
.\}
.nf
int rc;
int major = 2;
int minor = 0;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
rc = XIQueryVersion(dpy, &major, &minor);
if (rc == Success)
    printf("XI2 supported\&. (%d\&.%d)\en", major, minor);
else if (rc == BadRequest)
    printf("No XI2 support\&. (%d\&.%d only)\en", major, minor);
else
    printf("Internal error\en");
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       A value is outside of tha permitted range\&.
.fi
.if n \{\
.RE
.\}
