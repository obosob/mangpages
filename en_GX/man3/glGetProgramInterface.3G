'\" t
.\"     Title: glGetProgramInterface
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETPROGRAMINTERFAC" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetProgramInterface \- query a property of a intercourse up in a program
.SH "C SPECIFICATION"
.HP \w'void\ glGetProgramInterfaceiv('u
.BI "void glGetProgramInterfaceiv(GLuint\ " "program" ", GLenum\ " "programInterface" ", GLenum\ " "pname" ", GLint\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Da name of a program object whose intercourse ta query\&.
.RE
.PP
\fIprogramInterface\fR
.RS 4
A token identifyin tha intercourse within
\fIprogram\fR
to query\&.
.RE
.PP
\fIpname\fR
.RS 4
Da name of tha parameta within
\fIprogramInterface\fR
to query\&.
.RE
.PP
\fIparams\fR
.RS 4
Da address of a variable ta retrieve tha value of
\fIpname\fR
for tha program intercourse\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetProgramInterfaceiv\fR
queries tha property of tha intercourse identifed by
\fIprogramInterface\fR
in
\fIprogram\fR, tha property name of which is given by
\fIpname\fR\&.
.PP
\fIprogram\fR
must be tha name of a existin program object\&.
\fIprogramInterface\fR
is tha name of tha intercourse within
\fIprogram\fR
to query n' must be one of tha followin joints:
.PP
\fBGL_UNIFORM\fR
.RS 4
Da query is targeted all up in tha set of actizzle uniforms within
\fIprogram\fR\&.
.RE
.PP
\fBGL_UNIFORM_BLOCK\fR
.RS 4
Da query is targeted all up in tha set of actizzle uniform blocks within
\fIprogram\fR\&.
.RE
.PP
\fBGL_ATOMIC_COUNTER_BUFFER\fR
.RS 4
Da query is targeted all up in tha set of actizzle atomic counta buffer bindin points within
\fIprogram\fR\&.
.RE
.PP
\fBGL_PROGRAM_INPUT\fR
.RS 4
Da query is targeted all up in tha set of actizzle input variablez used by tha straight-up original gangsta shader stage of
\fIprogram\fR\&. If
\fIprogram\fR
gotz nuff multiple shader stages then input variablez from any stage other than tha straight-up original gangsta aint gonna be enumerated\&.
.RE
.PP
\fBGL_PROGRAM_OUTPUT\fR
.RS 4
Da query is targeted all up in tha set of actizzle output variablez produced by tha last shader stage of
\fIprogram\fR\&. If
\fIprogram\fR
gotz nuff multiple shader stages then output variablez from any stage other than tha last aint gonna be enumerated\&.
.RE
.PP
\fBGL_VERTEX_SUBROUTINE\fR, \fBGL_TESS_CONTROL_SUBROUTINE\fR, \fBGL_TESS_EVALUATION_SUBROUTINE\fR, \fBGL_GEOMETRY_SUBROUTINE\fR, \fBGL_FRAGMENT_SUBROUTINE\fR, \fBGL_COMPUTE_SUBROUTINE\fR
.RS 4
,
                ,
                ,
                ,
                ,
                Da query is targeted all up in tha set of actizzle subroutines fo' tha vertex, tessellation control, tessellation evaluation, geometry, fragment n' compute shader stages of
\fIprogram\fR, respectively\&.
.RE
.PP
\fBGL_VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR, \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR
.RS 4
,
                ,
                ,
                ,
                ,
                Da query is targeted all up in tha set of actizzle subroutine uniform variablez used by tha vertex, tessellation control, tessellation evaluation, geometry, fragment n' compute shader stages of
\fIprogram\fR, respectively\&.
.RE
.PP
\fBGL_TRANSFORM_FEEDBACK_VARYING\fR
.RS 4
Da query is targeted all up in tha set of output variablez from tha last non\-fragment stage of
\fIprogram\fR
that would be captured if transform feedback was active\&.
.RE
.PP
\fBGL_BUFFER_VARIABLE\fR
.RS 4
Da query is targeted all up in tha set of actizzle buffer variablez used by
\fIprogram\fR\&.
.RE
.PP
\fBGL_SHADER_STORAGE_BLOCK\fR
.RS 4
Da query is targeted all up in tha set of actizzle shader storage blocks used by
\fIprogram\fR\&.
.RE
.PP
\fIpname\fR
identifies tha property of
\fIprogramInterface\fR
to return in
\fIparams\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_ACTIVE_RESOURCES\fR, tha value returned is tha number of resources up in tha actizzle resource list for
\fIprogramInterface\fR\&. If tha list of actizzle resources for
\fIprogramInterface\fR
is empty, zero is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_MAX_NAME_LENGTH\fR, tha value returned is tha length of tha longest actizzle name strang fo' a actizzle resource in
\fIprogramInterface\fR\&. This length includes a extra characta fo' tha null terminator\&. If tha list of actizzle resources for
\fIprogramInterface\fR
is empty, zero is returned\&. Well shiiiit, it be a error ta specify
\fBGL_MAX_NAME_LENGTH\fR
when
\fIprogramInterface\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER\fR, as actizzle atomic counta buffer resources is not assigned name strings\&.
.PP
If
\fIpname\fR
is
\fBGL_MAX_NUM_ACTIVE_VARIABLES\fR, tha value returned is tha number of actizzle variablez belongin ta tha intercourse block or atomic counta buffer resource in
\fIprogramInterface\fR
with da most thugged-out actizzle variables\&. If tha list of actizzle resources for
\fIprogramInterface\fR
is empty, zero is returned\&. When
\fIpname\fR
is
\fBGL_MAX_NUM_ACTIVE_VARIABLES\fR,
\fIprogramInterface\fR
must be
\fBGL_UNIFORM_BLOCK\fR,
\fBGL_ATOMIC_COUNTER_BUFFER\fR, or
\fBGL_SHADER_STORAGE_BLOCK\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_MAX_NUM_COMPATIBLE_SUBROUTINES\fR, tha value returned is tha number of compatible subroutines belongin ta tha actizzle subroutine uniform in
\fIprogramInterface\fR
with da most thugged-out compatible subroutines\&. If tha list of actizzle resources for
\fIprogramInterface\fR
is empty, zero is returned\&. When
\fIpname\fR
is
\fBGL_MAX_NUM_COMPATIBLE_SUBROUTINES\fR,
\fIprogramInterface\fR
must be one of
\fBGL_VERTEX_SUBROUTINE_UNIFORM\fR,
\fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR,
\fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR,
\fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR,
\fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, or
\fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIidentifier\fR
is not one of tha accepted object types\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not tha name of a existin sync object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbufSize\fR
is zero\&.
.PP
If not NULL,
\fIlength\fR
and
\fIlabel\fR
should be addresses ta which tha client has write access, otherwise undefined behavior, includin process termination may occur\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_LABEL_LENGTH\fR\&.
.SH "SEE ALSO"
.PP
\fBglPushDebugGroup\fR(),
\fBglPopDebugGroup\fR(),
\fBglObjectLabel\fR(),
\fBglGetObjectLabel\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
