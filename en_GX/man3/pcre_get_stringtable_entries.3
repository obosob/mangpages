.TH PCRE_GET_STRINGTABLE_ENTRIES 3 "24 June 2012" "PCRE 8.30"
.SH NAME
PCRE - Perl-compatible regular expressions
.SH SYNOPSIS
.rs
.sp
.B #include <pcre.h>
.PP
.SM
.B int pcre_get_stringtable_entries(const pcre *\fIcode\fP,
.ti +5n
.B const char *\fIname\fP, char **\fIfirst\fP, char **\fIlast\fP);
.PP
.B int pcre16_get_stringtable_entries(const pcre16 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR16 \fIname\fP, PCRE_UCHAR16 **\fIfirst\fP, PCRE_UCHAR16 **\fIlast\fP);
.PP
.B int pcre32_get_stringtable_entries(const pcre32 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR32 \fIname\fP, PCRE_UCHAR32 **\fIfirst\fP, PCRE_UCHAR32 **\fIlast\fP);
.
.SH DESCRIPTION
.rs
.sp
This convenience function finds, fo' a cold-ass lil compiled pattern, tha straight-up original gangsta n' last
entries fo' a given name up in tha table dat translates capturin parenthesis
names tha fuck into numbers. When names is required ta be unique (PCRE_DUPNAMES is
\fInot\fP set), it is probably easier ta use \fBpcre[16|32]_get_stringnumber()\fP
instead.
.sp
  \fIcode\fP    Compiled regular expression
  \fIname\fP    Name whose entries required
  \fIfirst\fP   Where ta return a pointa ta tha straight-up original gangsta entry
  \fIlast\fP    Where ta return a pointa ta tha last entry
.sp
Da yield of tha function is tha length of each entry, or
PCRE_ERROR_NOSUBSTRING if none is found.
.P
There be a cold-ass lil complete description of tha PCRE natizzle API, includin tha format of
the table entries, up in the
.\" HREF
\fBpcreapi\fP
.\"
page, n' a thugged-out description of tha POSIX API up in the
.\" HREF
\fBpcreposix\fP
.\"
page.
