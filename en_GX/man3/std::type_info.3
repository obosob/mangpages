.TH "std::type_info" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::type_info \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by __cxxabiv1::__array_type_info, __cxxabiv1::__class_type_info, __cxxabiv1::__enum_type_info, __cxxabiv1::__function_type_info, __cxxabiv1::__fundamental_type_info, n' __cxxabiv1::__pbase_type_info\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~type_info\fP ()"
.br
.ti -1c
.RI "virtual bool \fB__do_catch\fP (const \fBtype_info\fP *__thr_type, void **__thr_obj, unsigned __outer) const "
.br
.ti -1c
.RI "virtual bool \fB__do_upcast\fP (const __cxxabiv1::__class_type_info *__target, void **__obj_ptr) const "
.br
.ti -1c
.RI "virtual bool \fB__is_function_p\fP () const "
.br
.ti -1c
.RI "virtual bool \fB__is_pointer_p\fP () const "
.br
.ti -1c
.RI "bool \fBbefore\fP (const \fBtype_info\fP &__arg) const noexcept"
.br
.ti -1c
.RI "size_t \fBhash_code\fP () const noexcept"
.br
.ti -1c
.RI "const char * \fBname\fP () const noexcept"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBtype_info\fP &__arg) const noexcept"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBtype_info\fP &__arg) const noexcept"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBtype_info\fP (const char *__n)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const char * \fB__name\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Part of RTTI\&. 

Da \fCtype_info\fP class raps bout type shiznit generated by a implementation\&. 
.PP
Definizzle at line 88 of file typeinfo\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "virtual std::type_info::~type_info ()\fC [virtual]\fP"
Destructor first\&. Bein tha straight-up original gangsta non-inline virtual function, dis controls up in which translation unit tha vtable is emitted\&. Da compila make use of dat shiznit ta know where ta emit tha runtime-mandated type_info structures up in tha new-abi\&. 
.SH "Member Function Documentation"
.PP 
.SS "const char* std::type_info::name () const\fC [inline]\fP, \fC [noexcept]\fP"
Returns a \fIimplementation-defined\fP byte string; dis aint portable between compilers muthafucka! 
.PP
Definizzle at line 99 of file typeinfo\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
