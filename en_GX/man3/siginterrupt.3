.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sun Jul 25 10:40:51 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Apr 14 16:20:34 1996 by Andries Brouwer (aeb@cwi.nl)
.TH SIGINTERRUPT 3 2013-04-19 "" "Linux Programmerz Manual"
.SH NAME
siginterrupt \- allow signals ta interrupt system calls
.SH SYNOPSIS
.nf
.B #include <signal.h>
.sp
.BI "int siginterrupt(int " sig ", int " flag );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR siginterrupt ():
.ad l
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200809L
.RE
.ad
.SH DESCRIPTION
The
.BR siginterrupt ()
function chizzlez tha restart behavior when
a system call is interrupted by tha signal \fIsig\fP.
If tha \fIflag\fP
argument is false (0), then system calls is ghon be restarted if interrupted
by tha specified signal \fIsig\fP.
This is tha default behavior up in Linux.
.PP
If tha \fIflag\fP argument is legit (1) n' no data has been transferred,
then a system call interrupted by tha signal \fIsig\fP will return \-1
and \fIerrno\fP is ghon be set to
.BR EINTR .
.PP
If tha \fIflag\fP argument is legit (1) n' data transfer has started,
then tha system call is ghon be interrupted n' will return tha actual
amount of data transferred.
.SH RETURN VALUE
The
.BR siginterrupt ()
function returns 0 on success.
It returns \-1 if the
signal number
.I sig
is invalid, with
.I errno
set ta indicate tha cause of tha error.
.SH ERRORS
.TP
.B EINVAL
Da specified signal number is invalid.
.SH CONFORMING TO
4.3BSD, POSIX.1-2001.
POSIX.1-2008 marks
.BR siginterrupt ()
as obsolete, recommendin tha use of
.BR sigaction (2)
with the
.B SA_RESTART
flag instead.
.SH SEE ALSO
.BR signal (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
