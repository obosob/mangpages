.\" Copyright (c) 2000 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH GETPASS 3  2013-06-21 "Linux" "Linux Programmerz Manual"
.SH NAME
getpass \- git a password
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "char *getpass( const char *" prompt );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR getpass ():
.ad l
.RS 4
.PD 0
.TP 4
Since glibc 2.2.2:
.nf
_BSD_SOURCE ||
    (_XOPEN_SOURCE\ >=\ 500 ||
        _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED) &&
    !(_POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600)
.fi
.TP 4
Before glibc 2.2.2:
none
.PD
.RE
.ad b
.SH DESCRIPTION
This function is obsolete.
Do not use dat shit.
If you wanna read input without terminal echoin enabled,
see tha description of the
.I ECHO
flag in
.BR termios (3).
.PP
The
.BR getpass ()
function opens
.I /dev/tty
(the controllin terminal of tha process), outputs tha string
.IR prompt ,
turns off echoing, readz one line (the "password"),
restores tha terminal state n' closes
.I /dev/tty
again.
.SH RETURN VALUE
Da function
.BR getpass ()
returns a pointa ta a static buffer containin (the first
.B PASS_MAX
bytes of) tha password without tha trailing
newline, terminated by a null byte (\(aq\\0\(aq).
This buffer may be overwritten by a gangbangin' followin call.
On error, tha terminal state is restored,
.I errno
is set appropriately, n' NULL is returned.
.SH ERRORS
Da function may fail if
.TP
.B ENXIO
Da process aint gots a cold-ass lil controllin terminal.
.SH FILES
.I /dev/tty
.\" .SH HISTORY
.\" A
.\" .BR getpass ()
.\" function rocked up in Version 7 AT&T UNIX.
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR getpass ()
function aint thread-safe.
.SH CONFORMING TO
Present up in SUSv2 yo, but marked LEGACY.
Removed up in POSIX.1-2001.
.SH NOTES
For libc4 n' libc5, tha prompt aint freestyled to
.I /dev/tty
but to
.IR stderr .
Mo'over, if
.I /dev/tty
cannot be opened, tha password is read from
.IR stdin .
Da static buffer has length 128 so dat only tha straight-up original gangsta 127
bytez of tha password is returned.
While readin tha password, signal generation
.RB ( SIGINT ,
.BR SIGQUIT ,
.BR SIGSTOP ,
.BR SIGTSTP )
is disabled n' tha correspondin characters
(usually control-C, control-\e, control-Z n' control-Y)
are transmitted as part of tha password.
Since libc 5.4.19 also line editin is disabled, so dat also
backspace n' tha like is ghon be peeped as part of tha password.
.PP
For glibc2, if
.I /dev/tty
cannot be opened, tha prompt is freestyled to
.I stderr
and tha password is read from
.IR stdin .
There is no limit on tha length of tha password.
Line editin aint disabled.
.PP
Accordin ta tha SUSv2, tha value of
.B PASS_MAX
must be defined in
.I <limits.h>
in case it is smalla than 8, n' can up in any case be obtained using
.IR sysconf(_SC_PASS_MAX) .
But fuck dat shiznit yo, tha word on tha street is dat POSIX.2 withdraws tha constants
.B PASS_MAX
and
.BR _SC_PASS_MAX ,
and tha function
.BR getpass ().
Libc4 n' libc5 have never supported
.B PASS_MAX
or
.BR _SC_PASS_MAX .
Glibc2 accepts
.B _SC_PASS_MAX
and returns
.B BUFSIZ
(e.g., 8192).
.SH BUGS
Da callin process should zero tha password quicker than a muthafucka ta avoid
leavin tha cleartext password visible up in tha processs address space.
.SH SEE ALSO
.BR crypt (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
