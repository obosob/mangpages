.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XSetClipOrigin 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XSetClipOrigin, XSetClipMask, XSetClipRectanglez \- GC convenience routines
.SH SYNTAX
.HP
int XSetClipOrigin\^(\^Display *\fIdisplay\fP\^, GC \fIgc\fP\^, int
\fIclip_x_origin\fP\^, int \fIclip_y_origin\fP\^); 
.HP
int XSetClipMask\^(\^Display *\fIdisplay\fP\^, GC \fIgc\fP\^, Pixmap
\fIpixmap\fP\^); 
.HP
int XSetClipRectangles\^(\^Display *\fIdisplay\fP\^, GC \fIgc\fP\^, int
\fIclip_x_origin\fP\^, int \fIclip_y_origin\fP\^, XRectangle
\fIrectangles\fP[]\^, int \fIn\fP\^, int \fIordering\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIclip_x_origin\fP 1i
.br
.ns
.IP \fIclip_y_origin\fP 1i
Specify tha x n' y coordinatez of tha clip-mask origin.
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fIn\fP 1i
Specifies tha number of rectangles. 
.IP \fIordering\fP 1i
Specifies tha orderin relations on tha rectangles.
Yo ass can pass
.ZN Unsorted ,
.ZN YSorted ,
.ZN YXSorted ,
or
.ZN YXBanded .
.IP \fIpixmap\fP 1i
Specifies tha pixmap or
.ZN None .
.IP \fIrectangles\fP 1i
Specifies a array of rectanglez dat define tha clip-mask.
.SH DESCRIPTION
The
.ZN XSetClipOrigin
function sets tha clip origin up in tha specified GC.
Da clip-mask origin is interpreted relatizzle ta tha origin of whatever
destination drawable is specified up in tha graphics request.
.LP
.ZN XSetClipOrigin
can generate
.ZN BadAlloc
and
.ZN BadGC 
errors.
.LP
The
.ZN XSetClipMask
function sets tha clip-mask up in tha specified GC ta tha specified pixmap.
If tha clip-mask is set to
.ZN None ,
the pixels is is always drawn (regardless of tha clip-origin).
.LP
.ZN XSetClipMask
can generate
.ZN BadAlloc ,
.ZN BadGC ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.LP
The
.ZN XSetClipRectangles
function chizzlez tha clip-mask up in tha specified GC 
to tha specified list of rectanglez n' sets tha clip origin.
Da output is clipped ta remain contained within the
rectangles.
Da clip-origin is interpreted relatizzle ta tha origin of
whatever destination drawable is specified up in a graphics request.  
Da rectangle coordinates is interpreted relatizzle ta tha clip-origin. I aint talkin' bout chicken n' gravy biatch.  
Da rectanglez should be nonintersecting, or tha graphics thangs up in dis biatch will be
undefined.
Note dat tha list of rectanglez can be empty, 
which effectively disablez output.
This is tha opposite of passing
.ZN None
as tha clip-mask in
.ZN XCreateGC ,
.ZN XChangeGC ,
and
.ZN XSetClipMask .
.LP
If known by tha client, orderin relations on tha rectanglez can be
specified wit tha orderin argument. 
This may provide fasta operation
by tha server n' shit. 
If a incorrect orderin is specified, tha X server may generate a
.ZN BadMatch
error yo, but it aint required ta do so.
If no error is generated, tha graphics
results is undefined.
.ZN Unsorted 
means tha rectanglez is up in arbitrary order.
.ZN YSorted 
means dat tha rectanglez is nondecreasin up in they Y origin.
.ZN YXSorted 
additionally constrains 
.ZN YSorted 
order up in dat all
rectanglez wit a equal Y origin is nondecreasin up in they X
origin. I aint talkin' bout chicken n' gravy biatch.  
.ZN YXBanded 
additionally constrains 
.ZN YXSorted 
by requirin that,
for every last muthafuckin possible Y scanline, all rectanglez dat include that
scanline have a identical Y origins n' Y extents.
.LP
.ZN XSetClipRectangles
can generate
.ZN BadAlloc ,
.ZN BadGC ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XCreateGC(3),
XDrawRectangle(3),
XQueryBestSize(3),
XSetArcMode(3),
XSetFillStyle(3),
XSetFont(3),
XSetLineAttributes(3),
XSetState(3),
XSetTile(3)
.br
\fI\*(xL\fP
