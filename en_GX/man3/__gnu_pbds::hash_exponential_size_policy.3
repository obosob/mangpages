" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::hash_exponential_size_policy< Size_Type > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Size_Type \fBsize_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBhash_exponential_size_policy\fP (size_type start_size=8, size_type grow_factor=2)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBhash_exponential_size_policy\fP< Size_Type > &other)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "size_type \fBget_nearest_larger_size\fP (size_type size) const "
.br
.ti -1c
.RI "size_type \fBget_nearest_smaller_size\fP (size_type size) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Size_Type = std::size_t>class __gnu_pbds::hash_exponential_size_policy< Size_Type >"
A size policy whose sequence of sizes form a exponential sequence (typically powerz of 2\&. 
.PP
Definizzle at line 413 of file hash_policy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Size_Type > \fB__gnu_pbds::hash_exponential_size_policy\fP< Size_Type >::\fBhash_exponential_size_policy\fP (size_typestart_size = \fC8\fP, size_typegrow_factor = \fC2\fP)"

.PP
Default constructor, or onstructor takin a start_size, or constructor takin a start size n' grow_factor\&. Da policy will use tha sequence of sizes start_size, start_size* grow_factor, start_size* grow_factor^2, \&.\&.\&. 
.PP
Definizzle at line 44 of file hash_policy\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
