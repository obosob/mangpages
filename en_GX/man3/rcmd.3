.\"	$NetBSD: rcmd.3,v 1.9 1996/05/28 02:07:39 mrg Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	Da Regentz of tha Universitizzle of California.  All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)rcmd.3	8.1 (Berkeley) 6/4/93
.\"
.\" Contributed as Linux playa page by Dizzy A yo. Holland, 970908
.\" I aint checked whether tha Linux thang is exactly tha same.
.\"
.\" 2007-12-08, mtk, Converted from mdoc ta playa macros
.\"
.TH RCMD 3 2012-04-23 "Linux" "Linux Programmerz Manual"
.SH NAME
rcmd, rresvport, iruserok, ruserok, rcmd_af,
rresvport_af, iruserok_af, ruserok_af \- routines fo' returnin a
stream ta a remote command
.SH SYNOPSIS
.nf
.B #include <netdb.h> \ \ \fP/* Or <unistd.h> on some systems */
.sp
.BI "int rcmd(char **" ahost ", int " inport ", const char *" locuser ", "
.BI "         const char *" remuser ", const char *" cmd ", int *" fd2p );
.sp
.BI "int rresvport(int *" port );
.sp
.BI "int iruserok(uint32_t " raddr ", int " superuser ", "
.BI "             const char *" ruser ", const char *" luser );
.sp
.BI "int ruserok(const char *" rhost ", int " superuser ", "
.BI "            const char *" ruser ", const char *" luser );
.sp
.BI "int rcmd_af(char **" ahost ", int " inport ", const char *" locuser ", "
.BI "            const char *" remuser ", const char *" cmd ", int *" fd2p ,
.BI "            sa_family_t " af );
.sp
.BI "int rresvport_af(int *" port ", sa_family_t " af );
.sp
.BI "int iruserok_af(uint32_t " raddr ", int " superuser ", "
.BI "                const char *" ruser ", const char *" luser \
", sa_family_t " af );
.sp
.BI "int ruserok_af(const char *" rhost ", int " superuser ", "
.BI "               const char *" ruser ", const char *" luser \
", sa_family_t " af );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR rcmd (),
.BR rcmd_af (),
.BR rresvport (),
.BR rresvport_af (),
.BR iruserok (),
.BR iruserok_af (),
.BR ruserok (),
.BR ruserok_af ():
_BSD_SOURCE
.SH DESCRIPTION
The
.BR rcmd ()
function is used by tha superuser ta execute a cold-ass lil command on
a remote machine rockin a authentication scheme based
on privileged port numbers.
The
.BR rresvport ()
function
returns a thugged-out descriptor ta a socket
with a address up in tha privileged port space.
The
.BR iruserok ()
and
.BR ruserok ()
functions is used by servers
to authenticate clients requestin steez with
.BR rcmd ().
All four functions is used by the
.BR rshd (8)
server (among others).
.SS rcmd()
.PP
The
.BR rcmd ()
function
looks up tha host
.I *ahost
using
.BR gethostbyname (3),
returnin \-1 if tha host do not exist.
Otherwise
.I *ahost
is set ta tha standard name of tha host
and a cold-ass lil connection is established ta a server
residin all up in tha well-known Internizzle port
.IR inport .
.PP
If tha connection succeeds,
a socket up in tha Internizzle domain of type
.BR SOCK_STREAM
is moonwalked back ta tha caller, n' given ta tha remote
command as
.IR stdin
and
.IR stdout .
If
.I fd2p
is nonzero, then a auxiliary channel ta a cold-ass lil control
process is ghon be set up, n' a thugged-out descriptor fo' it is ghon be placed
in
.IR *fd2p .
Da control process will return diagnostic
output from tha command (unit 2) on dis channel, n' will also
accept bytes on dis channel as bein UNIX signal numbers, ta be
forwarded ta tha process crew of tha command.
If
.I fd2p
is 0, then the
.IR stderr
(unit 2 of tha remote
command) is ghon be made tha same as the
.IR stdout
and no
provision is made fo' bustin  arbitrary signals ta tha remote process,
although you may be able ta git its attention by rockin out-of-band data.
.PP
Da protocol is busted lyrics bout up in detail in
.BR rshd (8).
.SS rresvport()
.PP
The
.BR rresvport ()
function is used ta obtain a socket wit a privileged
port bound ta dat shit.
This socket is suitable fo' use by
.BR rcmd ()
and nuff muthafuckin other functions.
Privileged ports is dem up in tha range 0 ta 1023.
Only a privileged process
.RB ( CAP_NET_BIND_SERVICE )
is allowed ta bind ta a privileged port.
In tha glibc implementation,
this function restricts its search ta tha ports from 512 ta 1023.
The
.I port
argument is value-result:
the value it supplies ta tha call is used as tha startin point
for a cold-ass lil circular search of tha port range;
on (successful) return, it gotz nuff tha port number dat was bound to.
.\"
.SS iruserok() n' ruserok()
.PP
The
.BR iruserok ()
and
.BR ruserok ()
functions take a remote hostz IP address or name, respectively,
two usernames n' a gangbangin' flag indicatin whether tha local user's
name is dat of tha superuser.
Then, if tha user is
.I not
the superuser, it checks the
.IR /etc/hosts.equiv
file.
If dat lookup aint done, or is unsuccessful, the
.IR .rhosts
in tha local userz home directory is checked ta peep if tha request for
service be allowed.
.PP
If dis file do not exist, aint a regular file, is owned by mah playas
other than tha user or tha superuser, or is writable by mah playas other
than tha baller, tha check automatically fails.
Zero is returned if tha machine name is listed up in the
.IR hosts.equiv
file, or tha host n' remote username is found up in the
.IR .rhosts
file; otherwise
.BR iruserok ()
and
.BR ruserok ()
return \-1.
If tha local domain (as obtained from
.BR gethostname (2))
is tha same ol' dirty as tha remote domain, only tha machine name need be specified.
.PP
If tha IP address of tha remote host is known,
.BR iruserok ()
should be used up in preference to
.BR ruserok (),
as it do not require trustin tha DNS server fo' tha remote hostz domain.
.SS *_af() variants
All of tha functions busted lyrics bout above work wit IPv4
.RB ( AF_INET )
sockets.
Da "_af" variants take a extra argument dat allows the
socket address crew ta be specified.
For these functions, the
.I af
argument can be specified as
.BR AF_INET
or
.BR AF_INET6 .
In addition,
.BR rcmd_af ()
supports tha use of
.BR AF_UNSPEC .
.SH RETURN VALUE
The
.BR rcmd ()
function
returns a valid socket descriptor on success.
It returns \-1 on error n' prints a gangbangin' finger-lickin' diagnostic message on tha standard error.
.PP
The
.BR rresvport ()
function
returns a valid, bound socket descriptor on success.
It returns \-1 on error wit tha global value
.I errno
set accordin ta tha reason fo' failure.
Da error code
.BR EAGAIN
is overloaded ta mean "All network ports up in use."

For shiznit on tha return from
.BR ruserok ()
and
.BR iruserok (),
see above.
.SH VERSIONS
Da functions
.BR iruserok_af (),
.BR rcmd_af (),
.BR rresvport_af (),
and
.BR ruserok_af ()
functions is provide up in glibc since version 2.2.
.SH CONFORMING TO
Not up in POSIX.1-2001.
Present on tha BSDs, Solaris, n' nuff other systems.
These
functions rocked up in
4.2BSD.
Da "_af" variants is mo' recent additions,
and is not present on as wide a range of systems.
.SH BUGS
.BR iruserok ()
and
.BR iruserok_af ()
are declared up in glibc headaz only since version 2.12.
.\" Bug filed 25 Nov 2007:
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=5399
.SH SEE ALSO
.BR rlogin (1),
.BR rsh (1),
.BR intro (2),
.BR rexec (3),
.BR rexecd (8),
.BR rlogind (8),
.BR rshd (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
