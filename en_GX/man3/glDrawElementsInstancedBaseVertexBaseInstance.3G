'\" t
.\"     Title: glDrawElementsInstancedBaseVertexBaseInstance
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLDRAWELEMENTSINSTAN" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDrawElementsInstancedBaseVertexBaseInstizzle \- render multiple instancez of a set of primitives from array data wit a per\-element offset
.SH "C SPECIFICATION"
.HP \w'void\ glDrawElementsInstancedBaseVertexBaseInstance('u
.BI "void glDrawElementsInstancedBaseVertexBaseInstance(GLenum\ " "mode" ", GLsizei\ " "count" ", GLenum\ " "type" ", GLvoid\ *" "indices" ", GLsizei\ " "primcount" ", GLint\ " "basevertex" ", GLuint\ " "baseinstance" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies what tha fuck kind of primitives ta render\&. Right back up in yo muthafuckin ass. Symbolic constants
\fBGL_POINTS\fR,
\fBGL_LINE_STRIP\fR,
\fBGL_LINE_LOOP\fR,
\fBGL_LINES\fR,
\fBGL_TRIANGLE_STRIP\fR,
\fBGL_TRIANGLE_FAN\fR,
\fBGL_TRIANGLES\fR,
\fBGL_LINES_ADJACENCY\fR,
\fBGL_LINE_STRIP_ADJACENCY\fR,
\fBGL_TRIANGLES_ADJACENCY\fR,
\fBGL_TRIANGLE_STRIP_ADJACENCY\fR
and
\fBGL_PATCHES\fR
are accepted\&.
.RE
.PP
\fIcount\fR
.RS 4
Specifies tha number of elements ta be rendered\&.
.RE
.PP
\fItype\fR
.RS 4
Specifies tha type of tha joints up in indices\&. Must be one of
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR, or
\fBGL_UNSIGNED_INT\fR\&.
.RE
.PP
\fIindices\fR
.RS 4
Specifies a pointa ta tha location where tha indices is stored\&.
.RE
.PP
\fIprimcount\fR
.RS 4
Specifies tha number of instancez of tha indexed geometry dat should be drawn\&.
.RE
.PP
\fIbasevertex\fR
.RS 4
Specifies a cold-ass lil constant dat should be added ta each element of
\fIindices\fR
when chosin elements from tha enabled vertex arrays\&.
.RE
.PP
\fIbaseinstance\fR
.RS 4
Specifies tha base instizzle fo' use up in fetchin instanced vertex attributes\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDrawElementsInstancedBaseVertexBaseInstance\fR
behaves identically to
\fBglDrawElementsInstanced\fR()
except dat the
\fIi\fRth element transferred by tha correspondin draw call is ghon be taken from element
\fIindices\fR[i] +
\fIbasevertex\fR
of each enabled array\&. If tha resultin value is larger than tha maximum value representable by
\fItype\fR, it be as if tha calculation was upconverted ta 32\-bit unsigned integers (with wrappin on overflow conditions)\&. Da operation is undefined if tha sum would be negative\&. The
\fIbasevertex\fR
has no effect on tha shader\-visible value of
\fBgl_VertexID\fR\&.
.PP
Specific vertex attributes may be classified as
\fIinstanced\fR
all up in tha use of
\fBglVertexAttribDivisor\fR()\&. Instanced vertex attributes supply per\-instizzle vertex data ta tha vertex shader\&. Da index of tha vertex fetched from tha enabled instanced vertex attribute arrays is calculated as
gl _ InstanceID divisor + baseInstance\&. Note that
\fIbaseinstance\fR
does not affect tha shader\-visible value of
\fBgl_InstanceID\fR\&.
.SH "NOTES"
\fBglDrawElementsInstancedBaseVertex\fR is only supported if tha GL version is 3\&.2 or pimped outer\&.
    .SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIcount\fR
or
\fIprimcount\fR
is negative\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a geometry shader be actizzle and
\fImode\fR
is incompatible wit tha input primitizzle type of tha geometry shader up in tha currently installed program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta a enabled array or tha element array n' tha buffer object\*(Aqs data store is currently mapped\&.
.SH "SEE ALSO"
.PP
\fBglDrawElements\fR(),
\fBglDrawRangeElements\fR(),
\fBglDrawRangeElementsBaseVertex\fR(),
\fBglDrawElementsInstanced\fR(),
\fBglDrawElementsInstancedBaseVertex\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2011 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
