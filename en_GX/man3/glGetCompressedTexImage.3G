'\" t
.\"     Title: glGetCompressedTexImage
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETCOMPRESSEDTEXIM" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetCompressedTexImage \- return a cold-ass lil compressed texture image
.SH "C SPECIFICATION"
.HP \w'void\ glGetCompressedTexImage('u
.BI "void glGetCompressedTexImage(GLenum\ " "target" ", GLint\ " "lod" ", GLvoid\ *\ " "img" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies which texture is ta be obtained\&.
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Z\fR, and
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Z\fR
are accepted\&.
.RE
.PP
\fIlod\fR
.RS 4
Specifies tha level\-of\-detail number of tha desired image\&. Level 0 is tha base image level\&. Level
n
is the
nth mipmap reduction image\&.
.RE
.PP
\fIimg\fR
.RS 4
Returns tha compressed texture image\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetCompressedTexImage\fR
returns tha compressed texture image associated with
\fItarget\fR
and
\fIlod\fR
into
\fIimg\fR\&.
\fIimg\fR
should be a array of
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR
bytes\&.
\fItarget\fR
specifies whether tha desired texture image was one specified by
\fBglTexImage1D\fR()
(\fBGL_TEXTURE_1D\fR),
\fBglTexImage2D\fR()
(\fBGL_TEXTURE_2D\fR
or any of
\fBGL_TEXTURE_CUBE_MAP_*\fR), or
\fBglTexImage3D\fR()
(\fBGL_TEXTURE_3D\fR)\&.
\fIlod\fR
specifies tha level\-of\-detail number of tha desired image\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a texture image is requested,
\fIimg\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.PP
To minimize errors, first verify dat tha texture is compressed by calling
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_COMPRESSED\fR\&. If tha texture is compressed, then determine tha amount of memory required ta store tha compressed texture by calling
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR\&. Finally, retrieve tha internal format of tha texture by calling
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_INTERNAL_FORMAT\fR\&. To store tha texture fo' lata use, associate tha internal format n' size wit tha retrieved texture image\&. These data can be used by tha respectizzle texture or subtexture loadin routine used fo' loading
\fItarget\fR
textures\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIlod\fR
is less than zero or pimped outa than tha maximum number of LODs permitted by tha implementation\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglGetCompressedTexImage\fR
is used ta retrieve a texture dat is up in a uncompressed internal format\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_PACK_BUFFER\fR
target n' tha data would be packed ta tha buffer object such dat tha memory writes required would exceed tha data store size\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_COMPRESSED\fR
.PP
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR
.PP
\fBglGetTexLevelParameter\fR()
with argument
\fBGL_TEXTURE_INTERNAL_FORMAT\fR
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_PACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglCompressedTexImage1D\fR(),
\fBglCompressedTexImage2D\fR(),
\fBglCompressedTexImage3D\fR(),
\fBglCompressedTexSubImage1D\fR(),
\fBglCompressedTexSubImage2D\fR(),
\fBglCompressedTexSubImage3D\fR(),
\fBglReadPixels\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglTexParameter\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexSubImage3D\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
