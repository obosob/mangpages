.TH "getfilecon" "3" "1 January 2004" "russell@coker.com.au" "SELinux API documentation"
.SH "NAME"
getfilecon, fgetfilecon, lgetfilecon \- git SELinux securitizzle context of a gangbangin' file
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.sp
.BI "int getfilecon(const char *" path ", security_context_t *" con );
.sp
.BI "int getfilecon_raw(const char *" path ", security_context_t *" con );
.sp
.BI "int lgetfilecon(const char *" path ", security_context_t *" con );
.sp
.BI "int lgetfilecon_raw(const char *" path ", security_context_t *" con );
.sp
.BI "int fgetfilecon(int "fd ", security_context_t *" con );
.sp
.BI "int fgetfilecon_raw(int "fd ", security_context_t *" con );
.
.SH "DESCRIPTION"
.BR getfilecon ()
retrieves tha context associated wit tha given path up in tha file system, the
length of tha context is returned.

.BR lgetfilecon ()
is identical to
.BR getfilecon (),
except up in tha case of a symbolic link, where the
link itself is invigorated, not tha file dat it refers to.

.BR fgetfilecon ()
is identical to
.BR getfilecon (),
only tha open file pointed ta by filedes (as returned by
.BR open (2))
is invigorated up in place of path.

.BR getfilecon_raw (),
.BR lgetfilecon_raw ()
and
.BR fgetfilecon_raw ()
behave identically ta they non-raw counterparts but do not big-ass up context
translation.

Da returned context should be freed with
.BR freecon (3)
if non-NULL.
.
.SH "RETURN VALUE"
On success, a positizzle number is returned indicatin tha size of the
extended attribute value. On failure, \-1 is returned and
.I errno
is  set appropriately.

If tha context do not exist, or tha process has no access to
this attribute,
.I errno
is set to
.BR ENODATA .

If extended attributes is not supported by tha filesystem, or are
disabled,
.I errno
is set to
.BR ENOTSUP .

Da errors documented fo' the
.BR stat (2)
system call is also applicable here.
.
.SH "SEE ALSO"
.BR selinux "(8), " freecon "(3), " setfilecon "(3), " setfscreatecon "(3)"
