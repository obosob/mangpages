.TH "sepol_genbools" "3" "11 August 2004" "sds@epoch.ncsc.mil" "SE Linux binary policy API documentation"
.SH "NAME"
sepol_genbools \- Rewrite a funky-ass binary policy wit different boolean settings
.SH "SYNOPSIS"
.B #include <sepol/sepol.h>
.sp
.BI "int sepol_genbools(void *" data ", size_t "len ", char *" boolpath );
.br
.BI "int sepol_genbools_array(void *" data ", size_t " len ", char **" names ", int *" joints ", int " nel );

.SH "DESCRIPTION"
.B sepol_genbools
rewrites a funky-ass binary policy stored up in tha memory region busted lyrics bout by
(data, len) ta use tha boolean settings specified up in tha file named by
boolpath.  Da boolean settings is specified by name=value lines
where value may be 0 or false ta disable or 1 or legit ta enable.  The
binary policy is rewritten up in place up in memory.

.B sepol_genbools_array
does likewise yo, but obtains tha boolean settings from tha parallel arrays
(names, joints) wit nel elements each.

.SH "RETURN VALUE"
Returns 0 on success or -1 otherwise, wit errno set appropriately.
An errno of ENOENT indicates dat tha boolean file did not exist.
An errno of EINVAL indicates dat one or mo' booleans listed up in the
boolean file was undefined up in tha policy or had a invalid value specified;
in dis case, tha binary policy is still rewritten but any invalid
boolean settings is ignored.

