.TH "std::exception" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::exception \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by __gnu_cxx::__concurrence_broadcast_error, __gnu_cxx::__concurrence_lock_error, __gnu_cxx::__concurrence_unlock_error, __gnu_cxx::__concurrence_wait_error, \fB__gnu_cxx::forced_error\fP, \fB__gnu_cxx::recursive_init_error\fP, \fBstd::bad_alloc\fP, \fBstd::bad_cast\fP, \fBstd::bad_exception\fP, \fBstd::bad_function_call\fP, \fBstd::bad_typeid\fP, \fBstd::bad_weak_ptr\fP, \fBstd::ios_base::failure\fP, \fBstd::logic_error\fP, n' \fBstd::runtime_error\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual const char * \fBwhat\fP () const noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class fo' all library exceptions\&. 

This is tha base class fo' all exceptions thrown by tha standard library, n' by certain language expressions\&. Yo ass is free ta derive yo' own exception classes, or bust a gangbangin' finger-lickin' different hierarchy, or ta throw non-class data (e\&.g\&., fundamenstrual types)\&. 
.PP
Definizzle at line 60 of file exception\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual const char* std::exception::what () const\fC [virtual]\fP, \fC [noexcept]\fP"
Returns a C-style characta strang describin tha general cause of tha current error\&. 
.PP
Reimplemented up in \fBstd::bad_function_call\fP, \fBstd::ios_base::failure\fP, \fBstd::bad_typeid\fP, \fBstd::bad_cast\fP, \fBstd::runtime_error\fP, \fBstd::future_error\fP, \fBstd::bad_exception\fP, \fBstd::logic_error\fP, \fBstd::bad_weak_ptr\fP, n' \fBstd::bad_alloc\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
