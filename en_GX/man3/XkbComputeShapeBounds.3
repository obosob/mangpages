.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbComputeShapeBoundz 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbComputeShapeBoundz \- Updates tha boundin box of a gangbangin' finger-lickin' dirty-ass shape
.SH SYNOPSIS
.HP
.B Bool XkbComputeShapeBounds
.BI "(\^XkbShapePtr " "shape" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- shape
shape ta be examined
.SH DESCRIPTION
.LP
Xkb serves up a fuckin shitload of convenience functions ta help bust a keyboard geometry. These include 
functions ta return tha boundin box of a gangbangin' finger-lickin' dirty-ass shapez top surface n' ta update tha boundin box 
of a gangbangin' finger-lickin' dirty-ass shape row or section.

A shape is made up of a fuckin shitload of outlines. Each outline be a polygon made up of a fuckin shitload of 
points, n' you can put dat on yo' toast. Da boundin box of a gangbangin' finger-lickin' dirty-ass shape be a rectangle dat gotz nuff all tha outlinez of dat 
shape. 

A ShapeRec gotz nuff a BoundsRec dat raps bout tha boundz of tha shape. If you add or delete 
an outline ta or from a gangbangin' finger-lickin' dirty-ass shape, tha boundin box must be updated.

.I XkbComputeShapeBoundz 
updates tha BoundsRec contained up in tha 
.I shape 
by examinin all tha outlinez of tha shape n' settin tha BoundsRec ta tha minimum x n' 
minimum y, n' maximum x n' maximum y joints found up in dem outlines. 
.I XkbComputeShapeBoundz 
returns False if 
.I shape 
is NULL or if there be no outlines fo' tha shape; otherwise, it returns True.

If you add or delete a key ta or from a row, or if you update tha shape of one of tha keys up in dat row, you may need ta update tha boundin box of dat row. To update tha boundin box of a row, use 
.I XkbComputeRowBounds.
.SH STRUCTURES
.LP
.nf

typedef struct _XkbShape {
    Atom           name;         /\(** shapez name */
    unsigned short num_outlines; /\(** number of outlines fo' tha shape */
    unsigned short sz_outlines;  /\(** size of tha outlines array */
    XkbOutlinePtr  outlines;     /\(** array of outlines fo' tha shape */
    XkbOutlinePtr  approx;       /\(** pointa tha fuck into tha array ta tha approximatin outline */
    XkbOutlinePtr  primary;      /\(** pointa tha fuck into tha array ta tha primary outline */
    XkbBoundsRec   bounds;       /\(** boundin box fo' tha shape; encompasses all outlines */
} XkbShapeRec, *XkbShapePtr;

typedef struct _XkbBoundz {
    short	x1,y1;	/\(** upper left corner of tha bounds, up in mm/10 */
    short	x2,y2;	/\(** lower right corner of tha bounds, up in mm/10 */
} XkbBoundsRec, *XkbBoundsPtr;

.fi
.SH "SEE ALSO"
.BR XkbComputeRowBoundz (3)

