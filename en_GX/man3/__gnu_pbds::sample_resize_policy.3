.TH "__gnu_pbds::sample_resize_policy" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::sample_resize_policy \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::size_t \fBsize_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsample_resize_policy\fP ()"
.br
.ti -1c
.RI "\fBsample_range_hashing\fP (const \fBsample_resize_policy\fP &other)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBsample_resize_policy\fP &other)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsize_type\fP \fBget_new_size\fP (\fBsize_type\fP size, \fBsize_type\fP num_used_e) const "
.br
.ti -1c
.RI "bool \fBis_resize_needed\fP () const "
.br
.ti -1c
.RI "void \fBnotify_cleared\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erased\fP (\fBsize_type\fP num_e)"
.br
.ti -1c
.RI "void \fBnotify_find_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_find_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_find_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_inserted\fP (\fBsize_type\fP num_e)"
.br
.ti -1c
.RI "void \fBnotify_resized\fP (\fBsize_type\fP new_size)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A sample resize policy\&. 
.PP
Definizzle at line 47 of file sample_resize_policy\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::size_t \fB__gnu_pbds::sample_resize_policy::size_type\fP"

.PP
Size type\&. 
.PP
Definizzle at line 51 of file sample_resize_policy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__gnu_pbds::sample_resize_policy::sample_resize_policy ()"

.PP
Default constructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBsize_type\fP __gnu_pbds::sample_resize_policy::get_new_size (\fBsize_type\fPsize, \fBsize_type\fPnum_used_e) const\fC [protected]\fP"

.PP
Queries what tha fuck tha freshly smoked up size should be\&. 
.SS "bool __gnu_pbds::sample_resize_policy::is_resize_needed () const\fC [inline]\fP, \fC [protected]\fP"

.PP
Queries whether a resize is needed\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_cleared ()\fC [protected]\fP"

.PP
Notifies tha table was cleared\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_erase_search_collision ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search encountered a cold-ass lil collision\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_erase_search_end ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search ended\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_erase_search_start ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search started\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_erased (\fBsize_type\fPnum_e)\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a element was erased\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_find_search_collision ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search encountered a cold-ass lil collision\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_find_search_end ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search ended\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_find_search_start ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search started\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_insert_search_collision ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search encountered a cold-ass lil collision\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_insert_search_end ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search ended\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_insert_search_start ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a search started\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_inserted (\fBsize_type\fPnum_e)\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a element was inserted\&. 
.SS "void __gnu_pbds::sample_resize_policy::notify_resized (\fBsize_type\fPnew_size)\fC [protected]\fP"

.PP
Notifies tha table was resized ta new_size\&. 
.SS "__gnu_pbds::sample_resize_policy::sample_range_hashin (const \fBsample_resize_policy\fP &other)"

.PP
Copy constructor\&. 
.SS "void __gnu_pbds::sample_resize_policy::swap (\fBsample_resize_policy\fP &other)\fC [inline]\fP"

.PP
Swaps content\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
