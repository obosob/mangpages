'\" t
.\"     Title: glDrawRangeElements
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLDRAWRANGEELEMENTS" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glDrawRangeElements \- render primitives from array data
.SH "C SPECIFICATION"
.HP \w'void\ glDrawRangeElements('u
.BI "void glDrawRangeElements(GLenum\ " "mode" ", GLuint\ " "start" ", GLuint\ " "end" ", GLsizei\ " "count" ", GLenum\ " "type" ", const\ GLvoid\ *\ " "indices" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies what tha fuck kind of primitives ta render\&. Right back up in yo muthafuckin ass. Symbolic constants
\fBGL_POINTS\fR,
\fBGL_LINE_STRIP\fR,
\fBGL_LINE_LOOP\fR,
\fBGL_LINES\fR,
\fBGL_LINE_STRIP_ADJACENCY\fR,
\fBGL_LINES_ADJACENCY\fR,
\fBGL_TRIANGLE_STRIP\fR,
\fBGL_TRIANGLE_FAN\fR,
\fBGL_TRIANGLES\fR,
\fBGL_TRIANGLE_STRIP_ADJACENCY\fR,
\fBGL_TRIANGLES_ADJACENCY\fR
and
\fBGL_PATCHES\fR
are accepted\&.
.RE
.PP
\fIstart\fR
.RS 4
Specifies tha minimum array index contained in
\fIindices\fR\&.
.RE
.PP
\fIend\fR
.RS 4
Specifies tha maximum array index contained in
\fIindices\fR\&.
.RE
.PP
\fIcount\fR
.RS 4
Specifies tha number of elements ta be rendered\&.
.RE
.PP
\fItype\fR
.RS 4
Specifies tha type of tha joints in
\fIindices\fR\&. Must be one of
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR, or
\fBGL_UNSIGNED_INT\fR\&.
.RE
.PP
\fIindices\fR
.RS 4
Specifies a pointa ta tha location where tha indices is stored\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglDrawRangeElements\fR
is a restricted form of
\fBglDrawElements\fR()\&.
\fImode\fR,
\fIstart\fR,
\fIend\fR, and
\fIcount\fR
match tha correspondin arguments to
\fBglDrawElements\fR(), wit tha additionizzle constraint dat all joints up in tha arrays
\fIcount\fR
must lie between
\fIstart\fR
and
\fIend\fR, inclusive\&.
.PP
Implementations denote recommended maximum amountz of vertex n' index data, which may be queried by calling
\fBglGet\fR()
with argument
\fBGL_MAX_ELEMENTS_VERTICES\fR
and
\fBGL_MAX_ELEMENTS_INDICES\fR\&. If
end \- start + 1
is pimped outa than tha value of
\fBGL_MAX_ELEMENTS_VERTICES\fR, or if
\fIcount\fR
is pimped outa than tha value of
\fBGL_MAX_ELEMENTS_INDICES\fR, then tha call may operate at reduced performance\&. There is no requirement dat all vertices up in tha range
start end
be referenced\&. But fuck dat shiznit yo, tha word on tha street is dat tha implementation may partially process unused vertices, reducin performizzle from what tha fuck could be  bigged up  wit a optimal index set\&.
.PP
When
\fBglDrawRangeElements\fR
is called, it uses
\fIcount\fR
sequential elements from a enabled array, startin at
\fIstart\fR
to construct a sequence of geometric primitives\&.
\fImode\fR
specifies what tha fuck kind of primitives is constructed, n' how tha fuck tha array elements construct these primitives\&. If mo' than one array is enabled, each is used\&.
.PP
Vertex attributes dat is modified by
\fBglDrawRangeElements\fR
have a unspecified value after
\fBglDrawRangeElements\fR
returns\& fo' realz. Attributes dat aren\*(Aqt modified maintain they previous joints\&.
.SH "NOTES"
.PP
\fBGL_LINE_STRIP_ADJACENCY\fR,
\fBGL_LINES_ADJACENCY\fR,
\fBGL_TRIANGLE_STRIP_ADJACENCY\fR
and
\fBGL_TRIANGLES_ADJACENCY\fR
are available only if tha GL version is 3\&.2 or pimped outer\&.
.SH "ERRORS"
.PP
It be a error fo' indices ta lie outside tha range
start end yo, but implementations may not check fo' dis thang\&. Right back up in yo muthafuckin ass. Such indices cause implementation\-dependent behavior\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIcount\fR
is negative\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
end < start\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a geometry shader be actizzle and
\fImode\fR
is incompatible wit tha input primitizzle type of tha geometry shader up in tha currently installed program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta a enabled array or tha element array n' tha buffer object\*(Aqs data store is currently mapped\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_ELEMENTS_VERTICES\fR
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_ELEMENTS_INDICES\fR
.SH "SEE ALSO"
.PP
\fBglDrawArrays\fR(),
\fBglDrawElements\fR(),
\fBglDrawElementsBaseVertex\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
