.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XGrabButton 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XGrabButton, XUngrabButton \- grab pointa buttons
.SH SYNTAX
.HP 
int XGrabButton\^(\^Display *\fIdisplay\fP\^, unsigned int \fIbutton\fP\^,
unsigned int \fImodifiers\fP\^, Window \fIgrab_window\fP\^, Bool
\fIballer_events\fP\^, unsigned int \fIevent_mask\fP\^, int
\fIpointer_mode\fP\^, \fIkeyboard_mode\fP\^, Window \fIconfine_to\fP\^, Cursor
\fIcursor\fP\^); 
.HP
int XUngrabButton\^(\^Display *\fIdisplay\fP\^, unsigned int \fIbutton\fP\^,
unsigned int \fImodifiers\fP\^, Window \fIgrab_window\fP\^); 
.SH ARGUMENTS
.ds Bu grabbed or busted out
.IP \fIbutton\fP 1i
Specifies tha pointa button dat is ta be \*(Bu or
.ZN AnyButton .
.IP \fIconfine_to\fP 1i
Specifies tha window ta confine tha pointa up in or
.ZN None .
.IP \fIcursor\fP 1i
Specifies tha cursor dat is ta be displayed or
.ZN None .
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIevent_mask\fP 1i
Specifies which pointa events is reported ta tha client.
Da mask is tha bitwise inclusive OR of tha valid pointa event mask bits.
.IP \fIgrab_window\fP 1i
Specifies tha grab window.
.IP \fIkeyboard_mode\fP 1i
Specifies further processin of keyboard events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fImodifiers\fP 1i
Specifies tha set of keymasks or
.ZN AnyModifier .
Da mask is tha bitwise inclusive OR of tha valid keymask bits.
.IP \fIballer_events\fP 1i
Specifies a Boolean value dat indicates whether tha pointa 
events is ta be reported as usual or reported wit respect ta tha grab window 
if selected by tha event mask.
.IP \fIpointer_mode\fP 1i
Specifies further processin of pointa events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.SH DESCRIPTION
The
.ZN XGrabButton
function establishes a passive grab.
In tha future,
the pointa be actively grabbed (as for
.ZN XGrabPointa ),
the last-pointer-grab time is set ta tha time at which tha button was pressed
(as transmitted up in the
.ZN ButtonPress
event), n' the
.ZN ButtonPress
event is reported if all of tha followin conditions is true:
.IP \(bu 5
Da pointa aint grabbed, n' tha specified button is logically pressed
when tha specified modifier keys is logically down,
and no other buttons or modifier keys is logically down.
.IP \(bu 5
Da grab_window gotz nuff tha pointer.
.IP \(bu 5
Da confine_to window (if any) is viewable.
.IP \(bu 5
A passive grab on tha same button/key combination do not exist
on any ancestor of grab_window.
.LP
Da interpretation of tha remainin arguments be as for
.ZN XGrabPointa .
Da actizzle grab is terminated automatically when tha logical state of the
pointa has all buttons busted out
(independent of tha state of tha logical modifier keys),
at which point a 
.ZN ButtonRelease
event is reported ta tha grabbin window.
.LP
Note dat tha logical state of a thang (as peeped by client applications)
may lag tha physical state if thang event processin is frozen.
.LP
This request overrides all previous grabs by tha same client on tha same
button/key combinations on tha same window.
A modifierz of 
.ZN AnyModifier 
is equivalent ta issuin tha grab request fo' all
possible modifier combinations (includin tha combination of no modifiers).  
It aint required dat all modifiers specified have currently assigned 
KeyCodes.
A button of 
.ZN AnyButton 
is equivalent to
issuin tha request fo' all possible buttons.
Otherwise, it aint required dat tha specified button currently be assigned
to a physical button.
.LP
If some other client has already issued a 
.ZN XGrabButton
with tha same button/key combination on tha same window, a
.ZN BadAccess 
error thangs up in dis biatch.
When rockin 
.ZN AnyModifier 
or 
.ZN AnyButton , 
the request fails straight-up,
and a
.ZN BadAccess
error thangs up in dis biatch (no grabs are
established) if there be a cold-ass lil conflictin grab fo' any combination.
.ZN XGrabButton
has no effect on a actizzle grab.
.LP
.ZN XGrabButton
can generate
.ZN BadCursor ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XUngrabButton
function releases tha passive button/key combination on tha specified window if
it was grabbed by dis client.
A modifierz of 
.ZN AnyModifier 
is
equivalent ta issuin 
the ungrab request fo' all possible modifier combinations, includin 
the combination of no modifiers.
A button of 
.ZN AnyButton 
is equivalent ta issuin the
request fo' all possible buttons.
.ZN XUngrabButton
has no effect on a actizzle grab.
.LP
.ZN XUngrabButton
can generate
.ZN BadValue
and
.ZN BadWindow 
errors.
.SH DIAGNOSTICS
.TP 1i
.ZN BadCursor
A value fo' a Cursor argument do not name a thugged-out defined Cursor.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllowEvents(3),
XGrabPointer(3),
XGrabKey(3),
XGrabKeyboard(3),
.br
\fI\*(xL\fP
