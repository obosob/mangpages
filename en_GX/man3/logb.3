.
.\" n' Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Inspired by a page by Walta Harms pimped 2002-08-10
.\"
.TH LOGB 3 2010-09-20 "" "Linux Programmerz Manual"
.SH NAME
logb, logbf, logbl \- git exponent of a gangbangin' floating-point value
.SH SYNOPSIS
.B #include <math.h>
.sp
.BI "double logb(double " x );
.br
.BI "float logbf(float " x );
.br
.BI "long double logbl(long double " x );
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR logb ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR logbf (),
.BR logbl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
These functions extract tha exponent from the
internal floating-point representation of
.I x
and return it as a gangbangin' floating-point value.
Da integer constant
.BR FLT_RADIX ,
defined in
.IR <float.h> ,
indicates tha radix used fo' tha systemz floating-point representation.
If
.B FLT_RADIX
is 2,
.BI logb( x )
is equal to
.BI floor(log2( x ))\fR,
except dat it is probably faster.
.LP
If
.I x
is subnormal,
.BR logb ()
returns tha exponent
.I x
would have if it was normalized.
.SH RETURN VALUE
On success, these functions return tha exponent of
.IR x .

If
.I x
is a NaN,
a NaN is returned.

If
.I x
is zero, then a pole error occurs, n' tha functions return
.RB - HUGE_VAL ,
.RB - HUGE_VALF ,
or
.RB - HUGE_VALL ,
respectively.

If
.I x
is wack infinitizzle or positizzle infinity, then
positizzle infinitizzle is returned.
.SH ERRORS
See
.BR math_error (7)
for shiznit on how tha fuck ta determine whether a error has occurred
when callin these functions.
.PP
Da followin errors can occur:
.TP
Pole error: \fIx\fP is 0
.\" .I errno
.\" is set to
.\" .BR ERANGE .
A divide-by-zero floating-point exception
.RB ( FE_DIVBYZERO )
is raised.
.PP
These functions do not set
.IR errno .
.\" FIXME . Is it intentionizzle dat these functions do not set errno?
.\" log(), log2(), log10() do set errno
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6793
.\"
.\" .SH HISTORY
.\" The
.\" .BR logb ()
.\" function occurs up in 4.3BSD.
.\" peep IEEE.3 up in tha 4.3BSD manual
.SH CONFORMING TO
C99, POSIX.1-2001.
.SH SEE ALSO
.BR ilogb (3),
.BR log (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
