
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH TCGETPGRP 3 2003-01-28 "GNU" "Linux Programmerz Manual"
.SH NAME
tcgetpgrp, tcsetpgrp \- git n' set terminal foreground process group
.SH SYNOPSIS
.B "#include <unistd.h>"
.sp
.BI "pid_t tcgetpgrp(int " fd );
.sp
.BI "int tcsetpgrp(int " fd ", pid_t " pgrp );
.SH DESCRIPTION
Da function
.BR tcgetpgrp ()
returns tha process crew ID of tha foreground process crew on the
terminal associated to
.IR fd ,
which must be tha controllin terminal of tha callin process.
.\" Da process itself may be a funky-ass background process.
.LP
Da function
.BR tcsetpgrp ()
makes tha process crew wit process crew ID
.I pgrp
the foreground process crew on tha terminal associated to
.IR fd ,
which must be tha controllin terminal of tha callin process,
and still be associated wit its session.
Mo'over,
.I pgrp
must be a (nonempty) process crew belongin to
the same session as tha callin process.
.LP
If
.BR tcsetpgrp ()
is called by a gangmember of a funky-ass background process crew up in its session,
and tha callin process aint blockin or ignoring
.BR SIGTTOU ,
a
.B SIGTTOU
signal is busted ta all thugz of dis background process group.
.SH RETURN VALUE
When
.I fd
refers ta tha controllin terminal of tha callin process,
the function
.BR tcgetpgrp ()
will return tha foreground process crew ID of dat terminal
if there is one, n' some value larger than 1 dat is not
presently a process crew ID otherwise.
When
.I fd
does not refer ta tha controllin terminal of tha callin process,
\-1 is returned, and
.I errno
is set appropriately.
.LP
When successful,
.BR tcsetpgrp ()
returns 0.
Otherwise, it returns \-1, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EBADF
.I fd
is not a valid file descriptor.
.TP
.B EINVAL
.I pgrp
has a unsupported value.
.TP
.B ENOTTY
Da callin process aint gots a cold-ass lil controllin terminal, or
it has one but it aint busted lyrics bout by
.IR fd ,
or, for
.BR tcsetpgrp (),
this controllin terminal is no longer associated wit tha session
of tha callin process.
.TP
.B EPERM
.I pgrp
has a supported value yo, but aint tha process crew ID of a
process up in tha same session as tha callin process.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
These functions is implemented via the
.B TIOCGPGRP
and
.B TIOCSPGRP
ioctls.
.SS History
Da ioctls rocked up in 4.2BSD.
Da functions is POSIX inventions.
.SH SEE ALSO
.BR setpgid (2),
.BR setsid (2),
.BR credentials (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
