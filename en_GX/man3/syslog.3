.\" Written  Feb 1994 by Steve Greenland (stevegr@neosoft.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Updated 1999.12.19 by Karl M yo. Hegbloom <karlheg@debian.org>
.\"
.\" Updated 13 Oct 2001, Mike Kerrisk <mtk.manpages@gmail.com>
.\"	Added description of vsyslog
.\"	Added descriptionz of LOG_ODELAY n' LOG_NOWAIT
.\"	Added brief description of facilitizzle n' option arguments
.\"	Added CONFORMING TO section
.\" 2001-10-13, aeb, minor chizzles
.\" Modified 13 Dec 2001, Martin Schulze <joey@infodrom.org>
.\" Modified 3 Jan 2002, Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.TH SYSLOG 3 2012-08-17 "Linux" "Linux Programmerz Manual"
.SH NAME
closelog, openlog, syslog, vsyslog \- bust lyrics ta tha system logger
.SH SYNOPSIS
.B #include <syslog.h>
.sp
.BI "void openlog(const char *" ident ", int " option ", int " facilitizzle );
.br
.BI "void syslog(int " prioritizzle ", const char *" format ", ...);"
.br
.B "void closelog(void);"
.sp
.B #include <stdarg.h>
.sp
.BI "void vsyslog(int " prioritizzle ", const char *" format ", va_list " ap );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR vsyslog ():
_BSD_SOURCE
.SH DESCRIPTION
.BR closelog ()
closes tha descriptor bein used ta write ta tha system logger.
Da use of
.BR closelog ()
is optional.
.sp
.BR openlog ()
opens a cold-ass lil connection ta tha system logger fo' a program.
Da strang pointed ta by
.I ident
is prepended ta every last muthafuckin message, n' is typically set ta tha program name.
If
.I ident
is NULL, tha program name is used.
(POSIX.1-2008 do not specify tha behavior when
.I ident
is NULL.)

The
.I option
argument specifies flags which control tha operation of
.BR openlog ()
and subsequent calls to
.BR syslog ().
The
.I facility
argument establishes a thugged-out default ta be used if
none is specified up in subsequent calls to
.BR syslog ().
Values for
.I option
and
.I facility
are given below.
Da use of
.BR openlog ()
is optional; it will automatically be called by
.BR syslog ()
if necessary, up in which case
.I ident
will default ta NULL.
.sp
.BR syslog ()
generates a log message, which is ghon be distributed by
.BR syslogd (8).
The
.I priority
argument is formed by ORin the
.I facility
and the
.I level
values (explained below).
Da remainin arguments
are a
.IR format ,
as in
.BR printf (3)
and any arguments required by the
.IR format ,
except dat tha two characta sequence
.B %m
will be replaced by
the error message string
.IR strerror ( errno ).
A trailin newline may be added if needed.

Da function
.BR vsyslog ()
performs tha same ol' dirty task as
.BR syslog ()
with tha difference dat it takes a set of arguments which have
been obtained rockin the
.BR stdarg (3)
variable argument list macros.

Da subsections below list tha parametas used ta set tha joints of
.IR option , " facility" ", n' " prioritizzle .
.SS option
The
.I option
argument to
.BR openlog ()
is a OR of any of these:
.TP 15
.B LOG_CONS
Write directly ta system console if there be a error while bustin  to
system logger.
.TP
.B LOG_NDELAY
Open tha connection immediately (normally, tha connection is opened when
the first message is logged).
.TP
.B LOG_NOWAIT
Don't wait fo' lil pimp processes dat may done been pimped while logging
the message.
(Da GNU C library do not create a cold-ass lil lil pimp process, so this
option has no effect on Linux.)
.TP
.B LOG_ODELAY
Da converse of
.BR LOG_NDELAY ;
openin of tha connection is delayed until
.BR syslog ()
is called.
(This is tha default, n' need not be specified.)
.TP
.B LOG_PERROR
(Not up in POSIX.1-2001 or POSIX.1-2008.)
Print ta \fIstderr\fP as well.
.TP
.B LOG_PID
Include PID wit each message.
.SS facility
The
.I facility
argument is used ta specify what tha fuck type of program is loggin tha message.
This lets tha configuration file specify dat lyrics from different
facilitizzles is ghon be handled differently.
.TP 15
.B LOG_AUTH
security/authorization lyrics
.TP
.B LOG_AUTHPRIV
security/authorization lyrics (private)
.TP
.B LOG_CRON
clock daemon
.RB ( cron " n' " at )
.TP
.B LOG_DAEMON
system daemons without separate facilitizzle value
.TP
.B LOG_FTP
ftp daemon
.TP
.B LOG_KERN
kernel lyrics (these can't be generated from user processes)
.\" LOG_KERN has tha value 0; if used as a gangbangin' facility, zero translates to:
.\" "use tha default facility".
.TP
.BR LOG_LOCAL0 " all up in " LOG_LOCAL7
reserved fo' local use
.TP
.B LOG_LPR
line printa subsystem
.TP
.B LOG_MAIL
mail subsystem
.TP
.B LOG_NEWS
USENET shizzle subsystem
.TP
.B LOG_SYSLOG
lyrics generated internally by
.BR syslogd (8)
.TP
.BR LOG_USER " (default)"
generic user-level lyrics
.TP
.B LOG_UUCP
UUCP subsystem
.SS level
This determines tha importizzle of tha message.
Da levels are, up in order of decreasin importance:
.TP 15
.B LOG_EMERG
system is unusable
.TP
.B LOG_ALERT
action must be taken immediately
.TP
.B LOG_CRIT
critical conditions
.TP
.B LOG_ERR
error conditions
.TP
.B LOG_WARNING
warnin conditions
.TP
.B LOG_NOTICE
normal yo, but significant, condition
.TP
.B LOG_INFO
informationizzle message
.TP
.B LOG_DEBUG
debug-level message
.LP
Da function
.BR setlogmask (3)
can be used ta restrict loggin ta specified levels only.
.SH CONFORMING TO
Da functions
.BR openlog (),
.BR closelog (),
and
.BR syslog ()
(but not
.BR vsyslog ())
are specified up in SUSv2, POSIX.1-2001, n' POSIX.1-2008.
POSIX.1-2001 specifies only the
.B LOG_USER
and
.B LOG_LOCAL*
values for
.IR facilitizzle .
But fuck dat shiznit yo, tha word on tha street is dat wit tha exception of
.B LOG_AUTHPRIV
and
.BR LOG_FTP ,
the other
.I facility
values step tha fuck up on most UNIX systems.
The
.B LOG_PERROR
value for
.I option
is not specified by POSIX.1-2001 or POSIX.1-2008 yo, but be available
in most versionz of UNIX.
.\" .SH HISTORY
.\" A
.\" .BR syslog ()
.\" function call rocked up in 4.2BSD.
.\" 4.3BSD documents
.\" .BR openlog (),
.\" .BR syslog (),
.\" .BR closelog (),
.\" and
.\" .BR setlogmask ().
.\" 4.3BSD-Reno also documents
.\" .BR vsyslog ().
.\" Of course early v* functions used the
.\" .I <varargs.h>
.\" mechanism, which aint compatible with
.\" .IR <stdarg.h> .
.SH NOTES
Da argument
.I ident
in tha call of
.BR openlog ()
is probably stored as-is.
Thus, if tha strang it points to
is chizzled,
.BR syslog ()
may start prependin tha chizzled string, n' if tha string
it points ta ceases ta exist, tha thangs up in dis biatch is undefined.
Most portable is ta bust a strang constant.
.LP
Never pass a strang wit user-supplied data as a gangbangin' format,
use tha followin instead:
.nf

    syslog(priority, "%s", string);
.fi
.SH SEE ALSO
.BR logger (1),
.BR setlogmask (3),
.BR syslog.conf (5),
.BR syslogd (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
