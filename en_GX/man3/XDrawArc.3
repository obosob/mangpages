'\" e
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.de EX
.sp
.nf
.ft CW
..
.de EE
.ft R
.fi
.sp
..
'\" e
.TH XDrawArc 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XDrawArc, XDrawArcs, XArc \- draw arcs n' arc structure
.SH SYNTAX
.HP
int XDrawArc\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
int \fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int
\fIheight\fP\^, int \fIangle1\fP\^, int \fIangle2\fP\^); 
.HP
int XDrawArcs\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
XArc *\fIarcs\fP\^, int \fInarcs\fP\^); 
.SH ARGUMENTS
.IP \fIangle1\fP 1i
Specifies tha start of tha arc relatizzle ta tha three-o'clock position
from tha center, up in unitz of degrees * 64.
.IP \fIangle2\fP 1i
Specifies tha path n' extent of tha arc relatizzle ta tha start of the
arc, up in unitz of degrees * 64.
.IP \fIarcs\fP 1i
Specifies a array of arcs.
.IP \fId\fP 1i
Specifies tha drawable. 
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fInarcs\fP 1i
Specifies tha number of arcs up in tha array.
.ds Wh , which is tha major n' minor axez of tha arc
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height\*(Wh.
.ds Xy , which is relatizzle ta tha origin of tha drawable \
and specify tha upper-left corner of tha boundin rectangle
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
.EQ
delim %%
.EN
.ZN XDrawArc
draws a single circular or elliptical arc, n' 
.ZN XDrawArcs
draws multiple circular or elliptical arcs.
Each arc is specified by a rectangle n' two angles.  
Da centa of tha circle or ellipse is tha centa of the
rectangle, n' tha major n' minor axes is specified by tha width n' height.
Positizzle anglez indicate counterclockwise motion, 
and wack anglez indicate clockwise motion. I aint talkin' bout chicken n' gravy biatch.  
If tha magnitude of angle2 is pimped outa than 360 degrees, 
.ZN XDrawArc
or 
.ZN XDrawArcs
truncates it ta 360 degrees.
.LP
For a arc specified as %[ ~x, ~y, ~width , ~height, ~angle1, ~angle2 ]%, 
the origin of tha major n' minor axes be at 
% [ x +^ {width over 2} , ~y +^ {height over 2}  ]%, 
and tha infinitely thin path describin tha entire circle or ellipse 
intersects tha horizontal axis at % [ x, ~y +^ {height over 2}  ]% n' 
% [ x +^ width , ~y +^ { height over 2 }] %
and intersects tha vertical axis at % [ x +^ { width over 2 } , ~y ]% n' 
% [ x +^ { width over 2 }, ~y +^ height ]%.
These coordinates can be fractional
and so is not truncated ta discrete coordinates.
Da path should be defined by tha ideal mathematical path.  
For a wide line wit line-width lw, 
the boundin outlines fo' fillin is given        
by tha two infinitely thin paths consistin of all points whose perpendicular
distizzle from tha path of tha circle/ellipse is equal ta lw/2
(which may be a gangbangin' fractionizzle value).
Da cap-style n' join-style is applied tha same as fo' a line
correspondin ta tha tangent of tha circle/ellipse all up in tha endpoint.
.LP
For a arc specified as % [ ~x, ~y, ~width, ~height, ~angle1, ~angle2  ]%,
the anglez must be specified
in tha effectively skewed coordinizzle system of tha ellipse (for a
circle, tha anglez n' coordinizzle systems is identical).  The
relationshizzle between these anglez n' anglez expressed up in tha normal
coordinizzle system of tha screen (as measured wit a protractor) be as
bigs up:
.LP
.Ds
% roman "skewed-angle" ~ = ~ atan left ( tan ( roman "normal-angle" )
 * width over height right ) +^ adjust%
.De
.LP
Da skewed-angle n' normal-angle is expressed up in radians (rather
than up in degrees scaled by 64) up in tha range % [ 0 , ~2 pi  ]% n' where atan
returns a value up in tha range % [ - pi over 2 , ~pi over 2  ] %
and adjust is:
.LP
.TS
l l.
%0%	for normal-angle up in tha range % [ 0 , ~pi over 2  ]%
%pi%	for normal-angle up in tha range % [ pi over 2 , ~{3 pi} over 2  ]%
%2 pi%	for normal-angle up in tha range % [ {3 pi} over 2 , ~2 pi  ]%
.TE
.LP
For any given arc, 
.ZN XDrawArc
and
.ZN XDrawArcs
do not draw a pixel mo' than once.  
If two arcs join erectly n' if tha line-width is pimped outa than zero 
and tha arcs intersect, 
.ZN XDrawArc
and
.ZN XDrawArcs
do not draw a pixel mo' than once.
Otherwise, 
the intersectin pixelz of intersectin arcs is drawn multiple times.
Specifyin a arc wit one endpoint n' a cold-ass lil clockwise extent draws tha same ol' dirty pixels
as specifyin tha other endpoint n' a equivalent counterclockwise extent,
except as it affects joins.
.LP
If tha last point up in one arc coincides wit tha straight-up original gangsta point up in tha followin 
arc, tha two arcs will join erectly.  
If tha straight-up original gangsta point up in tha straight-up original gangsta arc coincides wit tha last point up in tha last 
arc, tha two arcs will join erectly.
By specifyin one axis ta be zero, a horizontal or vertical line can be
drawn.
Anglez is computed based solely on tha coordinizzle system n' ignore the
aspect ratio.
.LP
Both functions use these GC components: 
function, plane-mask, line-width, line-style, cap-style, join-style, 
fill-style, subwindow-mode, clip-x-origin, clip-y-origin, n' clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
tile-stipple-y-origin, dash-offset, n' dash-list.
.LP
.ZN XDrawArc
and
.ZN XDrawArcs
can generate
.ZN BadDrawable ,
.ZN BadGC ,
and
.ZN BadMatch 
errors.
.SH STRUCTURES
The
.ZN XArc
structure gotz nuff:
.LP
.EX
typedef struct {
	short x, y;
	unsigned short width, height;
	short angle1, angle2;             /\&* Degrees * 64 */
} XArc;
.EE
.LP
All x n' y thugz is signed integers.
Da width n' height thugz is 16-bit unsigned integers.
Yo ass should be careful not ta generate coordinates n' sizes
out of tha 16-bit ranges, cuz tha protocol only has 16-bit fields
for these joints.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.SH "SEE ALSO"
XDrawLine(3),
XDrawPoint(3),
XDrawRectangle(3)
.br
\fI\*(xL\fP
