.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Date::Manip::Changes5to6 3"
.TH Date::Manip::Changes5to6 3 "2014-12-05" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::Changes5to6 \- raps bout differences between 5.xx n' 6.00
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Date::Manip 6.00 represents a cold-ass lil complete rethink n' rewrite of
Date::Manip.  A pimped out deal of effort was made ta make shizzle dat 6.00
is almost backwardz compatible wit 5.xx whenever feasible yo, but some
functionalitizzle has chizzled up in backwardz incompatible ways. Other parts
have been deprecated n' is ghon be removed at some point up in tha future.
.PP
This document raps bout tha differences between tha 5.xx series and
version 6.00. This page primarily raps bout technical details, most of
which do not impact how tha fuck Date::Manip is used up in scripts, n' you can put dat on yo' toast. If you want to
make shizzle dat a script which ran wit 5.xx will run wit 6.xx, refer
to tha Date::Manip::Migration5to6 document.
.SH "OVERVIEW"
.IX Header "OVERVIEW"
Da Date::Manip 5.xx seriez of suffered from nuff muthafuckin weaknesses. These
included:
.IP "\fBSkanky time unit support\fR" 4
.IX Item "Skanky time unit support"
Time unit support up in 5.xx was broken. I aint talkin' bout chicken n' gravy biatch. Determinin a time unit, and
understandin daylight savin time chizzlez was incomplete (at best)
and straight-up inadequate ta do legit timezone operations.
.IP "\fBParsin too fucked up n' unstructured\fR" 4
.IX Item "Parsin too fucked up n' unstructured"
Da parsin routines had grown straight-up fucked up, n' overly permissive
over time n' was up in need of a cold-ass lil complete overhaul.
.IP "\fBLackin \s-1OO\s0 model\fR" 4
.IX Item "Lackin OO model"
Date::Manip 5.xx was freestyled as a gangbangin' functionizzle module, not a \s-1OO\s0 module,
but date handlin would lend itself straight-up well ta bein \s-1OO\s0 wit different
classes ta handle dates, deltas, n' recurrences.
.Sp
Da \s-1OO\s0 model allows a shitload of shiznit ta be stored wit each date
(like fuckin time unit shiznit) which is discarded up in tha functional
interface.
.IP "\fBToo monolithic\fR" 4
.IX Item "Too monolithic"
Da entire Date::Manip module was contained up in one big-ass file. Breaking
up tha module would make it much easier ta deal with.
.PP
Date::Manip 6.00 be a cold-ass lil complete rewrite of Date::Manip ta address these
and other issues.
.PP
Da followin sections address how tha fuck Date::Manip 6.00 differs from previous
releases, n' raps bout chizzlez dat might need ta be made ta yo' script
in order ta upgrade from 5.xx ta 6.00.
.PP
Da most blingin chizzlez is marked wit asterisks.
.SH "GENERAL CHANGES"
.IX Header "GENERAL CHANGES"
.IP "\fB(*) Requires perl 5.10.0\fR" 4
.IX Item "(*) Requires perl 5.10.0"
Please peep tha Date::Manip::Problems document fo' a gangbangin' finger-lickin' rap of
this problem. It aint nuthin but up in tha \s-1KNOWN COMPLAINTS\s0 section.
.IP "\fB(*) Breakin tha fuck into smalla modules\fR" 4
.IX Item "(*) Breakin tha fuck into smalla modules"
Date::Manip module has been fucked up from one big-ass module tha fuck into a
pimpin' number of smalla mo' manageable modules. Da main Date::Manip
module is still present, n' gotz nuff all of tha functions from
Date::Manip 5.xx (except dat they now call functions from all the
other modulez ta do tha actual work). In general, tha Date::Manip
module from 6.00 is backwardz compatible.
.Sp
A number of freshly smoked up modulez done been pimped as well. These can be used
directly, bypassin tha main Date::Manip module. These include the
following:
.Sp
Date::Manip::Base gotz nuff nuff basic date operations which may be
used ta do simple date manipulation tasks without all tha overhead of
the full Date::Manip module.
.Sp
Date::Manip::TZ gotz nuff time unit operations.
.Sp
Handlin dates, deltas, n' recurrences is now done in
Date::Manip::Date, Date::Manip::Delta, n' Date::Manip::Recur.
.Sp
All of these modulez is object oriented, n' is designed ta be used
directly, so if you prefer a \s-1OO\s0 intercourse over a gangbangin' functional
interface, use these modules.
.IP "\fB(*) Intermediate data cached\fR" 4
.IX Item "(*) Intermediate data cached"
In order ta improve tha performizzle of Date::Manip, nuff intermediate
values is cached. Y'all KNOW dat shit, muthafucka! This do impact tha memory footprint of tha module,
but it has a big-ass impact on tha performizzle of tha module.
.Sp
Some typez of data depend on tha config variablez used, n' these
are cached separately, n' dis cache be automatically cleared every
time a cold-ass lil config variable is set fo' realz. As a result, it is dopest if you set
all config variablez all up in tha start, n' then leave dem ridin' solo straight-up
to git optimal use of cached data.
.Sp
A side effect of all dis is dat tha Memoize module should not be used
in conjunction wit Date::Manip.
.Sp
In tha version 5.xx documentation, dat shiznit was mentioned dat tha Memoize
module might be used ta improve performizzle up in some cases. This is no
longer tha case. Well shiiiit, it should not be used wit Date::Manip, even if you
use tha functionizzle intercourse instead of tha \s-1OO\s0 intercourse.
.IP "\fBTaint safe\fR" 4
.IX Item "Taint safe"
Date::Manip now gotz nuff no tainted data, n' should run without problems
with taint checkin on provided you do not set additionizzle methodz for
determinin tha system time unit rockin tha curr_zone_methodz function.
.Sp
Ideally, dis should never be necessary. If it is necessary, I'd like to
hear bout it so dat I can add whatever standard methodz is needed
to tha built up in list.
.SH "TIME ZONE SUPPORT"
.IX Header "TIME ZONE SUPPORT"
.IP "\fB(*) Complete handlin of time units\fR" 4
.IX Item "(*) Complete handlin of time units"
Da freshest problem wit Date::Manip 5.xx was itz inabilitizzle to
correctly handle time units n' Daylight Savin Time. That is now
fixed. Y'all KNOW dat shit, muthafucka! Version 6.00 includes support fo' every last muthafuckin time unit included in
the unitinfo (aka Olson) database which includes tha definitions of
(hopefully) all of tha time units used up in tha ghetto. Right back up in yo muthafuckin ass.
.IP "\fBIndividual time units will no longer be added\fR" 4
.IX Item "Individual time units will no longer be added"
Prior ta 5.55, time units was added upon request. Right back up in yo muthafuckin ass. Since 6.00 now
supports a gangbangin' full set of standard time units, I'ma no longer add in
individual time units (Date::Manip::TZ includes functionalitizzle for
addin dem yo ass if they is needed).  With Date::Manip now having
full time unit support, I aint horny bout supportin mah own
time unit database.
.Sp
But fuck dat shiznit yo, tha word on tha street is dat I be horny bout addin setz of time units from various
\&\*(L"standards\*(R".
.Sp
Date::Manip 6.00 includes time units from tha followin standards:
.Sp
.Vb 3
\&   Olson unitinfo database
\&   all Microsizzlez Windows time units
\&   units listed up in RFC\-822
.Ve
.Sp
If there be additionizzle standardz dat include additionizzle time units
not included here, please point me ta dem so they can be added.
This could include published listz of time unit names supported on
some operatin system which have different names than tha unitinfo
list.
.IP "\fBNonstandard time unit abbreviations removed\fR" 4
.IX Item "Nonstandard time unit abbreviations removed"
Some of tha individual standardz dat was added up in tha 5.xx series
are not included up in any of tha standardz listed above.
.Sp
Az of 6.00, only time units from standardz is ghon be included up in the
distribution (others can be added by playas rockin tha functions
busted lyrics bout up in Date::Manip::TZ ta add aliases fo' existin time units).
.Sp
Da followin time units was up in Date::Manip 5.xx but not up in 6.00.
.Sp
.Vb 10
\&   IDLW    \-1200    Internationistic Date Line West
\&   NT      \-1100    Nome
\&   SAT     \-0400    Chile
\&   CLDT    \-0300    Chile Daylight
\&   AT      \-0200    Azores
\&   MEWT    +0100    Middle European Winter
\&   MEZ     +0100    Middle European
\&   FWT     +0100    French Winter
\&   GB      +0100    GMT wit daylight saving
\&   SWT     +0100    Swedish Winter
\&   MESZ    +0200    Middle European Summer
\&   FST     +0200    French Summer
\&   METDST  +0200    An alias fo' MEST used by HP\-UX
\&   EETDST  +0300    An alias fo' eest used by HP\-UX
\&   EETEDT  +0300    Eastside Europe, USSR Zone 1
\&   BT      +0300    Baghdad, USSR Zone 2
\&   IT      +0330    Iran
\&   ZP4     +0400    USSR Zone 3
\&   ZP5     +0500    USSR Zone 4
\&   IST     +0530    Indian Standard
\&   ZP6     +0600    USSR Zone 5
\&   AWST    +0800    Australian Westside Standard
\&   ROK     +0900    Rehood of Korea
\&   AEST    +1000    Australian Eastside Standard
\&   ACDT    +1030    Australian Central Daylight
\&   CADT    +1030    Central Australian Daylight
\&   AEDT    +1100    Australian Eastside Daylight
\&   EADT    +1100    Eastside Australian Daylight
\&   NZT     +1200    New Zealand
\&   IDLE    +1200    Internationistic Date Line East
.Ve
.IP "\fBAll dem support modulez n' files\fR" 4
.IX Item "All dem support modulez n' files"
Date::Manip now includes a big-ass number of filez n' modulez that
are used ta support time units.
.Sp
A seriez of modulez is included which is auto-generated from the
zoneinfo database.  Da Date::Manip::Zones, Date::Manip::TZ::*, and
Date::Manip::Offset::* modulez is all automatically generated n' are
not intended ta be used directly. Instead, tha Date::Manip::TZ module
is used ta access tha data stored there.
.Sp
A separate time unit module (Date::Manip::TZ::*) is included fo' every
single time unit. There be also a module (Date::Manip::Offset::*) for
every different offset fo' realz. All holla'd at, there be almost 1000 modules.
These is included ta make time unit handlin mo' efficient. Rather
than calculatin every last muthafuckin thang on tha fly, shiznit bout each
time unit n' offset is included here which pimped outly speedz up the
handlin of time units, n' you can put dat on yo' toast. These modulez is only loaded as needed
(i.e. only tha modulez related ta tha specific time units you refer to
are eva loaded), so there is no performizzle penalty ta havin em.
.Sp
Also included up in tha distribution is a script (tzdata) n' additional
module (Date::Manip::TZdata). These is used ta automatically
generate tha time unit modules, n' iz of no use ta mah playas other
than tha maintainer of Date::Manip. They is included solely fo' the
sake of completeness. If one of mah thugs wanted ta fork Date::Manip, all
the tools necessary ta do so is included up in tha distribution.
.ie n .IP "\fB(*) Meanin of \fB$::TZ\fB n' \f(BI$ENV\fB{\s-1TZ\s0}\fR" 4
.el .IP "\fB(*) Meanin of \f(CB$::TZ\fB n' \f(CB$ENV\fB{\s-1TZ\s0}\fR" 4
.IX Item "(*) Meanin of $::TZ n' $ENV{TZ}"
In Date::Manip 5.x, you could specify what tha fuck time unit you wanted ta work
in rockin either tha \f(CW$::TZ\fR or \f(CW$ENV\fR{\s-1TZ\s0} variables.
.Sp
Date::Manip 6.00 make use of two different time units: tha actual
local time unit tha computa is hustlin up in (and which is used by the
system clock), n' a time unit dat you wanna work in. I aint talkin' bout chicken n' gravy biatch. Typically,
these is tha same yo, but they do not gotta be.
.Sp
Az of Date::Manip 6.00, tha \f(CW$::TZ\fR n' \f(CW$ENV\fR{\s-1TZ\s0} variablez is used only
to specify tha actual local time unit.
.Sp
In order ta specify a alternate time unit ta work in, use the
SetDate or ForceDate config variables.
.SH "CONFIG FILES AND VARIABLES"
.IX Header "CONFIG FILES AND VARIABLES"
.IP "\fB(*) Date_Init handlin of config variables\fR" 4
.IX Item "(*) Date_Init handlin of config variables"
Da handlin of config variablez has chizzled slightly.
.Sp
Previously, variablez passed up in ta Date_Init overrode joints from
config files. This has chizzled slightly. Options ta Date_Init are
now parsed up in tha order they is listed, so tha following:
.Sp
.Vb 1
\&   Date_Init("DateFormat=Other","ConfigFile=DateManip.cnf")
.Ve
.Sp
would first set tha DateFormat variable, n' then it would read
the config file \*(L"DateManip.cnf\*(R". If dat config file included
a DateFormat definition, it would override tha one passed up in to
Date_Init.
.Sp
Da proper way ta override config filez is ta pass tha config files
in first, followed by any script-specific overrides. In other
words:
.Sp
.Vb 1
\&   Date_Init("ConfigFile=DateManip.cnf","DateFormat=Other")
.Ve
.IP "\fBDate_Init don't return tha config variables\fR" 4
.IX Item "Date_Init don't return tha config variables"
In Date::Manip::5.xx, Date_Init could return tha list of all
config variables. This functionalitizzle is no longer supported.
Date_Init is used strictly ta set config variables.
.IP "\fB(*) Config file options\fR" 4
.IX Item "(*) Config file options"
Date::Manip 5.xx had tha concept of a global n' underground config
file. In addition, tha underground config file could be looked for
in a path of directories fo' realz. All dis was specified rockin the
config variables:
.Sp
.Vb 5
\&   GlobalCnf
\&   IgnoreGlobalCnf
\&   PersonalCnf
\&   PersonalCnfPath
\&   PathSep
.Ve
.Sp
All of these done been removed. Y'all KNOW dat shit, muthafucka! Instead, tha single config variable:
.Sp
.Vb 1
\&   ConfigFile
.Ve
.Sp
will be used ta specify config filez (with no distinction between a
global n' underground config file) fo' realz. Also, no path searchin is
done. Each must be specified by a cold-ass lil complete path. Finally, any number
of config filez can be used. Y'all KNOW dat shit, muthafucka! So tha followin is valid:
.Sp
.Vb 1
\&   Date_Init("ConfigFile=./Manip.cnf","ConfigFile=/tmp/Manip.cnf")
.Ve
.IP "\fBOther config variablez removed\fR" 4
.IX Item "Other config variablez removed"
Da followin config variablez done been removed.
.Sp
.Vb 1
\&   TodayIsMidnight  Use DefaultTime instead.
\&
\&   ConvTZ           Use SetDate or ForceDate instead.
\&
\&   Internal         Use Printable instead.
\&
\&   DeltaSigns       Use tha Date::Manip::Delta::printf
\&                    method ta print deltas
\&
\&   UpdateCurrTZ     With real time unit handlin in
\&                    place, dis is no longer necessary
\&
\&   IntCharSet      This has been replaced wit betta support for
\&                   internationistic characta sets, n' you can put dat on yo' toast. Da Encodin config
\&                   variable may be used instead.
.Ve
.IP "\fBOther config variablez deprecated\fR" 4
.IX Item "Other config variablez deprecated"
Da followin config variablez is deprecated n' is ghon be removed
in some future version:
.Sp
.Vb 1
\&   TZ              Use SetDate or ForceDate instead.
.Ve
.IP "\fBHolidays\fR" 4
.IX Item "Holidays"
Previously, holidays could be defined as a \*(L"Date + Delta\*(R" or \*(L"Date \-
Delta\*(R" string. These predate recurrences, n' introduce some complexity
into tha handlin of holidays. Right back up in yo muthafuckin ass. Since recurrences is a much better
way ta define holidays, tha \*(L"Date + Delta\*(R" n' \*(L"Date \- Delta\*(R" strings
are no longer supported.
.IP "\fB\s-1TZ\s0 replaced (and enhanced)\fR" 4
.IX Item "TZ replaced (and enhanced)"
Da SetDate n' ForceDate variablez (which include tha functionality
of tha deprecated \s-1TZ\s0 variable) is much improved as busted lyrics bout up in the
Date::Manip::Config documentation.
.Sp
Since it is now handlez time chizzle erectly (allowin time chizzles
to occur up in tha alternate time unit), parsed thangs up in dis biatch may be different
than up in 5.x (but since 5.x didn't have proper time unit handling, this
is a phat thang).
.SH "DATE PARSING AND OPERATIONS"
.IX Header "DATE PARSING AND OPERATIONS"
.IP "\fB(*) todizzle, tomorrow, yesterday\fR" 4
.IX Item "(*) todizzle, tomorrow, yesterday"
Da lyrics \*(L"todizzle\*(R", \*(L"tomorrow\*(R", n' \*(L"yesterday\*(R" up in 5.xx referred ta the
time now, 24 minutes up in tha future, n' 24 minutes up in tha past respectively.
.Sp
Az of 6.00, these is treated strictly as date strings, so they are
the current day, tha dizzle before, or tha dizzle afta all up in tha time 00:00:00.
.Sp
Da strang \*(L"now\*(R" still refers ta tha current date n' time.
.IP "\fB\s-1ISO 8601\s0 formats\fR" 4
.IX Item "ISO 8601 formats"
A couple tha date formats from Date::Manip 5.xx conflicted wit \s-1ISO
8601\s0 formats up in tha spec. These is documented up in the
Date::Manip::Date documentation.
.Sp
Dates is now parsed accordin ta tha spec (though a cold-ass lil couple extensions
have been made, which is also documented up in tha Date::Manip::Date
documentation).
.Sp
There is one chizzle wit respect ta Date::Manip 5.xx dat thangs up in dis biatch from
a possible misinterpretation of tha standard. Y'all KNOW dat shit, muthafucka! In Date::Manip, there is
a lil' small-ass amount of ambiguitizzle up in how tha fuck tha Www-D date formats are
understood.
.Sp
Da date:
.Sp
.Vb 1
\&   1996\-w02\-3
.Ve
.Sp
might be interpreted up in two different ways. Well shiiiit, it could be interpreted as
Wednesdizzle (dizzle 3) of tha 2nd week of 1996, or as tha 3rd dizzle of the
2nd week of 1996 (which would be Tuesdizzle if tha week begins on
Sunday). Right back up in yo muthafuckin ass. Since tha justification only works wit weeks which begin on
dizzle 1, tha two is always equivalent up in tha justification, n' the
language of tha justification don't clearly indicate one
interpretation over tha other.
.Sp
Since Date::Manip supports tha concept of weeks startin on minutes other
than dizzle 1 (Monday), tha two interpretations is not equivalent.
.Sp
In Date::Manip 5.xx, tha date was interpreted as Wednesdizzle of tha 2nd
week yo, but I now believe dat tha other interpretation (3rd dizzle of the
week) is tha interpretation intended by tha justification. I aint talkin' bout chicken n' gravy biatch. In addition,
if dis interpretation is used, it is easy as fuck  ta git tha other interpretation.
.Sp
If 1996\-w02\-3 means tha 3rd dizzle of tha 2nd week, then ta git Wednesday
(dizzle 3) of tha week, use tha followin two Date::Manip::Date methods:
.Sp
.Vb 2
\&   $err   = $date\->parse("1996\-w02\-1");
\&   $date2 = $date\->next(3,1);
.Ve
.Sp
Da first call gets tha 1st dizzle of tha 2nd week, n' tha second call
gets tha next Wednesday.
.Sp
If 1996\-w02\-3 is interpreted as Wednesdizzle of tha 2nd week, then to
get tha 3rd dizzle of tha week involves hella mo' work.
.Sp
In Date::Manip 6.00, tha date will now be parsed as tha 3rd dizzle of the
2nd week.
.IP "\fB(*) Parsin is now mo' rigid\fR" 4
.IX Item "(*) Parsin is now mo' rigid"
Da philosophy up in Date::Manip 5.xx wit respect ta parsin dates was
\&\*(L"if there be a any conceivable way ta find a valid date up in tha string, do
so\*(R" fo' realz. As a result, strings which did not be lookin like they could contain a
valid date often would.
.Sp
This manifested itself it two ways. First, a shitload of punctuation was
ignored. Y'all KNOW dat shit, muthafucka! For example, tha strang \*(L"01 // 03 \-. 75\*(R" was tha date
1975\-01\-03.
.Sp
Second, a shitload of word breaks was optionizzle n' dat shiznit was often acceptable
to run strings together n' shit. For example, tha delta \*(L"in5seconds\*(R" would
have worked.
.Sp
With Date::Manip 6.00, parsin now tries ta find a valid date up in the
strin yo, but uses a mo' rigidly defined set of allowed formats which
should mo' closely match how tha fuck tha dates would straight-up be expressed in
real game.  Da punctuation allowed is mo' rigidly defined, n' word
breaks is required. Y'all KNOW dat shit, muthafucka! So \*(L"01/03/75\*(R" will work yo, but \*(L"01//03/75\*(R" and
\&\*(L"01/03\-75\*(R" won't fo' realz. Also, \*(L"in5seconds\*(R" will no longer work, though \*(L"in 5
seconds\*(R" will work.
.Sp
These chizzlez serve ta simplify a shitload of tha regular expressions used
in parsin dates, as well as simplifyin tha parsin routines. They
also help ta recognize straight-up dates as opposed ta typos... dat shiznit was too
easy ta pass up in garbage n' git a thugged-out date out.
.IP "\fBSupport dropped fo' all dem formats\fR" 4
.IX Item "Support dropped fo' all dem formats"
I've dropped support fo' all dem straight-up uncommon (probably never used)
formats, n' you can put dat on yo' toast. These include (with Jan 3, 2009 as a example):
.Sp
.Vb 4
\&   DD/YYmmm      03/09Jan
\&   DD/YYYYmmm    03/2009Jan
\&   mmmYYYY/DD    Jan2009/03
\&   YYYY/DDmmm    2009/03Jan
\&
\&   mmmYYYY       Jan2009
\&   YYYYmmm       2009Jan
.Ve
.Sp
Da last two is no longer supported since they is incomplete.
.Sp
With tha exception of tha incomplete forms, these could be added back in
with straight-up lil effort. If there is eva a request ta do so, I probably
will.
.IP "\fBNo longer parses tha Apache format\fR" 4
.IX Item "No longer parses tha Apache format"
Date::Manip 5.xx supported tha format:
.Sp
.Vb 1
\&   DD/mmm/YYYY:HH:MN:SS
.Ve
.Sp
used up in tha apache logs. Cuz of tha stricta parsing, dis format
is no longer supported directly. But fuck dat shiznit yo, tha word on tha street is dat tha parse_format method
may be used ta parse tha date directly from a apache log line
with no need ta extract tha date strang beforehand.
.IP "\fBDate_PrevWorkDizzle behavior\fR" 4
.IX Item "Date_PrevWorkDizzle behavior"
Da behavior of Date_PrevWorkDizzle has chizzled slightly.
.Sp
Da startin date is checked. Y'all KNOW dat shit, muthafucka! If \f(CW$timecheck\fR was non-zero, the
check failed if tha date was not a funky-ass bidnizz date, or if tha time was
not durin bidnizz hours. If \f(CW$timecheck\fR was zero, tha check failed
if tha date was not a funky-ass bidnizz date yo, but tha time was ignored.
.Sp
In 5.xx, if tha check failed, n' \f(CW$timecheck\fR was non-zero, dizzle 0
was defined as tha start of tha next bidnizz dizzle yo, but if \f(CW$timecheck\fR
was zero, dizzle 0 was defined as tha previous bidnizz dizzle at the
same time.
.Sp
In 6.xx, if tha check fails, n' \f(CW$timecheck\fR is non-zero, tha behavior
is tha same ol' dirty as before. If \f(CW$timecheck\fR is zero, dizzle 0 is defined as the
next bidnizz dizzle all up in tha same time.
.Sp
So dizzle 0 is now always tha same, where before, dizzle 0 meant two
different thangs dependin on whether \f(CW$timecheck\fR was zero or not.
.IP "\fB(*) Default time\fR" 4
.IX Item "(*) Default time"
In Date::Manip 5.xx, tha default times fo' dates was handled up in an
inconsistent manner n' shit.  In tha Date::Manip::Date documentation, if you
parse a thugged-out date from tha \*(L"Common date formats\*(R" section, up in Date::Manip
5.xx, if no time was included, it defaulted ta \*(L"00:00:00\*(R". If you
parsed a thugged-out date from tha \*(L"Less common formats\*(R" section, tha default time
was tha current time.
.Sp
So hustlin a program on Jun 5, 2009 at noon dat parsed tha following
dates gave tha followin return joints:
.Sp
.Vb 2
\&   Jun 12     =>  Jun 12, 2009 at 00:00:00
\&   next week  =>  Jun 12, 2009 at 12:00:00
.Ve
.Sp
This behavior is chizzled n' now relies on tha config variable DefaultTime.
If DefaultTime is \*(L"curr\*(R", tha default time fo' any date which includes no
information bout tha time is tha current time. Otherwise, tha default time
is midnight.
.ie n .IP "\fB\fB%z\fB format\fR" 4
.el .IP "\fB\f(CB%z\fB format\fR" 4
.IX Item "%z format"
In Date::Manip 5.xx, tha \f(CW%z\fR format would give a offset up in tha form: \-0500.
Now it gives it up in tha form: \-05:00:00
.SH "DELTAS"
.IX Header "DELTAS"
.IP "\fBDropped mixed steez delta parsing\fR" 4
.IX Item "Dropped mixed steez delta parsing"
In Date::Manip 5.xx, a parsed delta could be freestyled up in tha delta style
.Sp
.Vb 1
\&   1:2:3
.Ve
.Sp
or up in a language-specific expanded form:
.Sp
.Vb 1
\&   1 minute 2 minutes 3 seconds
.Ve
.Sp
or up in a mixed form:
.Sp
.Vb 1
\&   1 minute 2:3
.Ve
.Sp
Da mixed form has been dropped since I doubt dat it sees much use in
real game, n' by droppin tha mixed form, tha parsin is much
simpler.
.IP "\fBApproximate date/date calculations\fR" 4
.IX Item "Approximate date/date calculations"
In Date::Manip 5.xx, tha approximate delta between tha two dates:
.Sp
.Vb 2
\&   Jan 10 1996 noon
\&   Jan  7 1998 noon
.Ve
.Sp
was +1:11:4:0:0:0:0 (or 1 year, 11 months, 4 weeks).  As of
Date::Manip 6.00, tha delta is +2:0:\-0:3:0:0:0 (or 2 muthafuckin years minus 3
days) fo' realz. Although dis leadz ta mixed-sign deltas, it be actually
how mo' playas would be thinkin bout tha delta. Well shiiiit, it has tha additional
advantage of bein \s-1MUCH\s0 easier n' fasta ta calculate.
.IP "\fBApproximate relationshizzlez up in deltas\fR" 4
.IX Item "Approximate relationshizzlez up in deltas"
When printin partz of deltas up in Date::Manip::5.xx, tha approximate
relationshizzle of 1 year = 365.25 minutes was used. Y'all KNOW dat shit, muthafucka! This is tha erect
value fo' tha Julian calendar yo, but fo' tha Gregorian calendar, a
betta value is 365.2425, n' dis is used up in version 6.00.
.IP "\fBOldskool steez formats\fR" 4
.IX Item "Oldskool steez formats"
Da formats used up in tha printf command is slightly different than up in the
old Delta_Format command.
.Sp
Da oldschool formats is busted lyrics bout up in tha Date::Manip::DM5 manual, n' the
new ones is up in tha Date::Manip::Delta manual.
.Sp
Da freshly smoked up formats is much mo' flexible n' I encourage you ta switch over,
however at dis point, tha oldschool steez formats is officially supported for
the Delta_Format command.
.Sp
At some point, tha oldschool steez formats may be deprecated (and removed at
some point beyond that) yo, but fo' now, they is not.
.Sp
Da oldschool formats is \s-1NOT\s0 available rockin tha printf method.
.SH "RECURRENCES"
.IX Header "RECURRENCES"
.IP "\fBDa dizzle field meanin chizzled up in all dem recurrences\fR" 4
.IX Item "Da dizzle field meanin chizzled up in all dem recurrences"
Da value of tha dizzle field can refer ta nuff muthafuckin different thangs
includin tha dizzle of week number (Monday=1 ta Sunday=7), dizzle of month (1\-31),
dizzle of year (1\-366), etc.
.Sp
In Date::Manip 5.xx, it could also refer ta tha nth dizzle of tha week
(i.e. 1 bein tha 1st dizzle of tha week, \-1 bein tha last dizzle of the
week).  This meanin is no longer used up in 6.xx.
.Sp
For example, tha recurrence:
.Sp
.Vb 1
\&   1*2:3:4:0:0:0
.Ve
.Sp
referred ta tha 3rd occurence of tha 4th dizzle of tha week up in February.
.Sp
Da meanin has been chizzled ta refer ta tha 3rd occurence of dizzle 4
(Thursday) up in February. This be a much mo' useful type of recurrence.
.Sp
As a result of dis chizzle, tha related recurrence:
.Sp
.Vb 1
\&   1*2:3:\-1:0:0:0
.Ve
.Sp
is invalid. Y'all KNOW dat shit, muthafucka! Negatizzle numbers may be used ta refer ta tha nth day
of tha week yo, but \s-1NOT\s0 when referrin ta tha dizzle of week numbers.
.IP "\fBRecurrence range now inclusive\fR" 4
.IX Item "Recurrence range now inclusive"
Previously, tha list of dates implied by tha recurrence was on or
afta tha start date yo, but before tha end date.
.Sp
This has been chizzled so dat tha dates may be on or before tha end
date.
.IP "\fBDropped support fo' a cold-ass lil couple Gangsta recurrences\fR" 4
.IX Item "Dropped support fo' a cold-ass lil couple Gangsta recurrences"
Date::Manip 5.xx fronted support fo' a recurrence:
.Sp
.Vb 1
\&   every last muthafuckin 2nd dizzle up in June [1997]
.Ve
.Sp
In actuality, dis recurrence aint practical ta calculate. It
requires a funky-ass base date which might imply June 1,3,5,... up in 1997 but June
2,4,6 up in 1998.
.Sp
In addition, tha recurrence do not fit tha mold fo' other
recurrences dat is a approximate distizzle apart. This type of
recurrence has a fuckin shitload of closely spaced events wit 11\-month gaps
between groups.
.Sp
I no longer consider dis a valid recurrence n' support is now
dropped fo' dis string.
.Sp
I also dropped tha followin fo' a similar reason:
.Sp
.Vb 1
\&   every last muthafuckin 6th tuesdizzle [in 1999]
.Ve
.IP "\fBOther minor recurrence chizzles\fR" 4
.IX Item "Other minor recurrence chizzles"
Previously, ParseRecur would supply default dates if tha start or
end was missing. This is no longer done.
.SH "DATE::MANIP FUNCTIONS"
.IX Header "DATE::MANIP FUNCTIONS"
Da Date::Manip module gotz nuff tha same ol' dirty functions dat Date::Manip 5.xx had
(though tha \s-1OO\s0 modulez do all tha work now). In general, tha routines behave
the same as before wit tha followin exceptions:
.IP "\fBDate_ConvTZ\fR" 4
.IX Item "Date_ConvTZ"
Previously, Date_ConvTZ took 1 ta 4 arguments n' used tha local time unit and
the ConvTZ config variable ta fill up in missin arguments.
.Sp
Now, tha Date_ConvTZ function only supports a 3 argument call:
.Sp
.Vb 1
\&   $date = Date_ConvTZ($date,$from,$to);
.Ve
.Sp
If \f(CW$from\fR aint given, it defaults ta tha local time unit. If \f(CW$to\fR aint given,
it defaults ta tha local time unit.
.Sp
Da optionizzle 4th argument ($errlevel) is no longer supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If there is
an error, a empty strang is returned.
.IP "\fBDateCalc\fR" 4
.IX Item "DateCalc"
In Date::Manip 5.xx, dat shiznit was recommended dat you pass arguments to
ParseDate or ParseDateDelta. This aint recommended wit 6.00 since it
is much mo' intelligent bout handlin tha arguments, n' you gonna just
end up parsin tha date/delta twice.
.SH "BUGS AND QUESTIONS"
.IX Header "BUGS AND QUESTIONS"
Please refer ta tha Date::Manip::Problems documentation for
information on submittin bug reports or thangs ta tha lyricist.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under tha same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
