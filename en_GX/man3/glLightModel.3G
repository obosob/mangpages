'\" t
.\"     Title: glLightModel
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLLIGHTMODEL" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glLightModel \- set tha lightin model parameters
.SH "C SPECIFICATION"
.HP \w'void\ glLightModelf('u
.BI "void glLightModelf(GLenum\ " "pname" ", GLfloat\ " "param" ");"
.HP \w'void\ glLightModeli('u
.BI "void glLightModeli(GLenum\ " "pname" ", GLint\ " "param" ");"
.SH "PARAMETERS"
.PP
\fIpname\fR
.RS 4
Specifies a single\-valued lightin model parameter\&.
\fBGL_LIGHT_MODEL_LOCAL_VIEWER\fR,
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR, and
\fBGL_LIGHT_MODEL_TWO_SIDE\fR
are accepted\&.
.RE
.PP
\fIparam\fR
.RS 4
Specifies tha value that
\fIparam\fR
will be set to\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glLightModelfv('u
.BI "void glLightModelfv(GLenum\ " "pname" ", const\ GLfloat\ *\ " "params" ");"
.HP \w'void\ glLightModeliv('u
.BI "void glLightModeliv(GLenum\ " "pname" ", const\ GLint\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fIpname\fR
.RS 4
Specifies a lightin model parameter\&.
\fBGL_LIGHT_MODEL_AMBIENT\fR,
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR,
\fBGL_LIGHT_MODEL_LOCAL_VIEWER\fR, and
\fBGL_LIGHT_MODEL_TWO_SIDE\fR
are accepted\&.
.RE
.PP
\fIparams\fR
.RS 4
Specifies a pointa ta tha value or joints that
\fIparams\fR
will be set to\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglLightModel\fR
sets tha lightin model parameter\&.
\fIpname\fR
names a parameta and
\fIparams\fR
gives tha freshly smoked up value\&. There is three lightin model parameters:
.PP
\fBGL_LIGHT_MODEL_AMBIENT\fR
.RS 4
.sp
\fIparams\fR
gotz nuff four integer or floating\-point joints dat specify tha ambient RGBA intensitizzle of tha entire scene\&. Integer joints is mapped linearly such dat da most thugged-out positizzle representable value maps ta 1\&.0, n' da most thugged-out wack representable value maps to
\-1\&.0\&. Floating\-point joints is mapped directly\&. Neither integer nor floating\-point joints is clamped\&. Da initial ambient scene intensitizzle is (0\&.2, 0\&.2, 0\&.2, 1\&.0)\&.
.RE
.PP
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR
.RS 4
.sp
\fIparams\fR
must be either
\fBGL_SEPARATE_SPECULAR_COLOR\fR
or
\fBGL_SINGLE_COLOR\fR\&.
\fBGL_SINGLE_COLOR\fR
specifies dat a single color is generated from tha lightin computation fo' a vertex\&.
\fBGL_SEPARATE_SPECULAR_COLOR\fR
specifies dat tha specular color computation of lightin be stored separately from tha remainder of tha lightin computation\&. Da specular color is summed tha fuck into tha generated fragment\*(Aqs color afta tha application of texture mappin (if enabled)\&. Da initial value is
\fBGL_SINGLE_COLOR\fR\&.
.RE
.PP
\fBGL_LIGHT_MODEL_LOCAL_VIEWER\fR
.RS 4
.sp
\fIparams\fR
is a single integer or floating\-point value dat specifies how tha fuck specular reflection anglez is computed\&. If
\fIparams\fR
is 0 (or 0\&.0), specular reflection anglez take tha view direction ta be parallel ta n' up in tha direction of tha \-\fIz\fR
axis, regardless of tha location of tha vertex up in eye coordinates\&. Otherwise, specular reflections is computed from tha origin of tha eye coordinizzle system\&. Da initial value is 0\&.
.RE
.PP
\fBGL_LIGHT_MODEL_TWO_SIDE\fR
.RS 4
.sp
\fIparams\fR
is a single integer or floating\-point value dat specifies whether one\- or two\-sided lightin calculations is done fo' polygons\&. Well shiiiit, it has no effect on tha lightin calculations fo' points, lines, or bitmaps\&. If
\fIparams\fR
is 0 (or 0\&.0), one\-sided lightin is specified, n' only the
\fIfront\fR
material parametas is used up in tha lightin equation\&. Otherwise, two\-sided lightin is specified\&. In dis case, verticez of back\-facin polygons is lighted rockin the
\fIback\fR
material parametas n' have they normals reversed before tha lightin equation is evaluated\&. Verticez of front\-facin polygons is always lighted rockin the
\fIfront\fR
material parameters, wit no chizzle ta they normals\&. Da initial value is 0\&.
.RE
.PP
In RGBA mode, tha lighted color of a vertex is tha sum of tha material emission intensity, tha thang of tha material ambient reflectizzle n' tha lightin model full\-scene ambient intensity, n' tha contribution of each enabled light source\&. Each light source contributes tha sum of three terms: ambient, diffuse, n' specular\&. Da ambient light source contribution is tha thang of tha material ambient reflectizzle n' tha light\*(Aqs ambient intensity\&. Da diffuse light source contribution is tha thang of tha material diffuse reflectance, tha light\*(Aqs diffuse intensity, n' tha dot thang of tha vertex\*(Aqs aiiight wit tha normalized vector from tha vertex ta tha light source\&. Da specular light source contribution is tha thang of tha material specular reflectance, tha light\*(Aqs specular intensity, n' tha dot thang of tha normalized vertex\-to\-eye n' vertex\-to\-light vectors, raised ta tha juice of tha shininizz of tha material\& fo' realz. All three light source contributions is attenuated equally based on tha distizzle from tha vertex ta tha light source n' on light source direction, spread exponent, n' spread cutoff angle\& fo' realz. All dot shizzle is replaced wit 0 if they evaluate ta a wack value\&.
.PP
Da alpha component of tha resultin lighted color is set ta tha alpha value of tha material diffuse reflectance\&.
.PP
In color index mode, tha value of tha lighted index of a vertex ranges from tha ambient ta tha specular joints passed to
\fBglMaterial\fR()
using
\fBGL_COLOR_INDEXES\fR\&. Diffuse n' specular coefficients, computed wit a (\&.30, \&.59, \&.11) weightin of tha lights\*(Aq colors, tha shininizz of tha material, n' tha same reflection n' attenuation equations as up in tha RGBA case, determine how tha fuck much above ambient tha resultin index is\&.
.SH "NOTES"
.PP
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR
is available only if tha GL version is 1\&.2 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIpname\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIpname\fR
is
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR
and
\fIparams\fR
is not one of
\fBGL_SINGLE_COLOR\fR
or
\fBGL_SEPARATE_SPECULAR_COLOR\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglLightModel\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_LIGHT_MODEL_AMBIENT\fR
.PP
\fBglGet\fR()
with argument
\fBGL_LIGHT_MODEL_COLOR_CONTROL\fR
.PP
\fBglGet\fR()
with argument
\fBGL_LIGHT_MODEL_LOCAL_VIEWER\fR
.PP
\fBglGet\fR()
with argument
\fBGL_LIGHT_MODEL_TWO_SIDE\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_LIGHTING\fR
.SH "SEE ALSO"
.PP
\fBglLight\fR(),
\fBglMaterial\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
