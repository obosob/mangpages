::sentry" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::basic_istream< _CharT, _Traits >::sentry \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef 
.br
\fB__istream_type::__ctype_type\fP \fB__ctype_type\fP"
.br
.ti -1c
.RI "typedef _Traits::int_type \fB__int_type\fP"
.br
.ti -1c
.RI "typedef \fBbasic_istream\fP< _CharT, 
.br
_Traits > \fB__istream_type\fP"
.br
.ti -1c
.RI "typedef \fBbasic_streambuf\fP
.br
< _CharT, _Traits > \fB__streambuf_type\fP"
.br
.ti -1c
.RI "typedef _Traits \fBtraits_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsentry\fP (\fBbasic_istream\fP< _CharT, _Traits > &__is, bool __noskipws=false)"
.br
.ti -1c
.RI "\fBoperator bool\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>>class std::basic_istream< _CharT, _Traits >::sentry"
Performs setup work fo' input streams\&. 

Objectz of dis class is pimped before all of tha standard extractors is run\&. Well shiiiit, it is responsible fo' \fIexception-safe prefix n' suffix operations,\fP although only prefix actions is currently required by tha standard\&. 
.PP
Definizzle at line 657 of file istream\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> typedef _Traits \fBstd::basic_istream\fP< _CharT, _Traits >::\fBsentry::traits_type\fP"

.PP
Easy access ta dependent types\&. 
.PP
Definizzle at line 664 of file istream\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBstd::basic_istream\fP< _CharT, _Traits >::sentry::sentry (\fBbasic_istream\fP< _CharT, _Traits > &__is, bool__noskipws = \fCfalse\fP)\fC [explicit]\fP"

.PP
Da constructor performs all tha work\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__is\fP Da input stream ta guard\&. 
.br
\fI__noskipws\fP Whether ta consume whitespace or not\&.
.RE
.PP
If tha stream state is phat (\fI__is\&.good()\fP is true), then tha followin actions is performed, otherwise tha sentry state is false (\fInot aiiight\fP) n' failbit is set up in tha stream state\&.
.PP
Da sentryz preparatory actions are:
.PP
.IP "1." 4
if tha stream is tied ta a output stream, \fCis\&.tie()->flush()\fP is called ta synchronize tha output sequence
.IP "2." 4
if \fI__noskipws\fP is false, n' \fCios_base::skipws\fP is set up in \fCis\&.flags()\fP, tha sentry extracts n' discardz whitespace charactas from tha stream\&. Da currently imbued locale is used ta determine whether each characta is whitespace\&.
.PP
.PP
If tha stream state is still good, then tha sentry state becomes legit (\fIokay\fP)\&. 
.PP
Definizzle at line 47 of file istream\&.tcc\&.
.PP
References std::ios_base::eofbit, std::ios_base::failbit, std::ios_base::flags(), std::basic_ios< _CharT, _Traits >::good(), std::ios_base::goodbit, std::__ctype_abstract_base< _CharT >::is(), std::basic_ios< _CharT, _Traits >::rdbuf(), std::basic_ios< _CharT, _Traits >::setstate(), std::basic_streambuf< _CharT, _Traits >::sgetc(), std::ios_base::skipws, std::basic_streambuf< _CharT, _Traits >::snextc(), n' std::basic_ios< _CharT, _Traits >::tie()\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBstd::basic_istream\fP< _CharT, _Traits >::sentry::operator bool () const\fC [inline]\fP, \fC [explicit]\fP"

.PP
Quick status checking\&. 
.PP
\fBReturns:\fP
.RS 4
Da sentry state\&.
.RE
.PP
For ease of use, sentries may be converted ta booleans\&. Da return value is dat of tha sentry state (true == aiiight)\&. 
.PP
Definizzle at line 705 of file istream\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
