.TH xcb_grab_key 3  2013-08-04 "XCB" "XCB Requests"
.ad l
.SH NAME
xcb_grab_key \- Grab keyboard key(s)
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_void_cookie_t \fBxcb_grab_key\fP(xcb_connection_t\ *\fIconn\fP, uint8_t\ \fIballer_events\fP, xcb_window_t\ \fIgrab_window\fP, uint16_t\ \fImodifiers\fP, xcb_keycode_t\ \fIkey\fP, uint8_t\ \fIpointer_mode\fP, uint8_t\ \fIkeyboard_mode\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
Da XCB connection ta X11.
.IP \fIballer_events\fP 1i
If 1, tha \fIgrab_window\fP will still git tha pointa events, n' you can put dat on yo' toast. If 0, events is not
reported ta tha \fIgrab_window\fP.
.IP \fIgrab_window\fP 1i
Specifies tha window on which tha pointa should be grabbed.
.IP \fImodifiers\fP 1i
Da modifiers ta grab.

Usin tha special value \fIXCB_MOD_MASK_ANY\fP means grab tha pointa wit all
possible modifier combinations.
.IP \fIkey\fP 1i
Da keycode of tha key ta grab.

Da special value \fIXCB_GRAB_ANY\fP means grab any key.
.IP \fIpointer_mode\fP 1i
One of tha followin joints:
.RS 1i
.IP \fIXCB_GRAB_MODE_SYNC\fP 1i
Da state of tha keyboard appears ta freeze: No further keyboard events are
generated by tha server until tha grabbin client thangs a releasing
\fIAllowEvents\fP request or until tha keyboard grab is busted out.
.IP \fIXCB_GRAB_MODE_ASYNC\fP 1i
Keyboard event processin continues normally.
.RE
.RS 1i


.RE
.IP \fIkeyboard_mode\fP 1i
One of tha followin joints:
.RS 1i
.IP \fIXCB_GRAB_MODE_SYNC\fP 1i
Da state of tha keyboard appears ta freeze: No further keyboard events are
generated by tha server until tha grabbin client thangs a releasing
\fIAllowEvents\fP request or until tha keyboard grab is busted out.
.IP \fIXCB_GRAB_MODE_ASYNC\fP 1i
Keyboard event processin continues normally.
.RE
.RS 1i


.RE
.SH DESCRIPTION
Establishes a passive grab on tha keyboard. Y'all KNOW dat shit, muthafucka! In tha future, tha keyboard is
actively grabbed (as fo' \fIGrabKeyboard\fP), tha last-keyboard-grab time is set to
the time at which tha key was pressed (as transmitted up in tha KeyPress event),
and tha KeyPress event is reported if all of tha followin conditions is true:

Da keyboard aint grabbed n' tha specified key (which can itself be a
modifier key) is logically pressed when tha specified modifier keys are
logically down, n' no other modifier keys is logically down.

Either tha grab_window be a ancestor of (or is) tha focus window, or the
grab_window be a thugged-out descendant of tha focus window n' gotz nuff tha pointer.

A passive grab on tha same key combination do not exist on any ancestor of
grab_window.

Da interpretation of tha remainin arguments be as fo' XGrabKeyboard. Y'all KNOW dat shit, muthafucka!  Da actizzle grab is terminated
automatically when tha logical state of tha keyboard has tha specified key busted out (independent of the
logical state of tha modifier keys), at which point a KeyRelease event is reported ta tha grabbin window.

Note dat tha logical state of a thang (as peeped by client applications) may lag tha physical state if
device event processin is frozen.

A modifiers argument of AnyModifier is equivalent ta issuin tha request fo' all possible modifier combinations (includin tha combination of no modifiers).  It aint required dat all modifiers specified
have currently assigned KeyCodes.  A keycode argument of AnyKey is equivalent ta issuin tha request for
all possible KeyCodes.  Otherwise, tha specified keycode must be up in tha range specified by min_keycode
and max_keycode up in tha connection setup, or a BadValue error thangs up in dis biatch.

If some other client has issued a XGrabKey wit tha same key combination on tha same window, a BadAccess
error thangs up in dis biatch.  When rockin AnyModifier or AnyKey, tha request fails straight-up, n' a BadAccess error
results (no grabs is established) if there be a cold-ass lil conflictin grab fo' any combination.
.SH RETURN VALUE
Returns a \fIxcb_void_cookie_t\fP. Errors (if any) gotta be handled up in tha event loop.

If you wanna handle errors directly wit \fIxcb_request_check\fP instead, use \fIxcb_grab_key_checked\fP. Right back up in yo muthafuckin ass. See \fBxcb-requests(3)\fP fo' details.
.SH ERRORS
.IP \fIxcb_access_error_t\fP 1i
Another client has already issued a GrabKey wit tha same button/key
combination on tha same window.
.IP \fIxcb_window_error_t\fP 1i
Da specified \fIwindow\fP do not exist.
.IP \fIxcb_value_error_t\fP 1i
TODO: reasons?
.SH SEE ALSO
.BR xcb-requests (3),
.BR xcb_grab_keyboard (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org fo' erections n' improvements.
