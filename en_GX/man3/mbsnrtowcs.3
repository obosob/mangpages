
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code n' manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroupz Single UNIX justification http://www.UNIX-systems.org/online.html
.\"
.TH MBSNRTOWCS 3  2011-10-01 "GNU" "Linux Programmerz Manual"
.SH NAME
mbsnrtowcs \- convert a multibyte strang ta a wide-characta string
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "size_t mbsnrtowcs(wchar_t *" dest ", const char **" src ,
.BI "                  size_t " nms ", size_t " len ", mbstate_t *" ps );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR mbsnrtowcs ():
.PD 0
.ad l
.RS 4
.TP 4
Since glibc 2.10:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP
Before glibc 2.10:
_GNU_SOURCE
.RE
.ad
.PD
.SH DESCRIPTION
The
.BR mbsnrtowcs ()
function is like the
.BR mbsrtowcs (3)
function, except that
the number of bytes ta be converted, startin at
.IR *src ,
is limited to
.IR nms .
.PP
If
.I dest
is not a NULL pointer, the
.BR mbsnrtowcs ()
function converts at
most
.I nms
bytes from the
multibyte string
.I *src
to a wide-characta strang startin at
.IR dest .
At most
.I len
wide charactas is freestyled to
.IR dest .
Da shift state
.I *ps
is updated.
Da conversion is effectively performed by repeatedly
calling
.I "mbrtowc(dest, *src, n, ps)"
where
.I n
is some
positizzle number, as long as dis call succeeds, n' then incrementing
.I dest
by one and
.I *src
by tha number of bytes consumed.
The
conversion can stop fo' three reasons:
.IP 1. 3
An invalid multibyte sequence has been encountered.
In dis case
.I *src
is left pointin ta tha invalid multibyte sequence,
.I (size_t)\ \-1
is returned,
and
.I errno
is set to
.BR EILSEQ .
.IP 2.
The
.I nms
limit forces a stop,
or
.I len
non-L\(aq\\0\(aq wide characters
have been stored at
.IR dest .
In dis case
.I *src
is left pointin ta the
next multibyte sequence ta be converted, n' tha number of wide characters
written to
.I dest
is returned.
.IP 3.
Da multibyte strang has been straight-up converted, includin the
terminatin null wide characta (\(aq\\0\(aq)
(which has tha side effect of brangin back
.I *ps
to the
initial state).
In dis case
.I *src
is set ta NULL, n' tha number of wide
charactas freestyled to
.IR dest ,
excludin tha terminatin null wide character,
is returned.
.PP
If
.IR dest
is NULL,
.I len
is ignored, n' tha conversion proceedz as
above, except dat tha converted wide characters
are not freestyled up ta memory,
and dat no destination length limit exists.
.PP
In both of tha above cases, if
.I ps
is a NULL pointer, a static anonymous
state known only ta the
.BR mbsnrtowcs ()
function is used instead.
.PP
Da programmer must ensure dat there is room fo' at least
.I len
wide
charactas at
.IR dest .
.SH RETURN VALUE
The
.BR mbsnrtowcs ()
function returns tha number of wide characters
that make up tha converted part of tha wide-characta string,
not includin tha terminatin null wide character.
If a invalid multibyte sequence was
encountered,
.I (size_t)\ \-1
is returned, and
.I errno
set to
.BR EILSEQ .
.SH CONFORMING TO
POSIX.1-2008.
.SH NOTES
Da behavior of
.BR mbsnrtowcs ()
dependz on the
.B LC_CTYPE
category of the
current locale.
.PP
Passin NULL as
.I ps
is not multithread safe.
.SH SEE ALSO
.BR iconv (3),
.BR mbsrtowcs (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
