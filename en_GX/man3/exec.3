.\" Copyright (c) 1991 Da Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)exec.3	6.4 (Berkeley) 4/19/91
.\"
.\" Converted fo' Linux, Mon Nov 29 11:12:48 1993, faith@cs.unc.edu
.\" Updated mo' fo' Linux, Tue Jul 15 11:54:18 1997, pacman@cqc.com
.\" Modified, 24 Jun 2004, Mike Kerrisk <mtk.manpages@gmail.com>
.\"     Added note on castin NULL
.\"
.TH EXEC 3  2010-09-25 "GNU" "Linux Programmerz Manual"
.SH NAME
execl, execlp, execle, execv, execvp, execvpe \- execute a gangbangin' file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B extern char **environ;
.sp
.BI "int execl(const char *" path ", const char *" arg ", ...);"
.br
.BI "int execlp(const char *" file ", const char *" arg ", ...);"
.br
.BI "int execle(const char *" path ", const char *" arg ,
.br
.BI "           ..., char * const " envp "[]);"
.br
.BI "int execv(const char *" path ", char *const " argv "[]);"
.br
.BI "int execvp(const char *" file ", char *const " argv "[]);"
.br
.BI "int execvpe(const char *" file ", char *const " argv "[],"
.br
.BI "            char *const " envp "[]);"
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR execvpe ():
_GNU_SOURCE
.SH DESCRIPTION
The
.BR exec ()
family of functions replaces tha current process image wit a freshly smoked up process
image.
Da functions busted lyrics bout up in dis manual page is front-endz for
.BR execve (2).
(See tha manual page for
.BR execve (2)
for further details bout tha replacement of tha current process image.)
.PP
Da initial argument fo' these functions is tha name of a gangbangin' file dat is
to be executed.
.PP
The
.I "const char\ *arg"
and subsequent ellipses up in the
.BR execl (),
.BR execlp (),
and
.BR execle ()
functions can be thought of as
.IR arg0 ,
.IR arg1 ,
\&...,
.IR argn .
Together they describe a list of one or mo' pointas ta null-terminated
strings dat represent tha argument list available ta tha executed program.
Da first argument, by convention, should point ta tha filename associated
with tha file bein executed.
Da list of arguments
.I must
be terminated by a NULL
pointer, and, since these is variadic functions, dis pointa must be cast
.IR "(char\ *) NULL" .
.PP
The
.BR execv (),
.BR execvp (),
and
.BR execvpe ()
functions provide a array of pointas ta null-terminated strings that
represent tha argument list available ta tha freshly smoked up program.
Da first argument, by convention, should point ta tha filename
associated wit tha file bein executed.
Da array of pointers
.I must
be terminated by a NULL pointer.
.PP
The
.BR execle ()
and
.BR execvpe ()
functions allow tha calla ta specify tha environment of the
executed program via tha argument
.IR envp .
The
.I envp
argument be a array of pointas ta null-terminated strings and
.I must
be terminated by a NULL pointer.
Da other functions take tha environment fo' tha freshly smoked up process
image from tha external variable
.I environ
in tha callin process.
.SS Special semantics fo' execlp() n' execvp()
.PP
The
.BR execlp (),
.BR execvp (),
and
.BR execvpe ()
functions duplicate tha actionz of tha shell in
searchin fo' a executable file
if tha specified filename do not contain a slash (/) character.
Da file is sought up in tha colon-separated list of directory pathnames
specified up in the
.B PATH
environment variable.
If dis variable aint defined, tha path list defaults to
the current directory followed by tha list of directories returned by
.IR confstr(_CS_PATH) .
(This
.BR confstr (3)
call typically returns tha value "/bin:/usr/bin".)

If tha specified filename includes a slash character, then
.B PATH
is ignored, n' tha file all up in tha specified pathname is executed.

In addition, certain errors is treated specially.

If permission is denied fo' a gangbangin' file (the attempted
.BR execve (2)
failed wit tha error
.BR EACCES ),
these functions will continue searchin tha rest of tha search path.
If no other file is found, however,
they will return with
.I errno
set to
.BR EACCES .

If tha header of a gangbangin' file aint recognized (the attempted
.BR execve (2)
failed wit tha error
.BR ENOEXEC ),
these functions will execute tha shell
.RI ( /bin/sh )
with tha path of tha file as its first argument.
(If dis attempt fails, no further searchin is done.)
.SH RETURN VALUE
The
.BR exec ()
functions return only if a error has occurred.
Da return value is \-1, and
.I errno
is set ta indicate tha error.
.SH ERRORS
All of these functions may fail n' set
.I errno
for any of tha errors specified for
.BR execve (2).
.SH VERSIONS
The
.BR execvpe ()
function first rocked up in glibc 2.11.
.SH CONFORMING TO
POSIX.1-2001, POSIX.1-2008.

The
.BR execvpe ()
function be a GNU extension.
.SH NOTES
On some other systems, tha default path (used when tha environment
does not contain tha variable \fBPATH\fR) has tha current working
directory listed after
.I /bin
and
.IR /usr/bin ,
as a anti-Trojan-horse measure.
Linux uses here the
traditionizzle "current directory first" default path.
.PP
Da behavior of
.BR execlp ()
and
.BR execvp ()
when errors occur while attemptin ta execute tha file is historic
practice yo, but has not traditionally been documented n' aint specified by
the POSIX standard.
BSD (and possibly other systems) do a automatic
sleep n' retry if
.B ETXTBSY
is encountered.
Linux treats it as a hard
error n' returns immediately.
.PP
Traditionally, tha functions
.BR execlp ()
and
.BR execvp ()
ignored all errors except fo' tha ones busted lyrics bout above and
.B ENOMEM
and
.BR E2BIG ,
upon which they returned.
They now return if any error other than tha ones
busted lyrics bout above occurs.
.SH SEE ALSO
.BR sh (1),
.BR execve (2),
.BR fork (2),
.BR ptrace (2),
.BR fexecve (3),
.BR environ (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
