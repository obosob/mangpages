'\" t
.\"     Title: glGetActiveUniform
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETACTIVEUNIFORM" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetActiveUniform \- Returns shiznit bout a actizzle uniform variable fo' tha specified program object
.SH "C SPECIFICATION"
.HP \w'void\ glGetActiveUniform('u
.BI "void glGetActiveUniform(GLuint\ " "program" ", GLuint\ " "index" ", GLsizei\ " "bufSize" ", GLsizei\ *" "length" ", GLint\ *" "size" ", GLenum\ *" "type" ", GLchar\ *" "name" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies tha program object ta be queried\&.
.RE
.PP
\fIindex\fR
.RS 4
Specifies tha index of tha uniform variable ta be queried\&.
.RE
.PP
\fIbufSize\fR
.RS 4
Specifies tha maximum number of charactas OpenGL be allowed ta write up in tha characta buffer indicated by
\fIname\fR\&.
.RE
.PP
\fIlength\fR
.RS 4
Returns tha number of charactas straight-up freestyled by OpenGL up in tha strang indicated by
\fIname\fR
(excludin tha null terminator) if a value other than
\fBNULL\fR
is passed\&.
.RE
.PP
\fIsize\fR
.RS 4
Returns tha size of tha uniform variable\&.
.RE
.PP
\fItype\fR
.RS 4
Returns tha data type of tha uniform variable\&.
.RE
.PP
\fIname\fR
.RS 4
Returns a null terminated strang containin tha name of tha uniform variable\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetActiveUniform\fR
returns shiznit bout a actizzle uniform variable up in tha program object specified by
\fIprogram\fR\&. Da number of actizzle uniform variablez can be obtained by calling
\fBglGetProgram\fR()
with tha value
\fBGL_ACTIVE_UNIFORMS\fR\& fo' realz. A value of 0 for
\fIindex\fR
selects tha straight-up original gangsta actizzle uniform variable\&. Permissible joints for
\fIindex\fR
range from 0 ta tha number of actizzle uniform variablez minus 1\&.
.PP
Shadaz may use either built\-in uniform variables, user\-defined uniform variables, or both\&. Built\-in uniform variablez gotz a prefix of "gl_" n' reference existin OpenGL state or joints derived from such state (e\&.g\&.,
\fIgl_DepthRangeParameters\fR, peep tha OpenGL Shadin Language justification fo' a cold-ass lil complete list\&.) User\-defined uniform variablez have arbitrary names n' obtain they joints from tha application all up in calls to
\fBglUniform\fR()\& fo' realz. A uniform variable (either built\-in or user\-defined) is considered actizzle if it is determined durin tha link operation dat it may be accessed durin program execution\&. Therefore,
\fIprogram\fR
should have previously been tha target of a cold-ass lil call to
\fBglLinkProgram\fR() yo, but it aint necessary fo' it ta done been linked successfully\&.
.PP
Da size of tha characta buffer required ta store tha longest uniform variable name in
\fIprogram\fR
can be obtained by calling
\fBglGetProgram\fR()
with tha value
\fBGL_ACTIVE_UNIFORM_MAX_LENGTH\fR\&. This value should be used ta allocate a funky-ass buffer of sufficient size ta store tha returned uniform variable name\&. Da size of dis characta buffer is passed in
\fIbufSize\fR, n' a pointa ta dis characta buffer is passed in
\fIname\&.\fR
.PP
\fBglGetActiveUniform\fR
returns tha name of tha uniform variable indicated by
\fIindex\fR, storin it up in tha characta buffer specified by
\fIname\fR\&. Da strang returned is ghon be null terminated\&. Da actual number of charactas freestyled tha fuck into dis buffer is returned in
\fIlength\fR, n' dis count do not include tha null termination character\&. If tha length of tha returned strang aint required, a value of
\fBNULL\fR
can be passed up in the
\fIlength\fR
argument\&.
.PP
The
\fItype\fR
argument will return a pointa ta tha uniform variable\*(Aqs data type\&. Da symbolic constants returned fo' uniform types is shown up in tha table below\&.
.TS
allbox tab(:);
lB lB.
T{
\fB
                        Returned Symbolic Contant
                        \fR
T}:T{
\fB
                        Shader Uniform Type
                        \fR
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fBGL_FLOAT\fR
T}:T{
\fBfloat\fR
T}
T{
\fBGL_FLOAT_VEC2\fR
T}:T{
\fBvec2\fR
T}
T{
\fBGL_FLOAT_VEC3\fR
T}:T{
\fBvec3\fR
T}
T{
\fBGL_FLOAT_VEC4\fR
T}:T{
\fBvec4\fR
T}
T{
\fBGL_DOUBLE\fR
T}:T{
\fBdouble\fR
T}
T{
\fBGL_DOUBLE_VEC2\fR
T}:T{
\fBdvec2\fR
T}
T{
\fBGL_DOUBLE_VEC3\fR
T}:T{
\fBdvec3\fR
T}
T{
\fBGL_DOUBLE_VEC4\fR
T}:T{
\fBdvec4\fR
T}
T{
\fBGL_INT\fR
T}:T{
\fBint\fR
T}
T{
\fBGL_INT_VEC2\fR
T}:T{
\fBivec2\fR
T}
T{
\fBGL_INT_VEC3\fR
T}:T{
\fBivec3\fR
T}
T{
\fBGL_INT_VEC4\fR
T}:T{
\fBivec4\fR
T}
T{
\fBGL_UNSIGNED_INT\fR
T}:T{
\fBunsigned int\fR
T}
T{
\fBGL_UNSIGNED_INT_VEC2\fR
T}:T{
\fBuvec2\fR
T}
T{
\fBGL_UNSIGNED_INT_VEC3\fR
T}:T{
\fBuvec3\fR
T}
T{
\fBGL_UNSIGNED_INT_VEC4\fR
T}:T{
\fBuvec4\fR
T}
T{
\fBGL_BOOL\fR
T}:T{
\fBbool\fR
T}
T{
\fBGL_BOOL_VEC2\fR
T}:T{
\fBbvec2\fR
T}
T{
\fBGL_BOOL_VEC3\fR
T}:T{
\fBbvec3\fR
T}
T{
\fBGL_BOOL_VEC4\fR
T}:T{
\fBbvec4\fR
T}
T{
\fBGL_FLOAT_MAT2\fR
T}:T{
\fBmat2\fR
T}
T{
\fBGL_FLOAT_MAT3\fR
T}:T{
\fBmat3\fR
T}
T{
\fBGL_FLOAT_MAT4\fR
T}:T{
\fBmat4\fR
T}
T{
\fBGL_FLOAT_MAT2x3\fR
T}:T{
\fBmat2x3\fR
T}
T{
\fBGL_FLOAT_MAT2x4\fR
T}:T{
\fBmat2x4\fR
T}
T{
\fBGL_FLOAT_MAT3x2\fR
T}:T{
\fBmat3x2\fR
T}
T{
\fBGL_FLOAT_MAT3x4\fR
T}:T{
\fBmat3x4\fR
T}
T{
\fBGL_FLOAT_MAT4x2\fR
T}:T{
\fBmat4x2\fR
T}
T{
\fBGL_FLOAT_MAT4x3\fR
T}:T{
\fBmat4x3\fR
T}
T{
\fBGL_DOUBLE_MAT2\fR
T}:T{
\fBdmat2\fR
T}
T{
\fBGL_DOUBLE_MAT3\fR
T}:T{
\fBdmat3\fR
T}
T{
\fBGL_DOUBLE_MAT4\fR
T}:T{
\fBdmat4\fR
T}
T{
\fBGL_DOUBLE_MAT2x3\fR
T}:T{
\fBdmat2x3\fR
T}
T{
\fBGL_DOUBLE_MAT2x4\fR
T}:T{
\fBdmat2x4\fR
T}
T{
\fBGL_DOUBLE_MAT3x2\fR
T}:T{
\fBdmat3x2\fR
T}
T{
\fBGL_DOUBLE_MAT3x4\fR
T}:T{
\fBdmat3x4\fR
T}
T{
\fBGL_DOUBLE_MAT4x2\fR
T}:T{
\fBdmat4x2\fR
T}
T{
\fBGL_DOUBLE_MAT4x3\fR
T}:T{
\fBdmat4x3\fR
T}
T{
\fBGL_SAMPLER_1D\fR
T}:T{
\fBsampler1D\fR
T}
T{
\fBGL_SAMPLER_2D\fR
T}:T{
\fBsampler2D\fR
T}
T{
\fBGL_SAMPLER_3D\fR
T}:T{
\fBsampler3D\fR
T}
T{
\fBGL_SAMPLER_CUBE\fR
T}:T{
\fBsamplerCube\fR
T}
T{
\fBGL_SAMPLER_1D_SHADOW\fR
T}:T{
\fBsampler1DShadow\fR
T}
T{
\fBGL_SAMPLER_2D_SHADOW\fR
T}:T{
\fBsampler2DShadow\fR
T}
T{
\fBGL_SAMPLER_1D_ARRAY\fR
T}:T{
\fBsampler1DArray\fR
T}
T{
\fBGL_SAMPLER_2D_ARRAY\fR
T}:T{
\fBsampler2DArray\fR
T}
T{
\fBGL_SAMPLER_1D_ARRAY_SHADOW\fR
T}:T{
\fBsampler1DArrayShadow\fR
T}
T{
\fBGL_SAMPLER_2D_ARRAY_SHADOW\fR
T}:T{
\fBsampler2DArrayShadow\fR
T}
T{
\fBGL_SAMPLER_2D_MULTISAMPLE\fR
T}:T{
\fBsampler2DMS\fR
T}
T{
\fBGL_SAMPLER_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBsampler2DMSArray\fR
T}
T{
\fBGL_SAMPLER_CUBE_SHADOW\fR
T}:T{
\fBsamplerCubeShadow\fR
T}
T{
\fBGL_SAMPLER_BUFFER\fR
T}:T{
\fBsamplerBuffer\fR
T}
T{
\fBGL_SAMPLER_2D_RECT\fR
T}:T{
\fBsampler2DRect\fR
T}
T{
\fBGL_SAMPLER_2D_RECT_SHADOW\fR
T}:T{
\fBsampler2DRectShadow\fR
T}
T{
\fBGL_INT_SAMPLER_1D\fR
T}:T{
\fBisampler1D\fR
T}
T{
\fBGL_INT_SAMPLER_2D\fR
T}:T{
\fBisampler2D\fR
T}
T{
\fBGL_INT_SAMPLER_3D\fR
T}:T{
\fBisampler3D\fR
T}
T{
\fBGL_INT_SAMPLER_CUBE\fR
T}:T{
\fBisamplerCube\fR
T}
T{
\fBGL_INT_SAMPLER_1D_ARRAY\fR
T}:T{
\fBisampler1DArray\fR
T}
T{
\fBGL_INT_SAMPLER_2D_ARRAY\fR
T}:T{
\fBisampler2DArray\fR
T}
T{
\fBGL_INT_SAMPLER_2D_MULTISAMPLE\fR
T}:T{
\fBisampler2DMS\fR
T}
T{
\fBGL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBisampler2DMSArray\fR
T}
T{
\fBGL_INT_SAMPLER_BUFFER\fR
T}:T{
\fBisamplerBuffer\fR
T}
T{
\fBGL_INT_SAMPLER_2D_RECT\fR
T}:T{
\fBisampler2DRect\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_1D\fR
T}:T{
\fBusampler1D\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_2D\fR
T}:T{
\fBusampler2D\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_3D\fR
T}:T{
\fBusampler3D\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_CUBE\fR
T}:T{
\fBusamplerCube\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_1D_ARRAY\fR
T}:T{
\fBusampler2DArray\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_2D_ARRAY\fR
T}:T{
\fBusampler2DArray\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE\fR
T}:T{
\fBusampler2DMS\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBusampler2DMSArray\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_BUFFER\fR
T}:T{
\fBusamplerBuffer\fR
T}
T{
\fBGL_UNSIGNED_INT_SAMPLER_2D_RECT\fR
T}:T{
\fBusampler2DRect\fR
T}
T{
\fBGL_IMAGE_1D\fR
T}:T{
\fBimage1D\fR
T}
T{
\fBGL_IMAGE_2D\fR
T}:T{
\fBimage2D\fR
T}
T{
\fBGL_IMAGE_3D\fR
T}:T{
\fBimage3D\fR
T}
T{
\fBGL_IMAGE_2D_RECT\fR
T}:T{
\fBimage2DRect\fR
T}
T{
\fBGL_IMAGE_CUBE\fR
T}:T{
\fBimageCube\fR
T}
T{
\fBGL_IMAGE_BUFFER\fR
T}:T{
\fBimageBuffer\fR
T}
T{
\fBGL_IMAGE_1D_ARRAY\fR
T}:T{
\fBimage1DArray\fR
T}
T{
\fBGL_IMAGE_2D_ARRAY\fR
T}:T{
\fBimage2DArray\fR
T}
T{
\fBGL_IMAGE_2D_MULTISAMPLE\fR
T}:T{
\fBimage2DMS\fR
T}
T{
\fBGL_IMAGE_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBimage2DMSArray\fR
T}
T{
\fBGL_INT_IMAGE_1D\fR
T}:T{
\fBiimage1D\fR
T}
T{
\fBGL_INT_IMAGE_2D\fR
T}:T{
\fBiimage2D\fR
T}
T{
\fBGL_INT_IMAGE_3D\fR
T}:T{
\fBiimage3D\fR
T}
T{
\fBGL_INT_IMAGE_2D_RECT\fR
T}:T{
\fBiimage2DRect\fR
T}
T{
\fBGL_INT_IMAGE_CUBE\fR
T}:T{
\fBiimageCube\fR
T}
T{
\fBGL_INT_IMAGE_BUFFER\fR
T}:T{
\fBiimageBuffer\fR
T}
T{
\fBGL_INT_IMAGE_1D_ARRAY\fR
T}:T{
\fBiimage1DArray\fR
T}
T{
\fBGL_INT_IMAGE_2D_ARRAY\fR
T}:T{
\fBiimage2DArray\fR
T}
T{
\fBGL_INT_IMAGE_2D_MULTISAMPLE\fR
T}:T{
\fBiimage2DMS\fR
T}
T{
\fBGL_INT_IMAGE_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBiimage2DMSArray\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_1D\fR
T}:T{
\fBuimage1D\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_2D\fR
T}:T{
\fBuimage2D\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_3D\fR
T}:T{
\fBuimage3D\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_2D_RECT\fR
T}:T{
\fBuimage2DRect\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_CUBE\fR
T}:T{
\fBuimageCube\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_BUFFER\fR
T}:T{
\fBuimageBuffer\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_1D_ARRAY\fR
T}:T{
\fBuimage1DArray\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_2D_ARRAY\fR
T}:T{
\fBuimage2DArray\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE\fR
T}:T{
\fBuimage2DMS\fR
T}
T{
\fBGL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBuimage2DMSArray\fR
T}
T{
\fBGL_UNSIGNED_INT_ATOMIC_COUNTER\fR
T}:T{
\fBatomic_uint\fR
T}
.TE
.sp 1
.PP
If one or mo' elementz of a array is active, tha name of tha array is returned in
\fIname\fR, tha type is returned in
\fItype\fR, n' the
\fIsize\fR
parameta returns tha highest array element index used, plus one, as determined by tha compila and/or linker\&. Only one actizzle uniform variable is ghon be reported fo' a uniform array\&.
.PP
Uniform variablez dat is declared as structures or arrayz of structures aint gonna be returned directly by dis function\&. Instead, each of these uniform variablez is ghon be reduced ta its fundamenstrual components containin tha "\&." n' "[]" operators such dat each of tha names is valid as a argument to
\fBglGetUniformLocation\fR()\&. Each of these reduced uniform variablez is counted as one actizzle uniform variable n' be assigned a index\& fo' realz. A valid name cannot be a structure, a array of structures, or a subcomponent of a vector or matrix\&.
.PP
Da size of tha uniform variable is ghon be returned in
\fIsize\fR\&. Uniform variablez other than arrays gonna git a size of 1\&. Right back up in yo muthafuckin ass. Structures n' arrayz of structures is ghon be reduced as busted lyrics bout earlier, such dat each of tha names returned is ghon be a thugged-out data type up in tha earlier list\&. If dis reduction thangs up in dis biatch up in a array, tha size returned is ghon be as busted lyrics bout fo' uniform arrays; otherwise, tha size returned is ghon be 1\&.
.PP
Da list of actizzle uniform variablez may include both built\-in uniform variablez (which begin wit tha prefix "gl_") as well as user\-defined uniform variable names\&.
.PP
This function will return as much shiznit as it can bout tha specified actizzle uniform variable\&. If no shiznit be available,
\fIlength\fR
will be 0, and
\fIname\fR
will be a empty string\&. This thang could occur if dis function is called afta a link operation dat failed\&. If a error occurs, tha return joints
\fIlength\fR,
\fIsize\fR,
\fItype\fR, and
\fIname\fR
will be unmodified\&.
.SH "NOTES"
.PP
Da double types,
\fBGL_DOUBLE\fR,
\fBGL_DOUBLE_VEC2\fR,
\fBGL_DOUBLE_VEC3\fR,
\fBGL_DOUBLE_VEC4\fR,
\fBGL_DOUBLE_MAT2\fR,
\fBGL_DOUBLE_MAT3\fR,
\fBGL_DOUBLE_MAT4\fR,
\fBGL_DOUBLE_MAT2x3\fR,
\fBGL_DOUBLE_MAT2x4\fR,
\fBGL_DOUBLE_MAT3x2\fR,
\fBGL_DOUBLE_MAT3x4\fR,
\fBGL_DOUBLE_MAT4x2\fR, and
\fBGL_DOUBLE_MAT4x3\fR
are only available if tha GL version is 4\&.1 or higher\&.
.PP
Da image types,
\fBGL_IMAGE_1D\fR,
\fBGL_IMAGE_2D\fR,
\fBGL_IMAGE_3D\fR,
\fBGL_IMAGE_2D_RECT\fR,
\fBGL_IMAGE_CUBE\fR,
\fBGL_IMAGE_BUFFER\fR,
\fBGL_IMAGE_1D_ARRAY\fR,
\fBGL_IMAGE_2D_ARRAY\fR,
\fBGL_IMAGE_2D_MULTISAMPLE\fR,
\fBGL_IMAGE_2D_MULTISAMPLE_ARRAY\fR,
\fBGL_INT_IMAGE_1D\fR,
\fBGL_INT_IMAGE_2D\fR,
\fBGL_INT_IMAGE_3D\fR,
\fBGL_INT_IMAGE_2D_RECT\fR,
\fBGL_INT_IMAGE_CUBE\fR,
\fBGL_INT_IMAGE_BUFFER\fR,
\fBGL_INT_IMAGE_1D_ARRAY\fR,
\fBGL_INT_IMAGE_2D_ARRAY\fR,
\fBGL_INT_IMAGE_2D_MULTISAMPLE\fR,
\fBGL_INT_IMAGE_2D_MULTISAMPLE_ARRAY\fR,
\fBGL_UNSIGNED_INT_IMAGE_1D\fR,
\fBGL_UNSIGNED_INT_IMAGE_2D\fR,
\fBGL_UNSIGNED_INT_IMAGE_3D\fR,
\fBGL_UNSIGNED_INT_IMAGE_2D_RECT\fR,
\fBGL_UNSIGNED_INT_IMAGE_CUBE\fR,
\fBGL_UNSIGNED_INT_IMAGE_BUFFER\fR,
\fBGL_UNSIGNED_INT_IMAGE_1D_ARRAY\fR,
\fBGL_UNSIGNED_INT_IMAGE_2D_ARRAY\fR,
\fBGL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE\fR,
\fBGL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY\fR, n' tha atomic counta type,
\fBGL_UNSIGNED_INT_ATOMIC_COUNTER\fR
are only available if tha GL version is 4\&.2 or higher\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not a value generated by OpenGL\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
is not a program object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIindex\fR
is pimped outa than or equal ta tha number of actizzle uniform variablez in
\fIprogram\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbufSize\fR
is less than 0\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_MAX_VERTEX_UNIFORM_COMPONENTS\fR,
\fBGL_MAX_GEOMETRY_UNIFORM_COMPONENTS\fR,
\fBGL_MAX_FRAGMENT_UNIFORM_COMPONENTS\fR, or
\fBGL_MAX_COMBINED_UNIFORM_COMPONENTS\fR\&.
.PP
\fBglGetProgram\fR()
with argument
\fBGL_ACTIVE_UNIFORMS\fR
or
\fBGL_ACTIVE_UNIFORM_MAX_LENGTH\fR\&.
.PP
\fBglIsProgram\fR()
.SH "SEE ALSO"
.PP
\fBglGetUniform\fR(),
\fBglGetUniformLocation\fR(),
\fBglLinkProgram\fR(),
\fBglUniform\fR(),
\fBglUseProgram\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&. Copyright
\(co
2010 Khronos Group This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
