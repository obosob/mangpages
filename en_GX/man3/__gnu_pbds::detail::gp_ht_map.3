" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::gp_ht_map< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_pbds::detail::hash_eq_fn< Key, Eq_Fn, _Alloc, Store_Hash >\fP, Resize_Policy, \fB__gnu_pbds::detail::ranged_probe_fn< Key, Hash_Fn, _Alloc, Comb_Probe_Fn, Probe_Fn, Store_Hash >\fP, n' \fB__gnu_pbds::detail::types_traits< Key, Mapped, _Alloc, Store_Hash >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBstore_hash\fP }"
.br
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef Comb_Probe_Fn \fBcomb_probe_fn\fP"
.br
.ti -1c
.RI "typedef \fBconst_iterator_\fP \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef _Alloc::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef Eq_Fn \fBeq_fn\fP"
.br
.ti -1c
.RI "typedef Hash_Fn \fBhash_fn\fP"
.br
.ti -1c
.RI "typedef \fBiterator_\fP \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_pointa \fBkey_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_reference \fBkey_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_pointa \fBkey_pointer\fP"
.br
.ti -1c
.RI "typedef traits_base::key_reference \fBkey_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_type \fBkey_type\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_pointa \fBmapped_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_reference \fBmapped_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_pointa \fBmapped_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_reference \fBmapped_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_type \fBmapped_type\fP"
.br
.ti -1c
.RI "typedef __nothrowcopy::indicator \fBno_throw_indicator\fP"
.br
.ti -1c
.RI "typedef \fBpoint_const_iterator_\fP \fBpoint_const_iterator\fP"
.br
.ti -1c
.RI "typedef \fBpoint_iterator_\fP \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef Probe_Fn \fBprobe_fn\fP"
.br
.ti -1c
.RI "typedef traits_base::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef Resize_Policy \fBresize_policy\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef integral_constant< int, 
.br
Store_Hash > \fBstore_extra\fP"
.br
.ti -1c
.RI "typedef traits_base::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgp_ht_map\fP (const \fBgp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy > &)"
.br
.ti -1c
.RI "\fBgp_ht_map\fP (const Hash_Fn &)"
.br
.ti -1c
.RI "\fBgp_ht_map\fP (const Hash_Fn &, const Eq_Fn &)"
.br
.ti -1c
.RI "\fBgp_ht_map\fP (const Hash_Fn &, const Eq_Fn &, const Comb_Probe_Fn &)"
.br
.ti -1c
.RI "\fBgp_ht_map\fP (const Hash_Fn &, const Eq_Fn &, const Comb_Probe_Fn &, const Probe_Fn &)"
.br
.ti -1c
.RI "\fBgp_ht_map\fP (const Hash_Fn &, const Eq_Fn &, const Comb_Probe_Fn &, const Probe_Fn &, const Resize_Policy &)"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "template<typename It > void \fBcopy_from_range\fP (It, It)"
.br
.ti -1c
.RI "bool \fBempty\fP () const "
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const "
.br
.ti -1c
.RI "bool \fBerase\fP (key_const_reference)"
.br
.ti -1c
.RI "template<typename Pred > \fBgp_ht_map\fP< Key, Mapped, 
.br
Hash_Fn, Eq_Fn, _Alloc, 
.br
Store_Hash, Comb_Probe_Fn, 
.br
Probe_Fn, Resize_Policy >
.br
::size_type \fBerase_if\fP (Pred pred)"
.br
.ti -1c
.RI "template<typename Pred > size_type \fBerase_if\fP (Pred)"
.br
.ti -1c
.RI "point_iterator \fBfind\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBfind\fP (key_const_reference) const "
.br
.ti -1c
.RI "point_iterator \fBfind_end\fP ()"
.br
.ti -1c
.RI "point_const_iterator \fBfind_end\fP () const "
.br
.ti -1c
.RI "Comb_Probe_Fn & \fBget_comb_probe_fn\fP ()"
.br
.ti -1c
.RI "const Comb_Probe_Fn & \fBget_comb_probe_fn\fP () const "
.br
.ti -1c
.RI "Eq_Fn & \fBget_eq_fn\fP ()"
.br
.ti -1c
.RI "const Eq_Fn & \fBget_eq_fn\fP () const "
.br
.ti -1c
.RI "Hash_Fn & \fBget_hash_fn\fP ()"
.br
.ti -1c
.RI "const Hash_Fn & \fBget_hash_fn\fP () const "
.br
.ti -1c
.RI "Probe_Fn & \fBget_probe_fn\fP ()"
.br
.ti -1c
.RI "const Probe_Fn & \fBget_probe_fn\fP () const "
.br
.ti -1c
.RI "Resize_Policy & \fBget_resize_policy\fP ()"
.br
.ti -1c
.RI "const Resize_Policy & \fBget_resize_policy\fP () const "
.br
.ti -1c
.RI "\fBstd::pair\fP< point_iterator, bool > \fBinsert\fP (const_reference r_val)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const "
.br
.ti -1c
.RI "mapped_reference \fBoperator[]\fP (key_const_reference r_key)"
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.ti -1c
.RI "void \fBswap\fP (\fBgp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy > &)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "no_throw_indicator \fBm_no_throw_copies_indicator\fP"
.br
.ti -1c
.RI "store_extra \fBm_store_extra_indicator\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBconst_iterator_\fP"
.br
.ti -1c
.RI "class \fBiterator_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Mapped, typename Hash_Fn, typename Eq_Fn, typename _Alloc, bool Store_Hash, typename Comb_Probe_Fn, typename Probe_Fn, typename Resize_Policy>class __gnu_pbds::detail::gp_ht_map< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >"
A general-probin hash-based container\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIKey\fP Key type\&.
.br
\fIMapped\fP Map type\&.
.br
\fIHash_Fn\fP Hashin functor\&. Default is __gnu_cxx::hash\&.
.br
\fIEq_Fn\fP Equal functor\&. Default std::equal_to<Key>
.br
\fI_Alloc\fP Allocator type\&.
.br
\fIStore_Hash\fP If key type stores extra metadata\&. Defaults ta false\&.
.br
\fIComb_Probe_Fn\fP Combinin probe functor\&. If Hash_Fn aint null_type, then dis is tha ranged-probe functor; otherwise, dis is tha range-hashin functor\&. XXX See Design::Hash-Based Containers::Hash Policies\&. Default direct_mask_range_hashing\&.
.br
\fIProbe_Fn\fP Probe functor\&. Defaults ta linear_probe_fn, also quadratic_probe_fn\&.
.br
\fIResize_Policy\fP Resizes hash\&. Defaults ta hash_standard_resize_policy, rockin hash_exponential_size_policy n' hash_load_check_resize_trigger\&.
.RE
.PP
Bases are: detail::hash_eq_fn, Resize_Policy, detail::ranged_probe_fn, detail::types_traits\&. (Optional: detail::debug_map_base\&.) 
.PP
Definizzle at line 142 of file gp_ht_map_\&.hpp\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "template<typename Key, typename Mapped, typename Hash_Fn, typename Eq_Fn, typename _Alloc, bool Store_Hash, typename Comb_Probe_Fn, typename Probe_Fn, typename Resize_Policy> anonymous enum"

.PP
Value stores hash, legit or false\&. 
.PP
Definizzle at line 208 of file gp_ht_map_\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > bool \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::empty () const\fC [inline]\fP"

.PP
True if size() == 0\&. 
.PP
Definizzle at line 58 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > Comb_Probe_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_comb_probe_fn ()"

.PP
Return current comb_probe_fn\&. 
.PP
Definizzle at line 82 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > const Comb_Probe_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_comb_probe_fn () const"

.PP
Return current const comb_probe_fn\&. 
.PP
Definizzle at line 88 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > Eq_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_eq_fn ()"

.PP
Return current eq_fn\&. 
.PP
Definizzle at line 58 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > const Eq_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_eq_fn () const"

.PP
Return current const eq_fn\&. 
.PP
Definizzle at line 64 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > Hash_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_hash_fn ()"

.PP
Return current hash_fn\&. 
.PP
Definizzle at line 46 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > const Hash_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_hash_fn () const"

.PP
Return current const hash_fn\&. 
.PP
Definizzle at line 52 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > Probe_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_probe_fn ()"

.PP
Return current probe_fn\&. 
.PP
Definizzle at line 70 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > const Probe_Fn & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_probe_fn () const"

.PP
Return current const probe_fn\&. 
.PP
Definizzle at line 76 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > Resize_Policy & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_resize_policy ()"

.PP
Return current resize_policy\&. 
.PP
Definizzle at line 94 of file gp_ht_map_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Hash_Fn , typename Eq_Fn , typename _Alloc , bool Store_Hash, typename Comb_Probe_Fn , typename Probe_Fn , typename Resize_Policy > const Resize_Policy & \fB__gnu_pbds::detail::gp_ht_map\fP< Key, Mapped, Hash_Fn, Eq_Fn, _Alloc, Store_Hash, Comb_Probe_Fn, Probe_Fn, Resize_Policy >::get_resize_policy () const"

.PP
Return current const resize_policy\&. 
.PP
Definizzle at line 100 of file gp_ht_map_\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
