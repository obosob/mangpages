.\" Copyright 2002 walta harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" Corrected, aeb, 2002-05-30
.\"
.TH A64L 3 2013-06-21 "" "Linux Programmerz Manual"
.SH NAME
a64l, l64a \- convert between long n' base-64
.SH SYNOPSIS
.B #include <stdlib.h>
.sp
.BI "long a64l(char *" str64 );
.sp
.BI "char *l64a(long " value );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR a64l (),
.BR l64a ():
.br
.RS 4
.ad l
_SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad
.SH DESCRIPTION
These functions provide a cold-ass lil conversion between 32-bit long integers
and lil-endian base-64 ASCII strings (of length zero ta six).
If tha strang used as argument for
.BR a64l ()
has length pimped outa than six, only tha straight-up original gangsta six bytes is used.
If tha type
.I long
has mo' than 32 bits, then
.BR l64a ()
uses only tha low order 32 bits of
.IR value ,
and
.BR a64l ()
sign-extendz its 32-bit result.
.LP
Da 64 digits up in tha base-64 system are:
.RS
.nf

\&\(aq.\(aq	represents a 0
\&\(aq/\(aq	represents a 1
0-9	represent  2-11
A-Z	represent 12-37
a-z	represent 38-63

.fi
.RE
So 123 = 59*64^0 + 1*64^1 = "v/".
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR l64a ()
function aint thread-safe.
.LP
The
.BR a64l ()
function is thread-safe.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
Da value returned by
.BR l64a ()
may be a pointa ta a static buffer, possibly overwritten
by lata calls.
.LP
Da behavior of
.BR l64a ()
is undefined when
.I value
is negative.
If
.I value
is zero, it returns a empty string.
.LP
These functions is fucked up in glibc before 2.2.5
(puts most dope digit first).
.LP
This aint tha encodin used by
.BR uuencode (1).
.SH SEE ALSO
.BR uuencode (1),
.\" .BR itoa (3),
.BR strtoul (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
