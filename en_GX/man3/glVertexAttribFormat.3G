'\" t
.\"     Title: glVertexAttribFormat
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLVERTEXATTRIBFORMAT" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glVertexAttribFormat \- specify tha organization of vertex arrays
.SH "C SPECIFICATION"
.HP \w'void\ glVertexAttribFormat('u
.BI "void glVertexAttribFormat(GLuint\ " "attribindex" ", GLint\ " "size" ", GLenum\ " "type" ", GLboolean\ " "normalized" ", GLuint\ " "relativeoffset" ");"
.HP \w'void\ glVertexAttribIFormat('u
.BI "void glVertexAttribIFormat(GLuint\ " "attribindex" ", GLint\ " "size" ", GLenum\ " "type" ", GLuint\ " "relativeoffset" ");"
.HP \w'void\ glVertexAttribLFormat('u
.BI "void glVertexAttribLFormat(GLuint\ " "attribindex" ", GLint\ " "size" ", GLenum\ " "type" ", GLuint\ " "relativeoffset" ");"
.SH "PARAMETERS"
.PP
\fIattribindex\fR
.RS 4
Da generic vertex attribute array bein busted lyrics about\&.
.RE
.PP
\fIsize\fR
.RS 4
Da number of joints per vertex dat is stored up in tha array\&.
.RE
.PP
\fItype\fR
.RS 4
Da type of tha data stored up in tha array\&.
.RE
.PP
\fInormalized\fR
.RS 4
Da distizzle between elements within tha buffer\&.
.RE
.PP
\fIrelativeoffset\fR
.RS 4
Da distizzle between elements within tha buffer\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglVertexAttribFormat\fR,
\fBglVertexAttribIFormat\fR
and
\fBglVertexAttribLFormat\fR
specify tha organization of data up in vertex arrays\&.
\fIattribindex\fR
specifies tha index of tha generic vertex attribute array whose data layout is bein busted lyrics about, n' must be less than tha value of
\fBGL_MAX_VERTEX_ATTRIBS\fR\&.
.PP
\fIsize\fR
determines tha number of components per vertex is allocated ta tha specifed attribute n' must be 1, 2, 3 or 4\&.
\fItype\fR
indicates tha type of tha data\&. If
\fItype\fR
is one of
\fBGL_BYTE\fR,
\fBGL_SHORT\fR,
\fBGL_INT\fR,
\fBGL_FIXED\fR,
\fBGL_FLOAT\fR,
\fBGL_HALF_FLOAT\fR, and
\fBGL_DOUBLE\fR
indicate types
GLbyte,
GLshort,
GLint,
GLfixed,
GLfloat,
GLhalf, and
GLdouble, respectively; tha joints
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR, and
\fBGL_UNSIGNED_INT\fR
indicate types
GLubyte,
GLushort, and
GLuint, respectively; n' tha joints
\fBGL_INT_2_10_10_10_REV\fR
and
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
indicatin respectively four signed or unsigned elements packed tha fuck into a single
GLuint\&.
.PP
\fBglVertexAttribLFormat\fR
is used ta specify layout fo' data associated wit a generic attribute variable declared as 64\-bit double precision components\&. For
\fBglVertexAttribLFormat\fR,
\fItype\fR
must be
\fBGL_DOUBLE\fR\&. In contrast to
\fBglVertexAttribFormat\fR, which will cause data declared as
\fBGL_DOUBLE\fR
to be converted ta 32\-bit representation,
\fBglVertexAttribLFormat\fR
causes such data ta be left up in its natural, 64\-bit representation\&.
.PP
For
\fBglVertexAttribFormat\fR, if
\fInormalized\fR
is
\fBGL_TRUE\fR, then integer data is normalized ta tha range [\-1, 1] or [0, 1] if it is signed or unsigned, respectively\&. If
\fInoramlized\fR
is
\fBGL_FALSE\fR
then integer data is directly converted ta floatin point\&.
.PP
\fIrelativeoffset\fR
is tha offset, measured up in basic machine unitz of tha straight-up original gangsta element relatizzle ta tha start of tha vertex buffer bindin dis attribute fetches from\&.
.PP
\fBglVertexAttribFormat\fR
should be used ta describe vertex attribute layout fo' floating\-point vertex attributes,
\fBglVertexAttribIFormat\fR
should be used ta describe vertex attribute layout fo' integer vertex attribute and
\fBglVertexAttribLFormat\fR
should be used ta describe tha layout fo' 64\-bit vertex attributes\&. Data fo' a array specified by
\fBglVertexAttribIFormat\fR
will always be left as integer joints; such data is referred ta as pure integers\&.
.SH "ERRORS"
.PP
\fBGL_INVAILD_VALUE\fR
is generated if
\fIattribindex\fR
is pimped outa than or equal ta tha value of
\fBGL_MAX_VERTEX_ATTRIBS\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIsize\fR
is not one of tha accepted joints\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIrelativeoffset\fR
is pimped outa than tha value of
\fBGL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItype\fR
is not one of tha accepted tokens\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if no vertex array object is bound\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with arguments
\fBGL_MAX_VERTEX_ATTRIB_BINDINGS\fR, or
\fBGL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET\fR\&.
.PP
\fBglGetVertexAttrib\fR()
with argument
\fBGL_VERTEX_ATTRIB_RELATIVE_OFFSET\fR\&.
.SH "SEE ALSO"
.PP
\fBglBindVertexBuffer\fR(),
\fBglVertexAttribBinding\fR(),
\fBglVertexAttribPointer\fR(),
\fBglVertexBindingDivisor\fR(),
\fBglVertexAttribPointer\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
