" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::scoped_allocator_adaptor< _OuterAlloc, _InnerAllocs > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits _OuterAlloc\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fB__traits::const_pointer\fP \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
\fB__traits::const_void_pointer\fP \fBconst_void_pointer\fP"
.br
.ti -1c
.RI "typedef \fB__traits::difference_type\fP \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef __inner_type::__type \fBinner_allocator_type\fP"
.br
.ti -1c
.RI "typedef _OuterAlloc \fBouter_allocator_type\fP"
.br
.ti -1c
.RI "typedef \fB__traits::pointer\fP \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBconditional\fP< __any_of
.br
< __propagate_on_copy, 
.br
_OuterAlloc, _InnerAllocs\&.\&.\&.>
.br
::value, \fBtrue_type\fP, \fBfalse_type\fP >
.br
::type \fBpropagate_on_container_copy_assignment\fP"
.br
.ti -1c
.RI "typedef \fBconditional\fP< __any_of
.br
< __propagate_on_move, 
.br
_OuterAlloc, _InnerAllocs\&.\&.\&.>
.br
::value, \fBtrue_type\fP, \fBfalse_type\fP >
.br
::type \fBpropagate_on_container_move_assignment\fP"
.br
.ti -1c
.RI "typedef \fBconditional\fP< __any_of
.br
< __propagate_on_swap, 
.br
_OuterAlloc, _InnerAllocs\&.\&.\&.>
.br
::value, \fBtrue_type\fP, \fBfalse_type\fP >
.br
::type \fBpropagate_on_container_swap\fP"
.br
.ti -1c
.RI "typedef \fB__traits::size_type\fP \fBsize_type\fP"
.br
.ti -1c
.RI "typedef \fB__traits::value_type\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fB__traits::void_pointer\fP \fBvoid_pointer\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename _Outer2 > \fBscoped_allocator_adaptor\fP (_Outer2 &&__outer, const _InnerAllocs &\&.\&.\&.__inner)"
.br
.ti -1c
.RI "\fBscoped_allocator_adaptor\fP (const \fBscoped_allocator_adaptor\fP &__other)"
.br
.ti -1c
.RI "\fBscoped_allocator_adaptor\fP (\fBscoped_allocator_adaptor\fP &&__other)"
.br
.ti -1c
.RI "template<typename _Outer2 > \fBscoped_allocator_adaptor\fP (const \fBscoped_allocator_adaptor\fP< _Outer2, _InnerAllocs\&.\&.\&.> &__other)"
.br
.ti -1c
.RI "template<typename _Outer2 > \fBscoped_allocator_adaptor\fP (\fBscoped_allocator_adaptor\fP< _Outer2, _InnerAllocs\&.\&.\&.> &&__other)"
.br
.ti -1c
.RI "pointa \fBallocate\fP (size_type __n)"
.br
.ti -1c
.RI "pointa \fBallocate\fP (size_type __n, const_void_pointa __hint)"
.br
.ti -1c
.RI "template<typename _Tp , typename\&.\&.\&. _Args> void \fBconstruct\fP (_Tp *__p, _Args &&\&.\&.\&.__args)"
.br
.ti -1c
.RI "template<typename _T1 , typename _T2 , typename\&.\&.\&. _Args1, typename\&.\&.\&. _Args2> void \fBconstruct\fP (\fBpair\fP< _T1, _T2 > *__p, \fBpiecewise_construct_t\fP, \fBtuple\fP< _Args1\&.\&.\&.> __x, \fBtuple\fP< _Args2\&.\&.\&.> __y)"
.br
.ti -1c
.RI "template<typename _T1 , typename _T2 > void \fBconstruct\fP (\fBpair\fP< _T1, _T2 > *__p)"
.br
.ti -1c
.RI "template<typename _T1 , typename _T2 , typename _Up , typename _Vp > void \fBconstruct\fP (\fBpair\fP< _T1, _T2 > *__p, _Up &&__u, _Vp &&__v)"
.br
.ti -1c
.RI "template<typename _T1 , typename _T2 , typename _Up , typename _Vp > void \fBconstruct\fP (\fBpair\fP< _T1, _T2 > *__p, const \fBpair\fP< _Up, _Vp > &__x)"
.br
.ti -1c
.RI "template<typename _T1 , typename _T2 , typename _Up , typename _Vp > void \fBconstruct\fP (\fBpair\fP< _T1, _T2 > *__p, \fBpair\fP< _Up, _Vp > &&__x)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (pointa __p, size_type __n)"
.br
.ti -1c
.RI "template<typename _Tp > void \fBdestroy\fP (_Tp *__p)"
.br
.ti -1c
.RI "inner_allocator_type & \fBinner_allocator\fP () noexcept"
.br
.ti -1c
.RI "const inner_allocator_type & \fBinner_allocator\fP () const noexcept"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const "
.br
.ti -1c
.RI "outer_allocator_type & \fBouter_allocator\fP () noexcept"
.br
.ti -1c
.RI "const outer_allocator_type & \fBouter_allocator\fP () const noexcept"
.br
.ti -1c
.RI "\fBscoped_allocator_adaptor\fP \fBselect_on_container_copy_construction\fP () const "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename _Outa , typename\&.\&.\&. _Inner> class \fBscoped_allocator_adaptor\fP"
.br
.ti -1c
.RI "template<typename\&.\&.\&. > class \fB__inner_type_impl\fP"
.br
.ti -1c
.RI "template<typename _OutA1 , typename _OutA2 , typename\&.\&.\&. _InA> bool \fBoperator==\fP (const \fBscoped_allocator_adaptor\fP< _OutA1, _InA\&.\&.\&.> &__a, const \fBscoped_allocator_adaptor\fP< _OutA2, _InA\&.\&.\&.> &__b) noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _OuterAlloc, typename\&.\&.\&. _InnerAllocs>class std::scoped_allocator_adaptor< _OuterAlloc, _InnerAllocs >"
Primary class template\&. 
.PP
Definizzle at line 95 of file scoped_allocator\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
