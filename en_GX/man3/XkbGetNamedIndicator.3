.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbGetNamedIndicator 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbGetNamedIndicator \- Look up tha indicator map n' other shiznit fo' a 
indicator by name
.SH SYNOPSIS
.HP
.B Bool XkbGetNamedIndicator
.BI "(\^Display *" "dpy" "\^,"
.BI "unsigned int " "dev_spec" "\^,"
.BI "Atom " "name" "\^,"
.BI "int *" "ndx_rtrn" "\^,"
.BI "Bool *" "state_rtrn" "\^,"
.BI "XkbIndicatorMapPtr " "map_rtrn" "\^,"
.BI "Bool *" "real_rtrn" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- dpy
connection ta tha X server 
.TP
.I \- dev_spec
keyboard thang ID, or XkbUseCoreKbd
.TP
.I \- name
name of tha indicator ta be retrieved
.TP
.I \- ndx_rtrn
backfilled wit tha index of tha retrieved indicator
.TP
.I \- state_rtrn
backfilled wit tha current state of tha retrieved indicator
.TP
.I \- map_rtrn
 backfilled wit tha mappin fo' tha retrieved indicator 
.TP
.I \- real_rtrn
backfilled wit True if tha named indicator is real (physical)
.SH DESCRIPTION
.LP
Xkb also allows applications ta refer ta indicators by name. Use 
.I XkbGetNames 
to git tha indicator names. Usin names eliminates tha need fo' hard-codin 
bitmask joints fo' particular keyboards. For example, instead of rockin 
vendor-specific constants like fuckin WSKBLed_ScrollLock mask on Digital 
workstations or XLED_SCROLL_LOCK on Sun workstations, you can instead use
.I XkbGetNamedIndicator 
to look up shiznit on tha indicator named "Scroll Lock." 

If tha thang specified by 
.I device_spec 
has a indicator named 
.I name, XkbGetNamedIndicator 
returns True n' populates tha rest of tha parametas wit shiznit bout tha 
indicator. Shiiit, dis aint no joke. Otherwise, 
.I XkbGetNamedIndicator 
returns False.

Da 
.I ndx_rtrn 
field returns tha zero-based index of tha named indicator. Shiiit, dis aint no joke. This index is tha bit 
posizzle ta use up in any function call dat requires a mask of indicator bits, as 
well as tha indicatorz index tha fuck into tha XkbIndicatorRec array of indicator maps. 
.I state_rtrn 
returns tha current state of tha named indicator (True = on, False = off). 
.I map_rtrn 
returns tha indicator map fo' tha named indicator. Shiiit, dis aint no joke. In addition, if tha indicator 
is mapped ta a physical LED, tha 
.I real_rtrn 
parameta is set ta True.

Each of tha "
.I _rtrn
" arguments is optional; you can pass NULL fo' any unneeded "
.I _rtrn
" arguments.
.SH "RETURN VALUES"
.TP 15
True
Da 
.I XkbGetNamedIndicator 
function returns True if tha thang specified by 
.I device_spec 
has a indicator named 
.I name.
.TP 15
False
Da 
.I XkbGetNamedIndicator 
function returns False if tha thang specified by 
.I device_spec 
does not have a indicator named 
.I name.
.SH "SEE ALSO"
.BR XkbGetNames (3)
