'\" t
.\"     Title: glStencilFunc
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLSTENCILFUNC" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glStencilFunc \- set front n' back function n' reference value fo' stencil testing
.SH "C SPECIFICATION"
.HP \w'void\ glStencilFunc('u
.BI "void glStencilFunc(GLenum\ " "func" ", GLint\ " "ref" ", GLuint\ " "mask" ");"
.SH "PARAMETERS"
.PP
\fIfunc\fR
.RS 4
Specifies tha test function\&. Eight symbolic constants is valid:
\fBGL_NEVER\fR,
\fBGL_LESS\fR,
\fBGL_LEQUAL\fR,
\fBGL_GREATER\fR,
\fBGL_GEQUAL\fR,
\fBGL_EQUAL\fR,
\fBGL_NOTEQUAL\fR, and
\fBGL_ALWAYS\fR\&. Da initial value is
\fBGL_ALWAYS\fR\&.
.RE
.PP
\fIref\fR
.RS 4
Specifies tha reference value fo' tha stencil test\&.
\fIref\fR
is clamped ta tha range
0 2 n \- 1, where
n
is tha number of bitplanes up in tha stencil buffer\&. Da initial value is 0\&.
.RE
.PP
\fImask\fR
.RS 4
Specifies a mask dat is ANDed wit both tha reference value n' tha stored stencil value when tha test is done\&. Da initial value be all 1\*(Aqs\&.
.RE
.SH "DESCRIPTION"
.PP
Stenciling, like depth\-buffering, enablez n' disablez drawin on a per\-pixel basis\&. Right back up in yo muthafuckin ass. Stencil planes is first drawn tha fuck into rockin GL drawin primitives, then geometry n' images is rendered rockin tha stencil planes ta mask up portionz of tha screen\&. Right back up in yo muthafuckin ass. Stencilin is typically used up in multipass renderin algorithms ta big up special effects, like fuckin decals, outlining, n' constructizzle solid geometry rendering\&.
.PP
Da stencil test conditionally eliminates a pixel based on tha outcome of a cold-ass lil comparison between tha reference value n' tha value up in tha stencil buffer\&. To enable n' disable tha test, call
\fBglEnable\fR()
and
\fBglDisable\fR()
with argument
\fBGL_STENCIL_TEST\fR\&. To specify actions based on tha outcome of tha stencil test, call
\fBglStencilOp\fR()
or
\fBglStencilOpSeparate\fR()\&.
.PP
There can be two separate sets of
\fIfunc\fR,
\fIref\fR, and
\fImask\fR
parameters; one affects back\-facin polygons, n' tha other affects front\-facin polygons as well as other non\-polygon primitives\&.
\fBglStencilFunc\fR()
sets both front n' back stencil state ta tha same joints\&. Use
\fBglStencilFuncSeparate\fR()
to set front n' back stencil state ta different joints\&.
.PP
\fIfunc\fR
is a symbolic constant dat determines tha stencil comparison function\&. Well shiiiit, it accepts one of eight joints, shown up in tha followin list\&.
\fIref\fR
is a integer reference value dat is used up in tha stencil comparison\&. Well shiiiit, it is clamped ta tha range
0 2 n \- 1, where
n
is tha number of bitplanes up in tha stencil buffer\&.
\fImask\fR
is bitwise ANDed wit both tha reference value n' tha stored stencil value, wit tha ANDed joints participatin up in tha comparison\&.
.PP
If
\fIstencil\fR
represents tha value stored up in tha correspondin stencil buffer location, tha followin list shows tha effect of each comparison function dat can be specified by
\fIfunc\fR\&. Only if tha comparison succeedz is tha pixel passed all up in ta tha next stage up in tha rasterization process (see
\fBglStencilOp\fR())\& fo' realz. All tests treat
\fIstencil\fR
values as unsigned integers up in tha range
0 2 n \- 1, where
n
is tha number of bitplanes up in tha stencil buffer\&.
.PP
Da followin joints is accepted by
\fIfunc\fR:
.PP
\fBGL_NEVER\fR
.RS 4
Always fails\&.
.RE
.PP
\fBGL_LESS\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) < (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_LEQUAL\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) <= (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_GREATER\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) > (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_GEQUAL\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) >= (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_EQUAL\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) = (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_NOTEQUAL\fR
.RS 4
Passes if (
\fIref\fR
&
\fImask\fR
) != (
\fIstencil\fR
&
\fImask\fR
)\&.
.RE
.PP
\fBGL_ALWAYS\fR
.RS 4
Always passes\&.
.RE
.SH "NOTES"
.PP
Initially, tha stencil test is disabled\&. If there is no stencil buffer, no stencil modification can occur n' it be as if tha stencil test always passes\&.
.PP
\fBglStencilFunc\fR()
is tha same ol' dirty as calling
\fBglStencilFuncSeparate\fR()
with
\fIface\fR
set to
\fBGL_FRONT_AND_BACK\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIfunc\fR
is not one of tha eight accepted joints\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_STENCIL_FUNC\fR,
\fBGL_STENCIL_VALUE_MASK\fR,
\fBGL_STENCIL_REF\fR,
\fBGL_STENCIL_BACK_FUNC\fR,
\fBGL_STENCIL_BACK_VALUE_MASK\fR,
\fBGL_STENCIL_BACK_REF\fR, or
\fBGL_STENCIL_BITS\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_STENCIL_TEST\fR
.SH "SEE ALSO"
.PP
\fBglBlendFunc\fR(),
\fBglDepthFunc\fR(),
\fBglEnable\fR(),
\fBglLogicOp\fR(),
\fBglStencilFuncSeparate\fR(),
\fBglStencilMask\fR(),
\fBglStencilMaskSeparate\fR(),
\fBglStencilOp\fR(),
\fBglStencilOpSeparate\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
