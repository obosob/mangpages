'\" t
.\"     Title: glGetUniformLocation
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETUNIFORMLOCATION" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetUniformLocation \- Returns tha location of a uniform variable
.SH "C SPECIFICATION"
.HP \w'GLint\ glGetUniformLocation('u
.BI "GLint glGetUniformLocation(GLuint\ " "program" ", const\ GLchar\ *" "name" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies tha program object ta be queried\&.
.RE
.PP
\fIname\fR
.RS 4
Points ta a null terminated strang containin tha name of tha uniform variable whose location is ta be queried\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetUniformLocation \fR
returns a integer dat represents tha location of a specific uniform variable within a program object\&.
\fIname\fR
must be a null terminated strang dat gotz nuff no white space\&.
\fIname\fR
must be a actizzle uniform variable name in
\fIprogram\fR
that aint a structure, a array of structures, or a subcomponent of a vector or a matrix\&. This function returns \-1 if
\fIname\fR
does not correspond ta a actizzle uniform variable in
\fIprogram\fR, if
\fIname\fR
starts wit tha reserved prefix "gl_", or if
\fIname\fR
is associated wit a atomic counta or a named uniform block\&.
.PP
Uniform variablez dat is structures or arrayz of structures may be queried by calling
\fBglGetUniformLocation\fR
for each field within tha structure\&. Da array element operator "[]" n' tha structure field operator "\&." may be used in
\fIname\fR
in order ta select elements within a array or fieldz within a structure\&. Da result of rockin these operators aint allowed ta be another structure, a array of structures, or a subcomponent of a vector or a matrix\&. Except if tha last part of
\fIname\fR
indicates a uniform variable array, tha location of tha straight-up original gangsta element of a array can be retrieved by rockin tha name of tha array, or by rockin tha name appended by "[0]"\&.
.PP
Da actual locations assigned ta uniform variablez is not known until tha program object is linked successfully\& fo' realz. Afta linkin has occurred, tha command
\fBglGetUniformLocation\fR
can be used ta obtain tha location of a uniform variable\&. This location value can then be passed to
\fBglUniform\fR()
to set tha value of tha uniform variable or to
\fBglGetUniform\fR()
in order ta query tha current value of tha uniform variable\& fo' realz. Afta a program object has been linked successfully, tha index joints fo' uniform variablez remain fixed until tha next link command occurs\&. Uniform variable locations n' joints can only be queried afta a link if tha link was successful\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not a value generated by OpenGL\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
is not a program object\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
has not been successfully linked\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetActiveUniform\fR()
with arguments
\fIprogram\fR
and tha index of a actizzle uniform variable
.PP
\fBglGetProgram\fR()
with arguments
\fIprogram\fR
and
\fBGL_ACTIVE_UNIFORMS\fR
or
\fBGL_ACTIVE_UNIFORM_MAX_LENGTH\fR
.PP
\fBglGetUniform\fR()
with arguments
\fIprogram\fR
and tha name of a uniform variable
.PP
\fBglIsProgram\fR()
.SH "SEE ALSO"
.PP
\fBglLinkProgram\fR(),
\fBglUniform\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2005 3Dlabs Inc\&. Ltd\&.
\(co
2011 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
