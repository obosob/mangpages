" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__detail::_Scanner< _InputIterator > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::__detail::_Scanner_base\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::iterator_traits
.br
< _IteratorT >::value_type \fB_CharT\fP"
.br
.ti -1c
.RI "typedef const \fBstd::ctype\fP< _CharT > \fB_CtypeT\fP"
.br
.ti -1c
.RI "typedef 
.br
\fBregex_constants::syntax_option_type\fP \fB_FlagT\fP"
.br
.ti -1c
.RI "typedef _InputIterator \fB_IteratorT\fP"
.br
.ti -1c
.RI "typedef unsigned int \fB_StateT\fP"
.br
.ti -1c
.RI "typedef \fBstd::basic_string\fP< _CharT > \fB_StringT\fP"
.br
.ti -1c
.RI "enum \fB_TokenT\fP { \fB_S_token_anychar\fP, \fB_S_token_backref\fP, \fB_S_token_bracket_begin\fP, \fB_S_token_bracket_end\fP, \fB_S_token_inverse_class\fP, \fB_S_token_char_class_name\fP, \fB_S_token_closure0\fP, \fB_S_token_closure1\fP, \fB_S_token_collelem_multi\fP, \fB_S_token_collelem_single\fP, \fB_S_token_collsymbol\fP, \fB_S_token_comma\fP, \fB_S_token_dash\fP, \fB_S_token_dup_count\fP, \fB_S_token_eof\fP, \fB_S_token_equiv_class_name\fP, \fB_S_token_interval_begin\fP, \fB_S_token_interval_end\fP, \fB_S_token_line_begin\fP, \fB_S_token_line_end\fP, \fB_S_token_opt\fP, \fB_S_token_or\fP, \fB_S_token_ord_char\fP, \fB_S_token_quoted_char\fP, \fB_S_token_subexpr_begin\fP, \fB_S_token_subexpr_end\fP, \fB_S_token_word_begin\fP, \fB_S_token_word_end\fP, \fB_S_token_unknown\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_Scanner\fP (_IteratorT __begin, _IteratorT __end, _FlagT __flags, \fBstd::locale\fP __loc)"
.br
.ti -1c
.RI "void \fB_M_advance\fP ()"
.br
.ti -1c
.RI "\fB_TokenT\fP \fB_M_token\fP () const "
.br
.ti -1c
.RI "const \fB_StringT\fP & \fB_M_value\fP () const "
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr _StateT \fB_S_state_at_start\fP"
.br
.ti -1c
.RI "static constexpr _StateT \fB_S_state_in_brace\fP"
.br
.ti -1c
.RI "static constexpr _StateT \fB_S_state_in_bracket\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _InputIterator>class std::__detail::_Scanner< _InputIterator >"
struct _Scanner\&. Right back up in yo muthafuckin ass. Scans a input range fo' regex tokens\&. 

Da _Scanner class interprets tha regular expression pattern up in tha input range passed ta its constructor as a sequence of parse tokens passed ta tha regular expression compiler\&. Da sequence of tokens provided dependz on tha flag settings passed ta tha constructor: different regular expression grammars will interpret tha same input pattern up in syntactically different ways\&. 
.PP
Definizzle at line 65 of file regex_compiler\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "template<typename _InputIterator> enum \fBstd::__detail::_Scanner::_TokenT\fP"

.PP
Token types returned from tha scanner\&. 
.PP
Definizzle at line 75 of file regex_compiler\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
