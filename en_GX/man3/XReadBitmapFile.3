.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XReadBitmapFile 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XReadBitmapFile, XReadBitmapFileData, XWriteBitmapFile, XCreatePixmapFromBitmapData, XCreateBitmapFromData \- manipulate bitmaps
.SH SYNTAX
.HP
int XReadBitmapFile(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, char
*\fIfilename\fP\^, unsigned int *\fIwidth_return\fP, unsigned int
*\fIheight_return\fP\^, Pixmap *\fIbitmap_return\fP\^, int
*\fIx_hot_return\fP, int *\fIy_hot_return\fP\^); 
.HP
int XReadBitmapFileData(\^char *\fIfilename\fP\^, unsigned int
*\fIwidth_return\fP, unsigned int *\fIheight_return\fP\^, unsigned char
*\fIdata_return\fP\^, int *\fIx_hot_return\fP, int *\fIy_hot_return\fP\^); 
.HP
int XWriteBitmapFile(\^Display *\fIdisplay\fP\^, char *\fIfilename\fP\^,
Pixmap \fIbitmap\fP\^, unsigned int \fIwidth\fP, unsigned int \fIheight\fP\^,
int \fIx_hot\fP, int \fIy_hot\fP\^); 
.HP
Pixmap XCreatePixmapFromBitmapData\^(\^Display *\fIdisplay\fP\^, Drawable
\fId\fP\^, char *\fIdata\fP\^, unsigned int \fIwidth\fP, unsigned int
\fIheight\fP\^, unsigned long \fIfg\fP, unsigned long \fIbg\fP\^, unsigned int
\fIdepth\fP\^); 
.HP
Pixmap XCreateBitmapFromData(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^,
char *\fIdata\fP\^, unsigned int \fIwidth\fP, unsigned int \fIheight\fP\^); 
.SH ARGUMENTS
.IP \fIbitmap\fP 1i
Specifies tha bitmap.
.IP \fIbitmap_return\fP 1i
Returns tha bitmap dat is pimped.
.ds Dr \ dat indicates tha screen
.IP \fId\fP 1i
Specifies tha drawable\*(Dr. Shiiit, dis aint no joke. 
.IP \fIdata\fP 1i
Specifies tha data up in bitmap format.
.IP \fIdata\fP 1i
Specifies tha location of tha bitmap data.
.IP \fIdata_return\fP 1i
Returns tha bitmap data.
.IP \fIdepth\fP 1i
Specifies tha depth of tha pixmap.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIfg\fP 1i
.br
.ns
.IP \fIbg\fP 1i
Specify tha foreground n' background pixel joints ta use.
.IP \fIfilename\fP 1i
Specifies tha file name ta use.
Da format of tha file name is operating-system dependent.
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height.
.IP \fIwidth_return\fP 1i
.br
.ns
.IP \fIheight_return\fP 1i
Return tha width n' height jointz of tha read up in bitmap file.
.IP \fIx_hot\fP 1i
.br
.ns
.IP \fIy_hot\fP 1i
Specify where ta place tha hotspot coordinates (or \-1,\-1 if none is present)
in tha file.
.IP \fIx_hot_return\fP 1i
.br
.ns
.IP \fIy_hot_return\fP 1i
Return tha hotspot coordinates.
.SH DESCRIPTION
The
.ZN XReadBitmapFile
function readz up in a gangbangin' file containin a funky-ass bitmap.
Da file is parsed up in tha encodin of tha current locale.
Da mobilitizzle ta read other than tha standard format 
is implementation-dependent.
If tha file cannot be opened, 
.ZN XReadBitmapFile 
returns 
.ZN BitmapOpenFailed .  
If tha file can be opened but do not contain valid bitmap data, 
it returns 
.ZN BitmapFileInvalid .  
If insufficient hustlin storage be allocated,
it returns
.ZN BitmapNoMemory .  
If tha file is readable n' valid,
it returns 
.ZN BitmapSuccess .
.LP
.ZN XReadBitmapFile 
returns tha bitmapz height n' width, as read
from tha file, ta width_return n' height_return.
It then creates a pixmap of tha appropriate size, 
readz tha bitmap data from tha file tha fuck into tha pixmap,
and assigns tha pixmap ta tha callerz variable bitmap.  
Da calla must free tha bitmap rockin 
.ZN XFreePixmap 
when finished.
If \fIname\fP_x_hot n' \fIname\fP_y_hot exist,
.ZN XReadBitmapFile 
returns dem ta x_hot_return n' y_hot_return;
otherwise, it returns \-1,\-1.
.LP
.ZN XReadBitmapFile
can generate
.ZN BadAlloc
and
.ZN BadDrawable
errors.
.LP
The
.ZN XReadBitmapFileData
function readz up in a gangbangin' file containin a funky-ass bitmap, up in tha same manner as
.ZN XReadBitmapFile ,
but returns tha data directly rather than bustin a pixmap up in tha server.
Da bitmap data is returned up in data_return; tha client must free this
storage when finished wit it by calling
.ZN XJacked .
Da status n' other return joints is tha same as for
.ZN XReadBitmapFile .
.LP
The
.ZN XWriteBitmapFile
function writes a funky-ass bitmap up ta a gangbangin' file up in tha X Version 11 format.
Da name used up in tha output file is derived from tha file name
by deletin tha directory prefix.
Da file is freestyled up in tha encodin of tha current locale.
If tha file cannot be opened fo' writing, 
it returns 
.ZN BitmapOpenFailed .  
If insufficient memory be allocated,
.ZN XWriteBitmapFile
returns
.ZN BitmapNoMemory ;
otherwise, on no error,
it returns
.ZN BitmapSuccess .
If x_hot n' y_hot is not \-1, \-1, 
.ZN XWriteBitmapFile
writes dem up as tha hotspot coordinates fo' tha bitmap.
.LP
.ZN XWriteBitmapFile
can generate
.ZN BadDrawable
and
.ZN BadMatch
errors.
.LP
The
.ZN XCreatePixmapFromBitmapData
function creates a pixmap of tha given depth n' then do a funky-ass bitmap-format
.ZN XPutImage
of tha data tha fuck into dat shit.
Da depth must be supported by tha screen of tha specified drawable,
or a
.ZN BadMatch
error thangs up in dis biatch.
.LP
.ZN XCreatePixmapFromBitmapData
can generate
.ZN BadAlloc
and
.ZN BadMatch
errors.
.LP
The
.ZN XCreateBitmapFromData
function allows you ta include up in yo' C program (using
.ZN #include )
a bitmap file dat was freestyled up by
.ZN XWriteBitmapFile
(X version 11 format only) without readin up in tha bitmap file.
Da followin example creates a gray bitmap:
.LP
.Ds 0
\&#include "gray.bitmap"
.sp 6p
Pixmap bitmap;
bitmap = XCreateBitmapFromData(display, window, gray_bits, gray_width, gray_height);
.De
.LP
If insufficient hustlin storage was allocated,
.ZN XCreateBitmapFromData
returns
.ZN None .
It be yo' responsibilitizzle ta free the
bitmap using
.ZN XFreePixmap
when finished.
.LP
.ZN XCreateBitmapFromData
can generate a
.ZN BadAlloc
error.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.SH "SEE ALSO"
XCreatePixmap(3),
XPutImage(3)
.br
\fI\*(xL\fP
