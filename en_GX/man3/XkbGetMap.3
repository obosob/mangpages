'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbGetMap 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbGetMap \- Allocate a XkbDescRec structure n' populate it wit tha serverz 
keyboard 
client map n' server map
.SH SYNOPSIS
.HP
.B XkbDescPtr XkbGetMap
.BI "(\^Display *" "display" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "unsigned int " "device_spec" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- display
connection ta X server
.TP
.I \- which
mask selectin subcomponents ta populate
.TP
.I \- device_spec
device_id, or XkbUseCoreKbd
.SH DESCRIPTION
.LP
Xkb serves up two functions ta obtain tha keyboard mappin components from tha 
server n' shit. Da 
first function, 
.I XkbGetMap, 
allocates a XkbDescRec structure, retrieves mappin components from tha server, 
and 
stores dem up in tha XkbDescRec structure it just allocated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da second function, 
.I XkbGetUpdatedMap, 
retrieves mappin components from tha server n' stores dem up in a XkbDescRec 
structure 
that has previously been allocated.

To allocate a XkbDescRec structure n' populate it wit tha serverz keyboard 
client map 
and server map, use 
.I XkbGetMap. XkbGetMap 
is similar ta 
.I XkbGetKeyboard,
but is used only fo' obtainin tha address of a XkbDescRec structure dat is 
populated 
with keyboard mappin components, n' you can put dat on yo' toast. Well shiiiit, it allows finer control over which 
substructurez of tha 
keyboard mappin components is ta be populated.
.I XkbGetKeyboard 
always returns straight-up populated components, while 
.I XkbGetMap 
can be instructed ta return a partially populated component.

Da 
.I which mask be a funky-ass bitwise inclusive OR of tha masks defined up in Table 14.1. Only 
those 
portionz of tha keyboard server map n' tha keyboard client maps dat is 
specified up in 
.I which 
are allocated n' populated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. 

In addizzle ta allocatin n' obtainin tha server map n' tha client map,
.I XkbGetMap 
also sets tha 
.I device_spec, 
the 
.I min_key_code, 
and 
.I max_key_code 
fieldz of tha keyboard description. I aint talkin' bout chicken n' gravy biatch. 

.I XkbGetMap 
is synchronous; it queries tha server fo' tha desired shiznit, waits fo' a 
reply, n' 
then returns. If successful, 
.I XkbGetMap 
returns a pointa ta tha XkbDescRec structure it allocated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If unsuccessful,
.I XkbGetMap 
returns NULL. When unsuccessful, one of tha followin protocol errors be also 
generated: 
BadAlloc (unable ta allocate tha XkbDescRec structure), BadValue (some mask bits 
in 
.I which 
are undefined), or BadImplementation (a compatible version of tha Xkb extension 
is not 
available up in tha server). To free tha returned data, use
.I XkbFreeClientMap.

Xkb also serves up convenience functions ta git partial component definitions 
from tha 
server n' shit. These functions is specified up in tha "convenience functions" column up in 
Table 
1. Refer ta tha sections listed up in tha table fo' mo' shiznit on these 
functions.

.TS
c s s s s
c s s s s
l l l l l
l l l l l
lw(3i) l l lw(1i) lw(3i).
Table 1 Xkb Mappin Component Masks
and Convenience Functions
_
Mask	Value	Map	Fields	Convenience
				Functions
_
T{
XkbKeyTypesMask
T}	(1<<0)	client	T{
types
.br
size_types
.br
num_types
T}	T{
XkbGetKeyTypes
.br
XkbResizeKeyType
.br
XkbCopyKeyType
.br
XkbCopyKeyTypes
T}
T{
XkbKeySymsMask
T}	(1<<1)	client	T{
syms
.br
size_syms
.br
num_syms
.br
key_sym_map
T}	T{
XkbGetKeySyms
.br
XkbResizeKeySyms
.br
XkbChangeTypesOfKey
T}
T{
XkbModifierMapMask
T}	(1<<2)	client	modmap	T{
XkbGetKeyModifierMap
T}
T{
XkbExplicitComponentsMask
T}	(1<<3)	server	T{
explicit
T}	T{
XkbGetKeyExplicitComponents
T}
T{
XkbKeyActionsMask
T}	(1<<4)	server	T{
key_acts
.br
acts
.br
num_acts
.br
size_acts
T}	T{
XkbGetKeyActions
.br
XkbResizeKeyActions
T}
T{
XkbKeyBehaviorsMask
T}	(1<<5)	server	T{
behaviors
T}	T{
XkbGetKeyBehaviors
T}
T{
XkbVirtualModsMask
T}	(1<<6)	server	T{
vmods
T}	T{
XkbGetVirtualMods
T}
T{
XkbVirtualModMapMask
T}	(1<<7)	server	T{
vmodmap
T}	T{
XkbGetVirtualModMap
T}
.TE

.nf
.bp
Xkb defines combinationz of these masks fo' convenience:
   
   #define XkbResizableInfoMask   (XkbKeyTypesMask)
   #define XkbAllClientInfoMask   (XkbKeyTypesMask | XkbKeySymsMask |
                                   XkbModifierMapMask)
   #define XkbAllServerInfoMask   (XkbExplicitComponentsMask |
                                   XkbKeyActionsMask | 
                                   XkbKeyBehaviorsMask |
                                   XkbVirtualModsMask | 
                                   XkbVirtualModMapMask)
   #define XkbAllMapComponentsMask XkbAllClientInfoMask | 
                                   XkbAllServerInfoMask)
      
.fi      
Key types, symbol maps, n' actions is all interrelated: chizzlez up in one require 
changes 
in tha others. Da convenience functions make it easier ta edit these components 
and 
handle tha interdependencies. Put ya muthafuckin choppers up if ya feel dis! 

.SH STRUCTURES
.LP
Da complete description of a Xkb keyboard is given by a XkbDescRec. Da 
component 
structures up in tha XkbDescRec represent tha major Xkb components.

.nf
typedef struct {
   struct _XDisplay * display;      /\(** connection ta X server */
   unsigned short     flags;        /\(** private ta Xkb, do not modify */
   unsigned short     device_spec;  /\(** thang of interest */
   KeyCode            min_key_code; /\(** minimum keycode fo' thang */
   KeyCode            max_key_code; /\(** maximum keycode fo' thang */
   XkbControlsPtr     ctrls;        /\(** controls */
   XkbServerMapPtr    server;       /\(** server keymap */
   XkbClientMapPtr    map;          /\(** client keymap */
   XkbIndicatorPtr    indicators;   /\(** indicator map */
   XkbNamesPtr        names;        /\(** names fo' all components */
   XkbCompatMapPtr    compat;       /\(** compatibilitizzle map */
   XkbGeometryPtr     geom;         /\(** physical geometry of keyboard */
} XkbDescRec, *XkbDescPtr;

.fi
Da 
.I display 
field points ta a X display structure. Da 
.I flags field is private ta tha library: modifyin 
.I flags 
may yield unpredictable thangs up in dis biatch. Da 
.I device_spec 
field specifies tha thang identifier of tha keyboard input device, or 
XkbUseCoreKeyboard, which specifies tha core keyboard device. Da 
.I min_key_code
and 
.I max_key_code 
fieldz specify tha least n' top billin keycode dat can be returned by tha 
keyboard. Y'all KNOW dat shit, muthafucka! 

Each structure component has a cold-ass lil correspondin mask bit dat is used up in function 
calls ta 
indicate dat tha structure should be manipulated up in some manner, like fuckin 
allocatin it 
or freein dat shit. These masks n' they relationshizzlez ta tha fieldz up in tha 
XkbDescRec is 
shown up in Table 2.

.TS
c s s
l l l
l l l.
Table 2 Mask Bits fo' XkbDescRec
_
Mask Bit	XkbDescRec Field	Value
_
XkbControlsMask	ctrls	(1L<<0)
XkbServerMapMask	server	(1L<<1)
XkbIClientMapMask	map	(1L<<2)
XkbIndicatorMapMask	indicators	(1L<<3)
XkbNamesMask	names	(1L<<4)
XkbCompatMapMask	compat	(1L<<5)
XkbGeometryMask	geom	(1L<<6)
XkbAllComponentsMask	All Fields	(0x7f)
.TE
.SH "SEE ALSO"
.BR XkbChangeTypesOfKey (3),
.BR XkbCopyKeyType (3),
.BR XkbCopyKeyTypes (3),
.BR XkbFreeClientMap (3),
.BR XkbGetKeyActions (3),
.BR XkbGetKeyBehaviors (3),
.BR XkbGetKeyboard (3),
.BR XkbGetKeyExplicitComponents (3),
.BR XkbGetKeyModifierMap (3),
.BR XkbGetKeySyms (3),
.BR XkbGetKeyTypes (3),
.BR XkbGetUpdatedMap (3),
.BR XkbGetVirtualModMap (3),
.BR XkbGetVirtualModz (3),
.BR XkbResizeKeyActions (3),
.BR XkbResizeKeySyms (3),
.BR XkbResizeKeyType (3)





