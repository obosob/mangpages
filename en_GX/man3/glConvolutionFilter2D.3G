'\" t
.\"     Title: glConvolutionFilter2D
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCONVOLUTIONFILTER2" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glConvolutionFilter2D \- define a two\-dimensionizzle convolution filter
.SH "C SPECIFICATION"
.HP \w'void\ glConvolutionFilter2D('u
.BI "void glConvolutionFilter2D(GLenum\ " "target" ", GLenum\ " "internalformat" ", GLsizei\ " "width" ", GLsizei\ " "height" ", GLenum\ " "format" ", GLenum\ " "type" ", const\ GLvoid\ *\ " "data" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Must be
\fBGL_CONVOLUTION_2D\fR\&.
.RE
.PP
\fIinternalformat\fR
.RS 4
Da internal format of tha convolution filta kernel\&. Da allowable joints are
\fBGL_ALPHA\fR,
\fBGL_ALPHA4\fR,
\fBGL_ALPHA8\fR,
\fBGL_ALPHA12\fR,
\fBGL_ALPHA16\fR,
\fBGL_LUMINANCE\fR,
\fBGL_LUMINANCE4\fR,
\fBGL_LUMINANCE8\fR,
\fBGL_LUMINANCE12\fR,
\fBGL_LUMINANCE16\fR,
\fBGL_LUMINANCE_ALPHA\fR,
\fBGL_LUMINANCE4_ALPHA4\fR,
\fBGL_LUMINANCE6_ALPHA2\fR,
\fBGL_LUMINANCE8_ALPHA8\fR,
\fBGL_LUMINANCE12_ALPHA4\fR,
\fBGL_LUMINANCE12_ALPHA12\fR,
\fBGL_LUMINANCE16_ALPHA16\fR,
\fBGL_INTENSITY\fR,
\fBGL_INTENSITY4\fR,
\fBGL_INTENSITY8\fR,
\fBGL_INTENSITY12\fR,
\fBGL_INTENSITY16\fR,
\fBGL_R3_G3_B2\fR,
\fBGL_RGB\fR,
\fBGL_RGB4\fR,
\fBGL_RGB5\fR,
\fBGL_RGB8\fR,
\fBGL_RGB10\fR,
\fBGL_RGB12\fR,
\fBGL_RGB16\fR,
\fBGL_RGBA\fR,
\fBGL_RGBA2\fR,
\fBGL_RGBA4\fR,
\fBGL_RGB5_A1\fR,
\fBGL_RGBA8\fR,
\fBGL_RGB10_A2\fR,
\fBGL_RGBA12\fR, or
\fBGL_RGBA16\fR\&.
.RE
.PP
\fIwidth\fR
.RS 4
Da width of tha pixel array referenced by
\fIdata\fR\&.
.RE
.PP
\fIheight\fR
.RS 4
Da height of tha pixel array referenced by
\fIdata\fR\&.
.RE
.PP
\fIformat\fR
.RS 4
Da format of tha pixel data in
\fIdata\fR\&. Da allowable joints are
\fBGL_RED\fR,
\fBGL_GREEN\fR,
\fBGL_BLUE\fR,
\fBGL_ALPHA\fR,
\fBGL_RGB\fR,
\fBGL_BGR\fR,
\fBGL_RGBA\fR,
\fBGL_BGRA\fR,
\fBGL_LUMINANCE\fR, and
\fBGL_LUMINANCE_ALPHA\fR\&.
.RE
.PP
\fItype\fR
.RS 4
Da type of tha pixel data in
\fIdata\fR\&. Right back up in yo muthafuckin ass. Symbolic constants
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_BYTE\fR,
\fBGL_BITMAP\fR,
\fBGL_UNSIGNED_SHORT\fR,
\fBGL_SHORT\fR,
\fBGL_UNSIGNED_INT\fR,
\fBGL_INT\fR,
\fBGL_FLOAT\fR,
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR,
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, and
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
are accepted\&.
.RE
.PP
\fIdata\fR
.RS 4
Pointa ta a two\-dimensionizzle array of pixel data dat is processed ta build tha convolution filta kernel\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglConvolutionFilter2D\fR
buildz a two\-dimensionizzle convolution filta kernel from a array of pixels\&.
.PP
Da pixel array specified by
\fIwidth\fR,
\fIheight\fR,
\fIformat\fR,
\fItype\fR, and
\fIdata\fR
is extracted from memory n' processed just as if
\fBglDrawPixels\fR()
were called yo, but processin stops afta tha final expansion ta RGBA is completed\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a cold-ass lil convolution filta is specified,
\fIdata\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.PP
Da R, G, B, n' A componentz of each pixel is next scaled by tha four 2D
\fBGL_CONVOLUTION_FILTER_SCALE\fR
parametas n' biased by tha four 2D
\fBGL_CONVOLUTION_FILTER_BIAS\fR
parameters\&. (Da scale n' bias parametas is set by
\fBglConvolutionParameter\fR()
usin the
\fBGL_CONVOLUTION_2D\fR
target n' tha names
\fBGL_CONVOLUTION_FILTER_SCALE\fR
and
\fBGL_CONVOLUTION_FILTER_BIAS\fR\&. Da parametas theyselves is vectorz of four joints dat is applied ta red, green, blue, n' alpha, up in dat order\&.) Da R, G, B, n' A joints is not clamped ta [0,1] at any time durin dis process\&.
.PP
Each pixel is then converted ta tha internal format specified by
\fIinternalformat\fR\&. This conversion simply maps tha component jointz of tha pixel (R, G, B, n' A) ta tha joints included up in tha internal format (red, green, blue, alpha, luminance, n' intensity)\&. Da mappin be as bigs up:
.PP
.TS
allbox tab(:);
lB cB cB cB cB cB cB.
T{
\fB
                        Internal Format
                        \fR
T}:T{
\fB
                        Red
                        \fR
T}:T{
\fB
                        Green
                        \fR
T}:T{
\fB
                        Blue
                        \fR
T}:T{
\fB
                        Alpha
                        \fR
T}:T{
\fB
                        Luminance
                        \fR
T}:T{
\fB
                        Intensity
                        \fR
T}
.T&
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c.
T{
\fBGL_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{

T}:T{

T}
T{
\fBGL_LUMINANCE\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}:T{

T}
T{
\fBGL_LUMINANCE_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{
R
T}:T{

T}
T{
\fBGL_INTENSITY\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}
T{
\fBGL_RGB\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{

T}:T{

T}:T{

T}
T{
\fBGL_RGBA\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}:T{

T}:T{

T}
.TE
.sp 1
.PP
Da red, green, blue, alpha, luminance, and/or intensitizzle componentz of tha resultin pixels is stored up in floating\-point rather than integer format\&. They form a two\-dimensionizzle filta kernel image indexed wit coordinates
\fIi\fR
and
\fIj\fR
such that
\fIi\fR
starts at zero n' increases from left ta right, and
\fIj\fR
starts at zero n' increases from bottom ta top\&. Kernel location
\fIi,j\fR
is derived from the
\fIN\fRth pixel, where
\fIN\fR
is
\fIi\fR+\fIj\fR*\fIwidth\fR\&.
.PP
Note dat afta a cold-ass lil convolution is performed, tha resultin color components is also scaled by they corresponding
\fBGL_POST_CONVOLUTION_c_SCALE\fR
parametas n' biased by they corresponding
\fBGL_POST_CONVOLUTION_c_BIAS\fR
parametas (where
\fIc\fR
takes on tha joints
\fBRED\fR,
\fBGREEN\fR,
\fBBLUE\fR, and
\fBALPHA\fR)\&. These parametas is set by
\fBglPixelTransfer\fR()\&.
.SH "NOTES"
.PP
\fBglConvolutionFilter2D\fR
is present only if
ARB_imaging
is returned when
\fBglGetString\fR()
is called wit a argument of
\fBGL_EXTENSIONS\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not
\fBGL_CONVOLUTION_2D\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIinternalformat\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIformat\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItype\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIwidth\fR
is less than zero or pimped outa than tha maximum supported value\&. This value may be queried with
\fBglGetConvolutionParameter\fR()
usin target
\fBGL_CONVOLUTION_2D\fR
and name
\fBGL_MAX_CONVOLUTION_WIDTH\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIheight\fR
is less than zero or pimped outa than tha maximum supported value\&. This value may be queried with
\fBglGetConvolutionParameter\fR()
usin target
\fBGL_CONVOLUTION_2D\fR
and name
\fBGL_MAX_CONVOLUTION_HEIGHT\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIheight\fR
is one of
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR, or
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR
and
\fIformat\fR
is not
\fBGL_RGB\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIheight\fR
is one of
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, or
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
and
\fIformat\fR
is neither
\fBGL_RGBA\fR
nor
\fBGL_BGRA\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha data would be unpacked from tha buffer object such dat tha memory readz required would exceed tha data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target and
\fIdata\fR
is not evenly divisible tha fuck into tha number of bytes needed ta store up in memory a thugged-out datum indicated by
\fItype\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglConvolutionFilter2D\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetConvolutionParameter\fR(),
\fBglGetConvolutionFilter\fR()
.SH "SEE ALSO"
.PP
\fBglConvolutionFilter1D\fR(),
\fBglSeparableFilter2D\fR(),
\fBglConvolutionParameter\fR(),
\fBglPixelTransfer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
