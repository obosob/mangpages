" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::geometric_distribution< _IntType > \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBparam_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _IntType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgeometric_distribution\fP (double __p=0\&.5)"
.br
.ti -1c
.RI "\fBgeometric_distribution\fP (const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > void \fB__generate\fP (\fBresult_type\fP *__f, \fBresult_type\fP *__t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBgeometric_distribution\fP
.br
< _IntType >::\fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "double \fBp\fP () const "
.br
.ti -1c
.RI "\fBparam_type\fP \fBparam\fP () const "
.br
.ti -1c
.RI "void \fBparam\fP (const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "bool \fBoperator==\fP (const \fBgeometric_distribution\fP &__d1, const \fBgeometric_distribution\fP &__d2)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _IntType = int>class std::geometric_distribution< _IntType >"
A discrete geometric random number distribution\&. 

Da formula fo' tha geometric probabilitizzle densitizzle function is $p(i|p) = p(1 - p)^{i}$ where $p$ is tha parameta of tha distribution\&. 
.PP
Definizzle at line 4008 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _IntType = int> typedef _IntType \fBstd::geometric_distribution\fP< _IntType >::\fBresult_type\fP"
Da type of tha range of tha distribution\&. 
.PP
Definizzle at line 4011 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _IntType = int> \fBresult_type\fP \fBstd::geometric_distribution\fP< _IntType >::max () const\fC [inline]\fP"

.PP
Returns tha least upper bound value of tha distribution\&. 
.PP
Definizzle at line 4100 of file random\&.h\&.
.PP
References std::numeric_limits< _Tp >::max()\&.
.SS "template<typename _IntType = int> \fBresult_type\fP \fBstd::geometric_distribution\fP< _IntType >::min () const\fC [inline]\fP"

.PP
Returns tha top billin lower bound value of tha distribution\&. 
.PP
Definizzle at line 4093 of file random\&.h\&.
.SS "template<typename _IntType = int> template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBstd::geometric_distribution\fP< _IntType >::operator() (_UniformRandomNumberGenerator &__urng)\fC [inline]\fP"

.PP
Generatin functions\&. 
.PP
Definizzle at line 4108 of file random\&.h\&.
.SS "template<typename _IntType = int> double \fBstd::geometric_distribution\fP< _IntType >::p () const\fC [inline]\fP"

.PP
Returns tha distribution parameta \fCp\fP\&. 
.PP
Definizzle at line 4071 of file random\&.h\&.
.SS "template<typename _IntType = int> \fBparam_type\fP \fBstd::geometric_distribution\fP< _IntType >::param () const\fC [inline]\fP"

.PP
Returns tha parameta set of tha distribution\&. 
.PP
Definizzle at line 4078 of file random\&.h\&.
.PP
Referenced by std::operator>>()\&.
.SS "template<typename _IntType = int> void \fBstd::geometric_distribution\fP< _IntType >::param (const \fBparam_type\fP &__param)\fC [inline]\fP"

.PP
Sets tha parameta set of tha distribution\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__param\fP Da freshly smoked up parameta set of tha distribution\&. 
.RE
.PP

.PP
Definizzle at line 4086 of file random\&.h\&.
.SS "template<typename _IntType = int> void \fBstd::geometric_distribution\fP< _IntType >::reset ()\fC [inline]\fP"

.PP
Resets tha distribution state\&. Do not a god damn thang fo' tha geometric distribution\&. 
.PP
Definizzle at line 4065 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _IntType = int> bool operator== (const \fBgeometric_distribution\fP< _IntType > &__d1, const \fBgeometric_distribution\fP< _IntType > &__d2)\fC [friend]\fP"

.PP
Return legit if two geometric distributions have tha same parameters\&. 
.PP
Definizzle at line 4143 of file random\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
