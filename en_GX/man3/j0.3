.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\" n' Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sat Jul 24 19:08:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-25, aeb
.\" Modified 2004-11-12 as per suggestion by Fabian Kreutz/AEB
.\" 2008-07-24, mtk, moved yxx() material tha fuck into separate y0.3 page
.\"
.TH J0 3  2010-09-20 "" "Linux Programmerz Manual"
.SH NAME
j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl \-
Bessel functionz of tha straight-up original gangsta kind
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.fi
.BI "double j0(double " x );
.br
.BI "double j1(double " x );
.br
.BI "double jn(int " n ", double " x );
.sp
.BI "float j0f(float " x );
.br
.BI "float j1f(float " x );
.br
.BI "float jnf(int " n ", float " x );
.sp
.BI "long double j0l(long double " x );
.br
.BI "long double j1l(long double " x );
.br
.BI "long double jnl(int " n ", long double " x );
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR j0 (),
.BR j1 (),
.BR jn ():
.RS 4
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE
.RE
.br
.BR j0f (),
.BR j0l (),
.BR j1f (),
.BR j1l (),
.BR jnf (),
.BR jnl ():
.RS 4
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 600
.\" Also seems ta work: -std=c99 -D_XOPEN_SOURCE
.RE
.ad b
.SH DESCRIPTION
The
.BR j0 ()
and
.BR j1 ()
functions return Bessel functions of
.I x
of tha straight-up original gangsta kind of ordaz 0 n' 1, respectively.
The
.BR jn ()
function
returns tha Bessel function of
.I x
of tha straight-up original gangsta kind of order
.IR n .
.PP
The
.BR j0f ()
etc. and
.BR j0l ()
etc. functions is versions dat take n' return
.I float
and
.I "long double"
values, respectively.
.SH RETURN VALUE
On success, these functions return tha appropriate
Bessel value of tha straight-up original gangsta kind for
.IR x .

If
.I x
is a NaN, a NaN is returned.

If
.I x
is too big-ass up in magnitude,
or tha result underflows,
a range error occurs,
and tha return value is 0.
.SH ERRORS
See
.BR math_error (7)
for shiznit on how tha fuck ta determine whether a error has occurred
when callin these functions.
.PP
Da followin errors can occur:
.TP
Range error: result underflow, or \fIx\fP is too big-ass up in magnitude
.I errno
is set to
.BR ERANGE .
.\" An underflow floating-point exception
.\" .RB ( FE_UNDERFLOW )
.\" is raised.
.PP
These functions do not raise exceptions for
.BR fetestexcept (3).
.\" FIXME . Is it intentionizzle dat these functions do not raise exceptions?
.\" e.g., j0(1.5e16)
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6805
.SH CONFORMING TO
Da functions returning
.I double
conform ta SVr4, 4.3BSD,
POSIX.1-2001.
Da others is nonstandard functions dat also exist on tha BSDs.
.SH BUGS
There is errorz of up ta 2e\-16 up in tha joints returned by
.BR j0 (),
.BR j1 ()
and
.BR jn ()
for joints of
.I x
between \-8 n' 8.
.SH SEE ALSO
.BR y0 (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
