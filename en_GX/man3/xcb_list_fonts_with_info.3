.TH xcb_list_fonts_with_info 3  2013-08-04 "XCB" "XCB Requests"
.ad l
.SH NAME
xcb_list_fonts_with_info \- git matchin font names n' shiznit
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_list_fonts_with_info_cookie_t \fBxcb_list_fonts_with_info\fP(xcb_connection_t\ *\fIconn\fP, uint16_t\ \fImax_names\fP, uint16_t\ \fIpattern_len\fP, const char\ *\fIpattern\fP);
.PP
.SS Reply datastructure
.nf
.sp
typedef struct xcb_list_fonts_with_info_reply_t {
    uint8_t        \fIresponse_type\fP;
    uint8_t        \fIname_len\fP;
    uint16_t       \fIsequence\fP;
    uint32_t       \fIlength\fP;
    xcb_charinfo_t \fImin_bounds\fP;
    uint8_t        \fIpad0\fP[4];
    xcb_charinfo_t \fImax_bounds\fP;
    uint8_t        \fIpad1\fP[4];
    uint16_t       \fImin_char_or_byte2\fP;
    uint16_t       \fImax_char_or_byte2\fP;
    uint16_t       \fIdefault_char\fP;
    uint16_t       \fIproperties_len\fP;
    uint8_t        \fIdraw_direction\fP;
    uint8_t        \fImin_byte1\fP;
    uint8_t        \fImax_byte1\fP;
    uint8_t        \fIall_chars_exist\fP;
    int16_t        \fIfont_ascent\fP;
    int16_t        \fIfont_descent\fP;
    uint32_t       \fIreplies_hint\fP;
} \fBxcb_list_fonts_with_info_reply_t\fP;
.fi
.SS Reply function
.HP
xcb_list_fonts_with_info_reply_t *\fBxcb_list_fonts_with_info_reply\fP(xcb_connection_t\ *\fIconn\fP, xcb_list_fonts_with_info_cookie_t\ \fIcookie\fP, xcb_generic_error_t\ **\fIe\fP);
.SS Reply accessors
.HP
xcb_fontprop_t *\fBxcb_list_fonts_with_info_properties\fP(const xcb_list_fonts_with_info_request_t *\fIreply\fP);
.HP
int \fBxcb_list_fonts_with_info_properties_length\fP(const xcb_list_fonts_with_info_reply_t *\fIreply\fP);
.HP
xcb_fontprop_iterator_t \fBxcb_list_fonts_with_info_properties_iterator\fP(const xcb_list_fonts_with_info_reply_t *\fIreply\fP);
.HP
char *\fBxcb_list_fonts_with_info_name\fP(const xcb_list_fonts_with_info_request_t *\fIreply\fP);
.HP
int \fBxcb_list_fonts_with_info_name_length\fP(const xcb_list_fonts_with_info_reply_t *\fIreply\fP);
.HP
xcb_generic_iterator_t \fBxcb_list_fonts_with_info_name_end\fP(const xcb_list_fonts_with_info_reply_t *\fIreply\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
Da XCB connection ta X11.
.IP \fImax_names\fP 1i
Da maximum number of fonts ta be returned.
.IP \fIpattern_len\fP 1i
Da length (in bytes) of \fIpattern\fP.
.IP \fIpattern\fP 1i
A font pattern, fo' example "-misc-fixed-*".

Da asterisk (*) be a wildcard fo' any number of characters. Da question mark
(?) be a wildcard fo' a single character n' shit. Use of uppercase or lowercase do
not matter.
.SH REPLY FIELDS
.IP \fIresponse_type\fP 1i
Da type of dis reply, up in dis case \fIXCB_LIST_FONTS_WITH_INFO\fP. This field be also present up in tha \fIxcb_generic_reply_t\fP n' can be used ta tell replies apart from each other.
.IP \fIsequence\fP 1i
Da sequence number of tha last request processed by tha X11 server.
.IP \fIlength\fP 1i
Da length of tha reply, up in lyrics (a word is 4 bytes).
.IP \fIname_len\fP 1i
Da number of matched font names.
.IP \fImin_bounds\fP 1i
minimum boundz over all existin char
.IP \fImax_bounds\fP 1i
maximum boundz over all existin char
.IP \fImin_char_or_byte2\fP 1i
first character
.IP \fImax_char_or_byte2\fP 1i
last character
.IP \fIdefault_char\fP 1i
char ta print fo' undefined character
.IP \fIproperties_len\fP 1i
how nuff propertizzles there are
.IP \fIdraw_direction\fP 1i
One of tha followin joints:
.RS 1i
.IP \fIXCB_FONT_DRAW_LEFT_TO_RIGHT\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIXCB_FONT_DRAW_RIGHT_TO_LEFT\fP 1i
TODO: NOT YET DOCUMENTED.
.RE
.RS 1i


.RE
.IP \fImin_byte1\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fImax_byte1\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIall_chars_exist\fP 1i
flag if all charactas have nonzero size
.IP \fIfont_ascent\fP 1i
baseline ta top edge of raster
.IP \fIfont_descent\fP 1i
baseline ta bottom edge of raster
.IP \fIreplies_hint\fP 1i
An indication of how tha fuck nuff mo' fonts is ghon be returned. Y'all KNOW dat shit, muthafucka! This is only a hint and
may be larger or smalla than tha number of fonts straight-up returned. Y'all KNOW dat shit, muthafucka! A zero
value do not guarantee dat no mo' fonts is ghon be returned.
.SH DESCRIPTION
Gets a list of available font names which match tha given \fIpattern\fP.
.SH RETURN VALUE
Returns a \fIxcb_list_fonts_with_info_cookie_t\fP. Errors gotta be handled when callin tha reply function \fIxcb_list_fonts_with_info_reply\fP.

If you wanna handle errors up in tha event loop instead, use \fIxcb_list_fonts_with_info_unchecked\fP. Right back up in yo muthafuckin ass. See \fBxcb-requests(3)\fP fo' details.
.SH ERRORS
This request do never generate any errors.
.SH SEE ALSO
.BR xcb-requests (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org fo' erections n' improvements.
