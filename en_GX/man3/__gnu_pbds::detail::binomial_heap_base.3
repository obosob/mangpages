" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::binomial_heap_base< Value_Type, Cmp_Fn, _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_pbds::detail::left_child_next_sibling_heap< Value_Type, Cmp_Fn, _Alloc::size_type, _Alloc >\fP\&.
.PP
Inherited by \fB__gnu_pbds::detail::binomial_heap< Value_Type, Cmp_Fn, _Alloc >\fP, n' \fB__gnu_pbds::detail::rc_binomial_heap< Value_Type, Cmp_Fn, _Alloc >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef Cmp_Fn \fBcmp_fn\fP"
.br
.ti -1c
.RI "typedef \fBbase_type::const_iterator\fP \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef __rebind_v::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef __rebind_v::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef _Alloc::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBbase_type::iterator\fP \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
\fBbase_type::point_const_iterator\fP \fBpoint_const_iterator\fP"
.br
.ti -1c
.RI "typedef \fBbase_type::point_iterator\fP \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef __rebind_v::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef __rebind_v::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef Value_Type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () const"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBempty\fP () const"
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () const"
.br
.ti -1c
.RI "void \fBerase\fP (\fBpoint_iterator\fP)"
.br
.ti -1c
.RI "template<typename Pred > \fBbinomial_heap_base\fP< Value_Type, 
.br
Cmp_Fn, _Alloc >::size_type \fBerase_if\fP (Pred pred)"
.br
.ti -1c
.RI "template<typename Pred > size_type \fBerase_if\fP (Pred)"
.br
.ti -1c
.RI "Cmp_Fn & \fBget_cmp_fn\fP ()"
.br
.ti -1c
.RI "const Cmp_Fn & \fBget_cmp_fn\fP () const"
.br
.ti -1c
.RI "void \fBjoin\fP (\fBbinomial_heap_base\fP< Value_Type, Cmp_Fn, _Alloc > &)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const"
.br
.ti -1c
.RI "void \fBmodify\fP (\fBpoint_iterator\fP, const_reference)"
.br
.ti -1c
.RI "void \fBpop\fP ()"
.br
.ti -1c
.RI "\fBpoint_iterator\fP \fBpush\fP (const_reference)"
.br
.ti -1c
.RI "size_type \fBsize\fP () const"
.br
.ti -1c
.RI "template<typename Pred > void \fBsplit\fP (Pred, \fBbinomial_heap_base\fP< Value_Type, Cmp_Fn, _Alloc > &)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBleft_child_next_sibling_heap\fP< Value_Type, Cmp_Fn, _Alloc::size_type, _Alloc > &)"
.br
.ti -1c
.RI "const_reference \fBtop\fP () const "
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef base_type::node \fBnode\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind
.br
< \fBleft_child_next_sibling_heap_node_\fP
.br
< Value_Type, 
.br
_Alloc::size_type, _Alloc >
.br
 >::other \fBnode_allocator\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::node_const_pointa \fBnode_const_pointer\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBnode_metadata\fP"
.br
.ti -1c
.RI "typedef base_type::node_pointa \fBnode_pointer\fP"
.br
.ti -1c
.RI "typedef \fBstd::pair\fP
.br
< node_pointer, node_pointa > \fBnode_pointer_pair\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBbinomial_heap_base\fP (const Cmp_Fn &)"
.br
.ti -1c
.RI "\fBbinomial_heap_base\fP (const \fBbinomial_heap_base\fP< Value_Type, Cmp_Fn, _Alloc > &)"
.br
.ti -1c
.RI "void \fBactual_erase_node\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBbubble_to_top\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBclear_imp\fP (node_pointer)"
.br
.ti -1c
.RI "template<typename It > void \fBcopy_from_range\fP (It, It)"
.br
.ti -1c
.RI "void \fBfind_max\fP ()"
.br
.ti -1c
.RI "node_pointa \fBget_new_node_for_insert\fP (const_reference)"
.br
.ti -1c
.RI "node_pointa \fBprune\fP (Pred)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBbinomial_heap_base\fP< Value_Type, Cmp_Fn, _Alloc > &)"
.br
.ti -1c
.RI "void \fBswap_with_parent\fP (node_pointer, node_pointer)"
.br
.ti -1c
.RI "void \fBto_linked_list\fP ()"
.br
.ti -1c
.RI "void \fBvalue_swap\fP (\fBleft_child_next_sibling_heap\fP &)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static void \fBmake_child_of\fP (node_pointer, node_pointer)"
.br
.ti -1c
.RI "static node_pointa \fBparent\fP (node_pointer)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "node_pointa \fBm_p_max\fP"
.br
.ti -1c
.RI "node_pointa \fBm_p_root\fP"
.br
.ti -1c
.RI "size_type \fBm_size\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Value_Type, typename Cmp_Fn, typename _Alloc>class __gnu_pbds::detail::binomial_heap_base< Value_Type, Cmp_Fn, _Alloc >"
Base class fo' binomial heap\&. 
.PP
Definizzle at line 77 of file binomial_heap_base_\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
