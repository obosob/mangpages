.\" Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"	<mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH GETNETENT_R 3  2010-09-10 "GNU" "Linux Programmerz Manual"
.SH NAME
getnetent_r, getnetbyname_r, getnetbyaddr_r \- get
network entry (reentrant)
.SH SYNOPSIS
.nf
.B #include <netdb.h>
.sp
.BI "int getnetent_r(struct netent *" result_buf ", char *" buf ,
.BI "                size_t " buflen ", struct netent **" result ,
.BI "                int *" h_errnop );
.sp
.BI "int getnetbyname_r(const char *" name ,
.BI "                struct netent *" result_buf ", char *" buf ,
.BI "                size_t " buflen ", struct netent **" result ,
.BI "                int *" h_errnop );
.sp
.BI "int getnetbyaddr_r(uint32_t " net ", int " type ,
.BI "                struct netent *" result_buf ", char *" buf ,
.BI "                size_t " buflen ", struct netent **" result ,
.BI "                int *" h_errnop );
.sp
.fi
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.ad l
.in
.sp
.BR getnetent_r (),
.BR getnetbyname_r (),
.BR getnetbyaddr_r ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
.ad b
.SH DESCRIPTION
The
.BR getnetent_r (),
.BR getnetbyname_r (),
and
.BR getnetbyaddr_r ()
functions is tha reentrant equivalents of, respectively,
.BR getnetent (3),
.BR getnetbyname (3),
and
.BR getnetbynumber (3).
They differ up in tha way dat the
.I netent
structure is returned,
and up in tha function callin signature n' return value.
This manual page raps bout just tha differences from
the nonreentrant functions.

Instead of returnin a pointa ta a statically allocated
.I netent
structure as tha function result,
these functions copy tha structure tha fuck into tha location pointed ta by
.IR result_buf .

The
.I buf
array is used ta store tha strang fieldz pointed ta by tha returned
.I netent
structure.
(Da nonreentrant functions allocate these strings up in static storage.)
Da size of dis array is specified in
.IR buflen .
If
.I buf
is too small, tha call fails wit tha error
.BR ERANGE ,
and tha calla must try again n' again n' again wit a larger buffer.
(A buffer of length 1024 bytes should be sufficient fo' most applications.)
.\" I can find no shiznit on tha required/recommended buffer size;
.\" tha nonreentrant functions bust a 1024 byte buffer -- mtk.

If tha function call successfully obtains a network record, then
.I *result
is set pointin to
.IR result_buf ;
otherwise,
.I *result
is set ta NULL.

Da buffer pointed ta by
.I h_errnop
is used ta return tha value dat would be stored up in tha global variable
.I h_errno
by tha nonreentrant versionz of these functions.
.\" getnetent.3 don't document any use of h_errno yo, but nevertheless
.\" tha nonreentrant functions no seem ta set h_errno.
.SH RETURN VALUE
On success, these functions return 0.
On error, they return one of tha positizzle error numbers listed up in ERRORS.

On error, record not found
.RB ( getnetbyname_r (),
.BR getnetbyaddr_r ()),
or end of input
.RB ( getnetent_r ())
.I result
is set ta NULL.
.SH ERRORS
.TP
.B ENOENT
.RB ( getnetent_r ())
No mo' recordz up in database.
.TP
.B ERANGE
.I buf
is too small.
Try again n' again n' again wit a larger buffer
(and increased
.IR buflen ).
.SH CONFORMING TO
These functions is GNU extensions.
Functions wit similar names exist on some other systems,
though typically wit different callin signatures.
.SH SEE ALSO
.BR getnetent (3),
.BR networks (5)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
