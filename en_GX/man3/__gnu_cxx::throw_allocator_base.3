" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::throw_allocator_base< _Tp, _Cond > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_cxx::annotate_base\fP, n' _Cond\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef const value_type * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef const value_type & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef value_type * \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBstd::true_type\fP \fBpropagate_on_container_move_assignment\fP"
.br
.ti -1c
.RI "typedef value_type & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "pointa \fBaddress\fP (reference __x) const noexcept"
.br
.ti -1c
.RI "const_pointa \fBaddress\fP (const_reference __x) const noexcept"
.br
.ti -1c
.RI "pointa \fBallocate\fP (size_type __n, \fBstd::allocator\fP< void >::const_pointa hint=0)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (void *p, size_t size)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (pointa __p, size_type __n)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (size_type __n)"
.br
.ti -1c
.RI "template<typename _Up , typename\&.\&.\&. _Args> void \fBconstruct\fP (_Up *__p, _Args &&\&.\&.\&.__args)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (pointa __p, size_type __n)"
.br
.ti -1c
.RI "template<typename _Up > void \fBdestroy\fP (_Up *__p)"
.br
.ti -1c
.RI "void \fBerase\fP (void *p, size_t size)"
.br
.ti -1c
.RI "void \fBinsert\fP (void *p, size_t size)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const noexcept"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static size_t \fBget_label\fP ()"
.br
.ti -1c
.RI "static void \fBset_label\fP (size_t l)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Cond>class __gnu_cxx::throw_allocator_base< _Tp, _Cond >"
Allocator class wit loggin n' exception generation control\&. Intended ta be used as a allocator_type up in templatized code\&.
.PP
Note: Deallocate not allowed ta throw\&. 
.PP
Definizzle at line 634 of file throw_allocator\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
