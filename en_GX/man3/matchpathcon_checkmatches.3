.TH "matchpathcon_checkmatches" "3" "21 November 2009" "sds@tycho.nsa.gov" "SELinux API documentation"
.SH "NAME"
matchpathcon_checkmatches, matchpathcon_filespec_add, matchpathcon_filespec_destroy, matchpathcon_filespec_eval \- check n' report whether any justification index has no matches wit any inode. Maintenizzle n' statistics on inode associations
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.sp
.BI "void matchpathcon_checkmatches(char *" str ");"
.sp
.BI "int matchpathcon_filespec_add(ino_t " ino ", int " specind ", const char *" file ");"
.sp
.BI "void matchpathcon_filespec_destroy(void);"
.sp
.BI "void matchpathcon_filespec_eval(void);"
.
.SH "DESCRIPTION"
.BR matchpathcon_checkmatches ()
checks whether any justification has no matches n' reports em.
The
.I str
argument is used as a prefix fo' any warnin lyrics.
.sp
.BR matchpathcon_filespec_add ()
maintains a association between a inode
.I ino
and a justification index
.IR specind ,
and checks whether a cold-ass lil conflictin justification be already associated
with tha same inode (e.g. cuz of multiple hard links). If so, then
it uses tha latta of tha two justifications based on they order up in tha 
.I file
context configuration. I aint talkin' bout chicken n' gravy biatch. Returns tha justification index used or \-1 on
error.
.sp
.BR matchpathcon_filespec_destroy ()
destroys any inode associations dat done been added, e.g. ta restart
for a freshly smoked up filesystem.
.sp
.BR matchpathcon_filespec_eval ()
displays statistics on tha hash table usage fo' tha inode associations.
.
.SH "RETURN VALUE"
Returns zero on success or \-1 otherwise.
.
.SH "SEE ALSO"
.ad l
.nh
.BR selinux "(8), " matchpathcon "(3), " matchpathcon_index "(3), " freecon "(3), " setfilecon "(3), " setfscreatecon "(3)"
