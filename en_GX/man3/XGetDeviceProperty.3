'\" t
.\"     Title: xgetdeviceproperty
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XGETDEVICEPROPERTY" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XGetDeviceProperty, XChangeDeviceProperty, XDeleteDeviceProperty \- Get, chizzle or delete a thugged-out device\*(Aqs property\&.
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
int XGetDeviceProperty( Display *display,
                        XDevice *device,
                        Atom property,
                        long offset,
                        long length,
                        Bool delete,
                        Atom req_type,
                        Atom *actual_type_return,
                        int *actual_format_return,
                        unsigned long *nitems_return,
                        unsigned long *bytes_after_return,
                        unsigned char **prop_return)
.fi
.sp
.nf
void XChangeDeviceProperty( Display *display,
                            XDevice *device,
                            Atom property,
                            Atom type,
                            int format,
                            int mode,
                            const char *data,
                            int nelements)
.fi
.sp
.nf
void XDeleteDeviceProperty( Display *display,
                            XDevice *device,
                            Atom property)
.fi
.sp
.nf
actual_type_return
       Returns a atom identifier dat defines tha actual type
       of tha property\&.
.fi
.sp
.nf
actual_format_return
       Returns tha actual format of tha property\&.
.fi
.sp
.nf
bytes_after_return
       Returns tha number of bytes remainin ta be read up in the
       property if a partial read was performed\&.
.fi
.sp
.nf
data
       Specifies tha property data\&.
.fi
.sp
.nf
delete
       Specifies a Boolean value dat determines whether the
       property is deleted\&.
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Da thang ta grab\&.
.fi
.sp
.nf
format
       Specifies whether tha data should be viewed as a list of
       8\-bit, 16\-bit, or 32\-bit quantities\&. Possible joints are
       8, 16, n' 32\&. This shiznit allows tha X server to
       erectly big-ass up byte\-swap operations as necessary\&. If
       tha format is 16\-bit or 32\-bit, you must explicitly cast
       tha data pointa ta a (unsigned char*) up in tha call to
       XChangeDeviceProperty\&.
.fi
.sp
.nf
length
       Specifies tha length up in 32\-bit multipliez of tha data to
       be retrieved\&.
.fi
.sp
.nf
mode
       Specifies tha mode of operation\&. Yo ass can pass
       PropModeReplace, PropModePrepend, or PropModeAppend\&.
.fi
.sp
.nf
nelements
       Specifies tha number of elements up in data\&.
.fi
.sp
.nf
nitems_return
       Returns tha actual number of 8\-bit, 16\-bit, or 32\-bit
       shit stored up in tha prop_return array\&.
.fi
.sp
.nf
num_values
       Specifies tha number of elements up in tha joints list\&.
.fi
.sp
.nf
offset
       Specifies tha offset up in tha specified property (in
       32\-bit quantities) where tha data is ta be retrieved\&.
.fi
.sp
.nf
property
       Specifies tha property ta modify or query\&.
.fi
.sp
.nf
prop_return
       Returns tha data up in tha specified format\&. If the
       returned format is 8, tha returned data is represented
       as a cold-ass lil char array\&. If tha returned format is 16, the
       returned data is represented as a array of short int
       type n' should be cast ta dat type ta obtain the
       elements\&. If tha returned format is 32, tha property
       data is ghon be stored as a array of longs (which up in a
       64\-bit application is ghon be 64\-bit joints dat is padded
       up in tha upper 4 bytes)\&.
.fi
.sp
.nf
req_type
       Specifies tha atom identifier associated wit the
       property type or AnyPropertyType\&.
.fi
.SH "DESCRIPTION"
.sp
Da XGetDeviceProperty function returns tha actual type of tha property; tha actual format of tha property; tha number of 8\-bit, 16\-bit, or 32\-bit shit transferred; tha number of bytes remainin ta be read up in tha property; n' a pointa ta tha data straight-up returned\&. For a thugged-out detailed description of dis function, peep tha playa page ta XGetWindowProperty\&.
.sp
Da XChangeDeviceProperty function altas tha property fo' tha specified thang n' causes tha server ta generate a XPropertyNotifyEvent event on dat device\&. For a thugged-out detailed description of dis function, peep tha playa page ta XChangeProperty\&.
.sp
Da XDeleteDeviceProperty function deletes tha specified thang property\&. Note dat a cold-ass lil client cannot delete a property pimped by a thugged-out driver or tha server\& fo' realz. Attemptin ta do so will result up in a BadAtom error\&.
.sp
XGetDeviceProperty can generate a BadAtom, BadDevice error\&.
.sp
XChangeDeviceProperty can generate a BadDevice, a BadMatch, a BadAtom, n' a BadValue error\&.
.sp
XDeleteDeviceProperty can generate a BadDevice, n' a BadAtom error\&.
.SH "DIAGNOSIS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadAtom
       A value do not describe a valid named identifier or
       tha client attempted ta remove a thugged-out driver\-allocated
       property\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da thang do not
       exist\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XListDeviceProperties(3)
.fi
.if n \{\
.RE
.\}
