.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Tie::RefHash 3pm"
.TH Tie::RefHash 3pm "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tie::RefHash \- use references as hash keys
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    require 5.004;
\&    use Tie::RefHash;
\&    tie HASHVARIABLE, \*(AqTie::RefHash\*(Aq, LIST;
\&    tie HASHVARIABLE, \*(AqTie::RefHash::Nestable\*(Aq, LIST;
\&
\&    untie HASHVARIABLE;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module serves up tha mobilitizzle ta use references as hash keys if you
first \f(CW\*(C`tie\*(C'\fR tha hash variable ta dis module.  Normally, only the
keyz of tha tied hash itself is preserved as references; ta use
references as keys up in hashes-of-hashes, use Tie::RefHash::Nestable,
included as part of Tie::RefHash.
.PP
It be implemented rockin tha standard perl \s-1TIEHASH\s0 intercourse.  Please
see tha \f(CW\*(C`tie\*(C'\fR entry up in \fIperlfunc\fR\|(1) n' \fIperltie\fR\|(1) fo' mo' shiznit.
.PP
Da Nestable version works by lookin fo' hash references bein stored
and convertin dem ta tied hashes so dat they too can have
references as keys.  This will happen without warnin whenever you
store a reference ta one of yo' own hashes up in tha tied hash.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 10
\&    use Tie::RefHash;
\&    tie %h, \*(AqTie::RefHash\*(Aq;
\&    $a = [];
\&    $b = {};
\&    $c = \e*main;
\&    $d = \e"gunk";
\&    $e = sub { \*(Aqfoo\*(Aq };
\&    %h = ($a => 1, $b => 2, $c => 3, $d => 4, $e => 5);
\&    $a\->[0] = \*(Aqfoo\*(Aq;
\&    $b\->{foo} = \*(Aqbar\*(Aq;
\&    fo' (keys %h) {
\&       print ref($_), "\en";
\&    }
\&
\&    tie %h, \*(AqTie::RefHash::Nestable\*(Aq;
\&    $h{$a}\->{$b} = 1;
\&    fo' (keys %h, keys %{$h{$a}}) {
\&       print ref($_), "\en";
\&    }
.Ve
.SH "THREAD SUPPORT"
.IX Header "THREAD SUPPORT"
Tie::RefHash straight-up supports threadin rockin tha \f(CW\*(C`CLONE\*(C'\fR method.
.SH "STORABLE SUPPORT"
.IX Header "STORABLE SUPPORT"
Storable hooks is provided fo' semantically erect serialization and
clonin of tied refhashes.
.SH "RELIC SUPPORT"
.IX Header "RELIC SUPPORT"
This version of Tie::RefHash seems ta no longer work wit 5.004. This has not
been throughly investigated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Patches welcome ;\-)
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself
.SH "MAINTAINER"
.IX Header "MAINTAINER"
Yuval Kogman <nothingmuch@woobling.org>
.SH "AUTHOR"
.IX Header "AUTHOR"
Gurusamy Sarathy        gsar@activestate.com
.PP
\&'Nestable' by Ed Avis   ed@membled.com
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), \fIperlfunc\fR\|(1), \fIperltie\fR\|(1)
