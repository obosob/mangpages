" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::uniform_real_distribution< _RealType > \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBparam_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _RealType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBuniform_real_distribution\fP (_RealType __a=_RealType(0), _RealType __b=_RealType(1))"
.br
.ti -1c
.RI "\fBuniform_real_distribution\fP (const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > void \fB__generate\fP (\fBresult_type\fP *__f, \fBresult_type\fP *__t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBa\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBb\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBparam_type\fP \fBparam\fP () const "
.br
.ti -1c
.RI "void \fBparam\fP (const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "bool \fBoperator==\fP (const \fBuniform_real_distribution\fP &__d1, const \fBuniform_real_distribution\fP &__d2)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _RealType = double>class std::uniform_real_distribution< _RealType >"
Uniform continuous distribution fo' random numbers\&. 

A continuous random distribution on tha range [min, max) wit equal probabilitizzle all up in tha range\&. Da URNG should be real-valued n' serve up number up in tha range [0, 1)\&. 
.PP
Definizzle at line 1867 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _RealType = double> typedef _RealType \fBstd::uniform_real_distribution\fP< _RealType >::\fBresult_type\fP"
Da type of tha range of tha distribution\&. 
.PP
Definizzle at line 1870 of file random\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _RealType = double> \fBstd::uniform_real_distribution\fP< _RealType >::\fBuniform_real_distribution\fP (_RealType__a = \fC_RealType(0)\fP, _RealType__b = \fC_RealType(1)\fP)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Constructs a uniform_real_distribution object\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__a\fP [IN] Da lower bound of tha distribution\&. 
.br
\fI__b\fP [IN] Da upper bound of tha distribution\&. 
.RE
.PP

.PP
Definizzle at line 1913 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::uniform_real_distribution\fP< _RealType >::max () const\fC [inline]\fP"

.PP
Returns tha inclusive upper bound of tha distribution range\&. 
.PP
Definizzle at line 1965 of file random\&.h\&.
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::uniform_real_distribution\fP< _RealType >::min () const\fC [inline]\fP"

.PP
Returns tha inclusive lower bound of tha distribution range\&. 
.PP
Definizzle at line 1958 of file random\&.h\&.
.SS "template<typename _RealType = double> template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBstd::uniform_real_distribution\fP< _RealType >::operator() (_UniformRandomNumberGenerator &__urng)\fC [inline]\fP"

.PP
Generatin functions\&. 
.PP
Definizzle at line 1973 of file random\&.h\&.
.SS "template<typename _RealType = double> \fBparam_type\fP \fBstd::uniform_real_distribution\fP< _RealType >::param () const\fC [inline]\fP"

.PP
Returns tha parameta set of tha distribution\&. 
.PP
Definizzle at line 1943 of file random\&.h\&.
.PP
Referenced by std::operator>>()\&.
.SS "template<typename _RealType = double> void \fBstd::uniform_real_distribution\fP< _RealType >::param (const \fBparam_type\fP &__param)\fC [inline]\fP"

.PP
Sets tha parameta set of tha distribution\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__param\fP Da freshly smoked up parameta set of tha distribution\&. 
.RE
.PP

.PP
Definizzle at line 1951 of file random\&.h\&.
.SS "template<typename _RealType = double> void \fBstd::uniform_real_distribution\fP< _RealType >::reset ()\fC [inline]\fP"

.PP
Resets tha distribution state\&. Do not a god damn thang fo' tha uniform real distribution\&. 
.PP
Definizzle at line 1929 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _RealType = double> bool operator== (const \fBuniform_real_distribution\fP< _RealType > &__d1, const \fBuniform_real_distribution\fP< _RealType > &__d2)\fC [friend]\fP"

.PP
Return legit if two uniform real distributions have tha same parameters\&. 
.PP
Definizzle at line 2013 of file random\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
