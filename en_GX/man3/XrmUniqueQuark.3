.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XrmUniqueQuark 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XrmUniqueQuark, XrmStringToQuark, XrmPermStringToQuark, XrmQuarkToString, XrmStringToQuarkList, XrmStringToBindingQuarkList \- manipulate resource quarks
.SH SYNOPSIS
.HP
#include <X11/Xresource.h>
.HP
XrmQuark XrmUniqueQuark\^(void); 
.LP
\&#define XrmStringToName(string) XrmStringToQuark(string)
.br
\&#define XrmStringToClass(string) XrmStringToQuark(string)
.br
\&#define XrmStringToRepresentation(string) XrmStringToQuark(string)
.HP
int XrmQuark XrmStringToQuark\^(\^char *\fIstring\fP\^); 
.HP
XrmQuark XrmPermStringToQuark\^(\^char *\fIstring\fP\^); 
.LP
\&#define XrmStringToName(string) XrmStringToQuark(string)
.br
\&#define XrmStringToClass(string) XrmStringToQuark(string)
.br
\&#define XrmStringToRepresentation(string) XrmStringToQuark(string)
.HP
XrmQuark XrmStringToQuark\^(\^char *\fIstring\fP\^); 
.HP
XrmQuark XrmPermStringToQuark\^(\^char *\fIstring\fP\^); 
.LP
\&#define XrmNameToString(name) XrmQuarkToString(name)
.br
\&#define XrmClassToString(class) XrmQuarkToString(class)
.br
\&#define XrmRepresentationToString(type) XrmQuarkToString(type)
.HP
char *XrmQuarkToString\^(\^XrmQuark \fIquark\fP\^); 
.LP
\&#define XrmStringToNameList(str, name)  XrmStringToQuarkList((str), (name))
.br
\&#define XrmStringToClassList(str,class) XrmStringToQuarkList((str), (class))
.sp
.HP
void XrmStringToQuarkList\^(\^char *\fIstring\fP\^, XrmQuarkList
\fIquarks_return\fP\^); 
.HP
XrmStringToBindingQuarkList\^(\^char *\fIstring\fP\^, XrmBindingList
\fIbindings_return\fP\^, XrmQuarkList \fIquarks_return\fP\^); 
.SH ARGUMENTS
.IP \fIbindings_return\fP 1i
Returns tha bindin list.
.IP \fIquark\fP 1i
Specifies tha quark fo' which tha equivalent strang is desired.
.IP \fIquarks_return\fP 1i
Returns tha list of quarks.
.ds Ql \ or quark list
.IP \fIstring\fP 1i
Specifies tha strang fo' which a quark\*(Ql is ta be allocated.
.SH DESCRIPTION
The
.ZN XrmUniqueQuark
function allocates a quark dat is guaranteed not ta represent any strang that
is known ta tha resource manager.
.LP
These functions can be used ta convert from strang ta quark representation.
If tha strang aint up in tha Host Portable Characta Encoding,
the conversion is implementation-dependent.
Da strang argument to
.ZN XrmStringToQuark
need not be permanently allocated storage.
.ZN XrmPermStringToQuark
is just like
.ZN XrmStringToQuark ,
except dat Xlib is permitted ta assume tha strang argument is permanently
allocated,
and, hence, dat it can be used as tha value ta be returned by
.ZN XrmQuarkToStrin .
.LP
For any given quark, if
.ZN XrmStringToQuark
returns a non-NULL value,
all future calls will return tha same value (identical address).
.LP
These functions can be used ta convert from quark representation ta string.
Da strang pointed ta by tha return value must not be modified or freed.
Da returned strang is byte-for-byte equal ta tha original
strin passed ta one of tha string-to-quark routines.
If no strang exists fo' dat quark,
.ZN XrmQuarkToString
returns NULL.
For any given quark, if
.ZN XrmQuarkToString
returns a non-NULL value,
all future calls will return tha same value (identical address).
.LP
These functions can be used ta convert from strang ta quark representation.
If tha strang aint up in tha Host Portable Characta Encoding,
the conversion is implementation-dependent.
Da strang argument to
.ZN XrmStringToQuark
need not be permanently allocated storage.
.ZN XrmPermStringToQuark
is just like
.ZN XrmStringToQuark ,
except dat Xlib is permitted ta assume tha strang argument is permanently
allocated,
and, hence, dat it can be used as tha value ta be returned by
.ZN XrmQuarkToStrin .
.LP
For any given quark, if
.ZN XrmStringToQuark
returns a non-NULL value,
all future calls will return tha same value (identical address).
.LP
The
.ZN XrmStringToQuarkList
function converts tha null-terminated strang (generally a gangbangin' straight-up qualified name)
to a list of quarks.
Da calla must allocate sufficient space fo' tha quarks list before callin 
.ZN XrmStringToQuarkList .
Note dat tha strang must be up in tha valid ResourceName format 
(see section 15.1).
If tha strang aint up in tha Host Portable Characta Encoding,
the conversion is implementation-dependent.
.LP
A bindin list be a list of type
.ZN XrmBindingList
and indicates if componentz of name or class lists is bound tightly or loosely
(that is, if wildcardin of intermediate components is specified).
.LP
.EX
typedef enum {XrmBindTightly, XrmBindLoosely} XrmBinding, *XrmBindingList;
.EE
.LP
.ZN XrmBindTightly
indicates dat a period separates tha components, and
.ZN XrmBindLoosely
indicates dat a asterisk separates tha components.
.LP
The
.ZN XrmStringToBindingQuarkList
function converts tha specified strang ta a funky-ass bindin list n' a quark list.
Da calla must allocate sufficient space fo' tha quarks list n' the
bindin list before callin 
.ZN XrmStringToBindingQuarkList .
If tha strang aint up in tha Host Portable Characta Encoding
the conversion is implementation-dependent.
Component names up in tha list is separated by a period or
an asterisk character.
If tha strang do not start wit period or asterisk,
a period be assumed.
For example, ``*a.b*c'' becomes:
.LP
.TS
l l l.
quarks	a	b	c
bindings	loose	tight	loose
.TE
.SH "SEE ALSO"
XrmGetResource(3),
XrmInitialize(3),
XrmMergeDatabases(3),
XrmPutResource(3)
.LP
\fI\*(xL\fP
