.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XrmPutResource 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XrmPutResource, XrmQPutResource, XrmPutStringResource, XrmQPutStringResource, XrmPutLineResource \- store database resources
.SH SYNTAX
.HP
#include <X11/Xresource.h>
.HP
void XrmPutResource\^(\^XrmDatabase *\fIdatabase\fP\^, char
*\fIspecifier\fP\^, char *\fItype\fP\^, XrmValue *\fIvalue\fP\^); 
.HP
void XrmQPutResource\^(\^XrmDatabase *\fIdatabase\fP\^, XrmBindingList
\fIbindings\fP\^, XrmQuarkList \fIquarks\fP\^, XrmRepresentation \fItype\fP\^,
XrmValue *\fIvalue\fP\^); 
.HP
void XrmPutStringResource\^(\^XrmDatabase *\fIdatabase\fP\^, char
*\fIspecifier\fP\^, char *\fIvalue\fP\^); 
.HP
void XrmQPutStringResource\^(\^XrmDatabase *\fIdatabase\fP\^, XrmBindingList
\fIbindings\fP\^, XrmQuarkList \fIquarks\fP\^, char *\fIvalue\fP\^); 
.HP
void XrmPutLineResource\^(\^XrmDatabase *\fIdatabase\fP\^, char
*\fIline\fP\^); 
.SH ARGUMENTS
.IP \fIbindings\fP 1i
Specifies a list of bindings.
.IP \fIdatabase\fP 1i
Specifies tha resource database.
.IP \fIline\fP 1i
Specifies tha resource name n' value pair as a single string.
.IP \fIquarks\fP 1i
Specifies tha complete or partial name or tha class list of tha resource.
.IP \fIspecifier\fP 1i
Specifies a cold-ass lil complete or partial justification of tha resource.
.IP \fItype\fP 1i
Specifies tha type of tha resource.
.IP \fIvalue\fP 1i
Specifies tha value of tha resource, which is specified as a string.
.SH DESCRIPTION
If database gotz nuff NULL,
.ZN XrmPutResource
creates a freshly smoked up database n' returns a pointa ta dat shit.
.ZN XrmPutResource
is a cold-ass lil convenience function dat calls
.ZN XrmStringToBindingQuarkList
followed by:
.LP
.Ds
XrmQPutResource(database, bindings, quarks, XrmStringToQuark(type), value)
.De
.LP
If tha specifier n' type is not up in tha Host Portable Characta Encoding,
the result is implementation-dependent.
Da value is stored up in tha database without modification.
.LP
If database gotz nuff NULL,
.ZN XrmQPutResource
creates a freshly smoked up database n' returns a pointa ta dat shit.
If a resource entry wit tha identical bindings n' quarks already
exists up in tha database, tha previous type n' value is replaced by tha new
specified type n' value.
Da value is stored up in tha database without modification.
.LP
If database gotz nuff NULL,
.ZN XrmPutStringResource
creates a freshly smoked up database n' returns a pointa ta dat shit.
.ZN XrmPutStringResource
addz a resource wit tha specified value ta tha specified database.
.ZN XrmPutStringResource
is a cold-ass lil convenience function dat first calls
.ZN XrmStringToBindingQuarkList
on tha specifier n' then calls
.ZN XrmQPutResource ,
usin a ``String'' representation type.
If tha specifier aint up in tha Host Portable Characta Encoding,
the result is implementation-dependent.
Da value is stored up in tha database without modification.
.LP
If database gotz nuff NULL,
.ZN XrmQPutStringResource
creates a freshly smoked up database n' returns a pointa ta dat shit.
.ZN XrmQPutStringResource
is a cold-ass lil convenience routine dat constructs an
.ZN XrmValue
for tha value strang (by calling
.ZN strlen
to compute tha size) and
then calls
.ZN XrmQPutResource ,
usin a ``String'' representation type.
Da value is stored up in tha database without modification.
.LP
If database gotz nuff NULL,
.ZN XrmPutLineResource
creates a freshly smoked up database n' returns a pointa ta dat shit.
.ZN XrmPutLineResource
addz a single resource entry ta tha specified database.
Da line should be up in valid ResourceLine format (see section 15.1)
terminated by a newline or null character;
the database dat thangs up in dis biatch from rockin a string
with incorrect syntax is implementation-dependent.
Da strang is parsed up in tha locale of tha database.
If the
.ZN ResourceName
is not up in tha Host Portable Characta Encoding,
the result is implementation-dependent.
Note dat comment lines is not stored.
.SH "SEE ALSO"
XrmGetResource(3),
XrmInitialize(3),
XrmMergeDatabases(3),
XrmUniqueQuark(3)
.br
\fI\*(xL\fP
