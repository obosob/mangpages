" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::numpunct_byname< _CharT > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::numpunct< _CharT >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef __numpunct_cache< _CharT > \fB__cache_type\fP"
.br
.ti -1c
.RI "typedef _CharT \fBchar_type\fP"
.br
.ti -1c
.RI "typedef \fBbasic_string\fP< _CharT > \fBstring_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBnumpunct_byname\fP (const char *__s, size_t __refs=0)"
.br
.ti -1c
.RI "\fBchar_type\fP \fBdecimal_point\fP () const "
.br
.ti -1c
.RI "\fBstring_type\fP \fBfalsename\fP () const "
.br
.ti -1c
.RI "\fBstring\fP \fBgrouping\fP () const "
.br
.ti -1c
.RI "\fBchar_type\fP \fBthousands_sep\fP () const "
.br
.ti -1c
.RI "\fBstring_type\fP \fBtruename\fP () const "
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBlocale::id\fP \fBid\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fB_M_initialize_numpunct\fP (__c_locale __cloc=0)"
.br
.ti -1c
.RI "template<> void \fB_M_initialize_numpunct\fP (__c_locale __cloc)"
.br
.ti -1c
.RI "template<> void \fB_M_initialize_numpunct\fP (__c_locale __cloc)"
.br
.ti -1c
.RI "virtual \fBchar_type\fP \fBdo_decimal_point\fP () const "
.br
.ti -1c
.RI "virtual \fBstring_type\fP \fBdo_falsename\fP () const "
.br
.ti -1c
.RI "virtual \fBstring\fP \fBdo_grouping\fP () const "
.br
.ti -1c
.RI "virtual \fBchar_type\fP \fBdo_thousands_sep\fP () const "
.br
.ti -1c
.RI "virtual \fBstring_type\fP \fBdo_truename\fP () const "
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static __c_locale \fB_S_clone_c_locale\fP (__c_locale &__cloc)  throw ()"
.br
.ti -1c
.RI "static void \fB_S_create_c_locale\fP (__c_locale &__cloc, const char *__s, __c_locale __old=0)"
.br
.ti -1c
.RI "static void \fB_S_destroy_c_locale\fP (__c_locale &__cloc)"
.br
.ti -1c
.RI "static __c_locale \fB_S_get_c_locale\fP ()"
.br
.ti -1c
.RI "static const char * \fB_S_get_c_name\fP ()  throw ()"
.br
.ti -1c
.RI "static __c_locale \fB_S_lc_ctype_c_locale\fP (__c_locale __cloc, const char *__s)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "__cache_type * \fB_M_data\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _CharT>class std::numpunct_byname< _CharT >"
class numpunct_byname [22\&.2\&.3\&.2]\&. 
.PP
Definizzle at line 1874 of file locale_facets\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _CharT > \fBchar_type\fP \fBstd::numpunct\fP< _CharT >::decimal_point () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Return decimal point character\&. This function returns a cold-ass lil char_type ta use as a thugged-out decimal point\&. Well shiiiit, it do so by returnin returnin numpunct<char_type>::do_decimal_point()\&.
.PP
\fBReturns:\fP
.RS 4
\fIchar_type\fP representin a thugged-out decimal point\&. 
.RE
.PP

.PP
Definizzle at line 1707 of file locale_facets\&.h\&.
.PP
References std::numpunct< _CharT >::do_decimal_point()\&.
.SS "template<typename _CharT > virtual \fBchar_type\fP \fBstd::numpunct\fP< _CharT >::do_decimal_point () const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Return decimal point character\&. Returns a cold-ass lil char_type ta use as a thugged-out decimal point\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBReturns:\fP
.RS 4
\fIchar_type\fP representin a thugged-out decimal point\&. 
.RE
.PP

.PP
Definizzle at line 1794 of file locale_facets\&.h\&.
.PP
Referenced by std::numpunct< _CharT >::decimal_point()\&.
.SS "template<typename _CharT > virtual \fBstring_type\fP \fBstd::numpunct\fP< _CharT >::do_falsename () const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Return strang representation of bool false\&. Returns a string_type containin tha text representation fo' false bool variables\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBReturns:\fP
.RS 4
string_type representin printed form of false\&. 
.RE
.PP

.PP
Definizzle at line 1845 of file locale_facets\&.h\&.
.PP
Referenced by std::numpunct< _CharT >::falsename()\&.
.SS "template<typename _CharT > virtual \fBstring\fP \fBstd::numpunct\fP< _CharT >::do_groupin () const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Return groupin justification\&. Returns a strang representin groupings fo' tha integer part of a number\&. This function be a hook fo' derived classes ta chizzle tha value returned\&. 
.PP
\fBSee Also:\fP
.RS 4
grouping() fo' details\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Strin representin groupin justification\&. 
.RE
.PP

.PP
Definizzle at line 1819 of file locale_facets\&.h\&.
.PP
Referenced by std::numpunct< _CharT >::grouping()\&.
.SS "template<typename _CharT > virtual \fBchar_type\fP \fBstd::numpunct\fP< _CharT >::do_thousands_sep () const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Return thousandz separator character\&. Returns a cold-ass lil char_type ta use as a thousandz separator\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBReturns:\fP
.RS 4
\fIchar_type\fP representin a thousandz separator\&. 
.RE
.PP

.PP
Definizzle at line 1806 of file locale_facets\&.h\&.
.PP
Referenced by std::numpunct< _CharT >::thousands_sep()\&.
.SS "template<typename _CharT > virtual \fBstring_type\fP \fBstd::numpunct\fP< _CharT >::do_truename () const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Return strang representation of bool true\&. Returns a string_type containin tha text representation fo' legit bool variables\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBReturns:\fP
.RS 4
string_type representin printed form of true\&. 
.RE
.PP

.PP
Definizzle at line 1832 of file locale_facets\&.h\&.
.PP
Referenced by std::numpunct< _CharT >::truename()\&.
.SS "template<typename _CharT > \fBstring_type\fP \fBstd::numpunct\fP< _CharT >::falsename () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Return strang representation of bool false\&. This function returns a string_type containin tha text representation fo' false bool variables\&. Well shiiiit, it do so by callin numpunct<char_type>::do_falsename()\&.
.PP
\fBReturns:\fP
.RS 4
string_type representin printed form of false\&. 
.RE
.PP

.PP
Definizzle at line 1777 of file locale_facets\&.h\&.
.PP
References std::numpunct< _CharT >::do_falsename()\&.
.SS "template<typename _CharT > \fBstring\fP \fBstd::numpunct\fP< _CharT >::groupin () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Return groupin justification\&. This function returns a strang representin groupings fo' tha integer part of a number\&. Groupings indicate where thousandz separators should be banged up in tha integer part of a number\&.
.PP
Each char up in tha return strang is interpret as a integer rather than a cold-ass lil character\&. These numbers represent tha number of digits up in a group\&. Da first char up in tha strang represents tha number of digits up in tha least dope group\&. If a cold-ass lil char is negative, it indicates a unlimited number of digits fo' tha group\&. If mo' chars from tha strang is required ta crew a number, tha last char is used repeatedly\&.
.PP
For example, if tha grouping() returns '\\003\\002' n' be applied ta tha number 123456789, dis correspondz ta 12,34,56,789\&. Note dat if tha strang was '32', dis would put mo' than 50 digits tha fuck into tha least dope crew if tha characta set is ASCII\&.
.PP
Da strang is returned by callin numpunct<char_type>::do_grouping()\&.
.PP
\fBReturns:\fP
.RS 4
strin representin groupin justification\&. 
.RE
.PP

.PP
Definizzle at line 1751 of file locale_facets\&.h\&.
.PP
References std::numpunct< _CharT >::do_grouping()\&.
.SS "template<typename _CharT > \fBchar_type\fP \fBstd::numpunct\fP< _CharT >::thousands_sep () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Return thousandz separator character\&. This function returns a cold-ass lil char_type ta use as a thousandz separator\&. Well shiiiit, it do so by returnin returnin numpunct<char_type>::do_thousands_sep()\&.
.PP
\fBReturns:\fP
.RS 4
char_type representin a thousandz separator\&. 
.RE
.PP

.PP
Definizzle at line 1720 of file locale_facets\&.h\&.
.PP
References std::numpunct< _CharT >::do_thousands_sep()\&.
.SS "template<typename _CharT > \fBstring_type\fP \fBstd::numpunct\fP< _CharT >::truename () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Return strang representation of bool true\&. This function returns a string_type containin tha text representation fo' legit bool variables\&. Well shiiiit, it do so by callin numpunct<char_type>::do_truename()\&.
.PP
\fBReturns:\fP
.RS 4
string_type representin printed form of true\&. 
.RE
.PP

.PP
Definizzle at line 1764 of file locale_facets\&.h\&.
.PP
References std::numpunct< _CharT >::do_truename()\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename _CharT > \fBlocale::id\fP \fBstd::numpunct\fP< _CharT >::id\fC [static]\fP, \fC [inherited]\fP"

.PP
Numpunct facet id\&. 
.PP
Definizzle at line 1657 of file locale_facets\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
