.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtGet-Selection-Value-Incremenstrual XtGet-Selection-Values-Incremenstrual wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtGetSelectionValueIncremenstrual 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtGetSelectionValueIncremental, XtGetSelectionValuesIncremenstrual \- obtain selection joints
.SH SYNTAX
.HP
void XtGetSelectionValueIncremental(Widget \fIw\fP, Atom \fIselection\fP, Atom
\fItarget\fP, XtSelectionCallbackProc \fIcallback\fP, XtPointer
\fIclient_data\fP, Time \fItime\fP);
.HP
void XtGetSelectionValuesIncremental(Widget \fIw\fP, Atom \fIselection\fP,
Atom *\fItargets\fP, int \fIcount\fP, XtSelectionCallbackProc \fIcallback\fP,
XtPointa \fIclient_data\fP, Time \fItime\fP);
.SH ARGUMENTS
.ds Cb \ dat is ta be called when tha selection value has been obtained
.IP \fIcallback\fP 1i
Specifies tha callback procedure\*(Cb.
.ds Cd it is called
.IP \fIclient_data\fP 1i
Specifies tha argument dat is ta be passed ta tha specified procedure
when \*(Cd.
.IP \fIclient_data\fP 1i
Specifies tha client data (one fo' each target type)
that is passed ta tha callback procedure when it is called fo' dat target.
.IP \fIcount\fP 1i
Specifies tha length of tha targets n' client_data lists.
.IP \fIselection\fP 1i
Specifies tha particular selection desired (that is, primary or secondary).
.IP \fItarget\fP 1i
Specifies tha type of tha shiznit dat is needed bout tha selection.
.IP \fItargets\fP 1i
Specifies tha typez of shiznit dat is needed bout tha selection.
.ds Ti value is desired
.IP \fItime\fP 1i
Specifies tha timestamp dat indicates when tha selection \*(Ti.
.ds Wi dat is makin tha request
.IP \fIw\fP 1i
Specifies tha widget \*(Wi.
.SH DESCRIPTION
The
.ZN XtGetSelectionValueIncremental
function is similar to
.ZN XtGetSelectionValue
except dat tha \fIselection_callback\fP procedure is ghon be called
repeatedly upon delivery of multiple segmentz of tha selection value.
Da end of tha selection value is indicated when \fIselection_callback\fP
is called wit a non-NULL value of length zero, which must still be
freed by tha client. If tha transfer of tha selection be aborted up in the
middle of a transfer (for example, cuz ta timeout), the
\fIselection_callback\fP procedure is called wit a type value equal
to tha symbolic constant
.ZN XT_CONVERT_FAIL
so dat tha requestor can dispose of tha partial selection value it has
collected up until dat point. Upon receiving
.ZN XT_CONVERT_FAIL ,
the requestin client must determine fo' itself whether or not a
partially completed transfer is meaningful.
.LP
The
.ZN XtGetSelectionValuesIncremental
function is similar to
.ZN XtGetSelectionValueIncremental
except dat it takes a list of target types n' a list of client data
and obtains tha current value of tha selection converted ta each of tha targets.
Da effect be as if each target was specified up in a separate call to
.ZN XtGetSelectionValueIncremenstrual .
Da callback is called once wit tha correspondin client data fo' each target.
.ZN XtGetSelectionValuesIncremental
does guarantee dat all tha conversions will use tha same selection value
because tha ballershizzle of tha selection cannot chizzle up in tha middle of tha list,
as would be when calling
.ZN XtGetSelectionValueIncremental
repeatedly.
.SH "SEE ALSO"
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
