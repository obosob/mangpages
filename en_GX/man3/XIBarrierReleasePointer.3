'\" t
.\"     Title: xibarrierreleasepointer
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 05/30/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XIBARRIERRELEASEPOIN" "3" "05/30/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XIBarrierReleasePointer, XIBarrierReleasePointas \- allow pointa movement across a pointa barrier
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput2\&.h>
.fi
.sp
.nf
int XIBarrierReleasePointer( Display *display,
                             int deviceid,
                             PointerBarrier barrier,
                             BarrierEventID eventid);
.fi
.sp
.nf
int XIBarrierReleasePointers( Display *display,
                              XIBarrierReleasePointerInfo *barriers,
                              int num_barriers);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
deviceid
       Specifies tha thang allowed ta move across tha barrier\&.
.fi
.sp
.nf
barrier
       Specifies tha barrier\&.
.fi
.sp
.nf
eventid
       Specifies tha unique event ID fo' dis barrier event sequence\&.
.fi
.sp
.nf
barriers
       List of deviceid, barrier, eventid triplets\&.
.fi
.sp
.nf
num_barriers
       Number of elements up in barriers\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
If a pointa is constrained by a pointa barrier, release tha pointer
from tha barrier n' allow it ta cross tha barrier wit tha next motion\&.
If tha pointa moves away from tha barrier, dis request do nothing\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
This request only releases tha pointa fo' tha given barrier event
sequence\&. If tha pointa moves away from or all up in tha barrier, a
XI_BarrierLeave event is generated\&. Future pointa movement constrained
by dis barrier will assign a freshly smoked up eventid n' require a new
XIBarrierReleasePointa request\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If tha pointa aint currently blocked by tha barrier or tha barrier
event sequence has ended, dis request do nothing\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIBarrierReleasePointa n' XIBarrierReleasePointas can generate a
BadDevice or BadValue error\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da thang do not
       exist or aint a masta pointa device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       A value fo' a PointerBarrier argument do not name a thugged-out defined
       pointa barrier\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XFixesCreatePointerBarrier(3)
.fi
.if n \{\
.RE
.\}
