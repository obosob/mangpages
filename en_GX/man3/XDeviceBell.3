'\" t
.\"     Title: xdevicebell
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XDEVICEBELL" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XDeviceBell \- rang a funky-ass bell on a thang supported all up in tha input extension
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
Status XDeviceBell( Display *display,
                    XDevice *device,
                    XID feedbackclass,
                    XID feedbackid,
                    int cement);
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang wit which tha bell be associated\&.
.fi
.sp
.nf
feedbackclass
       Specifies tha class of tha feedback wit which tha bell
       be associated\&.
.fi
.sp
.nf
feedbackid
       Specifies tha id of tha feedback wit which tha bell is
       associated\&.
.fi
.sp
.nf
percent
       Specifies tha volume up in tha range \-100 ta 100 at which
       tha bell should be rung\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
Da XDeviceBell request causes tha server ta rang a funky-ass bell on the
specified feedback of tha specified device, if possible\&. The
specified volume is relatizzle ta tha base volume fo' tha bell\&.
If a invalid thang is specified, a BadDevice error will be
returned\&. Da feedbackclass n' feedbackid parametas contain
values returned by a XGetFeedbackControl request n' uniquely
identify tha bell ta ring\&. If a gangbangin' feedbackclass is specified that
does not support a funky-ass bell, or if a nonexistent feedbackid is
specified, or a cement value is specified dat aint up in the
range \-100 ta 100, a BadValue error is ghon be returned\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da volume at which tha bell is rung when tha cement argument
is nonnegatizzle is: base \- [(base * cement) / 100] + cement
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da volume at which tha bell rings when tha cement argument is
negatizzle is: base + [(base * cement) / 100]
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
To chizzle tha base volume of tha bell, use
XChangeFeedbackControl\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XDeviceBell can generate a BadDevice or a BadValue error\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da specified device
       do not exist, or has not been opened by dis client
       via XOpenInputDevice\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       An invalid feedbackclass, feedbackid, or cement value
       was specified\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XChangeFeedbackControl(3), XBell(3)
.fi
.if n \{\
.RE
.\}
