" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::rb_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits __gnu_pbds::detail::bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef Cmp_Fn \fBcmp_fn\fP"
.br
.ti -1c
.RI "typedef \fBstd::pair\fP< size_type, 
.br
size_type > \fBcomp_hash\fP"
.br
.ti -1c
.RI "typedef base_type::const_iterator \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef base_type::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef base_type::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::const_reverse_iterator \fBconst_reverse_iterator\fP"
.br
.ti -1c
.RI "typedef \fBrb_tree_tag\fP \fBcontainer_category\fP"
.br
.ti -1c
.RI "typedef _Alloc::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef base_type::iterator \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::key_const_pointa \fBkey_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::key_const_reference \fBkey_const_reference\fP"
.br
.ti -1c
.RI "typedef base_type::key_pointa \fBkey_pointer\fP"
.br
.ti -1c
.RI "typedef base_type::key_reference \fBkey_reference\fP"
.br
.ti -1c
.RI "typedef base_type::key_type \fBkey_type\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::mapped_const_pointa \fBmapped_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
base_type::mapped_const_reference \fBmapped_const_reference\fP"
.br
.ti -1c
.RI "typedef base_type::mapped_pointa \fBmapped_pointer\fP"
.br
.ti -1c
.RI "typedef base_type::mapped_reference \fBmapped_reference\fP"
.br
.ti -1c
.RI "typedef base_type::mapped_type \fBmapped_type\fP"
.br
.ti -1c
.RI "typedef __nothrowcopy::indicator \fBno_throw_indicator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_type::node_const_iterator \fBnode_const_iterator\fP"
.br
.ti -1c
.RI "typedef traits_type::node_iterator \fBnode_iterator\fP"
.br
.ti -1c
.RI "typedef base_type::node_update \fBnode_update\fP"
.br
.ti -1c
.RI "typedef base_type::const_iterator \fBpoint_const_iterator\fP"
.br
.ti -1c
.RI "typedef base_type::point_iterator \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef base_type::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef base_type::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef base_type::reverse_iterator \fBreverse_iterator\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef integral_constant< int, 
.br
Store_Hash > \fBstore_extra\fP"
.br
.ti -1c
.RI "typedef base_type::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBrb_tree_map\fP (const Cmp_Fn &)"
.br
.ti -1c
.RI "\fBrb_tree_map\fP (const Cmp_Fn &, const node_update &)"
.br
.ti -1c
.RI "\fBrb_tree_map\fP (const \fBrb_tree_map\fP< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "template<typename It > void \fBcopy_from_range\fP (It, It)"
.br
.ti -1c
.RI "bool \fBempty\fP () const "
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const "
.br
.ti -1c
.RI "bool \fBerase\fP (key_const_reference)"
.br
.ti -1c
.RI "iterator \fBerase\fP (iterator)"
.br
.ti -1c
.RI "reverse_iterator \fBerase\fP (reverse_iterator)"
.br
.ti -1c
.RI "template<typename Pred > \fBrb_tree_map\fP< Key, Mapped, 
.br
Cmp_Fn, Node_And_It_Traits, 
.br
_Alloc >::size_type \fBerase_if\fP (Pred pred)"
.br
.ti -1c
.RI "template<typename Pred > size_type \fBerase_if\fP (Pred)"
.br
.ti -1c
.RI "point_iterator \fBfind\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBfind\fP (key_const_reference) const "
.br
.ti -1c
.RI "Cmp_Fn & \fBget_cmp_fn\fP ()"
.br
.ti -1c
.RI "const Cmp_Fn & \fBget_cmp_fn\fP () const "
.br
.ti -1c
.RI "\fBstd::pair\fP< point_iterator, bool > \fBinsert\fP (const_reference)"
.br
.ti -1c
.RI "void \fBjoin\fP (\fBrb_tree_map\fP< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "point_iterator \fBlower_bound\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBlower_bound\fP (key_const_reference) const "
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const "
.br
.ti -1c
.RI "node_const_iterator \fBnode_begin\fP () const "
.br
.ti -1c
.RI "node_iterator \fBnode_begin\fP ()"
.br
.ti -1c
.RI "node_const_iterator \fBnode_end\fP () const "
.br
.ti -1c
.RI "node_iterator \fBnode_end\fP ()"
.br
.ti -1c
.RI "mapped_reference \fBoperator[]\fP (key_const_reference r_key)"
.br
.ti -1c
.RI "reverse_iterator \fBrbegin\fP ()"
.br
.ti -1c
.RI "const_reverse_iterator \fBrbegin\fP () const "
.br
.ti -1c
.RI "reverse_iterator \fBrend\fP ()"
.br
.ti -1c
.RI "const_reverse_iterator \fBrend\fP () const "
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.ti -1c
.RI "void \fBsplit\fP (key_const_reference, \fBrb_tree_map\fP< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBrb_tree_map\fP< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "void \fBswap\fP (bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "point_iterator \fBupper_bound\fP (key_const_reference)"
.br
.ti -1c
.RI "point_const_iterator \fBupper_bound\fP (key_const_reference) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "no_throw_indicator \fBm_no_throw_copies_indicator\fP"
.br
.ti -1c
.RI "store_extra \fBm_store_extra_indicator\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef node_allocator::value_type \fBnode\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< typename 
.br
traits_type::node >::other \fBnode_allocator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_type::null_node_update_pointa \fBnull_node_update_pointer\fP"
.br
.ti -1c
.RI "typedef \fBtypes_traits\fP< Key, 
.br
Mapped, _Alloc, false > \fBtraits_base\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBactual_erase_node\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBapply_update\fP (node_pointer, null_node_update_pointer)"
.br
.ti -1c
.RI "template<typename Node_Update_ > void \fBapply_update\fP (node_pointer, Node_Update_ *)"
.br
.ti -1c
.RI "\fBstd::pair\fP< node_pointer, bool > \fBerase\fP (node_pointer)"
.br
.ti -1c
.RI "node_pointa \fBget_new_node_for_leaf_insert\fP (const_reference, false_type)"
.br
.ti -1c
.RI "node_pointa \fBget_new_node_for_leaf_insert\fP (const_reference, true_type)"
.br
.ti -1c
.RI "void \fBinitialize_min_max\fP ()"
.br
.ti -1c
.RI "iterator \fBinsert_imp_empty\fP (const_reference)"
.br
.ti -1c
.RI "\fBstd::pair\fP< point_iterator, bool > \fBinsert_leaf\fP (const_reference)"
.br
.ti -1c
.RI "iterator \fBinsert_leaf_new\fP (const_reference, node_pointer, bool)"
.br
.ti -1c
.RI "void \fBjoin_finish\fP (bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "bool \fBjoin_prep\fP (bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "size_type \fBrecursive_count\fP (node_pointer) const "
.br
.ti -1c
.RI "void \fBrotate_left\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBrotate_parent\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBrotate_right\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBsplit_finish\fP (bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "bool \fBsplit_prep\fP (key_const_reference, bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.ti -1c
.RI "void \fBupdate_min_max_for_erased_node\fP (node_pointer)"
.br
.ti -1c
.RI "void \fBupdate_to_top\fP (node_pointer, null_node_update_pointer)"
.br
.ti -1c
.RI "template<typename Node_Update_ > void \fBupdate_to_top\fP (node_pointer, Node_Update_ *)"
.br
.ti -1c
.RI "void \fBvalue_swap\fP (bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc > &)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static void \fBclear_imp\fP (node_pointer)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "node_pointa \fBm_p_head\fP"
.br
.ti -1c
.RI "size_type \fBm_size\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static node_allocator \fBs_node_allocator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Mapped, typename Cmp_Fn, typename Node_And_It_Traits, typename _Alloc>class __gnu_pbds::detail::rb_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >"
Red-Black tree\&.
.PP
This implementation uses a scam from tha SGI STL (usin a \fIheader\fP node which is needed fo' efficient iteration)\&. 
.PP
Definizzle at line 84 of file rb_tree_\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename Key , typename Mapped , typename Cmp_Fn , typename Node_And_It_Traits , typename _Alloc > bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_const_iterator __gnu_pbds::detail::bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_begin () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Returns a cold-ass lil const node_iterator correspondin ta tha node all up in tha root of tha tree\&. 
.PP
Definizzle at line 109 of file bin_search_tree_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Cmp_Fn , typename Node_And_It_Traits , typename _Alloc > bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_iterator __gnu_pbds::detail::bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_begin ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Returns a node_iterator correspondin ta tha node all up in tha root of tha tree\&. 
.PP
Definizzle at line 117 of file bin_search_tree_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Cmp_Fn , typename Node_And_It_Traits , typename _Alloc > bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_const_iterator __gnu_pbds::detail::bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_end () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Returns a cold-ass lil const node_iterator correspondin ta a node just afta a leaf of tha tree\&. 
.PP
Definizzle at line 125 of file bin_search_tree_\&.hpp\&.
.SS "template<typename Key , typename Mapped , typename Cmp_Fn , typename Node_And_It_Traits , typename _Alloc > bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_iterator __gnu_pbds::detail::bin_search_tree_map< Key, Mapped, Cmp_Fn, Node_And_It_Traits, _Alloc >::node_end ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Returns a node_iterator correspondin ta a node just afta a leaf of tha tree\&. 
.PP
Definizzle at line 133 of file bin_search_tree_\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
