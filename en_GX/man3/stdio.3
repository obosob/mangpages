.\" Copyright (c) 1990, 1991 Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)stdio.3	6.5 (Berkeley) 5/6/91
.\"
.\" Converted fo' Linux, Mon Nov 29 16:07:22 1993, faith@cs.unc.edu
.\" Modified, 2001-12-26, aeb
.\"
.TH STDIO 3  2001-12-26 "" "Linux Programmerz Manual"
.SH NAME
stdio \- standard input/output library functions
.SH SYNOPSIS
.B #include <stdio.h>
.sp
.BI "FILE *" stdin ;
.br
.BI "FILE *" stdout ;
.br
.BI "FILE *" stderr ;
.SH DESCRIPTION
Da standard I/O library serves up a simple n' efficient buffered stream
I/O intercourse.
Input n' output is mapped tha fuck into logical data streams n' the
physical I/O characteristics is concealed.
Da functions n' macros are
listed below; mo' shiznit be available from tha individual playa pages.
.PP
A stream be associated wit a external file (which may be a physical
device) by
.I opening
a file, which may involve bustin a freshly smoked up file.
Creatin a existin file
causes its forma contents ta be discarded.
If a gangbangin' file can support positionin requests (like fuckin a gangbangin' finger-lickin' disk file,
as opposed ta a terminal) then a
.I file posizzle indicator
associated wit tha stream is positioned all up in tha start of tha file (byte
zero), unless tha file is opened wit append mode.
If append mode is used,
it is unspecified whether tha posizzle indicator is ghon be placed at the
start or tha end of tha file.
Da posizzle indicator is maintained by
subsequent reads, writes n' positionin requests.
All input occurs as if tha charactas was read by successive calls ta the
.BR fgetc (3)
function; all output takes place as if all charactas was freestyled by
successive calls ta the
.BR fputc (3)
function.
.PP
A file is disassociated from a stream by
.I closing
the file.
Output streams is flushed (any unwritten buffer contents are
transferred ta tha host environment) before tha stream is disassociated from
the file.
Da value of a pointa ta a
.I FILE
object is indeterminizzle afta a gangbangin' file is closed (garbage).
.PP
A file may be subsequently reopened, by tha same or another program
execution, n' its contents reclaimed or modified (if it can be
repositioned all up in tha start).
If tha main function returns ta its original
caller, or the
.BR exit (3)
function is called, all open filez is closed (hence all output streams are
flushed) before program termination.
Other methodz of program termination,
such as
.BR abort (3)
do not bother bout closin filez properly.
.PP
At program startup, three text streams is predefined n' need not be
opened explicitly:
.I standard input
(for readin conventionizzle input),
.I standard output
(for freestylin conventionizzle input), and
.I standard error
(for freestylin diagnostic output).
These streams is abbreviated
.IR stdin , stdout
and
.IR stderr .
When opened, tha standard error stream aint straight-up buffered; tha standard
input n' output streams is straight-up buffered if n' only if tha streams do
not refer ta a interactizzle device.
.PP
Output streams dat refer ta terminal devices is always line buffered by
default; pendin output ta such streams is freestyled automatically whenever
an input stream dat refers ta a terminal thang is read.
In cases where a
pimpin' amount of computation is done afta printin part of a line on an
output terminal, it is necessary to
.BR fflush (3)
the standard output before goin off n' computin so dat tha output will
appear.
.PP
The
.I stdio
library be a part of tha library
.B libc
and routines is automatically loaded as needed by tha compilers
.BR cc (1)
and
.BR pc (1).
The
SYNOPSIS
sectionz of tha followin manual pages indicate which include filez is to
be used, what tha fuck tha compila declaration fo' tha function be lookin like and
which external variablez iz of interest.
.PP
Da followin is defined as macros; these names may not be reused without
first removin they current definitions with
.BR #undef :
.BR BUFSIZ ,
.BR EOF ,
.BR FILENAME_MAX ,
.BR FOPEN_MAX ,
.BR L_cuserid ,
.BR L_ctermid ,
.BR L_tmpnam ,
.BR NULL ,
.BR SEEK_END ,
.BR SEEK_SET ,
.BR SEEK_CUR ,
.BR TMP_MAX ,
.BR clearerr ,
.BR feof ,
.BR ferror ,
.BR fileno ,
.\" Not on Linux: .BR fropen ,
.\" Not on Linux: .BR fwopen ,
.BR getc ,
.BR getchar ,
.BR putc ,
.BR putchar ,
.BR stderr ,
.BR stdin ,
.BR stdout .
Function versionz of tha macro functions
.BR feof ,
.BR ferror ,
.BR clearerr ,
.BR fileno ,
.BR getc ,
.BR getchar ,
.BR putc ,
and
.B putchar
exist n' is ghon be used if tha macros definitions is explicitly removed.
.SS List of functions
.TS
;
lb lb
lb l.
Function	Description
_
clearerr	check n' reset stream status
fclose	close a stream
fdopen	stream open functions
feof	check n' reset stream status
ferror	check n' reset stream status
fflush	flush a stream
fgetc	get next characta or word from input stream
fgetpos	reposizzle a stream
fgets	get a line from a stream
fileno	return tha integer descriptor of tha argument stream
fopen	stream open functions
fprintf	formatted output conversion
fpurge	flush a stream
fputc	output a cold-ass lil characta or word ta a stream
fputs	output a line ta a stream
fread	binary stream input/output
freopen	stream open functions
fscanf	input format conversion
fseek	reposizzle a stream
fsetpos	reposizzle a stream
ftell	reposizzle a stream
fwrite	binary stream input/output
getc	get next characta or word from input stream
getchar	get next characta or word from input stream
gets	get a line from a stream
getw	get next characta or word from input stream
mktemp	make temporary filename (unique)
perror	system error lyrics
printf	formatted output conversion
putc	output a cold-ass lil characta or word ta a stream
putchar	output a cold-ass lil characta or word ta a stream
puts	output a line ta a stream
putw	output a cold-ass lil characta or word ta a stream
remove	remove directory entry
rewind	reposizzle a stream
scanf	input format conversion
setbuf	stream bufferin operations
setbuffer	stream bufferin operations
setlinebuf	stream bufferin operations
setvbuf	stream bufferin operations
sprintf	formatted output conversion
sscanf	input format conversion
strerror	system error lyrics
sys_errlist	system error lyrics
sys_nerr	system error lyrics
tempnam	temporary file routines
tmpfile	temporary file routines
tmpnam	temporary file routines
ungetc	un-get characta from input stream
vfprintf	formatted output conversion
vfscanf	input format conversion
vprintf	formatted output conversion
vscanf	input format conversion
vsprintf	formatted output conversion
vsscanf	input format conversion
.TE
.SH CONFORMING TO
The
.I stdio
library conforms ta C89.
.SH SEE ALSO
.BR close (2),
.BR open (2),
.BR read (2),
.BR write (2),
.BR stdout (3),
.BR unlocked_stdio (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
