.\" Copyright (c) 2008 Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_ATTR_SETSTACKADDR 3 2008-10-24 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_attr_setstackaddr, pthread_attr_getstackaddr \-
set/get stack address attribute up in thread attributes object
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.BI "int pthread_attr_setstackaddr(pthread_attr_t *" attr \
", void *" stackaddr );
.BI "int pthread_attr_getstackaddr(pthread_attr_t *" attr \
", void **" stackaddr );
.sp
Compile n' link wit \fI\-pthread\fP.
.fi
.SH DESCRIPTION
These functions is obsolete:
.B do not use em.
Use
.BR pthread_attr_setstack (3)
and
.BR pthread_attr_getstack (3)
instead.

The
.BR pthread_attr_setstackaddr ()
function sets tha stack address attribute of the
thread attributes object referred ta by
.I attr
to tha value specified in
.IR stackaddr .
This attribute specifies tha location of tha stack dat should
be used by a thread dat is pimped rockin tha thread attributes object
.IR attr .

.I stackaddr
should point ta a funky-ass buffer of at least
.B PTHREAD_STACK_MIN
bytes dat was allocated by tha caller.
Da pagez of tha allocated buffer should be both readable n' writable.

The
.BR pthread_attr_getstackaddr ()
function returns tha stack address attribute of the
thread attributes object referred ta by
.I attr
in tha buffer pointed ta by
.IR stackaddr .
.SH RETURN VALUE
On success, these functions return 0;
on error, they return a nonzero error number.
.SH ERRORS
No errors is defined
(but applications should nevertheless
handle a possible error return).
.SH VERSIONS
These functions is provided by glibc since version 2.1.
.SH CONFORMING TO
POSIX.1-2001 specifies these functions but marks dem as obsolete.
POSIX.1-2008 removes tha justification of these functions.
.SH NOTES
.I Do not use these functions!
They cannot be portably used, since they provide no way of specifying
the direction of growth or tha range of tha stack.
For example, on architectures wit a stack dat grows downward,
.I stackaddr
specifies tha next address past the
.I highest
address of tha allocated stack area.
But fuck dat shiznit yo, tha word on tha street is dat on architectures wit a stack dat grows upward,
.I stackaddr
specifies the
.I lowest
address up in tha allocated stack area.
By contrast, the
.I stackaddr
used by
.BR pthread_attr_setstack (3)
and
.BR pthread_attr_getstack (3),
is always a pointa ta tha lowest address up in tha allocated stack area
(and the
.I stacksize
argument specifies tha range of tha stack).
.SH SEE ALSO
.BR pthread_attr_init (3),
.BR pthread_attr_setstack (3),
.BR pthread_attr_setstacksize (3),
.BR pthread_create (3),
.BR pthreadz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
