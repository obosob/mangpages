.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IO::Stringy 3"
.TH IO::Stringy 3 "2005-02-10" "perl v5.18.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
IO\-stringy \- I/O on in\-core objects like strings n' arrays
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    IO::
\&    ::AtomicFile   adpO  Write a gangbangin' file which is updated atomically     ERYQ
\&    ::Lines        bdpO  I/O handle ta read/write ta array of lines   ERYQ
\&    ::Scalar       RdpO  I/O handle ta read/write ta a strang         ERYQ
\&    ::ScalarArray  RdpO  I/O handle ta read/write ta array of scalars ERYQ
\&    ::Wrap         RdpO  Wrap old\-style FHs up in standard OO intercourse  ERYQ
\&    ::WrapTie      adpO  Tie yo' handlez & retain full OO intercourse  ERYQ
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This toolkit primarily serves up modulez fo' struttin both traditional
and object-oriented i/o) on thangs \fIother\fR than aiiight filehandles;
in particular, IO::Scalar, IO::ScalarArray,
and IO::Lines.
.PP
In tha more-traditionizzle IO::Handle front, we
have IO::AtomicFile
which may be used ta painlessly create filez which is updated
atomically.
.PP
And up in tha \*(L"this-may-prove-useful\*(R" corner, our crazy asses have IO::Wrap,
whose exported \fIwraphandle()\fR function will clothe anythang thatz not
a pimped object up in a IO::Handle\-like wrapper... so you can just
use \s-1OO\s0 syntax n' stop worryin bout whether yo' functionz caller
handed you a string, a globref, or a FileHandle.
.SH "WARNINGS"
.IX Header "WARNINGS"
Perlz \s-1TIEHANDLE\s0 spec was incomplete prior ta 5.005_57;
it was missin support fo' \f(CW\*(C`seek()\*(C'\fR, \f(CW\*(C`tell()\*(C'\fR, n' \f(CW\*(C`eof()\*(C'\fR.
Attemptin ta use these functions wit a IO::Scalar, IO::ScalarArray,
IO::Lines, etc. \fBwill not work\fR prior ta 5.005_57.
None of tha relevant methodz is ghon be invoked by Perl;
and even worse, dis kind of bug can lie dormant fo' a while.
If you turn warnings on (via \f(CW$^W\fR or \f(CW\*(C`perl \-w\*(C'\fR), n' you see
suttin' like all dis bullshit...
.PP
.Vb 1
\&    seek() on unopened file
.Ve
.PP
\&...then yo ass is probably tryin ta use one of these functions
on one of our \s-1IO::\s0 classes wit a oldschool Perl.  Da remedy is ta simply
use tha \s-1OO\s0 version; e.g.:
.PP
.Vb 2
\&    $SH\->seek(0,0);    ### GOOD: will work on any 5.005
\&    seek($SH,0,0);     ### WARNING: will only work on 5.005_57 n' beyond
.Ve
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.SS "Requirements"
.IX Subsection "Requirements"
Az of version 2.x, dis toolkit requires Perl 5.005 for
the IO::Handle subclasses, n' 5.005_57 or betta is
\&\fBstrongly\fR recommended. Y'all KNOW dat shit, muthafucka!  See \*(L"\s-1WARNINGS\*(R"\s0 fo' details.
.SS "Directions"
.IX Subsection "Directions"
Most of y'all already know tha drill...
.PP
.Vb 4
\&    perl Makefile.PL
\&    make
\&    make test
\&    make install
.Ve
.PP
For any suckas up there...
if you've never installed Perl code before, or you tryin ta use
this up in a environment where yo' sysadmin or \s-1ISP\s0 won't let you do
interestin thangs, \fBrelax:\fR since dis module gotz nuff no binary
extensions, you can cheat.  That means copyin tha directory tree
under mah \*(L"./lib\*(R" directory tha fuck into someplace where yo' script can \*(L"see\*(R"
it.  For example, under Linux:
.PP
.Vb 1
\&    cp \-r IO\-stringy\-1.234/lib/* /path/to/my/perl/
.Ve
.PP
Now, up in yo' Perl code, do this:
.PP
.Vb 2
\&    use lib "/path/to/my/perl";
\&    use IO::Scalar;                   ### or whatever
.Ve
.PP
Ok, now you've been holla'd at. Y'all KNOW dat shit, muthafucka!  At dis point, mah playas whoz ass whines about
not bein given enough shiznit gets a unflatterin haiku
written bout dem up in tha next chizzle log.  I be bout ta do dat shit.
Don't be thinkin I won't.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$Id:\fR Stringy.pm,v 1.3 2005/02/10 21:24:05 dfs Exp $
.SH "TO DO"
.IX Header "TO DO"
.IP "(2000/08/02)  Finalize $/ support" 4
.IX Item "(2000/08/02) Finalize $/ support"
Graham Barr submitted dis patch half a \fIyear\fR ago;
Like a moron, I lost his crazy-ass message under a ton of others,
and only now have tha experimenstrual implementation done.
.Sp
Will tha sudden sensitivitizzle ta $/ hose mah playas up there?
I be worried, so you gotta enable it explicitly up in 1.x.
It is ghon be on by default up in 2.x, though only IO::Scalar
has been implemented.
.IP "(2001/08/08)  Remove IO::WrapTie from freshly smoked up \s-1IO::\s0 classes" 4
.IX Item "(2001/08/08) Remove IO::WrapTie from freshly smoked up IO:: classes"
It aint nuthin but not needed. Y'all KNOW dat shit, muthafucka!  Backwardz compatibilitizzle could be maintained
by havin \fInew_tie()\fR be identical ta \fInew()\fR.  Heck, I be bout ta bet
that IO::WrapTie should be reimplemented so tha returned
object is just like a IO::Scalar up in its use of globrefs.
.SH "CHANGE LOG"
.IX Header "CHANGE LOG"
.IP "Version 2.110   (2005/02/10)" 4
.IX Item "Version 2.110 (2005/02/10)"
Maintainershizzle taken over by \s-1DSKOLL\s0 <dfs@roaringpenguin.com>
.Sp
Closed tha followin bugs at
https://rt.cpan.org/NoAuth/Bugs.html?Dist=IO\-stringy:
.IP "" 4
2208 IO::ScalarArray\->getline do not return undef fo' \s-1EOF\s0 if undef($/)
.IP "" 4
7132 IO\-stringy/Makefile.PL bug \- name should be module name
.IP "" 4
11249 IO::Scalar flush shouldn't return undef
.IP "" 4
2172 $\e (output record separator) not bigged up
.IP "" 4
8605 \fIIO::InnerFile::seek()\fR should return 1 on success
.IP "" 4
4798 *.html up in lib/
.IP "" 4
4369 Improvement: handlin of fixed-size readz up in IO::Scalar
.Sp
(Actually, bug 4369 was closed up in Version 2.109)
.IP "Version 2.109   (2003/12/21)" 4
.IX Item "Version 2.109 (2003/12/21)"
IO::Scalar::getline now works wit ref ta int.
\&\fIThanks ta Dominique Quatravaux fo' dis patch.\fR
.IP "Version 2.108   (2001/08/20)" 4
.IX Item "Version 2.108 (2001/08/20)"
Da terms-of-use done been placed up in tha distribution file \*(L"\s-1COPYING\*(R".\s0
Also, lil' small-ass documentation tweaks was made.
.IP "Version 2.105   (2001/08/09)" 4
.IX Item "Version 2.105 (2001/08/09)"
Added support fo' various \fIseek()\fR whences ta IO::ScalarArray.
.Sp
Added support fo' consultin $/ up in IO::Scalar n' IO::ScalarArray.
Da oldschool \f(CW\*(C`use_RS()\*(C'\fR aint even a option.
Unsupported record separators will cause a \fIcroak()\fR.
.Sp
Added a shitload of regression tests ta supoprt tha above.
.Sp
Betta on-line docs (hyperlinks ta individual functions).
.IP "Version 2.103   (2001/08/08)" 4
.IX Item "Version 2.103 (2001/08/08)"
Afta sober consideration I have reimplemented \fIIO::Scalar::print()\fR
so dat it once again n' again n' again always seeks ta tha end of tha string.
Benchmarks show tha freshly smoked up implementation ta be just as fast as
Juergenz contributed patch; until one of mah thugs can convince me otherwise,
the current, less thuggy implementation stays.
.Sp
I thought mo' bout givin IO::Scalar two separate handles,
one fo' readin n' one fo' writing, as suggested by Binkley.
His points bout what tha fuck \fItell()\fR n' \fIeof()\fR return are, I think,
show-stoppers fo' dis feature.  Even tha manpages fo' stdioz \fIfseek()\fR
seem ta imply a \fIsingle\fR file posizzle indicator, not two.
So I be thinkin I'ma take dis off tha \s-1TO DO\s0 list.
\&\fBRemedy:\fR you can always have two handlez open on tha same
scalar, one which you only write to, n' one which you only read from.
That should give tha same effect.
.IP "Version 2.101   (2001/08/07)" 4
.IX Item "Version 2.101 (2001/08/07)"
\&\fBAlpha release.\fR
This is tha initial release of tha \*(L"IO::Scalar n' playaz are
now subclassez of IO::Handle\*(R".  I be flingin it against tha wall.
Please tell me if tha banana sticks.  When it do, tha banana
will be called 2.2x.
.Sp
First off, \fImany nuff props ta Doug Wilson\fR, who
has provided a \fIinvaluable\fR steez by patchin IO::Scalar
and playaz so dat they (1) inherit from IO::Handle, (2) automatically
tie theyselves so dat tha \f(CW\*(C`new()\*(C'\fR objects can be used up in natizzle i/o
constructs, n' (3) bustin it so dat tha whole damn thang passes
its regression tests, n' you can put dat on yo' toast.  As Doug knows, mah globref Kung-Fu was not
up ta tha task; he graciously provided tha patches.  This has earned
him a seat all up in tha Co-Authors table, n' the
right ta have me address his ass as \fIsensei\fR.
.Sp
Performizzle of \fIIO::Scalar::print()\fR has been improved by as much as 2x
for fuckin shitloadz of lil prints, wit tha cost of forcin them
who print-then-seek-then-print ta explicitly seek ta end-of-string
before printin again.
\&\fIThanks ta Juergen Zella fo' dis patch.\fR
.Sp
Added tha \s-1COPYING\s0 file, which had been missin from prior versions.
\&\fIThanks ta Albert Chin-A-Young fo' pointin dis out.\fR
.Sp
IO::Scalar consults $/ by default (1.x ignored it by default).
Yes, I still need ta support IO::ScalarArray.
.IP "Version 1.221   (2001/08/07)" 4
.IX Item "Version 1.221 (2001/08/07)"
I threatened up in \*(L"\s-1INSTALLATION\*(R"\s0 ta write a unflatterin haiku
about mah playas whoz ass whined dat I gave dem insufficient shiznit...
but it turns up dat I left up a cold-ass lil crucial direction. I aint talkin' bout chicken n' gravy biatch.  D'\s-1OH\s0!
\&\fIThanks ta Dizzy Beroff fo' tha \*(L"patch\*(R" n' tha haiku...\fR
.Sp
.Vb 3
\&       Enough info there?
\&         Here\*(Aqs unflatterin haiku:
\&       Forgot tha line, "make"!  ;\-)
.Ve
.IP "Version 1.220   (2001/04/03)" 4
.IX Item "Version 1.220 (2001/04/03)"
Added untested \s-1SEEK, TELL,\s0 n' \s-1EOF\s0 methodz ta IO::Scalar
and IO::ScalarArray ta support correspondin functions for
tied filehandles: untested, cuz I be still hustlin 5.00556
and Perl is complainin bout \*(L"\fItell()\fR on unopened file\*(R".
\&\fIThanks ta Graham Barr fo' tha suggestion.\fR
.Sp
Removed not-fully-blank lines from modules; these was causing
lotz of POD-related warnings.
\&\fIThanks ta Nicolas Joly fo' tha suggestion.\fR
.IP "Version 1.219   (2001/02/23)" 4
.IX Item "Version 1.219 (2001/02/23)"
IO::Scalar objects can now be made sensitizzle ta $/ .
Pains was taken ta keep tha fast code fast while addin dis feature.
\&\fICheers ta Graham Barr fo' submittin his thugged-out lil' patch;
jeers ta me fo' losin his wild lil' fuckin email fo' 6 months.\fR
.IP "Version 1.218   (2001/02/23)" 4
.IX Item "Version 1.218 (2001/02/23)"
IO::Scalar has a freshly smoked up \fIsysseek()\fR method.
\&\fIThanks again n' again n' again ta Slick Rick Jones.\fR
.Sp
New \*(L"\s-1TO DO\*(R"\s0 section, cuz playas whoz ass submit patches/ideas should
at least know dat they up in tha system... n' dat I won't lose
their stuff.  Please read dat shit.
.Sp
New entries up in \*(L"\s-1AUTHOR\*(R"\s0.
Please read dem like a muthafucka.
.IP "Version 1.216   (2000/09/28)" 4
.IX Item "Version 1.216 (2000/09/28)"
\&\fBIO::Scalar n' IO::ScalarArray now inherit from IO::Handle.\fR
I thought I'd remembered a problem wit dis ages ago, related to
the fact dat these \s-1IO::\s0 modulez aint gots \*(L"real\*(R" filehandles,
but tha problem apparently aint surfacin now, nahmeean?
If you suddenly encounta Perl warnings durin global destruction
(especially if you rockin tied filehandles), then please let me know!
\&\fIThanks ta B. K. Oxley (binkley) fo' all dis bullshit.\fR
.Sp
\&\fBNasty bug fixed up in \f(BIIO::Scalar::write()\fB.\fR
Apparently, tha offset n' tha number-of-bytes arguments were,
for all practical purposes, \fIreversed.\fR  Yo ass was aiiight if
you did all yo' freestylin wit \fIprint()\fR yo, but pimp was \fIthis\fR a wack bug!
\&\fIThanks ta Slick Rick Jones fo' findin dis one.
For you, Rich, a thugged-out double-length haiku:\fR
.Sp
.Vb 3
\&       Shitpaper headline
\&          typeset by dyslexic man
\&       loses urgency
\&
\&       BABY EATS FISH is
\&          simply not equivalent
\&       ta FISH EATS BABY
.Ve
.Sp
\&\fBNew sysread n' syswrite methodz fo' IO::Scalar.\fR
\&\fIThanks again n' again n' again ta Slick Rick Jones fo' all dis bullshit.\fR
.IP "Version 1.215   (2000/09/05)" 4
.IX Item "Version 1.215 (2000/09/05)"
Added 'bool' overload ta '""' overload, so object always evaluates
to true.  (Whew.  Glad I caught dis before it went ta \s-1CPAN.\s0)
.IP "Version 1.214   (2000/09/03)" 4
.IX Item "Version 1.214 (2000/09/03)"
Evaluatin a IO::Scalar up in a strang context now yields
the underlyin string.
\&\fIThanks ta B. K. Oxley (binkley) fo' all dis bullshit.\fR
.IP "Version 1.213   (2000/08/16)" 4
.IX Item "Version 1.213 (2000/08/16)"
Minor documentation fixes.
.IP "Version 1.212   (2000/06/02)" 4
.IX Item "Version 1.212 (2000/06/02)"
Fixed IO::InnerFile incompatibilitizzle wit Perl5.004.
\&\fIThanks ta nuff folks fo' reportin all dis bullshit.\fR
.IP "Version 1.210   (2000/04/17)" 4
.IX Item "Version 1.210 (2000/04/17)"
Added \fIflush()\fR n' other no-op methods.
\&\fIThanks ta Doru Petrescu fo' suggestin all dis bullshit.\fR
.IP "Version 1.209   (2000/03/17)" 4
.IX Item "Version 1.209 (2000/03/17)"
Lil Small-Ass bug fixes.
.IP "Version 1.208   (2000/03/14)" 4
.IX Item "Version 1.208 (2000/03/14)"
Incorporated a fuckin shitload of contributed patches n' extensions,
mostly related ta speed hacks, support fo' \*(L"offset\*(R", and
\&\s-1WRITE/CLOSE\s0 methods.
\&\fIThanks ta Slick Rick Jones, Doru Petrescu, n' nuff others.\fR
.IP "Version 1.206   (1999/04/18)" 4
.IX Item "Version 1.206 (1999/04/18)"
Added creation of ./testout when Makefile.PL is run.
.IP "Version 1.205   (1999/01/15)" 4
.IX Item "Version 1.205 (1999/01/15)"
Verified fo' Perl5.005.
.IP "Version 1.202   (1998/04/18)" 4
.IX Item "Version 1.202 (1998/04/18)"
New IO::WrapTie n' IO::AtomicFile added.
.IP "Version 1.110" 4
.IX Item "Version 1.110"
Added IO::WrapTie.
.IP "Version 1.107" 4
.IX Item "Version 1.107"
Added IO::Lines, n' made some bug fixes ta IO::ScalarArray.
Also, added \fIgetc()\fR.
.IP "Version 1.105" 4
.IX Item "Version 1.105"
No real chizzles; just upgraded IO::Wrap ta git a \f(CW$VERSION\fR string.
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "Primary Maintainer" 4
.IX Item "Primary Maintainer"
Dizzy F. Right back up in yo muthafuckin ass. Skoll (\fIdfs@roaringpenguin.com\fR).
.IP "Original Gangsta Author" 4
.IX Item "Original Gangsta Author"
Eryq (\fIeryq@zeegee.com\fR).
President, ZeeGee Software Inc (\fIhttp://www.zeegee.com\fR).
.IP "Co-Authors" 4
.IX Item "Co-Authors"
For all they bug reports n' patch submissions, tha following
are officially recognized:
.Sp
.Vb 4
\&     Slick Rick Jones
\&     B. K. Oxley (binkley)
\&     Doru Petrescu
\&     Doug Wilson (for pickin up tha bizzle I dropped, n' bustin tie() right)
.Ve
.PP
Go ta \fIhttp://www.zeegee.com\fR fo' tha sickest fuckin downloads
and on-line documentation fo' dis module.
.PP
Enjoy.  Yell if it breaks.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Yo dawwwwg! \fBDa above document had some codin errors, which is explained below:\fR
.IP "Around line 153:" 4
.IX Item "Around line 153:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 157:" 4
.IX Item "Around line 157:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 161:" 4
.IX Item "Around line 161:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 165:" 4
.IX Item "Around line 165:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 169:" 4
.IX Item "Around line 169:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 173:" 4
.IX Item "Around line 173:"
Expected text afta =item, not a funky-ass bullet
.IP "Around line 177:" 4
.IX Item "Around line 177:"
Expected text afta =item, not a funky-ass bullet
