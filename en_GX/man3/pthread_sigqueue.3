
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_SIGQUEUE 3 2012-08-19 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_sigqueue \- queue a signal n' data ta a thread
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.BI "int pthread_sigqueue(pthread_t *" thread ", int " sig ,
.BI "                     const union sigval " value );
.fi
.sp
Compile n' link wit \fI\-pthread\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR pthread_sigqueue ():
_GNU_SOURCE
.SH DESCRIPTION
The
.BR pthread_sigqueue ()
function performs a similar task to
.BR sigqueue (3),
but, rather than bustin  a signal ta a process,
it sendz a signal ta a thread up in tha same process as the
callin thread.

The
.I thread
argument is tha ID of a thread up in tha same process as tha caller.
The
.I sig
argument specifies tha signal ta be sent.
The
.I value
argument specifies data ta accompany tha signal; see
.BR sigqueue (3)
for details.
.SH RETURN VALUE
On success,
.BR pthread_sigqueue ()
returns 0;
on error, it returns a error number.
.SH ERRORS
.TP
.B EAGAIN
Da limit of signals which may be queued has been reached.
(See
.BR signal (7)
for further shiznit.)
.TP
.B EINVAL
.I sig
was invalid.
.TP
.B ENOSYS
.BR pthread_sigqueue ()
is not supported on dis system.
.TP
.B ESRCH
.I thread
is not valid.
.SH VERSIONS
The
.BR pthread_sigqueue ()
function first rocked up in glibc 2.11.
.SH CONFORMING TO
This function be a GNU extension.
.SH SEE ALSO
.BR rt_tgsigqueueinfo (2),
.BR sigaction (2),
.BR pthread_sigmask (3),
.BR sigqueue (3),
.BR sigwait (3),
.BR pthreadz (7),
.BR signal (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
