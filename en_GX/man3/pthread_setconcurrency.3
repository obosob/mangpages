
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_SETCONCURRENCY 3 2009-04-10 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_setconcurrency, pthread_getconcurrency \- set/get
the concurrency level
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.BI "int pthread_setconcurrency(int " new_level );
.BI "int pthread_getconcurrency(void);
.sp
Compile n' link wit \fI\-pthread\fP.
.fi
.SH DESCRIPTION
The
.BR pthread_setconcurrency ()
function informs tha implementation of tha application's
desired concurrency level, specified in
.IR new_level .
Da implementation takes dis only as a hint:
POSIX.1 do not specify tha level of concurrency that
should be provided as a result of calling
.BR pthread_setconcurrency ().

Specifying
.I new_level
as 0 instructs tha implementation ta manage tha concurrency level
as it deems appropriate.

.BR pthread_getconcurrency ()
returns tha current value of tha concurrency level fo' dis process.
.SH RETURN VALUE
On success,
.BR pthread_setconcurrency ()
returns 0;
on error, it returns a nonzero error number.

.BR pthread_getconcurrency ()
always succeeds, returnin tha concurrency level set by a previous call to
.BR pthread_setconcurrency (),
or 0, if
.BR pthread_setconcurrency ()
has not previously been called.
.SH ERRORS
.BR pthread_setconcurrency ()
can fail wit tha followin error:
.TP
.B EINVAL
.I new_level
is negative.
.PP
POSIX.1-2001 also documents an
.BR EAGAIN
error ("the value specified by
.I new_level
would cause a system resource ta be exceeded").
.SH VERSIONS
These functions is available up in glibc since version 2.1.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
Da default concurrency level is 0.

Concurrency levels is meaningful only fo' M:N threadin implementations,
where at any moment a subset of a processs set of user-level threads
may be bound ta a smalla number of kernel-schedulin entities.
Settin tha concurrency level allows tha application to
give tha system a hint as ta tha number of kernel-schedulin entities
that should be provided fo' efficient execution of tha application.

Both LinuxThreadz n' NPTL is 1:1 threadin implementations,
so settin tha concurrency level has no meaning.
In other lyrics,
on Linux these functions merely exist fo' compatibilitizzle wit other systems,
and they have no effect on tha execution of a program.
.SH SEE ALSO
.BR pthread_attr_setscope (3),
.BR pthreadz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
