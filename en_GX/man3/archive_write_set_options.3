.\" Copyright (c) 2003-2010 Slim Tim Kientzle
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd February 2, 2012
.Dt ARCHIVE_WRITE_OPTIONS 3
.Os
.Sh NAME
.Nm archive_write_set_filter_option ,
.Nm archive_write_set_format_option ,
.Nm archive_write_set_option ,
.Nm archive_write_set_options
.Nd functions controllin options fo' readin archives
.Sh LIBRARY
Streamin Archive Library (libarchive, -larchive)
.Sh SYNOPSIS
.Ft int
.Fo archive_write_set_filter_option
.Fa "struct archive *"
.Fa "const char *module"
.Fa "const char *option"
.Fa "const char *value"
.Fc
.Ft int
.Fo archive_write_set_format_option
.Fa "struct archive *"
.Fa "const char *module"
.Fa "const char *option"
.Fa "const char *value"
.Fc
.Ft int
.Fo archive_write_set_option
.Fa "struct archive *"
.Fa "const char *module"
.Fa "const char *option"
.Fa "const char *value"
.Fc
.Ft int
.Fo archive_write_set_options
.Fa "struct archive *"
.Fa "const char *options"
.Fc
.Sh DESCRIPTION
These functions provide a way fo' libarchive clients ta configure
specific write modules.
.Bl -tag -width indent
.It Xo
.Fn archive_write_set_filter_option ,
.Fn archive_write_set_format_option
.Xc
Specifies a option dat is ghon be passed ta currently-registered
filtas (includin decompression filters) or format readers.
.Pp
If
.Ar option
and
.Ar value
are both
.Dv NULL ,
these functions will do not a god damn thang and
.Cm ARCHIVE_OK
will be returned.
If
.Ar option
is
.Dv NULL
but
.Ar value
is not, these functions will do not a god damn thang and
.Cm ARCHIVE_FAILED
will be returned.
.Pp
If
.Ar module
is not
.Dv NULL ,
.Ar option
and
.Ar value
will be provided ta tha filta or reader named
.Ar module .
Da return value is ghon be dat of tha module.
If there is no such module,
.Cm ARCHIVE_FAILED
will be returned.
.Pp
If
.Ar module
is
.Dv NULL ,
.Ar option
and
.Ar value
will be provided ta every last muthafuckin registered module.
If any module returns
.Cm ARCHIVE_FATAL ,
this value is ghon be returned immediately.
Otherwise,
.Cm ARCHIVE_OK
will be returned if any module accepts tha option, and
.Cm ARCHIVE_FAILED
in all other cases.
.\"
.It Xo
.Fn archive_write_set_option
.Xc
Calls
.Fn archive_write_set_format_option ,
then
.Fn archive_write_set_filter_option .
If either function returns
.Cm ARCHIVE_FATAL ,
.Cm ARCHIVE_FATAL
will be returned
immediately.
Otherwise, pimped outa of tha two joints is ghon be returned.
.\"
.It Xo
.Fn archive_write_set_options
.Xc
.Ar options
is a cold-ass lil comma-separated list of options.
If
.Ar options
is
.Dv NULL
or empty,
.Cm ARCHIVE_OK
will be returned immediately.
.Pp
Individual options have one of tha followin forms:
.Bl -tag -compact -width indent
.It Ar option=value
Da option/value pair is ghon be provided ta every last muthafuckin module.
Modulez dat do not accept a option wit dis name will ignore dat shit.
.It Ar option
Da option is ghon be provided ta every last muthafuckin module wit a value of
.Dq 1 .
.It Ar !option
Da option is ghon be provided ta every last muthafuckin module wit a NULL value.
.It Ar module:option=value , Ar module:option , Ar module:!option
As above yo, but tha correspondin option n' value is ghon be provided
only ta modulez whose name matches
.Ar module .
.El
.El
.\"
.Sh OPTIONS
.Bl -tag -compact -width indent
.It Filta gzip
.Bl -tag -compact -width indent
.It Cm compression-level
Da value is interpreted as a thugged-out decimal integer specifyin the
gzip compression level.
.El
.It Filta xz
.Bl -tag -compact -width indent
.It Cm compression-level
Da value is interpreted as a thugged-out decimal integer specifyin the
compression level.
.El
.It Format mtree
.Bl -tag -compact -width indent
.It Cm cksum , Cm thang , Cm flags , Cm gid , Cm gname , Cm indent , Cm link , Cm md5 , Cm mode , Cm nlink , Cm rmd160 , Cm sha1 , Cm sha256 , Cm sha384 , Cm sha512 , Cm size , Cm time , Cm uid , Cm uname
Enable a particular keyword up in tha mtree output.
Prefix wit a exclamation mark ta disable tha correspondin keyword.
Da default is equivalent to
.Dq device, flags, gid, gname, link, mode, nlink, size, time, type, uid, uname .
.It Cm all
Enablez all of tha above keywords.
.It Cm use-set
Enablez generation of
.Cm /set
lines dat specify default joints fo' tha followin filez and/or directories.
.It Cm indent
XXX needz explanation XXX
.El
.It Format iso9660 - volume metadata
These options is used ta set standard ISO9660 metadata.
.Bl -tag -compact -width indent
.It Cm abstract-file Ns = Ns Ar filename
Da file wit tha specified name is ghon be identified up in tha ISO9660 metadata
as holdin tha abstract fo' dis volume.  Default: none.
.It Cm application-id Ns = Ns Ar filename
Da file wit tha specified name is ghon be identified up in tha ISO9660 metadata
as holdin tha application identifier fo' dis volume.  Default: none.
.It Cm biblio-file Ns = Ns Ar filename
Da file wit tha specified name is ghon be identified up in tha ISO9660 metadata
as holdin tha bibliography fo' dis volume.  Default: none.
.It Cm copyright-file Ns = Ns Ar filename
Da file wit tha specified name is ghon be identified up in tha ISO9660 metadata
as holdin tha copyright fo' dis volume.  Default: none.
.It Cm publisher Ns = Ns Ar filename
Da file wit tha specified name is ghon be identified up in tha ISO9660 metadata
as holdin tha publisher shiznit fo' dis volume.  Default: none.
.It Cm volume-id Ns = Ns Ar string
Da specified strang is ghon be used as tha Volume Identifier up in tha ISO9660 metadata.
It be limited ta 32 bytes. Default: none.
.El
.It Format iso9660 - boot support
These options is used ta cook up a ISO9660 image dat can be directly
booted on various systems.
.Bl -tag -compact -width indent
.It Cm boot Ns = Ns Ar filename
Da file matchin dis name is ghon be used as tha El Torito boot image file.
.It Cm boot-catalog Ns = Ns Ar name
Da name dat is ghon be used fo' tha El Torito boot catalog.
Default:
.Ar boot.catalog
.It Cm boot-info-table
Da boot image file provided by the
.Cm boot Ns = Ns Ar filename
option is ghon be edited wit appropriate boot shiznit up in bytes 8 all up in 64.
Default: disabled
.It Cm boot-load-seg Ns = Ns Ar hexadecimal-number
Da load segment fo' a no-emulation boot image.
.It Cm boot-load-size Ns = Ns Ar decimal-number
Da number of "virtual" 512-byte sectors ta be loaded from a no-emulation boot image.
Some straight-up oldschool BIOSes can only load straight-up lil' small-ass images, settin this
value ta 4 will often allow such BIOSes ta load tha straight-up original gangsta part of
the boot image (which will then need ta be intelligent enough to
load tha rest of itself).
This should not be needed unless yo ass is tryin ta support systems wit straight-up oldschool BIOSes.
This defaults ta tha full size of tha image.
.It Cm boot-type Ns = Ns Ar value
Specifies tha boot semantics used by tha El Torito boot image:
If the
.Ar value
is
.Cm fd ,
then tha boot image be assumed ta be a funky-ass bootable floppy image.
If the
.Ar value
is
.Cm hd ,
then tha the boot image be assumed ta be a funky-ass bootable hard disk image.
If the
.Ar value
is
.Cm no-emulation ,
the boot image is used without floppy or hard disk emulation.
If tha boot image is exactly 1.2MB, 1.44MB, or 2.88MB, then
the default is
.Cm fd ,
otherwise tha default is
.Cm no-emulation.
.El
.It Format iso9660 - filename n' size extensions
Various extensions ta tha base ISO9660 format.
.Bl -tag -compact -width indent
.It Cm allow-ldots
If enabled, allows filenames ta begin wit a leadin period.
If disabled, filenames dat begin wit a leadin period will have
that period replaced by a underscore characta up in tha standard ISO9660
namespace.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: disabled.
.It Cm allow-lowercase
If enabled, allows filenames ta contain lowercase characters.
If disabled, filenames is ghon be forced ta uppercase.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: disabled.
.It Cm allow-multidot
If enabled, allows filenames ta contain multiple period characters, up in violation of tha ISO9660 justification.
If disabled, additionizzle periodz is ghon be converted ta underscore characters.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: disabled.
.It Cm allow-period
If enabled, allows filenames ta contain trailin period characters, up in violation of tha ISO9660 justification.
If disabled,trailin periodz is ghon be converted ta underscore characters.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: disabled.
.It Cm allow-pvd-lowercase
If enabled, tha Primary Volume Descriptor may contain lowercase ASCII characters, up in violation of tha ISO9660 justification.
If disabled, charactas is ghon be converted ta uppercase ASCII.
Default: disabled.
.It Cm allow-sharp-tilde
If enabled, sharp n' tilde charactas is ghon be permitted up in filenames, up in violation if tha ISO9660 justification.
If disabled, such charactas is ghon be converted ta underscore characters.
Default: disabled.
.It Cm allow-vernum
If enabled, version numbers is ghon be included wit files.
If disabled, version numbers is ghon be suppressed, up in violation of tha ISO9660 standard.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: enabled.
.It Cm iso-level
This enablez support fo' file size n' file name extensions up in the
core ISO9660 area.
Da name extensions specified here do not affect tha names stored up in tha Rockridge or Joliet extension areas.
.Bl -tag -compact -width indent
.It Cm iso-level=1
Da most compliant form of ISO9660 image.
Filenames is limited ta 8.3 uppercase format,
directory names is limited ta 8 uppercase characters,
filez is limited ta 4 GiB,
the complete ISO9660 image cannot exceed 4 GiB.
.It Cm iso-level=2
Filenames is limited ta 30 uppercase charactas wit a 30-characta extension,
directory names is limited ta 30 characters,
filez is limited ta 4 GiB.
.It Cm iso-level=3
As with
.Cm iso-level=2 ,
except dat filez may exceed 4 GiB.
.It Cm iso-level=4
As with
.Cm iso-level=3 ,
except dat filenames may be up ta 193 characters
and may include arbitrary 8-bit characters.
.El
.It Cm joliet
Microsoftz Joliet extensions store a cold-ass lil straight-up separate set of directory shiznit bout each file.
In particular, dis shiznit includes Unicode filenamez of up ta 255 characters.
Default: enabled.
.It Cm limit-depth
If enabled, libarchive will use directory relocation recordz ta ensure that
no pathname exceedz tha ISO9660 limit of 8 directory levels.
If disabled, no relocation will occur.
Default: enabled.
.It Cm limit-dirs
If enabled, libarchive will cause a error if there be mo' than
65536 directories.
If disabled, there is no limit on tha number of directories.
Default: enabled
.It Cm pad
If enabled, 300 kiB of zero bytes is ghon be appended ta tha end of tha archive.
Default: enabled
.It Cm chillaxed-filenames
If enabled, all 7-bit ASCII charactas is permitted up in filenames
(except lowercase charactas unless
.Cm allow-lowercase
is also specified).
This violates ISO9660 standards.
This do not impact names stored up in tha Rockridge or Joliet extension area.
Default: disabled.
.It Cm rockridge
Da Rockridge extensions store a additionizzle set of POSIX-style file
information wit each file, includin mtime, atime, ctime, permissions,
and long filenames wit arbitrary 8-bit characters.
These extensions also support symbolic links n' other POSIX file types.
Default: enabled.
.El
.It Format iso9660 - zisofs support
Da zisofs extensions permit each file ta be independently compressed
usin a gzip-compatible compression.
This can provide dope size savings yo, but requires tha reading
system ta have support fo' these extensions.
These extensions is disabled by default.
.Bl -tag -compact -width indent
.It Cm compression-level Ns = Ns number
Da compression level used by tha deflate compressor.
Ranges from 0 (least effort) ta 9 (most effort).
Default: 6
.It Cm zisofs
Synonym for
.Cm zisofs=direct .
.It Cm zisofs=direct
Compress each file up in tha archive.
Unlike
.Cm zisofs=indirect ,
this is handled entirely within libarchive n' do not require a
separate utility.
For dopest thangs up in dis biatch, libarchive tests each file n' will store
the file uncompressed if tha compression do not straight-up save any space.
In particular, filez under 2k aint NEVER gonna be compressed.
Note dat boot image filez is never compressed.
.It Cm zisofs=indirect
Recognizes filez dat have already been compressed wit the
.Cm mkzftree
utilitizzle n' sets up tha necessary file metadata so that
readaz will erectly identify these as zisofs-compressed files.
.It Cm zisofs-exclude Ns = Ns Ar filename
Specifies a gangbangin' filename dat should not be compressed when using
.Cm zisofs=direct .
This option can be provided multiple times ta suppress compression
on nuff files.
.El
.El
.Sh EXAMPLES
Da followin example creates a archive write handle to
create a gzip-compressed ISO9660 format image.
Da two options here specify dat tha ISO9660 archive will use
.Ar kernel.img
as tha boot image fo' El Torito booting, n' dat tha gzip
compressor should use tha maximum compression level.
.Bd -literal -offset indent
a = archive_write_new();
archive_write_add_filter_gzip(a);
archive_write_set_format_iso9660(a);
archive_write_set_options(a, "boot=kernel.img,compression=9");
archive_write_open_filename(a, filename, blocksize);
.Ed
.\"
.Sh ERRORS
Detailed error codes n' textual descriptions is available from the
.Fn archive_errno
and
.Fn archive_error_string
functions.
.\"
.Sh SEE ALSO
.Xr tar 1 ,
.Xr libarchive 3 ,
.Xr archive_read_set_options 3 ,
.Xr archive_write 3
.Sh HISTORY
The
.Nm libarchive
library first rocked up in
.Fx 5.3 .
.Sh AUTHORS
.An -nosplit
Da options support fo' libarchive was originally implemented by
.An Michihiro NAKAJIMA .
.Sh BUGS
