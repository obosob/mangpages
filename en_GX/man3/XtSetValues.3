.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtSet-Values XtVa-Set-Values XtSet-Subvalues XtVa-Set-Subvalues XtGet-Values XtVa-Get-Values XtGet-Subvalues XtVa-Get-Subvalues constraint-Widget-Class wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtSetValues 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtSetValues, XtVaSetValues, XtSetSubvalues, XtVaSetSubvalues, XtGetValues, XtVaGetValues, XtGetSubvalues, XtVaGetSubvalues \- obtain n' set widget resources
.SH SYNTAX
.HP
void XtSetValues(Widget \fIw\fP, ArgList \fIargs\fP, Cardinal \fInum_args\fP);
.HP
void XtVaSetValues(Widget \fIw\fP, ...\^);
.HP
void XtSetSubvalues(XtPointa \fIbase\fP, XtResourceList \fIresources\fP,
Cardinal \fInum_resources\fP, ArgList \fIargs\fP, Cardinal \fInum_args\fP);
.HP
void XtVaSetSubvalues(XtPointa \fIbase\fP, XtResourceList \fIresources\fP,
Cardinal \fInum_resources\fP, ...\^);
.HP
void XtGetValues(Widget \fIw\fP, ArgList \fIargs\fP, Cardinal \fInum_args\fP);
.HP
void XtVaGetValues(Widget \fIw\fP, ...\^);
.HP
void XtGetSubvalues(XtPointa \fIbase\fP, XtResourceList \fIresources\fP,
Cardinal \fInum_resources\fP, ArgList \fIargs\fP, Cardinal \fInum_args\fP);
.HP
void XtVaGetSubvalues(XtPointa \fIbase\fP, XtResourceList \fIresources\fP,
Cardinal \fInum_resources\fP, ...\^);
.SH ARGUMENTS
.ds Al of name/address pairs dat contain tha resource name \
and either tha address tha fuck into which tha resource value is ta be stored \
or they freshly smoked up joints
.IP \fIargs\fP 1i
Specifies tha argument list \*(Al.
.ds Ba retrieved or written
.IP \fIbase\fP 1i
Specifies tha base address of tha subpart data structure where tha resources
should be \*(Ba.
.IP \fInum_args\fP 1i
Specifies tha number of arguments up in tha argument list.
.IP \fIresources\fP 1i
Specifies tha nonwidget resource list or joints.
.IP \fInum_resources\fP 1i
Specifies tha number of resources up in tha resource list.
.IP \fIw\fP 1i
Specifies tha widget.
.IP \fI...\fP 1i
Specifies tha variable argument list \*(Al.
.SH DESCRIPTION
The
.ZN XtSetValues
function starts wit tha resources specified fo' the
.ZN Core
widget fieldz n' proceedz down tha subclass chain ta tha widget.
At each stage,
it writes tha freshly smoked up value (if specified by one of tha arguments) or tha existing
value (if no freshly smoked up value is specified) ta a freshly smoked up widget data record.
.ZN XtSetValues
then calls tha set_values procedures fo' tha widget up in superclass-to-subclass
order.
.IN "hook"
If tha widget has any non-NULL set_values_hook fields,
these is called immediately afta the
correspondin set_values procedure.
This procedure permits subclasses ta set nonwidget data for
.ZN XtSetValues .
.LP
If tha widgetz parent be a subclass of
.ZN constraintWidgetClass ,
.ZN XtSetValues
also thugged-out shiznit tha widgetz constraints.
It starts wit tha constraint resources specified for
.ZN constraintWidgetClass
and proceedz down tha subclass chain ta tha parentz class.
At each stage,
it writes tha freshly smoked up value or tha existin value ta a freshly smoked up constraint record.
It then calls tha constraint set_values procedures from
.ZN constraintWidgetClass
down ta tha parentz class.
Da constraint set_values procedures is called wit widget arguments,
as fo' all set_values procedures, not just tha constraint record arguments,
so dat they can make adjustments ta tha desired joints based
on full shiznit bout tha widget.
.LP
.ZN XtSetValues
determines if a geometry request is needed by comparin tha current widget to
the freshly smoked up widget.
If any geometry chizzlez is required,
it make tha request, n' tha geometry manager returns
.ZN XtGeometryYes yes y'all, ,
.ZN XtGeometryAlmost ,
or
.ZN XtGeometryNo .
If
.ZN XtGeometryYes yes y'all, ,
.ZN XtSetValues
calls tha widgetz resize procedure.
If
.ZN XtGeometryNo ,
.ZN XtSetValues
resets tha geometry fieldz ta they original gangsta joints.
If
.ZN XtGeometryAlmost ,
.ZN XtSetValues
calls tha set_values_almost procedure,
which determines what tha fuck should be done n' writes freshly smoked up joints fo' the
geometry fieldz tha fuck into tha freshly smoked up widget.
.ZN XtSetValues
then repeats dis process,
decidin once mo' whether tha geometry manager should be called.
.LP
Finally, if any of tha set_values procedures returned
.ZN True ,
.ZN XtSetValues
causes tha widgetz expose procedure ta be invoked by callin tha Xlib
.ZN XClearArea
function on tha widgetz window.
.LP
The
.ZN XtSetSubvalues
function stores resources tha fuck into tha structure identified by base.
.LP
The
.ZN XtGetValues
function starts wit tha resources specified fo' tha core widget fields
and proceedz down tha subclass chain ta tha widget.
Da value field of a passed argument list should contain the
address tha fuck into which ta store tha correspondin resource value.
It be tha callerz responsibility
to allocate n' deallocate dis storage accordin ta tha size of the
resource representation type used within tha widget.
.LP
If tha widgetz parent be a subclass of
.ZN constraintWidgetClass ,
.ZN XtGetValues
then fetches tha joints fo' any constraint resources requested.
It starts wit tha constraint resources specified for
.ZN constraintWidgetClass
and proceedz down ta tha subclass chain ta tha parentz constraint resources.
If tha argument list gotz nuff a resource name dat aint found up in any of the
resource lists searched,
the value all up in tha correspondin address aint modified.
.IN "hook"
Finally, if tha get_values_hook procedures is non-NULL,
they is called up in superclass-to-subclass order after
all tha resource joints done been fetched by
.ZN XtGetValues .
This permits a subclass ta provide nonwidget resource data to
.ZN XtGetValues .
.LP
The
.ZN XtGetSubvalues
function obtains resource joints from tha structure identified by base.
.SH "SEE ALSO"
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
