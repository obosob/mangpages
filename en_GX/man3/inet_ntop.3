
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References: RFC 2553
.TH INET_NTOP 3 2008-11-11 "Linux" "Linux Programmerz Manual"
.SH NAME
inet_ntop \- convert IPv4 n' IPv6 addresses from binary ta text form
.SH SYNOPSIS
.nf
.B #include <arpa/inet.h>
.sp
.BI "const char *inet_ntop(int " "af" ", const void *" "src" ,
.BI "                      char *" "dst" ", socklen_t " "size" );
.fi
.SH DESCRIPTION
This function converts tha network address structure
.I src
in the
.I af
address crew tha fuck into a cold-ass lil characta string.
Da resultin strang is copied ta tha buffer pointed ta by
.IR dst ,
which must be a non-NULL pointer.
Da calla specifies tha number of bytes available up in dis buffer in
the argument
.IR size .
.PP
.BR inet_ntop ()
extendz the
.BR inet_ntoa (3)
function ta support multiple address crews,
.BR inet_ntoa (3)
is now considered ta be deprecated up in favor of
.BR inet_ntop ().
Da followin address crews is currently supported:
.TP
.B AF_INET
.I src
points ta a
.I struct in_addr
(in network byte order)
which is converted ta a IPv4 network address in
the dotted-decimal format, "\fIddd.ddd.ddd.ddd\fP".
Da buffer
.I dst
must be at least
.B INET_ADDRSTRLEN
bytes long.
.TP
.B AF_INET6
.I src
points ta a
.I struct in6_addr
(in network byte order)
which is converted ta a representation of dis address up in the
most appropriate IPv6 network address format fo' dis address.
Da buffer
.I dst
must be at least
.B INET6_ADDRSTRLEN
bytes long.
.SH RETURN VALUE
On success,
.BR inet_ntop ()
returns a non-NULL pointa to
.IR dst .
NULL is returned if there was a error, with
.I errno
set ta indicate tha error.
.SH ERRORS
.TP
.B EAFNOSUPPORT
.I af
was not a valid address crew.
.TP
.B ENOSPC
Da converted address strang would exceed tha size given by
.IR size .
.SH CONFORMING TO
POSIX.1-2001.
Note dat RFC\ 2553 defines a prototype where tha last argument
.I size
iz of type
.IR size_t .
Many systems follow RFC\ 2553.
Glibc 2.0 n' 2.1 have
.IR size_t ,
but 2.2 n' lata have
.IR socklen_t .
.\" 2.1.3: size_t, 2.1.91: socklen_t
.SH BUGS
.B AF_INET6
converts IPv4-mapped IPv6 addresses tha fuck into a IPv6 format.
.SH EXAMPLE
See
.BR inet_pton (3).
.SH SEE ALSO
.BR getnameinfo (3),
.BR inet (3),
.BR inet_pton (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
