.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH LSEEK64 3 2004-12-11 "Linux" "Linux Programmerz Manual"
.SH NAME
lseek64 \- reposizzle 64-bit read/write file offset
.SH SYNOPSIS
.BR "#define _LARGEFILE64_SOURCE" "     /* See feature_test_macros(7) */"
.br
.B #include <sys/types.h>
.br
.B #include <unistd.h>
.sp
.BI "off64_t lseek64(int " fd ", off64_t " offset ", int " whence );
.SH DESCRIPTION
The
.BR lseek (2)
family of functions reposizzle tha offset of tha open file associated
with tha file descriptor
.I fd
to
.I offset
bytes relatizzle ta tha start, current position, or end of tha file,
when
.I whence
has tha value
.BR SEEK_SET ,
.BR SEEK_CUR ,
or
.BR SEEK_END ,
respectively.
.LP
For mo' details, return value, n' errors, see
.BR lseek (2).
.PP
Four intercourses is available:
.BR lseek (2),
.BR lseek64 (),
.BR llseek (2),
and tha raw system call
.BR _llseek (2).
.SS lseek
Prototype:
.nf
.sp
.in +4n
.BI "off_t lseek(int " fd ", off_t " offset ", int " whence );
.in
.fi
.sp
.BR lseek (2)
uses tha type
.IR off_t .
This be a 32-bit signed type on 32-bit architectures, unless one
compilez with
.nf
.sp
.in +4n
#define _FILE_OFFSET_BITS 64
.in
.sp
.fi
in which case it aint nuthin but a 64-bit signed type.
.SS lseek64
Prototype:
.nf
.sp
.in +4n
.BI "off64_t lseek64(int " fd ", off64_t " offset ", int " whence );
.in
.fi
.sp
Da library routine
.BR lseek64 ()
uses a 64-bit type even when
.I off_t
is a 32-bit type.
Its prototype (and tha type
.IR off64_t )
is available only when one compilez with
.nf
.sp
.in +4n
#define _LARGEFILE64_SOURCE
.in
.sp
.fi
Da function
.BR lseek64 ()
.\" up in glibc 2.0.94, not up in 2.0.6
is available since glibc 2.1, n' is defined ta be a alias for
.BR llseek ().
.SS llseek
Prototype:
.nf
.sp
.in +4n
.BI "loff_t llseek(int " fd ", loff_t " offset ", int " whence );
.in
.fi
.sp
Da type
.I loff_t
is a 64-bit signed type.
Da library routine
.BR llseek ()
.\" up in libc 5.0.9, not up in 4.7.6
is available up in libc5 n' glibc n' works without special defines.
Its prototype was given in
.I <unistd.h>
with libc5 yo, but glibc do not provide a prototype.
This is bad, since a prototype is needed.
Users should add
the above prototype, or suttin' equivalent, ta they own source.
When playas complained bout data loss caused by a miscompilation of
.BR e2fsck (8),
glibc 2.1.3 added tha link-time warning
.sp
.in +4n
"the \`llseek\' function may be dangerous; use \`lseek64\' instead."
.in
.sp
This make dis function unusable if one desires a warning-free
compilation.
.SS _llseek
All tha above functions is implemented up in termz of dis system call.
Da prototype is:
.nf
.sp
.in +4n
.BI "int _llseek(int " fd ", off_t " offset_hi ", off_t " offset_lo ,
.BI "            loff_t *" result ", int " whence );
.in
.fi
.sp
For mo' details, see
.BR llseek (2).
.SH SEE ALSO
.BR llseek (2),
.BR lseek (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
