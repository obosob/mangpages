.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XSetPointerMappin 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XSetPointerMapping, XGetPointerMappin \- manipulate pointa settings
.SH SYNTAX
.HP
int XSetPointerMapping\^(\^Display *\fIdisplay\fP\^, unsigned char
\fImap\fP\^[]\^, int \fInmap\fP\^); 
.HP
int XGetPointerMapping\^(\^Display *\fIdisplay\fP\^, unsigned char
\fImap_return\fP\^[]\^, int \fInmap\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fImap\fP 1i
Specifies tha mappin list.
.IP \fImap_return\fP 1i
Returns tha mappin list.
.IP \fInmap\fP 1i
Specifies tha number of shit up in tha mappin list.
.SH DESCRIPTION
The
.ZN XSetPointerMapping
function sets tha mappin of tha pointer.
If it succeeds, tha X server generates a
.ZN MappingNotify
event, and
.ZN XSetPointerMapping
returns
.ZN MappingSuccess .
Element map[i] defines tha logical button number fo' tha physical button
i+1.
Da length of tha list must be tha same as
.ZN XGetPointerMapping
would return,
or a
.ZN BadValue
error thangs up in dis biatch.
A zero element disablez a funky-ass button, n' elements is not restricted in
value by tha number of physical buttons.
But fuck dat shiznit yo, tha word on tha street is dat no two elements can have tha same nonzero value,
or a
.ZN BadValue
error thangs up in dis biatch.
If any of tha buttons ta be altered is logically up in tha down state,
.ZN XSetPointerMapping
returns
.ZN MappingBusy ,
and tha mappin aint chizzled.
.LP
.ZN XSetPointerMapping
can generate a
.ZN BadValue 
error.
.LP
The
.ZN XGetPointerMapping
function returns tha current mappin of tha pointer.
Pointa buttons is numbered startin from one.
.ZN XGetPointerMapping
returns tha number of physical buttons straight-up on tha pointer.
Da nominal mappin fo' a pointa is map[i]=i+1.
Da nmap argument specifies tha length of tha array where tha pointer
mappin is returned, n' only tha straight-up original gangsta nmap elements is returned 
in map_return.
.SH DIAGNOSTICS
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XChangeKeyboardControl(3),
XChangeKeyboardMapping(3)
.br
\fI\*(xL\fP
