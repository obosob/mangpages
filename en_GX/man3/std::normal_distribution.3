" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::normal_distribution< _RealType > \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBparam_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _RealType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBnormal_distribution\fP (\fBresult_type\fP __mean=\fBresult_type\fP(0), \fBresult_type\fP __stddev=\fBresult_type\fP(1))"
.br
.ti -1c
.RI "\fBnormal_distribution\fP (const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > void \fB__generate\fP (\fBresult_type\fP *__f, \fBresult_type\fP *__t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "_RealType \fBmean\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBnormal_distribution\fP< _RealType >
.br
::\fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBparam_type\fP \fBparam\fP () const "
.br
.ti -1c
.RI "void \fBparam\fP (const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.ti -1c
.RI "_RealType \fBstddev\fP () const "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::normal_distribution\fP< _RealType1 > &__x)"
.br
.ti -1c
.RI "template<typename _RealType1 > bool \fBoperator==\fP (const \fBstd::normal_distribution\fP< _RealType1 > &__d1, const \fBstd::normal_distribution\fP< _RealType1 > &__d2)"
.br
.ti -1c
.RI "template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::normal_distribution\fP< _RealType1 > &__x)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _RealType = double>class std::normal_distribution< _RealType >"
A aiiight continuous distribution fo' random numbers\&. 

Da formula fo' tha aiiight probabilitizzle densitizzle function is \[ p(x|\mu,\sigma) = \frac{1}{\sigma \sqrt{2 \pi}} e^{- \frac{{x - \mu}^ {2}}{2 \sigma ^ {2}} } \] 
.PP
Definizzle at line 2085 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _RealType = double> typedef _RealType \fBstd::normal_distribution\fP< _RealType >::\fBresult_type\fP"
Da type of tha range of tha distribution\&. 
.PP
Definizzle at line 2088 of file random\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _RealType = double> \fBstd::normal_distribution\fP< _RealType >::\fBnormal_distribution\fP (\fBresult_type\fP__mean = \fC\fBresult_type\fP(0)\fP, \fBresult_type\fP__stddev = \fC\fBresult_type\fP(1)\fP)\fC [inline]\fP, \fC [explicit]\fP"
Constructs a aiiight distribution wit parametas $mean$ n' standard deviation\&. 
.PP
Definizzle at line 2130 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::normal_distribution\fP< _RealType >::max () const\fC [inline]\fP"

.PP
Returns tha least upper bound value of tha distribution\&. 
.PP
Definizzle at line 2187 of file random\&.h\&.
.SS "template<typename _RealType = double> _RealType \fBstd::normal_distribution\fP< _RealType >::mean () const\fC [inline]\fP"

.PP
Returns tha mean of tha distribution\&. 
.PP
Definizzle at line 2151 of file random\&.h\&.
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::normal_distribution\fP< _RealType >::min () const\fC [inline]\fP"

.PP
Returns tha top billin lower bound value of tha distribution\&. 
.PP
Definizzle at line 2180 of file random\&.h\&.
.SS "template<typename _RealType = double> template<typename _UniformRandomNumberGenerator > \fBnormal_distribution\fP<_RealType>::\fBresult_type\fP \fBstd::normal_distribution\fP< _RealType >::operator() (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__param)"
Polar method cuz of Marsaglia\&.
.PP
Devroye, L\&. Non-Uniform Random Variates Generation\&. Right back up in yo muthafuckin ass. Springer-Verlag, New York, 1986, Ch\&. V, Sect\&. 4\&.4\&. 
.PP
Definizzle at line 1935 of file bits/random\&.tcc\&.
.PP
References std::log(), n' std::sqrt()\&.
.SS "template<typename _RealType = double> template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBstd::normal_distribution\fP< _RealType >::operator() (_UniformRandomNumberGenerator &__urng)\fC [inline]\fP"

.PP
Generatin functions\&. 
.PP
Definizzle at line 2195 of file random\&.h\&.
.PP
Referenced by std::normal_distribution< result_type >::operator()()\&.
.SS "template<typename _RealType = double> \fBparam_type\fP \fBstd::normal_distribution\fP< _RealType >::param () const\fC [inline]\fP"

.PP
Returns tha parameta set of tha distribution\&. 
.PP
Definizzle at line 2165 of file random\&.h\&.
.SS "template<typename _RealType = double> void \fBstd::normal_distribution\fP< _RealType >::param (const \fBparam_type\fP &__param)\fC [inline]\fP"

.PP
Sets tha parameta set of tha distribution\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__param\fP Da freshly smoked up parameta set of tha distribution\&. 
.RE
.PP

.PP
Definizzle at line 2173 of file random\&.h\&.
.SS "template<typename _RealType = double> void \fBstd::normal_distribution\fP< _RealType >::reset ()\fC [inline]\fP"

.PP
Resets tha distribution state\&. 
.PP
Definizzle at line 2144 of file random\&.h\&.
.PP
Referenced by std::lognormal_distribution< _RealType >::reset(), std::gamma_distribution< result_type >::reset(), std::student_t_distribution< _RealType >::reset(), std::binomial_distribution< _IntType >::reset(), n' std::poisson_distribution< _IntType >::reset()\&.
.SS "template<typename _RealType = double> _RealType \fBstd::normal_distribution\fP< _RealType >::stddev () const\fC [inline]\fP"

.PP
Returns tha standard deviation of tha distribution\&. 
.PP
Definizzle at line 2158 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _RealType = double> template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP<_CharT, _Traits>& operator<< (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::normal_distribution\fP< _RealType1 > &__x)\fC [friend]\fP"

.PP
Inserts a normal_distribution random number distribution \fC__x\fP tha fuck into tha output stream \fC__os\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__os\fP An output stream\&. 
.br
\fI__x\fP A normal_distribution random number distribution\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da output stream wit tha state of \fC__x\fP banged or up in a error state\&. 
.RE
.PP

.SS "template<typename _RealType = double> template<typename _RealType1 > bool operator== (const \fBstd::normal_distribution\fP< _RealType1 > &__d1, const \fBstd::normal_distribution\fP< _RealType1 > &__d2)\fC [friend]\fP"

.PP
Return legit if two aiiight distributions have tha same parametas n' tha sequences dat would be generated is equal\&. 
.SS "template<typename _RealType = double> template<typename _RealType1 , typename _CharT , typename _Traits > \fBstd::basic_istream\fP<_CharT, _Traits>& operator>> (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::normal_distribution\fP< _RealType1 > &__x)\fC [friend]\fP"

.PP
Extracts a normal_distribution random number distribution \fC__x\fP from tha input stream \fC__is\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__is\fP An input stream\&. 
.br
\fI__x\fP A normal_distribution random number generator engine\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da input stream wit \fC__x\fP extracted or up in a error state\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
