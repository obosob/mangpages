" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::hash_load_check_resize_trigger< External_Load_Access, Size_Type > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_pbds::detail::hash_load_check_resize_trigger_size_base< Size_Type, External_Load_Access >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBexternal_load_access\fP }"
.br
.ti -1c
.RI "typedef Size_Type \fBsize_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBhash_load_check_resize_trigger\fP (float load_min=0\&.125, float load_max=0\&.5)"
.br
.ti -1c
.RI "\fBstd::pair\fP< float, float > \fBget_loads\fP () const "
.br
.ti -1c
.RI "void \fBset_loads\fP (\fBstd::pair\fP< float, float > load_pair)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBhash_load_check_resize_trigger\fP &other)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBis_grow_needed\fP (size_type size, size_type num_entries) const "
.br
.ti -1c
.RI "bool \fBis_resize_needed\fP () const "
.br
.ti -1c
.RI "void \fBnotify_cleared\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erase_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_erased\fP (size_type num_entries)"
.br
.ti -1c
.RI "void \fBnotify_externally_resized\fP (size_type new_size)"
.br
.ti -1c
.RI "void \fBnotify_find_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_find_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_find_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_collision\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_end\fP ()"
.br
.ti -1c
.RI "void \fBnotify_insert_search_start\fP ()"
.br
.ti -1c
.RI "void \fBnotify_inserted\fP (size_type num_entries)"
.br
.ti -1c
.RI "void \fBnotify_resized\fP (size_type new_size)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<bool External_Load_Access = false, typename Size_Type = std::size_t>class __gnu_pbds::hash_load_check_resize_trigger< External_Load_Access, Size_Type >"
A resize trigger policy based on a load check\&. Well shiiiit, it keeps tha load factor between some load factors load_min n' load_max\&. 
.PP
Definizzle at line 175 of file hash_policy\&.hpp\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "template<bool External_Load_Access = false, typename Size_Type  = std::size_t> anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIexternal_load_access \fP\fP
Specifies whether tha load factor can be accessed externally\&. Da two options have different trade-offs up in termz of flexibility, genericity, n' encapsulation\&. 
.PP
Definizzle at line 180 of file hash_policy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<bool External_Load_Access, typename Size_Type > \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::\fBhash_load_check_resize_trigger\fP (floatload_min = \fC0\&.125\fP, floatload_max = \fC0\&.5\fP)"

.PP
Default constructor, or constructor takin load_min n' load_max load factors between which dis policy will keep tha actual load\&. 
.PP
Definizzle at line 47 of file hash_policy\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<bool External_Load_Access, typename Size_Type > \fBstd::pair\fP< float, float > \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::get_loadz () const\fC [inline]\fP"

.PP
Returns a pair of tha minimal n' maximal loads, respectively\&. 
.PP
Definizzle at line 236 of file hash_policy\&.hpp\&.
.SS "template<bool External_Load_Access, typename Size_Type > void \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::notify_cleared ()\fC [protected]\fP"

.PP
Notifies tha table was cleared\&. 
.PP
Definizzle at line 206 of file hash_policy\&.hpp\&.
.SS "template<bool External_Load_Access, typename Size_Type > void \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::notify_inserted (size_typenum_entries)\fC [inline]\fP, \fC [protected]\fP"

.PP
Notifies a element was inserted\&. Da total number of entries up in tha table is num_entries\&. 
.PP
Definizzle at line 109 of file hash_policy\&.hpp\&.
.SS "template<bool External_Load_Access, typename Size_Type > void \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::notify_resized (size_typenew_size)\fC [protected]\fP"

.PP
Notifies tha table was resized as a result of dis objectz signifyin dat a resize is needed\&. 
.PP
Definizzle at line 151 of file hash_policy\&.hpp\&.
.SS "template<bool External_Load_Access, typename Size_Type > void \fB__gnu_pbds::hash_load_check_resize_trigger\fP< External_Load_Access, Size_Type >::set_loadz (\fBstd::pair\fP< float, float >load_pair)"

.PP
Sets tha loadz all up in a pair of tha minimal n' maximal loads, respectively\&. 
.PP
Definizzle at line 245 of file hash_policy\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
