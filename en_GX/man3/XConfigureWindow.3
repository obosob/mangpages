'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
'\" t
.TH XConfigureWindow 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XConfigureWindow, XMoveWindow, XResizeWindow, XMoveResizeWindow, XSetWindowBorderWidth, XWindowChanges \- configure windows n' window chizzlez structure
.SH SYNTAX
.HP
int XConfigureWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, unsigned \fIvalue_mask\fP\^, \^XWindowChanges *\fIchanges\fP\^);
.HP
int XMoveWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, int \fIx\fP\^, \fIy\fP\^);
.HP
int XResizeWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, unsigned
\fIwidth\fP\^, unsigned \fIheight\fP\^);
.HP
int XMoveResizeWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, int
\fIx\fP\^, int \fIy\fP\^, unsigned \fIwidth\fP\^, unsigned \fIheight\fP\^); 
.HP
int XSetWindowBorderWidth\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^,
unsigned \fIwidth\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIvalue_mask\fP 1i
Specifies which joints is ta be set rockin shiznit in
the joints structure.
This mask is tha bitwise inclusive OR of tha valid configure window joints bits.
.IP \fIvalues\fP 1i
Specifies tha 
.ZN XWindowChanges 
structure.
.ds Wi ta be reconfigured, moved, or resized.
.IP \fIw\fP 1i
Specifies tha window \*(Wi.
.IP \fIwidth\fP 1i
Specifies tha width of tha window border.
.ds Wh , which is tha interior dimensionz of tha window
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height\*(Wh.
.ds Xy , which define tha freshly smoked up location of tha top-left pixel \
of tha windowz border or tha window itself if it has no border \
or define tha freshly smoked up posizzle of tha window relatizzle ta its parent
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
The
.ZN XConfigureWindow
function uses tha joints specified up in the
.ZN XWindowChanges
structure ta reconfigure a windowz size, position, border, n' stackin order.
Values not specified is taken from tha existin geometry of tha window.
.LP
If a siblin is specified without a stack_mode or if tha window
is not straight-up a sibling,
a
.ZN BadMatch
error thangs up in dis biatch. 
Note dat tha computations for
.ZN BottomIf ,
.ZN TopIf ,
and
.ZN Opposite
are performed wit respect ta tha windowz final geometry (as controlled by the
other arguments passed to
.ZN XConfigureWindow ),
not its initial geometry.
Any backin store contentz of tha window, its
inferiors, n' other newly visible windows is either discarded or
changed ta reflect tha current screen contents 
(dependin on tha implementation).
.LP
.ZN XConfigureWindow
can generate
.ZN BadMatch ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XMoveWindow
function moves tha specified window ta tha specified x n' y coordinates,
but it do not chizzle tha windowz size, raise tha window, or
change tha mappin state of tha window.
Movin a mapped window may or may not lose tha windowz contents 
dependin on if tha window is obscured by nonlil pimps 
and if no backin store exists.
If tha contentz of tha window is lost, 
the X server generates
.ZN Expose 
events.
Movin a mapped window generates
.ZN Expose 
events on any formerly obscured windows. 
.LP
If tha override-redirect flag of tha window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates a
.ZN ConfigureRequest 
event, n' no further processin is
performed. Y'all KNOW dat shit, muthafucka!  
Otherwise, tha window is moved.
.LP
.ZN XMoveWindow
can generate a
.ZN BadWindow 
error.
.LP
The
.ZN XResizeWindow
function chizzlez tha inside dimensionz of tha specified window, not including
its borders.
This function do not chizzle tha windowz upper-left coordinizzle or
the origin n' do not restack tha window.
Changin tha size of a mapped window may lose its contents n' generate
.ZN Expose 
events.
If a mapped window is made smaller, 
changin its size generates
.ZN Expose 
events on windows dat tha mapped window formerly obscured.
.LP
If tha override-redirect flag of tha window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates a
.ZN ConfigureRequest 
event, n' no further processin is performed. Y'all KNOW dat shit, muthafucka!  
If either width or height is zero,
a
.ZN BadValue
error thangs up in dis biatch.
.LP
.ZN XResizeWindow
can generate
.ZN BadValue
and
.ZN BadWindow 
errors.
.LP
The
.ZN XMoveResizeWindow
function chizzlez tha size n' location of tha specified window 
without raisin dat shit.
Movin n' resizin a mapped window may generate an
.ZN Expose 
event on tha window.
Dependin on tha freshly smoked up size n' location parameters,
movin n' resizin a window may generate 
.ZN Expose 
events on windows dat tha window formerly obscured. Y'all KNOW dat shit, muthafucka! 
.LP
If tha override-redirect flag of tha window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates a
.ZN ConfigureRequest 
event, n' no further processin is performed. Y'all KNOW dat shit, muthafucka!  
Otherwise, tha window size n' location is chizzled.
.LP
.ZN XMoveResizeWindow
can generate
.ZN BadValue
and
.ZN BadWindow 
errors.
.LP
The
.ZN XSetWindowBorderWidth
function sets tha specified windowz border width ta tha specified width.
.LP
.ZN XSetWindowBorderWidth
can generate a
.ZN BadWindow 
error.
.SH STRUCTURES
The
.ZN XWindowChanges
structure gotz nuff:
.LP
.LP
/\&* Configure window value mask bits */
.TS
lw(.5i) lw(2.5i) lw(.8i).
T{
\&#define
T}	T{
.ZN CWX
T}	T{
(1<<0)
T}
T{
\&#define
T}	T{
.ZN CWY
T}	T{
(1<<1)
T}
T{
\&#define
T}	T{
.ZN CWWidth
T}	T{
(1<<2)
T}
T{
\&#define
T}	T{
.ZN CWHeight
T}	T{
(1<<3)
T}
T{
\&#define
T}	T{
.ZN CWBorderWidth
T}	T{
(1<<4)
T}
T{
\&#define
T}	T{
.ZN CWSibling
T}	T{
(1<<5)
T}
T{
\&#define
T}	T{
.ZN CWStackMode
T}	T{
(1<<6)
T}
.TE
.IN "XWindowChanges" "" "@DEF@"
.Ds 0
/\&* Values */

typedef struct {
        int x, y;
        int width, height;
        int border_width;
        Window sibling;
        int stack_mode;
} XWindowChanges;
.De
.LP
Da x n' y thugz is used ta set tha windowz x n' y coordinates,
which is relatizzle ta tha parentz origin
and indicate tha posizzle of tha upper-left outa corner of tha window.
Da width n' height thugz is used ta set tha inside size of tha window,
not includin tha border, n' must be nonzero, or a
.ZN BadValue
error thangs up in dis biatch.
Attempts ta configure a root window have no effect.
.LP
Da border_width member is used ta set tha width of tha border up in pixels.
Note dat settin just tha border width leaves tha outer-left corner of tha window
in a gangbangin' fixed posizzle but moves tha absolute posizzle of tha windowz origin.
If you attempt ta set tha border-width attribute of an
.ZN InputOnly
window nonzero, a
.ZN BadMatch
error thangs up in dis biatch. 
.LP
Da siblin member is used ta set tha siblin window fo' stackin operations.
Da stack_mode member is used ta set how tha fuck tha window is ta be restacked 
and can be set to
.ZN Above , 
.ZN Below , 
.ZN TopIf , 
.ZN BottomIf ,
or 
.ZN Opposite .
.SH DIAGNOSTICS
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3),
XCreateWindow(3),
XDestroyWindow(3),
XMapWindow(3),
XRaiseWindow(3),
XUnmapWindow(3)
.br
\fI\*(xL\fP
