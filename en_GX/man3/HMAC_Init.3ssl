.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "hmac 3"
.TH hmac 3 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
HMAC, HMAC_Init, HMAC_Update, HMAC_Final, HMAC_cleanup \- HMAC message
authentication code
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/hmac.h>
\&
\& unsigned char *HMAC(const EVP_MD *evp_md, const void *key,
\&               int key_len, const unsigned char *d, int n,
\&               unsigned char *md, unsigned int *md_len);
\&
\& void HMAC_CTX_init(HMAC_CTX *ctx);
\&
\& int HMAC_Init(HMAC_CTX *ctx, const void *key, int key_len,
\&               const EVP_MD *md);
\& int HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int key_len,
\&                   const EVP_MD *md, ENGINE *impl);
\& int HMAC_Update(HMAC_CTX *ctx, const unsigned char *data, int len);
\& int HMAC_Final(HMAC_CTX *ctx, unsigned char *md, unsigned int *len);
\&
\& void HMAC_CTX_cleanup(HMAC_CTX *ctx);
\& void HMAC_cleanup(HMAC_CTX *ctx);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1HMAC\s0 be a \s-1MAC \s0(message authentication code), i.e. a keyed hash
function used fo' message authentication, which is based on a hash
function.
.PP
\&\s-1\fIHMAC\s0()\fR computes tha message authentication code of tha \fBn\fR bytes at
\&\fBd\fR rockin tha hash function \fBevp_md\fR n' tha key \fBkey\fR which is
\&\fBkey_len\fR bytes long.
.PP
It places tha result up in \fBmd\fR (which must have space fo' tha output of
the hash function, which is no mo' than \fB\s-1EVP_MAX_MD_SIZE\s0\fR bytes).
If \fBmd\fR is \s-1NULL,\s0 tha digest is placed up in a static array.  Da size of
the output is placed up in \fBmd_len\fR, unless it is \fB\s-1NULL\s0\fR.
.PP
\&\fBevp_md\fR can be \fIEVP_sha1()\fR, \fIEVP_ripemd160()\fR etc.
.PP
\&\fIHMAC_CTX_init()\fR initialises a \fB\s-1HMAC_CTX\s0\fR before first use. Well shiiiit, it must be
called.
.PP
\&\fIHMAC_CTX_cleanup()\fR erases tha key n' other data from tha \fB\s-1HMAC_CTX\s0\fR
and releases any associated resources. Well shiiiit, it must be called when an
\&\fB\s-1HMAC_CTX\s0\fR is no longer required.
.PP
\&\fIHMAC_cleanup()\fR be a alias fo' \fIHMAC_CTX_cleanup()\fR included fo' back
compatibilitizzle wit 0.9.6b, it is deprecated.
.PP
Da followin functions may be used if tha message aint straight-up
stored up in memory:
.PP
\&\fIHMAC_Init()\fR initializes a \fB\s-1HMAC_CTX\s0\fR structure ta use tha hash
function \fBevp_md\fR n' tha key \fBkey\fR which is \fBkey_len\fR bytes
long. Well shiiiit, it is deprecated n' only included fo' backward compatibility
with OpenSSL 0.9.6b.
.PP
\&\fIHMAC_Init_ex()\fR initializes or reuses a \fB\s-1HMAC_CTX\s0\fR structure ta use
the function \fBevp_md\fR n' key \fBkey\fR. Either can be \s-1NULL,\s0 up in which
case tha existin one is ghon be reused. Y'all KNOW dat shit, muthafucka! \fIHMAC_CTX_init()\fR must have been
called before tha straight-up original gangsta use of a \fB\s-1HMAC_CTX\s0\fR up in this
function. I aint talkin' bout chicken n' gravy biatch. \fBN.B. \f(BIHMAC_Init()\fB had dis undocumented behaviour in
previous versionz of OpenSSL \- failure ta switch ta \f(BIHMAC_Init_ex()\fB in
programs dat expect it will cause dem ta stop working\fR.
.PP
\&\fIHMAC_Update()\fR can be called repeatedly wit chunkz of tha message to
be authenticated (\fBlen\fR bytes at \fBdata\fR).
.PP
\&\fIHMAC_Final()\fR places tha message authentication code up in \fBmd\fR, which
must have space fo' tha hash function output.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\s-1\fIHMAC\s0()\fR returns a pointa ta tha message authentication code or \s-1NULL\s0 if
an error occurred.
.PP
\&\fIHMAC_Init_ex()\fR, \fIHMAC_Update()\fR n' \fIHMAC_Final()\fR return 1 fo' success or 0 if
an error occurred.
.PP
\&\fIHMAC_CTX_init()\fR n' \fIHMAC_CTX_cleanup()\fR do not return joints.
.SH "CONFORMING TO"
.IX Header "CONFORMING TO"
\&\s-1RFC 2104\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIsha\fR\|(3), \fIevp\fR\|(3)
.SH "HISTORY"
.IX Header "HISTORY"
\&\s-1\fIHMAC\s0()\fR, \fIHMAC_Init()\fR, \fIHMAC_Update()\fR, \fIHMAC_Final()\fR n' \fIHMAC_cleanup()\fR
are available since SSLeay 0.9.0.
.PP
\&\fIHMAC_CTX_init()\fR, \fIHMAC_Init_ex()\fR n' \fIHMAC_CTX_cleanup()\fR is available
since OpenSSL 0.9.7.
.PP
\&\fIHMAC_Init_ex()\fR, \fIHMAC_Update()\fR n' \fIHMAC_Final()\fR did not return joints in
versionz of OpenSSL before 1.0.0.
