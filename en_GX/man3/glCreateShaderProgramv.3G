'\" t
.\"     Title: glCreateShaderProgram
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCREATESHADERPROGRA" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCreateShaderProgramv \- create a stand\-alone program from a array of null\-terminated source code strings
.SH "C SPECIFICATION"
.HP \w'GLuint\ glCreateShaderProgramv('u
.BI "GLuint glCreateShaderProgramv(GLenum\ " "type" ", GLsizei\ " "count" ", const\ char\ **" "strings" ");"
.SH "PARAMETERS"
.PP
\fItype\fR
.RS 4
Specifies tha type of shader ta create\&.
.RE
.PP
\fIcount\fR
.RS 4
Specifies tha number of source code strings up in tha array
\fIstrings\fR\&.
.RE
.PP
\fIstrings\fR
.RS 4
Specifies tha address of a array of pointas ta source code strings from which ta create tha program object\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglCreateShaderProgram\fR
creates a program object containin compiled n' linked shadaz fo' a single stage specified by
\fItype\fR\&.
\fIstrings\fR
refers ta a array of
\fIcount\fR
strings from which ta create tha shader executables\&.
.PP
\fBglCreateShaderProgram\fR
is equivalent (assumin no errors is generated) to:
.sp
.if n \{\
.RS 4
.\}
.nf
    const GLuint shader = glCreateShader(type);
    if (shader) {
        glShaderSource(shader, count, strings, NULL);
        glCompileShader(shader);
        const GLuint program = glCreateProgram();
        if (program) {
            GLint compiled = GL_FALSE;
            glGetShaderiv(shader, GL_COMPILE_STATUS, &compiled);
            glProgramParameteri(program, GL_PROGRAM_SEPARABLE, GL_TRUE);
            if (compiled) {
                glAttachShader(program, shader);
                glLinkProgram(program);
                glDetachShader(program, shader);
            }
            /* append\-shader\-info\-log\-to\-program\-info\-log */
        }
        glDeleteShader(shader);
        return program;
    } else {
        return 0;
    }
.fi
.if n \{\
.RE
.\}
.PP
Da program object pimped by
\fBglCreateShaderProgram\fR
has its
\fBGL_PROGRAM_SEPARABLE\fR
status set to
\fBGL_TRUE\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if if
\fItype\fR
is not a accepted shader type\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIcount\fR
is negative\&.
.PP
Other errors is generated if tha supplied shader code fails ta compile n' link, as busted lyrics bout fo' tha commandz up in tha pseudocode sequence above yo, but all such errors is generated without any side effectz of executin dem commands\&.
.SH "SEE ALSO"
.PP
\fBglCreateShader\fR(),
\fBglCreateProgram\fR(),
\fBglCompileShader\fR(),
\fBglLinkProgram\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010\-2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
