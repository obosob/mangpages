.TH "std::decimal::decimal32" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::decimal::decimal32 \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef float __decfloat32 \fB__attribute__\fP ((mode(SD)))"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBdecimal32\fP (\fBdecimal64\fP __d64)"
.br
.ti -1c
.RI "\fBdecimal32\fP (\fBdecimal128\fP __d128)"
.br
.ti -1c
.RI "\fBdecimal32\fP (float __r)"
.br
.ti -1c
.RI "\fBdecimal32\fP (double __r)"
.br
.ti -1c
.RI "\fBdecimal32\fP (long double __r)"
.br
.ti -1c
.RI "\fBdecimal32\fP (int __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (unsigned int __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (long __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (unsigned long __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (long long __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (unsigned long long __z)"
.br
.ti -1c
.RI "\fBdecimal32\fP (__decfloat32 __z)"
.br
.ti -1c
.RI "__decfloat32 \fB__getval\fP (void)"
.br
.ti -1c
.RI "void \fB__setval\fP (__decfloat32 __x)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator*=\fP (long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator+=\fP (unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator-=\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP & \fBoperator/=\fP (int __rhs)"
.br
.in -1c
.SH "Detailed Description"
.PP 
3\&.2\&.2 Class decimal32\&. 
.PP
Definizzle at line 227 of file decimal\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "std::decimal::decimal32::decimal32 (__decfloat32__z)\fC [inline]\fP"

.PP
Conformin extension: Conversion from scalar decimal type\&. 
.PP
Definizzle at line 251 of file decimal\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
