.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 19:35:54 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Oct 16 00:16:29 2000 followin Joseph S. Myers
.\"
.TH FNMATCH 3  2000-10-15 "GNU" "Linux Programmerz Manual"
.SH NAME
fnmatch \- match filename or pathname
.SH SYNOPSIS
.nf
.B #include <fnmatch.h>
.sp
.BI "int fnmatch(const char *" "pattern" ", const char *" strang ", int " flags );
.fi
.SH DESCRIPTION
The
.BR fnmatch ()
function checks whether the
.I string
argument matches the
.I pattern
argument, which be a gangbangin' finger-lickin' dirty-ass shell wildcard pattern.
.PP
The
.I flags
argument modifies tha behavior; it is tha bitwise OR of zero or more
of tha followin flags:
.TP
.B FNM_NOESCAPE
If dis flag is set, treat backslash as a ordinary character,
instead of a escape character.
.TP
.B FNM_PATHNAME
If dis flag is set, match a slash in
.I string
only wit a slash in
.I pattern
and not by a asterisk (*) or a question mark (?) metacharacter,
nor by a funky-ass bracket expression ([]) containin a slash.
.TP
.B FNM_PERIOD
If dis flag is set, a leadin period in
.I string
has ta be matched exactly by a period in
.IR pattern .
A period is considered ta be leadin if it is tha straight-up original gangsta characta in
.IR strang ,
or if both
.B FNM_PATHNAME
is set n' tha period immediately bigs up a slash.
.TP
.B FNM_FILE_NAME
This be a GNU synonym for
.BR FNM_PATHNAME .
.TP
.B FNM_LEADING_DIR
If dis flag (a GNU extension) is set, tha pattern is considered ta be
matched if it matches a initial segment of
.I string
which is followed by a slash.
This flag is mainly fo' tha internal
use of glibc n' is implemented only up in certain cases.
.TP
.B FNM_CASEFOLD
If dis flag (a GNU extension) is set, tha pattern is matched
case-insensitively.
.SH RETURN VALUE
Zero if
.I string
matches
.IR pattern ,
.B FNM_NOMATCH
if there is no match or another nonzero value if there be a error.
.SH CONFORMING TO
POSIX.2.
The
.BR FNM_FILE_NAME ", " FNM_LEADING_DIR ", n' " FNM_CASEFOLD
flags is GNU extensions.
.SH SEE ALSO
.BR sh (1),
.BR glob (3),
.BR scandir (3),
.BR wordexp (3),
.BR glob (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
