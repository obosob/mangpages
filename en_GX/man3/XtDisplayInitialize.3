.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtDisplay-Initialize XtOpen-Display XtClose-Display XtDatabase XtScreen-Database wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtDisplayInitialize 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtDisplayInitialize, XtOpenDisplay, XtDatabase, XtScreenDatabase, XtCloseDisplay \- initialize, open, or close a gangbangin' finger-lickin' display
.SH SYNTAX
.HP
void XtDisplayInitialize(XtAppContext \fIapp_context\fP, Display
*\fIdisplay\fP, Strin \fIapplication_name\fP, Strin \fIapplication_class\fP,
XrmOptionDescRec *\fIoptions\fP, Cardinal \fInum_options\fP, int *\fIargc\fP,
Strin *\fIargv\fP);
.HP
Display *XtOpenDisplay(XtAppContext \fIapp_context\fP, String
\fIdisplay_string\fP, Strin \fIapplication_name\fP, String
\fIapplication_class\fP, XrmOptionDescRec *\fIoptions\fP, Cardinal
\fInum_options\fP, int *\fIargc\fP, Strin *\fIargv\fP);
.HP
void XtCloseDisplay(Display *\fIdisplay\fP);
.HP
XrmDatabase XtDatabase(Display *\fIdisplay\fP);
.HP
XrmDatabase XtScreenDatabase(Screen* \fIscreen\fP);
.SH ARGUMENTS
.IP \fIargc\fP 1i
Specifies a pointa ta tha number of command line parameters.
.IP \fIargv\fP 1i
Specifies tha command line parameters.
.IP \fIapp_context\fP 1i
Specifies tha application context.
.ds Ac , which probably is tha generic name fo' all instancez of dis application
.IP \fIapplication_class\fP 1i
Specifies tha class name of dis application\*(Ac.
.IP \fIapplication_name\fP 1i
Specifies tha name of tha application instance.
.IP \fIdisplay\fP 1i
Specifies tha display\*(Di.
Note dat a gangbangin' finger-lickin' display can be up in at most one application context.
.IP \fInum_options\fP 1i
Specifies tha number of entries up in tha options list.
.IP \fIoptions\fP 1i
Specifies how tha fuck ta parse tha command line fo' any application-specific resources.
Da options argument is passed as a parameta to
.ZN XrmParseCommand .
For further shiznit,
see \fI\*(xL\fP.
.IP \fIscreen\fP 1i
Specifies tha screen whose resource database is ta be returned.
.SH DESCRIPTION
The
.ZN XtDisplayInitialize
function buildz tha resource database, calls tha Xlib
.ZN XrmParseCommand
function ta parse tha command line,
and performs other per display initialization.
After
.ZN XrmParseCommand
has been called,
argc n' argv contain only dem parametas that
were not up in tha standard option table or up in tha table specified by the
options argument.
If tha modified argc aint zero,
most applications simply print up tha modified argv along wit a message
listin tha allowable options.
On UNIX-based systems,
the application name is probably tha final component of argv[0].
If tha synchronize resource is
.ZN True
for tha specified application,
.ZN XtDisplayInitialize
calls tha Xlib
.ZN XSynchronize
function ta put Xlib tha fuck into synchronous mode fo' dis display connection.
If tha reverseVideo resource is
.ZN True ,
the \*(xI exchange
.ZN XtDefaultForeground
and
.ZN XtDefaultBackground
for widgets pimped on dis display.
(See Section 9.6.1).
.LP
The
.ZN XtOpenDisplay
function calls
.ZN XOpenDisplay
the specified display name.
If display_strin is NULL,
.ZN XtOpenDisplay
uses tha current value of tha \-display option specified up in argv
and if no display is specified up in argv,
uses tha userz default display (on UNIX-based systems,
this is tha value of tha DISPLAY environment variable).
.LP
If dis succeeds, it then calls
.ZN XtDisplayInitialize
and pass it tha opened display and
the value of tha \-name option specified up in argv as tha application name.
If no name option is specified,
it uses tha application name passed to
.ZN XtOpenDisplay .
If tha application name is NULL,
it uses tha last component of argv[0].
.ZN XtOpenDisplay
returns tha newly opened display or NULL if it failed.
.LP
.ZN XtOpenDisplay
is provided as a cold-ass lil convenience ta tha application programmer.
.LP
The
.ZN XtCloseDisplay
function closes tha specified display as soon as it is safe ta do so.
If called from within a event dispatch (for example, a cold-ass lil callback procedure),
.ZN XtCloseDisplay
does not close tha display until tha dispatch is complete.
Note dat applications need only call
.ZN XtCloseDisplay
if they is ta continue executin afta closin tha display;
otherwise, they should call
.ZN XtDestroyApplicationContext
or just exit.
.LP
The
.ZN XtDatabase
function returns tha straight-up merged resource database dat was built by
.ZN XtDisplayInitialize
associated wit tha display dat was passed in.
If dis display has not been initialized by
.ZN XtDisplayInitialize ,
the thangs up in dis biatch is not defined.
.LP
The
.ZN XtScreenDatabase
function returns tha straight-up merged resource database associated wit the
specified screen. I aint talkin' bout chicken n' gravy biatch. If tha \fIscreen\fP do not belong ta a
.ZN Display
initialized by
.ZN XtDisplayInitialize ,
the thangs up in dis biatch is undefined.
.SH "SEE ALSO"
XtAppCreateShell(3),
XtCreateApplicationContext(3)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
