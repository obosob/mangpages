'\" t
.\"***************************************************************************
.\" Copyright (c) 1998-2010,2011 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_addch.3x,v 1.32 2011/01/15 14:15:10 tom Exp $
.TH curs_addch 3X ""
.SH NAME
\fBaddch\fR,
\fBwaddch\fR,
\fBmvaddch\fR,
\fBmvwaddch\fR,
\fBechochar\fR,
\fBwechochar\fR \- add a cold-ass lil characta (with attributes) ta a \fBcurses\fR window, then advizzle tha cursor
.SH SYNOPSIS
\fB#include <curses.h>\fR
.PP
\fBint addch(const chtype ch);\fR
.br
\fBint waddch(WINDOW *win, const chtype ch);\fR
.br
\fBint mvaddch(int y, int x, const chtype ch);\fR
.br
\fBint mvwaddch(WINDOW *win, int y, int x, const chtype ch);\fR
.br
\fBint echochar(const chtype ch);\fR
.br
\fBint wechochar(WINDOW *win, const chtype ch);\fR
.br
.SH DESCRIPTION
Da \fBaddch\fR, \fBwaddch\fR, \fBmvaddch\fR n' \fBmvwaddch\fR routines put
the characta \fIch\fR tha fuck into tha given window at its current window position,
which is then advanced. Y'all KNOW dat shit, muthafucka!  They is analogous ta \fBputchar\fR up in \fBstdio\fR(3).
If tha advizzle be all up in tha right margin, tha cursor automatically wraps ta the
beginnin of tha next line.  At tha bottom of tha current scrollin region, if
\fBscrollok\fR is enabled, tha scrollin region is scrolled up one line.
.PP
If \fIch\fR be a tab, newline, or backspace,
the cursor is moved appropriately within tha window.
Backspace moves tha cursor one characta left; all up in tha left
edge of a window it do nothing.
Newline do a \fBclrtoeol\fR,
then moves tha cursor ta tha window left margin on tha next line,
scrollin tha window if on tha last line.
Tabs is considered ta be at every last muthafuckin eighth column.
Da tab interval may be altered by settin tha \fBTABSIZE\fR variable.
.PP
If \fIch\fR be any control characta other than tab, newline, or backspace, it
is drawn up in \fB^\fR\fIX\fR notation. I aint talkin' bout chicken n' gravy biatch.  Callin \fBwinch\fR afta addin a
control characta do not return tha characta itself yo, but instead returns
the ^-representation of tha control character.
.PP
Video attributes can be combined wit a cold-ass lil characta argument passed to
\fBaddch\fR or related functions by logical-ORin dem tha fuck into tha character.
(Thus, text, includin attributes, can be copied from one place ta another
usin \fBinch\fR n' \fBaddch\fR.)  See tha \fBcurs_attr\fR(3X) page for
valuez of predefined vizzle attribute constants dat can be usefully OR'ed
into characters.
.PP
Da \fBechochar\fR n' \fBwechochar\fR routines is equivalent ta a cold-ass lil call to
\fBaddch\fR followed by a cold-ass lil call ta \fBrefresh\fR, or a cold-ass lil call ta \fBwaddch\fR
followed by a cold-ass lil call ta \fBwrefresh\fR.  Da knowledge dat only a single
characta is bein output is used and, fo' non-control characters, a
considerable performizzle bust may be peeped by rockin these routines instead of
their equivalents.
.SS Line Graphics
Da followin variablez may be used ta add line drawin charactas ta the
screen wit routinez of tha \fBaddch\fR crew.  Da default characta listed
below is used if tha \fBacsc\fR capabilitizzle do not define a terminal-specific
replacement fo' dat shit.
Da names is taken from VT100 nomenclature.
.PP
.TS
l l l
_ _ _
l l l.
\fIName\fR	\fIDefault\fR	\fIDescription\fR
ACS_BLOCK	#	solid square block
ACS_BOARD	#	board of squares
ACS_BTEE	+	bottom tee
ACS_BULLET	o	bullet
ACS_CKBOARD	:	checker board (stipple)
ACS_DARROW	v	arrow pointin down
ACS_DEGREE	'	degree symbol
ACS_DIAMOND	+	diamond
ACS_GEQUAL	>	greater-than-or-equal-to
ACS_HLINE	\-	horizontal line
ACS_LANTERN	#	lantern symbol
ACS_LARROW	<	arrow pointin left
ACS_LEQUAL	<	less-than-or-equal-to
ACS_LLCORNER	+	lower left-hand corner
ACS_LRCORNER	+	lower right-hand corner
ACS_LTEE	+	left tee
ACS_NEQUAL	!	not-equal
ACS_PI	*	greek pi
ACS_PLMINUS	#	plus/minus
ACS_PLUS	+	plus
ACS_RARROW	>	arrow pointin right
ACS_RTEE	+	right tee
ACS_S1	\-	scan line 1
ACS_S3	\-	scan line 3
ACS_S7	\-	scan line 7
ACS_S9	\&_	scan line 9
ACS_STERLING	f	pound-sterlin symbol
ACS_TTEE	+	top tee
ACS_UARROW	^	arrow pointin up
ACS_ULCORNER	+	upper left-hand corner
ACS_URCORNER	+	upper right-hand corner
ACS_VLINE	|	vertical line
.TE
.SH RETURN VALUE
All routines return tha integer \fBERR\fR upon failure n' \fBOK\fR on success
(the SVr4 manuals specify only "an integer value other than \fBERR\fR") upon
successful completion, unless otherwise noted up in tha precedin routine
descriptions.
.PP
Functions wit a "mv" prefix first big-ass up a cold-ass lil cursor movement using
\fBwmove\fP, n' return a error if tha posizzle is outside tha window,
or if tha window pointa is null.
.SH NOTES
Note dat \fBaddch\fR, \fBmvaddch\fR, \fBmvwaddch\fR, and
\fBechochar\fR may be macros.
.SH PORTABILITY
All these functions is busted lyrics bout up in tha XSI Curses standard, Issue 4.
Da defaults specified fo' forms-drawin charactas apply up in tha POSIX locale.
.LP
X/Open Curses states dat tha \fIACS_\fP definitions is \fBchar\fP constants.
For tha wide-characta implementation (see \fBcurs_add_wch\fP),
there is analogous \fIWACS_\fP definitions which is \fBcchar_t\fP constants.
.LP
Some ACS symbols
(ACS_S3,
ACS_S7,
ACS_LEQUAL,
ACS_GEQUAL,
ACS_PI,
ACS_NEQUAL,
ACS_STERLING)
were not documented in
any publicly busted out System V.  But fuck dat shiznit yo, tha word on tha street is dat nuff publicly available terminfos
include \fBacsc\fR strings up in which they key charactas (pryz{|}) are
embedded, n' a second-hand list of they characta descriptions has come
to light.  Da ACS-prefixed names fo' dem was invented fo' \fBncurses\fR(3X).
.LP
Da \fBTABSIZE\fR variable is implemented up in some versionz of curses,
but aint part of X/Open curses.
.LP
If \fIch\fR be a cold-ass lil carriage return,
the cursor is moved ta tha beginnin of tha current row of tha window.
This is legit of other implementations yo, but aint documented.
.SH SEE ALSO
\fBcurses\fR(3X),
\fBcurs_attr\fR(3X),
\fBcurs_clear\fR(3X),
\fBcurs_inch\fR(3X),
\fBcurs_outopts\fR(3X),
\fBcurs_refresh\fR(3X),
\fBcurs_variables\fR(3X),
\fBputc\fR(3).
.PP
Comparable functions up in tha wide-characta (ncursesw) library are
busted lyrics bout in
\fBcurs_add_wch\fR(3X).
