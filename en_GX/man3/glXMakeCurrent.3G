'\" t
.\"     Title: glXMakeCurrent
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLXMAKECURRENT" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glXMakeCurrent \- attach a GLX context ta a window or a GLX pixmap
.SH "C SPECIFICATION"
.HP \w'Bool\ glXMakeCurrent('u
.BI "Bool glXMakeCurrent(Display\ *\ " "dpy" ", GLXDrawable\ " "drawable" ", GLXContext\ " "ctx" ");"
.SH "PARAMETERS"
.PP
\fIdpy\fR
.RS 4
Specifies tha connection ta tha X server\&.
.RE
.PP
\fIdrawable\fR
.RS 4
Specifies a GLX drawable\&. Must be either a X window ID or a GLX pixmap ID\&.
.RE
.PP
\fIctx\fR
.RS 4
Specifies a GLX renderin context dat is ta be attached to
\fIdrawable\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglXMakeCurrent\fR
does two thangs: It makes
\fIctx\fR
the current GLX renderin context of tha callin thread, replacin tha previously current context if there was one, n' it attaches
\fIctx\fR
to a GLX drawable, either a window or a GLX pixmap\& fo' realz. As a result of these two actions, subsequent GL renderin calls use renderin context
\fIctx\fR
to modify GLX drawable
\fIdrawable\fR
(for readin n' writing)\&. Because
\fBglXMakeCurrent\fR
always replaces tha current renderin context with
\fIctx\fR, there can be only one current context per thread\&.
.PP
Pendin commandz ta tha previous context, if any, is flushed before it is busted out\&.
.PP
Da last time
\fIctx\fR
is made current ta any thread, its viewport is set ta tha full size of
\fIdrawable\fR\&. Right back up in yo muthafuckin ass. Subsequent calls by any thread to
\fBglXMakeCurrent\fR
with
\fIctx\fR
have no effect on its viewport\&.
.PP
To release tha current context without assignin a freshly smoked up one, call
\fBglXMakeCurrent\fR
with
\fIdrawable\fR
set to
\fBNone\fR
and
\fIctx\fR
set to
\fBNULL\fR\&.
.PP
\fBglXMakeCurrent\fR
returns
\fBTrue\fR
if it is successful,
\fBFalse\fR
otherwise\&. If
\fBFalse\fR
is returned, tha previously current renderin context n' drawable (if any) remain unchanged\&.
.SH "NOTES"
.PP
A
\fIprocess\fR
is a single\-execution environment, implemented up in a single address space, consistin of one or mo' threads\&.
.PP
A
\fIthread\fR
is one of a set of subprocesses dat share a single address space yo, but maintain separate program counters, stack spaces, n' other related global data\& fo' realz. A
\fIthread\fR
that is tha only gangmember of its subprocess crew is equivalent ta a
\fIprocess\fR\&.
.SH "ERRORS"
.PP
\fBBadMatch\fR
is generated if
\fIdrawable\fR
was not pimped wit tha same X screen n' visual as
\fIctx\fR\&. Well shiiiit, it be also generated if
\fIdrawable\fR
is
\fBNone\fR
and
\fIctx\fR
is not
\fBNULL\fR\&.
.PP
\fBBadAccess\fR
is generated if
\fIctx\fR
was current ta another thread all up in tha time
\fBglXMakeCurrent\fR
was called\&.
.PP
\fBGLXBadDrawable\fR
is generated if
\fIdrawable\fR
is not a valid GLX drawable\&.
.PP
\fBGLXBadContext\fR
is generated if
\fIctx\fR
is not a valid GLX context\&.
.PP
\fBGLXBadContextState\fR
is generated if
\fBglXMakeCurrent\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.PP
\fBGLXBadContextState\fR
is also generated if tha renderin context current ta tha callin thread has GL renderer state
\fBGLX_FEEDBACK\fR
or
\fBGLX_SELECT\fR\&.
.PP
\fBGLXBadCurrentWindow\fR
is generated if there be pendin GL commandz fo' tha previous context n' tha current drawable be a window dat is no longer valid\&.
.PP
\fBBadAlloc\fR
may be generated if tha server has delayed allocation of ancillary buffers until
\fBglXMakeCurrent\fR
is called, only ta find dat it has insufficient resources ta complete tha allocation\&.
.SH "SEE ALSO"
.PP
\fBglXCreateContext\fR(),
\fBglXCreateGLXPixmap\fR()\fBglXGetCurrentContext\fR(),
\fBglXGetCurrentDisplay\fR(),
\fBglXGetCurrentDrawable\fR(),
\fBglXGetCurrentReadDrawable\fR(),
\fBglXMakeContextCurrent\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
