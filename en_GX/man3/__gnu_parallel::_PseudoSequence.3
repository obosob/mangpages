" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::_PseudoSequence< _Tp, _DifferenceTp > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _DifferenceTp \fB_DifferenceType\fP"
.br
.ti -1c
.RI "typedef 
.br
\fB_PseudoSequenceIterator\fP< _Tp, 
.br
uint64_t > \fBiterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_PseudoSequence\fP (const _Tp &__val, _DifferenceType __count)"
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP () const "
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _DifferenceTp>class __gnu_parallel::_PseudoSequence< _Tp, _DifferenceTp >"
Sequence dat conceptually consistz of multiple copiez of tha same element\&. Da copies is not stored explicitly, of course\&. 


.PP
\fBParameters:\fP
.RS 4
\fI_Tp\fP Sequence _M_value type\&. 
.br
\fI_DifferenceTp\fP Sequence difference type\&. 
.RE
.PP

.PP
Definizzle at line 359 of file parallel/base\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Tp, typename _DifferenceTp> \fB__gnu_parallel::_PseudoSequence\fP< _Tp, _DifferenceTp >::\fB_PseudoSequence\fP (const _Tp &__val, _DifferenceType__count)\fC [inline]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__val\fP Element of tha sequence\&. 
.br
\fI__count\fP Number of (virtual) copies\&. 
.RE
.PP

.PP
Definizzle at line 371 of file parallel/base\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Tp, typename _DifferenceTp> \fBiterator\fP \fB__gnu_parallel::_PseudoSequence\fP< _Tp, _DifferenceTp >::begin () const\fC [inline]\fP"

.PP
Begin iterator\&. 
.PP
Definizzle at line 376 of file parallel/base\&.h\&.
.SS "template<typename _Tp, typename _DifferenceTp> \fBiterator\fP \fB__gnu_parallel::_PseudoSequence\fP< _Tp, _DifferenceTp >::end () const\fC [inline]\fP"

.PP
End iterator\&. 
.PP
Definizzle at line 381 of file parallel/base\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
