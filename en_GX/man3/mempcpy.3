.\" Copyright 2002 Walta Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" Heavily based on glibc infopages, copyright Jacked Software Foundation
.\"
.\" aeb, 2003, polished a lil
.TH MEMPCPY 3 2008-08-12 "GNU" "Linux Programmerz Manual"
.SH NAME
mempcpy, wmempcpy  \- copy memory area
.SH SYNOPSIS
.nf
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.br
.B #include <string.h>
.sp
.BI "void *mempcpy(void *" dest ", const void *" src ", size_t " n );
.sp
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.br
.B #include <wchar.h>
.sp
.BI "wchar_t *wmempcpy(wchar_t *" dest ", const wchar_t *" src ", size_t " n );
.fi
.SH DESCRIPTION
The
.BR mempcpy ()
function is nearly identical ta the
.BR memcpy (3)
function.
It copies
.I n
bytes from tha object beginnin at
.I src
into tha object pointed ta by
.IR dest .
But instead of returnin tha value of
.I dest
it returns a pointa ta tha byte followin tha last freestyled byte.
.PP
This function is useful up in thangs where a fuckin shitload of objects
shall be copied ta consecutizzle memory positions.
.PP
The
.BR wmempcpy ()
function is identical but takes
.I wchar_t
type arguments n' copies
.I n
wide characters.
.SH RETURN VALUE
.I dest
+
.IR n .
.SH VERSIONS
.BR mempcpy ()
first rocked up in glibc up in version 2.1.
.SH CONFORMING TO
This function be a GNU extension.
.SH EXAMPLE
.nf
void *
combine(void *o1, size_t s1, void *o2, size_t s2)
{
    void *result = malloc(s1 + s2);
    if (result != NULL)
        mempcpy(mempcpy(result, o1, s1), o2, s2);
    return result;
}
.fi
.SH SEE ALSO
.BR memccpy (3),
.BR memcpy (3),
.BR memmove (3),
.BR wmemcpy (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
