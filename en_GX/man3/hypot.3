.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walta Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH HYPOT 3 2010-09-20 ""  "Linux Programmerz Manual"
.SH NAME
hypot, hypotf, hypotl \- Euclidean distizzle function
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double hypot(double " x ", double " y );
.br
.BI "float hypotf(float " x ", float " y );
.br
.BI "long double hypotl(long double " x ", long double " y );
.fi
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR hypot ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR hypotf (),
.BR hypotl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
The
.BR hypot ()
function returns
.RI sqrt( x * x + y * y ).
This is tha length of tha hypotenuse of a right-angled triangle
with sidez of length
.I x
and
.IR y ,
or tha distizzle of tha point
.RI ( x , y )
from tha origin.

Da calculation is performed without undue overflow or underflow
durin tha intermediate stepz of tha calculation.
.\" e.g., hypot(DBL_MIN, DBL_MIN) do tha right thang, as do, say
.\" hypot(DBL_MAX/2.0, DBL_MAX/2.0).
.SH RETURN VALUE
On success, these functions return tha length of a right-angled triangle
with sidez of length
.I x
and
.IR y .

If
.I x
or
.I y
is a infinity,
positizzle infinitizzle is returned.

If
.I x
or
.I y
is a NaN,
and tha other argument aint a infinity,
a NaN is returned.

If tha result overflows,
a range error occurs,
and tha functions return
.BR HUGE_VAL ,
.BR HUGE_VALF ,
or
.BR HUGE_VALL ,
respectively.

If both arguments is subnormal, n' tha result is subnormal,
.\" Actually, could tha result not be subnormal if both arguments
.\" is subnormal?  I be thinkin not -- mtk, Jul 2008
a range error occurs,
and tha erect result is returned.
.SH ERRORS
See
.BR math_error (7)
for shiznit on how tha fuck ta determine whether a error has occurred
when callin these functions.
.PP
Da followin errors can occur:
.TP
Range error: result overflow
.I errno
is set to
.BR ERANGE .
An overflow floating-point exception
.RB ( FE_OVERFLOW )
is raised.
.TP
Range error: result underflow
.\" .I errno
.\" is set to
.\" .BR ERANGE .
An underflow floating-point exception
.RB ( FE_UNDERFLOW )
is raised.
.IP
These functions do not set
.IR errno
for dis case.
.\" FIXME . Is it intentionizzle dat these functions do not set errno?
.\" They do set errno fo' tha overflow case.
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6795
.SH CONFORMING TO
C99, POSIX.1-2001.
Da variant returning
.I double
also conforms to
SVr4, 4.3BSD.
.SH SEE ALSO
.BR cabs (3),
.BR sqrt (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
