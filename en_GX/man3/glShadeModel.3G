'\" t
.\"     Title: glShadeModel
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLSHADEMODEL" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glShadeModel \- select flat or smooth shading
.SH "C SPECIFICATION"
.HP \w'void\ glShadeModel('u
.BI "void glShadeModel(GLenum\ " "mode" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies a symbolic value representin a gangbangin' finger-lickin' dirty-ass shadin technique\& fo' realz. Accepted joints are
\fBGL_FLAT\fR
and
\fBGL_SMOOTH\fR\&. Da initial value is
\fBGL_SMOOTH\fR\&.
.RE
.SH "DESCRIPTION"
.PP
GL primitives can have either flat or smooth shading\&. Right back up in yo muthafuckin ass. Smooth shading, tha default, causes tha computed flavaz of vertices ta be interpolated as tha primitizzle is rasterized, typically assignin different flavas ta each resultin pixel fragment\&. Flat shadin selects tha computed color of just one vertex n' assigns it ta all tha pixel fragments generated by rasterizin a single primitive\&. In either case, tha computed color of a vertex is tha result of lightin if lightin is enabled, or it is tha current color all up in tha time tha vertex was specified if lightin is disabled\&.
.PP
Flat n' smooth shadin is indistinguishable fo' points\&. Right back up in yo muthafuckin ass. Startin when
\fBglBegin\fR()
is issued n' countin vertices n' primitives from 1, tha GL gives each flat\-shaded line segment
i
the computed color of vertex
i + 1, its second vertex\&. Countin similarly from 1, tha GL gives each flat\-shaded polygon tha computed color of tha vertex listed up in tha followin table\&. This is tha last vertex ta specify tha polygon up in all cases except single polygons, where tha straight-up original gangsta vertex specifies tha flat\-shaded color\&.
.PP
.TS
allbox tab(:);
lB cB.
T{
\fB
                        Primitizzle Type of Polygon 
                        \fR\fBi\fR\fB
                        \fR
T}:T{
\fB
                        Vertex
                        \fR
T}
.T&
l c
l c
l c
l c
l c
l c.
T{
Single polygon 
                        (
                            
                            
                                i
                                ==
                                1
                            
                        )
T}:T{
1
T}
T{
Triangle strip
T}:T{
i
                                +
                                2
T}
T{
Triangle fan
T}:T{
i
                                +
                                2
T}
T{
Independent triangle
T}:T{
3
                                ⁢
                                i
T}
T{
Quad strip
T}:T{
2
                                ⁢
                                i
                                +
                                2
T}
T{
Independent quad
T}:T{
4
                                ⁢
                                i
T}
.TE
.sp 1
.PP
Flat n' smooth shadin is specified by
\fBglShadeModel\fR
with
\fImode\fR
set to
\fBGL_FLAT\fR
and
\fBGL_SMOOTH\fR, respectively\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is any value other than
\fBGL_FLAT\fR
or
\fBGL_SMOOTH\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglShadeModel\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_SHADE_MODEL\fR
.SH "SEE ALSO"
.PP
\fBglBegin\fR(),
\fBglColor\fR(),
\fBglLight\fR(),
\fBglLightModel\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
