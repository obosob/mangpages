'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbListComponents 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbListComponents \- List of components fo' one or mo' component types
.SH SYNOPSIS
.HP
.B XkbComponentListPtr XkbListComponents
.BI "(\^Display *" "dpy" "\^,"
.BI "unsigned int " "device_spec" "\^,"
.BI "XkbComponentNamesPtr " "ptrns" "\^,"
.BI "int *" "max_inout" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- dpy
connection ta X server
.TP
.I \- device_spec
device ID, or XkbUseCoreKbd
.TP
.I \- ptrns
namelist fo' componentz of interest
.TP
.I \- max_inout
max # returned names, # left over
.SH DESCRIPTION
.LP
Yo ass may ask tha server fo' a list of components fo' one or mo' component types. Da request takes tha 
form of a set of patterns, one pattern fo' each of tha component types, includin a pattern fo' tha 
complete keyboard description. I aint talkin' bout chicken n' gravy biatch. To obtain dis list, use 
.I XkbListComponents.

.I XkbListComponents 
queries tha server fo' a list of component names matchin tha patterns specified up in 
.I ptrns. 
It waits fo' a reply n' returns tha matchin component names up in a XkbComponentListRec structure. 
When yo ass is done rockin tha structure, you should free it rockin 
.I XkbFreeComponentList. device_spec 
indicates a particular thang up in which tha calla is interested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A server be allowed (but not 
required) ta restrict its reply ta portionz of tha database dat is relevant fo' dat particular 
device.

.I ptrns 
is a pointa ta a XkbComponentNamesRec. Each of tha fieldz up in 
.I ptrns 
gotz nuff a pattern namin tha componentz of interest. Each of tha patterns is composed of charactas 
from tha ISO Latin1 encodin yo, but can contain only parentheses, tha wildcard charactas `?' n' `*', 
and charactas permitted up in a cold-ass lil component class or member name fo' realz. A pattern may be NULL, up in which case no 
components fo' dat type is returned. Y'all KNOW dat shit, muthafucka! Pattern matches wit component names is case sensitive. Da `?' 
wildcard matches any single character, except a left or right parenthesis; tha `*' wildcard matches 
any number of characters, except a left or right parenthesis. If a implementation allows additionizzle 
charactas up in a cold-ass lil component class or member name other than dem required by tha Xkb extension, tha 
result of comparin one of tha additionizzle charactas ta either of tha wildcard charactas is 
implementation-dependent.

If a pattern gotz nuff illegal characters, tha illegal charactas is ignored. Y'all KNOW dat shit, muthafucka! Da matchin process is 
carried up as if tha illegal charactas was omitted from tha pattern.

.I max_inout 
is used ta throttle tha amount of data passed ta n' from tha server n' shit. On input, it specifies tha 
maximum number of names ta be returned (the total number of names up in all component categories). Upon 
return from 
.I XkbListComponents, 
max_inout gotz nuff tha number of names dat matched tha request but was not returned cuz of tha 
limit.

.B Component Names

Component names have tha form 
.I "class(member)" 
where 
.I class 
raps on some subset of tha available components fo' a particular type n' tha optionizzle 
.I member 
identifies a specific component from dat subset. For example, tha name "atlantis(acme)" fo' a symbols 
component might specify tha symbols used fo' tha atlantis nationistic keyboard layout by tha vendor 
"acme." Each class has a optionizzle 
.I default 
member - references dat specify a cold-ass lil class but not a member refer ta tha default gangmember of tha class, if 
one exists, n' you can put dat on yo' toast. Xkb places no constraints on tha interpretation of tha class n' member names used up in 
component names.

Da 
.I class 
and 
.I member 
names is both specified rockin charactas from tha Latin-1 characta set. Xkb implementations must 
accept all alphanumeric characters, minus (`-') n' underscore (`_') up in class or member names, n' 
must not accept parentheses, plus, vertical bar, cement sign, asterisk, question mark, or white 
space. Da use of other charactas is implementation-dependent.
.SH STRUCTURES
.LP
Da component name patterns used ta describe tha request is passed to
.I XkbListComponents 
usin a XkbComponentNamesRec structure. This structure has no special allocation constraints or 
interrelationships wit other structures; allocate n' free dis structure rockin standard 
.I malloc 
and 
.I free 
calls or they equivalent:
.nf

    typedef struct _XkbComponentNames {
        char *         keymap;           /\(** keymap names */
        char *         keycodes;         /\(** keycode names */
        char *         types;            /\(** type names */
        char *         compat;           /\(** compatibilitizzle map names */
        char *         symbols;          /\(** symbol names */
        char *         geometry;         /\(** geometry names */
    } XkbComponentNamesRec, *XkbComponentNamesPtr;
    
.fi    
.I XkbListComponents 
returns a pointa ta a XkbComponentListRec:
.nf

    typedef struct _XkbComponentList {
        int                      num_keymaps;  /\(** number of entries up in keymap */
        int                      num_keycodes; /\(** number of entries up in keycodes */
        int                      num_types;    /\(** number of entries up in types */
        int                      num_compat;   /\(** number of entries up in compat */
        int                      num_symbols;  /\(** number of entries up in symbols */
        int                      num_geometry; /\(** number of entries up in geometry;
        XkbComponentNamePtr      keymap;       /\(** keymap names */
        XkbComponentNamePtr      keycodes;     /\(** keycode names */
        XkbComponentNamePtr      types;        /\(** type names */
        XkbComponentNamePtr      compat;       /\(** compatibilitizzle map names */
        XkbComponentNamePtr      symbols;      /\(** symbol names */
        XkbComponentNamePtr      geometry;     /\(** geometry names */
    } XkbComponentListRec, *XkbComponentListPtr;
    
    typedef struct _XkbComponentName {
        unsigned short           flags;        /\(** hints regardin component name */
        char *                   name;         /\(** name of component */
    } XkbComponentNameRec, *XkbComponentNamePtr;
    
.fi   
.SH "SEE ALSO"
.BR XkbFreeComponentList (3) 
.SH NOTES
.LP
Note dat tha structure used ta specify patterns on input be a XkbComponentNamesRec, n' dat used ta 
hold tha individual component names upon return be a XkbComponentNameRec (no trailin `s' up in Name).
