'\" t
.\"     Title: glXSelectEvent
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLXSELECTEVENT" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glXSelectEvent \- select GLX events fo' a window or a GLX pixel buffer
.SH "C SPECIFICATION"
.HP \w'void\ glXSelectEvent('u
.BI "void glXSelectEvent(Display\ *\ " "dpy" ", GLXDrawable\ " "draw" ", unsigned\ long\ " "event_mask" ");"
.SH "PARAMETERS"
.PP
\fIdpy\fR
.RS 4
Specifies tha connection ta tha X server\&.
.RE
.PP
\fIdraw\fR
.RS 4
Specifies a GLX drawable\&. Must be a GLX pixel buffer or a window\&.
.RE
.PP
\fIevent_mask\fR
.RS 4
Specifies tha events ta be returned for
\fIdraw\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglXSelectEvent\fR
sets tha GLX event mask fo' a GLX pixel buffer or a window\&. Calling
\fBglXSelectEvent\fR
overrides any previous event mask dat was set by tha client for
\fIdraw\fR\&. Note dat it do not affect tha event masks dat other clients may have specified for
\fIdraw\fR
since each client renderin to
\fIdraw\fR
has a separate event mask fo' it\&.
.PP
Currently, only one GLX event,
\fBGLX_PBUFFER_CLOBBER_MASK\fR, can be selected\&. Da followin data is moonwalked back ta tha client when a
\fBGLX_PBUFFER_CLOBBER_MASK\fR
event occurs:
.PP
typedef struct {
.TS
allbox tab(:);
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
int \fIevent_type\fR;
T}:T{
/* GLX_DAMAGED or GLX_SAVED */
T}
T{
int \fIdraw_type\fR;
T}:T{
/* GLX_WINDOW or GLX_PBUFFER */
T}
T{
unsigned long \fIserial\fR;
T}:T{
/* # of last request processed by server */
T}
T{
Bool \fIsend_event\fR;
T}:T{
/* legit if dis came fo' SendEvent request */
T}
T{
Display \fI*display\fR;
T}:T{
/* display tha event was read from */
T}
T{
GLXDrawable \fIdrawable\fR;
T}:T{
/* i\&.d\&. of Drawable */
T}
T{
unsigned int \fIbuffer_mask\fR;
T}:T{
/* mask indicatin affected buffers */
T}
T{
int \fIx, y\fR;
T}:T{

T}
T{
int \fIwidth, height\fR;
T}:T{

T}
T{
int \fIcount\fR;
T}:T{
/* if nonzero, at least dis nuff mo' */
T}
.TE
.sp 1
.PP
} GLXPbufferClobberEvent; Da valid bit masks used in
\fIbuffer_mask\fR
are:
.PP
.TS
allbox tab(:);
lB lB.
T{
\fB
                        Bitmask
                        \fR
T}:T{
\fB
                        Correspondin Buffer
                        \fR
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fBGLX_FRONT_LEFT_BUFFER_BIT\fR
T}:T{
Front left color buffer
T}
T{
\fBGLX_FRONT_RIGHT_BUFFER_BIT\fR
T}:T{
Front right color buffer
T}
T{
\fBGLX_BACK_LEFT_BUFFER_BIT\fR
T}:T{
Back left color buffer
T}
T{
\fBGLX_BACK_RIGHT_BUFFER_BIT\fR
T}:T{
Back right color buffer
T}
T{
\fBGLX_AUX_BUFFERS_BIT\fR
T}:T{
Auxiliary buffer
T}
T{
\fBGLX_DEPTH_BUFFER_BIT\fR
T}:T{
Depth buffer
T}
T{
\fBGLX_STENCIL_BUFFER_BIT\fR
T}:T{
Stencil buffer
T}
T{
\fBGLX_ACCUM_BUFFER_BIT\fR
T}:T{
Accumulation buffer
T}
.TE
.sp 1
.PP
A single X server operation can cause nuff muthafuckin buffer clobber events ta be sent\&. (e\&.g\&., a single GLX pixel buffer may be damaged n' cause multiple buffer clobber events ta be generated)\&. Each event specifies one region of tha GLX drawable dat was affected by tha X Server operation\&. The
\fIbuffer_mask\fR
field indicates which color buffers n' ancillary buffers was affected\& fo' realz. All tha buffer clobber events generated by a single X server action is guaranteed ta be contiguous up in tha event queue\&. Da conditions under which dis event is generated n' the
\fIevent_type\fR
varies, dependin on tha type of tha GLX drawable\&.
.PP
When the
\fBGLX_AUX_BUFFERS_BIT\fR
is set in
\fIbuffer_mask\fR, then
\fIaux_buffer\fR
is set ta indicate which buffer was affected\&. If mo' than one aux buffer was affected, then additionizzle events is generated as part of tha same contiguous event group\&. Each additionizzle event gonna git only the
\fBGLX_AUX_BUFFERS_BIT\fR
set in
\fIbuffer_mask\fR, n' the
\fIaux_buffer\fR
field is ghon be set appropriately\&. For nonstereo drawables,
\fBGLX_FRONT_LEFT_BUFFER_BIT\fR
and
\fBGLX_BACK_LEFT_BUFFER_BIT\fR
are used ta specify tha front n' back color buffers\&.
.PP
For preserved GLX pixel buffers, a funky-ass buffer clobber event wit type
\fBGLX_SAVED\fR
is generated whenever tha contentz of tha GLX pixel buffer is moved outta offscreen memory\&. Da event(s) raps bout which portionz of tha GLX pixel buffer was affected\&. Clients whoz ass receive nuff buffer clobber events, referrin ta different save actions, should consider freein tha GLX pixel buffer resource up in order ta prevent tha system from thrashin cuz of insufficient resources\&.
.PP
For a unpreserved GLXPbuffer, a funky-ass buffer clobber event, wit type
\fBGLX_DAMAGED\fR, is generated whenever a portion of tha GLX pixel buffer becomes invalid\&. Da client may wish ta regenerate tha invalid portionz of tha GLX pixel buffer\&.
.PP
For Windows, buffer clobber events, wit type
\fBGLX_SAVED\fR, occur whenever a ancillary buffer, associated wit tha window, gets clobbered or moved outta off\-screen memory\&. Da event gotz nuff shiznit indicatin which color buffers n' ancillary buffers\e(emand which portionz of dem buffers\e(emwere affected\&.
.SH "NOTES"
.PP
\fBglXSelectEvent\fR
is available only if tha GLX version is 1\&.3 or pimped outer\&.
.PP
If tha GLX version is 1\&.1 or 1\&.0, tha GL version must be 1\&.0\&. If tha GLX version is 1\&.2, then tha GL version must be 1\&.1\&. If tha GLX version is 1\&.3, then tha GL version must be 1\&.2\&.
.SH "ERRORS"
.PP
\fBGLXBadDrawable\fR
is generated if
\fIdraw\fR
is not a valid window or a valid GLX pixel buffer\&.
.SH "ASSOCIATED GETS"
.PP
\fBglXGetSelectedEvent\fR()
.SH "SEE ALSO"
.PP
\fBglXCreatePbuffer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
