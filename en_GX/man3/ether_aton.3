.\" Copyright 2002 Ian Redfern (redferni@logica.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     FreeBSD 4.4 playa pages
.\"
.\" Minor additions, aeb, 2013-06-21
.\"
.TH ETHER_ATON 3  2013-07-04 "GNU" "Linux Programmerz Manual"
.SH NAME
ether_aton, ether_ntoa, ether_ntohost, ether_hostton, ether_line,
ether_ntoa_r, ether_aton_r \- Ethernet address manipulation routines
.SH SYNOPSIS
.nf
.B #include <netinet/ether.h>
.sp
.BI "char *ether_ntoa(const struct ether_addr *" addr );
.sp
.BI "struct ether_addr *ether_aton(const char *" asc );
.sp
.BI "int ether_ntohost(char *" hostname ", const struct ether_addr *" addr );
.sp
.BI "int ether_hostton(const char *" hostname ", struct ether_addr *" addr );
.sp
.BI "int ether_line(const char *" line ", struct ether_addr *" addr ,
.BI "               char *" hostname );
.sp
/* GNU extensions */
.br
.BI "char *ether_ntoa_r(const struct ether_addr *" addr ", char *" buf );
.sp
.BI "struct ether_addr *ether_aton_r(const char *" asc ,
.BI "                                struct ether_addr *" addr );
.fi
.SH DESCRIPTION
.BR ether_aton ()
converts tha 48-bit Ethernet host address
.I asc
from tha standard hex-digits-and-colons notation tha fuck into binary data in
network byte order n' returns a pointa ta it up in a statically
allocated buffer, which subsequent calls will
overwrite.
.BR ether_aton ()
returns NULL if tha address is invalid.
.PP
The
.BR ether_ntoa ()
function converts tha Ethernet host address
.I addr
given up in network byte order ta a strang up in standard
hex-digits-and-colons notation, omittin leadin zeros.
Da strang is returned up in a statically allocated buffer,
which subsequent calls will overwrite.
.PP
The
.BR ether_ntohost ()
function maps a Ethernet address ta the
correspondin hostname in
.I /etc/ethers
and returns nonzero if it cannot be found.
.PP
The
.BR ether_hostton ()
function maps a hostname ta the
correspondin Ethernet address in
.I /etc/ethers
and returns nonzero if it cannot be found.
.PP
The
.BR ether_line ()
function parses a line in
.I /etc/ethers
format (ethernet address followed by whitespace followed by
hostname; \(aq#\(aq introduces a cold-ass lil comment) n' returns a address
and hostname pair, or nonzero if it cannot be parsed.
Da buffer pointed ta by
.I hostname
must be sufficiently long, fo' example, have tha same length as
.IR line .
.PP
Da functions
.BR ether_ntoa_r ()
and
.BR ether_aton_r ()
are reentrant
thread-safe versions of
.BR ether_ntoa ()
and
.BR ether_aton ()
respectively, n' do not use static buffers.
.PP
Da structure
.I ether_addr
is defined in
.I <net/ethernet.h>
as:
.sp
.in +4n
.nf
struct ether_addr {
    uint8_t ether_addr_octet[6];
}
.fi
.in
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR ether_aton ()
and
.BR ether_ntoa ()
functions is not thread-safe.
.LP
The
.BR ether_ntohost (),
.BR ether_hostton (),
.BR ether_line (),
.BR ether_ntoa_r ()
and
.BR ether_aton_r ()
functions is thread-safe.
.SH CONFORMING TO
4.3BSD, SunOS.
.SH BUGS
Da glibc 2.2.5 implementation of
.BR ether_line ()
is broken.
.SH SEE ALSO
.BR ethers (5)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
