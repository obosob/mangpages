" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::tr2::__dynamic_bitset_base< _WordT, _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBstd::tr2::dynamic_bitset< _WordT, _Alloc >\fP\fC [private]\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef _WordT \fBblock_type\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__dynamic_bitset_base\fP (const allocator_type &__alloc=allocator_type())"
.br
.ti -1c
.RI "\fB__dynamic_bitset_base\fP (\fB__dynamic_bitset_base\fP &&__b)"
.br
.ti -1c
.RI "\fB__dynamic_bitset_base\fP (size_type __nbits, unsigned long long __val=0ULL, const allocator_type &__alloc=allocator_type())"
.br
.ti -1c
.RI "size_t \fB_M_are_all_aux\fP () const "
.br
.ti -1c
.RI "void \fB_M_assign\fP (const \fB__dynamic_bitset_base\fP &__b)"
.br
.ti -1c
.RI "void \fB_M_clear\fP ()"
.br
.ti -1c
.RI "void \fB_M_do_and\fP (const \fB__dynamic_bitset_base\fP &__x)"
.br
.ti -1c
.RI "void \fB_M_do_append_block\fP (block_type __block, size_type __pos)"
.br
.ti -1c
.RI "size_t \fB_M_do_count\fP () const "
.br
.ti -1c
.RI "void \fB_M_do_dif\fP (const \fB__dynamic_bitset_base\fP &__x)"
.br
.ti -1c
.RI "size_type \fB_M_do_find_first\fP (size_t __not_found) const "
.br
.ti -1c
.RI "size_type \fB_M_do_find_next\fP (size_t __prev, size_t __not_found) const "
.br
.ti -1c
.RI "void \fB_M_do_flip\fP ()"
.br
.ti -1c
.RI "void \fB_M_do_left_shift\fP (size_t __shift)"
.br
.ti -1c
.RI "void \fB_M_do_or\fP (const \fB__dynamic_bitset_base\fP &__x)"
.br
.ti -1c
.RI "void \fB_M_do_reset\fP ()"
.br
.ti -1c
.RI "void \fB_M_do_right_shift\fP (size_t __shift)"
.br
.ti -1c
.RI "void \fB_M_do_set\fP ()"
.br
.ti -1c
.RI "unsigned long long \fB_M_do_to_ullong\fP () const "
.br
.ti -1c
.RI "unsigned long \fB_M_do_to_ulong\fP () const "
.br
.ti -1c
.RI "void \fB_M_do_xor\fP (const \fB__dynamic_bitset_base\fP &__x)"
.br
.ti -1c
.RI "allocator_type \fB_M_get_allocator\fP () const "
.br
.ti -1c
.RI "block_type & \fB_M_getword\fP (size_type __pos)"
.br
.ti -1c
.RI "block_type \fB_M_getword\fP (size_type __pos) const "
.br
.ti -1c
.RI "block_type & \fB_M_hiword\fP ()"
.br
.ti -1c
.RI "block_type \fB_M_hiword\fP () const "
.br
.ti -1c
.RI "bool \fB_M_is_any\fP () const "
.br
.ti -1c
.RI "bool \fB_M_is_equal\fP (const \fB__dynamic_bitset_base\fP &__x) const "
.br
.ti -1c
.RI "bool \fB_M_is_less\fP (const \fB__dynamic_bitset_base\fP &__x) const "
.br
.ti -1c
.RI "bool \fB_M_is_proper_subset_of\fP (const \fB__dynamic_bitset_base\fP &__b) const "
.br
.ti -1c
.RI "bool \fB_M_is_subset_of\fP (const \fB__dynamic_bitset_base\fP &__b)"
.br
.ti -1c
.RI "void \fB_M_resize\fP (size_t __nbits, bool __value)"
.br
.ti -1c
.RI "size_type \fB_M_size\fP () const noexcept"
.br
.ti -1c
.RI "void \fB_M_swap\fP (\fB__dynamic_bitset_base\fP &__b)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static block_type \fB_S_maskbit\fP (size_type __pos) noexcept"
.br
.ti -1c
.RI "static size_type \fB_S_whichbit\fP (size_type __pos) noexcept"
.br
.ti -1c
.RI "static size_type \fB_S_whichbyte\fP (size_type __pos) noexcept"
.br
.ti -1c
.RI "static size_type \fB_S_whichword\fP (size_type __pos) noexcept"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBstd::vector\fP< block_type, 
.br
allocator_type > \fB_M_w\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const size_type \fB_S_bits_per_block\fP"
.br
.ti -1c
.RI "static const size_type \fBnpos\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _WordT = unsigned long long, typename _Alloc = std::allocator<_WordT>>struct std::tr2::__dynamic_bitset_base< _WordT, _Alloc >"
Base class, general case\&.
.PP
See documentation fo' dynamic_bitset\&. 
.PP
Definizzle at line 80 of file dynamic_bitset\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename _WordT  = unsigned long long, typename _Alloc  = std::allocator<_WordT>> \fBstd::vector\fP<block_type, allocator_type> \fBstd::tr2::__dynamic_bitset_base\fP< _WordT, _Alloc >::_M_w"

.PP
0 is tha least dope word\&. 
.PP
Definizzle at line 93 of file dynamic_bitset\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
