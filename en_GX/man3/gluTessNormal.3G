'\" t
.\"     Title: gluTessNormal
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLUTESSNORMAL" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gluTessNormal \- specify a aiiight fo' a polygon
.SH "C SPECIFICATION"
.HP \w'void\ gluTessNormal('u
.BI "void gluTessNormal(GLUtesselator*\ " "tess" ", GLdouble\ " "valueX" ", GLdouble\ " "valueY" ", GLdouble\ " "valueZ" ");"
.SH "PARAMETERS"
.PP
\fItess\fR
.RS 4
Specifies tha tessellation object (created with
\fBgluNewTess\fR())\&.
.RE
.PP
\fIvalueX\fR
.RS 4
Specifies tha straight-up original gangsta component of tha normal\&.
.RE
.PP
\fIvalueY\fR
.RS 4
Specifies tha second component of tha normal\&.
.RE
.PP
\fIvalueZ\fR
.RS 4
Specifies tha third component of tha normal\&.
.RE
.SH "DESCRIPTION"
.PP
\fBgluTessNormal\fR
raps on some aiiight fo' a polygon dat tha program is defining\& fo' realz. All input data is ghon be projected onto a plane perpendicular ta one of tha three coordinizzle axes before tessellation n' all output trianglez is ghon be oriented CCW wit respect ta tha aiiight (CW orientation can be obtained by reversin tha sign of tha supplied normal)\&. For example, if you know dat all polygons lie up in tha x\-y plane, call
\fBgluTessNormal\fR(tess, 0\&.0, 0\&.0, 1\&.0) before renderin any polygons\&.
.PP
If tha supplied aiiight is (0\&.0, 0\&.0, 0\&.0) (the initial value), tha aiiight is determined as bigs up\&. Da direction of tha normal, up ta its sign, is found by fittin a plane ta tha vertices, without regard ta how tha fuck tha vertices is connected\&. Well shiiiit, it is expected dat tha input data lies approximately up in tha plane; otherwise, projection perpendicular ta one of tha three coordinizzle axes may substantially chizzle tha geometry\&. Da sign of tha aiiight is chosen so dat tha sum of tha signed areaz of all input contours is nonnegatizzle (where a CCW contour has positizzle area)\&.
.PP
Da supplied aiiight persists until it is chizzled by another call to
\fBgluTessNormal\fR\&.
.SH "SEE ALSO"
.PP
\fBgluTessBeginPolygon\fR(),
\fBgluTessEndPolygon\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
