'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbInitCanonicalKeyTypes 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbInitCanonicalKeyTypes \- Set tha definitionz of tha canonical key types up in a 
client map ta they default joints
.SH SYNOPSIS
.HP
.B Status XkbInitCanonicalKeyTypes
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "int " "keypadVMod" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
keyboard description containin client map ta initialize
.TP
.I \- which
mask of types ta initialize
.TP
.I \- keypadVMod
index of NumLock virtual modifier
.SH DESCRIPTION
.LP
.I XkbInitCanonicalKeyTypes 
initializes tha straight-up original gangsta XkbNumRequiredTypes key typez of tha keyboard specified by 
the 
.I xkb 
parameta ta they default joints, n' you can put dat on yo' toast. Da 
.I which 
parameta specifies what tha fuck canonical key types ta initialize n' be a funky-ass bitwise 
inclusive OR of tha followin masks: XkbOneLevelMask, XkbTwoLevelMask, 
XkbAlphabeticMask, n' XkbKeypadMask. Only dem canonical types specified by 
the 
.I which 
mask is initialized.

If XkbKeypadMask is set up in tha 
.I which 
parameter, 
.I XkbInitCanonicalKeyTypes 
looks up tha NumLock named virtual modifier ta determine which virtual modifier 
to use when initializin tha KEYPAD key type. If tha NumLock virtual modifier 
does not exist, 
.I XkbInitCanonicalKeyTypes 
creates dat shit.

.I XkbInitCanonicalKeyTypes 
normally returns Success. Well shiiiit, it returns BadAccess if tha Xkb extension has not been 
properly initialized, n' BadAccess if tha 
xkb parameta aint valid.
.SH "RETURN VALUES"
.TP 15
Success
Da 
.I XkbInitCanonicalKeyTypes 
funtion return Success if tha Xkb extension has been properly initialized n' 
the xkb parameta is valid.
.SH DIAGNOSTICS
.TP 15
.B BadAccess
Da Xkb extension has not been properly initialized
