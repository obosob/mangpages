'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbSetDeviceInfo 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbSetDeviceInfo \- Modify some or all of tha characteristics of a X Input 
Extension device
.SH SYNOPSIS
.HP
.B Bool XkbSetDeviceInfo
.BI "(\^Display *" "dpy" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "XkbDeviceInfoPtr " "device_info" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- dpy
connection ta X server
.TP
.I \- which
mask indicatin characteristics ta modify
.TP
.I \- device_info
structure definin tha thang n' modifications
.SH DESCRIPTION
.LP
To chizzle characteristics of a X Input Extension thang up in tha server, first 
modify a local copy of tha thang structure n' then use either
.I XkbSetDeviceInfo, 
or, ta save network traffic, use a XkbDeviceChangesRec structure n' call
.I XkbChangeDeviceInfo 
to downlizzle tha chizzlez ta tha server.

.I XkbSetDeviceInfo 
sendz a request ta tha server ta modify tha characteristics of tha thang 
specified up in the
.I device_info 
structure. Da particular characteristics modified is identified by tha bits 
set up in 
.I which 
and take they joints from tha relevant fieldz up in 
device_info (see Table 1). XkbSetDeviceInfo returns True if tha request was 
successfully busted ta tha server n' shit. If tha X server implementation do not allow 
interaction between tha X input extension n' tha Xkb Extension, tha function 
does not a god damn thang n' returns False.
.bp
.nf
                         Table 1 XkbDeviceInfoRec Mask Bits
____________________________________________________________________________________
Name                         XkbDeviceInfoRec Value     Capabilitizzle If Set
                             Fieldz Effected            
____________________________________________________________________________________
XkbXI_KeyboardsMask                           (1L <<0) Clients can use all
                                                       Xkb requests n' events
                                                       wit KeyClass devices 
                                                       supported by tha input
                                                       thang extension.

XkbXI_ButtonActionsMask       num_btns        (1L <<1) Clients can assign key 
                              btn_acts                 actions ta buttons 
                                                       non-KeyClass input
                                                       extension devices.
                           
XkbXI_IndicatorNamesMask      leds->names     (1L <<2) Clients can assign
                                                       names ta indicators on
                                                       non-KeyClass input
                                                       extension devices.
                                                             
XkbXI_IndicatorMapsMask       leds->maps      (1L <<3) Clients can assign
                                                       indicator maps to
                                                       indicators on 
                                                       non-KeyClass input
                                                       extension devices.

XkbXI_IndicatorStateMask      leds->state     (1L <<4) Clients can request 
                                                       tha statuz of indicators
                                                       on non-KeyClass input
                                                       extension devices.

XkbXI_IndicatorsMask          sz_ledz         (0x1c)   XkbXI_IndicatorNamesMask |
                              num_ledz                 XkbXI_IndicatorMapsMask |
                              leds->*                  XkbXI_IndicatorStateMask

XkbXI_UnsupportedFeaturesMask unsupported     (1L <<15)

XkbXI_AllDeviceFeaturesMask   Those selected  (0x1e)   XkbXI_IndicatorsMask |
                              by Value Column          XkbSI_ButtonActionsMask
                              masks 

XkbXI_AllFeaturesMask         Those selected  (0x1f)   XkbSI_AllDeviceFeaturesMask |
                              by Value Column          XkbSI_KeyboardsMask
                              masks

XkbXI_AllDetailsMask          Those selected  (0x801f) XkbXI_AllFeaturesMask |
                              by Value column          XkbXI_UnsupportedFeaturesMask
                              masks
.fi

Da 
.I which 
parameta specifies which aspectz of tha thang should be chizzled n' be a 
bitmask composed of a inclusive OR or one or mo' of tha followin bits: 
XkbXI_ButtonActionsMask, XkbXI_IndicatorNamesMask, XkbXI_IndicatorMapsMask. If 
the features axed ta be manipulated up in 
.I which 
are valid fo' tha device yo, but tha server do not support assignment of one or 
more of them, dat particular portion of tha request is ignored.
 
If tha thang specified up in 
.I device_info->device_spec 
does not contain buttons n' a request affectin buttons is made, or tha thang 
does not contain indicators n' a request affectin indicators is made, a 
BadMatch protocol error thangs up in dis biatch.

If tha XkbXI_ButtonActionsMask bit is set up in tha 
.I supported 
mask returned by 
.I XkbGetDeviceInfo, 
the Xkb extension allows applications ta assign key actions ta buttons on input 
extension devices other than tha core keyboard device. If tha 
XkbXI_ButtonActionsMask is set up in 
.I which, 
the actions fo' all buttons specified up in 
.I device_info 
are set ta tha XkbActions specified up in 
.I device_info->btn_acts, n' you can put dat on yo' toast. 
If tha number of buttons axed ta be updated aint valid fo' tha device,
.I XkbSetDeviceInfo 
returns False n' a BadValue protocol error thangs up in dis biatch.

If tha XkbXI_IndicatorMaps n' / or XkbXI_IndicatorNamesMask bit is set up in tha 
.I supported 
mask returned by 
.I XkbGetDeviceInfo, 
the Xkb extension allows applications ta assign maps n' / or names ta tha 
indicatorz of nonkeyboard extension devices. If supported, maps n' / or names 
can be assigned ta all extension thang indicators, whether they is part of a 
keyboard feedback or part of a indicator feedback.
 
If tha XkbXI_IndicatorMapsMask n' / or XkbXI_IndicatorNamesMask flag is set up in 
.I which, 
the indicator maps n' / or names fo' all 
.I device_info->num_ledz 
indicator devices specified up in 
.I device_info->ledz 
are set ta tha maps n' / or names specified up in 
.I device_info->leds. device_info->leds->led_class 
and 
.I led_id 
specify tha input extension class n' thang ID fo' each indicator thang ta 
modify; if they have invalid joints, a BadValue protocol error thangs up in dis biatch n' 
.I XkbSetDeviceInfo 
returns False. If they have legal joints but do not specify a keyboard or 
indicator class feedback fo' tha thang up in question, a BadMatch error thangs up in dis biatch. 
If any of tha joints in
.I device_info->leds->names 
are not a valid Atom or None, a BadAtom protocol error thangs up in dis biatch.
.SH "RETURN VALUES"
.TP 15
True
Da 
.I XkbSetDeviceInfo 
function returns True if tha request was successfully busted ta tha server.
.TP 15
False
Da 
.I XkbSetDeviceInfo 
function returns False if tha X server implementation do not allow interaction 
between tha X input extension n' tha Xkb Extension.
.SH STRUCTURES
.LP
Changes ta a Xkb extension thang may be tracked by listenin ta 
XkbDeviceExtensionNotify events n' accumulatin tha chizzlez up in a 
XkbDeviceChangesRec structure. Da chizzlez noted up in tha structure may then be 
used up in subsequent operations ta update either a server configuration or a local 
copy of a Xkb extension thang configuration. I aint talkin' bout chicken n' gravy biatch. Da chizzlez structure is defined 
as bigs up:
.nf

typedef struct _XkbDeviceChanges {
    unsigned int    chizzled;    /\(** bits indicatin what tha fuck has chizzled */
    unsigned short  first_btn;  /\(** number of first button which chizzled, if any */
    unsigned short  num_btns;   /\(** number of buttons dat have chizzled */
    XkbDeviceLedChangesRec leds;
} XkbDeviceChangesRec,*XkbDeviceChangesPtr;

.fi
.SH DIAGNOSTICS
.TP 15
.B BadAtom
A name is neither a valid Atom or None
.TP 15
.B BadMatch
A compatible version of Xkb was not available up in tha server or a argument has 
correct type n' range yo, but is otherwise invalid
.TP 15
.B BadValue
An argument is outta range
.SH "SEE ALSO"
.BR XkbChangeDeviceInfo (3),
.BR XkbGetDeviceInfo (3)
