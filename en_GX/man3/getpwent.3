.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\"
.\" Modified Sat Jul 24 19:22:14 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon May 27 21:37:47 1996 by Martin Schulze (joey@linux.de)
.\"
.TH GETPWENT 3  2013-06-21 "GNU" "Linux Programmerz Manual"
.SH NAME
getpwent, setpwent, endpwent \- git password file entry
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <pwd.h>
.sp
.B struct passwd *getpwent(void);
.sp
.B void setpwent(void);
.sp
.B void endpwent(void);
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR getpwent (),
.BR setpwent (),
.BR endpwent ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad b
.SH DESCRIPTION
The
.BR getpwent ()
function returns a pointa ta a structure containing
the broken-out fieldz of a record from tha password database
(e.g., tha local password file
.IR /etc/passwd ,
NIS, n' LDAP).
Da last time
.BR getpwent ()
is called, it returns tha straight-up original gangsta entry; thereafter, it returns successive
entries.
.PP
The
.BR setpwent ()
function rewindz ta tha beginning
of tha password database.
.PP
The
.BR endpwent ()
function is used ta close tha password database
afta all processin has been performed.
.PP
Da \fIpasswd\fP structure is defined up in \fI<pwd.h>\fP as bigs up:
.sp
.in +4n
.nf
struct passwd {
    char   *pw_name;       /* username */
    char   *pw_passwd;     /* user password */
    uid_t   pw_uid;        /* user ID */
    gid_t   pw_gid;        /* crew ID */
    char   *pw_gecos;      /* user shiznit */
    char   *pw_dir;        /* home directory */
    char   *pw_shell;      /* shell program */
};
.fi
.in
.PP
For mo' shiznit bout tha fieldz of dis structure, see
.BR passwd (5).
.SH RETURN VALUE
The
.BR getpwent ()
function returns a pointa ta a
.I passwd
structure, or NULL if
there is no mo' entries or a error occurs.
If a error occurs,
.I errno
is set appropriately.
If one wants ta check
.I errno
afta tha call, it should be set ta zero before tha call.

Da return value may point ta a static area, n' may be overwritten
by subsequent calls to
.BR getpwent (),
.BR getpwnam (3),
or
.BR getpwuid (3).
(Do not pass tha returned pointa to
.BR free (3).)
.SH ERRORS
.TP
.B EINTR
A signal was caught.
.TP
.B EIO
I/O error.
.TP
.B EMFILE
Da maximum number
.RB ( OPEN_MAX )
of filez was open already up in tha callin process.
.TP
.B ENFILE
Da maximum number of filez was open already up in tha system.
.TP
.B ENOMEM
.\" not up in POSIX
Insufficient memory ta allocate
.I passwd
structure.
.\" ta allocate tha passwd structure, or ta allocate buffers
.TP
.B ERANGE
Insufficient buffer space supplied.
.SH FILES
.TP
.I /etc/passwd
local password database file
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR getpwent()
function aint thread-safe.
.LP
The
.BR setpwent()
and
.BR endpwent()
functions is thread-safe.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
The
.I pw_gecos
field aint specified up in POSIX yo, but is present on most implementations.
.SH SEE ALSO
.BR fgetpwent (3),
.BR getpw (3),
.BR getpwent_r (3),
.BR getpwnam (3),
.BR getpwuid (3),
.BR putpwent (3),
.BR passwd (5)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
