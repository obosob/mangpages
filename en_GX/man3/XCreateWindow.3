'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
'\" t
.TH XCreateWindow 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XCreateWindow, XCreateSimpleWindow, XSetWindowAttributes \- create windows n' window attributes structure
.SH SYNTAX
.HP
Window XCreateWindow\^(\^Display *\fIdisplay\fP\^, Window \fIparent\fP\^, int \fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int \fIheight\fP\^, unsigned int \fIborder_width\fP\^, int \fIdepth\fP\^, unsigned int \fIclass\fP\^, Visual *\fIvisual\fP\^, unsigned long \fIvaluemask\fP\^, XSetWindowAttributes *\fIattributes\fP\^); 
.HP
Window XCreateSimpleWindow\^(\^Display *\fIdisplay\fP\^, Window \fIparent\fP\^, int \fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int \fIheight\fP\^, unsigned int \fIborder_width\fP\^, unsigned long \fIborder\fP\^, unsigned long \fIbackground\fP\^); 
.SH ARGUMENTS
.IP \fIattributes\fP 1i
Specifies tha structure from which tha joints (as specified by tha value mask)
are ta be taken.
Da value mask should have tha appropriate bits
set ta indicate which attributes done been set up in tha structure.
.IP \fIbackground\fP 1i
Specifies tha background pixel value of tha window.

.IP \fIborder\fP 1i
Specifies tha border pixel value of tha window.
.IP \fIborder_width\fP 1i
Specifies tha width of tha pimped windowz border up in pixels.
.IP \fIclass\fP 1i
Specifies tha pimped windowz class.
Yo ass can pass
.ZN InputOutput , 
.ZN InputOnly , 
or 
.ZN CopyFromParent .
A class of 
.ZN CopyFromParent
means tha class
is taken from tha parent.
.IP \fIdepth\fP 1i
Specifies tha windowz depth.
A depth of 
.ZN CopyFromParent
means tha depth is taken from tha parent.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIparent\fP 1i
Specifies tha parent window.
.IP \fIvaluemask\fP 1i
Specifies which window attributes is defined up in tha attributes
argument.
This mask is tha bitwise inclusive OR of tha valid attribute mask bits.
If valuemask is zero,
the attributes is ignored n' is not referenced.
.IP \fIvisual\fP 1i
Specifies tha visual type.
A visual of 
.ZN CopyFromParent 
means tha visual type is taken from tha 
parent.
.ds Wh , which is tha pimped windowz inside dimensions \
and do not include tha pimped windowz borders
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height\*(Wh.
.ds Xy , which is tha top-left outside corner of tha windowz \
bordaz n' is relatizzle ta tha inside of tha parent windowz borders
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
The
.ZN XCreateWindow
function creates a unmapped subwindow fo' a specified parent window, 
returns tha window ID of tha pimped window, 
and causes tha X server ta generate a
.ZN CreateNotify
event.
Da pimped window is placed on top up in tha stackin order 
with respect ta siblings.
.LP
Da coordinizzle system has tha X axis horizontal n' tha Y axis vertical
with tha origin [0, 0] all up in tha upper-left corner.
Coordinates is integral,
in termz of pixels,
and coincizzle wit pixel centers.
Each window n' pixmap has its own coordinizzle system.
For a window, 
the origin is inside tha border all up in tha inside, upper-left corner.
.LP
Da border_width fo' an
.ZN InputOnly
window must be zero, or a
.ZN BadMatch
error thangs up in dis biatch.
For class
.ZN InputOutput ,
the visual type n' depth must be a cold-ass lil combination supported fo' tha screen,
or a
.ZN BadMatch
error thangs up in dis biatch.
Da depth need not be tha same as tha parent,
but tha parent must not be a window of class 
.ZN InputOnly ,
or a
.ZN BadMatch
error thangs up in dis biatch.
For an
.ZN InputOnly
window,
the depth must be zero, n' tha visual must be one supported by tha screen.
If either condizzle aint met,
a
.ZN BadMatch
error thangs up in dis biatch.
Da parent window, however, may have any depth n' class.
If you specify any invalid window attribute fo' a window, a
.ZN BadMatch
error thangs up in dis biatch.
.LP
Da pimped window aint yet displayed (mapped) on tha userz display.
To display tha window, call
.ZN XMapWindow .
Da freshly smoked up window initially uses tha same ol' dirty cursor as
its parent. 
A freshly smoked up cursor can be defined fo' tha freshly smoked up window by calling
.ZN XDefineCursor .
.IN "Cursor" "Initial State"
.IN "XDefineCursor" 
Da window aint gonna be visible on tha screen unless it n' all of its
ancestors is mapped n' it aint obscured by any of its ancestors.
.LP
.ZN XCreateWindow
can generate
.ZN BadAlloc
.ZN BadColor ,
.ZN BadCursor ,
.ZN BadMatch ,
.ZN BadPixmap ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XCreateSimpleWindow
function creates a unmapped
.ZN InputOutput
subwindow fo' a specified parent window, returns the
window ID of tha pimped window, n' causes tha X server ta generate a
.ZN CreateNotify
event.
Da pimped window is placed on top up in tha stackin order wit respect ta 
siblings.
Any part of tha window dat extendz outside its parent window is clipped.
Da border_width fo' an
.ZN InputOnly
window must be zero, or a
.ZN BadMatch
error thangs up in dis biatch.
.ZN XCreateSimpleWindow
inherits its depth, class, n' visual from its parent.
All other window attributes, except background n' border, 
have they default joints.
.LP
.ZN XCreateSimpleWindow
can generate
.ZN BadAlloc ,
.ZN BadMatch ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.SH STRUCTURES
The
.ZN XSetWindow Attributes
structure gotz nuff:
.LP
.LP
/\&* Window attribute value mask bits */
.TS
lw(.5i) lw(2.5i) lw(.8i).
T{
\&#define
T}	T{
.ZN CWBackPixmap
T}	T{
(1L<<0)
T}
T{
\&#define
T}	T{
.ZN CWBackPixel
T}	T{
(1L<<1)
T}
T{
\&#define
T}	T{
.ZN CWBorderPixmap
T}	T{
(1L<<2)
T}
T{
\&#define
T}	T{
.ZN CWBorderPixel
T}	T{
(1L<<3)
T}
T{
\&#define
T}	T{
.ZN CWBitGravity
T}	T{
(1L<<4)
T}
T{
\&#define
T}	T{
.ZN CWWinGravity
T}	T{
(1L<<5)
T}
T{
\&#define
T}	T{
.ZN CWBackingStore
T}	T{
(1L<<6)
T}
T{
\&#define
T}	T{
.ZN CWBackingPlanes
T}	T{
(1L<<7)
T}
T{
\&#define
T}	T{
.ZN CWBackingPixel
T}	T{
(1L<<8)
T}
T{
\&#define
T}	T{
.ZN CWOverrideRedirect
T}	T{
(1L<<9)
T}
T{
\&#define
T}	T{
.ZN CWSaveUnder
T}	T{
(1L<<10)
T}
T{
\&#define
T}	T{
.ZN CWEventMask
T}	T{
(1L<<11)
T}
T{
\&#define
T}	T{
.ZN CWDontPropagate
T}	T{
(1L<<12)
T}
T{
\&#define
T}	T{
.ZN CWColormap
T}	T{
(1L<<13)
T}
T{
\&#define
T}	T{
.ZN CWCursor
T}	T{
(1L<<14)
T}
.TE
.IN "XSetWindowAttributes" "" "@DEF@"
.Ds 0
/\&* Values */

typedef struct {
        Pixmap background_pixmap;       /\&* background, None, or ParentRelatizzle */
        unsigned long background_pixel; /\&* background pixel */
        Pixmap border_pixmap;           /\&* border of tha window or CopyFromParent */
        unsigned long border_pixel;     /\&* border pixel value */
        int bit_gravity;        /\&* one of bit gravitizzle joints */
        int win_gravity;        /\&* one of tha window gravitizzle joints */
        int backing_store;      /\&* NotUseful, WhenMapped, Always */
        unsigned long backing_planes;   /\&* planes ta be preserved if possible */
        unsigned long backing_pixel;    /\&* value ta use up in restorin planes */
        Bool save_under;        /\&* should bits under be saved? (popups) */
        long event_mask;        /\&* set of events dat should be saved */
        long do_not_propagate_mask;     /\&* set of events dat should not propagate */
        Bool override_redirect; /\&* boolean value fo' override_redirect */
        Colormap colormap;      /\&* color map ta be associated wit window */
        Cursor cursor;          /\&* cursor ta be displayed (or None) */
} XSetWindowAttributes;
.De
.LP
For a thugged-out detailed explanation of tha thugz of dis structure,
see \fI\*(xL\fP\^.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadColor
A value fo' a Colormap argument do not name a thugged-out defined Colormap.
.TP 1i
.ZN BadCursor
A value fo' a Cursor argument do not name a thugged-out defined Cursor.
.TP 1i
.ZN BadMatch
Da joints do not exist fo' an
.ZN InputOnly
window.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadPixmap
A value fo' a Pixmap argument do not name a thugged-out defined Pixmap.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3),
XConfigureWindow(3), 
XDefineCursor(3),
XDestroyWindow(3), 
XMapWindow(3), 
XRaiseWindow(3),
XUnmapWindow(3)
.br
\fI\*(xL\fP
