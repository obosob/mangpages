.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XRaiseWindow 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XRaiseWindow, XLowerWindow, XCirculateSubwindows, XCirculateSubwindowsUp, XCirculateSubwindowsDown, XRestackWindows \- chizzle window stackin order
.SH SYNTAX
.HP
int XRaiseWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^); 
.HP
int XLowerWindow\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^); 
.HP
int XCirculateSubwindows\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, int
\fIdirection\fP\^); 
.HP
int XCirculateSubwindowsUp\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^); 
.HP
int XCirculateSubwindowsDown\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^); 
.HP
int XRestackWindows\^(\^Display *\fIdisplay\fP\^, Window \fIwindows\fP\^[], int
\fInwindows\fP\^); 
.SH ARGUMENTS
.IP \fIdirection\fP 1i
Specifies tha direction (up or down) dat you wanna circulate
the window. 
Yo ass can pass 
.ZN RaiseLowest
or
.ZN LowerHighest .
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fInwindows\fP 1i
Specifies tha number of windows ta be restacked.
.IP \fIw\fP 1i
Specifies tha window.
.IP \fIwindows\fP 1i
Specifies a array containin tha windows ta be restacked.
.SH DESCRIPTION
The
.ZN XRaiseWindow
function
raises tha specified window ta tha top of tha stack so dat no siblin window
obscures dat shit.
If tha windows is regarded as overlappin sheetz of paper stacked 
on a thugged-out desk,
then raisin a window be analogous ta movin tha shizzle ta tha top of
the stack but leavin its x n' y location on tha desk constant.
Raisin a mapped window may generate 
.ZN Expose
events fo' tha window n' any mapped subwindows dat was formerly obscured. Y'all KNOW dat shit, muthafucka!  
.LP
If tha override-redirect attribute of tha window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates a
.ZN ConfigureRequest 
event, n' no processin is performed.
Otherwise, tha window is raised.
.LP
.ZN XRaiseWindow
can generate a
.ZN BadWindow 
error.
.LP
The
.ZN XLowerWindow
function lowers tha specified window ta tha bottom of tha stack
so dat it do not obscure any sibling
windows.
If tha windows is regarded as overlappin sheetz of paper
stacked on a thugged-out desk, then lowerin a window be analogous ta movin the
shizzle ta tha bottom of tha stack but leavin its x n' y location on
the desk constant.
Lowerin a mapped window will generate 
.ZN Expose 
events on any windows it formerly obscured.
.LP
If tha override-redirect attribute of tha window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates a
.ZN ConfigureRequest 
event, n' no processin is performed. Y'all KNOW dat shit, muthafucka!  
Otherwise, tha window is lowered ta tha bottom of the
stack.
.LP
.ZN XLowerWindow
can generate a
.ZN BadWindow 
error.
.LP
The
.ZN XCirculateSubwindows
function circulates lil pimpz of tha specified window up in tha specified 
direction.
If you specify
.ZN RaiseLowest ,
.ZN XCirculateSubwindows
raises tha lowest mapped lil pimp (if any) dat is occluded 
by another lil pimp ta tha top of tha stack.
If you specify
.ZN LowerHighest ,
.ZN XCirculateSubwindows
lowers tha highest mapped lil pimp (if any) dat occludes another child
to tha bottom of tha stack.
Exposure processin is then performed on formerly obscured windows.
If some other client has selected 
.ZN SubstructureRedirectMask 
on tha window, tha X server generates a 
.ZN CirculateRequest 
event, n' no further processin is performed.
If a cold-ass lil lil pimp is straight-up restacked,
the X server generates a
.ZN CirculateNotify
event. 
.LP
.ZN XCirculateSubwindows
can generate
.ZN BadValue
and
.ZN BadWindow 
errors.
.LP
The
.ZN XCirculateSubwindowsUp
function raises tha lowest mapped lil pimp of tha specified window that
is partially
or straight-up
occluded by another child.
All Out unobscured lil pimps is not affected.
This be a cold-ass lil convenience function equivalent to
.ZN XCirculateSubwindows
with
.ZN RaiseLowest
specified.
.LP
.ZN XCirculateSubwindowsUp
can generate a
.ZN BadWindow 
error.
.LP
The
.ZN XCirculateSubwindowsDown
function lowers tha highest mapped lil pimp of tha specified window dat partially
or straight-up occludes another child.
All Out unobscured lil pimps is not affected.
This be a cold-ass lil convenience function equivalent to
.ZN XCirculateSubwindows
with
.ZN LowerHighest
specified.
.LP
.ZN XCirculateSubwindowsDown
can generate a
.ZN BadWindow 
error.
.LP
The
.ZN XRestackWindows
function restacks tha windows up in tha order specified,
from top ta bottom.
Da stackin order of tha straight-up original gangsta window up in tha windows array is unaffected,
but tha other windows up in tha array is stacked underneath tha straight-up original gangsta window,
in tha order of tha array.
Da stackin order of tha other windows aint affected.
For each window up in tha window array dat aint a siblin of tha straight-up original gangsta window,
a
.ZN BadMatch
error thangs up in dis biatch.
.LP
If tha override-redirect attribute of a window is 
.ZN False 
and some
other client has selected 
.ZN SubstructureRedirectMask 
on tha parent, tha X server generates 
.ZN ConfigureRequest 
events fo' each window whose override-redirect flag aint set, 
and no further processin is performed.
Otherwise, tha windows is ghon be restacked up in top-to-bottom order.
.LP
.ZN XRestackWindows
can generate
.ZN BadWindow 
error.
.SH DIAGNOSTICS
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3),
XConfigureWindow(3),
XCreateWindow(3),
XDestroyWindow(3),
XMapWindow(3),
XUnmapWindow(3)
.br
\fI\*(xL\fP
