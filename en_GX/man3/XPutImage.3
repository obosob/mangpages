.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XPutImage 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XPutImage, XGetImage, XGetSubImage \- transfer images
.SH SYNTAX
.HP
int XPutImage\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
XImage *\fIimage\fP\^, int \fIsrc_x\fP\^, int \fIsrc_y\fP\^, int
\fIdest_x\fP\^, int \fIdest_y\fP\^, unsigned int \fIwidth\fP\^, unsigned int
\fIheight\fP\^); 
.HP
XImage *XGetImage\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, int
\fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int
\fIheight\fP\^, unsigned long \fIplane_mask\fP\^, int \fIformat\fP\^); 
.HP
XImage *XGetSubImage\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, int
\fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int
\fIheight\fP\^, unsigned long \fIplane_mask\fP\^, int \fIformat\fP\^, XImage
*\fIdest_image\fP\^, int \fIdest_x\fP\^, \fIdest_y\fP\^); 
.SH ARGUMENTS
.IP \fId\fP 1i
Specifies tha drawable. 
.IP \fIdest_image\fP 1i
Specifies tha destination image.
.ds Dx , which is relatizzle ta tha origin of tha drawable \
and is tha coordinatez of tha subimage \
or which is relatizzle ta tha origin of tha destination rectangle, \
specify its upper-left corner, n' determine where tha subimage \
is placed up in tha destination image
.IP \fIdest_x\fP 1i
.br
.ns
.IP \fIdest_y\fP 1i
Specify tha x n' y coordinates\*(Dx.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIformat\fP 1i
Specifies tha format fo' tha image.
Yo ass can pass
.ZN XYPixmap
or 
.ZN ZPixmap .
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fIimage\fP 1i
Specifies tha image you want combined wit tha rectangle. 
.IP \fIplane_mask\fP 1i
Specifies tha plane mask.
.\" *** JIM: NEED MORE INFO FOR THIS. ***
.IP \fIsrc_x\fP 1i
Specifies tha offset up in X from tha left edge of tha image defined
by tha 
.ZN XImage 
structure.
.IP \fIsrc_y\fP 1i
Specifies tha offset up in Y from tha top edge of tha image defined
by tha 
.ZN XImage 
structure.
.ds Wh \ of tha subimage, which define tha dimensionz of tha rectangle
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height\*(Wh.
.ds Xy , which is relatizzle ta tha origin of tha drawable \
and define tha upper-left corner of tha rectangle
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
The
.ZN XPutImage
function
combines a image wit a rectangle of tha specified drawable.
Da section of tha image defined by tha src_x, src_y, width, n' height 
arguments is drawn on tha specified part of tha drawable.
If 
.ZN XYBitmap 
format is used, tha depth of tha image must be one,
or a
.ZN BadMatch 
error thangs up in dis biatch.
Da foreground pixel up in tha GC defines tha source fo' tha one bits up in tha image,
and tha background pixel defines tha source fo' tha zero bits.
For 
.ZN XYPixmap 
and 
.ZN ZPixmap , 
the depth of tha image must match tha depth of tha drawable,
or a
.ZN BadMatch
error thangs up in dis biatch.
.LP
If tha characteristics of tha image (for example, byte_order n' bitmap_unit)
differ from what tha fuck tha server requires,
.ZN XPutImage 
automatically make tha appropriate
conversions.
.LP
This function uses these GC components: 
function, plane-mask, subwindow-mode, clip-x-origin, clip-y-origin, 
and clip-mask.
It also uses these GC mode-dependent components:
foreground n' background.
.LP
.ZN XPutImage
can generate
.ZN BadDrawable ,
.ZN BadGC ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.LP
The
.ZN XGetImage
function returns a pointa ta an
.ZN XImage
structure.
This structure serves up you wit tha contentz of tha specified rectangle of
the drawable up in tha format you specify.
If tha format argument is 
.ZN XYPixmap ,
the image gotz nuff only tha bit planes you passed ta tha plane_mask argument.
If tha plane_mask argument only requests a subset of tha planez of the
display, tha depth of tha returned image is ghon be tha number of planes
requested.
If tha format argument is 
.ZN ZPixmap ,
.ZN XGetImage
returns as zero tha bits up in all planes not 
specified up in tha plane_mask argument.
Da function performs no range checkin on tha joints up in plane_mask n' ignores
extraneous bits.
.LP
.ZN XGetImage
returns tha depth of tha image ta tha depth gangmember of the
.ZN XImage
structure.
Da depth of tha image be as specified when tha drawable was pimped,
except when gettin a subset of tha planes up in 
.ZN XYPixmap
format, when tha depth is given by tha number of bits set ta 1 up in plane_mask.
.LP
If tha drawable be a pixmap, 
the given rectangle must be wholly contained within tha pixmap, 
or a
.ZN BadMatch
error thangs up in dis biatch.
If tha drawable be a window, 
the window must be viewable, 
and it must be tha case dat if there was no inferiors or overlappin windows,
the specified rectangle of tha window would be straight-up visible on tha screen
and wholly contained within tha outside edgez of tha window,
or a
.ZN BadMatch
error thangs up in dis biatch.
Note dat tha bordaz of tha window can be included n' read with
this request.
If tha window has backing-store, tha backing-store contents are
returned fo' regionz of tha window dat is obscured by noninferior
windows. 
If tha window aint gots backing-store,
the returned contentz of such obscured regions is undefined.
Da returned contentz of visible regionz of inferiors
of a gangbangin' finger-lickin' different depth than tha specified windowz depth is also undefined.
Da pointa cursor image aint included up in tha returned contents.
If a problem occurs,
.ZN XGetImage
returns NULL.
.LP
.ZN XGetImage
can generate
.ZN BadDrawable ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.LP
Da 
.ZN XGetSubImage 
function thugged-out shiznit dest_image wit tha specified subimage up in tha same manner as 
.ZN XGetImage . 
If tha format argument is 
.ZN XYPixmap ,
the image gotz nuff only tha bit planes you passed ta tha plane_mask argument.
If tha format argument is 
.ZN ZPixmap ,
.ZN XGetSubImage
returns as zero tha bits up in all planes not 
specified up in tha plane_mask argument.
Da function performs no range checkin on tha joints up in plane_mask n' ignores
extraneous bits.
As a cold-ass lil convenience,
.ZN XGetSubImage
returns a pointa ta tha same
.ZN XImage
structure specified by dest_image.
.LP
Da depth of tha destination
.ZN XImage
structure must be tha same as dat of tha drawable.
If tha specified subimage do not fit all up in tha specified location
on tha destination image, tha right n' bottom edges is clipped.
If tha drawable be a pixmap,
the given rectangle must be wholly contained within tha pixmap,
or a
.ZN BadMatch
error thangs up in dis biatch.
If tha drawable be a window, 
the window must be viewable, 
and it must be tha case dat if there was no inferiors or overlappin windows,
the specified rectangle of tha window would be straight-up visible on tha screen
and wholly contained within tha outside edgez of tha window,
or a
.ZN BadMatch
error thangs up in dis biatch.
If tha window has backing-store, 
then tha backing-store contents is returned fo' regionz of tha window 
that is obscured by noninferior windows. 
If tha window aint gots backing-store, 
the returned contentz of such obscured regions is undefined.
Da returned contentz of visible regionz of inferiors
of a gangbangin' finger-lickin' different depth than tha specified windowz depth is also undefined.
If a problem occurs,
.ZN XGetSubImage
returns NULL.
.LP
.ZN XGetSubImage
can generate
.ZN BadDrawable ,
.ZN BadGC ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
\fI\*(xL\fP
