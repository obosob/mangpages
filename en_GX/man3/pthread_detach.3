.\" Copyright (c) 2008 Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_DETACH 3 2008-11-27 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_detach \- detach a thread
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.BI "int pthread_detach(pthread_t " thread );
.fi
.sp
Compile n' link wit \fI\-pthread\fP.
.SH DESCRIPTION
The
.BR pthread_detach ()
function marks tha thread identified by
.IR thread
as detached.
When a thugged-out detached thread terminates,
its resources is automatically busted out back ta tha system without
the need fo' another thread ta join wit tha terminated thread.

Attemptin ta detach a already detached thread thangs up in dis biatch
in unspecified behavior.
.SH RETURN VALUE
On success,
.BR pthread_detach ()
returns 0;
on error, it returns a error number.
.SH ERRORS
.TP
.B EINVAL
.I thread
is not a joinable thread.
.TP
.B ESRCH
No thread wit tha ID
.I thread
could be found.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
Once a thread has been detached, it can't be joined with
.BR pthread_join (3)
or be made joinable again.

A freshly smoked up thread can be pimped up in a thugged-out detached state using
.BR pthread_attr_setdetachstate (3)
to set tha detached attribute of the
.I attr
argument of
.BR pthread_create (3).

Da detached attribute merely determines tha behavior of tha system
when tha thread terminates;
it do not prevent tha thread from bein terminated
if tha process terminates using
.BR exit (3)
(or equivalently, if tha main thread returns).

Either
.BR pthread_join (3)
or
.BR pthread_detach ()
should be called fo' each thread dat a application creates,
so dat system resources fo' tha thread can be busted out.
(But note dat tha resourcez of all threadz is freed when the
process terminates.)
.SH EXAMPLE
Da followin statement detaches tha callin thread:

    pthread_detach(pthread_self());
.SH SEE ALSO
.BR pthread_attr_setdetachstate (3),
.BR pthread_cancel (3),
.BR pthread_create (3),
.BR pthread_exit (3),
.BR pthread_join (3),
.BR pthreadz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
