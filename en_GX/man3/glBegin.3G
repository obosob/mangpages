'\" t
.\"     Title: glBegin
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBEGIN" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBegin \- delimit tha verticez of a primitizzle or a crew of like primitives
.SH "C SPECIFICATION"
.HP \w'void\ glBegin('u
.BI "void glBegin(GLenum\ " "mode" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies tha primitizzle or primitives dat is ghon be pimped from vertices presented between
\fBglBegin\fR
and tha subsequent
\fBglEnd\fR()\&. Ten symbolic constants is accepted:
\fBGL_POINTS\fR,
\fBGL_LINES\fR,
\fBGL_LINE_STRIP\fR,
\fBGL_LINE_LOOP\fR,
\fBGL_TRIANGLES\fR,
\fBGL_TRIANGLE_STRIP\fR,
\fBGL_TRIANGLE_FAN\fR,
\fBGL_QUADS\fR,
\fBGL_QUAD_STRIP\fR, and
\fBGL_POLYGON\fR\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glEnd('u
.BI "void glEnd(" "void" ");"
.SH "DESCRIPTION"
.PP
\fBglBegin\fR
and
\fBglEnd\fR()
delimit tha vertices dat define a primitizzle or a crew of like primitives\&.
\fBglBegin\fR
accepts a single argument dat specifies up in which of ten ways tha vertices is interpreted\&. Taking
n
as a integer count startin at one, and
N
as tha total number of vertices specified, tha interpretations is as bigs up:
.PP
\fBGL_POINTS\fR
.RS 4
Treats each vertex as a single point\&. Vertex
n
defines point
n\&.
N
points is drawn\&.
.RE
.PP
\fBGL_LINES\fR
.RS 4
Treats each pair of vertices as a independent line segment\&. Vertices
2 ⁢ n \- 1
and
2 ⁢ n
define line
n\&.
N 2
lines is drawn\&.
.RE
.PP
\fBGL_LINE_STRIP\fR
.RS 4
Draws a cold-ass lil connected crew of line segments from tha straight-up original gangsta vertex ta tha last\&. Vertices
n
and
n + 1
define line
n\&.
N \- 1
lines is drawn\&.
.RE
.PP
\fBGL_LINE_LOOP\fR
.RS 4
Draws a cold-ass lil connected crew of line segments from tha straight-up original gangsta vertex ta tha last, then back ta tha first\&. Vertices
n
and
n + 1
define line
n\&. Da last line, however, is defined by vertices
N
and
1\&.
N
lines is drawn\&.
.RE
.PP
\fBGL_TRIANGLES\fR
.RS 4
Treats each triplet of vertices as a independent triangle\&. Vertices
3 ⁢ n \- 2,
3 ⁢ n \- 1, and
3 ⁢ n
define triangle
n\&.
N 3
trianglez is drawn\&.
.RE
.PP
\fBGL_TRIANGLE_STRIP\fR
.RS 4
Draws a cold-ass lil connected crew of triangles\&. One triangle is defined fo' each vertex presented afta tha straight-up original gangsta two vertices\&. For odd
n, vertices
n,
n + 1, and
n + 2
define triangle
n\&. For even
n, vertices
n + 1,
n, and
n + 2
define triangle
n\&.
N \- 2
trianglez is drawn\&.
.RE
.PP
\fBGL_TRIANGLE_FAN\fR
.RS 4
Draws a cold-ass lil connected crew of triangles\&. One triangle is defined fo' each vertex presented afta tha straight-up original gangsta two vertices\&. Vertices
1,
n + 1, and
n + 2
define triangle
n\&.
N \- 2
trianglez is drawn\&.
.RE
.PP
\fBGL_QUADS\fR
.RS 4
Treats each crew of four vertices as a independent quadrilateral\&. Vertices
4 ⁢ n \- 3,
4 ⁢ n \- 2,
4 ⁢ n \- 1, and
4 ⁢ n
define quadrilateral
n\&.
N 4
quadrilaterals is drawn\&.
.RE
.PP
\fBGL_QUAD_STRIP\fR
.RS 4
Draws a cold-ass lil connected crew of quadrilaterals\&. One quadrilateral is defined fo' each pair of vertices presented afta tha straight-up original gangsta pair\&. Vertices
2 ⁢ n \- 1,
2 ⁢ n,
2 ⁢ n + 2, and
2 ⁢ n + 1
define quadrilateral
n\&.
N 2 \- 1
quadrilaterals is drawn\&. Note dat tha order up in which vertices is used ta construct a quadrilateral from strip data is different from dat used wit independent data\&.
.RE
.PP
\fBGL_POLYGON\fR
.RS 4
Draws a single, convex polygon\&. Vertices
1
through
N
define dis polygon\&.
.RE
.PP
Only a subset of GL commandz can be used between
\fBglBegin\fR
and
\fBglEnd\fR()\&. Da commandz are
\fBglVertex\fR(),
\fBglColor\fR(),
\fBglSecondaryColor\fR(),
\fBglIndex\fR(),
\fBglNormal\fR(),
\fBglFogCoord\fR(),
\fBglTexCoord\fR(),
\fBglMultiTexCoord\fR(),
\fBglVertexAttrib\fR(),
\fBglEvalCoord\fR(),
\fBglEvalPoint\fR(),
\fBglArrayElement\fR(),
\fBglMaterial\fR(), and
\fBglEdgeFlag\fR()\& fo' realz. Also, it be aaight ta use
\fBglCallList\fR()
or
\fBglCallLists\fR()
to execute display lists dat include only tha precedin commands\&. If any other GL command is executed between
\fBglBegin\fR
and
\fBglEnd\fR(), tha error flag is set n' tha command is ignored\&.
.PP
Regardless of tha value chosen for
\fImode\fR, there is no limit ta tha number of vertices dat can be defined between
\fBglBegin\fR
and
\fBglEnd\fR()\&. Lines, triangles, quadrilaterals, n' polygons dat is incompletely specified is not drawn\&. Incomplete justification thangs up in dis biatch when either too few vertices is provided ta specify even a single primitizzle or when a incorrect multiple of vertices is specified\&. Da incomplete primitizzle is ignored; tha rest is drawn\&.
.PP
Da minimum justification of vertices fo' each primitizzle be as bigs up: 1 fo' a point, 2 fo' a line, 3 fo' a triangle, 4 fo' a quadrilateral, n' 3 fo' a polygon\&. Modes dat require a cold-ass lil certain multiple of vertices are
\fBGL_LINES\fR
(2),
\fBGL_TRIANGLES\fR
(3),
\fBGL_QUADS\fR
(4), and
\fBGL_QUAD_STRIP\fR
(2)\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is set ta a unaccepted value\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglBegin\fR
is executed between a
\fBglBegin\fR
and tha correspondin execution of
\fBglEnd\fR()\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglEnd\fR()
is executed without bein preceded by a
\fBglBegin\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a cold-ass lil command other than
\fBglVertex\fR(),
\fBglColor\fR(),
\fBglSecondaryColor\fR(),
\fBglIndex\fR(),
\fBglNormal\fR(),
\fBglFogCoord\fR(),
\fBglTexCoord\fR(),
\fBglMultiTexCoord\fR(),
\fBglVertexAttrib\fR(),
\fBglEvalCoord\fR(),
\fBglEvalPoint\fR(),
\fBglArrayElement\fR(),
\fBglMaterial\fR(),
\fBglEdgeFlag\fR(),
\fBglCallList\fR(), or
\fBglCallLists\fR()
is executed between tha execution of
\fBglBegin\fR
and tha correspondin execution
\fBglEnd\fR()\&.
.PP
Execution of
\fBglEnableClientState\fR(),
\fBglDisableClientState\fR(),
\fBglEdgeFlagPointer\fR(),
\fBglFogCoordPointer\fR(),
\fBglTexCoordPointer\fR(),
\fBglColorPointer\fR(),
\fBglSecondaryColorPointer\fR(),
\fBglIndexPointer\fR(),
\fBglNormalPointer\fR(),
\fBglVertexPointer\fR(),
\fBglVertexAttribPointer\fR(),
\fBglInterleavedArrays\fR(), or
\fBglPixelStore\fR()
is not allowed afta a cold-ass lil call to
\fBglBegin\fR
and before tha correspondin call to
\fBglEnd\fR() yo, but a error may or may not be generated\&.
.SH "SEE ALSO"
.PP
\fBglArrayElement\fR(),
\fBglCallList\fR(),
\fBglCallLists\fR(),
\fBglColor\fR(),
\fBglEdgeFlag\fR(),
\fBglEvalCoord\fR(),
\fBglEvalPoint\fR(),
\fBglFogCoord\fR(),
\fBglIndex\fR(),
\fBglMaterial\fR(),
\fBglMultiTexCoord\fR(),
\fBglNormal\fR(),
\fBglSecondaryColor\fR(),
\fBglTexCoord\fR(),
\fBglVertex\fR(),
\fBglVertexAttrib\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
