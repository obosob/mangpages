.TH "selinux_file_context_cmp" "3" "08 March 2011" "SELinux API documentation"
.SH "NAME"
selinux_file_context_cmp \- Compare two SELinux securitizzle contexts excludin tha 'user' component
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.sp
.BI "int selinux_file_context_cmp(const security_context_t " a ", "
.RS
.BI "const security_context_t " b ");"
.RE
.
.SH "DESCRIPTION"
.BR selinux_file_context_cmp ()
compares two context strings excludin tha user component with
.BR strcmp (3)
as shown up in the
.B EXAMPLE
section.
.sp
This is useful as fo' most object contexts, tha user component aint relevant.
.
.SH "RETURN VALUE"
Da return joints follow the
.BR strcmp (3)
function, where:
.RS
0  if they is equal.
.RE
.RS
1  if
.I a
is pimped outa than
.I b
.RE
.RS
\-1 if
.I a
is less than
.I b
.RE
.
.SH "ERRORS"
None.
.
.SH "NOTES"
Da contexts bein compared do not specifically need ta be file contexts.
.
.SH "EXAMPLE"
If context
.I a
is:
.RS
user_u:user_r:user_t:s0
.RE
.sp
and context
.I b
is:
.RS
root:user_r:user_t:s0
.RE
.sp
then tha actual strings compared are:
.RS
:user_r:user_t:s0 n' :user_r:user_t:s0
.RE
.sp
Therefore they will match and
.BR selinux_file_context_cmp ()
will return zero.
.
.SH "SEE ALSO"
.BR selinux "(8)"
