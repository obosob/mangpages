.\" Copyright (c) 1993, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included in
.\" all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall not
.\" be used up in advertisin or otherwise ta promote tha sale, use or other
.\" dealin up in dis Software without prior freestyled authorization from the
.\" X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtResolve-Pathname wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtResolvePathname 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtResolvePathname \- search fo' a gangbangin' file rockin standard substitution
.SH SYNTAX
.HP
Strin XtResolvePathname(Display *\fIdisplay\fP, Strin \fItype\fP, String
\fIfilename\fP, Strin \fIsuffix\fP, Strin \fIpath\fP, Substitution
\fIsubstitutions\fP, Cardinal \fInum_substitutions\fP, XtFilePredicate
\fIpredicate\fP);
.SH ARGUMENTS
.IP \fIdisplay\fP 1.2i
Specifies tha display ta use ta find tha language fo' language substitutions.
.IP \fItype\fP
.br
.ns
.IP \fIfilename\fP
.br
.ns
.IP \fIsuffix\fP 1.2i
Specify joints ta substitute tha fuck into tha path.
.IP \fIpath\fP 1.2i
Specifies tha list of file justifications, or NULL.
.IP \fIsubstitutions\fP 1.2i
Specifies a list of additionizzle substitutions ta make tha fuck into tha path, or NULL.
.IP \fInum_substitutions\fP 1.2i
Specifies tha number of entries up in \fIsubstitutions\fP.
.IP \fIpredicate\fP 1.2i
Specifies a procedure called ta judge each potential file name, or NULL.
.SH DESCRIPTION
Da substitutions specified by
.ZN XtResolvePathname
are determined from tha value of tha language strang retrieved by
.ZN XtDisplayInitialize
for tha specified display.
To set the
language fo' all applications specify ``*xnlLanguage: \fIlang\fP'' up in the
resource database.
.IN "xnlLanguage"
Da format n' content of tha language strang are
implementation-defined. Y'all KNOW dat shit, muthafucka!   One suggested syntax is ta compose
the language strang of three parts;  a  ``language  part'',  a
``territory  part'' n' a ``codeset part''.  Da manner up in which
this composizzle be accomplished is implementation-defined
and tha \*(xI make no interpretation of tha parts other
than ta use dem up in substitutions as busted lyrics bout below.
.LP
.ZN XtResolvePathname
calls
.ZN XtFindFile
with tha followin substitutions
in addizzle ta any passed by tha calla n' returns tha value returned by
.ZN XtFindFile :
.IP %N 5
Da value of tha \fIfilename\fP parameter, or tha application's
class name if \fIfilename\fP is NULL.
.IP %T 5
Da value of tha \fItype\fP parameter.
.IP %S 5
Da value of tha \fIsuffix\fP parameter.
.IP %L 5
Da language strang associated wit tha specified display.
.IP %l 5
Da language part of tha displayz language string.
.IP %t 5
Da territory part of tha displayz language string.
.IP %c 5
Da codeset part of tha displayz language string.
.IP %C 5
Da customization strang retrieved from tha resource
database associated wit \fIdisplay\fP.
.IP %D 5
Da value of tha implementation-specific default path.
.LP
If a path is passed to
.ZN XtResolvePathname ,
it is ghon be passed along to
.ZN XtFindFile .
If tha \fIpath\fP argument is NULL, tha value of the
.ZN \s-1XFILESEARCHPATH\s+1
.IN "XFILESEARCHPATH" "" "@DEF@"
environment variable is ghon be passed to
.ZN XtFindFile .
If
.ZN \s-1XFILESEARCHPATH\s+1
is not defined, a implementation-specific default path is ghon be used
which gotz nuff at least 6 entries. Put ya muthafuckin choppers up if ya feel dis!  These entries
must contain tha followin substitutions:

.nf
.ta 3n 23n 27n
1.	%C, %N, %S, %T, %L	or	%C, %N, %S, %T, %l, %t, %c
2.	%C, %N, %S, %T, %l
3.	%C, %N, %S, %T
4.	%N, %S, %T, %L	or	%N, %S, %T, %l, %t, %c
5.	%N, %S, %T, %l
6.	%N, %S, %T
.fi

Da order of these six entries within tha path must be as given above.
Da order n' use of substitutions within a given entry is implementation
dependent.
If tha path begins
with a cold-ass lil colon, it is ghon be preceded by %N%S.  If tha path includes two
adjacent colons, \fB%N%S\fP is ghon be banged between em.
.LP
Da \fItype\fP parameta is intended ta be a cold-ass lil category of files, usually
bein translated tha fuck into a gangbangin' finger-lickin' directory up in tha pathname.  Possible joints
might include ``app-defaults'', ``help'', n' ``bitmap''.
.LP
Da \fIsuffix\fP parameta is intended ta be appended ta tha file name.
Possible joints might include ``.txt'', ``.dat'', n' ``.bm''.
.LP
A suggested value fo' tha default path on POSIX-based systems is
.IP
/usr/lib/X11/%L/%T/%N%C%S:/usr/lib/X11/%l/%T/%N%C%S:\\
.br
/usr/lib/X11/%T/%N%C%S:/usr/lib/X11/%L/%T/%N%S:\\
.br
/usr/lib/X11/%l/%T/%N%S:/usr/lib/X11/%T/%N%S
.LP
Usin dis example, if tha user has specified a language, it will be
used as a subdirectory of /usr/lib/X11 dat is ghon be searched
for other files.  If tha desired file aint found there, tha lookup
will be tried again n' again n' again rockin just tha language part of tha justification.
If tha file aint there, it is ghon be looked fo' in
/usr/lib/X11.  Da \fItype\fP parameta is used as a
subdirectory of tha language directory or of /usr/lib/X11,
and \fIsuffix\fP be appended ta tha file name.
.LP
Da %D substitution allows tha addizzle of path
elements ta tha implementation-specific default path, typically to
allow additionizzle directories ta be searched without preventing
resources up in tha system directories from bein found. Y'all KNOW dat shit, muthafucka!  For example, a
user installin resource filez under a gangbangin' finger-lickin' directory called ``ourdir''
might set
.ZN \s-1XFILESEARCHPATH\s+1
to
.IP
%D:ourdir/%T/%N%C:ourdir/%T/%N
.LP
Da customization strang is obtained by queryin tha resource database
currently associated wit tha display (the database returned by
.ZN XrmGetDatabase )
for tha resource \fIapplication_name\fP.customization, class
\fIapplication_class\fP.Customization where \fIapplication_name\fP
and \fIapplication_class\fP is tha joints returned by
.ZN XtGetApplicationNameAndClass .
If no value is specified up in tha database, tha empty strang is used.
.LP
It be tha responsibilitizzle of tha calla ta free tha returned strang using
.ZN XtFree
when it is no longer needed.
.SH "SEE ALSO"
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
