" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::stdio_sync_filebuf< _CharT, _Traits > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _CharT \fBchar_type\fP"
.br
.ti -1c
.RI "typedef traits_type::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef traits_type::off_type \fBoff_type\fP"
.br
.ti -1c
.RI "typedef traits_type::pos_type \fBpos_type\fP"
.br
.ti -1c
.RI "typedef _Traits \fBtraits_type\fP"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "typedef \fBbasic_streambuf\fP
.br
< \fBchar_type\fP, \fBtraits_type\fP > \fB__streambuf_type\fP"
.br
.in -1c
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstdio_sync_filebuf\fP (std::__c_file *__f)"
.br
.ti -1c
.RI "std::__c_file *const \fBfile\fP ()"
.br
.ti -1c
.RI "locale \fBgetloc\fP () const "
.br
.ti -1c
.RI "streamsize \fBin_avail\fP ()"
.br
.ti -1c
.RI "locale \fBpubimbue\fP (const locale &__loc)"
.br
.ti -1c
.RI "\fBint_type\fP \fBsbumpc\fP ()"
.br
.ti -1c
.RI "\fBint_type\fP \fBsgetc\fP ()"
.br
.ti -1c
.RI "streamsize \fBsgetn\fP (\fBchar_type\fP *__s, streamsize __n)"
.br
.ti -1c
.RI "\fBint_type\fP \fBsnextc\fP ()"
.br
.ti -1c
.RI "\fBint_type\fP \fBsputbackc\fP (\fBchar_type\fP __c)"
.br
.ti -1c
.RI "\fBint_type\fP \fBsputc\fP (\fBchar_type\fP __c)"
.br
.ti -1c
.RI "streamsize \fBsputn\fP (const \fBchar_type\fP *__s, streamsize __n)"
.br
.ti -1c
.RI "\fBint_type\fP \fBsungetc\fP ()"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBbasic_streambuf\fP * \fBpubsetbuf\fP (\fBchar_type\fP *__s, streamsize __n)"
.br
.ti -1c
.RI "\fBpos_type\fP \fBpubseekoff\fP (\fBoff_type\fP __off, ios_base::seekdir __way, ios_base::openmode __mode=ios_base::in|ios_base::out)"
.br
.ti -1c
.RI "\fBpos_type\fP \fBpubseekpos\fP (\fBpos_type\fP __sp, ios_base::openmode __mode=ios_base::in|ios_base::out)"
.br
.ti -1c
.RI "int \fBpubsync\fP ()"
.br
.in -1c
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fB__safe_gbump\fP (streamsize __n)"
.br
.ti -1c
.RI "void \fB__safe_pbump\fP (streamsize __n)"
.br
.ti -1c
.RI "void \fBgbump\fP (int __n)"
.br
.ti -1c
.RI "virtual void \fBimbue\fP (const locale &__loc)"
.br
.ti -1c
.RI "virtual \fBint_type\fP \fBoverflow\fP (\fBint_type\fP __c=traits_type::eof())"
.br
.ti -1c
.RI "virtual \fBint_type\fP \fBpbackfail\fP (\fBint_type\fP __c=traits_type::eof())"
.br
.ti -1c
.RI "void \fBpbump\fP (int __n)"
.br
.ti -1c
.RI "virtual \fBstd::streampos\fP \fBseekoff\fP (\fBstd::streamoff\fP __off, \fBstd::ios_base::seekdir\fP __dir, \fBstd::ios_base::openmode\fP=\fBstd::ios_base::in\fP|\fBstd::ios_base::out\fP)"
.br
.ti -1c
.RI "virtual \fBpos_type\fP \fBseekoff\fP (\fBoff_type\fP, ios_base::seekdir, ios_base::openmode=ios_base::in|ios_base::out)"
.br
.ti -1c
.RI "virtual \fBstd::streampos\fP \fBseekpos\fP (\fBstd::streampos\fP __pos, \fBstd::ios_base::openmode\fP __mode=\fBstd::ios_base::in\fP|\fBstd::ios_base::out\fP)"
.br
.ti -1c
.RI "virtual \fBpos_type\fP \fBseekpos\fP (\fBpos_type\fP, ios_base::openmode=ios_base::in|ios_base::out)"
.br
.ti -1c
.RI "virtual \fBbasic_streambuf\fP
.br
< \fBchar_type\fP, _Traits > * \fBsetbuf\fP (\fBchar_type\fP *, streamsize)"
.br
.ti -1c
.RI "void \fBsetg\fP (\fBchar_type\fP *__gbeg, \fBchar_type\fP *__gnext, \fBchar_type\fP *__gend)"
.br
.ti -1c
.RI "void \fBsetp\fP (\fBchar_type\fP *__pbeg, \fBchar_type\fP *__pend)"
.br
.ti -1c
.RI "virtual streamsize \fBshowmanyc\fP ()"
.br
.ti -1c
.RI "virtual int \fBsync\fP ()"
.br
.ti -1c
.RI "\fBint_type\fP \fBsyncgetc\fP ()"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< char >
.br
::\fBint_type\fP \fBsyncgetc\fP ()"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< wchar_t >
.br
::\fBint_type\fP \fBsyncgetc\fP ()"
.br
.ti -1c
.RI "\fBint_type\fP \fBsyncputc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< char >
.br
::\fBint_type\fP \fBsyncputc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< wchar_t >
.br
::\fBint_type\fP \fBsyncputc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "\fBint_type\fP \fBsyncungetc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< char >
.br
::\fBint_type\fP \fBsyncungetc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "template<> \fBstdio_sync_filebuf\fP< wchar_t >
.br
::\fBint_type\fP \fBsyncungetc\fP (\fBint_type\fP __c)"
.br
.ti -1c
.RI "virtual \fBint_type\fP \fBuflow\fP ()"
.br
.ti -1c
.RI "virtual \fBint_type\fP \fBunderflow\fP ()"
.br
.ti -1c
.RI "virtual \fBstd::streamsize\fP \fBxsgetn\fP (\fBchar_type\fP *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "template<> \fBstd::streamsize\fP \fBxsgetn\fP (char *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "template<> \fBstd::streamsize\fP \fBxsgetn\fP (wchar_t *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "virtual streamsize \fBxsgetn\fP (\fBchar_type\fP *__s, streamsize __n)"
.br
.ti -1c
.RI "virtual \fBstd::streamsize\fP \fBxsputn\fP (const \fBchar_type\fP *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "template<> \fBstd::streamsize\fP \fBxsputn\fP (const char *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "template<> \fBstd::streamsize\fP \fBxsputn\fP (const wchar_t *__s, \fBstd::streamsize\fP __n)"
.br
.ti -1c
.RI "virtual streamsize \fBxsputn\fP (const \fBchar_type\fP *__s, streamsize __n)"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBchar_type\fP * \fBeback\fP () const "
.br
.ti -1c
.RI "\fBchar_type\fP * \fBgptr\fP () const "
.br
.ti -1c
.RI "\fBchar_type\fP * \fBegptr\fP () const "
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBchar_type\fP * \fBpbase\fP () const "
.br
.ti -1c
.RI "\fBchar_type\fP * \fBpptr\fP () const "
.br
.ti -1c
.RI "\fBchar_type\fP * \fBepptr\fP () const "
.br
.in -1c
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "locale \fB_M_buf_locale\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_in_beg\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_in_cur\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_in_end\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_out_beg\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_out_cur\fP"
.br
.ti -1c
.RI "\fBchar_type\fP * \fB_M_out_end\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _CharT, typename _Traits = std::char_traits<_CharT>>class __gnu_cxx::stdio_sync_filebuf< _CharT, _Traits >"
Provides a layer of compatibilitizzle fo' C\&.
.PP
This GNU extension serves up extensions fo' hustlin wit standard C FILE*'s\&. Well shiiiit, it must be instantiated by tha user wit tha type of characta used up in tha file stream, e\&.g\&., stdio_filebuf<char>\&. 
.PP
Definizzle at line 56 of file stdio_sync_filebuf\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> typedef \fBbasic_streambuf\fP<\fBchar_type\fP, \fBtraits_type\fP> \fBstd::basic_streambuf\fP< _CharT, _Traits >::\fB__streambuf_type\fP\fC [inherited]\fP"

.PP
This be a non-standard type\&. 
.PP
Definizzle at line 138 of file streambuf\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::eback () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha git area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
eback() returns tha beginnin pointa fo' tha input sequence
.IP "\(bu" 2
gptr() returns tha next pointa fo' tha input sequence
.IP "\(bu" 2
egptr() returns tha end pointa fo' tha input sequence 
.PP

.PP
Definizzle at line 482 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< char_type, traits_type >::_M_destroy_pback(), std::basic_streambuf< char, char_traits< char > >::sputbackc(), n' std::basic_streambuf< char, char_traits< char > >::sungetc()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::egptr () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha git area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
eback() returns tha beginnin pointa fo' tha input sequence
.IP "\(bu" 2
gptr() returns tha next pointa fo' tha input sequence
.IP "\(bu" 2
egptr() returns tha end pointa fo' tha input sequence 
.PP

.PP
Definizzle at line 488 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< char_type, traits_type >::_M_create_pback(), std::basic_streambuf< char, char_traits< char > >::in_avail(), std::basic_streambuf< char, char_traits< char > >::sbumpc(), std::basic_streambuf< char, char_traits< char > >::sgetc(), std::basic_stringbuf< _CharT, _Traits, _Alloc >::showmanyc(), n' std::basic_stringbuf< _CharT, _Traits, _Alloc >::str()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::epptr () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha put area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
pbase() returns tha beginnin pointa fo' tha output sequence
.IP "\(bu" 2
pptr() returns tha next pointa fo' tha output sequence
.IP "\(bu" 2
epptr() returns tha end pointa fo' tha output sequence 
.PP

.PP
Definizzle at line 535 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sputc()\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> std::__c_file* const \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::file ()\fC [inline]\fP"

.PP
\fBReturns:\fP
.RS 4
Da underlyin FILE*\&.
.RE
.PP
This function can be used ta access tha underlyin C file pointer\&. Note dat there is no way fo' tha library ta track what tha fuck you do wit tha file, so be careful\&. 
.PP
Definizzle at line 88 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> void \fBstd::basic_streambuf\fP< _CharT, _Traits >::gbump (int__n)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Movin tha read position\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__n\fP Da delta by which ta move\&.
.RE
.PP
This just advances tha read posizzle without returnin any data\&. 
.PP
Definizzle at line 498 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sbumpc(), std::basic_streambuf< char, char_traits< char > >::sputbackc(), std::basic_streambuf< char, char_traits< char > >::sungetc(), n' std::basic_streambuf< char, char_traits< char > >::uflow()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> locale \fBstd::basic_streambuf\fP< _CharT, _Traits >::getloc () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Locale access\&. 
.PP
\fBReturns:\fP
.RS 4
Da current locale up in effect\&.
.RE
.PP
If pubimbue(loc) has been called, then da most thugged-out recent \fCloc\fP is returned\&. Otherwise tha global locale up in effect all up in tha time of construction is returned\&. 
.PP
Definizzle at line 226 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pubimbue()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::gptr () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha git area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
eback() returns tha beginnin pointa fo' tha input sequence
.IP "\(bu" 2
gptr() returns tha next pointa fo' tha input sequence
.IP "\(bu" 2
egptr() returns tha end pointa fo' tha input sequence 
.PP

.PP
Definizzle at line 485 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< char_type, traits_type >::_M_create_pback(), std::basic_filebuf< char_type, traits_type >::_M_destroy_pback(), std::basic_streambuf< char, char_traits< char > >::in_avail(), std::basic_streambuf< char, char_traits< char > >::sbumpc(), std::basic_streambuf< char, char_traits< char > >::sgetc(), std::basic_stringbuf< _CharT, _Traits, _Alloc >::showmanyc(), std::basic_streambuf< char, char_traits< char > >::sputbackc(), std::basic_streambuf< char, char_traits< char > >::sungetc(), n' std::basic_streambuf< char, char_traits< char > >::uflow()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> virtual void \fBstd::basic_streambuf\fP< _CharT, _Traits >::imbue (const \fBlocale\fP &__loc)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Changes translations\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__loc\fP A freshly smoked up locale\&.
.RE
.PP
Translations done durin I/O which depend on tha current locale is chizzled by dis call\&. Da standard adds, \fIBetween invocationz of dis function a cold-ass lil class derived from streambuf can safely cache thangs up in dis biatch of calls ta locale functions n' ta thugz of facets so obtained\&.\fP
.PP
\fBNote:\fP
.RS 4
Base class version do nothing\&. 
.RE
.PP

.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, n' \fBstd::basic_filebuf< char_type, traits_type >\fP\&.
.PP
Definizzle at line 576 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pubimbue()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::in_avail ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Lookin ahead tha fuck into tha stream\&. 
.PP
\fBReturns:\fP
.RS 4
Da number of charactas available\&.
.RE
.PP
If a read posizzle be available, returns tha number of charactas available fo' readin before tha buffer must be refilled\&. Otherwise returns tha derived \fCshowmanyc()\fP\&. 
.PP
Definizzle at line 284 of file streambuf\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> virtual \fBint_type\fP \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::overflow (\fBint_type\fP__c = \fCtraits_type::eof()\fP)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Consumes data from tha buffer; writes ta tha controlled sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP An additionizzle characta ta consume\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
eof() ta indicate failure, suttin' else (usually \fI__c\fP, or not_eof())
.RE
.PP
Informally, dis function is called when tha output buffer is full (or do not exist, as bufferin need not straight-up be done)\&. If a funky-ass buffer exists, it is \fIconsumed\fP, wit \fIsome effect\fP on tha controlled sequence\&. (Typically, tha buffer is freestyled up ta tha sequence verbatim\&.) In either case, tha characta \fIc\fP be also freestyled out, if \fI__c\fP aint \fCeof()\fP\&.
.PP
For a gangbangin' formal definizzle of dis function, peep a phat text like fuckin Langer & Kreft, or [27\&.5\&.2\&.4\&.5]/3-7\&.
.PP
A functionin output streambuf can be pimped by overridin only dis function (no buffer area is ghon be used)\&.
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns eof()\&. 
.RE
.PP

.PP
Reimplemented from \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.PP
Definizzle at line 141 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> virtual \fBint_type\fP \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::pbackfail (\fBint_type\fP__c = \fCtraits_type::eof()\fP)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Tries ta back up tha input sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP Da characta ta be banged back tha fuck into tha sequence\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
eof() on failure, \fIsome other value\fP on success 
.RE
.PP
\fBPostcondition:\fP
.RS 4
Da constraintz of \fCgptr()\fP, \fCeback()\fP, n' \fCpptr()\fP is tha same as fo' \fCunderflow()\fP\&.
.RE
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns eof()\&. 
.RE
.PP

.PP
Reimplemented from \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.PP
Definizzle at line 116 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::pbase () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha put area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
pbase() returns tha beginnin pointa fo' tha output sequence
.IP "\(bu" 2
pptr() returns tha next pointa fo' tha output sequence
.IP "\(bu" 2
epptr() returns tha end pointa fo' tha output sequence 
.PP

.PP
Definizzle at line 529 of file streambuf\&.
.PP
Referenced by std::basic_stringbuf< _CharT, _Traits, _Alloc >::str()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> void \fBstd::basic_streambuf\fP< _CharT, _Traits >::pbump (int__n)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Movin tha write position\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__n\fP Da delta by which ta move\&.
.RE
.PP
This just advances tha write posizzle without returnin any data\&. 
.PP
Definizzle at line 545 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sputc()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::pptr () const\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Access ta tha put area\&. These functions is only available ta other protected functions, includin derived classes\&.
.PP
.IP "\(bu" 2
pbase() returns tha beginnin pointa fo' tha output sequence
.IP "\(bu" 2
pptr() returns tha next pointa fo' tha output sequence
.IP "\(bu" 2
epptr() returns tha end pointa fo' tha output sequence 
.PP

.PP
Definizzle at line 532 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sputc(), n' std::basic_stringbuf< _CharT, _Traits, _Alloc >::str()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> locale \fBstd::basic_streambuf\fP< _CharT, _Traits >::pubimbue (const \fBlocale\fP &__loc)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Entry point fo' imbue()\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__loc\fP Da freshly smoked up locale\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Da previous locale\&.
.RE
.PP
Calls tha derived imbue(__loc)\&. 
.PP
Definizzle at line 209 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBpos_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::pubseekoff (\fBoff_type\fP__off, \fBios_base::seekdir\fP__way, \fBios_base::openmode\fP__mode = \fC\fBios_base::in\fP | \fBios_base::out\fP\fP)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Altas tha stream position\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__off\fP Offset\&. 
.br
\fI__way\fP Value fo' ios_base::seekdir\&. 
.br
\fI__mode\fP Value fo' ios_base::openmode\&.
.RE
.PP
Calls virtual seekoff function\&. 
.PP
Definizzle at line 251 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBpos_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::pubseekpos (\fBpos_type\fP__sp, \fBios_base::openmode\fP__mode = \fC\fBios_base::in\fP | \fBios_base::out\fP\fP)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Altas tha stream position\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__sp\fP Posizzle 
.br
\fI__mode\fP Value fo' ios_base::openmode\&.
.RE
.PP
Calls virtual seekpos function\&. 
.PP
Definizzle at line 263 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBbasic_streambuf\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::pubsetbuf (\fBchar_type\fP *__s, \fBstreamsize\fP__n)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Entry points fo' derived buffer functions\&. Da hood versionz of \fCpubfoo\fP dispatch ta tha protected derived \fCfoo\fP member functions, passin tha arguments (if any) n' returnin tha result unchanged\&. 
.PP
Definizzle at line 239 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> int \fBstd::basic_streambuf\fP< _CharT, _Traits >::pubsync ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Calls virtual sync function\&. 
.PP
Definizzle at line 271 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::sync()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::sbumpc ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Gettin tha next character\&. 
.PP
\fBReturns:\fP
.RS 4
Da next character, or eof\&.
.RE
.PP
If tha input read posizzle be available, returns dat characta n' increments tha read pointer, otherwise calls n' returns \fCuflow()\fP\&. 
.PP
Definizzle at line 316 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::getline(), std::basic_istream< _CharT, _Traits >::ignore(), std::istreambuf_iterator< _CharT, _Traits >::operator++(), n' std::basic_streambuf< char, char_traits< char > >::snextc()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> virtual \fBpos_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::seekoff (\fBoff_type\fP, \fBios_base::seekdir\fP, \fBios_base::openmode\fP = \fC\fBios_base::in\fP | \fBios_base::out\fP\fP)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Altas tha stream positions\&. Each derived class serves up its own appropriate behavior\&. 
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns a \fCpos_type\fP dat represents a invalid stream position\&. 
.RE
.PP

.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, \fBstd::basic_filebuf< char_type, traits_type >\fP, n' \fBstd::basic_stringbuf< _CharT, _Traits, _Alloc >\fP\&.
.PP
Definizzle at line 602 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pubseekoff()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> virtual \fBpos_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::seekpos (\fBpos_type\fP, \fBios_base::openmode\fP = \fC\fBios_base::in\fP | \fBios_base::out\fP\fP)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Altas tha stream positions\&. Each derived class serves up its own appropriate behavior\&. 
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns a \fCpos_type\fP dat represents a invalid stream position\&. 
.RE
.PP

.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, \fBstd::basic_filebuf< char_type, traits_type >\fP, n' \fBstd::basic_stringbuf< _CharT, _Traits, _Alloc >\fP\&.
.PP
Definizzle at line 614 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pubseekpos()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> virtual \fBbasic_streambuf\fP<\fBchar_type\fP,_Traits>* \fBstd::basic_streambuf\fP< _CharT, _Traits >::setbuf (\fBchar_type\fP *, \fBstreamsize\fP)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Manipulates tha buffer\&. Each derived class serves up its own appropriate behavior\&. Right back up in yo muthafuckin ass. See tha next-to-last paragraph of http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html fo' mo' on dis function\&.
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns \fCthis\fP\&. 
.RE
.PP

.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, \fBstd::basic_filebuf< char_type, traits_type >\fP, n' \fBstd::basic_stringbuf< _CharT, _Traits, _Alloc >\fP\&.
.PP
Definizzle at line 591 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pubsetbuf()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> void \fBstd::basic_streambuf\fP< _CharT, _Traits >::setg (\fBchar_type\fP *__gbeg, \fBchar_type\fP *__gnext, \fBchar_type\fP *__gend)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Settin tha three read area pointers\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__gbeg\fP A pointer\&. 
.br
\fI__gnext\fP A pointer\&. 
.br
\fI__gend\fP A pointer\&. 
.RE
.PP
\fBPostcondition:\fP
.RS 4
\fI__gbeg\fP == \fCeback()\fP, \fI__gnext\fP == \fCgptr()\fP, n' \fI__gend\fP == \fCegptr()\fP 
.RE
.PP

.PP
Definizzle at line 509 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< char_type, traits_type >::_M_create_pback(), std::basic_filebuf< char_type, traits_type >::_M_destroy_pback(), n' std::basic_filebuf< char_type, traits_type >::_M_set_buffer()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> void \fBstd::basic_streambuf\fP< _CharT, _Traits >::setp (\fBchar_type\fP *__pbeg, \fBchar_type\fP *__pend)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"

.PP
Settin tha three write area pointers\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__pbeg\fP A pointer\&. 
.br
\fI__pend\fP A pointer\&. 
.RE
.PP
\fBPostcondition:\fP
.RS 4
\fI__pbeg\fP == \fCpbase()\fP, \fI__pbeg\fP == \fCpptr()\fP, n' \fI__pend\fP == \fCepptr()\fP 
.RE
.PP

.PP
Definizzle at line 555 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< char_type, traits_type >::_M_set_buffer()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::sgetc ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Gettin tha next character\&. 
.PP
\fBReturns:\fP
.RS 4
Da next character, or eof\&.
.RE
.PP
If tha input read posizzle be available, returns dat character, otherwise calls n' returns \fCunderflow()\fP\&. Do not move tha read posizzle afta fetchin tha character\&. 
.PP
Definizzle at line 338 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::get(), std::basic_istream< _CharT, _Traits >::getline(), std::basic_istream< _CharT, _Traits >::ignore(), std::basic_istream< _CharT, _Traits >::sentry::sentry(), n' std::basic_streambuf< char, char_traits< char > >::snextc()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::sgetn (\fBchar_type\fP *__s, \fBstreamsize\fP__n)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Entry point fo' xsgetn\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A buffer area\&. 
.br
\fI__n\fP A count\&.
.RE
.PP
Returns xsgetn(__s,__n)\&. Da effect is ta fill \fI__s\fP[0] all up in \fI__s\fP[__n-1] wit charactas from tha input sequence, if possible\&. 
.PP
Definizzle at line 357 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> virtual streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::showmanyc ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Investigatin tha data available\&. 
.PP
\fBReturns:\fP
.RS 4
An estimate of tha number of charactas available up in tha input sequence, or -1\&.
.RE
.PP
\fIIf it returns a positizzle value, then successive calls ta \fCunderflow()\fP aint gonna return \fCtraits::eof()\fP until at least dat number of charactas done been supplied\&. If \fCshowmanyc()\fP returns -1, then calls ta \fCunderflow()\fP or \fCuflow()\fP will fail\&.\fP [27\&.5\&.2\&.4\&.3]/1
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns zero\&. 
.PP
Da standard addz dat \fIthe intention aint only dat tha calls [to underflow or uflow] aint gonna return \fCeof()\fP but dat they will return immediately\&.\fP 
.PP
Da standard addz dat \fIthe morphemez of \fCshowmanyc\fP is \fBes-how-many-see\fP, not \fBshow-manic\fP\&.\fP 
.RE
.PP

.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, \fBstd::basic_filebuf< char_type, traits_type >\fP, n' \fBstd::basic_stringbuf< _CharT, _Traits, _Alloc >\fP\&.
.PP
Definizzle at line 649 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::in_avail()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::snextc ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Gettin tha next character\&. 
.PP
\fBReturns:\fP
.RS 4
Da next character, or eof\&.
.RE
.PP
Calls \fCsbumpc()\fP, n' if dat function returns \fCtraits::eof()\fP, so do dis function\&. Otherwise, \fCsgetc()\fP\&. 
.PP
Definizzle at line 298 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::get(), std::basic_istream< _CharT, _Traits >::getline(), std::basic_istream< _CharT, _Traits >::ignore(), n' std::basic_istream< _CharT, _Traits >::sentry::sentry()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::sputbackc (\fBchar_type\fP__c)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Pushin charactas back tha fuck into tha input stream\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP Da characta ta push back\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Da previous character, if possible\&.
.RE
.PP
Similar ta sungetc() yo, but \fI__c\fP is pushed onto tha stream instead of \fIthe previous character\&.\fP If successful, tha next characta fetched from tha input stream is ghon be \fI__c\fP\&. 
.PP
Definizzle at line 372 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::putback()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::sputc (\fBchar_type\fP__c)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Entry point fo' all single-characta output functions\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__c\fP A characta ta output\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
\fI__c\fP, if possible\&.
.RE
.PP
One of two hood output functions\&.
.PP
If a write posizzle be available fo' tha output sequence (i\&.e\&., tha buffer aint full), stores \fI__c\fP up in dat position, increments tha position, n' returns \fCtraits::to_int_type(__c)\fP\&. If a write posizzle aint available, returns \fCoverflow(__c)\fP\&. 
.PP
Definizzle at line 424 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::get(), n' std::ostreambuf_iterator< _CharT, _Traits >::operator=()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::sputn (const \fBchar_type\fP *__s, \fBstreamsize\fP__n)\fC [inline]\fP, \fC [inherited]\fP"

.PP
Entry point fo' all single-characta output functions\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A buffer read area\&. 
.br
\fI__n\fP A count\&.
.RE
.PP
One of two hood output functions\&.
.PP
Returns xsputn(__s,__n)\&. Da effect is ta write \fI__s\fP[0] all up in \fI__s\fP[__n-1] ta tha output sequence, if possible\&. 
.PP
Definizzle at line 450 of file streambuf\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBint_type\fP \fBstd::basic_streambuf\fP< _CharT, _Traits >::sungetc ()\fC [inline]\fP, \fC [inherited]\fP"

.PP
Movin backwardz up in tha input stream\&. 
.PP
\fBReturns:\fP
.RS 4
Da previous character, if possible\&.
.RE
.PP
If a putback posizzle be available, dis function decrements tha input pointa n' returns dat character\&. Otherwise, calls n' returns pbackfail()\&. Da effect is ta \fIunget\fP tha last characta \fIgotten\fP\&. 
.PP
Definizzle at line 397 of file streambuf\&.
.PP
Referenced by std::basic_istream< _CharT, _Traits >::unget()\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> virtual int \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::sync (void)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Synchronizes tha buffer arrays wit tha controlled sequences\&. 
.PP
\fBReturns:\fP
.RS 4
-1 on failure\&.
.RE
.PP
Each derived class serves up its own appropriate behavior, includin tha definizzle of \fIfailure\fP\&. 
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns zero\&. 
.RE
.PP

.PP
Reimplemented from \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.PP
Definizzle at line 160 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> virtual \fBint_type\fP \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::uflow ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Fetches mo' data from tha controlled sequence\&. 
.PP
\fBReturns:\fP
.RS 4
Da first characta from tha \fIpendin sequence\fP\&.
.RE
.PP
Informally, dis function do tha same thang as \fCunderflow()\fP, n' up in fact is required ta booty-call dat function\&. Well shiiiit, it also returns tha freshly smoked up character, like \fCunderflow()\fP do\&. But fuck dat shiznit yo, tha word on tha street is dat dis function also moves tha read posizzle forward by one\&. 
.PP
Reimplemented from \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.PP
Definizzle at line 108 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT , typename _Traits  = std::char_traits<_CharT>> virtual \fBint_type\fP \fB__gnu_cxx::stdio_sync_filebuf\fP< _CharT, _Traits >::underflow ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Fetches mo' data from tha controlled sequence\&. 
.PP
\fBReturns:\fP
.RS 4
Da first characta from tha \fIpendin sequence\fP\&.
.RE
.PP
Informally, dis function is called when tha input buffer is exhausted (or do not exist, as bufferin need not straight-up be done)\&. If a funky-ass buffer exists, it is \fIrefilled\fP\&. In either case, tha next available characta is returned, or \fCtraits::eof()\fP ta indicate a null pendin sequence\&.
.PP
For a gangbangin' formal definizzle of tha pendin sequence, peep a phat text like fuckin Langer & Kreft, or [27\&.5\&.2\&.4\&.3]/7-14\&.
.PP
A functionin input streambuf can be pimped by overridin only dis function (no buffer area is ghon be used)\&. For a example, peep http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25.html
.PP
\fBNote:\fP
.RS 4
Base class version do nothing, returns eof()\&. 
.RE
.PP

.PP
Reimplemented from \fBstd::basic_streambuf< _CharT, _Traits >\fP\&.
.PP
Definizzle at line 101 of file stdio_sync_filebuf\&.h\&.
.SS "template<typename _CharT , typename _Traits > streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::xsgetn (\fBchar_type\fP *__s, \fBstreamsize\fP__n)\fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Multiple characta extraction\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A buffer area\&. 
.br
\fI__n\fP Maximum number of charactas ta assign\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Da number of charactas assigned\&.
.RE
.PP
Fills \fI__s\fP[0] all up in \fI__s\fP[__n-1] wit charactas from tha input sequence, as if by \fCsbumpc()\fP\&. Right back up in yo muthafuckin ass. Stops when either \fI__n\fP charactas done been copied, or when \fCtraits::eof()\fP would be copied\&.
.PP
It be expected dat derived classes provide a mo' efficient implementation by overridin dis definition\&. 
.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, n' \fBstd::basic_filebuf< char_type, traits_type >\fP\&.
.PP
Definizzle at line 46 of file streambuf\&.tcc\&.
.PP
References std::min()\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sgetn()\&.
.SS "template<typename _CharT , typename _Traits > streamsize \fBstd::basic_streambuf\fP< _CharT, _Traits >::xsputn (const \fBchar_type\fP *__s, \fBstreamsize\fP__n)\fC [protected]\fP, \fC [virtual]\fP, \fC [inherited]\fP"

.PP
Multiple characta insertion\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A buffer area\&. 
.br
\fI__n\fP Maximum number of charactas ta write\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Da number of charactas written\&.
.RE
.PP
Writes \fI__s\fP[0] all up in \fI__s\fP[__n-1] ta tha output sequence, as if by \fCsputc()\fP\&. Right back up in yo muthafuckin ass. Stops when either \fIn\fP charactas done been copied, or when \fCsputc()\fP would return \fCtraits::eof()\fP\&.
.PP
It be expected dat derived classes provide a mo' efficient implementation by overridin dis definition\&. 
.PP
Reimplemented up in \fBstd::basic_filebuf< _CharT, _Traits >\fP, \fBstd::basic_filebuf< _CharT, encoding_char_traits< _CharT > >\fP, n' \fBstd::basic_filebuf< char_type, traits_type >\fP\&.
.PP
Definizzle at line 80 of file streambuf\&.tcc\&.
.PP
References std::min()\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::sputn()\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> locale \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_buf_locale\fC [protected]\fP, \fC [inherited]\fP"

.PP
Current locale setting\&. 
.PP
Definizzle at line 192 of file streambuf\&.
.PP
Referenced by std::basic_filebuf< _CharT, _Traits >::basic_filebuf(), std::basic_streambuf< char, char_traits< char > >::getloc(), n' std::basic_streambuf< char, char_traits< char > >::pubimbue()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_in_beg\fC [protected]\fP, \fC [inherited]\fP"

.PP
Start of git area\&. 
.PP
Definizzle at line 184 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::eback(), n' std::basic_streambuf< char, char_traits< char > >::setg()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_in_cur\fC [protected]\fP, \fC [inherited]\fP"

.PP
Current read area\&. 
.PP
Definizzle at line 185 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::gbump(), std::basic_streambuf< char, char_traits< char > >::gptr(), n' std::basic_streambuf< char, char_traits< char > >::setg()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_in_end\fC [protected]\fP, \fC [inherited]\fP"

.PP
End of git area\&. 
.PP
Definizzle at line 186 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::egptr(), n' std::basic_streambuf< char, char_traits< char > >::setg()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_out_beg\fC [protected]\fP, \fC [inherited]\fP"

.PP
Start of put area\&. 
.PP
Definizzle at line 187 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pbase(), n' std::basic_streambuf< char, char_traits< char > >::setp()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_out_cur\fC [protected]\fP, \fC [inherited]\fP"

.PP
Current put area\&. 
.PP
Definizzle at line 188 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::pbump(), std::basic_streambuf< char, char_traits< char > >::pptr(), n' std::basic_streambuf< char, char_traits< char > >::setp()\&.
.SS "template<typename _CharT, typename _Traits = char_traits<_CharT>> \fBchar_type\fP* \fBstd::basic_streambuf\fP< _CharT, _Traits >::_M_out_end\fC [protected]\fP, \fC [inherited]\fP"

.PP
End of put area\&. 
.PP
Definizzle at line 189 of file streambuf\&.
.PP
Referenced by std::basic_streambuf< char, char_traits< char > >::epptr(), n' std::basic_streambuf< char, char_traits< char > >::setp()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
