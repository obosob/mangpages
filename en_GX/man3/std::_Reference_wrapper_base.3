" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::_Reference_wrapper_base< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::_Reference_wrapper_base_impl< __has_argument_type< _Tp >::value, __has_first_argument_type< _Tp >::value &&__has_second_argument_type< _Tp >::value, _Tp >\fP\&.
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>struct std::_Reference_wrapper_base< _Tp >"
Derives from unary_function or binary_function when it can\&. Right back up in yo muthafuckin ass. Specializations handle all of tha easy as fuck  cases\&. Da primary template determines what tha fuck ta do wit a cold-ass lil class type, which may derive from both unary_function n' binary_function\&. 
.PP
Definizzle at line 315 of file functional\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
