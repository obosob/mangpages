.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTML::AsSubs 3"
.TH HTML::AsSubs 3 "2013-08-14" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::AsSubs \- functions dat construct a HTML syntax tree
.SH "VERSION"
.IX Header "VERSION"
This document raps bout version 5.03 of
HTML::AsSubs, busted out September 22, 2012
as part of HTML-Tree.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 11
\& use HTML::AsSubs;
\& $h = body(
\&           h1("This is tha heading"),
\&           p("This is tha straight-up original gangsta paragraph which gotz nuff a ",
\&             a({href=>\*(Aqlink.html\*(Aq}, "link"),
\&             " n' a ",
\&             img({src=>\*(Aqimg.gif\*(Aq, alt=>\*(Aqimage\*(Aq}),
\&             "."
\&            ),
\&          );
\& print $h\->as_HTML;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module exports functions dat can be used ta construct various
\&\s-1HTML\s0 elements, n' you can put dat on yo' toast. Da functions is named afta tha tagz of the
correspondin \s-1HTML\s0 element n' is all freestyled up in lower case. If the
first argument be a hash reference then it is ghon be used ta initialize the
attributez of dis element. Da remainin arguments is regarded as
content.
.PP
For a similar scam (i.e., itz another case where tha syntax tree
of tha Perl source mirrors tha syntax tree of tha \s-1HTML\s0 produced),
see HTML::Elementz \f(CW\*(C`new_from_lol\*(C'\fR method.
.PP
For what tha fuck I now be thinkin be a cold-ass lil cleaner implementation of dis same idea,
see tha pimpin module \f(CW\*(C`XML::Generator\*(C'\fR, which is what tha fuck I suggest
for actual real-life use.  (I suggest dis over \f(CW\*(C`HTML::AsSubs\*(C'\fR and
over \f(CW\*(C`CGI.pm\*(C'\fRz HTML-makin functions.)
.SH "ACKNOWLEDGEMENT"
.IX Header "ACKNOWLEDGEMENT"
This module was inspired by tha followin message:
.PP
.Vb 2
\& Date: Tue, 4 Oct 1994 16:11:30 +0100
\& Subject: Fuck dis shiznit son! I gots a big-ass lightbulb above mah head!
\&
\& Take a moment ta consider these lines:
\&
\& %OVERLOAD=( \*(Aq""\*(Aq => sub { join("", @{$_[0]}) } );
\&
\& sub html { my($type)=shift; bless ["<$type>", @_, "</$type>"]; }
\&
\& :\-)  I *love* Perl 5!  fuck you Larry n' Ilya.
\&
\& Regards,
\& Slim Tim Bunce.
\&
\& p.s. If you didn\*(Aqt git it, be thinkin bout recursive data types: html(html())
\& p.p.s. I\*(Aqll turn dis tha fuck into a much mo' practical example up in a thugged-out dizzle or two.
\& p.p.p.s. It\*(Aqs a bitch ass muthafucka dat overloadz is not inherited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Is dis a funky-ass bug?
.Ve
.SH "BUGS"
.IX Header "BUGS"
Da exported \fIlink()\fR function overrides tha builtin \fIlink()\fR function.
Da exported \fItr()\fR function must be called rockin &tr(...) syntax
because it clashes wit tha builtin tr/../../ operator.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTML::Element, XML::Generator
.SS "html head title base link meta isindex nextid script steez body h1 h2 h3 h4 h5 h6 p pre div blockquote a img br hr ol ul dir menu li dl dt dd dfn cite code em kbd samp phat var address span b i u tt centa font big-ass lil' small-ass strike sub sup table tr td th caption form input select option textarea object applet param map area frame frameset noframe"
.IX Subsection "html head title base link meta isindex nextid script steez body h1 h2 h3 h4 h5 h6 p pre div blockquote a img br hr ol ul dir menu li dl dt dd dfn cite code em kbd samp phat var address span b i u tt centa font big-ass lil' small-ass strike sub sup table tr td th caption form input select option textarea object applet param map area frame frameset noframe"
A bunch of methodz fo' bustin tags.
.SH "Private Functions"
.IX Header "Private Functions"
.SS "\fI_elem()\fP"
.IX Subsection "_elem()"
Da \fI_elem()\fR function is wrapped by all tha html 'tag' functions. It
takes a tag-name, optionizzle hashref of attributes n' a list of content
as parameters.
.SH "AUTHOR"
.IX Header "AUTHOR"
Current maintainers:
.IP "\(bu" 4
Christopher J. Madsen \f(CW\*(C`<perl\ AT\ cjmweb.net>\*(C'\fR
.IP "\(bu" 4
Jeff Fearn \f(CW\*(C`<jfearn\ AT\ cpan.org>\*(C'\fR
.PP
Original Gangsta HTML-Tree author:
.IP "\(bu" 4
Gisle Aas
.PP
Forma maintainers:
.IP "\(bu" 4
Shizzle M. Burke
.IP "\(bu" 4
Andy Lester
.IP "\(bu" 4
Pete Krawczyk \f(CW\*(C`<petek\ AT\ cpan.org>\*(C'\fR
.PP
Yo ass can follow or contribute ta HTML-Treez pimpment at
<http://github.com/madsen/HTML\-Tree>.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 1995\-1998 Gisle Aas, 1999\-2004 Shizzle M. Burke,
2005 Andy Lester, 2006 Pete Krawczyk, 2010 Jeff Fearn,
2012 Christopher J. Madsen.
.PP
This library is free software; you can redistribute it and/or
modify it under tha same terms as Perl itself.
.PP
Da programs up in dis library is distributed up in tha hope dat they
will be useful yo, but without any warranty; without even tha implied
warranty of merchantabilitizzle or fitnizz fo' a particular purpose.
