" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::lu_move_to_front_policy< _Alloc > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef 
.br
__rebind_m::other::reference \fBmetadata_reference\fP"
.br
.ti -1c
.RI "typedef \fBnull_type\fP \fBmetadata_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmetadata_type\fP \fBoperator()\fP () const "
.br
.ti -1c
.RI "bool \fBoperator()\fP (\fBmetadata_reference\fP r_metadata) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Alloc = std::allocator<char>>class __gnu_pbds::lu_move_to_front_policy< _Alloc >"
A list-update policy dat unconditionally moves elements ta tha front of tha list\& fo' realz. A null type means dat each link up in a list-based container do not straight-up need metadata\&. 
.PP
Definizzle at line 57 of file list_update_policy\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _Alloc  = std::allocator<char>> typedef __rebind_m::other::reference \fB__gnu_pbds::lu_move_to_front_policy\fP< _Alloc >::\fBmetadata_reference\fP"

.PP
Reference ta metadata on which dis functor operates\&. 
.PP
Definizzle at line 70 of file list_update_policy\&.hpp\&.
.SS "template<typename _Alloc  = std::allocator<char>> typedef \fBnull_type\fP \fB__gnu_pbds::lu_move_to_front_policy\fP< _Alloc >::\fBmetadata_type\fP"

.PP
Metadata on which dis functor operates\&. 
.PP
Definizzle at line 63 of file list_update_policy\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Alloc  = std::allocator<char>> \fBmetadata_type\fP \fB__gnu_pbds::lu_move_to_front_policy\fP< _Alloc >::operator() () const\fC [inline]\fP"

.PP
Creates a metadata object\&. 
.PP
Definizzle at line 74 of file list_update_policy\&.hpp\&.
.SS "template<typename _Alloc  = std::allocator<char>> bool \fB__gnu_pbds::lu_move_to_front_policy\fP< _Alloc >::operator() (\fBmetadata_reference\fPr_metadata) const\fC [inline]\fP"

.PP
Decides whether a metadata object should be moved ta tha front of tha list\&. 
.PP
Definizzle at line 80 of file list_update_policy\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
