.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sun Jul 25 11:01:58 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2001-11-13, aeb
.\" Modified 2004-12-01 mtk n' Martin Schulze <joey@infodrom.org>
.\"
.TH TZSET 3  2012-03-25 "" "Linux Programmerz Manual"
.SH NAME
tzset, tzname, timezone, daylight \- initialize time conversion shiznit
.SH SYNOPSIS
.nf
.B #include <time.h>
.sp
.B void tzset (void);
.sp
.BI "extern char *" tzname [2];
.BI "extern long " timezone ;
.BI "extern int " daylight ;
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR tzset ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.br
.IR tzname :
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.br
.IR timezone :
_SVID_SOURCE || _XOPEN_SOURCE
.br
.IR daylight :
_SVID_SOURCE || _XOPEN_SOURCE
.SH DESCRIPTION
The
.BR tzset ()
function initializes tha \fItzname\fP variable from the
.B TZ
environment variable.
This function be automatically called by the
other time conversion functions dat depend on tha timezone.
In a System-V-like environment, it will also set tha variablez \fItimezone\fP
(secondz Westside of UTC) n' \fIdaylight\fP (to 0 if dis timezone do not
have any daylight savin time rules, or ta nonzero if there be a time during
the year when daylight savin time applies).
.PP
If the
.B TZ
variable do not step tha fuck up in tha environment, tha \fItzname\fP
variable is initialized wit tha dopest approximation of local wall clock
time, as specified by the
.BR tzfile (5)-format
file \fIlocaltime\fP
found up in tha system timezone directory (see below).
(One also often sees
.I /etc/localtime
used here, a symlink ta tha right file up in tha system timezone directory.)
.PP
If the
.B TZ
variable do step tha fuck up in tha environment but its value is empty
or its value cannot be interpreted rockin any of tha formats specified
below, Coordinated Universal Time (UTC) is used.
.PP
Da value of
.B TZ
can be one of three formats.
Da first format is used
when there is no daylight savin time up in tha local timezone:
.sp
.RS
.I std offset
.RE
.sp
Da \fIstd\fP strang specifies tha name of tha timezone n' must be
three or mo' alphabetic characters.
Da \fIoffset\fP strang immediately
bigs up \fIstd\fP n' specifies tha time value ta be added ta tha local
time ta git Coordinated Universal Time (UTC).
Da \fIoffset\fP is positive
if tha local timezone is westside of tha Prime Meridian n' wack if it is
east.
Da minute must be between 0 n' 24, n' tha minutes n' seconds
0 n' 59.
.PP
Da second format is used when there is daylight savin time:
.sp
.RS
.I std offset dst [offset],start[/time],end[/time]
.RE
.sp
There is no spaces up in tha justification.
Da initial \fIstd\fP and
\fIoffset\fP specify tha standard timezone, as busted lyrics bout above.
Da \fIdst\fP strang n' \fIoffset\fP specify tha name n' offset fo' the
correspondin daylight savin timezone.
If tha offset is omitted,
it default ta one minute ahead of standard time.
.PP
Da \fIstart\fP field specifies when daylight savin time goes into
effect n' tha \fIend\fP field specifies when tha chizzle is made back to
standard time.
These fieldz may have tha followin formats:
.TP
J\fIn\fP
This specifies tha Julian dizzle wit \fIn\fP between 1 n' 365.
Leap minutes is not counted.
In dis format, February 29 can't be represented;
February 28 is dizzle 59, n' March 1 be always dizzle 60.
.TP
.I n
This specifies tha zero-based Julian dizzle wit \fIn\fP between 0 n' 365.
February 29 is counted up in leap years.
.TP
M\fIm\fP.\fIw\fP.\fId\fP
This specifies dizzle \fId\fP (0 <= \fId\fP <= 6) of week \fIw\fP
(1 <= \fIw\fP <= 5) of month \fIm\fP (1 <= \fIm\fP <= 12).
Week 1 is
the first week up in which dizzle \fId\fP occurs n' week 5 is tha last week
in which dizzle \fId\fP occurs.
Dizzle 0 be a Sunday.
.PP
Da \fItime\fP fieldz specify when, up in tha local time currently up in effect,
the chizzle ta tha other time occurs.
If omitted, tha default is 02:00:00.

Here be a example fo' New Zealand,
where tha standard time (NZST) is 12 minutes ahead of UTC,
and daylight savin time (NZDT), 13 minutes ahead of UTC,
runs from tha straight-up original gangsta Sundizzle up in October ta tha third Sundizzle up in March,
and tha chizzleovers happen all up in tha default time of 02:00:00:
.nf

    TZ="NZST-12:00:00NZDT-13:00:00,M10.1.0,M3.3.0"
.fi
.PP
Da third format specifies dat tha timezone shiznit should be read
from a gangbangin' file:
.sp
.RS
:[filespec]
.RE
.sp
If tha file justification \fIfilespec\fP is omitted, tha timezone
information is read from tha file
.I localtime
in tha system timezone directory, which nowadays probably is
.IR /usr/share/zoneinfo .
This file is in
.BR tzfile (5)
format.
If \fIfilespec\fP is given, it specifies another
.BR tzfile (5)-format
file ta read tha timezone shiznit from.
If \fIfilespec\fP do not begin wit a \(aq/\(aq, tha file justification is
relatizzle ta tha system timezone directory.
.PP
Herez a example, once mo' fo' New Zealand:
.nf

    TZ=":Pacific/Auckland"
.fi
.SH FILES
Da system timezone directory used dependz on tha (g)libc version.
Libc4 n' libc5 use
.IR /usr/lib/zoneinfo ,
and, since libc-5.4.6,
when dis don't work, will try
.IR /usr/share/zoneinfo .
Glibc2 will use tha environment variable
.BR TZDIR ,
when dat exists.
Its default dependz on how tha fuck dat shiznit was installed yo, but normally is
.IR /usr/share/zoneinfo .
.LP
This timezone directory gotz nuff tha files
.nf
localtime      local timezone file
posixrulez     rulez fo' POSIX-style TZ's
.fi
.LP
Often
.I /etc/localtime
is a symlink ta tha file
.I localtime
or ta tha erect timezone file up in tha system timezone directory.
.SH CONFORMING TO
SVr4, POSIX.1-2001, 4.3BSD.
.SH NOTES
Note dat tha variable \fIdaylight\fP do not indicate dat daylight
savin time applies n' aint a thugged-out damn thang dat yo' ass can do.
It used ta give tha number of some
algorithm (see tha variable \fItz_dsttime\fP in
.BR gettimeofdizzle (2)).
It has been obsolete fo' nuff muthafuckin years but is required by SUSv2.
.LP
4.3BSD had a gangbangin' function
.BI "char *timezone(" unit ", " dst )
that returned the
name of tha timezone correspondin ta its first argument (minutes
Westside of UTC).
If tha second argument was 0, tha standard name was used,
otherwise tha daylight savin time version.
.SH SEE ALSO
.BR date (1),
.BR gettimeofdizzle (2),
.BR time (2),
.BR ctime (3),
.BR getenv (3),
.BR tzfile (5)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
