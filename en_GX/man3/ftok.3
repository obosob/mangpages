.\" Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified 2001-11-28, by Mike Kerrisk, <mtk.manpages@gmail.com>
.\"	Changed data type of proj_id; minor fixes
.\"	aeb: further fixes; added notes.
.\"
.TH FTOK 3 2001-11-28 "GNU" "Linux Programmerz Manual"
.SH NAME
ftok \- convert a pathname n' a project identifier ta a System V IPC key
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/ipc.h>
.fi
.sp
.BI "key_t ftok(const char *" pathname ", int " proj_id );
.SH DESCRIPTION
The
.BR ftok ()
function uses tha identitizzle of tha file named by tha given
.I pathname
(which must refer ta a existing, accessible file)
and tha least dope 8 bits of
.I proj_id
(which must be nonzero) ta generate a
.I key_t
type System V IPC key, suitable fo' use with
.BR msgget (2),
.BR semget (2),
or
.BR shmget (2).
.LP
Da resultin value is tha same ol' dirty fo' all pathnames that
name tha same file, when tha same value of
.I proj_id
is used.
Da value returned should be different when the
(simultaneously existing) filez or tha project IDs differ.
.SH RETURN VALUE
On success, tha generated
.I key_t
value is returned.
On failure \-1 is returned, with
.I errno
indicatin tha error as fo' the
.BR stat (2)
system call.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
Under libc4 n' libc5 (and under SunOS 4.x) tha prototype was:
.sp
.RS
.BI "key_t ftok(char *" pathname ", char " proj_id );
.RE
.PP
Today
.I proj_id
is an
.IR int ,
but still only 8 bits is used.
Typical usage has a ASCII character
.IR proj_id ,
that is why tha behavior is holla'd ta be undefined when
.I proj_id
is zero.
.LP
Of course no guarantee can be given dat tha resulting
.I key_t
is unique.
Typically, a funky-ass dopest effort attempt combines tha given
.I proj_id
byte, tha lower 16 bitz of tha inode number, n' the
lower 8 bitz of tha thang number tha fuck into a 32-bit result.
Collisions may easily happen, fo' example between filez on
.I /dev/hda1
and filez on
.IR /dev/sda1 .
.SH SEE ALSO
.BR msgget (2),
.BR semget (2),
.BR shmget (2),
.BR stat (2),
.BR svipc (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
