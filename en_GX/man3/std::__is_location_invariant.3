" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__is_location_invariant< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::integral_constant< bool,(is_pointer< _Tp >::value||is_member_pointer< _Tp >::value)>\fP\&.
.PP
Inherited by std::__is_location_invariant< _Simple_type_wrapper< _Tp > >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBintegral_constant\fP
.br
< bool, __v > \fBtype\fP"
.br
.ti -1c
.RI "typedef bool \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBoperator value_type\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBvalue\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>struct std::__is_location_invariant< _Tp >"
Trait identifyin 'location-invariant' types, meanin dat tha address of tha object (or any of its members) aint gonna escape\& fo' realz. Also implies a trivial copy constructor n' assignment operator\&. 
.PP
Definizzle at line 1781 of file functional\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
