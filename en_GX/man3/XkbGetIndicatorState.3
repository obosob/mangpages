.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbGetIndicatorState 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbGetIndicatorState \- Obtains tha current state of tha keyboard indicators
.SH SYNOPSIS
.HP
.B Status XkbGetIndicatorState
.BI "(\^Display *" "display" "\^,"
.BI "unsigned int " "device_spec" "\^,"
.BI "unsigned int " "state_return" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- display
connection ta tha X server
.TP
.I \- device_spec
device ID, or XkbUseCoreKbd
.TP
.I \- state_return
backfilled wit a mask of tha indicator state
.SH DESCRIPTION
.LP
Xkb allows applications ta obtain shiznit bout indicators rockin two 
different methods. Da first method, which is similar ta tha core X 
implementation, uses a mask ta specify tha indicators. Da second method, which 
is mo' suitable fo' applications concerned wit interoperability, uses 
indicator names. Da correspondence between tha indicator name n' tha bit 
posizzle up in masks be as bigs up: one of tha parametas returned from
.I XkbGetNamedIndicators 
is a index dat is tha bit posizzle ta use up in any function call dat requires a 
mask of indicator bits, as well as tha indicatorz index tha fuck into tha 
XkbIndicatorRec array of indicator maps.

.I XkbGetIndicatorState 
queries tha 
.I display 
for tha state of tha indicators on tha thang specified by tha 
.I device_spec. 
For each indicator dat is "turned on" on tha device, tha associated bit is set 
in 
.I state_return, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. 
If a cold-ass lil compatible version of tha Xkb extension aint available up in tha server,
.I XkbGetIndicatorState
returns a BadMatch error. Shiiit, dis aint no joke. Otherwise, it sendz tha request ta tha X server, 
places tha state of tha indicators tha fuck into 
.I state_return, 
and returns Success. Thus tha value reported by 
.I XkbGetIndicatorState 
is identical ta tha value reported by tha core protocol.
.SH DIAGNOSTICS
.TP 15
.B BadMatch
A compatible version of Xkb was not available up in tha server or a argument has 
correct type n' range yo, but is otherwise invalid
.SH "SEE ALSO"
.BR XkbGetNamedIndicators (3)

