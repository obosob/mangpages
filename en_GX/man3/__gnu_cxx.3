.TH "__gnu_cxx" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "\fB__detail\fP"
.br
.ti -1c
.RI "\fBtypelist\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fB__alloc_traits\fP"
.br
.ti -1c
.RI "struct \fB__common_pool_policy\fP"
.br
.ti -1c
.RI "class \fB__mt_alloc\fP"
.br
.ti -1c
.RI "class \fB__mt_alloc_base\fP"
.br
.ti -1c
.RI "struct \fB__per_type_pool_policy\fP"
.br
.ti -1c
.RI "class \fB__pool\fP"
.br
.ti -1c
.RI "class \fB__pool< false >\fP"
.br
.ti -1c
.RI "class \fB__pool< legit >\fP"
.br
.ti -1c
.RI "class \fB__pool_alloc\fP"
.br
.ti -1c
.RI "class \fB__pool_alloc_base\fP"
.br
.ti -1c
.RI "struct \fB__pool_base\fP"
.br
.ti -1c
.RI "class \fB__rc_string_base\fP"
.br
.ti -1c
.RI "class \fB__scoped_lock\fP"
.br
.ti -1c
.RI "class \fB__versa_string\fP"
.br
.ti -1c
.RI "struct \fB_Caster\fP"
.br
.ti -1c
.RI "struct \fB_Char_types\fP"
.br
.ti -1c
.RI "class \fB_ExtPtr_allocator\fP"
.br
.ti -1c
.RI "struct \fB_Invalid_type\fP"
.br
.ti -1c
.RI "class \fB_Pointer_adapter\fP"
.br
.ti -1c
.RI "class \fB_Relative_pointer_impl\fP"
.br
.ti -1c
.RI "class \fB_Relative_pointer_impl< const _Tp >\fP"
.br
.ti -1c
.RI "class \fB_Std_pointer_impl\fP"
.br
.ti -1c
.RI "struct \fB_Unqualified_type\fP"
.br
.ti -1c
.RI "struct \fBannotate_base\fP"
.br
.ti -1c
.RI "class \fBarray_allocator\fP"
.br
.ti -1c
.RI "class \fBarray_allocator_base\fP"
.br
.ti -1c
.RI "class \fBbinary_compose\fP"
.br
.ti -1c
.RI "class \fBbitmap_allocator\fP"
.br
.ti -1c
.RI "struct \fBchar_traits\fP"
.br
.ti -1c
.RI "struct \fBcharacter\fP"
.br
.ti -1c
.RI "struct \fBcondition_base\fP"
.br
.ti -1c
.RI "struct \fBconstant_binary_fun\fP"
.br
.ti -1c
.RI "struct \fBconstant_unary_fun\fP"
.br
.ti -1c
.RI "struct \fBconstant_void_fun\fP"
.br
.ti -1c
.RI "class \fBdebug_allocator\fP"
.br
.ti -1c
.RI "class \fBenc_filebuf\fP"
.br
.ti -1c
.RI "struct \fBencoding_char_traits\fP"
.br
.ti -1c
.RI "class \fBencoding_state\fP"
.br
.ti -1c
.RI "struct \fBforced_error\fP"
.br
.ti -1c
.RI "class \fBfree_list\fP"
.br
.ti -1c
.RI "class \fBhash_map\fP"
.br
.ti -1c
.RI "class \fBhash_multimap\fP"
.br
.ti -1c
.RI "class \fBhash_multiset\fP"
.br
.ti -1c
.RI "class \fBhash_set\fP"
.br
.ti -1c
.RI "struct \fBlimit_condition\fP"
.br
.ti -1c
.RI "class \fBmalloc_allocator\fP"
.br
.ti -1c
.RI "class \fBnew_allocator\fP"
.br
.ti -1c
.RI "struct \fBproject1st\fP"
.br
.ti -1c
.RI "struct \fBproject2nd\fP"
.br
.ti -1c
.RI "struct \fBrandom_condition\fP"
.br
.ti -1c
.RI "struct \fBrb_tree\fP"
.br
.ti -1c
.RI "class \fBrecursive_init_error\fP"
.br
.ti -1c
.RI "class \fBrope\fP"
.br
.ti -1c
.RI "struct \fBselect1st\fP"
.br
.ti -1c
.RI "struct \fBselect2nd\fP"
.br
.ti -1c
.RI "class \fBslist\fP"
.br
.ti -1c
.RI "class \fBstdio_filebuf\fP"
.br
.ti -1c
.RI "class \fBstdio_sync_filebuf\fP"
.br
.ti -1c
.RI "class \fBsubtractive_rng\fP"
.br
.ti -1c
.RI "struct \fBtemporary_buffer\fP"
.br
.ti -1c
.RI "class \fBthrow_allocator_base\fP"
.br
.ti -1c
.RI "struct \fBthrow_allocator_limit\fP"
.br
.ti -1c
.RI "struct \fBthrow_allocator_random\fP"
.br
.ti -1c
.RI "struct \fBthrow_value_base\fP"
.br
.ti -1c
.RI "struct \fBthrow_value_limit\fP"
.br
.ti -1c
.RI "struct \fBthrow_value_random\fP"
.br
.ti -1c
.RI "class \fBunary_compose\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fB__destroy_handlez\fP )(void *)"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP< char, 
.br
\fBstd::char_traits\fP< char >
.br
, \fBstd::allocator\fP< char >
.br
, \fB__rc_string_base\fP > \fB__rc_string\fP"
.br
.ti -1c
.RI "typedef \fB__vstring\fP \fB__sso_string\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP
.br
< char16_t, \fBstd::char_traits\fP
.br
< char16_t >, \fBstd::allocator\fP
.br
< char16_t >, \fB__rc_string_base\fP > \fB__u16rc_string\fP"
.br
.ti -1c
.RI "typedef \fB__u16vstring\fP \fB__u16sso_string\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP< char16_t > \fB__u16vstring\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP
.br
< char32_t, \fBstd::char_traits\fP
.br
< char32_t >, \fBstd::allocator\fP
.br
< char32_t >, \fB__rc_string_base\fP > \fB__u32rc_string\fP"
.br
.ti -1c
.RI "typedef \fB__u32vstring\fP \fB__u32sso_string\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP< char32_t > \fB__u32vstring\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP< char > \fB__vstring\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP
.br
< wchar_t, \fBstd::char_traits\fP
.br
< wchar_t >, \fBstd::allocator\fP
.br
< wchar_t >, \fB__rc_string_base\fP > \fB__wrc_string\fP"
.br
.ti -1c
.RI "typedef \fB__wvstring\fP \fB__wsso_string\fP"
.br
.ti -1c
.RI "typedef \fB__versa_string\fP< wchar_t > \fB__wvstring\fP"
.br
.ti -1c
.RI "typedef \fBrope\fP< char > \fBcrope\fP"
.br
.ti -1c
.RI "typedef \fBrope\fP< wchar_t > \fBwrope\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fB_S_num_primes\fP }"
.br
.ti -1c
.RI "enum \fB_Lock_policy\fP { \fB_S_single\fP, \fB_S_mutex\fP, \fB_S_atomic\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fB__atomic_add_single\fP (_Atomic_word *__mem, int __val)"
.br
.ti -1c
.RI "else \fB__atomic_add_single\fP (__mem, __val)"
.br
.ti -1c
.RI "_Atomic_word \fB__attribute__\fP ((__unused__)) __exchange_and_add(volatile _Atomic_word *"
.br
.ti -1c
.RI "template<class _Tp > void \fB__aux_require_boolean_expr\fP (const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__const_pointer_cast\fP (const _FromType &__arg)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__const_pointer_cast\fP (_FromType *__arg)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Size , typename _OutputIterator > \fBpair\fP< _InputIterator, 
.br
_OutputIterator > \fB__copy_n\fP (_InputIterator __first, _Size __count, _OutputIterator __result, \fBinput_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIterator , typename _Size , typename _OutputIterator > \fBpair\fP< _RAIterator, 
.br
_OutputIterator > \fB__copy_n\fP (_RAIterator __first, _Size __count, _OutputIterator __result, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Distizzle > void \fB__distance\fP (_InputIterator __first, _InputIterator __last, _Distizzle &__n, \fBstd::input_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _RandomAccessIterator , typename _Distizzle > void \fB__distance\fP (_RandomAccessIterator __first, _RandomAccessIterator __last, _Distizzle &__n, \fBstd::random_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__dynamic_pointer_cast\fP (const _FromType &__arg)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__dynamic_pointer_cast\fP (_FromType *__arg)"
.br
.ti -1c
.RI "void \fB__error_type_must_be_a_signed_integer_type\fP ()"
.br
.ti -1c
.RI "void \fB__error_type_must_be_an_integer_type\fP ()"
.br
.ti -1c
.RI "void \fB__error_type_must_be_an_unsigned_integer_type\fP ()"
.br
.ti -1c
.RI "static _Atomic_word \fB__exchange_and_add_single\fP (_Atomic_word *__mem, int __val)"
.br
.ti -1c
.RI "else return \fB__exchange_and_add_single\fP (__mem, __val)"
.br
.ti -1c
.RI "template<class _Concept > void \fB__function_requires\fP ()"
.br
.ti -1c
.RI "template<typename _Type > bool \fB__is_null_pointer\fP (_Type *__ptr)"
.br
.ti -1c
.RI "template<typename _Type > bool \fB__is_null_pointer\fP (_Type)"
.br
.ti -1c
.RI "template<typename _InputIterator1 , typename _InputIterator2 > int \fB__lexicographical_compare_3way\fP (_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)"
.br
.ti -1c
.RI "int \fB__lexicographical_compare_3way\fP (const unsigned char *__first1, const unsigned char *__last1, const unsigned char *__first2, const unsigned char *__last2)"
.br
.ti -1c
.RI "int \fB__lexicographical_compare_3way\fP (const char *__first1, const char *__last1, const char *__first2, const char *__last2)"
.br
.ti -1c
.RI "template<typename _Tp > const _Tp & \fB__median\fP (const _Tp &__a, const _Tp &__b, const _Tp &__c)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Compare > const _Tp & \fB__median\fP (const _Tp &__a, const _Tp &__b, const _Tp &__c, _Compare __comp)"
.br
.ti -1c
.RI "crope::reference \fB__mutable_reference_at\fP (\fBcrope\fP &__c, size_t __i)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Integer , typename _MonoidOperation > _Tp \fB__power\fP (_Tp __x, _Integer __n, _MonoidOperation __monoid_op)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Integer > _Tp \fB__power\fP (_Tp __x, _Integer __n)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _RandomAccessIterator , typename _Distizzle > _RandomAccessIterator \fB__random_sample\fP (_InputIterator __first, _InputIterator __last, _RandomAccessIterator __out, const _Distizzle __n)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _RandomAccessIterator , typename _RandomNumberGenerator , typename _Distizzle > _RandomAccessIterator \fB__random_sample\fP (_InputIterator __first, _InputIterator __last, _RandomAccessIterator __out, _RandomNumberGenerator &__rand, const _Distizzle __n)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__reinterpret_pointer_cast\fP (const _FromType &__arg)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__reinterpret_pointer_cast\fP (_FromType *__arg)"
.br
.ti -1c
.RI "_Slist_node_base * \fB__slist_make_link\fP (_Slist_node_base *__prev_node, _Slist_node_base *__new_node)"
.br
.ti -1c
.RI "_Slist_node_base * \fB__slist_previous\fP (_Slist_node_base *__head, const _Slist_node_base *__node)"
.br
.ti -1c
.RI "const _Slist_node_base * \fB__slist_previous\fP (const _Slist_node_base *__head, const _Slist_node_base *__node)"
.br
.ti -1c
.RI "_Slist_node_base * \fB__slist_reverse\fP (_Slist_node_base *__node)"
.br
.ti -1c
.RI "size_t \fB__slist_size\fP (_Slist_node_base *__node)"
.br
.ti -1c
.RI "void \fB__slist_splice_after\fP (_Slist_node_base *__pos, _Slist_node_base *__before_first, _Slist_node_base *__before_last)"
.br
.ti -1c
.RI "void \fB__slist_splice_after\fP (_Slist_node_base *__pos, _Slist_node_base *__head)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__static_pointer_cast\fP (const _FromType &__arg)"
.br
.ti -1c
.RI "template<typename _ToType , typename _FromType > _ToType \fB__static_pointer_cast\fP (_FromType *__arg)"
.br
.ti -1c
.RI "size_t \fB__stl_hash_string\fP (const char *__s)"
.br
.ti -1c
.RI "unsigned long \fB__stl_next_prime\fP (unsigned long __n)"
.br
.ti -1c
.RI "template<typename _TRet , typename _Ret  = _TRet, typename _CharT , typename\&.\&.\&. _Base> _Ret \fB__stoa\fP (_TRet(*__convf)(const _CharT *, _CharT **, _Base\&.\&.\&.), const char *__name, const _CharT *__str, std::size_t *__idx, _Base\&.\&.\&.__base)"
.br
.ti -1c
.RI "void \fB__throw_concurrence_lock_error\fP ()"
.br
.ti -1c
.RI "void \fB__throw_concurrence_unlock_error\fP ()"
.br
.ti -1c
.RI "void \fB__throw_forced_error\fP ()"
.br
.ti -1c
.RI "template<typename _Strin , typename _CharT  = typename _String::value_type> _Strin \fB__to_xstring\fP (int(*__convf)(_CharT *, std::size_t, const _CharT *, __builtin_va_list), std::size_t __n, const _CharT *__fmt,\&.\&.\&.)"
.br
.ti -1c
.RI "template<typename _InputIta , typename _Size , typename _ForwardIta > \fBpair\fP< _InputIter, _ForwardIta > \fB__uninitialized_copy_n\fP (_InputIta __first, _Size __count, _ForwardIta __result, \fBstd::input_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _RandomAccessIta , typename _Size , typename _ForwardIta > \fBpair\fP< _RandomAccessIter, 
.br
_ForwardIta > \fB__uninitialized_copy_n\fP (_RandomAccessIta __first, _Size __count, _ForwardIta __result, \fBstd::random_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _InputIta , typename _Size , typename _ForwardIta > \fBpair\fP< _InputIter, _ForwardIta > \fB__uninitialized_copy_n\fP (_InputIta __first, _Size __count, _ForwardIta __result)"
.br
.ti -1c
.RI "template<typename _InputIta , typename _Size , typename _ForwardIta , typename _Allocator > \fBpair\fP< _InputIter, _ForwardIta > \fB__uninitialized_copy_n_a\fP (_InputIta __first, _Size __count, _ForwardIta __result, _Allocator __alloc)"
.br
.ti -1c
.RI "template<typename _InputIta , typename _Size , typename _ForwardIta , typename _Tp > \fBpair\fP< _InputIter, _ForwardIta > \fB__uninitialized_copy_n_a\fP (_InputIta __first, _Size __count, _ForwardIta __result, \fBstd::allocator\fP< _Tp >)"
.br
.ti -1c
.RI "void \fB__verbose_terminate_handlez\fP ()"
.br
.ti -1c
.RI "size_t \fB_Bit_scan_forward\fP (size_t __num)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _Allocator > void \fB_Destroy_const\fP (_ForwardIterator __first, _ForwardIterator __last, _Allocator __alloc)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _Tp > void \fB_Destroy_const\fP (_ForwardIterator __first, _ForwardIterator __last, \fBallocator\fP< _Tp >)"
.br
.ti -1c
.RI "template<class _CharT , class _Traits > void \fB_Rope_fill\fP (\fBbasic_ostream\fP< _CharT, _Traits > &__o, size_t __n)"
.br
.ti -1c
.RI "template<class _CharT > bool \fB_Rope_is_simple\fP (_CharT *)"
.br
.ti -1c
.RI "bool \fB_Rope_is_simple\fP (char *)"
.br
.ti -1c
.RI "bool \fB_Rope_is_simple\fP (wchar_t *)"
.br
.ti -1c
.RI "template<class _Rope_iterator > void \fB_Rope_rotate\fP (_Rope_iterator __first, _Rope_iterator __middle, _Rope_iterator __last)"
.br
.ti -1c
.RI "template<class _CharT > void \fB_S_cond_store_eos\fP (_CharT &)"
.br
.ti -1c
.RI "void \fB_S_cond_store_eos\fP (char &__c)"
.br
.ti -1c
.RI "void \fB_S_cond_store_eos\fP (wchar_t &__c)"
.br
.ti -1c
.RI "template<class _CharT > _CharT \fB_S_eos\fP (_CharT *)"
.br
.ti -1c
.RI "template<class _CharT > bool \fB_S_is_basic_char_type\fP (_CharT *)"
.br
.ti -1c
.RI "bool \fB_S_is_basic_char_type\fP (char *)"
.br
.ti -1c
.RI "bool \fB_S_is_basic_char_type\fP (wchar_t *)"
.br
.ti -1c
.RI "template<class _CharT > bool \fB_S_is_one_byte_char_type\fP (_CharT *)"
.br
.ti -1c
.RI "bool \fB_S_is_one_byte_char_type\fP (char *)"
.br
.ti -1c
.RI "template<class _Operation1 , class _Operation2 > \fBunary_compose\fP< _Operation1, 
.br
_Operation2 > \fBcompose1\fP (const _Operation1 &__fn1, const _Operation2 &__fn2)"
.br
.ti -1c
.RI "template<class _Operation1 , class _Operation2 , class _Operation3 > \fBbinary_compose\fP< _Operation1, 
.br
_Operation2, _Operation3 > \fBcompose2\fP (const _Operation1 &__fn1, const _Operation2 &__fn2, const _Operation3 &__fn3)"
.br
.ti -1c
.RI "template<class _Result > \fBconstant_void_fun\fP< _Result > \fBconstant0\fP (const _Result &__val)"
.br
.ti -1c
.RI "template<class _Result > \fBconstant_unary_fun\fP< _Result, 
.br
_Result > \fBconstant1\fP (const _Result &__val)"
.br
.ti -1c
.RI "template<class _Result > \fBconstant_binary_fun\fP< _Result, 
.br
_Result, _Result > \fBconstant2\fP (const _Result &__val)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Size , typename _OutputIterator > \fBpair\fP< _InputIterator, 
.br
_OutputIterator > \fBcopy_n\fP (_InputIterator __first, _Size __count, _OutputIterator __result)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Tp , typename _Size > void \fBcount\fP (_InputIterator __first, _InputIterator __last, const _Tp &__value, _Size &__n)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Predicate , typename _Size > void \fBcount_if\fP (_InputIterator __first, _InputIterator __last, _Predicate __pred, _Size &__n)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Distizzle > void \fBdistance\fP (_InputIterator __first, _InputIterator __last, _Distizzle &__n)"
.br
.ti -1c
.RI "template<class _Tp > _Tp \fBidentity_element\fP (\fBstd::plus\fP< _Tp >)"
.br
.ti -1c
.RI "template<class _Tp > _Tp \fBidentity_element\fP (\fBstd::multiplies\fP< _Tp >)"
.br
.ti -1c
.RI "static _Atomic_word int __val \fBif\fP (__gthread_active_p()) return __exchange_and_add(__mem"
.br
.ti -1c
.RI "template<typename _InputIterator1 , typename _InputIterator2 > int \fBlexicographical_compare_3way\fP (_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)"
.br
.ti -1c
.RI "template<class _Ret , class _Tp , class _Arg > \fBmem_fun1_t\fP< _Ret, _Tp, _Arg > \fBmem_fun1\fP (_Ret(_Tp::*__f)(_Arg))"
.br
.ti -1c
.RI "template<class _Ret , class _Tp , class _Arg > \fBconst_mem_fun1_t\fP< _Ret, _Tp, _Arg > \fBmem_fun1\fP (_Ret(_Tp::*__f)(_Arg) const)"
.br
.ti -1c
.RI "template<class _Ret , class _Tp , class _Arg > \fBmem_fun1_ref_t\fP< _Ret, _Tp, _Arg > \fBmem_fun1_ref\fP (_Ret(_Tp::*__f)(_Arg))"
.br
.ti -1c
.RI "template<class _Ret , class _Tp , class _Arg > \fBconst_mem_fun1_ref_t\fP< _Ret, 
.br
_Tp, _Arg > \fBmem_fun1_ref\fP (_Ret(_Tp::*__f)(_Arg) const)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (const \fBnew_allocator\fP< _Tp > &, const \fBnew_allocator\fP< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (const \fBmalloc_allocator\fP< _Tp > &, const \fBmalloc_allocator\fP< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Array > bool \fBoperator!=\fP (const \fBarray_allocator\fP< _Tp, _Array > &, const \fBarray_allocator\fP< _Tp, _Array > &)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (const \fB__pool_alloc\fP< _Tp > &, const \fB__pool_alloc\fP< _Tp > &)"
.br
.ti -1c
.RI "template<class _Value , class _HashFcn , class _EqualKey , class _Alloc > bool \fBoperator!=\fP (const \fBhash_set\fP< _Value, _HashFcn, _EqualKey, _Alloc > &__hs1, const \fBhash_set\fP< _Value, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HashFn , class _EqlKey , class _Alloc > bool \fBoperator!=\fP (const \fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm1, const \fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > bool \fBoperator!=\fP (const \fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, const \fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HF , class _EqKey , class _Alloc > bool \fBoperator!=\fP (const \fBhash_multimap\fP< _Key, _Tp, _HF, _EqKey, _Alloc > &__hm1, const \fBhash_multimap\fP< _Key, _Tp, _HF, _EqKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator!=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator!=\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator!=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, int __rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (int __lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator!=\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Cond > bool \fBoperator!=\fP (const \fBthrow_allocator_base\fP< _Tp, _Cond > &, const \fBthrow_allocator_base\fP< _Tp, _Cond > &)"
.br
.ti -1c
.RI "template<class _Val , class _Key , class _HF , class _Ex , class _Eq , class _All > bool \fBoperator!=\fP (const hashtable< _Val, _Key, _HF, _Ex, _Eq, _All > &__ht1, const hashtable< _Val, _Key, _HF, _Ex, _Eq, _All > &__ht2)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Poolp > bool \fBoperator!=\fP (const \fB__mt_alloc\fP< _Tp, _Poolp > &, const \fB__mt_alloc\fP< _Tp, _Poolp > &)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator!=\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator!=\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator!=\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator!=\fP (const \fBbitmap_allocator\fP< _Tp1 > &, const \fBbitmap_allocator\fP< _Tp2 > &)  throw ()"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator!=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator!=\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator!=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator!=\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator!=\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator!=\fP (const \fBrope\fP< _CharT, _Alloc > &__x, const \fBrope\fP< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator!=\fP (const _Rope_char_ptr_proxy< _CharT, _Alloc > &__x, const _Rope_char_ptr_proxy< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Cond > \fBthrow_value_base\fP< _Cond > \fBoperator*\fP (const \fBthrow_value_base\fP< _Cond > &__a, const \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_const_iterator< _CharT, 
.br
_Alloc > \fBoperator+\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, ptrdiff_t __n)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_const_iterator< _CharT, 
.br
_Alloc > \fBoperator+\fP (ptrdiff_t __n, const _Rope_const_iterator< _CharT, _Alloc > &__x)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_iterator< _CharT, _Alloc > \fBoperator+\fP (const _Rope_iterator< _CharT, _Alloc > &__x, ptrdiff_t __n)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_iterator< _CharT, _Alloc > \fBoperator+\fP (ptrdiff_t __n, const _Rope_iterator< _CharT, _Alloc > &__x)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > \fBoperator+\fP (const \fBrope\fP< _CharT, _Alloc > &__left, const \fBrope\fP< _CharT, _Alloc > &__right)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > \fBoperator+\fP (const \fBrope\fP< _CharT, _Alloc > &__left, const _CharT *__right)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > \fBoperator+\fP (const \fBrope\fP< _CharT, _Alloc > &__left, _CharT __right)"
.br
.ti -1c
.RI "template<typename _Cond > \fBthrow_value_base\fP< _Cond > \fBoperator+\fP (const \fBthrow_value_base\fP< _Cond > &__a, const \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > __normal_iterator< _Iterator, 
.br
_Container > \fBoperator+\fP (typename __normal_iterator< _Iterator, _Container >::difference_type __n, const __normal_iterator< _Iterator, _Container > &__i)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (_CharT __lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, _CharT __rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (\fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (\fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__lhs, \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (const _CharT *__lhs, \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (_CharT __lhs, \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (\fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, 
.br
_Traits, _Alloc, _Base > \fBoperator+\fP (\fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &&__lhs, _CharT __rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > & \fBoperator+=\fP (\fBrope\fP< _CharT, _Alloc > &__left, const \fBrope\fP< _CharT, _Alloc > &__right)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > & \fBoperator+=\fP (\fBrope\fP< _CharT, _Alloc > &__left, const _CharT *__right)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > & \fBoperator+=\fP (\fBrope\fP< _CharT, _Alloc > &__left, _CharT __right)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_const_iterator< _CharT, 
.br
_Alloc > \fBoperator-\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, ptrdiff_t __n)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > ptrdiff_t \fBoperator-\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > _Rope_iterator< _CharT, _Alloc > \fBoperator-\fP (const _Rope_iterator< _CharT, _Alloc > &__x, ptrdiff_t __n)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > ptrdiff_t \fBoperator-\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Cond > \fBthrow_value_base\fP< _Cond > \fBoperator-\fP (const \fBthrow_value_base\fP< _Cond > &__a, const \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > auto \fBoperator-\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs) -> decltype(__lhs\&.base()-__rhs\&.base())"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > __normal_iterator< _Iterator, 
.br
_Container >::difference_type \fBoperator-\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename V , typename I , typename S > bool \fBoperator<\fP (const \fBcharacter\fP< V, I, S > &lhs, const \fBcharacter\fP< V, I, S > &rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Cond > bool \fBoperator<\fP (const \fBthrow_value_base\fP< _Cond > &__a, const \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator<\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator<\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator<\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<\fP (const \fBrope\fP< _CharT, _Alloc > &__left, const \fBrope\fP< _CharT, _Alloc > &__right)"
.br
.ti -1c
.RI "\fBstd::ostream\fP & \fBoperator<<\fP (\fBstd::ostream\fP &os, const \fBannotate_base\fP &__b)"
.br
.ti -1c
.RI "template<typename _UIntType , size_t __m, size_t __pos1, size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2, uint32_t __msk1, uint32_t __msk2, uint32_t __msk3, uint32_t __msk4, uint32_t __parity1, uint32_t __parity2, uint32_t __parity3, uint32_t __parity4, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const __gnu_cxx::simd_fast_mersenne_twister_engine< _UIntType, __m, __pos1, __sl1, __sl2, __sr1, __sr2, __msk1, __msk2, __msk3, __msk4, __parity1, __parity2, __parity3, __parity4 > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const __gnu_cxx::beta_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _StoreT > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fB_Pointer_adapter\fP< _StoreT > &__p)"
.br
.ti -1c
.RI "template<size_t _Dimen, typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const __gnu_cxx::normal_mv_distribution< _Dimen, _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const rice_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const nakagami_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const pareto_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const k_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<class _CharT , class _Traits , class _Alloc > \fBbasic_ostream\fP< _CharT, _Traits > & \fBoperator<<\fP (\fBbasic_ostream\fP< _CharT, _Traits > &__o, const \fBrope\fP< _CharT, _Alloc > &__r)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const arcsine_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const hoyt_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const __gnu_cxx::triangular_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const __gnu_cxx::von_mises_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<class _CharT , class _Traits , class _Alloc > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__o, const \fBrope\fP< _CharT, _Alloc > &__r)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<=\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator<=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator<=\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator<=\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator<=\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator<=\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator<=\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<=\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<=\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator<=\fP (const \fBrope\fP< _CharT, _Alloc > &__x, const \fBrope\fP< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename V , typename I , typename S > bool \fBoperator==\fP (const \fBcharacter\fP< V, I, S > &lhs, const \fBcharacter\fP< V, I, S > &rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (const \fBnew_allocator\fP< _Tp > &, const \fBnew_allocator\fP< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (const \fBmalloc_allocator\fP< _Tp > &, const \fBmalloc_allocator\fP< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Array > bool \fBoperator==\fP (const \fBarray_allocator\fP< _Tp, _Array > &, const \fBarray_allocator\fP< _Tp, _Array > &)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (const \fB__pool_alloc\fP< _Tp > &, const \fB__pool_alloc\fP< _Tp > &)"
.br
.ti -1c
.RI "template<class _Val , class _Key , class _HF , class _Ex , class _Eq , class _All > bool \fBoperator==\fP (const hashtable< _Val, _Key, _HF, _Ex, _Eq, _All > &__ht1, const hashtable< _Val, _Key, _HF, _Ex, _Eq, _All > &__ht2)"
.br
.ti -1c
.RI "template<class _Value , class _HashFcn , class _EqualKey , class _Alloc > bool \fBoperator==\fP (const \fBhash_set\fP< _Value, _HashFcn, _EqualKey, _Alloc > &__hs1, const \fBhash_set\fP< _Value, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HashFn , class _EqlKey , class _Alloc > bool \fBoperator==\fP (const \fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm1, const \fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<typename _UIntType , size_t __m, size_t __pos1, size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2, uint32_t __msk1, uint32_t __msk2, uint32_t __msk3, uint32_t __msk4, uint32_t __parity1, uint32_t __parity2, uint32_t __parity3, uint32_t __parity4> bool \fBoperator==\fP (const __gnu_cxx::simd_fast_mersenne_twister_engine< _UIntType, __m, __pos1, __sl1, __sl2, __sr1, __sr2, __msk1, __msk2, __msk3, __msk4, __parity1, __parity2, __parity3, __parity4 > &__lhs, const __gnu_cxx::simd_fast_mersenne_twister_engine< _UIntType, __m, __pos1, __sl1, __sl2, __sr1, __sr2, __msk1, __msk2, __msk3, __msk4, __parity1, __parity2, __parity3, __parity4 > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator==\fP (const _Rope_char_ptr_proxy< _CharT, _Alloc > &__x, const _Rope_char_ptr_proxy< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator==\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator==\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > bool \fBoperator==\fP (const \fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, const \fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HF , class _EqKey , class _Alloc > bool \fBoperator==\fP (const \fBhash_multimap\fP< _Key, _Tp, _HF, _EqKey, _Alloc > &__hm1, const \fBhash_multimap\fP< _Key, _Tp, _HF, _EqKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator==\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator==\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator==\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, int __rhs)"
.br
.ti -1c
.RI "template<typename _Cond > bool \fBoperator==\fP (const \fBthrow_value_base\fP< _Cond > &__a, const \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (int __lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator==\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<size_t _Dimen, typename _RealType > bool \fBoperator==\fP (const __gnu_cxx::normal_mv_distribution< _Dimen, _RealType > &__d1, const __gnu_cxx::normal_mv_distribution< _Dimen, _RealType > &__d2)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Cond > bool \fBoperator==\fP (const \fBthrow_allocator_base\fP< _Tp, _Cond > &, const \fBthrow_allocator_base\fP< _Tp, _Cond > &)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Poolp > bool \fBoperator==\fP (const \fB__mt_alloc\fP< _Tp, _Poolp > &, const \fB__mt_alloc\fP< _Tp, _Poolp > &)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator==\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator==\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator==\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator==\fP (const \fBbitmap_allocator\fP< _Tp1 > &, const \fBbitmap_allocator\fP< _Tp2 > &)  throw ()"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator==\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , template< typename, typename, typename > class _Base> __enable_if< std::__is_char
.br
< _CharT >::__value, bool >
.br
::__type \fBoperator==\fP (const \fB__versa_string\fP< _CharT, \fBstd::char_traits\fP< _CharT >, \fBstd::allocator\fP< _CharT >, _Base > &__lhs, const \fB__versa_string\fP< _CharT, \fBstd::char_traits\fP< _CharT >, \fBstd::allocator\fP< _CharT >, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator==\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator==\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator==\fP (const \fBrope\fP< _CharT, _Alloc > &__left, const \fBrope\fP< _CharT, _Alloc > &__right)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator>\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator>\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator>\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator>\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>\fP (const \fBrope\fP< _CharT, _Alloc > &__x, const \fBrope\fP< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, _Tp2 __rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>=\fP (const \fB_Pointer_adapter\fP< _Tp1 > &__lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp1 , typename _Tp2 > bool \fBoperator>=\fP (_Tp1 __lhs, const \fB_Pointer_adapter\fP< _Tp2 > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBoperator>=\fP (const \fB_Pointer_adapter\fP< _Tp > &__lhs, const \fB_Pointer_adapter\fP< _Tp > &__rhs)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fBoperator>=\fP (const \fBslist\fP< _Tp, _Alloc > &_SL1, const \fBslist\fP< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<typename _IteratorL , typename _IteratorR , typename _Container > bool \fBoperator>=\fP (const __normal_iterator< _IteratorL, _Container > &__lhs, const __normal_iterator< _IteratorR, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Container > bool \fBoperator>=\fP (const __normal_iterator< _Iterator, _Container > &__lhs, const __normal_iterator< _Iterator, _Container > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>=\fP (const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool \fBoperator>=\fP (const _CharT *__lhs, const \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>=\fP (const _Rope_const_iterator< _CharT, _Alloc > &__x, const _Rope_const_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>=\fP (const _Rope_iterator< _CharT, _Alloc > &__x, const _Rope_iterator< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > bool \fBoperator>=\fP (const \fBrope\fP< _CharT, _Alloc > &__x, const \fBrope\fP< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _UIntType , size_t __m, size_t __pos1, size_t __sl1, size_t __sl2, size_t __sr1, size_t __sr2, uint32_t __msk1, uint32_t __msk2, uint32_t __msk3, uint32_t __msk4, uint32_t __parity1, uint32_t __parity2, uint32_t __parity3, uint32_t __parity4, typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, __gnu_cxx::simd_fast_mersenne_twister_engine< _UIntType, __m, __pos1, __sl1, __sl2, __sr1, __sr2, __msk1, __msk2, __msk3, __msk4, __parity1, __parity2, __parity3, __parity4 > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, __gnu_cxx::beta_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<size_t _Dimen, typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, __gnu_cxx::normal_mv_distribution< _Dimen, _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, rice_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, nakagami_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, pareto_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, k_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, arcsine_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, hoyt_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, __gnu_cxx::triangular_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _RealType , typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, __gnu_cxx::von_mises_distribution< _RealType > &__x)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Integer , typename _MonoidOperation > _Tp \fBpower\fP (_Tp __x, _Integer __n, _MonoidOperation __monoid_op)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Integer > _Tp \fBpower\fP (_Tp __x, _Integer __n)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _RandomAccessIterator > _RandomAccessIterator \fBrandom_sample\fP (_InputIterator __first, _InputIterator __last, _RandomAccessIterator __out_first, _RandomAccessIterator __out_last)"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _RandomAccessIterator , typename _RandomNumberGenerator > _RandomAccessIterator \fBrandom_sample\fP (_InputIterator __first, _InputIterator __last, _RandomAccessIterator __out_first, _RandomAccessIterator __out_last, _RandomNumberGenerator &__rand)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _OutputIterator , typename _Distizzle > _OutputIterator \fBrandom_sample_n\fP (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __out, const _Distizzle __n)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _OutputIterator , typename _Distizzle , typename _RandomNumberGenerator > _OutputIterator \fBrandom_sample_n\fP (_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __out, const _Distizzle __n, _RandomNumberGenerator &__rand)"
.br
.ti -1c
.RI "void \fBrotate\fP (_Rope_iterator< char, __STL_DEFAULT_ALLOCATOR(char)> __first, _Rope_iterator< char, __STL_DEFAULT_ALLOCATOR(char)> __middle, _Rope_iterator< char, __STL_DEFAULT_ALLOCATOR(char)> __last)"
.br
.ti -1c
.RI "template<typename _Tp > void \fBswap\fP (\fB_ExtPtr_allocator\fP< _Tp > &__larg, \fB_ExtPtr_allocator\fP< _Tp > &__rarg)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > void \fBswap\fP (\fBhash_set\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, \fBhash_set\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HashFn , class _EqlKey , class _Alloc > void \fBswap\fP (\fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm1, \fBhash_map\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > void \fBswap\fP (\fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, \fBhash_multiset\fP< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<typename _Cond > void \fBswap\fP (\fBthrow_value_base\fP< _Cond > &__a, \fBthrow_value_base\fP< _Cond > &__b)"
.br
.ti -1c
.RI "template<class _Key , class _Tp , class _HashFn , class _EqlKey , class _Alloc > void \fBswap\fP (\fBhash_multimap\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm1, \fBhash_multimap\fP< _Key, _Tp, _HashFn, _EqlKey, _Alloc > &__hm2)"
.br
.ti -1c
.RI "template<class _Val , class _Key , class _HF , class _Extract , class _EqKey , class _All > void \fBswap\fP (hashtable< _Val, _Key, _HF, _Extract, _EqKey, _All > &__ht1, hashtable< _Val, _Key, _HF, _Extract, _EqKey, _All > &__ht2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > void \fBswap\fP (\fBslist\fP< _Tp, _Alloc > &__x, \fBslist\fP< _Tp, _Alloc > &__y)"
.br
.ti -1c
.RI "template<class _CharT , class __Alloc > void \fBswap\fP (_Rope_char_ref_proxy< _CharT, __Alloc > __a, _Rope_char_ref_proxy< _CharT, __Alloc > __b)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> void \fBswap\fP (\fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__lhs, \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > &__rhs)"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > void \fBswap\fP (\fBrope\fP< _CharT, _Alloc > &__x, \fBrope\fP< _CharT, _Alloc > &__y)"
.br
.ti -1c
.RI "_Atomic_word int \fBthrow\fP ()"
.br
.ti -1c
.RI "template<typename _InputIta , typename _Size , typename _ForwardIta > \fBpair\fP< _InputIter, _ForwardIta > \fBuninitialized_copy_n\fP (_InputIta __first, _Size __count, _ForwardIta __result)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static const _Lock_policy \fB__default_lock_policy\fP"
.br
.ti -1c
.RI "static _Atomic_word int __val \fB__val\fP"
.br
.ti -1c
.RI "template<class _CharT , class _Alloc > \fBrope\fP< _CharT, _Alloc > \fBidentity_element\fP (_Rope_Concat_fn< _CharT, _Alloc >)"
.br
.in -1c
.SH "Detailed Description"
.PP 
GNU extensions fo' hood use\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename _ToType , typename _FromType > _ToType __gnu_cxx::__static_pointer_cast (const _FromType &__arg)\fC [inline]\fP"
Castin operations fo' cases where _FromType aint a standard pointer\&. _ToType can be a standard or non-standard pointer\&. Given dat _FromType aint a pointer, it must gotz a get() method dat returns tha standard pointa equivalent of tha address it points to, n' must have a element_type typedef which names tha type it points to\&. 
.PP
Definizzle at line 68 of file cast\&.h\&.
.SS "template<typename _ToType , typename _FromType > _ToType __gnu_cxx::__static_pointer_cast (_FromType *__arg)\fC [inline]\fP"
Castin operations fo' cases where _FromType be a standard pointer\&. _ToType can be a standard or non-standard pointer\&. 
.PP
Definizzle at line 96 of file cast\&.h\&.
.SS "size_t __gnu_cxx::_Bit_scan_forward (size_t__num)\fC [inline]\fP"

.PP
Generic Version of tha bsf instruction\&. 
.PP
Definizzle at line 513 of file bitmap_allocator\&.h\&.
.PP
Referenced by __gnu_cxx::bitmap_allocator< typename >::_M_allocate_single_object()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator!= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test difference of two strings\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\&.compare\fP(\fI__rhs\fP) != 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2279 of file vstring\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator!= (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test difference of C strang n' string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__rhs\&.compare\fP(\fI__lhs\fP) != 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2292 of file vstring\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator!= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test difference of strang n' C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\&.compare\fP(\fI__rhs\fP) != 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2305 of file vstring\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > __gnu_cxx::operator+ (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)"

.PP
Concatenate two strings\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Last string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New strang wit value of \fI__lhs\fP followed by \fI__rhs\fP\&. 
.RE
.PP

.PP
Definizzle at line 180 of file vstring\&.tcc\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::append(), __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::reserve(), n' __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::size()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > __gnu_cxx::operator+ (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)"

.PP
Concatenate C strang n' string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Last string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New strang wit value of \fI__lhs\fP followed by \fI__rhs\fP\&. 
.RE
.PP

.PP
Definizzle at line 193 of file vstring\&.tcc\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::size()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > __gnu_cxx::operator+ (_CharT__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)"

.PP
Concatenate characta n' string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Last string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New strang wit \fI__lhs\fP followed by \fI__rhs\fP\&. 
.RE
.PP

.PP
Definizzle at line 210 of file vstring\&.tcc\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::append(), __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::push_back(), __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::reserve(), n' __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::size()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > __gnu_cxx::operator+ (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)"

.PP
Concatenate strang n' C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Last string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New strang wit \fI__lhs\fP followed by \fI__rhs\fP\&. 
.RE
.PP

.PP
Definizzle at line 223 of file vstring\&.tcc\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::size()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> \fB__versa_string\fP< _CharT, _Traits, _Alloc, _Base > __gnu_cxx::operator+ (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, _CharT__rhs)"

.PP
Concatenate strang n' character\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Last string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
New strang wit \fI__lhs\fP followed by \fI__rhs\fP\&. 
.RE
.PP

.PP
Definizzle at line 240 of file vstring\&.tcc\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::append(), __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::push_back(), __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::reserve(), n' __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::size()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator< (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if strang precedes string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP precedes \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2319 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator< (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test if strang precedes C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP precedes \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2332 of file vstring\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator< (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if C strang precedes string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP precedes \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2345 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator<= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if strang don't follow string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't follow \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2399 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator<= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test if strang don't follow C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't follow \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2412 of file vstring\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator<= (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if C strang don't follow string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't follow \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2425 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _Tp > bool __gnu_cxx::operator== (const _Pointer_adapter< _Tp > &__lhs, const _Pointer_adapter< _Tp > &__rhs)\fC [inline]\fP"
Comparison operators fo' _Pointer_adapta defer ta tha base class' comparison operators, when possible\&. 
.PP
Definizzle at line 529 of file pointer\&.h\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator== (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test equivalence of two strings\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\&.compare\fP(\fI__rhs\fP) == 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2228 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator== (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test equivalence of C strang n' string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__rhs\&.compare\fP(\fI__lhs\fP) == 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2252 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator== (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test equivalence of strang n' C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\&.compare\fP(\fI__rhs\fP) == 0\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2265 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator> (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if strang bigs up string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP bigs up \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2359 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator> (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test if strang bigs up C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP bigs up \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2372 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator> (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if C strang bigs up string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP bigs up \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2385 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator>= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if strang don't precede string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't precede \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2439 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator>= (const __versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, const _CharT *__rhs)\fC [inline]\fP"

.PP
Test if strang don't precede C string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP String\&. 
.br
\fI__rhs\fP C string\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't precede \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2452 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> bool __gnu_cxx::operator>= (const _CharT *__lhs, const __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Test if C strang don't precede string\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP C string\&. 
.br
\fI__rhs\fP String\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if \fI__lhs\fP don't precede \fI__rhs\fP\&. False otherwise\&. 
.RE
.PP

.PP
Definizzle at line 2465 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::compare()\&.
.SS "template<typename _CharT , typename _Traits , typename _Alloc , template< typename, typename, typename > class _Base> void __gnu_cxx::swap (__versa_string< _CharT, _Traits, _Alloc, _Base > &__lhs, __versa_string< _CharT, _Traits, _Alloc, _Base > &__rhs)\fC [inline]\fP"

.PP
Swap contentz of two strings\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP First string\&. 
.br
\fI__rhs\fP Second string\&.
.RE
.PP
Exchanges tha contentz of \fI__lhs\fP n' \fI__rhs\fP up in constant time\&. 
.PP
Definizzle at line 2479 of file vstring\&.h\&.
.PP
References __gnu_cxx::__versa_string< _CharT, _Traits, _Alloc, _Base >::swap()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
