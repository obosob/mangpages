.\" Copyright (C) 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\" n' Copyright (C) 2005, Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sat Jul 24 18:05:30 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Fri Feb 16 14:25:17 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Sun Jul 21 20:55:44 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Mon Oct 15 21:16:25 2001 by Jizzy Levon <moz@compsoc.man.ac.uk>
.\" Modified Tue Oct 16 00:04:43 2001 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Fri Jun 20 03:04:30 2003 by Andries Brouwer <aeb@cwi.nl>
.\" 2005-12-13, mtk, Substantial rewrite of strerror_r() description
.\"         Addizzle of extra material on portabilitizzle n' standards.
.\"
.TH STRERROR 3  2013-06-21 "" "Linux Programmerz Manual"
.SH NAME
strerror, strerror_r \- return strang describin error number
.SH SYNOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *strerror(int " errnum );
.sp
.BI "int strerror_r(int " errnum ", char *" buf ", size_t " buflen );
            /* XSI-compliant */
.sp
.BI "char *strerror_r(int " errnum ", char *" buf ", size_t " buflen );
            /* GNU-specific */
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
Da XSI-compliant version of
.BR strerror_r ()
is provided if:
.br
(_POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600) && !\ _GNU_SOURCE
.br
Otherwise, tha GNU-specific version is provided.
.SH DESCRIPTION
The
.BR strerror ()
function returns a pointa ta a strang dat raps bout tha error
code passed up in tha argument
.IR errnum ,
possibly rockin the
.B LC_MESSAGES
part of tha current locale ta select tha appropriate language.
(For example, if
.I errnum
is
.BR EINVAL ,
the returned description will "Invalid argument".)
This strang must not be modified by tha application yo, but may be
modified by a subsequent call to
.BR strerror ().
No library function, including
.BR perror (3),
will modify dis string.

The
.BR strerror_r ()
function is similar to
.BR strerror (),
but is
thread safe.
This function be available up in two versions:
an XSI-compliant version specified up in POSIX.1-2001
(available since glibc 2.3.4 yo, but not POSIX-compliant until glibc 2.13),
and a GNU-specific version (available since glibc 2.0).
Da XSI-compliant version is provided wit tha feature test macros
settings shown up in tha SYNOPSIS;
otherwise tha GNU-specific version is provided.
If no feature test macros is explicitly defined,
then (since glibc 2.4)
.B _POSIX_SOURCE
is defined by default wit tha value
200112L, so dat tha XSI-compliant version of
.BR strerror_r ()
is provided by default.

Da XSI-compliant
.BR strerror_r ()
is preferred fo' portable applications.
It returns tha error strang up in tha user-supplied buffer
.I buf
of length
.IR buflen .

Da GNU-specific
.BR strerror_r ()
returns a pointa ta a strang containin tha error message.
This may be either a pointa ta a strang dat tha function stores in
.IR buf ,
or a pointa ta some (immutable) static string
(in which case
.I buf
is unused).
If tha function stores a strang in
.IR buf ,
then at most
.I buflen
bytes is stored (the strang may be truncated if
.I buflen
is too lil' small-ass and
.I errnum
is unknown).
Da strang always includes a terminatin null byte (\(aq\\0\(aq).
.SH RETURN VALUE
The
.BR strerror ()
and tha GNU-specific
.BR strerror_r ()
functions return
the appropriate error description string,
or a "Unknown error nnn" message if tha error number is unknown.

POSIX.1-2001 n' POSIX.1-2008 require dat a successful call to
.BR strerror ()
shall leave
.I errno
unchanged, n' note that,
since no function return value is reserved ta indicate a error,
an application dat wishes ta check fo' errors should initialize
.I errno
to zero before tha call,
and then check
.I errno
afta tha call.

Da XSI-compliant
.BR strerror_r ()
function returns 0 on success.
On error,
a (positive) error number is returned (since glibc 2.13),
or \-1 is returned and
.I errno
is set ta indicate tha error (glibc versions before 2.13).
.SH ERRORS
.TP
.B EINVAL
Da value of
.I errnum
is not a valid error number.
.TP
.B ERANGE
Insufficient storage was supplied ta contain tha error description string.
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR strerror ()
function aint thread-safe.
.LP
The
.BR strerror_r ()
function is thread-safe.
.SH CONFORMING TO
.BR strerror ()
is specified by POSIX.1-2001, C89, C99.
.BR strerror_r ()
is specified by POSIX.1-2001.

Da GNU-specific
.BR strerror_r ()
function be a nonstandard extension.

POSIX.1-2001 permits
.BR strerror ()
to set
.I errno
if tha call encountas a error yo, but do not specify what
value should be returned as tha function result up in tha event of a error.
On some systems,
.\" e.g., Solaris 8, HP-UX 11
.BR strerror ()
returns NULL if tha error number is unknown.
On other systems,
.\" e.g., FreeBSD 5.4, Tru64 5.1B
.BR strerror ()
returns a strang suttin' like "Error nnn occurred" n' sets
.I errno
to
.B EINVAL
if tha error number is unknown.
C99 n' POSIX.1-2008 require tha return value ta be non-NULL.
.SH SEE ALSO
.BR err (3),
.BR errno (3),
.BR error (3),
.BR perror (3),
.BR strsignal (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
