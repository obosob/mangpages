" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::exponential_distribution< _RealType > \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBparam_type\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _RealType \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBexponential_distribution\fP (const \fBresult_type\fP &__lambda=\fBresult_type\fP(1))"
.br
.ti -1c
.RI "\fBexponential_distribution\fP (const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _UniformRandomNumberGenerator > void \fB__generate\fP (_ForwardIterator __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > void \fB__generate\fP (\fBresult_type\fP *__f, \fBresult_type\fP *__t, _UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "_RealType \fBlambda\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng)"
.br
.ti -1c
.RI "template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBoperator()\fP (_UniformRandomNumberGenerator &__urng, const \fBparam_type\fP &__p)"
.br
.ti -1c
.RI "\fBparam_type\fP \fBparam\fP () const "
.br
.ti -1c
.RI "void \fBparam\fP (const \fBparam_type\fP &__param)"
.br
.ti -1c
.RI "void \fBreset\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "bool \fBoperator==\fP (const \fBexponential_distribution\fP &__d1, const \fBexponential_distribution\fP &__d2)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _RealType = double>class std::exponential_distribution< _RealType >"
An exponential continuous distribution fo' random numbers\&. 

Da formula fo' tha exponential probabilitizzle densitizzle function is $p(x|\lambda) = \lambda e^{-\lambda x}$\&.
.PP
Mean$\frac{1}{\lambda}$ Median$\frac{\ln 2}{\lambda}$ Mode$zero$ Range$[0, \infty]$ Standard Deviation$\frac{1}{\lambda}$ Distribution Statistics
.PP
Definizzle at line 4646 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _RealType = double> typedef _RealType \fBstd::exponential_distribution\fP< _RealType >::\fBresult_type\fP"
Da type of tha range of tha distribution\&. 
.PP
Definizzle at line 4649 of file random\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _RealType = double> \fBstd::exponential_distribution\fP< _RealType >::\fBexponential_distribution\fP (const \fBresult_type\fP &__lambda = \fC\fBresult_type\fP(1)\fP)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Constructs a exponential distribution wit inverse scale parameta $\lambda$\&. 
.PP
Definizzle at line 4684 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _RealType = double> _RealType \fBstd::exponential_distribution\fP< _RealType >::lambda () const\fC [inline]\fP"

.PP
Returns tha inverse scale parameta of tha distribution\&. 
.PP
Definizzle at line 4705 of file random\&.h\&.
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::exponential_distribution\fP< _RealType >::max () const\fC [inline]\fP"

.PP
Returns tha least upper bound value of tha distribution\&. 
.PP
Definizzle at line 4734 of file random\&.h\&.
.PP
References std::numeric_limits< _Tp >::max()\&.
.SS "template<typename _RealType = double> \fBresult_type\fP \fBstd::exponential_distribution\fP< _RealType >::min () const\fC [inline]\fP"

.PP
Returns tha top billin lower bound value of tha distribution\&. 
.PP
Definizzle at line 4727 of file random\&.h\&.
.SS "template<typename _RealType = double> template<typename _UniformRandomNumberGenerator > \fBresult_type\fP \fBstd::exponential_distribution\fP< _RealType >::operator() (_UniformRandomNumberGenerator &__urng)\fC [inline]\fP"

.PP
Generatin functions\&. 
.PP
Definizzle at line 4742 of file random\&.h\&.
.SS "template<typename _RealType = double> \fBparam_type\fP \fBstd::exponential_distribution\fP< _RealType >::param () const\fC [inline]\fP"

.PP
Returns tha parameta set of tha distribution\&. 
.PP
Definizzle at line 4712 of file random\&.h\&.
.PP
Referenced by std::operator>>()\&.
.SS "template<typename _RealType = double> void \fBstd::exponential_distribution\fP< _RealType >::param (const \fBparam_type\fP &__param)\fC [inline]\fP"

.PP
Sets tha parameta set of tha distribution\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__param\fP Da freshly smoked up parameta set of tha distribution\&. 
.RE
.PP

.PP
Definizzle at line 4720 of file random\&.h\&.
.SS "template<typename _RealType = double> void \fBstd::exponential_distribution\fP< _RealType >::reset ()\fC [inline]\fP"

.PP
Resets tha distribution state\& yo. Has no effect on exponential distributions\&. 
.PP
Definizzle at line 4699 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _RealType = double> bool operator== (const \fBexponential_distribution\fP< _RealType > &__d1, const \fBexponential_distribution\fP< _RealType > &__d2)\fC [friend]\fP"

.PP
Return legit if two exponential distributions have tha same parameters\&. 
.PP
Definizzle at line 4782 of file random\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
