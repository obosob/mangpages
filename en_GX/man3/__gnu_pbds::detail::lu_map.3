" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::lu_map< Key, Mapped, Eq_Fn, _Alloc, Update_Policy > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fB__gnu_pbds::detail::types_traits< Key, Mapped, _Alloc, false >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::pair\fP< size_type, 
.br
size_type > \fBcomp_hash\fP"
.br
.ti -1c
.RI "typedef \fBconst_iterator_\fP \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef _Alloc::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef Eq_Fn \fBeq_fn\fP"
.br
.ti -1c
.RI "typedef \fBiterator_\fP \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_pointa \fBkey_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::key_const_reference \fBkey_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_pointa \fBkey_pointer\fP"
.br
.ti -1c
.RI "typedef traits_base::key_reference \fBkey_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::key_type \fBkey_type\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_pointa \fBmapped_const_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_const_reference \fBmapped_const_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_pointa \fBmapped_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
traits_base::mapped_reference \fBmapped_reference\fP"
.br
.ti -1c
.RI "typedef traits_base::mapped_type \fBmapped_type\fP"
.br
.ti -1c
.RI "typedef __nothrowcopy::indicator \fBno_throw_indicator\fP"
.br
.ti -1c
.RI "typedef \fBpoint_const_iterator_\fP \fBpoint_const_iterator\fP"
.br
.ti -1c
.RI "typedef \fBpoint_iterator_\fP \fBpoint_iterator\fP"
.br
.ti -1c
.RI "typedef traits_base::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef traits_base::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef _Alloc::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "typedef integral_constant< int, 
.br
Store_Hash > \fBstore_extra\fP"
.br
.ti -1c
.RI "typedef 
.br
Update_Policy::metadata_type \fBupdate_metadata\fP"
.br
.ti -1c
.RI "typedef Update_Policy \fBupdate_policy\fP"
.br
.ti -1c
.RI "typedef traits_base::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlu_map\fP (const \fBlu_map\fP< Key, Mapped, Eq_Fn, _Alloc, Update_Policy > &)"
.br
.ti -1c
.RI "template<typename It > \fBlu_map\fP (It, It)"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBempty\fP () const "
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const "
.br
.ti -1c
.RI "bool \fBerase\fP (key_const_reference)"
.br
.ti -1c
.RI "template<typename Pred > \fBlu_map\fP< Key, Mapped, Eq_Fn, 
.br
_Alloc, Update_Policy >
.br
::size_type \fBerase_if\fP (Pred pred)"
.br
.ti -1c
.RI "template<typename Pred > size_type \fBerase_if\fP (Pred)"
.br
.ti -1c
.RI "point_iterator \fBfind\fP (key_const_reference r_key)"
.br
.ti -1c
.RI "point_const_iterator \fBfind\fP (key_const_reference r_key) const "
.br
.ti -1c
.RI "\fBstd::pair\fP< point_iterator, bool > \fBinsert\fP (const_reference)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const "
.br
.ti -1c
.RI "mapped_reference \fBoperator[]\fP (key_const_reference r_key)"
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.ti -1c
.RI "void \fBswap\fP (\fBlu_map\fP< Key, Mapped, Eq_Fn, _Alloc, Update_Policy > &)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "no_throw_indicator \fBm_no_throw_copies_indicator\fP"
.br
.ti -1c
.RI "store_extra \fBm_store_extra_indicator\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "template<typename It > void \fBcopy_from_range\fP (It, It)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBconst_iterator_\fP"
.br
.ti -1c
.RI "class \fBiterator_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Mapped, typename Eq_Fn, typename _Alloc, typename Update_Policy>class __gnu_pbds::detail::lu_map< Key, Mapped, Eq_Fn, _Alloc, Update_Policy >"
list-based (with thugged-out shit) associatizzle container\&. Right back up in yo muthafuckin ass. Skip ta tha lu, mah darling\&. 
.PP
Definizzle at line 91 of file lu_map_\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
