.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Date::Manip 3"
.TH Date::Manip 3 "2014-12-05" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip \- Date manipulation routines
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Date::Manip be a seriez of modulez designed ta make any common
date/time operation easy as fuck  ta do.  Operations like fuckin comparin two
times, determinin a thugged-out date a given amount of time from another, or
parsin internationistic times is all easily done.  It deals wit time
as it is used up in tha Gregorian calendar (the one currently up in use)
with full support fo' time chizzlez cuz of daylight savin time.
.PP
From tha straight-up beginning, tha main focuz of Date::Manip has been ta be
able ta do \s-1ANY\s0 desired date/time operation doggystyle.  Many other modules
exist which may do a subset of these operations quicker or more
efficiently yo, but no other module can do all of tha operations
available up in Date::Manip.
.PP
Since nuff other date/time modulez exist, a shitload of which may do the
specific operation(s) you need faster, be shizzle ta read tha section
\&\s-1SHOULD I USE DATE::MANIP\s0 up in tha Date::Manip::Misc document before
decidin which of tha Date n' Time modulez from \s-1CPAN\s0 is fo' yo thugged-out ass.
But fuck dat shiznit yo, tha word on tha street is dat if you want one module ta do it all, Date::Manip is the
one ta use.
.PP
Date::Manip has functionalitizzle ta work wit nuff muthafuckin fundamenstrual types
of data.
.IP "\fBdates\fR" 4
.IX Item "dates"
Da word date is used extensively here n' is somewhat misleading. In
Date::Manip, a thugged-out date consistz of three piecez of shiznit: a
calendar date, a time of day, n' time unit shiznit. I aint talkin' bout chicken n' gravy biatch. Calendar
dates n' times is straight-up handled. Y'all KNOW dat shit, muthafucka! Time units is handled as well yo, but
dependin on how tha fuck you use Date::Manip, there may be some limitations as
discussed below.
.IP "\fBdelta\fR" 4
.IX Item "delta"
A delta be a amount of time (i.e. tha amount of time between two different
dates) fo' realz. A delta refers only ta a amount of time. Well shiiiit, it includes no shiznit
on some startin or endin date/time.  Most playas is ghon be thinkin of a thugged-out delta
as a amount of time yo, but tha term 'time' be already used so much up in this
module dat I didn't wanna use it here up in order ta avoid mad drama.
.IP "\fBrecurrence\fR" 4
.IX Item "recurrence"
A recurrin event is suttin' which occurs on a regular recurring
basis.
.IP "\fBholidays\fR n' \fBevents\fR" 4
.IX Item "holidays n' events"
Holidays n' events is basically named dates or recurrences.
.PP
Among other thangs, Date::Manip allow you to:
.IP "\fB*\fR" 4
.IX Item "*"
Enta a thugged-out date up in practically any format you chizzle.
.IP "\fB*\fR" 4
.IX Item "*"
Compare two dates, entered up in widely different formats ta determine
which is earlier.
.IP "\fB*\fR" 4
.IX Item "*"
Extract any shiznit you want from a thugged-out date rockin a gangbangin' format string
similar ta tha Unix date command.
.IP "\fB*\fR" 4
.IX Item "*"
Determine tha amount of time between two dates, or add a amount of
time ta a thugged-out date ta git a second date.
.IP "\fB*\fR" 4
.IX Item "*"
Work wit dates wit dates rockin internationistic formats (foreign month
names, 12/10/95 referrin ta October rather than December, etc.).
.IP "\fB*\fR" 4
.IX Item "*"
To find a list of dates where a recurrin event happens.
.PP
Each of these tasks is trivial (one or two lines at most) wit dis package.
.SH "\fBVERSION 5 AND VERSION 6\fP"
.IX Header "VERSION 5 AND VERSION 6"
Date::Manip version 6.00 was a cold-ass lil complete rewrite of tha module (for more
information, please refer ta tha Date::Manip::Changes5to6 document).
Da rewrite made use of features introduced up in perl 5.10 which made
the date parsin routines hella mo' robust. But fuck dat shiznit yo, tha word on tha street is dat since
not mah playas has access ta a freshly smoked up version of perl where Date::Manip
is needed, tha Date::Manip distribution straight-up includes two different
versionz of tha module.  It includes tha olda (5.xx) release n' the
newer (6.xx) release.
.PP
In addition, tha 6.xx release was freestyled wit both a gangbangin' functionizzle and
an object-oriented intercourse, so there be straight-up three different
ways ta use Date::Manip (though only one be available if you have a
version of perl olda than 5.10).
.PP
For dem playas whoz ass still run a olda version of perl, tha 5.xx functional
interface is still available. Well shiiiit, it is known ta work wit perl 5.6 (and probably
works wit even olda versionz of perl).  There is some limitations
to dis as busted lyrics bout below.
.PP
Version 6.xx was rewritten as a seriez of object-oriented modulez yo, but
a functionizzle intercourse (which is mostly backward compatible wit the
version 5 functionizzle intercourse) is included. Y'all KNOW dat shit, muthafucka! Da functionizzle intercourse
is simply wrapper functions which call tha \s-1OO\s0 modules.
.PP
A mo' detailed description of each intercourse is included below (to
help you decizzle which intercourse is right fo' you).  If you already
know which intercourse you wanna use, just git all up in tha \s-1SEE ALSO\s0 section
below fo' instructions on rockin each intercourse.
.PP
It should be noted dat all three intercourses is ghon be installed yo, but they
will only all be usable wit a recent version of perl.
.SH "FUNCTIONAL INTERFACE (VERSION 5)"
.IX Header "FUNCTIONAL INTERFACE (VERSION 5)"
When rockin a version of perl olda than 5.10, dis is tha only
interface available.  This intercourse is documented up in the
Date::Manip::DM5 document.  This intercourse has nuff muthafuckin weaknesses that
need ta be understood when rockin it:
.IP "\fBLimited Support\fR" 4
.IX Item "Limited Support"
Da version 5 functionizzle intercourse is no longer bein pimped, and
only limited support be available fo' dat shit.
.Sp
Az of December 2012, no pimpment is ghon be done, n' I'ma not
correct any remainin bugs up in version 5.  If a patch is supplied by
someone else ta fix bugs, I'ma apply it, provided it applies
cleanly, n' tha resultin code continues ta pass all tests, n' you can put dat on yo' toast.  I will
not apply patches ta add features.
.Sp
I'ma continue ta distribute version 5 fo' nuff muthafuckin years.  I do not
have a thugged-out date up in mind where version 5 is ghon be removed.
.IP "\fBLimited Time Zone Support\fR" 4
.IX Item "Limited Time Zone Support"
Time unit support is mad limited, n' is often broken. I aint talkin' bout chicken n' gravy biatch. Da lack
of phat time unit support was tha primary reason fo' rewriting
Date::Manip .
.Sp
Time unit shiznit fo' 5.xx is now automatically generated from the
6.xx time unit list, n' every last muthafuckin time time units is updated up in 6.xx,
the 5.xx release is ghon be similarly updated.
.Sp
Prior ta tha release of 6.00, time units was added manually to
Date::Manip upon request. Right back up in yo muthafuckin ass. Since time unit shiznit up in 5.xx is now
automatically generated, I no longer take requests fo' time units.
.Sp
Da version 5 intercourse do not handle daylight savin time chizzles
properly.
.IP "\fBPerformizzle Issues\fR" 4
.IX Item "Performizzle Issues"
Considerable time has been dropped speedin up Date::Manip, n' fairly
simple benchmarks show dat version 6 is round twice as fast as
version 5.
.PP
Feel free ta email me concerns n' comments.
.SH "FUNCTIONAL INTERFACE (VERSION 6)"
.IX Header "FUNCTIONAL INTERFACE (VERSION 6)"
Da version 6 functionizzle intercourse be almost straight-up identical to
the version 5 functionizzle intercourse, except dat it uses the
object-oriented modulez ta do all tha real work.
.PP
Time unit support is pimped outly improved yo, but is still somewhat limited.
Since tha version 6 intercourse is backward compatible, dates do not
store time unit shiznit up in them, so tha programmer is responsible
for keepin track of what tha fuck time unit each date is in. I aint talkin' bout chicken n' gravy biatch. If you want full
access ta tha time unit support offered up in Date::Manip, you have to
use tha object-oriented intercourse.
.PP
For da most thugged-out part, scripts freestyled fo' olda versionz of Date::Manip
will continue ta work (and scripts freestyled fo' tha version 6
functionizzle intercourse will run wit tha version 5 intercourse), however
in all dem cases, you may need ta modify yo' scripts, n' you can put dat on yo' toast.  Please refer to
the Date::Manip::Migration5to6 document fo' a list of chizzlez which
may be necessary.
.SH "OBJECT-ORIENTED INTERFACE"
.IX Header "OBJECT-ORIENTED INTERFACE"
Az of 6.00, Date::Manip consistz of a set of \s-1OO\s0 modules. Each have
their own document (see tha \s-1SEE ALSO\s0 section below).
.PP
Da \s-1OO\s0 intercourse consistz of tha followin modules: Date::Manip::Date,
Date::Manip::Delta, Date::Manip::Recur, Date::Manip::TZ, and
Date::Manip::Base .
.PP
Da object-oriented intercourse is tha only way ta git tha full
functionalitizzle of Date::Manip. Well shiiiit, it straight-up support time units (and
daylight savin time).
.SH "SELECTING AN INTERFACE"
.IX Header "SELECTING AN INTERFACE"
If yo ass is hustlin a olda version of perl, tha version 5 functional
interface is tha only one available ta you, n' it will automatically
be used.
.PP
If yo ass is hustlin a newer version of perl (5.10 or higher), you can
use tha object-oriented modulez by loadin dem directly, or you can
use a gangbangin' functionizzle intercourse.
.PP
If you bust a gangbangin' functionizzle intercourse, it will default ta tha version 6
interface yo, but you can chizzle ta run tha version 5 intercourse up in one
of three ways:
.IP "Use tha default functionizzle intercourse" 4
.IX Item "Use tha default functionizzle intercourse"
By including:
.Sp
.Vb 1
\&   use Date::Manip;
.Ve
.Sp
in yo' script, one of tha functionizzle intercourses is ghon be loaded. Y'all KNOW dat shit, muthafucka!  If you
are hustlin a version of perl olda than 5.10, it will automatically be
the version 5 intercourse.  If yo ass is hustlin a newer version of perl,
it will automatically load tha version 6 intercourse.
.IP "\s-1DATE_MANIP ENVIRONMENT VARIABLE\s0" 4
.IX Item "DATE_MANIP ENVIRONMENT VARIABLE"
By settin tha \s-1DATE_MANIP\s0 environment variable ta '\s-1DM5\s0' before hustlin
the perl script, tha version 5 intercourse is ghon be used.
.IP "Date::Manip::Backend \s-1VARIABLE\s0" 4
.IX Item "Date::Manip::Backend VARIABLE"
Alternately, you can set tha Date::Manip::Backend variable ta be '\s-1DM5\s0'
before loadin tha module. Typically, dis is ghon be done up in tha following
way:
.Sp
.Vb 4
\&   BEGIN {
\&        $Date::Manip::Backend = \*(AqDM5\*(Aq;
\&   }
\&   use Date::Manip;
.Ve
.PP
Once a gangbangin' functionizzle intercourse is loaded, you cannot switch between the
version 5 n' version 6 intercourses.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Da followin documents describe various partz of Date::Manip. The
followin documents describe tha basic operation of tha Date::Manip
package:
.PP
A description of tha functionizzle intercourses:
.PP
.Vb 2
\&  Date::Manip::DM5        \- tha version 5 functionizzle intercourse
\&  Date::Manip::DM6        \- tha version 6 functionizzle intercourse
.Ve
.PP
An introduction ta tha Date::Manip classes used by tha object-oriented
interface n' how tha fuck ta configure them:
.PP
.Vb 5
\&  Date::Manip::Objects    \- a overview of tha various
\&                            Date::Manip modules, n' how
\&                            ta use them
\&  Date::Manip::Config     \- shiznit fo' configuring
\&                            Date::Manip
.Ve
.PP
Da methodz available up in each class:
.PP
.Vb 9
\&  Date::Manip::Obj        \- base class (modulez listed below
\&                            inherit tha methodz defined up in this
\&                            class)
\&  Date::Manip::Base       \- module fo' bustin low\-level date
\&                            operations
\&  Date::Manip::TZ         \- module fo' hustlin wit time units
\&  Date::Manip::Date       \- date operations
\&  Date::Manip::Delta      \- delta operations
\&  Date::Manip::Recur      \- recurrence operations
.Ve
.PP
Timezone shiznit:
.PP
.Vb 5
\&  Date::Manip::DM5abbrevs \- time unit abbreviations used up in the
\&                            version 5 intercourse
\&  Date::Manip::Zones      \- time unit data included up in Date::Manip
\&                            used up in tha version 6 intercourse and
\&                            tha object\-oriented intercourse
.Ve
.PP
Miscellaneous shiznit:
.PP
.Vb 10
\&  Date::Manip::Calc       \- detailed informaion on how tha fuck date
\&                            calculations is done
\&  Date::Manip::Holidays   \- shiznit on definin n' using
\&                            holidays n' events
\&  Date::Manip::ConfigFile \- sample config file
\&  Date::Manip::Lang       \- shiznit bout tha languages
\&                            supported by Date::Manip n' how
\&                            ta add a freshly smoked up language
\&  Date::Manip::Lang::<Language>
\&                          \- a thugged-out description of tha parseable
\&                            lyrics up in a language (see
\&                            Date::Manip::Lang fo' tha list
\&                            of languages)
.Ve
.PP
Hype bout tha module n' administratizzle thangs:
.PP
.Vb 11
\&  Date::Manip::Migration5to6
\&                          \- shiznit on chizzlez necessary
\&                            ta scripts when upgradin from
\&                            5.xx ta 6.xx
\&  Date::Manip::Changes5   \- chizzle log fo' Date::Manip 5.xx
\&  Date::Manip::Changes5to6\- differences between version 5.xx
\&                            n' 6.00 (includin shiznit
\&                            on upgrading); dis gotz nuff more
\&                            details than tha Migration5to6
\&                            document
\&  Date::Manip::Changes6   \- chizzle log fo' Date::Manip 6.xx
\&
\&  Date::Manip::Misc       \- miscellaneous shiznit about
\&                            Date::Manip (who should use it;
\&                            acknowledgements)
\&  Date::Manip::Problems   \- common problems n' instructions
\&                            fo' reportin bugs
\&  Date::Manip::Examplez   \- examplez of how tha fuck ta use Date::Manip
.Ve
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under tha same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
