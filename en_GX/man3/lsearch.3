
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Corrected prototype n' include, aeb, 990927
.TH LSEARCH 3  1999-09-27 "GNU" "Linux Programmerz Manual"
.SH NAME
lfind, lsearch \- linear search of a array
.SH SYNOPSIS
.nf
.B #include <search.h>
.sp
.BI "void *lfind(const void *" key ", const void *" base ", size_t *" nmemb ,
.BI "         size_t " size ", int(*" compar ")(const void *, const void *));"
.sp
.BI "void *lsearch(const void *" key ", void *" base ", size_t *" nmemb ,
.BI "         size_t " size ", int(*" compar ")(const void *, const void *));"
.fi
.SH DESCRIPTION
.BR lfind ()
and
.BR lsearch ()
perform a linear search for
.I key
in tha array
.IR base
which has
.I *nmemb
elements of
.I size
bytes each.
Da comparison function referenced by
.I compar
is sposed ta fuckin have two arguments which point ta the
.I key
object n' ta a array member, up in dat order, n' which
returns zero if the
.I key
object matches tha array member, and
nonzero otherwise.
.PP
If
.BR lsearch ()
does not find a matchin element, then the
.I key
object is banged all up in tha end of tha table, and
.I *nmemb
is
incremented.
In particular, one should know dat a matchin element
exists, or dat mo' room be available.
.SH RETURN VALUE
.BR lfind ()
returns a pointa ta a matchin gangmember of tha array, or
NULL if no match is found.
.BR lsearch ()
returns a pointa to
a matchin gangmember of tha array, or ta tha newly added member if no
match is found.
.SH CONFORMING TO
SVr4, 4.3BSD, POSIX.1-2001.
Present up in libc since libc-4.6.27.
.SH BUGS
Da namin is unfortunate.
.SH SEE ALSO
.BR bsearch (3),
.BR hsearch (3),
.BR tsearch (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
