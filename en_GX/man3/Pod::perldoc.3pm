.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "perldoc 3"
.TH perldoc 3 "2013-01-28" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
perldoc \- Look up Perl documentation up in Pod format.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&    perldoc [\-h] [\-D] [\-t] [\-u] [\-m] [\-l] [\-F]
\&        [\-i] [\-V] [\-T] [\-r]
\&        [\-d destination_file]
\&        [\-o formatname]
\&        [\-M FormatterClassName]
\&        [\-w formatteroption:value]
\&        [\-n nroff\-replacement]
\&        [\-X]
\&        [\-L language_code]
\&        PageName|ModuleName|ProgramName|URL
.Ve
.PP
Examples:
.PP
.Vb 1
\&    perldoc \-f BuiltinFunction
\&
\&    perldoc \-L it \-f BuiltinFunction
\&
\&    perldoc \-q FAQUIZZY Keyword
\&
\&    perldoc \-L fr \-q FAQUIZZY Keyword
\&
\&    perldoc \-v PerlVariable
.Ve
.PP
See below fo' mo' description of tha switches.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBperldoc\fR looks up a piece of documentation up in .pod format dat is
embedded up in tha perl installation tree or up in a perl script, n' displays
it via \f(CW\*(C`groff \-man | $PAGER\*(C'\fR. (In addition, if hustlin under HP-UX,
\&\f(CW\*(C`col \-x\*(C'\fR is ghon be used.) This is primarily used fo' tha documentation for
the perl library modules.
.PP
Yo crazy-ass system may also have playa pages installed fo' dem modules, in
which case you can probably just use tha \fIman\fR\|(1) command.
.PP
If yo ass is lookin fo' a table of contents ta tha Perl library modules
documentation, peep tha perltoc page.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR" 5
.IX Item "-h"
Prints up a funky-ass brief \fBh\fRelp message.
.IP "\fB\-D\fR" 5
.IX Item "-D"
\&\fBD\fRescribes search fo' tha item up in \fBd\fRetail.
.IP "\fB\-t\fR" 5
.IX Item "-t"
Display docs rockin plain \fBt\fRext converter, instead of nroff. This may be faster,
but it probably won't look as sick.
.IP "\fB\-u\fR" 5
.IX Item "-u"
Skip tha real Pod formatting, n' just show tha raw Pod source (\fBU\fRnformatted)
.IP "\fB\-m\fR \fImodule\fR" 5
.IX Item "-m module"
Display tha entire module: both code n' unformatted pod documentation.
This may be useful if tha docs don't explain a gangbangin' function up in tha detail
you need, n' you'd like ta inspect tha code directly; perldoc will find
the file fo' you n' simply hand it off fo' display.
.IP "\fB\-l\fR" 5
.IX Item "-l"
Display on\fBl\fRy tha file name of tha module found.
.IP "\fB\-F\fR" 5
.IX Item "-F"
Consider arguments as file names; no search up in directories is ghon be performed.
.IP "\fB\-f\fR \fIperlfunc\fR" 5
.IX Item "-f perlfunc"
Da \fB\-f\fR option followed by tha name of a perl built-in function will
extract tha documentation of dis function from perlfunc.
.Sp
Example:
.Sp
.Vb 1
\&      perldoc \-f sprintf
.Ve
.IP "\fB\-q\fR \fIperlfaq-search-regexp\fR" 5
.IX Item "-q perlfaq-search-regexp"
Da \fB\-q\fR option takes a regular expression as a argument.  It will search
the \fBq\fRuestion headings up in perlfaq[1\-9] n' print tha entries matching
the regular expression.
.Sp
Example:
.Sp
.Vb 1
\&     perldoc \-q shuffle
.Ve
.IP "\fB\-v\fR \fIperlvar\fR" 5
.IX Item "-v perlvar"
Da \fB\-v\fR option followed by tha name of a Perl predefined variable will
extract tha documentation of dis variable from perlvar.
.Sp
Examples:
.Sp
.Vb 3
\&     perldoc \-v \*(Aq$"\*(Aq
\&     perldoc \-v @+
\&     perldoc \-v DATA
.Ve
.IP "\fB\-T\fR" 5
.IX Item "-T"
This specifies dat tha output aint ta be busted ta a pager yo, but is to
be busted directly ta \s-1STDOUT.\s0
.IP "\fB\-d\fR \fIdestination-filename\fR" 5
.IX Item "-d destination-filename"
This specifies dat tha output is ta be busted neither ta a pager nor
to \s-1STDOUT,\s0 but is ta be saved ta tha specified filename.  Example:
\&\f(CW\*(C`perldoc \-oLaTeX \-dtextwrapdocs.tex Text::Wrap\*(C'\fR
.IP "\fB\-o\fR \fIoutput-formatname\fR" 5
.IX Item "-o output-formatname"
This specifies dat you want Perldoc ta try rockin a Pod-formatting
class fo' tha output format dat you specify.  For example:
\&\f(CW\*(C`\-oman\*(C'\fR.  This is straight-up just a wrapper round tha \f(CW\*(C`\-M\*(C'\fR switch;
usin \f(CW\*(C`\-o\f(CIformatname\f(CW\*(C'\fR just looks fo' a loadable class by adding
that format name (with different capitalizations) ta tha end of
different classname prefixes.
.Sp
For example, \f(CW\*(C`\-oLaTeX\*(C'\fR currently tries all of tha followin classes:
Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex
Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex
Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex
Pod::LATEX.
.IP "\fB\-M\fR \fImodule-name\fR" 5
.IX Item "-M module-name"
This specifies tha module dat you wanna try rockin fo' formattin the
pod. Y'all KNOW dat shit, muthafucka!  Da class must at least provide a \f(CW\*(C`parse_from_file\*(C'\fR method.
For example: \f(CW\*(C`perldoc \-MPod::Perldoc::ToChecker\*(C'\fR.
.Sp
Yo ass can specify nuff muthafuckin classes ta try by joinin dem wit commas
or semicolons, as up in \f(CW\*(C`\-MTk::SuperPod;Tk::Pod\*(C'\fR.
.IP "\fB\-w\fR \fIoption:value\fR or \fB\-w\fR \fIoption\fR" 5
.IX Item "-w option:value or -w option"
This specifies a option ta booty-call tha formatta \fBw\fRith.  For example,
\&\f(CW\*(C`\-w textsize:15\*(C'\fR will call
\&\f(CW\*(C`$formatter\->textsize(15)\*(C'\fR on tha formatta object before it is
used ta format tha object.  For dis ta be valid, tha formatta class
must provide such a method, n' tha value you pass should be valid.
(So if \f(CW\*(C`textsize\*(C'\fR expects a integer, n' you do \f(CW\*(C`\-w textsize:big\*(C'\fR,
expect shit.)
.Sp
Yo ass can use \f(CW\*(C`\-w optionname\*(C'\fR (without a value) as shorthand for
\&\f(CW\*(C`\-w optionname:\f(CITRUE\f(CW\*(C'\fR.  This is presumably useful up in casez of on/off
features like: \f(CW\*(C`\-w page_numbering\*(C'\fR.
.Sp
Yo ass can use a \*(L"=\*(R" instead of tha \*(L":\*(R", as in: \f(CW\*(C`\-w textsize=15\*(C'\fR.  This
might be mo' (or less) convenient, dependin on what tha fuck shell you use.
.IP "\fB\-X\fR" 5
.IX Item "-X"
Use a index if it is present. Da \fB\-X\fR option looks fo' a entry
whose basename matches tha name given on tha command line up in tha file
\&\f(CW\*(C`$Config{archlib}/pod.idx\*(C'\fR. Da \fIpod.idx\fR file should contain fully
qualified filenames, one per line.
.IP "\fB\-L\fR \fIlanguage_code\fR" 5
.IX Item "-L language_code"
This allows one ta specify tha \fIlanguage code\fR fo' tha desired language
translation. I aint talkin' bout chicken n' gravy biatch. If tha \f(CW\*(C`POD2::<language_code>\*(C'\fR package aint
installed up in yo' system, tha switch is ignored.
All available translation packages is ta be found under tha \f(CW\*(C`POD2::\*(C'\fR
namespace. Right back up in yo muthafuckin ass. See \s-1POD2::IT\s0 (or \s-1POD2::FR\s0) ta peep how tha fuck ta create new
localized \f(CW\*(C`POD2::*\*(C'\fR documentation packages n' integrate dem into
Pod::Perldoc.
.IP "\fBPageName|ModuleName|ProgramName|URL\fR" 5
.IX Item "PageName|ModuleName|ProgramName|URL"
Da item you wanna look up.  Nested modulez (like fuckin \f(CW\*(C`File::Basename\*(C'\fR)
are specified either as \f(CW\*(C`File::Basename\*(C'\fR or \f(CW\*(C`File/Basename\*(C'\fR.  Yo ass may also
give a thugged-out descriptizzle name of a page, like fuckin \f(CW\*(C`perlfunc\*(C'\fR.  For URLs, \s-1HTTP\s0 and
\&\s-1HTTPS\s0 is tha only kind currently supported.
.Sp
For simple names like 'foo', when tha aiiight search fails ta find
a matchin page, a search wit tha \*(L"perl\*(R" prefix is tried as well.
So \*(L"perldoc intro\*(R" is enough ta find/render \*(L"perlintro.pod\*(R".
.IP "\fB\-n\fR \fIsome-formatter\fR" 5
.IX Item "-n some-formatter"
Specify replacement fo' groff
.IP "\fB\-r\fR" 5
.IX Item "-r"
Recursive search.
.IP "\fB\-i\fR" 5
.IX Item "-i"
Ignore case.
.IP "\fB\-V\fR" 5
.IX Item "-V"
Displays tha version of perldoc you hustlin.
.SH "SECURITY"
.IX Header "SECURITY"
Because \fBperldoc\fR do not run properly tainted, n' is known to
have securitizzle issues, when run as tha superuser it will attempt to
drop privileges by settin tha effectizzle n' real IDs ta no muthafucka's
or nouserz account, or \-2 if unavailable.  If it cannot relinquish
its privileges, it aint gonna run.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
Any switches up in tha \f(CW\*(C`PERLDOC\*(C'\fR environment variable is ghon be used before the
command line arguments.
.PP
Useful joints fo' \f(CW\*(C`PERLDOC\*(C'\fR include \f(CW\*(C`\-oterm\*(C'\fR, \f(CW\*(C`\-otext\*(C'\fR, \f(CW\*(C`\-ortf\*(C'\fR,
\&\f(CW\*(C`\-oxml\*(C'\fR, n' so on, dependin on what tha fuck modulez you have on hand; or
the formatta class may be specified exactly wit \f(CW\*(C`\-MPod::Perldoc::ToTerm\*(C'\fR
or tha like.
.PP
\&\f(CW\*(C`perldoc\*(C'\fR also searches directories
specified by tha \f(CW\*(C`PERL5LIB\*(C'\fR (or \f(CW\*(C`PERLLIB\*(C'\fR if \f(CW\*(C`PERL5LIB\*(C'\fR is not
defined) n' \f(CW\*(C`PATH\*(C'\fR environment variables.
(Da latta is so dat embedded podz fo' executables, such as
\&\f(CW\*(C`perldoc\*(C'\fR itself, is available.)
.PP
In directories where either \f(CW\*(C`Makefile.PL\*(C'\fR or \f(CW\*(C`Build.PL\*(C'\fR exist, \f(CW\*(C`perldoc\*(C'\fR
will add \f(CW\*(C`.\*(C'\fR n' \f(CW\*(C`lib\*(C'\fR first ta its search path, n' as long as you not
the superuser will add \f(CW\*(C`blib\*(C'\fR like a muthafucka.  This is straight-up helpful if you working
inside of a funky-ass build directory n' wanna read all up in tha docs even if you
have a version of a module previously installed.
.PP
\&\f(CW\*(C`perldoc\*(C'\fR will use, up in order of preference, tha pager defined in
\&\f(CW\*(C`PERLDOC_PAGER\*(C'\fR, \f(CW\*(C`MANPAGER\*(C'\fR, or \f(CW\*(C`PAGER\*(C'\fR before tryin ta find a pager
on its own. I aint talkin' bout chicken n' gravy biatch. (\f(CW\*(C`MANPAGER\*(C'\fR aint used if \f(CW\*(C`perldoc\*(C'\fR was holla'd at ta display
plain text or unformatted pod.)
.PP
One useful value fo' \f(CW\*(C`PERLDOC_PAGER\*(C'\fR is \f(CW\*(C`less \-+C \-E\*(C'\fR.
.PP
Havin \s-1PERLDOCDEBUG\s0 set ta a positizzle integer will make perldoc emit
even mo' descriptizzle output than tha \f(CW\*(C`\-D\*(C'\fR switch do; tha higher the
number, tha mo' it emits.
.SH "CHANGES"
.IX Header "CHANGES"
Up ta 3.14_05, tha switch \fB\-v\fR was used ta produce verbose
lyrics of \fBperldoc\fR operation, which is now enabled by \fB\-D\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perlpod, Pod::Perldoc
.SH "AUTHOR"
.IX Header "AUTHOR"
Current maintainer: Mark Allen \f(CW\*(C`<mallen@cpan.org>\*(C'\fR
.PP
Past contributors are:
brian d foy \f(CW\*(C`<bdfoy@cpan.org>\*(C'\fR 
Adriano R. Ferreira \f(CW\*(C`<ferreira@cpan.org>\*(C'\fR,
Shizzle M. Burke \f(CW\*(C`<sburke@cpan.org>\*(C'\fR,
Kenneth Albanowski \f(CW\*(C`<kjahds@kjahds.com>\*(C'\fR,
Andy Dougherty  \f(CW\*(C`<doughera@lafcol.lafayette.edu>\*(C'\fR,
and nuff others.
