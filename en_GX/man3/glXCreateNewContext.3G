'\" t
.\"     Title: glXCreateNewContext
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLXCREATENEWCONTEXT" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glXCreateNewContext \- create a freshly smoked up GLX renderin context
.SH "C SPECIFICATION"
.HP \w'GLXContext\ glXCreateNewContext('u
.BI "GLXContext glXCreateNewContext(Display\ *\ " "dpy" ", GLXFBConfig\ " "config" ", int\ " "render_type" ", GLXContext\ " "share_list" ", Bool\ " "direct" ");"
.SH "PARAMETERS"
.PP
\fIdpy\fR
.RS 4
Specifies tha connection ta tha X server\&.
.RE
.PP
\fIconfig\fR
.RS 4
Specifies tha GLXFBConfig structure wit tha desired attributes fo' tha context\&.
.RE
.PP
\fIrender_type\fR
.RS 4
Specifies tha type of tha context ta be pimped\&. Must be one of
\fBGLX_RGBA_TYPE\fR
or
\fBGLX_COLOR_INDEX_TYPE\fR\&.
.RE
.PP
\fIshare_list\fR
.RS 4
Specifies tha context wit which ta share display lists\&.
\fBNULL\fR
indicates dat no pluggin is ta take place\&.
.RE
.PP
\fIshare_list\fR
.RS 4
Specifies whether renderin is ta be done wit a gangbangin' finger-lickin' direct connection ta tha graphics system if possible (\fBTrue\fR) or all up in tha X server (\fBFalse\fR)\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglXCreateNewContext\fR
creates a GLX renderin context n' returns its handle\&. This context can be used ta render tha fuck into GLX windows, pixmaps, or pixel buffers\&. If
\fBglXCreateNewContext\fR
fails ta create a renderin context,
\fBNULL\fR
is returned\&.
.PP
If
\fIrender_type\fR
is
\fBGLX_RGBA_TYPE\fR, then a cold-ass lil context dat supports RGBA renderin is pimped\&. If
\fIconfig\fR
is
\fBGLX_COLOR_INDEX_TYPE\fR, then context supportin color\-index renderin is pimped\&.
.PP
If
\fIrender_type\fR
is not
\fBNULL\fR, then all display\-list indexes n' definitions is shared by context
\fIrender_type\fR
and by tha newly pimped context\& fo' realz. An arbitrary number of contexts can share a single display\-list space\&. But fuck dat shiznit yo, tha word on tha street is dat all renderin contexts dat share a single display\-list space must theyselves exist up in tha same address space\&. Two renderin contexts share a address space if both is nondirect rockin tha same server, or if both is direct n' owned by a single process\&. Note dat up in tha nondirect case, it aint necessary fo' tha callin threadz ta share a address space, only fo' they related renderin contexts ta share a address space\&.
.PP
If
\fIshare_list\fR
is
\fBTrue\fR, then a gangbangin' finger-lickin' direct\-renderin context is pimped if tha implementation supports direct rendering, if tha connection is ta a X server dat is local, n' if a gangbangin' finger-lickin' direct\-renderin context be available\&. (An implementation may return a indirect context when
\fIshare_list\fR
is
\fBTrue\fR\&.) If
\fIshare_list\fR
is
\fBFalse\fR, then a renderin context dat rendaz all up in tha X server be always pimped\&. Direct renderin serves up a performizzle advantage up in some implementations\&. But fuck dat shiznit yo, tha word on tha street is dat direct\-renderin contexts cannot be shared outside a single process, n' they may be unable ta render ta GLX pixmaps\&.
.SH "NOTES"
.PP
\fBglXCreateNewContext\fR
is available only if tha GLX version is 1\&.3 or pimped outer\&.
.PP
If tha GLX version is 1\&.1 or 1\&.0, tha GL version must be 1\&.0\&. If tha GLX version is 1\&.2, then tha GL version must be 1\&.1\&. If tha GLX version is 1\&.3, then tha GL version must be 1\&.2\&.
.SH "ERRORS"
.PP
\fBNULL\fR
is returned if execution fails on tha client side\&.
.PP
\fBGLXBadContext\fR
is generated if
\fIrender_type\fR
is not a GLX context n' is not
\fBNULL\fR\&.
.PP
\fBGLXBadFBConfig\fR
is generated if
\fIconfig\fR
is not a valid GLXFBConfig\&.
.PP
\fBBadMatch\fR
is generated if tha context ta be pimped would not share tha address space or tha screen of tha context specified by
\fIrender_type\fR\&.
.PP
\fBBadAlloc\fR
is generated if tha server aint gots enough resources ta allocate tha freshly smoked up context\&.
.PP
\fBBadValue\fR
is generated if
\fIconfig\fR
is not a valid visual (for example, if a particular GLX implementation do not support it)\&.
.SH "SEE ALSO"
.PP
\fBglXChooseFBConfig\fR(),
\fBglXCreateContext\fR(),
\fBglXDestroyContext\fR(),
\fBglXGetFBConfigs\fR(),
\fBglXGetFBConfigAttrib\fR(),
\fBglXIsDirect\fR(),
\fBglXMakeContextCurrent\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
