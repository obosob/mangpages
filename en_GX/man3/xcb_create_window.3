.TH xcb_create_window 3  2013-08-04 "XCB" "XCB Requests"
.ad l
.SH NAME
xcb_create_window \- Creates a window
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_void_cookie_t \fBxcb_create_window\fP(xcb_connection_t\ *\fIconn\fP, uint8_t\ \fIdepth\fP, xcb_window_t\ \fIwid\fP, xcb_window_t\ \fIparent\fP, int16_t\ \fIx\fP, int16_t\ \fIy\fP, uint16_t\ \fIwidth\fP, uint16_t\ \fIheight\fP, uint16_t\ \fIborder_width\fP, uint16_t\ \fI_class\fP, xcb_visualid_t\ \fIvisual\fP, uint32_t\ \fIvalue_mask\fP, const uint32_t\ *\fIvalue_list\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
Da XCB connection ta X11.
.IP \fIdepth\fP 1i
Specifies tha freshly smoked up windowz depth (TODO: what tha fuck unit?).

Da special value \fIXCB_COPY_FROM_PARENT\fP means tha depth is taken from the
\fIparent\fP window.
.IP \fIwid\fP 1i
Da ID wit which yo big-ass booty is ghon refer ta tha freshly smoked up window, pimped by
\fIxcb_generate_id\fP.
.IP \fIparent\fP 1i
Da parent window of tha freshly smoked up window.
.IP \fIx\fP 1i
Da X coordinizzle of tha freshly smoked up window.
.IP \fIy\fP 1i
Da Y coordinizzle of tha freshly smoked up window.
.IP \fIwidth\fP 1i
Da width of tha freshly smoked up window.
.IP \fIheight\fP 1i
Da height of tha freshly smoked up window.
.IP \fIborder_width\fP 1i
TODO:

Must be zero if tha \fIclass\fP is \fIInputOnly\fP or a \fIxcb_match_error_t\fP occurs.
.IP \fI_class\fP 1i
One of tha followin joints:
.RS 1i
.IP \fIXCB_WINDOW_CLASS_COPY_FROM_PARENT\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIXCB_WINDOW_CLASS_INPUT_OUTPUT\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIXCB_WINDOW_CLASS_INPUT_ONLY\fP 1i
TODO: NOT YET DOCUMENTED.
.RE
.RS 1i


.RE
.IP \fIvisual\fP 1i
Specifies tha id fo' tha freshly smoked up windowz visual.

Da special value \fIXCB_COPY_FROM_PARENT\fP means tha visual is taken from the
\fIparent\fP window.
.IP \fIvalue_mask\fP 1i
One of tha followin joints:
.RS 1i
.IP \fIXCB_CW_BACK_PIXMAP\fP 1i
Overrides tha default background-pixmap. Da background pixmap n' window must
have tha same root n' same depth fo' realz. Any size pixmap can be used, although some
sizes may be fasta than others.

If \fIXCB_BACK_PIXMAP_NONE\fP is specified, tha window has no defined background.
Da server may fill tha contents wit tha previous screen contents or with
contentz of its own choosing.

If \fIXCB_BACK_PIXMAP_PARENT_RELATIVE\fP is specified, tha parentz background is
used yo, but tha window must have tha same depth as tha parent (or a Match error
results).   Da parentz background is tracked, n' tha current version is
used each time tha window background is required.
.IP \fIXCB_CW_BACK_PIXEL\fP 1i
Overrides \fIBackPixmap\fP fo' realz. A pixmap of undefined size filled wit tha specified
background pixel is used fo' tha background. Y'all KNOW dat shit, muthafucka! Range-checkin aint performed,
the background pixel is truncated ta tha appropriate number of bits.
.IP \fIXCB_CW_BORDER_PIXMAP\fP 1i
Overrides tha default border-pixmap. Da border pixmap n' window must have the
same root n' tha same depth fo' realz. Any size pixmap can be used, although some sizes
may be fasta than others.

Da special value \fIXCB_COPY_FROM_PARENT\fP means tha parentz border pixmap is
copied (subsequent chizzlez ta tha parentz border attribute do not affect the
child) yo, but tha window must have tha same depth as tha parent.
.IP \fIXCB_CW_BORDER_PIXEL\fP 1i
Overrides \fIBorderPixmap\fP fo' realz. A pixmap of undefined size filled wit tha specified
border pixel is used fo' tha border n' shit. Range checkin aint performed on the
border-pixel value, it is truncated ta tha appropriate number of bits.
.IP \fIXCB_CW_BIT_GRAVITY\fP 1i
Defines which region of tha window should be retained if tha window is resized.
.IP \fIXCB_CW_WIN_GRAVITY\fP 1i
Defines how tha fuck tha window should be repositioned if tha parent is resized (see
\fIConfigureWindow\fP).
.IP \fIXCB_CW_BACKING_STORE\fP 1i
A backing-store of \fIWhenMapped\fP advises tha server dat maintainin contents of
obscured regions when tha window is mapped would be beneficial. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack fo' realz. A backing-store
of \fIAlways\fP advises tha server dat maintainin contents even when tha window
is unmapped would be beneficial. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. In dis case, tha server may generate an
exposure event when tha window is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A value of \fINotUseful\fP advises the
server dat maintainin contents is unnecessary, although a server may still
choose ta maintain contents while tha window is mapped. Y'all KNOW dat shit, muthafucka! Note dat if tha server
maintains contents, then tha server should maintain complete contents not just
the region within tha parent boundaries, even if tha window is larger than its
parent. While tha server maintains contents, exposure events aint gonna normally
be generated yo, but tha server may stop maintainin contents at any time.
.IP \fIXCB_CW_BACKING_PLANES\fP 1i
Da backing-planes indicates (with bits set ta 1) which bit planez of the
window hold dynamic data dat must be preserved up in backing-stores n' during
save-unders.
.IP \fIXCB_CW_BACKING_PIXEL\fP 1i
Da backing-pixel specifies what tha fuck value ta use up in planes not covered by
backing-planes. Da server is free ta save only tha specified bit planes up in the
backing-store or save-under n' regenerate tha remainin planes wit the
specified pixel value fo' realz. Any bits beyond tha specified depth of tha window in
these joints is simply ignored.
.IP \fIXCB_CW_OVERRIDE_REDIRECT\fP 1i
Da override-redirect specifies whether map n' configure requests on this
window should override a SubstructureRedirect on tha parent, typically to
inform a window manager not ta tamper wit tha window.
.IP \fIXCB_CW_SAVE_UNDER\fP 1i
If 1, tha server be advised dat when dis window is mapped, savin the
contentz of windows it obscures would be beneficial.
.IP \fIXCB_CW_EVENT_MASK\fP 1i
Da event-mask defines which events tha client is horny bout fo' dis window
(or fo' some event types, inferiorz of tha window).
.IP \fIXCB_CW_DONT_PROPAGATE\fP 1i
Da do-not-propagate-mask defines which events should not be propagated to
ancestor windows when no client has tha event type selected up in dis window.
.IP \fIXCB_CW_COLORMAP\fP 1i
Da colormap specifies tha colormap dat dopest reflects tha legit flavaz of tha window. Right back up in yo muthafuckin ass. Servers
capable of supportin multiple hardware colormaps may use dis shiznit, n' window man-
agers may use it fo' InstallColormap requests, n' you can put dat on yo' toast. Da colormap must have tha same visual type
and root as tha window (or a Match error thangs up in dis biatch). If CopyFromParent is specified, tha parent's
colormap is copied (subsequent chizzlez ta tha parentz colormap attribute do not affect tha child).
But fuck dat shiznit yo, tha word on tha street is dat tha window must have tha same visual type as tha parent (or a Match error thangs up in dis biatch),
and tha parent must not gotz a cold-ass lil colormap of None (or a Match error thangs up in dis biatch). For a explanation
of None, peep FreeColormap request. Da colormap is copied by pluggin tha colormap object
between tha lil pimp n' tha parent, not by bustin a cold-ass lil complete copy of tha colormap contents.
.IP \fIXCB_CW_CURSOR\fP 1i
If a cold-ass lil cursor is specified, it is ghon be used whenever tha pointa is up in tha window. If None is speci-
fied, tha parentz cursor is ghon be used when tha pointa is up in tha window, n' any chizzle up in the
parentz cursor will cause a immediate chizzle up in tha displayed cursor.
.RE
.RS 1i
TODO: NOT YET DOCUMENTED.
.RE
.IP \fIvalue_list\fP 1i
TODO: NOT YET DOCUMENTED.
.SH DESCRIPTION
Creates a unmapped window as lil pimp of tha specified \fIparent\fP window fo' realz. A
CreateNotify event is ghon be generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da freshly smoked up window is placed on top up in the
stackin order wit respect ta siblings.

Da coordinizzle system has tha X axis horizontal n' tha Y axis vertical with
the origin [0, 0] all up in tha upper-left corner n' shit. Coordinates is integral, up in terms
of pixels, n' coincizzle wit pixel centers. Each window n' pixmap has its own
coordinizzle system. For a window, tha origin is inside tha border all up in tha inside,
upper-left corner.

Da pimped window aint yet displayed (mapped), call \fIxcb_map_window\fP to
display dat shit.

Da pimped window will initially use tha same cursor as its parent.
.SH RETURN VALUE
Returns a \fIxcb_void_cookie_t\fP. Errors (if any) gotta be handled up in tha event loop.

If you wanna handle errors directly wit \fIxcb_request_check\fP instead, use \fIxcb_create_window_checked\fP. Right back up in yo muthafuckin ass. See \fBxcb-requests(3)\fP fo' details.
.SH ERRORS
.IP \fIxcb_pixmap_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_alloc_error_t\fP 1i
Da X server could not allocate tha axed resources (no memory?).
.IP \fIxcb_colormap_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_value_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_cursor_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_window_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_match_error_t\fP 1i
TODO: reasons?
.SH SEE ALSO
.BR xcb-requests (3),
.BR xcb_create_notify_event_t (3),
.BR xcb_generate_id (3),
.BR xcb_map_window (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org fo' erections n' improvements.
