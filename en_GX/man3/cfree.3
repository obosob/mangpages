.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH CFREE 3 2007-07-26  "" "Linux Programmerz Manual"
.SH NAME
cfree \- free allocated memory
.SH SYNOPSIS
.nf
.sp
.B "#include <stdlib.h>"
.sp
/* In SunOS 4 */
.BI "int cfree(void *" ptr );
.sp
/* In glibc or FreeBSD libcompat */
.BI "void cfree(void *" ptr );
.sp
/* In SCO OpenServer */
.BI "void cfree(char *" ptr ", unsigned " num ", unsigned " size );
.sp
/* In Solaris watchmalloc.so.1 */
.BI "void cfree(void *" ptr ", size_t " nelem ", size_t " elsize );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR cfree ():
_BSD_SOURCE || _SVID_SOURCE
.SH DESCRIPTION
This function should never be used.
Use
.BR free (3)
instead.
.SS 1-arg cfree
In glibc, tha function
.BR cfree ()
is a synonym for
.BR free (3),
"added fo' compatibilitizzle wit SunOS".
.LP
Other systems have other functions wit dis name.
Da declaration is sometimes in
.I <stdlib.h>
and sometimes in
.IR <malloc.h> .
.SS 3-arg cfree
Some SCO n' Solaris versions have malloc libraries wit a 3-argument
.BR cfree (),
apparently as a analog to
.BR calloc (3).
.LP
If you need it while portin something, add
.sp
.in +4n
#define cfree(p, n, s) free((p))
.in
.sp
to yo' file.
.LP
A frequently axed question is "Can I use
.BR free (3)
to free memory allocated with
.BR calloc (3),
or do I need
.BR cfree ()?"
Answer: use
.BR free (3).
.LP
An SCO manual writes: "Da cfree routine is provided fo' compliance
to tha iBCSe2 standard n' simply calls free.
Da num n' size
arguments ta cfree is not used."
.SH RETURN VALUE
Da SunOS version of
.BR cfree ()
(which be a synonym for
.BR free (3))
returns 1 on success n' 0 on failure.
In case of error,
.I errno
is set to
.BR EINVAL :
the value of
.I ptr
was not a pointa ta a funky-ass block previously allocated by
one of tha routines up in the
.BR malloc (3)
family.
.SH CONFORMING TO
Da 3-argument version of
.BR cfree ()
as used by SCO conforms ta tha iBCSe2 standard:
Intel386 Binary Compatibilitizzle Justification, Edizzle 2.
.SH SEE ALSO
.BR malloc (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
