'\" t
.\"     Title: glBindProgramPipeline
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBINDPROGRAMPIPELIN" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBindProgramPipeline \- bind a program pipeline ta tha current context
.SH "C SPECIFICATION"
.HP \w'void\ glBindProgramPipeline('u
.BI "void glBindProgramPipeline(GLuint\ " "pipeline" ");"
.SH "PARAMETERS"
.PP
\fIpipeline\fR
.RS 4
Specifies tha name of tha pipeline object ta bind ta tha context\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBindProgramPipeline\fR
bindz a program pipeline object ta tha current context\&.
\fIpipeline\fR
must be a name previously returned from a cold-ass lil call to
\fBglGenProgramPipelines\fR()\&. If no program pipeline exists wit name
\fIpipeline\fR
then a freshly smoked up pipeline object is pimped wit dat name n' initialized ta tha default state vector\&.
.PP
When a program pipeline object is bound using
\fBglBindProgramPipeline\fR, any previous bindin is fucked up n' is replaced wit a funky-ass bindin ta tha specified pipeline object\&. If
\fIpipeline\fR
is zero, tha previous bindin is fucked up n' aint replaced, leavin no pipeline object bound\&. If no current program object has been established by
\fBglUseProgram\fR(), tha program objects used fo' each stage n' fo' uniform thugged-out shiznit is taken from tha bound program pipeline object, if any\&. If there be a cold-ass lil current program object established by
\fBglUseProgram\fR(), tha bound program pipeline object has no effect on renderin or uniform thugged-out shit\&. When a funky-ass bound program pipeline object is used fo' rendering, individual shader executablez is taken from its program objects\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIpipeline\fR
is not zero or a name previously returned from a cold-ass lil call to
\fBglGenProgramPipelines\fR()
or if such a name has been deleted by a cold-ass lil call to
\fBglDeleteProgramPipelines\fR()\&.
.SH "SEE ALSO"
.PP
\fBglCreateShader\fR(),
\fBglCreateProgram\fR(),
\fBglCompileShader\fR(),
\fBglLinkProgram\fR(),
\fBglGenProgramPipelines\fR(),
\fBglDeleteProgramPipelines\fR(),
\fBglIsProgramPipeline\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
