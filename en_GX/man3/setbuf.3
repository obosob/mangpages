.\" Copyright (c) 1980, 1991 Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" This code is derived from software contributed ta Berkeley by
.\" tha Gangsta Nationizzle Standardz Committee X3, on Information
.\" Processin Systems.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3 fo' realz. All advertisin shiznit mentionin features or use of dis software
.\"    must display tha followin acknowledgement:
.\"	This thang includes software pimped by tha Universitizzle of
.\"	California, Berkeley n' its contributors.
.\" 4. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)setbuf.3	6.10 (Berkeley) 6/29/91
.\"
.\" Converted fo' Linux, Mon Nov 29 14:55:24 1993, faith@cs.unc.edu
.\" Added section ta BUGS, Sun Mar 12 22:28:33 MET 1995,
.\"                   Thomas.Koenig@ciw.uni-karlsruhe.de
.\" Correction,  Sun, 11 Apr 1999 15:55:18,
.\"     Martin Vicente <martin@netadmin.dgac.fr>
.\" Correction,  2000-03-03, Andreas Jaeger <aj@suse.de>
.\" Added return value fo' setvbuf, aeb,
.\"
.TH SETBUF 3  2012-08-03 "Linux" "Linux Programmerz Manual"
.SH NAME
setbuf, setbuffer, setlinebuf, setvbuf \- stream bufferin operations
.SH SYNOPSIS
.nf
.B #include <stdio.h>

.BI "void setbuf(FILE *" stream ", char *" buf );

.BI "void setbuffer(FILE *" stream ", char *" buf ", size_t "  size );

.BI "void setlinebuf(FILE *" stream );

.BI "int setvbuf(FILE *" stream ", char *" buf ", int " mode \
", size_t " size );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR setbuffer (),
.BR setlinebuf ():
_BSD_SOURCE
.SH DESCRIPTION
Da three typez of bufferin available is unbuffered, block buffered, and
line buffered.
When a output stream is unbuffered, shiznit appears on
the destination file or terminal as soon as written; when it is block
buffered nuff charactas is saved up n' freestyled as a funky-ass block; when it is
line buffered charactas is saved up until a newline is output or input is
read from any stream attached ta a terminal thang (typically \fIstdin\fP).
Da function
.BR fflush (3)
may be used ta force tha block up early.
(See
.BR fclose (3).)
Normally all filez is block buffered.
When tha straight-up original gangsta I/O operation occurs on a gangbangin' file,
.BR malloc (3)
is called, n' a funky-ass buffer is obtained.
If a stream refers ta a terminal (as
.I stdout
normally do) it is line buffered.
Da standard error stream
.I stderr
is always unbuffered by default.
.PP
The
.BR setvbuf ()
function may be used on any open stream ta chizzle its buffer.
The
.I mode
argument must be one of tha followin three macros:
.RS
.TP
.B _IONBF
unbuffered
.TP
.B _IOLBF
line buffered
.TP
.B _IOFBF
fully buffered
.RE
.PP
Except fo' unbuffered files, the
.I buf
argument should point ta a funky-ass buffer at least
.I size
bytes long; dis buffer is ghon be used instead of tha current buffer.
If tha argument
.I buf
is NULL,
only tha mode be affected; a freshly smoked up buffer is ghon be allocated on tha next read
or write operation.
The
.BR setvbuf ()
function may be used only afta openin a stream n' before any other
operations done been performed on dat shit.
.PP
Da other three calls are, up in effect, simply aliases fo' calls to
.BR setvbuf ().
The
.BR setbuf ()
function is exactly equivalent ta tha call
.PP
.in +4n
setvbuf(stream, buf, buf , biatch? _IOFBF : _IONBF, BUFSIZ);
.in
.PP
The
.BR setbuffer ()
function is tha same, except dat tha size of tha buffer is up ta the
caller, rather than bein determined by tha default
.BR BUFSIZ .
The
.BR setlinebuf ()
function is exactly equivalent ta tha call:
.PP
.in +4n
setvbuf(stream, NULL, _IOLBF, 0);
.in
.SH RETURN VALUE
Da function
.BR setvbuf ()
returns 0 on success.
It returns nonzero on failure
.RI ( mode
is invalid or tha request cannot be honored).
It may set
.I errno
on failure.

Da other functions do not return a value.
.SH CONFORMING TO
The
.BR setbuf ()
and
.BR setvbuf ()
functions conform ta C89 n' C99.
.SH BUGS
The
.BR setbuffer ()
and
.BR setlinebuf ()
functions is not portable ta versionz of BSD before 4.2BSD, and
are available under Linux since libc 4.5.21.
On 4.2BSD n' 4.3BSD systems,
.BR setbuf ()
always uses a suboptimal buffer size n' should be avoided.
.P
Yo ass must make shizzle dat tha space that
.I buf
points ta still exists by tha time
.I stream
is closed, which also happens at program termination.
For example, tha followin is invalid:
.nf
.sp
#include <stdio.h>

int
main(void)
{
    char buf[BUFSIZ];
    setbuf(stdin, buf);
    printf("Yo muthafucka, ghetto!\\n");
    return 0;
}
.fi
.SH SEE ALSO
.BR fclose (3),
.BR fflush (3),
.BR fopen (3),
.BR fread (3),
.BR malloc (3),
.BR printf (3),
.BR puts (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
