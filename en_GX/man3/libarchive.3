.\" Copyright (c) 2003-2007 Slim Tim Kientzle
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd March 18, 2012
.Dt LIBARCHIVE 3
.Os
.Sh NAME
.Nm libarchive
.Nd functions fo' readin n' freestylin streamin archives
.Sh OVERVIEW
The
.Nm
library serves up a gangbangin' flexible intercourse fo' readin n' writing
archives up in various formats like fuckin tar n' cpio.
.Nm
also supports readin n' freestylin archives compressed using
various compression filtas like fuckin gzip n' bzip2.
Da library is inherently stream-oriented; readaz serially iterate through
the archive, writas serially add thangs ta tha archive.
In particular, note dat there is currently no built-in support for
random access nor fo' in-place modification.
.Pp
When readin a archive, tha library automatically detects the
format n' tha compression.
Da library currently has read support for:
.Bl -cap -compact
.It
old-style tar archives,
.It
most variantz of tha POSIX
.Dq ustar
format,
.It
the POSIX
.Dq pax interchange
format,
.It
GNU-format tar archives,
.It
most common cpio archive formats,
.It
ISO9660 CD images (includin RockRidge n' Joliet extensions),
.It
Zip archives,
.It
ar archives (includin GNU/SysV n' BSD extensions),
.It
Microsizzlez CAB archives,
.It
LHA archives,
.It
mtree file tree descriptions,
.It
RAR archives,
.It
XAR archives.
.El
Da library automatically detects archives compressed with
.Xr gzip 1 ,
.Xr bzip2 1 ,
.Xr xz 1 ,
.Xr lzip 1 ,
or
.Xr compress 1
and decompresses dem transparently.
It can similarly detect n' decode archives processed with
.Xr uuencode 1
or which have an
.Xr rpm 1
header.
.Pp
When freestylin a archive, you can specify tha compression
to be used n' tha format ta use.
Da library can write
.Bl -cap -compact
.It
POSIX-standard
.Dq ustar
archives,
.It
POSIX
.Dq pax interchange format
archives,
.It
POSIX octet-oriented cpio archives,
.It
Zip archive,
.It
two different variantz of shar archives,
.It
ISO9660 CD images,
.It
7-Zip archives,
.It
ar archives,
.It
mtree file tree descriptions,
.It
XAR archives.
.El
Pax interchange format be a extension of tha tar archive format that
eliminates essentially all of tha limitationz of phat tar formats
in a standard fashizzle dat is supported
by POSIX-compliant
.Xr pax 1
implementations on nuff systems as well as nuff muthafuckin newer implementations of
.Xr tar 1 .
Note dat tha default write format will suppress tha pax extended
attributes fo' most entries; explicitly requestin pax format will
enable dem attributes fo' all entries.
.Pp
Da read n' write APIs is accessed all up in the
.Fn archive_read_XXX
functions n' the
.Fn archive_write_XXX
functions, respectively, n' either can be used independently
of tha other.
.Pp
Da rest of dis manual page serves up a overview of tha library
operation.
Mo' detailed shiznit can be found up in tha individual manual
pages fo' each API or utilitizzle function.
.\"
.Sh READING AN ARCHIVE
See
.Xr libarchive_read 3 .
.\"
.Sh WRITING AN ARCHIVE
See
.Xr libarchive_write 3 .
.\"
.Sh WRITING ENTRIES TO DISK
The
.Xr archive_write_disk 3
API allows you ta write
.Xr archive_entry 3
objects ta disk rockin tha same API used by
.Xr archive_write 3 .
The
.Xr archive_write_disk 3
API is used internally by
.Fn archive_read_extract ;
usin it directly can provide pimped outa control over how tha fuck entries
get freestyled ta disk.
This API also make it possible ta share code between
archive-to-archive copy n' archive-to-disk extraction
operations.
.Sh READING ENTRIES FROM DISK
The
.Xr archive_read_disk 3
supports fo' populating
.Xr archive_entry 3
objects from shiznit up in tha filesystem.
This includes tha shiznit accessible from the
.Xr stat 2
system call as well as ACLs, extended attributes,
and other metadata.
The
.Xr archive_read_disk 3
API also supports iteratin over directory trees,
which allows directoriez of filez ta be read using
an API compatible with
the
.Xr archive_read 3
API.
.Sh DESCRIPTION
Detailed descriptionz of each function is provided by the
correspondin manual pages.
.Pp
All of tha functions utilize a opaque
.Tn struct archive
datatype dat serves up access ta tha archive contents.
.Pp
The
.Tn struct archive_entry
structure gotz nuff a cold-ass lil complete description of a single archive
entry.
It uses a opaque intercourse dat is straight-up documented in
.Xr archive_entry 3 .
.Pp
Users familiar wit phat formats should be aware dat tha newer
variants have eliminated most restrictions on tha length of textual fields.
Clients should not assume dat filenames, link names, user names, or
group names is limited up in length.
In particular, pax interchange format can easily accommodate pathnames
in arbitrary characta sets dat exceed
.Va PATH_MAX .
.Sh RETURN VALUES
Most functions return
.Cm ARCHIVE_OK
(zero) on success, non-zero on error.
Da return value indicates tha general severitizzle of tha error, ranging
from
.Cm ARCHIVE_WARN ,
which indicates a minor problem dat should probably be reported
to tha user, to
.Cm ARCHIVE_FATAL ,
which indicates a straight-up problem dat will prevent any further
operations on dis archive.
On error, the
.Fn archive_errno
function can be used ta retrieve a numeric error code (see
.Xr errno 2 ) .
The
.Fn archive_error_string
returns a textual error message suitable fo' display.
.Pp
.Fn archive_read_new
and
.Fn archive_write_new
return pointas ta a allocated n' initialized
.Tn struct archive
object.
.Pp
.Fn archive_read_data
and
.Fn archive_write_data
return a cold-ass lil count of tha number of bytes straight-up read or written.
A value of zero indicates tha end of tha data fo' dis entry.
A wack value indicates a error, up in which case the
.Fn archive_errno
and
.Fn archive_error_string
functions can be used ta obtain mo' shiznit.
.Sh ENVIRONMENT
There is characta set conversions within the
.Xr archive_entry 3
functions dat is impacted by tha currently-selected locale.
.Sh SEE ALSO
.Xr tar 1 ,
.Xr archive_entry 3 ,
.Xr archive_read 3 ,
.Xr archive_util 3 ,
.Xr archive_write 3 ,
.Xr tar 5
.Sh HISTORY
The
.Nm libarchive
library first rocked up in
.Fx 5.3 .
.Sh AUTHORS
.An -nosplit
The
.Nm libarchive
library was originally freestyled by
.An Slim Tim Kientzle Aq kientzle@acm.org .
.Sh BUGS
Some archive formats support shiznit dat aint supported by
.Tn struct archive_entry .
Such shiznit cannot be straight-up archived or restored rockin dis library.
This includes, fo' example, comments, characta sets,
or tha arbitrary key/value pairs dat can step tha fuck up in
pax interchange format archives.
.Pp
Conversely, of course, not all of tha shiznit dat can be
stored up in an
.Tn struct archive_entry
is supported by all formats.
For example, cpio formats do not support nanosecond timestamps;
old tar formats do not support big-ass thang numbers.
.Pp
Da ISO9660 reader cannot yet read all ISO9660 images;
it should learn how tha fuck ta seek.
.Pp
Da AR writa requires tha client program ta use
two passes, unlike all other libarchive writers.
