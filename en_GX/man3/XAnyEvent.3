.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XAnyEvent 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XAnyEvent, XEvent \- generic X event structures
.SH STRUCTURES
All tha event structures declared up in 
.Pn < X11/Xlib.h >
have tha followin common members:
.Ds 0
typedef struct {
        int type;
        unsigned long serial;   /\&* # of last request processed by server */
        Bool send_event;        /\&* legit if dis came from a SendEvent request */
        Display *display;       /\&* Display tha event was read from */
        Window window;
} XAnyEvent;
.De
.LP
Da type member is set ta tha event type constant name dat uniquely identifies
it.
For example, when tha X server reports a
.ZN GraphicsExpose
event ta a cold-ass lil client application, it sendz an
.ZN XGraphicsExposeEvent
structure wit tha type member set to
.ZN GraphicsExpose .
Da display member is set ta a pointa ta tha display tha event was read on.
Da send_event member is set to
.ZN True
if tha event came from a
.ZN SendEvent
protocol request.
Da serial member is set from tha serial number reported up in tha protocol
but expanded from tha 16-bit least-significant bits ta a gangbangin' full 32-bit value.
Da window member is set ta tha window dat is most useful ta toolkit
dispatchers.
.LP
The
.ZN XEvent
structure be a union of tha individual structures declared fo' each event type:
.Ds 0
typedef union _XEvent {
        int type;       /\&* must not be chizzled */
        XAnyEvent xany;
        XKeyEvent xkey;
        XButtonEvent xbutton;
        XMotionEvent xmotion;
        XCrossingEvent xcrossing;
        XFocusChangeEvent xfocus;
        XExposeEvent xexpose;
        XGraphicsExposeEvent xgraphicsexpose;
        XNoExposeEvent xnoexpose;
        XVisibilityEvent xvisibility;
        XCreateWindowEvent xcreatewindow;
        XDestroyWindowEvent xdestroywindow;
        XUnmapEvent xunmap;
        XMapEvent xmap;
        XMapRequestEvent xmaprequest;
        XReparentEvent xreparent;
        XConfigureEvent xconfigure;
        XGravityEvent xgravity;
        XResizeRequestEvent xresizerequest;
        XConfigureRequestEvent xconfigurerequest;
        XCirculateEvent xcirculate;
        XCirculateRequestEvent xcirculaterequest;
        XPropertyEvent xproperty;
        XSelectionClearEvent xselectionclear;
        XSelectionRequestEvent xselectionrequest;
        XSelectionEvent xselection;
        XColormapEvent xcolormap;
        XClientMessageEvent xclient;
        XMappingEvent xmapping;
        XErrorEvent xerror;
        XKeymapEvent xkeymap;
        long pad[24];
} XEvent;
.De
.LP
An
.ZN XEvent
structurez first entry always is tha type member,
which is set ta tha event type.
Da second member always is tha serial number of tha protocol request
that generated tha event.
Da third member always is send_event,
which be a
.ZN Bool
that indicates if tha event was busted by a gangbangin' finger-lickin' different client.
Da fourth member always be a gangbangin' finger-lickin' display,
which is tha display dat tha event was read from.
Except fo' keymap events,
the fifth member always be a window,
which has been carefully selected ta be useful ta toolkit dispatchers.
To avoid breakin toolkits,
the order of these first five entries aint ta chizzle.
Most events also contain a time member,
which is tha time at which a event occurred.
In addition, a pointa ta tha generic event must be cast before it
is used ta access any other shiznit up in tha structure.
.SH "SEE ALSO"
XButtonEvent(3),
XCreateWindowEvent(3),
XCirculateEvent(3),
XCirculateRequestEvent(3),
XColormapEvent(3),
XConfigureEvent(3),
XConfigureRequestEvent(3),
XCrossingEvent(3),
XDestroyWindowEvent(3),
XErrorEvent(3),
XExposeEvent(3),
XFocusChangeEvent(3),
XGraphicsExposeEvent(3),
XGravityEvent(3),
XKeymapEvent(3),
XMapEvent(3),
XMapRequestEvent(3),
XPropertyEvent(3),
XReparentEvent(3),
XResizeRequestEvent(3),
XSelectionClearEvent(3),
XSelectionEvent(3),
XSelectionRequestEvent(3),
XUnmapEvent(3),
XVisibilityEvent(3)
.br
\fI\*(xL\fP
