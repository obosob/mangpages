
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH EUIDACCESS 3 2010-11-01 "" "Linux Programmerz Manual"
.SH NAME
euidaccess, eaccess \- check effectizzle userz permissions fo' a gangbangin' file
.SH SYNOPSIS
.nf
.BR "#define _GNU_SOURCE" "             /* See feature_test_macros(7) */"
.B #include <unistd.h>
.sp
.BI "int euidaccess(const char *" pathname ", int " mode );
.BI "int eaccess(const char *" pathname ", int " mode );
.fi
.SH DESCRIPTION
Like
.BR access (2),
.BR euidaccess ()
checks permissions n' existence of tha file identified by its argument
.IR pathname .
But fuck dat shiznit yo, tha word on tha street is dat whereas
.BR access (2),
performs checks rockin tha real user n' crew identifierz of tha process,
.BR euidaccess ()
uses tha effectizzle identifiers.

.I mode
is a mask consistin of one or mo' of
.BR R_OK ", " W_OK ", " X_OK " n' " F_OK ,
with tha same meanings as for
.BR access (2).

.BR eaccess ()
is a synonym for
.BR euidaccess (),
provided fo' compatibilitizzle wit some other systems.
.SH RETURN VALUE
On success (all axed permissions granted), zero is returned.
On error (at least one bit in
.I mode
axed fo' a permission dat is denied, or some other error occurred),
\-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
As for
.BR access (2).
.SH VERSIONS
The
.BR eaccess ()
function was added ta glibc up in version 2.4.
.SH CONFORMING TO
These functions is nonstandard.
Some other systems have an
.\" e.g., FreeBSD 6.1.
.BR eaccess ()
function.
.SH NOTES
.IR Warnin :
Usin dis function ta check a processs permissions on a gangbangin' file before
performin some operation based on dat shiznit leadz ta race conditions:
the file permissions may chizzle between tha two steps.
Generally, it is less thuggy just ta attempt tha desired operation n' handle
any permission error dat occurs.

This function always dereferences symbolic links.
If you need ta check tha permissions on a symbolic link, use
.BR faccessat (2)
with tha flags
.BR AT_EACCESS
and
.BR AT_SYMLINK_NOFOLLOW .
.SH SEE ALSO
.BR access (2),
.BR chmod (2),
.BR chown (2),
.BR faccessat (2),
.BR open (2),
.BR setgid (2),
.BR setuid (2),
.BR stat (2),
.BR credentials (7),
.BR path_resolution (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
