'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbSelectEvents 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbSelectEvents \-  Selects n' / or deselects fo' delivery of one or mo' Xkb 
events n' has dem served up under all conditions 
.SH SYNOPSIS
.HP
.B Bool XkbSelectEvents
.BI "(\^Display *" "display" "\^,"
.BI "unsigned int " "device_spec" "\^,"
.BI "unsigned long int " "bits_to_change" "\^,"
.BI "unsigned long int " "values_for_bits" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I display
connection ta tha X server 
.TP
.I device_spec
device ID, or XkbUseCoreKbd
.TP
.I bits_to_change
determines events ta be selected / deselected
.TP
.I joints_for_bits
1=>select, 0->deselect; fo' events up in bits_to_change
.SH DESCRIPTION
.LP
Xkb events is selected rockin a event mask, much tha same as aiiight core X 
events is selected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. But fuck dat shiznit yo, tha word on tha street is dat unlike selectin core X events, where you must 
specify tha selection status (on or off) fo' all possible event types whenever 
you wish ta chizzle tha selection criteria fo' any one event, Xkb allows you ta 
restrict tha justification ta only tha event types you wish ta chizzle. This 
means dat you do not need ta remember tha event selection joints fo' all 
possible types each time you wanna chizzle one of em.

Many Xkb event types is generated under nuff muthafuckin different circumstances. When 
selectin ta receive a Xkb event, you may specify either dat you want it 
delivered under all circumstances, or dat you want it served up only fo' a 
subset of tha possible circumstances. 

Yo ass can also deselect a event type dat was previously selected for, rockin tha 
same granularity.

Xkb serves up two functions ta select n' deselect delivery of Xkb events, n' you can put dat on yo' toast. 
.I XkbSelectEvents 
allows you ta select or deselect delivery of mo' than one Xkb 
event type at once. Events selected rockin 
.I XkbSelectEvents 
are served up ta yo' program under all circumstances dat generate tha events, n' you can put dat on yo' toast. 
To restrict delivery of a event ta a subset of tha conditions under which it 
occurs, use 
.I XkbSelectEventDetails. XkbSelectEventDetails 
only allows you ta chizzle tha selection conditions fo' a single event at a time, 
but it serves up a meanz of fine-tunin tha conditions under which tha event is 
delivered.

This request chizzlez tha Xkb event selection mask fo' tha keyboard specified by 
.I device_spec.

Each Xkb event dat can be selected is represented by a lil' bit up in the
.I bits_to_change 
and 
.I joints_for_bits 
masks. Only tha event selection bits specified by tha 
.I bits_to_change 
parameta is affected; any unspecified bits is left unchanged. Y'all KNOW dat shit, muthafucka! To turn on 
event selection fo' a event, set tha bit fo' tha event up in tha 
.I bits_to_change 
parameta n' set tha correspondin bit up in tha 
.I joints_for_bits 
parameter n' shit. To turn off event selection fo' a event, set tha bit fo' tha event 
in tha 
.I bits_to_change 
parameta n' do not set tha correspondin bit up in tha 
.I joints_for_bits 
parameter n' shit. Da valid joints fo' both of these parametas is a inclusive 
bitwise OR of tha masks shown up in Table 1. There is no intercourse ta return yo' 
clientz current event selection mask. Clients cannot set other clients' event 
selection masks.

Da X server reports tha events defined by Xkb ta yo' client application only 
if you have axed dem via a cold-ass lil call ta 
.I XkbSelectEvents 
or 
.I XkbSelectEventDetails. 
Specify tha event types up in which yo ass is horny bout a mask.

Table 1 lists tha event mask constants dat can be specified wit tha 
.I XkbSelectEvents 
request n' tha circumstances up in which tha mask should be specified.

.TS
c s s
l l l
l l l.
Table 1 XkbSelectEvents Mask Constants
_
Event Mask	Value	Notification Wanted
_
XkbNewKeyboardNotifyMask	(1L<<0)	Keyboard geometry chizzle 
XkbMapNotifyMask	(1L<<1)	Keyboard mappin chizzle 
XkbStateNotifyMask	(1L<<2)	Keyboard state chizzle 
XkbControlsNotifyMask	(1L<<3)	Keyboard control chizzle 
XkbIndicatorStateNotifyMask	(1L<<4)	Keyboard indicator state chizzle 
XkbIndicatorMapNotifyMask	(1L<<5)	Keyboard indicator map chizzle 
XkbNamesNotifyMask	(1L<<6)	Keyboard name chizzle 
XkbCompatMapNotifyMask	(1L<<7)	Keyboard compat map chizzle 
XkbBellNotifyMask	(1L<<8)	Bell 
XkbActionMessageMask	(1L<<9)	Action message 
XkbAccessXNotifyMask	(1L<<10)	AccessX features 
XkbExtensionDeviceNotifyMask	(1L<<11)	Extension thang 
XkbAllEventsMask	(0xFFF)	All Xkb events
.TE
 
If a lil' bit aint set up in tha 
.I bits_to_change 
parameter yo, but tha correspondin bit is set up in tha 
.I joints_for_bits 
parameter, a BadMatch protocol error thangs up in dis biatch. If a undefined bit is set up in 
either tha 
.I bits_to_change 
or tha 
.I joints_for_bits 
parameter, a BadValue protocol error thangs up in dis biatch.

All event selection bits is initially zero fo' clients rockin tha Xkb extension. I aint talkin' bout chicken n' gravy biatch. 
Once you set some bits, they remain set fo' yo' client until you clear dem via 
another call ta 
.I XkbSelectEvents, n' you can put dat on yo' toast. 

.I XkbSelectEvents 
returns False if tha Xkb extension has not been initilialized n' True 
otherwise.
.SH "RETURN VALUES"
.TP 15
True
Da 
.I XkbSelectEvents 
function returns True if tha Xkb extension has been initilialized.
.TP 15
False
Da 
.I XkbSelectEvents 
function returns False if tha Xkb extension has not been initilialized.
.SH "SEE ALSO"
.BR XkbSelectEventDetails (3),
.BR XkbUseCoreKbd (3)
