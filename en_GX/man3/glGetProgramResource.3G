'\" t
.\"     Title: glGetProgramResource
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETPROGRAMRESOURCE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetProgramResource \- retrieve joints fo' multiple propertizzlez of a single actizzle resource within a program object
.SH "C SPECIFICATION"
.HP \w'void\ glGetProgramResourceiv('u
.BI "void glGetProgramResourceiv(GLuint\ " "program" ", GLenum\ " "programInterface" ", GLuint\ " "index" ", GLsizei\ " "propCount" ", const\ Glenum\ *\ " "props" ", GLsizei\ " "bufSize" ", GLsizei\ *\ " "length" ", GLint\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Da name of a program object whose resources ta query\&.
.RE
.PP
\fIprogramInterface\fR
.RS 4
A token identifyin tha intercourse within
\fIprogram\fR
containin tha resource named
\fIname\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetProgramResourceiv\fR
returns joints fo' multiple propertizzlez of a single actizzle resource wit a index of
\fIindex\fR
in tha intercourse
\fIprogramInterface\fR
of program object
\fIprogram\fR\&. For each resource, joints for
\fIpropCount\fR
propertizzles specified by tha array
\fIprops\fR
are returned\&.
\fIpropCount\fR
may not be zero\& fo' realz. An error is generated if any value in
\fIprops\fR
is not one of tha propertizzles busted lyrics bout immediately belowor if any value in
\fIprops\fR
is not allowed for
\fIprogramInterface\fR\&. Da set of allowed
\fIprogramInterface\fR
values fo' each property can be found up in tha followin table:
.TS
allbox tab(:);
cB cB
^ ^.
T{
Property
T}:T{
Supported Interfaces
T}
:
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fBGL_NAME_LENGTH\fR
T}:T{
Any except \fBGL_ATOMIC_COUNTER_BUFFER\fR
T}
T{
\fBGL_TYPE\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR, \fBGL_TRANSFORM_FEEDBACK_VARYING\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_ARRAY_SIZE\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR, \fBGL_PROGRAM_INPUT\fR,
                                            \fBGL_PROGRAM_OUTPUT, VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR, \fBGL_TRANSFORM_FEEDBACK_VARYING\fR
T}
T{
\fBGL_OFFSET\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_BLOCK_INDEX\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_ARRAY_STRIDE\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_MATRIX_STRIDE\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_IS_ROW_MAJOR\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_ATOMIC_COUNTER_BUFFER_INDEX\fR
T}:T{
\fBGL_UNIFORM\fR
T}
T{
\fBGL_TEXTURE_BUFFER\fR
T}:T{
<emph>none</emph>
T}
T{
\fBGL_BUFFER_BINDING\fR
T}:T{
\fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR
T}
T{
\fBGL_BUFFER_DATA_SIZE\fR
T}:T{
\fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR
T}
T{
\fBGL_NUM_ACTIVE_VARIABLES\fR
T}:T{
\fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR
T}
T{
\fBGL_ACTIVE_VARIABLES\fR
T}:T{
\fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR
T}
T{
\fBGL_REFERENCED_BY_VERTEX_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_REFERENCED_BY_TESS_CONTROL_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_REFERENCED_BY_TESS_EVALUATION_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_REFERENCED_BY_GEOMETRY_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_REFERENCED_BY_FRAGMENT_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_REFERENCED_BY_COMPUTE_SHADER\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_UNIFORM_BLOCK\fR, \fBGL_ATOMIC_COUNTER_SHADER\fR,
                                            \fBGL_BUFFER\fR, \fBGL_SHADER_STORAGE_BLOCK\fR, \fBGL_BUFFER_VARIABLE\fR,
                                            \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_NUM_COMPATIBLE_SUBROUTINES\fR
T}:T{
\fBGL_VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR
T}
T{
\fBGL_COMPATIBLE_SUBROUTINES\fR
T}:T{
\fBGL_VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR
T}
T{
\fBGL_TOP_LEVEL_ARRAY_SIZE\fR
T}:T{
\fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_TOP_LEVEL_ARRAY_STRIDE\fR
T}:T{
\fBGL_BUFFER_VARIABLE\fR
T}
T{
\fBGL_LOCATION\fR
T}:T{
\fBGL_UNIFORM\fR, \fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR,
                                            \fBGL_VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR,
                                            \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR
T}
T{
\fBGL_LOCATION_INDEX\fR
T}:T{
\fBGL_PROGRAM_OUTPUT\fR
T}
T{
\fBGL_IS_PER_PATCH\fR
T}:T{
\fBGL_PROGRAM_INPUT\fR, \fBGL_PROGRAM_OUTPUT\fR
T}
.TE
.sp 1
.PP
For tha property
\fBGL_NAME_LENGTH\fR, a single integer identifyin tha length of tha name strang associated wit a actizzle variable, intercourse block, or subroutine is freestyled to
\fIparams\fR\&. Da name length includes a terminatin null character\&. For tha property
\fBGL_TYPE\fR, a single integer identifyin tha type of a actizzle variable is freestyled to
\fIparams\fR\&. Da integer returned is one of tha joints found up in table 2\&.16\&. For tha property
\fBGL_ARRAY_SIZE\fR, a single integer identifyin tha number of actizzle array elementz of a actizzle variable is freestyled to
\fIparams\fR\&. Da array size returned is up in unitz of tha type associated wit tha property TYPE\&. For actizzle variablez not correspondin ta a array of basic types, tha value zero is freestyled to
\fIparams\fR\&. For tha property
\fBGL_BLOCK_INDEX\fR, a single integer identifyin tha index of tha actizzle intercourse block containin a actizzle variable is freestyled to
\fIparams\fR\&. If tha variable aint tha gangmember of a intercourse block, tha value \-1 is freestyled to
\fIparams\fR\&. For tha property
\fBGL_OFFSET\fR, a single integer identifyin tha offset of a actizzle variable is freestyled to
\fIparams\fR\&. For actizzle variablez backed by a funky-ass buffer object, tha value freestyled is tha offset, up in basic machine units, relatizzle ta tha base of buffer range holdin tha jointz of tha variable\&. For actizzle variablez not backed by a funky-ass buffer object, a offset of \-1 is freestyled to
\fIparams\fR\&. For tha property
\fBGL_ARRAY_STRIDE\fR, a single integer identifyin tha stride between array elements up in a actizzle variable is freestyled to
\fIparams\fR\&. For actizzle variablez declared as a array of basic types, tha value freestyled is tha difference, up in basic machine units, between tha offsetz of consecutizzle elements up in a array\&. For actizzle variablez not declared as a array of basic types, zero is freestyled to
\fIparams\fR\&. For actizzle variablez not backed by a funky-ass buffer object, \-1 is freestyled to
\fIparams\fR, regardless of tha variable type\&. For tha property
\fBGL_MATRIX_STRIDE\fR, a single integer identifyin tha stride between columnz of a cold-ass lil column\-major matrix or rowz of a row\-major matrix is freestyled to
\fIparams\fR\&. For actizzle variablez declared a single matrix or array of matrices, tha value freestyled is tha difference, up in basic machine units, between tha offsetz of consecutizzle columns or rows up in each matrix\&. For actizzle variablez not declared as a matrix or array of matrices, zero is freestyled to
\fIparams\fR\&. For actizzle variablez not backed by a funky-ass buffer object, \-1 is freestyled to
\fIparams\fR, regardless of tha variable type\&. For tha property
\fBGL_IS_ROW_MAJOR\fR, a single integer identifyin whether a actizzle variable be a row\-major matrix is freestyled to
\fIparams\fR\&. For actizzle variablez backed by a funky-ass buffer object, declared as a single matrix or array of matrices, n' stored up in row\-major order, one is freestyled to
\fIparams\fR\&. For all other actizzle variables, zero is freestyled to
\fIparams\fR\&. For tha property
\fBGL_ATOMIC_COUNTER_BUFFER_INDEX\fR, a single integer identifyin tha index of tha actizzle atomic counta buffer containin a actizzle variable is freestyled to
\fIparams\fR\&. If tha variable aint a atomic counta uniform, tha value \-1 is freestyled to
\fIparams\fR\&. For tha property
\fBGL_BUFFER_BINDING\fR, ta index of tha buffer bindin point associated wit tha actizzle uniform block, shader storage block, or atomic counta buffer is freestyled to
\fIparams\fR\&. For tha property
\fBGL_BUFFER_DATA_SIZE\fR, then tha implementation\-dependent minimum total buffer object size, up in basic machine units, required ta hold all actizzle variablez associated wit a actizzle uniform block, shader storage block, or atomic counta buffer is freestyled to
\fIparams\fR\&. If tha final gangmember of a actizzle shader storage block be array wit no declared size, tha minimum buffer size is computed assumin tha array was declared as a array wit one element\&. For tha property
\fBGL_NUM_ACTIVE_VARIABLES\fR, tha number of actizzle variablez associated wit a actizzle uniform block, shader storage block, or atomic counta buffer is freestyled to
\fIparams\fR\&. For tha property
\fBGL_of ACTIVE_VARIABLES\fR, a array of actizzle variable indices associated wit a actizzle uniform block, shader storage block, or atomic counta buffer is freestyled to
\fIparams\fR\&. Da number of joints freestyled to
\fIparams\fR
for a actizzle resource is given by tha value of tha property
\fBGL_NUM_ACTIVE_VARIABLES\fR
for tha resource\&. For tha properties
\fBGL_REFERENCED_BY_VERTEX_SHADER\fR,
\fBGL_REFERENCED_BY_TESS_CONTROL_SHADER\fR,
\fBGL_REFERENCED_BY_TESS_EVALUATION_SHADER\fR,
\fBGL_REFERENCED_BY_GEOMETRY_SHADER\fR,
\fBGL_REFERENCED_BY_FRAGMENT_SHADER\fR, and
\fBGL_REFERENCED_BY_COMPUTE_SHADER\fR, a single integer is freestyled to
\fIparams\fR, identifyin whether tha actizzle resource is referenced by tha vertex, tessellation control, tessellation evaluation, geometry, or fragment shaders, respectively, up in tha program object\&. Da value one is freestyled to
\fIparams\fR
if a actizzle variable is referenced by tha correspondin shader, or if a actizzle uniform block, shader storage block, or atomic counta buffer gotz nuff at least one variable referenced by tha correspondin shader\&. Otherwise, tha value zero is freestyled to
\fIparams\fR\&. For tha property
\fBGL_TOP_LEVEL_ARRAY_SIZE\fR, a single integer identifyin tha number of actizzle array elementz of tha top\-level shader storage block member containin ta tha actizzle variable is freestyled to
\fIparams\fR\&. If tha top\-level block member aint declared as a array, tha value one is freestyled to
\fIparams\fR\&. If tha top\-level block member be a array wit no declared size, tha value zero is freestyled to
\fIparams\fR\&. For tha property
\fBGL_TOP_LEVEL_ARRAY_STRIDE\fR, a single integer identifyin tha stride between array elementz of tha top\-level shader storage block member containin tha actizzle variable is freestyled to
\fIparams\fR\&. For top\-level block thugz declared as arrays, tha value freestyled is tha difference, up in basic machine units, between tha offsetz of tha actizzle variable fo' consecutizzle elements up in tha top\-level array\&. For top\-level block thugz not declared as a array, zero is freestyled to
\fIparams\fR\&. For tha property
\fBGL_LOCATION\fR, a single integer identifyin tha assigned location fo' a actizzle uniform, input, output, or subroutine uniform variable is freestyled to
\fIparams\fR\&. For input, output, or uniform variablez wit locations specified by a layout qualifier, tha specified location is used\&. For vertex shader input or fragment shader output variablez without a layout qualifier, tha location assigned when a program is linked is freestyled to
\fIparams\fR\&. For all other input n' output variables, tha value \-1 is freestyled to
\fIparams\fR\&. For uniforms up in uniform blocks, tha value \-1 is freestyled to
\fIparams\fR\&. For tha property
\fBGL_LOCATION_INDEX\fR, a single integer identifyin tha fragment color index of a actizzle fragment shader output variable is freestyled to
\fIparams\fR\&. If tha actizzle variable be a output fo' a non\-fragment shader, tha value \-1 is ghon be freestyled to
\fIparams\fR\&. For tha property
\fBGL_IS_PER_PATCH\fR, a single integer identifyin whether tha input or output be a per\-patch attribute\&. If tha actizzle variable be a per\-patch attribute (declared wit the
patch
qualifier), tha value one is freestyled to
\fIparams\fR; otherwise, tha value zero is freestyled to
\fIparams\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not tha name of a existin program object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIpropCount\fR
is zero\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIprogramInterface\fR
is not one of tha accepted intercourse types\&.
.PP
\fBGL_INVLALID_ENUM\fR
is generated if any value in
\fIprops\fR
is not one of tha accepted tokens fo' tha intercourse
\fIprogramInterface\fR
.SH "SEE ALSO"
.PP
\fBglGetProgramResourceName\fR(),
\fBglGetGetProgramResourceIndex\fR(),
\fBglGetProgramResourceLocation\fR(),
\fBglGetProgramResourceLocationIndex\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
