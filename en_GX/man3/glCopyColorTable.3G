'\" t
.\"     Title: glCopyColorTable
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCOPYCOLORTABLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCopyColorTable \- copy pixels tha fuck into a cold-ass lil color table
.SH "C SPECIFICATION"
.HP \w'void\ glCopyColorTable('u
.BI "void glCopyColorTable(GLenum\ " "target" ", GLenum\ " "internalformat" ", GLint\ " "x" ", GLint\ " "y" ", GLsizei\ " "width" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Da color table target\&. Must be
\fBGL_COLOR_TABLE\fR,
\fBGL_POST_CONVOLUTION_COLOR_TABLE\fR, or
\fBGL_POST_COLOR_MATRIX_COLOR_TABLE\fR\&.
.RE
.PP
\fIinternalformat\fR
.RS 4
Da internal storage format of tha texture image\&. Must be one of tha followin symbolic constants:
\fBGL_ALPHA\fR,
\fBGL_ALPHA4\fR,
\fBGL_ALPHA8\fR,
\fBGL_ALPHA12\fR,
\fBGL_ALPHA16\fR,
\fBGL_LUMINANCE\fR,
\fBGL_LUMINANCE4\fR,
\fBGL_LUMINANCE8\fR,
\fBGL_LUMINANCE12\fR,
\fBGL_LUMINANCE16\fR,
\fBGL_LUMINANCE_ALPHA\fR,
\fBGL_LUMINANCE4_ALPHA4\fR,
\fBGL_LUMINANCE6_ALPHA2\fR,
\fBGL_LUMINANCE8_ALPHA8\fR,
\fBGL_LUMINANCE12_ALPHA4\fR,
\fBGL_LUMINANCE12_ALPHA12\fR,
\fBGL_LUMINANCE16_ALPHA16\fR,
\fBGL_INTENSITY\fR,
\fBGL_INTENSITY4\fR,
\fBGL_INTENSITY8\fR,
\fBGL_INTENSITY12\fR,
\fBGL_INTENSITY16\fR,
\fBGL_R3_G3_B2\fR,
\fBGL_RGB\fR,
\fBGL_RGB4\fR,
\fBGL_RGB5\fR,
\fBGL_RGB8\fR,
\fBGL_RGB10\fR,
\fBGL_RGB12\fR,
\fBGL_RGB16\fR,
\fBGL_RGBA\fR,
\fBGL_RGBA2\fR,
\fBGL_RGBA4\fR,
\fBGL_RGB5_A1\fR,
\fBGL_RGBA8\fR,
\fBGL_RGB10_A2\fR,
\fBGL_RGBA12\fR, or
\fBGL_RGBA16\fR\&.
.RE
.PP
\fIx\fR
.RS 4
Da x coordinizzle of tha lower\-left corner of tha pixel rectangle ta be transferred ta tha color table\&.
.RE
.PP
\fIy\fR
.RS 4
Da y coordinizzle of tha lower\-left corner of tha pixel rectangle ta be transferred ta tha color table\&.
.RE
.PP
\fIwidth\fR
.RS 4
Da width of tha pixel rectangle\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglCopyColorTable\fR
loadz a cold-ass lil color table wit pixels from tha current
\fBGL_READ_BUFFER\fR
(rather than from main memory, as is tha case for
\fBglColorTable\fR())\&.
.PP
Da screen\-aligned pixel rectangle wit lower\-left corner at (\fIx\fR,\e
\fIy\fR) havin width
\fIwidth\fR
and height 1 is loaded tha fuck into tha color table\&. If any pixels within dis region is outside tha window dat be associated wit tha GL context, tha joints obtained fo' dem pixels is undefined\&.
.PP
Da pixels up in tha rectangle is processed just as if
\fBglReadPixels\fR()
were called, with
\fIinternalformat\fR
set ta RGBA yo, but processin stops afta tha final conversion ta RGBA\&.
.PP
Da four scale parametas n' tha four bias parametas dat is defined fo' tha table is then used ta scale n' bias tha R, G, B, n' A componentz of each pixel\&. Da scale n' bias parametas is set by calling
\fBglColorTableParameter\fR()\&.
.PP
Next, tha R, G, B, n' A joints is clamped ta tha range
0 1\&. Each pixel is then converted ta tha internal format specified by
\fIinternalformat\fR\&. This conversion simply maps tha component jointz of tha pixel (R, G, B, n' A) ta tha joints included up in tha internal format (red, green, blue, alpha, luminance, n' intensity)\&. Da mappin be as bigs up:
.PP
.TS
allbox tab(:);
lB cB cB cB cB cB cB.
T{
\fB
                        Internal Format
                        \fR
T}:T{
\fB
                        Red
                        \fR
T}:T{
\fB
                        Green
                        \fR
T}:T{
\fB
                        Blue
                        \fR
T}:T{
\fB
                        Alpha
                        \fR
T}:T{
\fB
                        Luminance
                        \fR
T}:T{
\fB
                        Intensity
                        \fR
T}
.T&
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c.
T{
\fBGL_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{

T}:T{

T}
T{
\fBGL_LUMINANCE\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}:T{

T}
T{
\fBGL_LUMINANCE_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{
R
T}:T{

T}
T{
\fBGL_INTENSITY\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}
T{
\fBGL_RGB\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{

T}:T{

T}:T{

T}
T{
\fBGL_RGBA\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}:T{

T}:T{

T}
.TE
.sp 1
.PP
Finally, tha red, green, blue, alpha, luminance, and/or intensitizzle componentz of tha resultin pixels is stored up in tha color table\&. They form a one\-dimensionizzle table wit indices up in tha range
0 width \- 1\&.
.PP
.SH "NOTES"
.PP
\fBglCopyColorTable\fR
is available only if
ARB_imaging
is returned from calling
\fBglGetString\fR()
with a argument of
\fBGL_EXTENSIONS\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated when
\fItarget\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIwidth\fR
is less than zero\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIinternalformat\fR
is not one of tha allowable joints\&.
.PP
\fBGL_TABLE_TOO_LARGE\fR
is generated if tha axed color table is too big-ass ta be supported by tha implementation\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglCopyColorTable\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetColorTable\fR(),
\fBglGetColorTableParameter\fR()
.SH "SEE ALSO"
.PP
\fBglColorTable\fR(),
\fBglColorTableParameter\fR(),
\fBglReadPixels\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
