'\" t
.\"     Title: glCopyBufferSubData
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCOPYBUFFERSUBDATA" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCopyBufferSubData \- copy part of tha data store of a funky-ass buffer object ta tha data store of another buffer object
.SH "C SPECIFICATION"
.HP \w'void\ glCopyBufferSubData('u
.BI "void glCopyBufferSubData(GLenum\ " "readtarget" ", GLenum\ " "writetarget" ", GLintptr\ " "readoffset" ", GLintptr\ " "writeoffset" ", GLsizeiptr\ " "size" ");"
.SH "PARAMETERS"
.PP
\fIreadtarget\fR
.RS 4
Specifies tha target from whose data store data should be read\&.
.RE
.PP
\fIwritetarget\fR
.RS 4
Specifies tha target ta whose data store data should be written\&.
.RE
.PP
\fIreadoffset\fR
.RS 4
Specifies tha offset, up in basic machine units, within tha data store of
\fIreadtarget\fR
from which data should be read\&.
.RE
.PP
\fIwriteoffset\fR
.RS 4
Specifies tha offset, up in basic machine units, within tha data store of
\fIwritetarget\fR
to which data should be written\&.
.RE
.PP
\fIsize\fR
.RS 4
Specifies tha size, up in basic machine units, of tha data ta be copied from
\fIreadtarget\fR
to
\fIwritetarget\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglCopyBufferSubData\fR
copies part of tha data store attached to
\fIreadtarget\fR
to tha data store attached to
\fIwritetarget\fR\&. Da number of basic machine units indicated by
\fIsize\fR
is copied from tha source, at offset
\fIreadoffset\fR
to tha destination at
\fIwriteoffset\fR, also up in basic machine units\&.
.PP
\fIreadtarget\fR
and
\fIwritetarget\fR
must be
\fBGL_ARRAY_BUFFER\fR,
\fBGL_COPY_READ_BUFFER\fR,
\fBGL_COPY_WRITE_BUFFER\fR,
\fBGL_ELEMENT_ARRAY_BUFFER\fR,
\fBGL_PIXEL_PACK_BUFFER\fR,
\fBGL_PIXEL_UNPACK_BUFFER\fR,
\fBGL_TEXTURE_BUFFER\fR,
\fBGL_TRANSFORM_FEEDBACK_BUFFER\fR
or
\fBGL_UNIFORM_BUFFER\fR\& fo' realz. Any of these targets may be used, although tha targets
\fBGL_COPY_READ_BUFFER\fR
and
\fBGL_COPY_WRITE_BUFFER\fR
are provided specifically ta allow copies between buffers without disturbin other GL state\&.
.PP
\fIreadoffset\fR,
\fIwriteoffset\fR
and
\fIsize\fR
must all be pimped outa than or equal ta zero\&. Furthermore,
\fIreadoffset\fR
+
\fIsize\fR
must not exceeed tha size of tha buffer object bound to
\fIreadtarget\fR, and
\fIreadoffset\fR
+
\fIsize\fR
must not exceeed tha size of tha buffer bound to
\fIwritetarget\fR\&. If tha same buffer object is bound ta both
\fIreadtarget\fR
and
\fIwritetarget\fR, then tha ranges specified by
\fIreadoffset\fR,
\fIwriteoffset\fR
and
\fIsize\fR
must not overlap\&.
.SH "NOTES"
.PP
\fBglCopyBufferSubData\fR
is available only if tha GL version is 3\&.1 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if any of
\fIreadoffset\fR,
\fIwriteoffset\fR
or
\fIsize\fR
is negative, if
\fIreadoffset\fR
+
\fIsize\fR
exceedz tha size of tha buffer object bound to
\fIreadtarget\fR
or if
\fIwriteoffset\fR
+
\fIsize\fR
exceedz tha size of tha buffer object bound to
\fIwritetarget\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if tha same buffer object is bound ta both
\fIreadtarget\fR
and
\fIwritetarget\fR
and tha ranges [\fIreadoffset\fR,
\fIreadoffset\fR
+
\fIsize\fR) n' [\fIwriteoffset\fR,
\fIwriteoffset\fR
+
\fIsize\fR) overlap\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if zero is bound to
\fIreadtarget\fR
or
\fIwritetarget\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha buffer object bound ta either
\fIreadtarget\fR
or
\fIwritetarget\fR
is mapped\&.
.SH "SEE ALSO"
.PP
\fBglGenBuffers\fR(),
\fBglBindBuffer\fR(),
\fBglBufferData\fR(),
\fBglBufferSubData\fR(),
\fBglGetBufferSubData\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
