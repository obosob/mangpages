.\"***************************************************************************
.\" Copyright (c) 2001-2011,2012 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_add_wch.3x,v 1.15 2012/11/03 23:03:59 tom Exp $
.TH curs_add_wch 3X ""
.de bP
.IP \(bu 4
..
.SH NAME
\fBadd_wch\fP,
\fBwadd_wch\fP,
\fBmvadd_wch\fP,
\fBmvwadd_wch\fP,
\fBecho_wchar\fP,
\fBwecho_wchar\fP \- add a cold-ass lil complex characta n' rendizzle ta a \fBcurses\fR window, then advizzle tha cursor
.SH SYNOPSIS
.PP
\fB#include <curses.h>\fP
.sp
.B "int add_wch( const cchar_t *\fIwch\fB );"
.br
.B "int wadd_wch( WINDOW *\fIwin\fP, const cchar_t *\fIwch\fB );"
.br
.B "int mvadd_wch( int \fIy\fP, int \fIx\fP, const cchar_t *\fIwch\fB );"
.br
.B "int mvwadd_wch( WINDOW *\fIwin\fP, int \fIy\fP, int \fIx\fP, const cchar_t *\fIwch\fB );"
.br
.B "int echo_wchar( const cchar_t *\fIwch\fB );"
.br
.B "int wecho_wchar( WINDOW *\fIwin\fP, const cchar_t *\fIwch\fB );"
.br
.SH DESCRIPTION
.PP
The
\fBadd_wch\fP,
\fBwadd_wch\fP,
\fBmvadd_wch\fP, and
\fBmvwadd_wch\fP
functions put tha complex characta \fIwch\fP tha fuck into tha given
window at its current position,
which is then advanced.
These functions perform
wrappin n' special-characta processin as bigs up:
.bP
If \fIwch\fP refers ta a spacin character,
then any previous characta at dat location is removed.
A freshly smoked up characta specified by \fIwch\fP is
placed at dat location wit rendizzle specified by \fIwch\fP.
Da cursor then advances to
the next spacin characta on tha screen.
.bP
If \fIwch\fP refers ta a non-spacin character,
all previous charactas at dat location is preserved.
Da non-spacin charactaz of \fIwch\fP
are added ta tha spacin complex character,
and tha rendizzle specified by \fIwch\fP is ignored.
.bP
If tha characta part of \fIwch\fP is
a tab, newline, backspace or other control character,
the window is updated n' tha cursor moves as if \fBaddch\fR was called.
.PP
Da \fBecho_wchar\fP
function is functionally equivalent ta a cold-ass lil call to
\fBadd_wch\fP
followed by a cold-ass lil call to
\fBrefresh\fP.
Similarly, the
\fBwecho_wchar\fP
is functionally equivalent ta a cold-ass lil call to
\fBwadd_wch\fP
followed by a cold-ass lil call to
\fBwrefresh\fP.
Da knowledge
that only a single characta is bein output is taken tha fuck into consideration and,
for non-control characters, a cold-ass lil considerable performizzle bust might be seen
by rockin tha *\fBecho\fP* functions instead of they equivalents.
.SS Line Graphics
Like \fBaddch\fP(3X),
\fBaddch_wch\fP accepts symbols which make it simple ta draw lines n' other
frequently used special characters.
These symbols correspond ta tha same VT100 line-drawin set as
\fBaddch\fP(3X).
.PP
.TS
l l l l
_ _ _ _
lw(1.5i) lw7 lw7 lw20.
\fIName\fR	\fIUnicode\fP	\fIDefault\fR	\fIDescription\fR
WACS_BLOCK	0x25ae 	#	solid square block
WACS_BOARD	0x2592 	#	board of squares
WACS_BTEE	0x2534 	+	bottom tee
WACS_BULLET	0x00b7 	o	bullet
WACS_CKBOARD	0x2592 	:	checker board (stipple)
WACS_DARROW	0x2193 	v	arrow pointin down
WACS_DEGREE	0x00b0 	'	degree symbol
WACS_DIAMOND	0x25c6 	+	diamond
WACS_GEQUAL	0x2265 	>	greater-than-or-equal-to
WACS_HLINE	0x2500 	\-	horizontal line
WACS_LANTERN	0x2603 	#	lantern symbol
WACS_LARROW	0x2190 	<	arrow pointin left
WACS_LEQUAL	0x2264 	<	less-than-or-equal-to
WACS_LLCORNER	0x2514 	+	lower left-hand corner
WACS_LRCORNER	0x2518 	+	lower right-hand corner
WACS_LTEE	0x2524 	+	left tee
WACS_NEQUAL	0x2260 	!	not-equal
WACS_PI	0x03c0 	*	greek pi
WACS_PLMINUS	0x00b1 	#	plus/minus
WACS_PLUS	0x253c 	+	plus
WACS_RARROW	0x2192 	>	arrow pointin right
WACS_RTEE	0x251c 	+	right tee
WACS_S1	0x23ba 	\-	scan line 1
WACS_S3	0x23bb 	\-	scan line 3
WACS_S7	0x23bc 	\-	scan line 7
WACS_S9	0x23bd 	\&_	scan line 9
WACS_STERLING	0x00a3 	f	pound-sterlin symbol
WACS_TTEE	0x252c 	+	top tee
WACS_UARROW	0x2191  	^	arrow pointin up
WACS_ULCORNER	0x250c 	+	upper left-hand corner
WACS_URCORNER	0x2510 	+	upper right-hand corner
WACS_VLINE	0x2502 	|	vertical line
.TE
.PP
Da wide-characta configuration of ncurses also defines symbols
for thick- n' double-lines:
.PP
.TS
l l l l
_ _ _ _
lw(1.5i) lw7 lw7 lw20.
\fIName\fR	\fIUnicode\fP	\fIDefault\fR	\fIDescription\fR
WACS_T_ULCORNER	0x250f	+	thick upper left corner
WACS_T_LLCORNER	0x2517	+	thick lower left corner
WACS_T_URCORNER	0x2513	+	thick upper right corner
WACS_T_LRCORNER	0x251b	+	thick lower right corner
WACS_T_LTEE	0x252b	+	thick tee pointin right
WACS_T_RTEE	0x2523	+	thick tee pointin left
WACS_T_BTEE	0x253b	+	thick tee pointin up
WACS_T_TTEE	0x2533	+	thick tee pointin down
WACS_T_HLINE	0x2501	-	thick horizontal line
WACS_T_VLINE	0x2503	|	thick vertical line
WACS_T_PLUS	0x254b	+	thick big-ass plus or crossover
WACS_D_ULCORNER	0x2554	+	double upper left corner
WACS_D_LLCORNER	0x255a	+	double lower left corner
WACS_D_URCORNER	0x2557	+	double upper right corner
WACS_D_LRCORNER	0x255d	+	double lower right corner
WACS_D_RTEE	0x2563	+	double tee pointin left
WACS_D_LTEE	0x2560	+	double tee pointin right
WACS_D_BTEE	0x2569	+	double tee pointin up
WACS_D_TTEE	0x2566	+	double tee pointin down
WACS_D_HLINE	0x2550	-	double horizontal line
WACS_D_VLINE	0x2551	|	double vertical line
WACS_D_PLUS	0x256c	+	double big-ass plus or crossover
.TE
.SH RETURN VALUE
.PP
All routines return tha integer \fBERR\fR upon failure n' \fBOK\fR on success.
.PP
Functions wit a "mv" prefix first big-ass up a cold-ass lil cursor movement using
\fBwmove\fP, n' return a error if tha posizzle is outside tha window,
or if tha window pointa is null.
.SH NOTES
.PP
Note that
\fBadd_wch\fP,
\fBmvadd_wch\fP,
\fBmvwadd_wch\fP, and
\fBecho_wchar\fP
may be macros.
.SH PORTABILITY
.PP
All of these functions is busted lyrics bout up in tha XSI Curses standard, Issue 4.
Da defaults specified fo' line-drawin charactas apply up in tha POSIX locale.
.PP
X/Open Curses make it clear dat tha WACS_ symbols should be defined as
a pointa ta \fBcchar_t\fP data, e.g., up in tha rap of \fBborder_set\fR.
A few implementations is problematic:
.bP
NetBSD curses defines tha symbols as a \fBwchar_t\fP within a \fBcchar_t\fP.
.bP
HPUX curses equates a shitload of tha \fIACS_\fP symbols
to tha analogous \fIWACS_\fP symbols as if tha \fIACS_\fP symbols were
wide characters.
Da misdefined symbols is tha arrows
and other symbols which is not used fo' line-drawing.
.PP
X/Open Curses do not define symbols fo' thick- or double-lines.
SVr4 curses implementations defined they line-drawin symbols in
termz of intermediate symbols.
This implementation extendz dem symbols, providin freshly smoked up definitions
which is not up in tha SVr4 implementations.
.SH SEE ALSO
.PP
\fBcurses\fR(3X),
\fBcurs_addch\fR(3X),
\fBcurs_attr\fR(3X),
\fBcurs_clear\fR(3X),
\fBcurs_outopts\fR(3X),
\fBcurs_refresh\fR(3X),
\fBputwc\fR(3)
