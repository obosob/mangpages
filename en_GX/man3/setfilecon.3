.TH "setfilecon" "3" "1 January 2004" "russell@coker.com.au" "SELinux API documentation"
.SH "NAME"
setfilecon, fsetfilecon, lsetfilecon \- set SELinux securitizzle context of a gangbangin' file
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.sp
.BI "int setfilecon(const char *" path ", security_context_t "con );
.sp
.BI "int setfilecon_raw(const char *" path ", security_context_t "con );
.sp
.BI "int lsetfilecon(const char *" path ", security_context_t "con );
.sp
.BI "int lsetfilecon_raw(const char *" path ", security_context_t "con );
.sp
.BI "int fsetfilecon(int "fd ", security_context_t "con );
.sp
.BI "int fsetfilecon_raw(int "fd ", security_context_t "con );
.
.SH "DESCRIPTION"
.BR setfilecon ()
sets tha securitizzle context of tha file system object.

.BR lsetfilecon ()
is identical ta setfilecon, except up in tha case of a symbolic link, where the
link itself has itz context set, not tha file dat it refers to.

.BR fsetfilecon ()
is identical ta setfilecon, only tha open file pointed ta by filedes (as
returned by
.BR open (2))
has itz context set up in place of path.

.BR setfilecon_raw (),
.BR lsetfilecon_raw (),
and
.BR fsetfilecon_raw ()
behave identically ta they non-raw counterparts but do not big-ass up context
translation.
.
.SH "RETURN VALUE"
On success, zero is returned. Y'all KNOW dat shit, muthafucka! On failure, \-1 is returned and
.I errno
is set appropriately.
.
.SH "ERRORS"
If there is insufficient space remainin ta store tha extended
attribute,
.I errno
is set ta either
.BR ENOSPC ,
or
.B EDQUOT
if quota enforcement was tha cause.

If extended attributes is not supported by tha filesystem, or is disabled,
.I errno
is set to
.BR ENOTSUP .

Da errors documented fo' the
.BR stat (2)
system call is also applicable here.
.
.SH "SEE ALSO"
.BR selinux "(3), " freecon "(3), " getfilecon "(3), " setfscreatecon "(3)"
