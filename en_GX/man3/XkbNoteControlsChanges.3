'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbNoteControlsChanges 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbNoteControlsChanges \- Notes tha chizzlez up in a cold-ass lil chizzlez structure when a cold-ass lil client receives a XkbControlsNotify 
event
.SH SYNOPSIS
.HP
.B void XkbNoteControlsChanges
.BI "(\^XkbControlsChangesPtr " "changes" "\^,"
.BI "XkbControlsNotifyEvent *" "new" "\^,"
.BI "unsigned int " "wanted" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- chizzles
recordz chizzlez indicated by new
.TP
.I \- new
 drops some lyrics ta which thangs have chizzled
.TP
.I \- wanted
 drops some lyrics ta which partz of freshly smoked up ta record up in chizzles
.SH DESCRIPTION
.LP
Whenever a gangbangin' field up in tha controls structure chizzlez up in tha serverz keyboard description, tha server sendz a 
XkbControlsNotify event ta all interested clients.To receive XkbControlsNotify events under all possible 
conditions, use
.I XkbSelectEvents 
and pass XkbControlsNotifyMask up in both 
.I bits_to_change 
and 
.I joints_for_bits.

To receive XkbControlsNotify events only under certain conditions, use
.I XkbSelectEventDetails 
usin XkbControlsNotify as tha 
.I event_type 
and specifyin tha desired state chizzlez up in 
.I bits_to_change 
and 
.I joints_for_bits 
usin mask bits from Table 1.

Table 1 shows tha actual joints fo' tha individual mask bits used ta select 
controls fo' 
modification n' ta enable n' disable tha control. Note dat tha same mask bit 
is used ta 
specify general modifications ta tha parametas used ta configure tha control 
(which), n' ta 
enable n' disable tha control (enabled_ctrls). Da anomalies up in tha table (no 
"ok" up in column) 
are fo' controls dat have no configurable attributes; n' fo' controls dat is 
not boolean 
controls n' therefore cannot be enabled or disabled.

.TS
c s s s
l l l l
l l l l
l l l l. 
Table 1 Controls Mask Bits
_
Mask Bit	which or	enabled	Value
	changed_ctrls	_ctrls
_
XkbRepeatKeysMask	ok	ok	(1L<<0)
XkbSlowKeysMask	ok	ok	(1L<<1)
XkbBounceKeysMask	ok	ok	(1L<<2)
XkbStickyKeysMask	ok	ok	(1L<<3)
XkbMouseKeysMask	ok	ok	(1L<<4)
XkbMouseKeysAccelMask	ok	ok	(1L<<5)
XkbAccessXKeysMask	ok	ok	(1L<<6)
XkbAccessXTimeoutMask	ok	ok	(1L<<7)
XkbAccessXFeedbackMask	ok	ok	(1L<<8)
XkbAudibleBellMask		ok	(1L<<9)
XkbOverlay1Mask		ok	(1L<<10)
XkbOverlay2Mask		ok	(1L<<11)
XkbIgnoreGroupLockMask		ok	(1L<<12)
XkbGroupsWrapMask	ok		(1L<<27)
XkbInternalModsMask	ok		(1L<<28)
XkbIgnoreLockModsMask	ok		(1L<<29)
XkbPerKeyRepeatMask	ok		(1L<<30)
XkbControlsEnabledMask	ok		(1L<<31)
XkbAccessXOptionsMask	ok	ok	(XkbStickyKeysMask | 
XkbAccessXFeedbackMask)
XkbAllBooleanCtrlsMask		ok	(0x00001FFF) 
XkbAllControlsMask	ok		(0xF8001FFF)
.TE

Da 
.I chizzled_ctrls 
field specifies tha controls components dat have chizzled n' consistz of bits taken from tha masks defined up in 
Table 1 wit "ok" up in tha 
.I chizzled_ctrls 
column.

Da controls currently enabled up in tha server is reported up in tha 
.I enabled_ctrls 
field. Y'all KNOW dat shit, muthafucka! If any controls was just enabled or disabled (that is, tha contentz of tha 
.I enabled_ctrls 
field chizzled), they is flagged up in tha 
.I enabled_ctrl_changes 
field. Y'all KNOW dat shit, muthafucka! Da valid bits fo' these fieldz is tha masks listed up in Table 1 wit "ok" up in tha 
.I enabled_ctrls 
column. I aint talkin' bout chicken n' gravy biatch. Da 
.I num_groups 
field reports tha number of crews bound ta tha key belongin ta da most thugged-out number of crews n' be automatically 
updated 
when tha keyboard mappin chizzles.

If tha chizzle was caused by a request from a cold-ass lil client, tha 
.I keycode 
and 
.I event_type 
fieldz is set ta zero n' tha 
.I req_major 
and 
.I req_minor 
fieldz identify tha request. Da 
.I req_major value is tha same ol' dirty as tha major extension opcode. Otherwise,
.I event_type 
is set ta tha type of event dat caused tha chizzle (one of KeyPress, KeyRelease, DeviceKeyPress, 
DeviceKeyRelease, 
ButtonPress or ButtonRelease), n' 
.I req_major 
and 
.I req_minor 
are undefined. Y'all KNOW dat shit, muthafucka! If 
.I event_type 
is KeyPress, KeyRelease, DeviceKeyPress, or DeviceKeyRelease, tha 
.I keycode 
field is set ta tha key dat caused tha chizzle. If 
.I event_type 
is ButtonPress or ButtonRelease, 
.I keycode 
gotz nuff tha button number n' shit. 

When a cold-ass lil client receives a XkbControlsNotify event, it can note tha chizzlez up in a cold-ass lil chizzlez structure rockin 
.I XkbNoteControlsChanges.

Da 
.I wanted 
parameta be a funky-ass bitwise inclusive OR of bits taken from tha set of masks specified up in Table 1 wit "ok" up in tha 
.I chizzled_ctrls 
column. I aint talkin' bout chicken n' gravy biatch. 
.I XkbNoteControlsChanges 
copies any chizzlez reported up in 
.I freshly smoked up 
and specified up in 
.I wanted 
into tha chizzlez record specified by 
.I old.
.SH STRUCTURES
.LP
.nf
Da structure fo' tha XkbControlsNotify event is defined as bigs up:

typedef struct {
    int           type;          /\(** Xkb extension base event code */
    unsigned long serial;        /\(** X server serial number fo' event */
    Bool          send_event;    /\(** True => synthetically generated */
    Display *     display;       /\(** server connection where event generated */
    Time          time;          /\(** server time when event generated */
    int           xkb_type;      /\(** XkbCompatMapNotify */
    int           device;        /\(** Xkb thang ID, aint gonna be XkbUseCoreKbd */
    unsigned int  chizzled_ctrls; /\(** bits indicatin which controls data have chizzled*/
    unsigned int  enabled_ctrls; /\(** controls currently enabled up in server */
    unsigned int  enabled_ctrl_changes; /\(** bits indicatin enabled/disabled controls */
    int           num_groups;    /\(** current number of keyboard crews */
    KeyCode       keycode;       /\(** != 0 => keycode of key causin chizzle */
    char          event_type;    /\(** Type of event causin chizzle */
    char          req_major;     /\(** major event code of event causin chizzle */
    char          req_minor;     /\(** minor event code of event causin chizzle */
} XkbControlsNotifyEvent;
.fi
.SH "SEE ALSO"
.BR XkbSelectEventDetails (3),
.BR XkbSelectEvents (3)
