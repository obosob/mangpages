.\" Written by Mike Haardt, Fri Nov 25 14:51:42 MET 1994
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Added sigsetjmp, Sun Mar  2 22:03:05 EST 1997, jrv@vanzandt.mv.com
.\" Modifications, Sun Feb 26 14:39:45 1995, faith@cs.unc.edu
.\" "
.TH SETJMP 3 2009-06-26 "" "Linux Programmerz Manual"
.SH NAME
setjmp, sigsetjmp \- save stack context fo' nonlocal goto
.SH SYNOPSIS
.B #include <setjmp.h>
.sp
.nf
.BI "int setjmp(jmp_buf " env );

.BI "int sigsetjmp(sigjmp_buf " env ", int " savesigs );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR setjmp ():
see NOTES.
.br
.BR sigsetjmp ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_C_SOURCE
.SH DESCRIPTION
.BR setjmp ()
and
.BR longjmp (3)
are useful fo' dealin wit errors
and interrupts encountered up in a low-level subroutine of a program.
.BR setjmp ()
saves tha stack context/environment in
.I env
for
lata use by
.BR longjmp (3).
Da stack context is ghon be invalidated
if tha function which called
.BR setjmp ()
returns.
.P
.BR sigsetjmp ()
is similar to
.BR setjmp ().
If, n' only if,
.I savesigs
is nonzero,
the processs current signal mask is saved in
.I env
and is ghon be restored if a
.BR siglongjmp (3)
is lata performed wit this
.IR env .
.SH RETURN VALUE
.BR setjmp ()
and
.BR sigsetjmp ()
return 0 if returnin directly, and
nonzero when returnin from
.BR longjmp (3)
or
.BR siglongjmp (3)
usin tha saved context.
.SH CONFORMING TO
C89, C99, n' POSIX.1-2001 specify
.BR setjmp ().
POSIX.1-2001 specifies
.BR sigsetjmp ().
.SH NOTES
POSIX do not specify whether
.BR setjmp ()
will save tha signal mask.
In System V it will not.
In 4.3BSD it will, n' there
is a gangbangin' function
.B _setjmp
that will not.
By default, Linux/glibc bigs up tha System V behavior,
but tha BSD behavior is provided if the
.BR _BSD_SOURCE
feature test macro is defined n' none of
.BR _POSIX_SOURCE ,
.BR _POSIX_C_SOURCE ,
.BR _XOPEN_SOURCE ,
.BR _XOPEN_SOURCE_EXTENDED ,
.BR _GNU_SOURCE ,
or
.B _SVID_SOURCE
is defined.

If you wanna portably save n' restore signal masks, use
.BR sigsetjmp ()
and
.BR siglongjmp (3).
.P
.BR setjmp ()
and
.BR sigsetjmp ()
make programs hard ta understand
and maintain.
If possible a alternatizzle should be used.
.SH SEE ALSO
.BR longjmp (3),
.BR siglongjmp (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
