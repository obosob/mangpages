.TH PCRE_GET_NAMED_SUBSTRING 3 "24 June 2012" "PCRE 8.30"
.SH NAME
PCRE - Perl-compatible regular expressions
.SH SYNOPSIS
.rs
.sp
.B #include <pcre.h>
.PP
.SM
.B int pcre_get_named_substring(const pcre *\fIcode\fP,
.ti +5n
.B const char *\fIsubject\fP, int *\fIovector\fP,
.ti +5n
.B int \fIstringcount\fP, const char *\fIstringname\fP,
.ti +5n
.B const char **\fIstringptr\fP);
.PP
.B int pcre16_get_named_substring(const pcre16 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR16 \fIsubject\fP, int *\fIovector\fP,
.ti +5n
.B int \fIstringcount\fP, PCRE_SPTR16 \fIstringname\fP,
.ti +5n
.B PCRE_SPTR16 *\fIstringptr\fP);
.PP
.B int pcre32_get_named_substring(const pcre32 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR32 \fIsubject\fP, int *\fIovector\fP,
.ti +5n
.B int \fIstringcount\fP, PCRE_SPTR32 \fIstringname\fP,
.ti +5n
.B PCRE_SPTR32 *\fIstringptr\fP);
.
.SH DESCRIPTION
.rs
.sp
This be a cold-ass lil convenience function fo' extractin a cold-ass lil captured substrin by name. The
arguments are:
.sp
  \fIcode\fP          Compiled pattern
  \fIsubject\fP       Subject dat has been successfully matched
  \fIovector\fP       Offset vector dat \fBpcre[16|32]_exec()\fP used
  \fIstringcount\fP   Value returned by \fBpcre[16|32]_exec()\fP
  \fIstringname\fP    Name of tha required substring
  \fIstringptr\fP     Where ta put tha strang pointer
.sp
Da memory up in which tha substrin is placed is obtained by calling
\fBpcre[16|32]_malloc()\fP. Da convenience function
\fBpcre[16|32]_free_substring()\fP can be used ta free it when it is no longer
needed. Y'all KNOW dat shit, muthafucka! Da yield of tha function is tha length of tha extracted substring,
PCRE_ERROR_NOMEMORY if sufficient memory could not be obtained, or
PCRE_ERROR_NOSUBSTRING if tha strang name is invalid.
.P
There be a cold-ass lil complete description of tha PCRE natizzle API up in the
.\" HREF
\fBpcreapi\fP
.\"
page n' a thugged-out description of tha POSIX API up in the
.\" HREF
\fBpcreposix\fP
.\"
page.
