.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sat Jul 24 18:11:47 1993 by Rik Faith (faith@cs.unc.edu)
.\" 2007-06-15, Marc Boyer <marc.boyer@enseeiht.fr> + mtk
.\"     Improve rap of strncat().
.TH STRCAT 3  2012-07-19 "GNU" "Linux Programmerz Manual"
.SH NAME
strcat, strncat \- concatenate two strings
.SH SYNOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *strcat(char *" dest ", const char *" src );
.sp
.BI "char *strncat(char *" dest ", const char *" src ", size_t " n );
.fi
.SH DESCRIPTION
The
.BR strcat ()
function appendz the
.I src
strin ta the
.I dest
string,
overwritin tha terminatin null byte (\(aq\\0\(aq) all up in tha end of
.IR dest ,
and then addz a terminatin null byte.
Da strings may not overlap, n' the
.I dest
strin must have
enough space fo' tha result.
If
.I dest
is not big-ass enough, program behavior is unpredictable;
.IR "buffer overruns is a gangbangin' straight-up avenue fo' comin' at secure programs" .
.PP
The
.BR strncat ()
function is similar, except that
.IP * 3
it will use at most
.I n
bytes from
.IR src ;
and
.IP *
.I src
does not need ta be null-terminated if it gotz nuff
.I n
or mo' bytes.
.PP
As with
.BR strcat (),
the resultin strang in
.I dest
is always null-terminated.
.PP
If
.IR src
gotz nuff
.I n
or mo' bytes,
.BR strncat ()
writes
.I n+1
bytes to
.I dest
.RI ( n
from
.I src
plus tha terminatin null byte).
Therefore, tha size of
.I dest
must be at least
.IR "strlen(dest)+n+1" .

A simple implementation of
.BR strncat ()
might be:
.in +4n
.nf

char*
strncat(char *dest, const char *src, size_t n)
{
    size_t dest_len = strlen(dest);
    size_t i;

    fo' (i = 0 ; i < n && src[i] != \(aq\\0\(aq ; i++)
        dest[dest_len + i] = src[i];
    dest[dest_len + i] = \(aq\\0\(aq;

    return dest;
}
.fi
.in
.SH RETURN VALUE
The
.BR strcat ()
and
.BR strncat ()
functions return a pointa ta tha resultin string
.IR dest .
.SH CONFORMING TO
SVr4, 4.3BSD, C89, C99.
.SH NOTES
Some systems (the BSDs, Solaris, n' others) provide tha followin function:

    size_t strlcat(char *dest, const char *src, size_t size);

This function appendz tha null-terminated string
.I src
to tha string
.IR dest ,
copyin at most
.IR "size\-strlen(dest)\-1"
from
.IR src ,
and addz a null terminator ta tha result,
.I unless
.IR size
is less than
.IR strlen(dest) .
This function fixes tha buffer overrun problem of
.BR strcat (),
but tha calla must still handle tha possibilitizzle of data loss if
.I size
is too small.
Da function returns tha length of tha string
.BR strlcat ()
tried ta create; if tha return value is pimped outa than or equal to
.IR size ,
data loss occurred.
If data loss matters, tha caller
.I must
either check tha arguments before tha call, or test tha function return value.
.BR strlcat ()
is not present up in glibc n' aint standardized by POSIX,
.\" https://lwn.net/Articles/506530/
but be available on Linux via the
.IR libbsd
library.
.SH SEE ALSO
.BR bcopy (3),
.BR memccpy (3),
.BR memcpy (3),
.BR strcpy (3),
.BR strang (3),
.BR strncpy (3),
.BR wcscat (3),
.BR wcsncat (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
