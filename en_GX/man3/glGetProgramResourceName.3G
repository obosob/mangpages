'\" t
.\"     Title: glGetProgramResourceName
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETPROGRAMRESOURCE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetProgramResourceName \- query tha name of a indexed resource within a program
.SH "C SPECIFICATION"
.HP \w'void\ glGetProgramResourceName('u
.BI "void glGetProgramResourceName(GLuint\ " "program" ", GLenum\ " "programInterface" ", GLuint\ " "index" ", GLsizei\ " "bufSize" ", GLsizei\ *\ " "length" ", char\ *\ " "name" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Da name of a program object whose resources ta query\&.
.RE
.PP
\fIprogramInterface\fR
.RS 4
A token identifyin tha intercourse within
\fIprogram\fR
containin tha indexed resource\&.
.RE
.PP
\fIindex\fR
.RS 4
Da index of tha resource within
\fIprogramInterface\fR
of
\fIprogram\fR\&.
.RE
.PP
\fIbufSize\fR
.RS 4
Da size of tha characta array whose address is given by
\fIname\fR\&.
.RE
.PP
\fIlength\fR
.RS 4
Da address of a variable which will receive tha length of tha resource name\&.
.RE
.PP
\fIname\fR
.RS 4
Da address of a cold-ass lil characta array tha fuck into which is ghon be freestyled tha name of tha resource\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetProgramResourceName\fR
retrieves tha name strang assigned ta tha single actizzle resource wit a index of
\fIindex\fR
in tha intercourse
\fIprogramInterface\fR
of program object
\fIprogram\fR\&.
\fIindex\fR
must be less than tha number of entries up in tha actizzle resource list for
\fIprogramInterface\fR\&.
.PP
\fIprogram\fR
must be tha name of a existin program object\&.
\fIprogramInterface\fR
is tha name of tha intercourse within
\fIprogram\fR
which gotz nuff tha resource n' must be one of tha followin joints:
.PP
\fBGL_UNIFORM\fR
.RS 4
Da query is targeted all up in tha set of actizzle uniforms within
\fIprogram\fR\&.
.RE
.PP
\fBGL_UNIFORM_BLOCK\fR
.RS 4
Da query is targeted all up in tha set of actizzle uniform blocks within
\fIprogram\fR\&.
.RE
.PP
\fBGL_PROGRAM_INPUT\fR
.RS 4
Da query is targeted all up in tha set of actizzle input variablez used by tha straight-up original gangsta shader stage of
\fIprogram\fR\&. If
\fIprogram\fR
gotz nuff multiple shader stages then input variablez from any stage other than tha straight-up original gangsta aint gonna be enumerated\&.
.RE
.PP
\fBGL_PROGRAM_OUTPUT\fR
.RS 4
Da query is targeted all up in tha set of actizzle output variablez produced by tha last shader stage of
\fIprogram\fR\&. If
\fIprogram\fR
gotz nuff multiple shader stages then output variablez from any stage other than tha last aint gonna be enumerated\&.
.RE
.PP
\fBGL_VERTEX_SUBROUTINE\fR, \fBGL_TESS_CONTROL_SUBROUTINE\fR, \fBGL_TESS_EVALUATION_SUBROUTINE\fR, \fBGL_GEOMETRY_SUBROUTINE\fR, \fBGL_FRAGMENT_SUBROUTINE\fR, \fBGL_COMPUTE_SUBROUTINE\fR
.RS 4
,
                ,
                ,
                ,
                ,
                Da query is targeted all up in tha set of actizzle subroutines fo' tha vertex, tessellation control, tessellation evaluation, geometry, fragment n' compute shader stages of
\fIprogram\fR, respectively\&.
.RE
.PP
\fBGL_VERTEX_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_CONTROL_SUBROUTINE_UNIFORM\fR, \fBGL_TESS_EVALUATION_SUBROUTINE_UNIFORM\fR, \fBGL_GEOMETRY_SUBROUTINE_UNIFORM\fR, \fBGL_FRAGMENT_SUBROUTINE_UNIFORM\fR, \fBGL_COMPUTE_SUBROUTINE_UNIFORM\fR
.RS 4
,
                ,
                ,
                ,
                ,
                Da query is targeted all up in tha set of actizzle subroutine uniform variablez used by tha vertex, tessellation control, tessellation evaluation, geometry, fragment n' compute shader stages of
\fIprogram\fR, respectively\&.
.RE
.PP
\fBGL_TRANSFORM_FEEDBACK_VARYING\fR
.RS 4
Da query is targeted all up in tha set of output variablez from tha last non\-fragment stage of
\fIprogram\fR
that would be captured if transform feedback was active\&.
.RE
.PP
\fBGL_BUFFER_VARIABLE\fR
.RS 4
Da query is targeted all up in tha set of actizzle buffer variablez used by
\fIprogram\fR\&.
.RE
.PP
\fBGL_SHADER_STORAGE_BLOCK\fR
.RS 4
Da query is targeted all up in tha set of actizzle shader storage blocks used by
\fIprogram\fR\&.
.RE
.PP
Da name strang assigned ta tha actizzle resource identified by
\fIindex\fR
is returned as a null\-terminated strang up in tha characta array whose address is given in
\fIname\fR\&. Da actual number of charactas freestyled into
\fIname\fR, excludin tha null terminator, is returned in
\fIlength\fR\&. If
\fIlength\fR
is NULL, no length is returned\&. Da maximum number of charactas dat may be freestyled into
\fIname\fR, includin tha null terminator, is specified by
\fIbufSize\fR\&. If tha length of tha name string
\fIincludin tha null terminator\fR
is pimped outa than
\fIbufSize\fR, tha first
\fIbufSize\fR\-1 charactaz of tha name strang is ghon be freestyled to
\fIname\fR, followed by a null terminator\&. If
\fIbufSize\fR
is zero, no error is ghon be generated but no charactas is ghon be freestyled to
\fIname\fR\&. Da length of tha longest name strang for
\fIprogramInterface\fR>, includin a null terminator, can be queried by calling
\fBglGetProgramInterface\fR()
with a
\fIpname\fR
of
\fBGL_MAX_NAME_LENGTH\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIprogramInterface\fR
is not one of tha accepted intercourse types\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogam\fR
is not tha name of a existin program\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIindex\fR
is pimped outa than or equal ta tha number of entries up in tha actizzle resource list for
\fIprogramInterface\fR\&.
.SH "SEE ALSO"
.PP
\fBglGetProgramResourceIndex\fR(),
\fBglGetGetProgramResource\fR(),
\fBglGetProgramResourceLocation\fR(),
\fBglGetProgramResourceLocationIndex\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
