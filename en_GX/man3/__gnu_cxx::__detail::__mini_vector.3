" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::__detail::__mini_vector< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef const _Tp & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef pointa \fBiterator\fP"
.br
.ti -1c
.RI "typedef _Tp * \fBpointer\fP"
.br
.ti -1c
.RI "typedef _Tp & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "reference \fBback\fP () const   throw ()"
.br
.ti -1c
.RI "iterator \fBbegin\fP () const   throw ()"
.br
.ti -1c
.RI "void \fBclear\fP ()  throw ()"
.br
.ti -1c
.RI "iterator \fBend\fP () const   throw ()"
.br
.ti -1c
.RI "void \fBerase\fP (iterator __pos)  throw ()"
.br
.ti -1c
.RI "void \fBinsert\fP (iterator __pos, const_reference __x)"
.br
.ti -1c
.RI "reference \fBoperator[]\fP (const size_type __pos) const   throw ()"
.br
.ti -1c
.RI "void \fBpop_back\fP ()  throw ()"
.br
.ti -1c
.RI "void \fBpush_back\fP (const_reference __x)"
.br
.ti -1c
.RI "size_type \fBsize\fP () const   throw ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>class __gnu_cxx::__detail::__mini_vector< _Tp >"
__mini_vector<> be a stripped down version of tha full-fledged std::vector<>\&. 

It be ta be used only fo' built-in types or PODs\&. Notable differences are:
.PP
1\&. Not all accessor functions is present\&. 2\&. Used ONLY fo' PODs\&. 3\&. No Allocator template argument\&. Uses operator new() ta git memory, n' operator delete() ta free it\&. Caveat: Da dtor do NOT free tha memory allocated, so dis a memory-leakin vector playa! 
.PP
Definizzle at line 69 of file bitmap_allocator\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
