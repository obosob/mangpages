.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XCreateColormap 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XCreateColormap, XCopyColormapAndFree, XFreeColormap, XColor \- create, copy, or destroy colormaps n' color structure
.SH SYNTAX
.HP
Colormap XCreateColormap\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^,
Visual *\fIvisual\fP\^, int \fIalloc\fP\^);
.HP
Colormap XCopyColormapAndFree\^(\^Display *\fIdisplay\fP\^, Colormap
\fIcolormap\fP\^); 
.HP
int XFreeColormap\^(\^Display *\fIdisplay\fP\^, Colormap \fIcolormap\fP\^); 
.SH ARGUMENTS
.IP \fIalloc\fP 1i
Specifies tha colormap entries ta be allocated.
Yo ass can pass 
.ZN AllocNone 
or 
.ZN AllocAll .
.ds Cm dat you wanna create, copy, set, or destroy
.IP \fIcolormap\fP 1i
Specifies tha colormap \*(Cm.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIvisual\fP 1i
Specifies a visual type supported on tha screen.
If tha visual type aint one supported by tha screen, 
a
.ZN BadMatch
error thangs up in dis biatch.
.ds Wi on whose screen you wanna create a cold-ass lil colormap
.IP \fIw\fP 1i
Specifies tha window \*(Wi.
.SH DESCRIPTION
The
.ZN XCreateColormap
function creates a cold-ass lil colormap of tha specified visual type fo' tha screen 
on which tha specified window resides n' returns tha colormap ID 
associated wit dat shit.
Note dat tha specified window is only used ta determine tha screen.
.LP
Da initial jointz of tha colormap entries is undefined fo' tha 
visual classes
.ZN GrayScale ,
.ZN PseudoColor ,
and
.ZN DirectColor .
For
.ZN StaticGray ,
.ZN StaticColor ,
and
.ZN TrueColor ,
the entries have defined joints,
but dem joints is specific ta tha visual n' is not defined by X.
For
.ZN StaticGray ,
.ZN StaticColor ,
and
.ZN TrueColor ,
alloc must be
.ZN AllocNone ,
or a
.ZN BadMatch
error thangs up in dis biatch.
For tha other visual classes,
if alloc is
.ZN AllocNone ,
the colormap initially has no allocated entries,
and clients can allocate em.
For shiznit bout tha visual types,
see section 3.1.
.LP
If alloc is
.ZN AllocAll ,
the entire colormap be allocated writable.
Da initial jointz of all allocated entries is undefined.
For
.ZN GrayScale
and
.ZN PseudoColor ,
the effect be as if an
.ZN XAllocColorCells
call returned all pixel joints from zero ta N \- 1,
where N is tha colormap entries value up in tha specified visual.
For
.ZN DirectColor ,
the effect be as if an
.ZN XAllocColorPlanes
call returned a pixel value of zero n' red_mask, green_mask, 
and blue_mask joints containin tha same bits as tha corresponding
masks up in tha specified visual.
But fuck dat shiznit yo, tha word on tha street is dat up in all cases,
none of these entries can be freed by using
.ZN XFreeColors .
.LP
.ZN XCreateColormap
can generate
.ZN BadAlloc ,
.ZN BadMatch ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XCopyColormapAndFree
function creates a cold-ass lil colormap of tha same visual type n' fo' tha same screen
as tha specified colormap n' returns tha freshly smoked up colormap ID.
It also moves all of tha clientz existin allocation from tha specified
colormap ta tha freshly smoked up colormap wit they color joints intact 
and they read-only or writable characteristics intact n' frees dem entries 
in tha specified colormap.
Color joints up in other entries up in tha freshly smoked up colormap is undefined.
If tha specified colormap was pimped by tha client wit alloc set to
.ZN AllocAll ,
the freshly smoked up colormap be also pimped wit 
.ZN AllocAll ,
all color joints fo' all entries is copied from tha specified colormap,
and then all entries up in tha specified colormap is freed.
If tha specified colormap was not pimped by tha client with
.ZN AllocAll ,
the allocations ta be moved is all dem pixels n' planes
that done been allocated by tha client using
.ZN XAllocColor ,
.ZN XAllocNamedColor ,
.ZN XAllocColorCells ,
or
.ZN XAllocColorPlanes
and dat aint been freed since they was allocated.
.LP
.ZN XCopyColormapAndFree
can generate
.ZN BadAlloc
and
.ZN BadColor 
errors.
.LP
The
.ZN XFreeColormap
function deletes tha association between tha colormap resource ID 
and tha colormap n' frees tha colormap storage.
But fuck dat shiznit yo, tha word on tha street is dat dis function has no effect on tha default colormap fo' a screen.
If tha specified colormap be a installed map fo' a screen,
it is uninstalled (see
.ZN XUninstallColormap ).
If tha specified colormap is defined as tha colormap fo' a window (by
.ZN XCreateWindow ,
.ZN XSetWindowColormap ,
or
.ZN XChangeWindowAttributes ),
.ZN XFreeColormap
changes tha colormap associated wit tha window to
.ZN None 
and generates a
.ZN ColormapNotify
event.
X do not define tha flavas displayed fo' a window wit a cold-ass lil colormap of
.ZN None .
.LP
.ZN XFreeColormap
can generate a
.ZN BadColor 
error.
.SH STRUCTURES
The
.ZN XColor
structure gotz nuff:
.LP
.Ds 0
typedef struct {
        unsigned long pixel;    /\&* pixel value */
        unsigned short red, green, blue;        /\&* rgb joints */
        char flags;     /\&* DoRed, DoGreen, DoBlue */  
        char pad;
} XColor;
.De
.LP
Da red, green, n' blue joints is always up in tha range 0 ta 65535
inclusive, independent of tha number of bits straight-up used up in the
display hardware.
Da server scalez these joints down ta tha range used by tha hardware.
Black is represented by (0,0,0), 
and white is represented by (65535,65535,65535).
.IN "Color"
In some functions,
the flags member controls which of tha red, green, n' blue thugz is used 
and can be tha inclusive OR of zero or mo' of
.ZN DoRed ,
.ZN DoChronic ,
and 
.ZN DoBlue .
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadColor
A value fo' a Colormap argument do not name a thugged-out defined Colormap.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllocColor(3),
XChangeWindowAttributes(3),
XCreateWindow(3),
XQueryColor(3),
XStoreColors(3)
.br
\fI\*(xL\fP
