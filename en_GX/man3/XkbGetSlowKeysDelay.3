'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbGetSlowKeysDelay 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbGetSlowKeysDelay \- Gets tha SlowKeys acceptizzle delay fo' a keyboard device
.SH SYNOPSIS
.HP
.B Bool XkbGetSlowKeysDelay
.BI "(\^Display *" "display" "\^,"
.BI "unsigned int " "device_spec" "\^,"
.BI "unsigned int *" "delay_rtrn" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- display
connection ta X server
.TP
.I \- device_spec
device ID, or XkbUseCoreKbd
.TP
.I \- delay_rtrn
backfilled wit SlowKeys delay, ms
.SH DESCRIPTION
.LP
Some playas may accidentally bump keys while movin a hand or typin stick toward 
the key they want. Usually, tha keys dat is accidentally bumped is just hit 
for a straight-up short period of time. Da SlowKeys control helps filta these 
accidental bumps by spittin some lyrics ta tha server ta wait a specified period, called tha 
.I SlowKeys acceptizzle delay, 
before deliverin key events, n' you can put dat on yo' toast. If tha key is busted out before dis period elapses, 
no key events is generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Users can then bump any number of keys on they way 
to tha one they want without accidentally gettin dem characters. Once they 
have reached tha key they want, they can then hold tha desired key long enough 
for tha computa ta accept dat shit. Right back up in yo muthafuckin ass. SlowKeys be a funky-ass boolean control wit one 
configurable attribute. 

When tha SlowKeys control be active, tha server reports tha initial key press, 
subsequent acceptizzle or rejection, n' release of any key ta interested clients 
by bustin  a appropriate AccessXNotify event (see section 10.6.4).

Da server can generate XkbAccessXNotify events fo' a shitload of tha global keyboard 
controls. 
Da detail field raps bout what tha fuck AccessX event just occurred n' can be any of 
the joints up in 
Table 1.
Da server can generate XkbAccessXNotify events fo' a shitload of tha global keyboard 
controls. 
Da detail field raps bout what tha fuck AccessX event just occurred n' can be any of 
the joints up in 
Table 1.

.TS
c s
l l
l lw(4i).
Table 1 AccessXNotify Events
_
detail	Reason
_
XkbAXN_SKPress	T{
A key was pressed when SlowKeys was enabled.
T}
XkbAXN_SKAccept	T{
A key was accepted (held longer than tha SlowKeys delay).
T}
XkbAXN_SKRelease	T{
An accepted SlowKeys key was busted out.
T}
XkbAXN_SKReject	T{
A key was rejected (released before tha SlowKeys delay expired).
T}
XkbAXN_BKAccept	T{
A key was accepted by BounceKeys.
T}
XkbAXN_BKReject	T{
A key was rejected (pressed before tha BounceKeys delay expired).
T}
XkbAXN_AXKWarning	T{
AccessXKeys be bout ta turn on/off StickyKeys or BounceKeys.
T}
.TE


Da 
.I keycode 
field reports tha keycode of tha key fo' which tha event occurred. Y'all KNOW dat shit, muthafucka! If tha action 
is related to
.I SlowKeys, 
the 
.I slowKeysDelay 
field gotz nuff tha current SlowKeys acceptizzle delay. If tha action is related 
to BounceKeys, 
the 
.I debounceDelay 
field gotz nuff tha current BounceKeys debounce delay.

Selectin fo' AccessX Events

To receive XkbAccessXNotify events under all possible conditions, use 
.I XkbSelectEvents
and pass XkbAccesXNotifyMask up in both 
.I bits_to_change 
and 
.I joints_for_bits.

To receive XkbStateNotify events only under certain conditions, use 
.I XkbSelectEventDetails 
usin XkbAccessXNotify as tha 
.I event_type 
and specifyin tha desired state chizzlez up in 
.I bits_to_change 
and 
.I joints_for_bits 
usin mask bits from Table 2.

.TS
c s s
l l l
l l lw(3i).
Table 2 AccessXNotify Event Details
_
XkbAccessXNotify Event Details	Value	Circumstances
_
XkbAXN_SKPressMask	(1<<0)	T{
Slow key press notification wanted
T}
XkbAXN_SKAcceptMask	(1<<1)	T{
Slow key accept notification wanted
T}
XkbAXN_SKRejectMask	(1<<2)	T{
Slow key reject notification wanted
T}
XkbAXN_SKReleaseMask	(1<<3)	T{
Slow key release notification wanted
T}
XkbAXN_BKAcceptMask	(1<<4)	T{
Bounce key accept notification wanted
T}
XkbAXN_BKRejectMask	(1<<5)	T{
Bounce key reject notification wanted
T}
XkbAXN_AXKWarningMask	(1<<6)	T{
AccessX warnin notification wanted
T}
XkbAllAccessXEventsMask	(0x7f)	T{
All AccessX features notifications wanted
T}
.TE

.I XkbGetSlowKeysDelay 
requests tha attributez of tha SlowKeys control from tha server, waits fo' a 
reply n' backfills 
.I delay_rtrn 
with tha SlowKeys delay attribute. 
.I XkbGetSlowKeysDelay 
returns True if successful; , 
.I XkbGetSlowKeysDelay 
returns False.
.SH "RETURN VALUES"
.TP 15
True
Da 
.I XkbGetSlowKeysDelay 
function returns True if tha request of tha Slowkeys control from tha server was 
successful.
.I 
.TP 15
False
Da 
.I XkbGetSlowKeysDelay 
function returns False if a cold-ass lil compatible version of tha Xkb extension aint 
available up in tha server.
.SH STRUCTURES
.LP
Da structure fo' tha XkbAccessXNotify event type be as bigs up:

.nf
typedef struct {
    int            type;           /\(** Xkb extension base event code */
    unsigned long  serial;         /\(** X server serial number fo' event */
    Bool           send_event;     /\(** True => synthetically generated */
    Display *      display;        /\(** server connection where event generated */
    Time           time;           /\(** server time when event generated */
    int            xkb_type;       /\(** XkbAccessXNotify */
    int            device;         /\(** Xkb thang ID, aint gonna be XkbUseCoreKbd 
*/
    int            detail;         /\(** XkbAXN_* */
    KeyCode        keycode;        /\(** key of event */
    int            slowKeysDelay;  /\(** current SlowKeys delay */
    int            debounceDelay;  /\(** current debounce delay */
} XkbAccessXNotifyEvent;
    
.fi    

