.\" Yo Emacs muthafucka! This file is -*- nroff -*- source.
.\"
.\" Author: Eamon Walsh (ewalsh@tycho.nsa.gov) 2007
.TH "selabel_lookup" "3" "18 Jun 2007" "" "SELinux API documentation"
.SH "NAME"
selabel_lookup \- obtain SELinux securitizzle context from a strang label
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.br
.B #include <selinux/label.h>
.sp
.BI "int selabel_lookup(struct selabel_handle *" hnd ,
.in +\w'int selabel_lookup('u
.BI "security_context_t *" context ,
.br
.BI "const char *" key ", int " type ");"
.in
.sp
.BI "int selabel_lookup_raw(struct selabel_handle *" hnd ,
.in +\w'int selabel_lookup_raw('u
.BI "security_context_t *" context ,
.br
.BI "const char *" key ", int " type ");"
.in
.
.SH "DESCRIPTION"
.BR selabel_lookup ()
performs a lookup operation on tha handle 
.IR hnd ,
returnin tha result up in tha memory pointed ta by 
.IR context ,
which must be freed by tha calla using
.BR freecon (3).
Da 
.I key
and
.I type
parametas is tha inputs ta tha lookup operation n' is interpreted accordin ta tha specific backend dat 
.I handle
is open on.

.BR selabel_lookup_raw ()
behaves identically ta 
.BR selabel_lookup ()
but do not big-ass up context translation.
.
.SH "RETURN VALUE"
On success, zero is returned. Y'all KNOW dat shit, muthafucka!  On error, \-1 is returned and
.I errno
is set appropriately.
.
.SH "ERRORS"
.TP
.B ENOENT
No context correspondin ta tha input 
.I key
and
.I type
was found.
.TP
.B EINVAL
The
.I key
and/or
.I type
inputs is invalid, or tha context bein returned failed validation.
.TP
.B ENOMEM
An attempt ta allocate memory failed.
.
.SH "AUTHOR"
Eamon Walsh <ewalsh@tycho.nsa.gov>
.
.SH "SEE ALSO"
.BR selabel_open (3),
.BR selabel_stats (3),
.BR selinux_set_callback (3),
.BR selinux (8)
