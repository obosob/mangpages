'\" t
.\"     Title: gluNurbsProperty
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLUNURBSPROPERTY" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gluNurbsProperty \- set a NURBS property
.SH "C SPECIFICATION"
.HP \w'void\ gluNurbsProperty('u
.BI "void gluNurbsProperty(GLUnurbs*\ " "nurb" ", GLenum\ " "property" ", GLfloat\ " "value" ");"
.SH "PARAMETERS"
.PP
\fInurb\fR
.RS 4
Specifies tha NURBS object (created with
\fBgluNewNurbsRenderer\fR())\&.
.RE
.PP
\fIproperty\fR
.RS 4
Specifies tha property ta be set\&. Valid joints are
\fBGLU_SAMPLING_TOLERANCE\fR,
\fBGLU_DISPLAY_MODE\fR,
\fBGLU_CULLING\fR,
\fBGLU_AUTO_LOAD_MATRIX\fR,
\fBGLU_PARAMETRIC_TOLERANCE\fR,
\fBGLU_SAMPLING_METHOD\fR,
\fBGLU_U_STEP\fR,
\fBGLU_V_STEP\fR, or
\fBGLU_NURBS_MODE\fR\&.
.RE
.PP
\fIvalue\fR
.RS 4
Specifies tha value of tha indicated property\&. Well shiiiit, it may be a numeric value or one of
\fBGLU_OUTLINE_POLYGON\fR,
\fBGLU_FILL\fR,
\fBGLU_OUTLINE_PATCH\fR,
\fBGLU_TRUE\fR,
\fBGLU_FALSE\fR,
\fBGLU_PATH_LENGTH\fR,
\fBGLU_PARAMETRIC_ERROR\fR,
\fBGLU_DOMAIN_DISTANCE\fR,
\fBGLU_NURBS_RENDERER\fR, or
\fBGLU_NURBS_TESSELLATOR\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBgluNurbsProperty\fR
is used ta control propertizzles stored up in a NURBS object\&. These propertizzles affect tha way dat a NURBS curve is rendered\&. Da accepted joints for
\fIproperty\fR
are as bigs up:
.PP
\fBGLU_NURBS_MODE\fR
.RS 4
\fIvalue\fR
should be set ta be either
\fBGLU_NURBS_RENDERER\fR
or
\fBGLU_NURBS_TESSELLATOR\fR\&. When set to
\fBGLU_NURBS_RENDERER\fR, NURBS objects is tessellated tha fuck into OpenGL primitives n' busted ta tha pipeline fo' rendering\&. When set to
\fBGLU_NURBS_TESSELLATOR\fR, NURBS objects is tessellated tha fuck into OpenGL primitives but tha vertices, normals, colors, and/or textures is retrieved back all up in a cold-ass lil callback intercourse (see
\fBgluNurbsCallback\fR())\&. This allows tha user ta cache tha tessellated thangs up in dis biatch fo' further processing\&. Da initial value is
\fBGLU_NURBS_RENDERER\fR\&.
.RE
.PP
\fBGLU_SAMPLING_METHOD\fR
.RS 4
Specifies how tha fuck a NURBS surface should be tessellated\&.
\fIvalue\fR
may be one of
\fBGLU_PATH_LENGTH\fR,
\fBGLU_PARAMETRIC_ERROR\fR,
\fBGLU_DOMAIN_DISTANCE\fR,
\fBGLU_OBJECT_PATH_LENGTH\fR, or
\fBGLU_OBJECT_PARAMETRIC_ERROR\fR\&. When set to
\fBGLU_PATH_LENGTH\fR, tha surface is rendered so dat tha maximum length, up in pixels, of tha edgez of tha tessellation polygons is no pimped outa than what tha fuck is specified by
\fBGLU_SAMPLING_TOLERANCE\fR\&.
.sp
\fBGLU_PARAMETRIC_ERROR\fR
specifies dat tha surface is rendered up in such a way dat tha value specified by
\fBGLU_PARAMETRIC_TOLERANCE\fR
raps bout tha maximum distance, up in pixels, between tha tessellation polygons n' tha surfaces they approximate\&.
.sp
\fBGLU_DOMAIN_DISTANCE\fR
allows playas ta specify, up in parametric coordinates, how tha fuck nuff sample points per unit length is taken in
\fIu\fR,
\fIv\fR
direction\&.
.sp
\fBGLU_OBJECT_PATH_LENGTH\fR
is similar to
\fBGLU_PATH_LENGTH\fR
except dat it is view independent; dat is, tha surface is rendered so dat tha maximum length, up in object space, of edgez of tha tessellation polygons is no pimped outa than what tha fuck is specified by
\fBGLU_SAMPLING_TOLERANCE\fR\&.
.sp
\fBGLU_OBJECT_PARAMETRIC_ERROR\fR
is similar to
\fBGLU_PARAMETRIC_ERROR\fR
except dat it is view independent; dat is, tha surface is rendered up in such a way dat tha value specified by
\fBGLU_PARAMETRIC_TOLERANCE\fR
raps bout tha maximum distance, up in object space, between tha tessellation polygons n' tha surfaces they approximate\&.
.sp
Da initial value of
\fBGLU_SAMPLING_METHOD\fR
is
\fBGLU_PATH_LENGTH\fR\&.
.RE
.PP
\fBGLU_SAMPLING_TOLERANCE\fR
.RS 4
Specifies tha maximum length, up in pixels or up in object space length unit, ta use when tha samplin method is set to
\fBGLU_PATH_LENGTH\fR
or
\fBGLU_OBJECT_PATH_LENGTH\fR\&. Da NURBS code is conservatizzle when renderin a cold-ass lil curve or surface, so tha actual length can be somewhat shorter\&. Da initial value is 50\&.0 pixels\&.
.RE
.PP
\fBGLU_PARAMETRIC_TOLERANCE\fR
.RS 4
Specifies tha maximum distance, up in pixels or up in object space length unit, ta use when tha samplin method is
\fBGLU_PARAMETRIC_ERROR\fR
or
\fBGLU_OBJECT_PARAMETRIC_ERROR\fR\&. Da initial value is 0\&.5\&.
.RE
.PP
\fBGLU_U_STEP\fR
.RS 4
Specifies tha number of sample points per unit length taken along the
\fIu\fR
axis up in parametric coordinates\&. Well shiiiit, it is needed when
\fBGLU_SAMPLING_METHOD\fR
is set to
\fBGLU_DOMAIN_DISTANCE\fR\&. Da initial value is 100\&.
.RE
.PP
\fBGLU_V_STEP\fR
.RS 4
Specifies tha number of sample points per unit length taken along the
\fIv\fR
axis up in parametric coordinate\&. Well shiiiit, it is needed when
\fBGLU_SAMPLING_METHOD\fR
is set to
\fBGLU_DOMAIN_DISTANCE\fR\&. Da initial value is 100\&.
.RE
.PP
\fBGLU_DISPLAY_MODE\fR
.RS 4
\fIvalue\fR
can be set to
\fBGLU_OUTLINE_POLYGON\fR,
\fBGLU_FILL\fR, or
\fBGLU_OUTLINE_PATCH\fR\&. When
\fBGLU_NURBS_MODE\fR
is set ta be
\fBGLU_NURBS_RENDERER\fR,
\fIvalue\fR
defines how tha fuck a NURBS surface should be rendered\&. When
\fIvalue\fR
is set to
\fBGLU_FILL\fR, tha surface is rendered as a set of polygons\&. When
\fIvalue\fR
is set to
\fBGLU_OUTLINE_POLYGON\fR, tha NURBS library draws only tha outlinez of tha polygons pimped by tessellation\&. When
\fIvalue\fR
is set to
\fBGLU_OUTLINE_PATCH\fR
just tha outlinez of patches n' trim curves defined by tha user is drawn\&.
.sp
When
\fBGLU_NURBS_MODE\fR
is set ta be
\fBGLU_NURBS_TESSELLATOR\fR,
\fIvalue\fR
defines how tha fuck a NURBS surface should be tessellated\&. When
\fBGLU_DISPLAY_MODE\fR
is set to
\fBGLU_FILL\fR
or
\fBGLU_OUTLINE_POLYGON\fR, tha NURBS surface is tessellated tha fuck into OpenGL triangle primitives dat can be retrieved back all up in callback functions\&. If
\fBGLU_DISPLAY_MODE\fR
is set to
\fBGLU_OUTLINE_PATCH\fR, only tha outlinez of tha patches n' trim curves is generated as a sequence of line strips dat can be retrieved back all up in callback functions\&.
.sp
Da initial value is
\fBGLU_FILL\fR\&.
.RE
.PP
\fBGLU_CULLING\fR
.RS 4
\fIvalue\fR
is a funky-ass boolean value that, when set to
\fBGLU_TRUE\fR, indicates dat a NURBS curve should be discarded prior ta tessellation if its control points lie outside tha current viewport\&. Da initial value is
\fBGLU_FALSE\fR\&.
.RE
.PP
\fBGLU_AUTO_LOAD_MATRIX\fR
.RS 4
\fIvalue\fR
is a funky-ass boolean value\&. When set to
\fBGLU_TRUE\fR, tha NURBS code downloadz tha projection matrix, tha modelview matrix, n' tha viewport from tha GL server ta compute samplin n' cullin matrices fo' each NURBS curve dat is rendered\&. Right back up in yo muthafuckin ass. Samplin n' cullin matrices is required ta determine tha tessellation of a NURBS surface tha fuck into line segments or polygons n' ta cull a NURBS surface if it lies outside tha viewport\&.
.sp
If dis mode is set to
\fBGLU_FALSE\fR, then tha program need ta provide a projection matrix, a modelview matrix, n' a viewport fo' tha NURBS renderer ta use ta construct samplin n' cullin matrices\&. This can be done wit the
\fBgluLoadSamplingMatrices\fR()
function\&. This mode is initially set to
\fBGLU_TRUE\fR\&. Changin it from
\fBGLU_TRUE\fR
to
\fBGLU_FALSE\fR
does not affect tha samplin n' cullin matrices until
\fBgluLoadSamplingMatrices\fR()
is called\&.
.RE
.SH "NOTES"
.PP
If
\fBGLU_AUTO_LOAD_MATRIX\fR
is true, samplin n' cullin may be executed incorrectly if NURBS routines is compiled tha fuck into a gangbangin' finger-lickin' display list\&.
.PP
A
\fIproperty\fR
of
\fBGLU_PARAMETRIC_TOLERANCE\fR,
\fBGLU_SAMPLING_METHOD\fR,
\fBGLU_U_STEP\fR, or
\fBGLU_V_STEP\fR, or a
\fIvalue\fR
of
\fBGLU_PATH_LENGTH\fR,
\fBGLU_PARAMETRIC_ERROR\fR,
\fBGLU_DOMAIN_DISTANCE\fR
are only available if tha GLU version is 1\&.1 or pimped outer\&. They is not valid parametas up in GLU 1\&.0\&.
.PP
\fBgluGetString\fR()
can be used ta determine tha GLU version\&.
.PP
\fBGLU_NURBS_MODE\fR
is only available if tha GLU version is 1\&.3 or pimped outer\&.
.PP
The
\fBGLU_OBJECT_PATH_LENGTH\fR
and
\fBGLU_OBJECT_PARAMETRIC_ERROR\fR
values fo' the
\fBGLU_SAMPLING_METHOD\fR
property is only available if tha GLU version is 1\&.3 or pimped outer\&.
.SH "SEE ALSO"
.PP
\fBgluGetNurbsProperty\fR(),
\fBgluGetString\fR(),
\fBgluLoadSamplingMatrices\fR(),
\fBgluNewNurbsRenderer\fR(),
\fBgluNurbsCallback\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
