'\" t
.\"     Title: glBeginConditionalRender
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBEGINCONDITIONALRE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBeginConditionalRender \- start conditionizzle rendering
.SH "C SPECIFICATION"
.HP \w'void\ glBeginConditionalRender('u
.BI "void glBeginConditionalRender(GLuint\ " "id" ", GLenum\ " "mode" ");"
.SH "PARAMETERS"
.PP
\fIid\fR
.RS 4
Specifies tha name of a occlusion query object whose thangs up in dis biatch is used ta determine if tha renderin commandz is discarded\&.
.RE
.PP
\fImode\fR
.RS 4
Specifies how
\fBglBeginConditionalRender\fR
interprets tha thangs up in dis biatch of tha occlusion query\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glEndConditionalRender('u
.BI "void glEndConditionalRender(" "void" ");"
.SH "DESCRIPTION"
.PP
Conditionizzle renderin is started using
\fBglBeginConditionalRender\fR
and ended using
\fBglEndConditionalRender\fR\&. Durin conditionizzle rendering, all vertex array commands, as well as
\fBglClear\fR()
and
\fBglClearBuffer\fR()
have no effect if tha (\fBGL_SAMPLES_PASSED\fR) result of tha query object
\fIid\fR
is zero, or if tha (\fBGL_ANY_SAMPLES_PASSED\fR) result is
\fBGL_FALSE\fR\&. Da thangs up in dis biatch of commandz settin tha current vertex state, such as
\fBglVertexAttrib\fR()
are undefined\&. If tha (\fBGL_SAMPLES_PASSED\fR) result is non\-zero or if tha (\fBGL_ANY_SAMPLES_PASSED\fR) result is
\fBGL_TRUE\fR, such commandz is not discarded\&. The
\fIid\fR
parameta to
\fBglBeginConditionalRender\fR
must be tha name of a query object previously returned from a cold-ass lil call to
\fBglGenQueries\fR()\&.
\fImode\fR
specifies how tha fuck tha thangs up in dis biatch of tha query object is ta be interpreted\&. If
\fImode\fR
is
\fBGL_QUERY_WAIT\fR, tha GL waits fo' tha thangs up in dis biatch of tha query ta be available n' then uses tha thangs up in dis biatch ta determine if subsequent renderin commandz is discarded\&. If
\fImode\fR
is
\fBGL_QUERY_NO_WAIT\fR, tha GL may chizzle ta unconditionally execute tha subsequent renderin commandz without waitin fo' tha query ta complete\&.
.PP
If
\fImode\fR
is
\fBGL_QUERY_BY_REGION_WAIT\fR, tha GL will also wait fo' occlusion query thangs up in dis biatch n' discard renderin commandz if tha result of tha occlusion query is zero\&. If tha query result is non\-zero, subsequent renderin commandz is executed yo, but tha GL may discard tha thangs up in dis biatch of tha commandz fo' any region of tha framebuffer dat did not contribute ta tha sample count up in tha specified occlusion query\& fo' realz. Any such discardin is done up in a implementation\-dependent manner yo, but tha renderin command thangs up in dis biatch may not be discarded fo' any samplez dat contributed ta tha occlusion query sample count\&. If
\fImode\fR
is
\fBGL_QUERY_BY_REGION_NO_WAIT\fR, tha GL operates as in
\fBGL_QUERY_BY_REGION_WAIT\fR yo, but may chizzle ta unconditionally execute tha subsequent renderin commandz without waitin fo' tha query ta complete\&.
.SH "NOTES"
.PP
\fBglBeginConditionalRender\fR
and
\fBglEndConditionalRender\fR
are available only if tha GL version is 3\&.0 or pimped outer\&.
.PP
The
\fBGL_ANY_SAMPLES_PASSED\fR
query result be available only if tha GL version is 3\&.3 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIid\fR
is not tha name of a existin query object\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is not one of tha accepted tokens\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglBeginConditionalRender\fR
is called while conditionizzle renderin be active, or if
\fBglEndConditionalRender\fR
is called while conditionizzle renderin is inactive\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIid\fR
is tha name of a query object wit a target other than
\fBGL_SAMPLES_PASSED\fR
or
\fBGL_ANY_SAMPLES_PASSED\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIid\fR
is tha name of a query currently up in progress\&.
.SH "SEE ALSO"
.PP
\fBglGenQueries\fR(),
\fBglDeleteQueries\fR(),
\fBglBeginQuery\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2009 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
