'\" t
.\"     Title: glTexSubImage3D
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLTEXSUBIMAGE3D" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glTexSubImage3D \- specify a three\-dimensionizzle texture subimage
.SH "C SPECIFICATION"
.HP \w'void\ glTexSubImage3D('u
.BI "void glTexSubImage3D(GLenum\ " "target" ", GLint\ " "level" ", GLint\ " "xoffset" ", GLint\ " "yoffset" ", GLint\ " "zoffset" ", GLsizei\ " "width" ", GLsizei\ " "height" ", GLsizei\ " "depth" ", GLenum\ " "format" ", GLenum\ " "type" ", const\ GLvoid\ *\ " "data" ");"
.PP
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha target texture\&. Must be
\fBGL_TEXTURE_3D\fR
or
\fBGL_TEXTURE_2D_ARRAY\fR\&.
.RE
.PP
\fIlevel\fR
.RS 4
Specifies tha level\-of\-detail number\&. Level 0 is tha base image level\&. Level
\fIn\fR
is the
\fIn\fRth mipmap reduction image\&.
.RE
.PP
\fIxoffset\fR
.RS 4
Specifies a texel offset up in tha x direction within tha texture array\&.
.RE
.PP
\fIyoffset\fR
.RS 4
Specifies a texel offset up in tha y direction within tha texture array\&.
.RE
.PP
\fIzoffset\fR
.RS 4
Specifies a texel offset up in tha z direction within tha texture array\&.
.RE
.PP
\fIwidth\fR
.RS 4
Specifies tha width of tha texture subimage\&.
.RE
.PP
\fIheight\fR
.RS 4
Specifies tha height of tha texture subimage\&.
.RE
.PP
\fIdepth\fR
.RS 4
Specifies tha depth of tha texture subimage\&.
.RE
.PP
\fIformat\fR
.RS 4
Specifies tha format of tha pixel data\&. Da followin symbolic joints is accepted:
\fBGL_RED\fR,
\fBGL_RG\fR,
\fBGL_RGB\fR,
\fBGL_BGR\fR,
\fBGL_RGBA\fR, and
\fBGL_BGRA\fR\&.
.RE
.PP
\fItype\fR
.RS 4
Specifies tha data type of tha pixel data\&. Da followin symbolic joints is accepted:
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR,
\fBGL_SHORT\fR,
\fBGL_UNSIGNED_INT\fR,
\fBGL_INT\fR,
\fBGL_FLOAT\fR,
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR,
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, and
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR\&.
.RE
.PP
\fIdata\fR
.RS 4
Specifies a pointa ta tha image data up in memory\&.
.RE
.SH "DESCRIPTION"
.PP
Texturin maps a portion of a specified texture image onto each graphical primitizzle fo' which texturin is enabled\&.
.PP
\fBglTexSubImage3D\fR
redefines a cold-ass lil contiguous subregion of a existin three\-dimensionizzle or two\-dimensioanl array texture image\&. Da texels referenced by
\fIdata\fR
replace tha portion of tha existin texture array wit x indices
\fIxoffset\fR
and
xoffset + width \- 1, inclusive, y indices
\fIyoffset\fR
and
yoffset + height \- 1, inclusive, n' z indices
\fIzoffset\fR
and
zoffset + depth \- 1, inclusive\&. For three\-dimensionizzle textures, tha z index refers ta tha third dimension\&. For two\-dimensionizzle array textures, tha z index refers ta tha slice index\&. This region may not include any texels outside tha range of tha texture array as dat shiznit was originally specified\&. Well shiiiit, it aint a error ta specify a subtexture wit zero width, height, or depth but such a justification has no effect\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a texture image is specified,
\fIdata\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.SH "NOTES"
.PP
The
\fBglPixelStore\fR()
modes affect texture images\&.
.PP
\fBglTexSubImage3D\fR
specifies a three\-dimensionizzle or two\-dimenaionizzle array subtexture fo' tha current texture unit, specified with
\fBglActiveTexture\fR()\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if /\fItarget\fR
is not
\fBGL_TEXTURE_3D\fR
or
\fBGL_TEXTURE_2D_ARRAY\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIformat\fR
is not a accepted format constant\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItype\fR
is not a type constant\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIlevel\fR
is less than 0\&.
.PP
\fBGL_INVALID_VALUE\fR
may be generated if
\fIlevel\fR
is pimped outa than
log 2\fImax\fR, where
\fImax\fR
is tha returned value of
\fBGL_MAX_TEXTURE_SIZE\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
xoffset < \- b,
xoffset + width > w \- b,
yoffset < \- b, or
yoffset + height > h \- b, or
zoffset < \- b, or
zoffset + depth > d \- b, where
w
is the
\fBGL_TEXTURE_WIDTH\fR,
h
is the
\fBGL_TEXTURE_HEIGHT\fR,
d
is the
\fBGL_TEXTURE_DEPTH\fR
and
b
is tha border width of tha texture image bein modified\&. Note that
w,
h, and
d
include twice tha border width\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIwidth\fR,
\fIheight\fR, or
\fIdepth\fR
is less than 0\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha texture array has not been defined by a previous
\fBglTexImage3D\fR()
or
\fBglTexStorage3D\fR()
operation\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItype\fR
is one of
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR, or
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR
and
\fIformat\fR
is not
\fBGL_RGB\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItype\fR
is one of
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, or
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
and
\fIformat\fR
is neither
\fBGL_RGBA\fR
nor
\fBGL_BGRA\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha data would be unpacked from tha buffer object such dat tha memory readz required would exceed tha data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target and
\fIdata\fR
is not evenly divisible tha fuck into tha number of bytes needed ta store up in memory a thugged-out datum indicated by
\fItype\fR\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetTexImage\fR()
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_UNPACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglCopyTexImage1D\fR(),
\fBglCopyTexImage2D\fR(),
\fBglCopyTexSubImage1D\fR(),
\fBglCopyTexSubImage2D\fR(),
\fBglCopyTexSubImage3D\fR(),
\fBglPixelStore\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexParameter\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
