'\" t
.\"     Title: glGetInternalFormativ
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETINTERNALFORMATI" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetInternalFormativ \- retrieve shiznit bout implementation\-dependent support fo' internal formats
.SH "C SPECIFICATION"
.HP \w'void\ glGetInternalFormativ('u
.BI "void glGetInternalFormativ(GLenum\ " "target" ", GLenum\ " "internalformat" ", GLenum\ " "pname" ", GLsizei\ " "bufSize" ", GLint\ *" "params" ");"
.HP \w'void\ glGetInternalFormati64v('u
.BI "void glGetInternalFormati64v(GLenum\ " "target" ", GLenum\ " "internalformat" ", GLenum\ " "pname" ", GLsizei\ " "bufSize" ", GLint64\ *" "params" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Indicates tha usage of tha internal format\&.
\fItarget\fR
must be
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_1D_ARRAY\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_2D_ARRAY\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_CUBE_MAP\fR,
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR,
\fBGL_TEXTURE_RECTANGLE\fR,
\fBGL_TEXTURE_BUFFER\fR,
\fBGL_RENDERBUFFER\fR,
\fBGL_TEXTURE_2D_MULTISAMPLE\fR
or
\fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR\&.
.RE
.PP
\fIinternalformat\fR
.RS 4
Specifies tha internal format bout which ta retrieve shiznit\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies tha type of shiznit ta query\&.
.RE
.PP
\fIbufSize\fR
.RS 4
Specifies tha maximum number of basic machine units dat may be freestyled to
\fIparams\fR
by tha function\&.
.RE
.PP
\fIparams\fR
.RS 4
Specifies tha address of a variable tha fuck into which ta write tha retrieved shiznit\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetInternalFormativ\fR
and
\fBglGetInternalFormati64v\fR
retrieve shiznit bout implementation\-dependent support fo' internal formats\&.
\fItarget\fR
indicates tha target wit which tha internal format is ghon be used n' must be one of
\fBGL_RENDERBUFFER\fR,
\fBGL_TEXTURE_2D_MULTISAMPLE\fR, or
\fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR, correspondin ta usage as a renderbuffer, two\-dimensionizzle multisample texture or two\-dimensionizzle multisample array texture, respectively\&.
.PP
\fIinternalformat\fR
specifies tha internal format bout which ta retrieve shiznit n' must be a cold-ass lil color\-renderable, depth\-renderable or stencil\-renderable format\&.
.PP
Da shiznit retrieved is ghon be freestyled ta memory addressed by tha pointa specified in
\fIparams\fR\&. No mo' than
\fIbufSize\fR
basic machine units is ghon be freestyled ta dis memory\&.
.PP
If
\fIpname\fR
is
\fBGL_NUM_SAMPLE_COUNTS\fR, tha number of sample counts dat would be returned by querying
\fBGL_SAMPLES\fR
will be returned in
\fIparams\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_SAMPLES\fR, tha sample counts supported for
\fIinternalformat\fR
and
\fItarget\fR
are freestyled into
\fIparams\fR
in descendin numeric order\&. Only positizzle joints is returned\&. Querying
\fBGL_SAMPLES\fR
with
\fIbufSize\fR
of one will return just tha maximum supported number of samplez fo' dis format\&. Da maximum value in
\fBGL_SAMPLES\fR
is guaranteed ta be at least tha lowest of tha following:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da value of \fBGL_MAX_INTEGER_SAMPLES\fR if \fIinternalformat\fR be a signed or unsigned integer format\&..RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da value of \fBGL_MAX_DEPTH_TEXTURE_SAMPLES\fR if \fIinternalformat\fR be a thugged-out depth\- or stencil\-renderable format and
                \fItarget\fR is \fBGL_TEXTURE_2D_MULTISAMPLE\fR, \fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR\&..RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da value of \fBGL_MAX_COLOR_TEXTURE_SAMPLES\fR if \fIinternalformat\fR be a cold-ass lil color\-renderable format and
                \fItarget\fR is \fBGL_TEXTURE_2D_MULTISAMPLE\fR or \fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR\&..RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da value of \fBGL_MAX_SAMPLES\fR\&..RE
.PP
If
\fIpname\fR
is
\fBGL_INTERNALFORMAT_SUPPORTED\fR,
\fIparams\fR
is set to
\fBGL_TRUE\fR
if
\fIinternalFormat\fR
is a supported internal format for
\fItarget\fR
and to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_INTERNALFORMAT_PREFERRED\fR,
\fIparams\fR
is set to
\fBGL_TRUE\fR
if
\fIinternalFormat\fR
is a format for
\fItarget\fR
that is preferred by tha implementation n' to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_INTERNALFORMAT_RED_SIZE\fR,
\fBGL_INTERNALFORMAT_GREEN_SIZE\fR,
\fBGL_INTERNALFORMAT_BLUE_SIZE\fR,
\fBGL_INTERNALFORMAT_ALPHA_SIZE\fR,
\fBGL_INTERNALFORMAT_DEPTH_SIZE\fR,
\fBGL_INTERNALFORMAT_STENCIL_SIZE\fR, or
\fBGL_INTERNALFORMAT_SHARED_SIZE\fR
then
\fIparams\fR
is set ta tha actual resolutions dat would be used fo' storin image array components fo' tha resource fo' tha red, green, blue, alpha, depth, stencil n' shared channels respectively\&. If
\fIinternalFormat\fR
is a cold-ass lil compressed internal format, then
\fIparams\fR
is set ta tha component resolution of a uncompressed internal format dat produces a image of roughly tha same qualitizzle as tha compressed algorithm\&. If tha internal format is unsupported, or if a particular component aint present up in tha format, 0 is freestyled to
\fIparams\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_INTERNALFORMAT_RED_TYPE\fR,
\fBGL_INTERNALFORMAT_GREEN_TYPE\fR,
\fBGL_INTERNALFORMAT_BLUE_TYPE\fR,
\fBGL_INTERNALFORMAT_ALPHA_TYPE\fR,
\fBGL_INTERNALFORMAT_DEPTH_TYPE\fR, or
\fBGL_INTERNALFORMAT_STENCIL_TYPE\fR
then
\fIparams\fR
is set ta a token identifyin tha data type used ta store tha respectizzle component\&. If the
\fIinternalFormat\fR
represents a cold-ass lil compressed internal format then tha types returned specify how tha fuck components is interpreted afta decompression\&.
.PP
If
\fIpname\fR
is
\fBGL_MAX_WIDTH\fR,
\fBGL_MAX_HEIGHT\fR,
\fBGL_MAX_DEPTH\fR, or
\fBGL_MAX_LAYERS\fR
then
\fIpname\fR
is filled wit tha maximum width, height, depth or layer count fo' textures wit internal format
\fIinternalFormat\fR, respectively\&. If
\fIpname\fR
is
\fBGL_MAX_COMBINED_DIMENSIONS\fR
then
\fIpname\fR
is filled wit tha maximum combined dimensionz of a texture of tha specified internal format\&.
.PP
If
\fIpname\fR
is
\fBGL_COLOR_COMPONENTS\fR
then
\fIparams\fR
is set ta tha value
\fBGL_TRUE\fR
if tha internal format gotz nuff any color component (i\&.e\&., red, green, blue or alpha) n' to
\fBGL_FALSE\fR
otherwise\&. If
\fIpname\fR
is
\fBGL_DEPTH_COMPONENTS\fR
or
\fBGL_STENCIL_COMPONENTS\fR
then
\fIparams\fR
is set to
\fBGL_TRUE\fR
if tha internal format gotz nuff a thugged-out depth or stencil component, respectively, n' to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_COLOR_RENDERABLE\fR,
\fBGL_DEPTH_RENDERABLE\fR
or
\fBGL_STENCIL_RENDERABLE\fR
then
\fIparams\fR
is set to
\fBGL_TRUE\fR
if tha specified internal format is color, depth or stencil renderable, respectively, n' to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_FRAMEBUFFER_RENDERABLE\fR
or
\fBGL_FRAMEBUFFER_RENDERABLE_LAYERED\fR
then
\fIparams\fR
is set ta one of
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
or
\fBGL_NONE\fR
to indicate dat framebuffer attachments (layered attachments up in tha case of
\fBGL_FRAMEBUFFER_RENDERABLE_LAYERED\fR) wit dat internal format is either renderable wit no restrictions, renderable wit some restrictions or not renderable at all\&.
.PP
If
\fIpname\fR
is
\fBGL_FRAMEBUFFER_BLEND\fR,
\fIparams\fR
is set to
\fBGL_TRUE\fR
to indicate dat tha internal format is supported fo' blendin operations when attached ta a gangbangin' framebuffer, n' to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_READ_PIXELS\fR
then
\fIparams\fR
is set to
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
or
\fBGL_NONE\fR
to dat either full support, limited support or no support at all is supplied fo' readin pixels from framebuffer attachments up in tha specified internal format\&.
.PP
If
\fIpname\fR
is
\fBGL_READ_PIXELS_FORMAT\fR
or
\fBGL_READ_PIXELS_TYPE\fR
then
\fIparams\fR
is filled wit tha format or type, respectively, most recommended ta obtain tha highest image qualitizzle n' performance\&. For
\fBGL_READ_PIXELS_FORMAT\fR, tha value returned in
\fIparams\fR
is a token dat be accepted fo' the
\fIformat\fR
argument to
\fBglReadPixels\fR()\&. For
\fBGL_READ_PIXELS_TYPE\fR, tha value returned in
\fIparams\fR
is a token dat be accepted fo' the
\fItype\fR
argument to
\fBglReadPixels\fR()\&.
.PP
If
\fIpname\fR
is
\fBGL_TEXTURE_IMAGE_FORMAT\fR
or
\fBGL_TEXTURE_IMAGE_TYPE\fR
then
\fIparams\fR
is filled wit tha implementation\-recommended format or type ta be used up in calls to
\fBglTexImage2D\fR()
and other similar functions\&. For
\fBGL_TEXTURE_IMAGE_FORMAT\fR,
\fIparams\fR
is filled wit a token suitable fo' use as the
\fIformat\fR
argument to
\fBglTexImage2D\fR()\&. For
\fBGL_TEXTURE_IMAGE_TYPE\fR,
\fIparams\fR
is filled wit a token suitable fo' use as the
\fItype\fR
argument to
\fBglTexImage2D\fR()\&.
.PP
If
\fIpname\fR
is
\fBGL_GET_TEXTURE_IMAGE_FORMAT\fR
or
\fBGL_GET_TEXTURE_IMAGE_TYPE\fR
then
\fIparams\fR
is filled wit tha implementation\-recommended format or type ta be used up in calls to
\fBglGetTexImage2D\fR()
and other similar functions\&. For
\fBGL_GET_TEXTURE_IMAGE_FORMAT\fR,
\fIparams\fR
is filled wit a token suitable fo' use as the
\fIformat\fR
argument to
\fBglGetTexImage2D\fR()\&. For
\fBGL_GET_TEXTURE_IMAGE_TYPE\fR,
\fIparams\fR
is filled wit a token suitable fo' use as the
\fItype\fR
argument to
\fBglGetTexImage2D\fR()\&.
.PP
If
\fIpname\fR
is
\fBGL_MIPMAP\fR
then
\fIpname\fR
is set to
\fBGL_TRUE\fR
to indicate dat tha specified internal format supports mipmaps n' to
\fBGL_FALSE\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_GENERATE_MIPMAP\fR
or
\fBGL_AUTO_GENERATE_MIPMAP\fR
then
\fIparams\fR
is indicates tha level of support fo' manual or automatic mipmap generation fo' tha specified internal format, respectively\&. Returned joints may be one of
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
and
\fBGL_NONE\fR
to indicate either full support, limited support or no support at all\&.
.PP
If
\fIpname\fR
is
\fBGL_COLOR_ENCODING\fR
then tha color encodin fo' tha resource is returned in
\fIparams\fR\&. Possible joints fo' color buffers are
\fBGL_LINEAR\fR
or
\fBGL_SRGB\fR, fo' linear or sRGB\-encoded color components, respectively\&. For non\-color formats (like fuckin depth or stencil), or fo' unsupported resources, tha value
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_SRGB_READ\fR, or
\fBGL_SRGB_WRITE\fR
then
\fIparams\fR
indicates tha level of support fo' readin n' freestylin ta sRGB encoded images, respectively\&. For
\fBGL_SRGB_READ\fR, support fo' convertin from sRGB colorspace on read operations is returned in
\fIparams\fR
and for
\fBGL_SRGB_WRITE\fR, support fo' convertin ta sRGB colorspace on write operations ta tha resource is returned in
\fIparams\fR\&.
\fIparams\fR
may be set to
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR, or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respecitively\&.
.PP
If
\fIpname\fR
is
\fBGL_FILTER\fR
the
\fIparams\fR
is set ta either
\fBGL_TRUE\fR
or
\fBGL_FALSE\fR
to indicate support or lack thereof fo' filta modes other than
\fBGL_NEAREST\fR
or
\fBGL_NEAREST_MIPMAP\fR
for tha specified internal format\&.
.PP
If
\fIpname\fR
is
\fBGL_VERTEX_TEXTURE\fR,
\fBGL_TESS_CONTROL_TEXTURE\fR,
\fBGL_TESS_EVALUATION_TEXTURE\fR,
\fBGL_GEOMETRY_TEXTURE\fR,
\fBGL_FRAGMENT_TEXTURE\fR, or
\fBGL_COMPUTE_TEXTURE\fR, then tha value freestyled to
\fIparams\fR
indicates support fo' use of tha resource as a source of texturin up in tha vertex, tessellation control, tessellation evaluation, geometry, fragment n' compute shader stages, respectively\&.
\fIparams\fR
may be set to
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respectively\&.
.PP
If
\fIpname\fR
is
\fBGL_TEXTURE_SHADOW\fR,
\fBGL_TEXTURE_GATHER\fR
or
\fBGL_TEXTURE_GATHER_SHADOW\fR
then tha value freestyled to
\fIparams\fR
indicates tha level of support fo' rockin tha resource wit a gangbangin' finger-lickin' dirty-ass shadow sampler, up in gather operations or as a gangbangin' finger-lickin' dirty-ass shadow sampla up in gather operations, respectively\&. Returned joints may be
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respectively\&.
.PP
If
\fIpname\fR
is
\fBGL_SHADER_IMAGE_LOAD\fR,
\fBGL_SHADER_IMAGE_STORE\fR
or
\fBGL_SHADER_IMAGE_ATOMIC\fR
then tha value returned in
\fIparams\fR
indicates tha level of support fo' image loads, stores n' atomics fo' resourcez of tha specified internal format\&. Returned joints may be
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR
or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respectively\&.
.PP
If
\fIpname\fR
is
\fBGL_IMAGE_TEXEL_SIZE\fR
then tha size of a texel when tha resource when used as a image texture is returned in
\fIparams\fR\&. If tha resource aint supported fo' image textures zero is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_IMAGE_COMPATIBILITY_CLASS\fR
then tha compatibilitizzle class of tha resource when used as a image texture is returned in
\fIparams\fR\&. Da possible joints returned are
\fBGL_IMAGE_CLASS_4_X_32\fR,
\fBGL_IMAGE_CLASS_2_X_32\fR,
\fBGL_IMAGE_CLASS_1_X_32\fR,
\fBGL_IMAGE_CLASS_4_X_16\fR,
\fBGL_IMAGE_CLASS_2_X_16\fR,
\fBGL_IMAGE_CLASS_1_X_16\fR,
\fBGL_IMAGE_CLASS_4_X_8\fR,
\fBGL_IMAGE_CLASS_2_X_8\fR,
\fBGL_IMAGE_CLASS_1_X_8\fR,
\fBGL_IMAGE_CLASS_11_11_10\fR, and
\fBGL_IMAGE_CLASS_10_10_10_2\fR, which correspond ta tha 4x32, 2x32, 1x32, 4x16, 2x16, 1x16, 4x8, 2x8, 1x8, tha class (a) 11/11/10 packed floating\-point format, n' tha class (b) 10/10/10/2 packed formats, respectively\&. If tha resource aint supported fo' image textures,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_IMAGE_PIXEL_FORMAT\fR
or
\fBGL_IMAGE_PIXEL_TYPE\fR
then tha pixel format or type of tha resource when used as a image texture is returned in
\fIparams\fR, respectively\&. In either case, tha resource aint supported fo' image textures
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_IMAGE_FORMAT_COMPATIBILITY_TYPE\fR, tha matchin criteria use fo' tha resource when used as a image textures is returned in
\fIparams\fR\&. Possible joints returned in
\fIparams\fR
are
\fBGL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE\fR
or
\fBGL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS\fR\&. If tha resource aint supported fo' image textures,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST\fR
or
\fBGL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST\fR, support fo' rockin tha resource both as a source fo' texture samplin while it is bound as a funky-ass buffer fo' depth or stencil test, respectively, is freestyled to
\fIparams\fR\&. Possible joints returned are
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR, or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all\&. If tha resource or operation aint supported,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE\fR
or
\fBGL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE\fR, support fo' rockin tha resource both as a source fo' texture samplin while struttin depth or stencil writes ta tha resources, respectively, is freestyled to
\fIparams\fR\&. Possible joints returned are
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR, or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all\&. If tha resource or operation aint supported,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_TEXTURE_COMPRESSED\fR
then
\fBGL_TRUE\fR
is returned in
\fIparams\fR
if
\fIinternalformat\fR
is a cold-ass lil compressed internal format\&.
\fBGL_FALSE\fR
is returned in
\fIparams\fR
otherwise\&.
.PP
If
\fIpname\fR
is
\fBGL_TEXTURE_COMPRESSED_BLOCK_WIDTH\fR,
\fBGL_TEXTURE_COMPRESSED_BLOCK_HEIGHT\fR
or
\fBGL_TEXTURE_COMPRESSED_BLOCK_SIZE\fR
then tha width, height or total size, respectively of a funky-ass block (in basic machine units) is returned in
\fIparams\fR\&. If tha internal format aint compressed, or tha resource aint supported, 0 is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_CLEAR_BUFFER\fR, tha level of support fo' rockin tha resource with
\fBglClearBufferData\fR()
and
\fBglClearBufferSubData\fR()
is returned in
\fIparams\fR\&. Possible joints returned are
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR, or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respectively\&. If tha resource or operation aint supported,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_TEXTURE_VIEW\fR, tha level of support fo' rockin tha resource wit the
\fBglTextureView\fR()
command is returned in
\fIparams\fR\&. Possible joints returned are
\fBGL_FULL_SUPPORT\fR,
\fBGL_CAVEAT_SUPPORT\fR, or
\fBGL_NONE\fR
to indicate full support, limited support or no support at all, respectively\&. If tha resource or operation aint supported,
\fBGL_NONE\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_VIEW_COMPATIBILITY_CLASS\fR
then tha compatibilitizzle class of tha resource when used as a texture view is returned in
\fIparams\fR\&. Da possible joints returned are
\fBGL_VIEW_CLASS_128_BITS\fR,
\fBGL_VIEW_CLASS_96_BITS\fR,
\fBGL_VIEW_CLASS_64_BITS\fR,
\fBGL_VIEW_CLASS_48_BITS\fR,
\fBGL_VIEW_CLASS_32_BITS\fR,
\fBGL_VIEW_CLASS_24_BITS\fR,
\fBGL_VIEW_CLASS_16_BITS\fR,
\fBGL_VIEW_CLASS_8_BITS\fR,
\fBGL_VIEW_CLASS_S3TC_DXT1_RGB\fR,
\fBGL_VIEW_CLASS_S3TC_DXT1_RGBA\fR,
\fBGL_VIEW_CLASS_S3TC_DXT3_RGBA\fR,
\fBGL_VIEW_CLASS_S3TC_DXT5_RGBA\fR,
\fBGL_VIEW_CLASS_RGTC1_RED\fR,
\fBGL_VIEW_CLASS_RGTC2_RG\fR,
\fBGL_VIEW_CLASS_BPTC_UNORM\fR, and
\fBGL_VIEW_CLASS_BPTC_FLOAT\fR\&.
.SH "NOTES"
.PP
\fBglGetInternalFormativ\fR
is available only if tha GL version is 4\&.2 or higher\&.
.PP
Da tokens
\fBGL_INTERNALFORMAT_SUPPORTED\fR,
\fBGL_INTERNALFORMAT_PREFERRED\fR,
\fBGL_INTERNALFORMAT_RED_SIZE\fR,
\fBGL_INTERNALFORMAT_GREEN_SIZE\fR,
\fBGL_INTERNALFORMAT_BLUE_SIZE\fR,
\fBGL_INTERNALFORMAT_ALPHA_SIZE\fR,
\fBGL_INTERNALFORMAT_DEPTH_SIZE\fR,
\fBGL_INTERNALFORMAT_STENCIL_SIZE\fR,
\fBGL_INTERNALFORMAT_SHARED_SIZE\fR,
\fBGL_INTERNALFORMAT_RED_TYPE\fR,
\fBGL_INTERNALFORMAT_GREEN_TYPE\fR,
\fBGL_INTERNALFORMAT_BLUE_TYPE\fR,
\fBGL_INTERNALFORMAT_ALPHA_TYPE\fR,
\fBGL_INTERNALFORMAT_DEPTH_TYPE\fR,
\fBGL_INTERNALFORMAT_STENCIL_TYPE\fR,
\fBGL_MAX_WIDTH\fR,
\fBGL_MAX_HEIGHT\fR,
\fBGL_MAX_DEPTH\fR,
\fBGL_MAX_LAYERS\fR,
\fBGL_MAX_COMBINED_DIMENSIONS\fR,
\fBGL_COLOR_COMPONENTS\fR,
\fBGL_DEPTH_COMPONENTS\fR,
\fBGL_STENCIL_COMPONENTS\fR,
\fBGL_COLOR_RENDERABLE\fR,
\fBGL_DEPTH_RENDERABLE\fR,
\fBGL_STENCIL_RENDERABLE\fR,
\fBGL_FRAMEBUFFER_RENDERABLE\fR,
\fBGL_FRAMEBUFFER_RENDERABLE_LAYERED\fR,
\fBGL_FRAMEBUFFER_BLEND\fR,
\fBGL_READ_PIXELS\fR,
\fBGL_READ_PIXELS_FORMAT\fR,
\fBGL_READ_PIXELS_TYPE\fR,
\fBGL_TEXTURE_IMAGE_FORMAT\fR,
\fBGL_TEXTURE_IMAGE_TYPE\fR,
\fBGL_GET_TEXTURE_IMAGE_FORMAT\fR,
\fBGL_GET_TEXTURE_IMAGE_TYPE\fR,
\fBGL_MIPMAP\fR,
\fBGL_GENERATE_MIPMAP\fR,
\fBGL_AUTO_GENERATE_MIPMAP\fR,
\fBGL_COLOR_ENCODING\fR,
\fBGL_SRGB_READ\fR,
\fBGL_SRGB_WRITE\fR,
\fBGL_SRGB_DECODE_ARB\fR,
\fBGL_FILTER\fR,
\fBGL_VERTEX_TEXTURE\fR,
\fBGL_TESS_CONTROL_TEXTURE\fR,
\fBGL_TESS_EVALUATION_TEXTURE\fR,
\fBGL_GEOMETRY_TEXTURE\fR,
\fBGL_FRAGMENT_TEXTURE\fR,
\fBGL_COMPUTE_TEXTURE\fR,
\fBGL_TEXTURE_SHADOW\fR,
\fBGL_TEXTURE_GATHER\fR,
\fBGL_TEXTURE_GATHER_SHADOW\fR,
\fBGL_SHADER_IMAGE_LOAD\fR,
\fBGL_SHADER_IMAGE_STORE\fR,
\fBGL_SHADER_IMAGE_ATOMIC\fR,
\fBGL_IMAGE_TEXEL_SIZE\fR,
\fBGL_IMAGE_COMPATIBILITY_CLASS\fR,
\fBGL_IMAGE_PIXEL_FORMAT\fR,
\fBGL_IMAGE_PIXEL_TYPE\fR,
\fBGL_IMAGE_FORMAT_COMPATIBILITY_TYPE\fR,
\fBGL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST\fR,
\fBGL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST\fR,
\fBGL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE\fR,
\fBGL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE\fR,
\fBGL_TEXTURE_COMPRESSED\fR,
\fBGL_TEXTURE_COMPRESSED_BLOCK_WIDTH\fR,
\fBGL_TEXTURE_COMPRESSED_BLOCK_HEIGHT\fR,
\fBGL_TEXTURE_COMPRESSED_BLOCK_SIZE\fR,
\fBGL_CLEAR_BUFFER\fR,
\fBGL_TEXTURE_VIEW\fR, and
\fBGL_VIEW_COMPATIBILITY_CLASS\fR
are supported only if tha GL version is 4\&.3 or higher\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbufSize\fR
is negative\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIpname\fR
is not
\fBGL_SAMPLES\fR
or
\fBGL_NUM_SAMPLE_COUNTS\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIinternalformat\fR
is not color\-, depth\-, or stencil\-renderable\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not one of
\fBGL_TEXTURE_2D_MULTISAMPLE\fR,
\fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR
or
\fBGL_RENDERBUFFER\fR\&.
.SH "SEE ALSO"
.PP
\fBglGet\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2011\-2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
