'\" t
.\"     Title: glBlitFramebuffer
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBLITFRAMEBUFFER" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBlitFramebuffer \- copy a funky-ass block of pixels from tha read framebuffer ta tha draw framebuffer
.SH "C SPECIFICATION"
.HP \w'void\ glBlitFramebuffer('u
.BI "void glBlitFramebuffer(GLint\ " "srcX0" ", GLint\ " "srcY0" ", GLint\ " "srcX1" ", GLint\ " "srcY1" ", GLint\ " "dstX0" ", GLint\ " "dstY0" ", GLint\ " "dstX1" ", GLint\ " "dstY1" ", GLbitfield\ " "mask" ", GLenum\ " "filter" ");"
.SH "PARAMETERS"
.PP
\fIsrcX0\fR, \fIsrcY0\fR, \fIsrcX1\fR, \fIsrcY1\fR
.RS 4
Specify tha boundz of tha source rectangle within tha read buffer of tha read framebuffer\&.
.RE
.PP
\fIdstX0\fR, \fIdstY0\fR, \fIdstX1\fR, \fIdstY1\fR
.RS 4
Specify tha boundz of tha destination rectangle within tha write buffer of tha write framebuffer\&.
.RE
.PP
\fImask\fR
.RS 4
Da bitwise OR of tha flags indicatin which buffers is ta be copied\&. Da allowed flags are
\fBGL_COLOR_BUFFER_BIT\fR,
\fBGL_DEPTH_BUFFER_BIT\fR
and
\fBGL_STENCIL_BUFFER_BIT\fR\&.
.RE
.PP
\fIfilter\fR
.RS 4
Specifies tha interpolation ta be applied if tha image is stretched\&. Must be
\fBGL_NEAREST\fR
or
\fBGL_LINEAR\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBlitFramebuffer\fR
transfers a rectangle of pixel joints from one region of tha read framebuffer ta another region up in tha draw framebuffer\&.
\fImask\fR
is tha bitwise OR of a fuckin shitload of joints indicatin which buffers is ta be copied\&. Da joints are
\fBGL_COLOR_BUFFER_BIT\fR,
\fBGL_DEPTH_BUFFER_BIT\fR, and
\fBGL_STENCIL_BUFFER_BIT\fR\&. Da pixels correspondin ta these buffers is copied from tha source rectangle bounded by tha locations (\fIsrcX0\fR;
\fIsrcY0\fR) n' (\fIsrcX1\fR;
\fIsrcY1\fR) ta tha destination rectangle bounded by tha locations (\fIdstX0\fR;
\fIdstY0\fR) n' (\fIdstX1\fR;
\fIdstY1\fR)\&. Da lower boundz of tha rectangle is inclusive, while tha upper boundz is exclusive\&.
.PP
Da actual region taken from tha read framebuffer is limited ta tha intersection of tha source buffers bein transferred, which may include tha color buffer selected by tha read buffer, tha depth buffer, and/or tha stencil buffer dependin on mask\&. Da actual region freestyled ta tha draw framebuffer is limited ta tha intersection of tha destination buffers bein written, which may include multiple draw buffers, tha depth buffer, and/or tha stencil buffer dependin on mask\&. Whether or not tha source or destination regions is altered cuz of these limits, tha scalin n' offset applied ta pixels bein transferred is performed as though no such limits was present\&.
.PP
If tha sizez of tha source n' destination rectanglez is not equal,
\fIfilter\fR
specifies tha interpolation method dat is ghon be applied ta resize tha source image , n' must be
\fBGL_NEAREST\fR
or
\fBGL_LINEAR\fR\&.
\fBGL_LINEAR\fR
is only a valid interpolation method fo' tha color buffer\&. If
\fIfilter\fR
is not
\fBGL_NEAREST\fR
and
\fImask\fR
includes
\fBGL_DEPTH_BUFFER_BIT\fR
or
\fBGL_STENCIL_BUFFER_BIT\fR, no data is transferred n' a
\fBGL_INVALID_OPERATION\fR
error is generated\&.
.PP
If
\fIfilter\fR
is
\fBGL_LINEAR\fR
and tha source rectangle would require samplin outside tha boundz of tha source framebuffer, joints is read as if the
\fBGL_CLAMP_TO_EDGE\fR
texture wrappin mode was applied\&.
.PP
When tha color buffer is transferred, joints is taken from tha read buffer of tha read framebuffer n' freestyled ta each of tha draw bufferz of tha draw framebuffer\&.
.PP
If tha source n' destination rectanglez overlap or is tha same, n' tha read n' draw buffers is tha same, tha result of tha operation is undefined\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fImask\fR
gotz nuff any of the
\fBGL_DEPTH_BUFFER_BIT\fR
or
\fBGL_STENCIL_BUFFER_BIT\fR
and
\fIfilter\fR
is not
\fBGL_NEAREST\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fImask\fR
gotz nuff
\fBGL_COLOR_BUFFER_BIT\fR
and any of tha followin conditions hold:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da read buffer gotz nuff fixed\-point or floating\-point joints n' any draw buffer gotz nuff neither fixed\-point nor floating\-point joints\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da read buffer gotz nuff unsigned integer joints n' any draw buffer do not contain unsigned integer joints\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da read buffer gotz nuff signed integer joints n' any draw buffer do not contain signed integer joints\&.
.RE
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fImask\fR
gotz nuff
\fBGL_DEPTH_BUFFER_BIT\fR
or
\fBGL_STENCIL_BUFFER_BIT\fR
and tha source n' destination depth n' stencil formats do not match\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIfilter\fR
is
\fBGL_LINEAR\fR
and tha read buffer gotz nuff integer data\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha value of
\fIGL_SAMPLES\fR
for tha read n' draw buffers aint identical\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIGL_SAMPLE_BUFFERS\fR
for both read n' draw buffers pimped outa than zero n' tha dimensionz of tha source n' destination rectanglez aint identical\&.
.PP
\fBGL_INVALID_FRAMEBUFFER_OPERATION\fR
is generated if tha objects bound to
\fBGL_DRAW_FRAMEBUFFER_BINDING\fR
or
\fBGL_READ_FRAMEBUFFER_BINDING\fR
are not framebuffer complete\&.
.SH "SEE ALSO"
.PP
\fBglReadPixels\fR()\fBglCheckFramebufferStatus\fR(),
\fBglGenFramebuffers\fR()\fBglBindFramebuffer\fR()\fBglDeleteFramebuffers\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
