.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XSendEvent 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XSendEvent, XDisplayMotionBufferSize, XGetMotionEvents, XTimeCoord \- bust events n' pointa motion history structure
.SH SYNTAX
.HP
Status XSendEvent\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^, Bool
\fIpropagate\fP\^, long \fIevent_mask\fP\^, XEvent *\fIevent_send\fP\^); 
.HP
unsigned long XDisplayMotionBufferSize\^(\^Display *\fIdisplay\fP\^); 
.HP
XTimeCoord *XGetMotionEvents\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^,
Time \fIstart\fP\^, Time \fIstop\fP\^, int *\fInevents_return\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIevent_mask\fP 1i
Specifies tha event mask.
.IP \fIevent_send\fP 1i
Specifies tha event dat is ta be sent.
.IP \fInevents_return\fP 1i
Returns tha number of events from tha motion history buffer.
.IP \fIpropagate\fP 1i
Specifies a Boolean value.
.IP \fIstart\fP 1i
.br
.ns
.IP \fIstop\fP 1i
Specify tha time interval up in which tha events is returned from tha motion
history buffer.
Yo ass can pass a timestamp or
.ZN CurrentTime .
.ds Wi tha window tha event is ta be busted to,
.ZN PointerWindow ,
or
.ZN InputFocus .
.IP \fIw\fP 1i
Specifies tha window \*(Wi.
.SH DESCRIPTION
The
.ZN XSendEvent
function identifies tha destination window, 
determines which clients should receive tha specified events, 
and ignores any actizzle grabs.
This function requires you ta pass a event mask.
For a gangbangin' finger-lickin' rap of tha valid event mask names,
see section 10.3.
This function uses tha w argument ta identify tha destination window as bigs up:
.IP \(bu 5
If w is
.ZN PointerWindow ,
the destination window is tha window dat gotz nuff tha pointer.
.IP \(bu 5
If w is
.ZN InputFocus 
and if tha focus window gotz nuff tha pointer, 
the destination window is tha window dat gotz nuff tha pointer; 
otherwise, tha destination window is tha focus window.
.LP
To determine which clients should receive tha specified events,
.ZN XSendEvent
uses tha propagate argument as bigs up:
.IP \(bu 5
If event_mask is tha empty set,
the event is busted ta tha client dat pimped tha destination window.
If dat client no longer exists,
no event is sent.
.IP \(bu 5
If propagate is 
.ZN False ,
the event is busted ta every last muthafuckin client selectin on destination any of tha event
types up in tha event_mask argument.
.IP \(bu 5
If propagate is 
.ZN True 
and no clients have selected on destination any of
the event types up in event-mask, tha destination is replaced wit the
closest ancestor of destination fo' which some client has selected a
type up in event-mask n' fo' which no intervenin window has dat type up in its
do-not-propagate-mask. 
If no such window exists or if tha window is
an ancestor of tha focus window n' 
.ZN InputFocus 
was originally specified
as tha destination, tha event aint busted ta any clients.
Otherwise, tha event is reported ta every last muthafuckin client selectin on tha final
destination any of tha types specified up in event_mask.
.LP
Da event up in the
.ZN XEvent
structure must be one of tha core events or one of tha events
defined by a extension (or a 
.ZN BadValue
error thangs up in dis biatch) so dat tha X server can erectly byte-swap 
the contents as necessary.  
Da contentz of tha event are
otherwise unaltered n' unchecked by tha X server except ta force send_event to
.ZN True
in tha forwarded event n' ta set tha serial number up in tha event erectly;
therefore these fields
and tha display field is ignored by
.ZN XSendEvent .
.LP
.ZN XSendEvent
returns zero if tha conversion ta wire protocol format failed
and returns nonzero otherwise.
.ZN XSendEvent
can generate
.ZN BadValue 
and
.ZN BadWindow 
errors.
.LP
Da server may retain tha recent history of tha pointa motion
and do so ta a gangbangin' finer granularitizzle than is reported by
.ZN MotionNotify
events.
The
.ZN XGetMotionEvents
function make dis history available.
.LP
The
.ZN XGetMotionEvents
function returns all events up in tha motion history buffer dat fall between the
specified start n' stop times, inclusive, n' dat have coordinates
that lie within tha specified window (includin its borders) at its present
placement.
If tha server do not support motion history, 
if tha start time is lata than tha stop time,
or if tha start time is up in tha future, 
no events is returned;
.ZN XGetMotionEvents
returns NULL.
If tha stop time is up in tha future, it is equivalent ta specifying
.ZN CurrentTime .
.ZN XGetMotionEvents
can generate a
.ZN BadWindow 
error.
.SH STRUCTURES
The
.ZN XTimeCoord
structure gotz nuff:
.LP
.Ds 0
typedef struct {
        Time time;
        short x, y;
} XTimeCoord;
.De
.LP
Da time member is set ta tha time, up in milliseconds. 
Da x n' y thugz is set ta tha coordinatez of tha pointa and
are reported relatizzle ta tha origin
of tha specified window.
.SH DIAGNOSTICS
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAnyEvent(3),
XIfEvent(3),
XNextEvent(3),
XPutBackEvent(3)
.br
\fI\*(xL\fP
