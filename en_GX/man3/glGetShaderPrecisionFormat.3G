'\" t
.\"     Title: glGetShaderPrecisionFormat
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETSHADERPRECISION" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetShaderPrecisionFormat \- retrieve tha range n' precision fo' numeric formats supported by tha shader compiler
.SH "C SPECIFICATION"
.HP \w'void\ glGetShaderPrecisionFormat('u
.BI "void glGetShaderPrecisionFormat(GLenum\ " "shaderType" ", GLenum\ " "precisionType" ", GLint\ *" "range" ", GLint\ *" "precision" ");"
.SH "PARAMETERS"
.PP
\fIshaderType\fR
.RS 4
Specifies tha type of shader whose precision ta query\&.
\fIshaderType\fR
must be
\fBGL_VERTEX_SHADER\fR
or
\fBGL_FRAGMENT_SHADER\fR\&.
.RE
.PP
\fIprecisionType\fR
.RS 4
Specifies tha numeric format whose precision n' range ta query\&.
.RE
.PP
\fIrange\fR
.RS 4
Specifies tha address of array of two integers tha fuck into which encodingz of tha implementation\*(Aqs numeric range is returned\&.
.RE
.PP
\fIprecision\fR
.RS 4
Specifies tha address of a integer tha fuck into which tha numeric precision of tha implementation is written\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetShaderPrecisionFormat\fR
retrieves tha numeric range n' precision fo' tha implementation\*(Aqs representation of quantitizzles up in different numeric formats up in specified shader type\&.
\fIshaderType\fR
specifies tha type of shader fo' which tha numeric precision n' range is ta be retrieved n' must be one of
\fBGL_VERTEX_SHADER\fR
or
\fBGL_FRAGMENT_SHADER\fR\&.
\fIprecisionType\fR
specifies tha numeric format ta query n' must be one of
\fBGL_LOW_FLOAT\fR,
\fBGL_MEDIUM_FLOAT\fR\fBGL_HIGH_FLOAT\fR,
\fBGL_LOW_INT\fR,
\fBGL_MEDIUM_INT\fR, or
\fBGL_HIGH_INT\fR\&.
.PP
\fIrange\fR
points ta a array of two integers tha fuck into which tha format\*(Aqs numeric range is ghon be returned\&. If min n' max is tha smallest joints representable up in tha format, then tha joints returned is defined ta be:
\fIrange\fR[0] = floor(log2(|min|)) and
\fIrange\fR[1] = floor(log2(|max|))\&.
.PP
\fIprecision\fR
specifies tha address of a integer tha fuck into which is ghon be freestyled tha log2 value of tha number of bitz of precision of tha format\&. If tha smallest representable value pimped outa than 1 is 1 +
\fIeps\fR, then tha integer addressed by
\fIprecision\fR
will contain floor(\-log2(eps))\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIshaderType\fR
or
\fIprecisionType\fR
is not a accepted value\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
