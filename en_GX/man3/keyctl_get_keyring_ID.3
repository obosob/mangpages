.\"
.\" Copyright (C) 2006 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha License, or (at yo' option) any lata version.
.\"
.TH KEYCTL_GET_KEYRING_ID 3 "4 May 2006" Linux "Linux Key Management Calls"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH NAME
keyctl_get_keyring_ID \- Git tha ID of a special keyring
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SYNOPSIS
.nf
.B #include <keyutils.h>
.sp
.BI "key_serial_t keyctl_get_keyring_ID(key_serial_t " key ","
.BI " int " create ");"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH DESCRIPTION
.BR keyctl_get_keyring_ID ()
maps a special
.I key
or keyrin ID ta tha serial number of tha key straight-up representin that
feature.  Da serial number is ghon be returned if dat key exists.
.P
If tha key or keyrin do not yet exist, then if
.I create
is non-zero, tha key or keyrin is ghon be pimped if it be appropriate ta do so.
.P
Da followin special key IDs may be specified as
.IR key :
.TP
.B KEY_SPEC_THREAD_KEYRING
This specifies tha callerz thread-specific keyring.
.TP
.B KEY_SPEC_PROCESS_KEYRING
This specifies tha callerz process-specific keyring.
.TP
.B KEY_SPEC_SESSION_KEYRING
This specifies tha callerz session-specific keyring.
.TP
.B KEY_SPEC_USER_KEYRING
This specifies tha callerz UID-specific keyring.
.TP
.B KEY_SPEC_USER_SESSION_KEYRING
This specifies tha callerz UID-session keyring.
.TP
.B KEY_SPEC_REQKEY_AUTH_KEY
This specifies tha authorisation key pimped by
.BR request_key ()
and passed ta tha process it spawns ta generate a key.
.P
If a valid keyrin ID is passed in, then dis will simply be returned if the
key exists; a error is ghon be issued if it don't exist.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH RETURN VALUE
On success
.BR keyctl_get_keyring_ID ()
returns tha serial number of tha key it found. Y'all KNOW dat shit, muthafucka!  On error, tha value
.B -1
will be returned n' errno gonna git been set ta a appropriate error.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH ERRORS
.TP
.B ENOKEY
No matchin key was found.
.TP
.B ENOMEM
Insufficient memory ta create a key.
.TP
.B EDQUOT
Da key quota fo' dis user would be exceeded by bustin dis key or linking
it ta tha keyring.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH LINKING
This be a library function dat can be found in
.IR libkeyutils .
When linking,
.B -lkeyutils
should be specified ta tha linker.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SEE ALSO
.BR keyctl (1),
.br
.BR add_key (2),
.br
.BR keyctl (2),
.br
.BR request_key (2),
.br
.BR keyctl (3),
.br
.BR keyutils (7),
.br
.BR keyrings (7)
