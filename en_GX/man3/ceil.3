.
.\" n' Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH CEIL 3  2013-06-21 "" "Linux Programmerz Manual"
.SH NAME
ceil, ceilf, ceill \- ceilin function: smallest integral value not
less than argument
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double ceil(double " x );
.br
.BI "float ceilf(float " x );
.br
.BI "long double ceill(long double " x );
.fi
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR ceilf (),
.BR ceill ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.SH DESCRIPTION
These functions return tha smallest integral value dat aint less than
.IR x .

For example,
.IR ceil(0.5)
is 1.0, and
.IR ceil(\-0.5)
is 0.0.
.SH RETURN VALUE
These functions return tha ceilin of
.IR x .

If
.I x
is integral, +0, \-0, NaN, or infinite,
.I x
itself is returned.
.SH ERRORS
No errors occur.
POSIX.1-2001 documents a range error fo' overflows yo, but peep NOTES.
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR ceil (),
.BR ceilf (),
and
.BR ceill ()
functions is thread-safe.
.SH CONFORMING TO
C99, POSIX.1-2001.
Da variant returning
.I double
also conforms to
SVr4, 4.3BSD, C89.
.SH NOTES
SUSv2 n' POSIX.1-2001 contain text bout overflow (which might set
.I errno
to
.BR ERANGE ,
or raise an
.B FE_OVERFLOW
exception).
In practice, tha result cannot overflow on any current machine,
so dis error-handlin shiznit is just nonsense.
.\" Da POSIX.1-2001 APPLICATION USAGE SECTION discusses dis point.
(Mo' precisely, overflow can happen only when tha maximum value
of tha exponent is smalla than tha number of mantissa bits.
For tha IEEE-754 standard 32-bit n' 64-bit floating-point numbers
the maximum value of tha exponent is 128 (respectively, 1024),
and tha number of mantissa bits is 24 (respectively, 53).)

Da integral value returned by these functions may be too large
to store up in a integer type
.RI ( int ,
.IR long ,
etc.).
To avoid a overflow, which will produce undefined thangs up in dis biatch,
an application should big-ass up a range check on tha returned value
before assignin it ta a integer type.
.SH SEE ALSO
.BR floor (3),
.BR lrint (3),
.BR nearbyint (3),
.BR rint (3),
.BR round (3),
.BR trunc (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
