'\" t
.\"     Title: xallowdeviceevents
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XALLOWDEVICEEVENTS" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XAllowDeviceEvents \- release queued events
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
int XAllowDeviceEvents( Display *display,
                        XDevice *device,
                        int event_mode,
                        Time time);
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang from which events is ta be
       allowed\&.
.fi
.sp
.nf
event_mode
       Specifies tha event mode\&.Yo ass can pass AsyncThisDevice,
       SyncThisDevice, ReplayThisDevice, AsyncOtherDevices,
       SyncAll,or AsyncAll\&.
.fi
.sp
.nf
time
       Specifies tha time\&.Yo ass can pass either a timestamp or
       CurrentTime\&.
.fi
.SH "DESCRIPTION"
.sp
Da XAllowDeviceEvents function releases some queued events if tha client has caused a thang ta freeze\&. Well shiiiit, it has no effect if tha specified time is earlier than tha last\-grab time of da most thugged-out recent actizzle grab fo' tha client n' device, or if tha specified time is lata than tha current X server time\&.
.sp
Da followin raps bout tha processin dat occurs dependin on what tha fuck constant you pass ta tha event_mode argument\&.
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
AsyncThisDevice \- If tha specified thang is frozen by tha client, event processin fo' dat thang continues as usual\&. If tha thang is frozen multiple times by tha client on behalf of multiple separate grabs, AsyncThisDevice thaws fo' all\&.AsyncThisDevice has no effect if tha specified thang aint frozen by tha client yo, but tha thang need not be grabbed by tha client\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SyncThisDevice \- If tha specified thang is frozen n' actively grabbed by tha client, event processin fo' dat thang continues normally until tha next key or button event is reported ta tha client\& fo' realz. At dis time, tha specified thang again n' again n' again appears ta freeze\&. But fuck dat shiznit yo, tha word on tha street is dat if tha reported event causes tha grab ta be busted out, tha specified thang do not freeze\&. Right back up in yo muthafuckin ass. SyncThisDevice has no effect if tha specified thang aint frozen by tha client or aint grabbed by tha client\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ReplayThisDevice \- If tha specified thang be actively grabbed by tha client n' is frozen as tha result of a event havin been busted ta tha client (either from tha activation of a GrabDeviceButton or from a previous AllowDeviceEvents wit mode SyncThisDevice yo, but not from a GrabDevice), tha grab is busted out n' dat event is straight-up reprocessed\&. This time, however, tha request ignores any passive grabs at or above (toward tha root) dat tha grab\-window of tha grab just busted out\&. Da request has no effect if tha specified thang aint grabbed by tha client or if it aint frozen as tha result of a event\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
AsyncOtherDevices \- If tha remainin devices is frozen by tha client, event processin fo' dem continues as usual\&. If tha other devices is frozen multiple times by tha client on behalf of multiple grabs, AsyncOtherDevices "thaws" fo' all\& fo' realz. AsyncOtherDevices has no effect if tha devices is not frozen by tha client\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SyncAll \- If all devices is frozen by tha client, event processin (for all devices) continues normally until tha next button or key event is reported ta tha client fo' a grabbed device, at which time all devices again n' again n' again step tha fuck up ta freeze\&. But fuck dat shiznit yo, tha word on tha street is dat if tha reported event causes tha grab ta be busted out, then tha devices do not freeze\&. If any thang is still grabbed, then a subsequent event fo' it will still cause all devices ta freeze\&. Right back up in yo muthafuckin ass. SyncAll has no effect unless all devices is frozen by tha client\&. If any thang is frozen twice by tha client on behalf of two separate grabs, SyncAll thaws fo' both\& fo' realz. A subsequent freeze fo' SyncAll will only freeze each thang once\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
AsyncAll \- If all devices is frozen by tha client, event processin fo' all devices continues normally\&. If any thang is frozen multiple times by tha client on behalf of multiple separate grabs, AsyncAll thaws fo' all\& fo' realz. AsyncAll has no effect unless all devices is frozen by tha client\&.
.RE
.sp
AsyncThisDevice, SyncThisDevice, n' ReplayThisDevice have no effect on tha processin of events from tha remainin devices\&.AsyncOtherDevices has no effect on tha processin of events from tha specified device\&. When tha event_mode is SyncAll or AsyncAll, tha thang parameta is ignored\&.
.sp
It be possible fo' nuff muthafuckin grabz of different devices by tha same or different clients ta be actizzle simultaneously\&. If a thang is frozen on behalf of any grab, no event processin is performed fo' tha device\&. Well shiiiit, it is possible fo' a single thang ta be frozen cuz of nuff muthafuckin grabs\&. In dis case, tha freeze must be busted out on behalf of each grab before events can again n' again n' again be processed\&.
.sp
XAllowDeviceEvents can generate a BadDevice or BadValue error\&.
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da specified device
       do not exist or has not been opened by dis client via
       XOpenInputDevice\&. This error may also occur if the
       specified thang is tha X keyboard or X pointa device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       An invalid mode was specified on tha request\&.
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.if n \{\
.RS 4
.\}
.nf
XGrabDevice(3)
.fi
.if n \{\
.RE
.\}
