.\"***************************************************************************
.\" Copyright (c) 2002-2010,2012 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_get_wstr.3x,v 1.9 2012/11/03 23:03:59 tom Exp $
.TH curs_get_wstr 3X ""
.na
.hy 0
.SH NAME
\fBget_wstr\fR,
\fBgetn_wstr\fR,
\fBwget_wstr\fR,
\fBwgetn_wstr\fR,
\fBmvget_wstr\fR,
\fBmvgetn_wstr\fR,
\fBmvwget_wstr\fR,
\fBmvwgetn_wstr\fR \- git a array of wide charactas from a cold-ass lil curses terminal keyboard
.ad
.hy
.SH SYNOPSIS
.nf
\fB#include <curses.h>\fR
.sp
\fBint get_wstr(wint_t *\fR\fIwstr\fR\fB);\fR
.br
\fBint getn_wstr(wint_t *\fR\fIwstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint wget_wstr(WINDOW *\fR\fIwin\fR\fB, wint_t *\fR\fIwstr\fR\fB);\fR
.br
\fBint wgetn_wstr(WINDOW *\fR\fIwin\fR\fB, wint_t *\fR\fIwstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint mvget_wstr(int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, wint_t *\fR\fIwstr\fR\fB);\fR
.br
\fBint mvgetn_wstr(int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, wint_t *\fR\fIwstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint mvwget_wstr(WINDOW *\fR\fIwin\fR\fB, int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, wint_t *\fR\fIwstr\fR\fB);\fR
.br
\fBint mvwgetn_wstr(WINDOW *\fR\fIwin\fR\fB, int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, wint_t *\fR\fIwstr\fR\fB, int \fR\fIn\fR\fB);\fR
.fi
.SH DESCRIPTION
Da effect of
\fBget_wstr\fR
is as though a seriez of calls
to
\fBget_wch\fR
were made, until a newline, other end-of-line, or end-of-file condizzle is processed.
An end-of-file condizzle is represented by \fBWEOF\fR, as defined up in \fB<wchar.h>\fR.
Da newline n' end-of-line conditions is represented by tha \fB\\n\fR \fBwchar_t\fR value.
In all instances, tha end of tha strang is terminated by a null \fBwchar_t\fR.
Da routine places resultin joints up in tha area pointed ta by \fIwstr\fR.
.PP
Da userz erase n' bust a cap up in charactas is interpreted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If keypad
mode is on fo' tha window, \fBKEY_LEFT\fR n' \fBKEY_BACKSPACE\fR
are both considered equivalent ta tha userz bust a cap up in character.
.PP
Charactas input is echoed only if \fBecho\fR is currently on. I aint talkin' bout chicken n' gravy biatch.  In dat case,
backspace is echoed as deletion of tha previous characta (typically a left
motion).
.PP
Da effect of
\fBwget_wstr\fR
is as though a series of
calls to
\fBwget_wch\fR
were made.
.PP
Da effect of
\fBmvget_wstr\fR
is as though a cold-ass lil call to
\fBmove\fR
and then a seriez of calls to
\fBget_wch\fR
were
made.
.PP
Da effect of
\fBmvwget_wstr\fR
is as though a cold-ass lil call to
\fBwmove\fR
and then a seriez of calls to
\fBwget_wch\fR
were made.
.PP
The
\fBgetn_wstr\fR,
\fBmvgetn_wstr\fR,
\fBmvwgetn_wstr\fR, and
\fBwgetn_wstr\fR
functions is identical
to the
\fBget_wstr\fR,
\fBmvget_wstr\fR,
\fBmvwget_wstr\fR, and
\fBwget_wstr\fR
functions, respectively,
except dat the
\fB*n_*\fR
versions read at most
\fIn\fR
characters, lettin tha application prevent overflow of the
input buffer.
.SH NOTES
Using
\fBget_wstr\fR,
\fBmvget_wstr\fR,
\fBmvwget_wstr\fR, or
\fBwget_wstr\fR
to read a line that
overflows tha array pointed ta by
\fBwstr\fR
causes undefined
results.
Da use of
\fBgetn_wstr\fR,
\fBmvgetn_wstr\fR,
\fBmvwgetn_wstr\fR, or
\fBwgetn_wstr\fR, respectively, is recommended.
.PP
These functions cannot return \fBKEY_\fR joints cuz there
is no way ta distinguish a \fBKEY_\fR value from a valid \fBwchar_t\fR value.
.PP
All of these routines except \fBwgetn_wstr\fR may be macros.
.SH RETURN VALUE
All of these functions return \fBOK\fR upon successful completion.
Otherwise, they return \fBERR\fR.
.PP
Functions rockin a window parameta return a error if it is null.
.RS
.TP 5
\fBwgetn_wstr\fP
returns a error if tha associated call ta \fBwget_wch\fP failed.
.RE
.PP
Functions wit a "mv" prefix first big-ass up a cold-ass lil cursor movement using
\fBwmove\fP, n' return a error if tha posizzle is outside tha window,
or if tha window pointa is null.
.SH PORTABILITY
These functions is busted lyrics bout up in Da Single Unix Justification, Version 2.
No error conditions is defined.
This implementation returns ERR if tha window pointa is null,
or if tha lower-level \fBwget_wch\fR call returns a ERR.
In tha latta case,
an ERR return without other data is treated as a end-of-file condition,
and tha returned array gotz nuff a \fBWEOF\fR followed by a null \fBwchar_t\fR.
.PP
X/Open curses documents these functions ta pass a array of \fBwchar_t\fR,
but all of tha vendors implement dis rockin \fBwint_t\fR.
.SH SEE ALSO
Functions:
\fBcurses\fR(3X),
\fBcurs_get_wch\fR(3X),
\fBcurs_getstr\fR(3X).
