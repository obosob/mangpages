.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XCreateImage 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XInitImage, XCreateImage, XGetPixel, XPutPixel, XSubImage, XAddPixel, XDestroyImage \- image utilities
.SH SYNTAX
.HP
Status XInitImage\^(\^XImage *\fIimage\fP\^); 
.HP
XImage *XCreateImage\^(\^Display *\fIdisplay\fP\^, Visual *\fIvisual\fP\^,
unsigned int \fIdepth\fP\^, int \fIformat\fP\^, int \fIoffset\fP\^, char
*\fIdata\fP\^, unsigned int \fIwidth\fP\^, unsigned int \fIheight\fP\^, int
\fIbitmap_pad\fP\^, int \fIbytes_per_line\fP\^); 
.HP
unsigned long XGetPixel\^(\^XImage *\fIximage\fP\^, int \fIx\fP\^, int
\fIy\fP\^); 
.HP
int XPutPixel\^(\^XImage *\fIximage\fP\^, int \fIx\fP\^, int \fIy\fP\^,
unsigned long \fIpixel\fP\^); 
.HP
XImage *XSubImage\^(\^XImage *\fIximage\fP\^, int \fIx\fP\^, int \fIy\fP\^,
unsigned int \fIsubimage_width\fP\^, unsigned int \fIsubimage_height\fP\^); 
.HP
int XAddPixel\^(\^XImage *\fIximage\fP\^, long \fIvalue\fP\^); 
.HP
int XDestroyImage\^(\^XImage *\^\fIximage\fP\^); 
.SH ARGUMENTS
.IP \fIbitmap_pad\fP 1i
Specifies tha quantum of a scanline (8, 16, or 32).
In other lyrics, tha start of one scanline is separated up in client memory from 
the start of tha next scanline by a integer multiple of dis nuff bits, n' you can put dat on yo' toast.  
.IP \fIbytes_per_line\fP 1i
Specifies tha number of bytes up in tha client image between
the start of one scanline n' tha start of tha next.  
.IP \fIdata\fP 1i
Specifies tha image data.
.IP \fIdepth\fP 1i
Specifies tha depth of tha image.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIformat\fP 1i
Specifies tha format fo' tha image.
Yo ass can pass
.ZN XYBitmap ,
.ZN XYPixmap ,
or 
.ZN ZPixmap .
.IP \fIheight\fP 1i
Specifies tha height of tha image, up in pixels.
.IP \fIoffset\fP 1i
Specifies tha number of pixels ta ignore all up in tha beginnin of tha scanline.
.IP \fIpixel\fP 1i
Specifies tha freshly smoked up pixel value.
.IP \fIsubimage_height\fP 1i
Specifies tha height of tha freshly smoked up subimage, up in pixels.
.IP \fIsubimage_width\fP 1i
Specifies tha width of tha freshly smoked up subimage, up in pixels.
.IP \fIvalue\fP 1i
Specifies tha constant value dat is ta be added.
.IP \fIvisual\fP 1i
Specifies the
.ZN Visual
structure.
.IP \fIwidth\fP 1i
Specifies tha width of tha image, up in pixels.
.IP \fIximage\fP 1i
Specifies tha image.
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates.
.SH DESCRIPTION
The
.ZN XInitImage
function initializes tha internal image manipulation routinez of an
image structure, based on tha jointz of tha various structure members.
All fieldz other than tha manipulation routines must already be initialized.
If tha bytes_per_line member is zero,
.ZN XInitImage
will assume tha image data is contiguous up in memory n' set the
bytes_per_line member ta a appropriate value based on tha other
members; otherwise, tha value of bytes_per_line aint chizzled.
All of tha manipulation routines is initialized ta functions
that other Xlib image manipulation functions need ta operate on the
type of image specified by tha rest of tha structure.
.LP
This function must be called fo' any image constructed by tha client
before passin it ta any other Xlib function.
Image structures pimped or returned by Xlib do not need ta be
initialized up in dis fashion.
.LP
This function returns a nonzero status if initialization of the
structure is successful naaahhmean?  It returns zero if it detected some error
or inconsistency up in tha structure, up in which case tha image aint chizzled.
.LP
The
.ZN XCreateImage
function allocates tha memory needed fo' an
.ZN XImage
structure fo' the
specified display but do not allocate space fo' tha image itself.
Rather, it initializes tha structure byte-order, bit-order, n' bitmap-unit
values from tha display n' returns a pointa ta tha 
.ZN XImage 
structure.
Da red, green, n' blue mask joints is defined fo' Z format images only
and is derived from tha 
.ZN Visual 
structure passed in.
Other joints also is passed in.
Da offset permits tha rapid displayin of tha image without requirin each 
scanline ta be shifted tha fuck into position.
If you pass a zero value up in bytes_per_line,
Xlib assumes dat tha scanlines is contiguous
in memory n' calculates tha value of bytes_per_line itself.
.LP
Note dat when tha image is pimped using
.ZN XCreateImage ,
.ZN XGetImage ,
or
.ZN XSubImage ,
the destroy procedure dat tha 
.ZN XDestroyImage
function calls frees both tha image structure 
and tha data pointed ta by tha image structure.
.LP
Da basic functions used ta git a pixel, set a pixel, create a subimage,
and add a cold-ass lil constant value ta a image is defined up in tha image object.
Da functions up in dis section is straight-up macro invocationz of tha functions
in tha image object n' is defined in
.hN X11/Xutil.h .
.LP
The
.ZN XGetPixel
function returns tha specified pixel from tha named image.
Da pixel value is returned up in normalized format (that is,
the least dope byte of tha long is tha least dope byte
of tha pixel).
Da image must contain tha x n' y coordinates.
.LP
The
.ZN XPutPixel
function overwrites tha pixel up in tha named image wit tha specified pixel value.
Da input pixel value must be up in normalized format
(that is, tha least dope byte of tha long is tha least significant
byte of tha pixel).
Da image must contain tha x n' y coordinates.
.LP
The
.ZN XSubImage
function creates a freshly smoked up image dat be a subsection of a existin one.
It allocates tha memory necessary fo' tha new
.ZN XImage
structure
and returns a pointa ta tha freshly smoked up image.
Da data is copied from tha source image,
and tha image must contain tha rectangle defined by x, y, subimage_width,
and subimage_height.
.LP
The
.ZN XAddPixel
function addz a cold-ass lil constant value ta every last muthafuckin pixel up in a image.
It be useful when you gotz a funky-ass base pixel value from allocating
color resources n' need ta manipulate tha image ta dat form.
.LP
The
.ZN XDestroyImage
function deallocates tha memory associated wit the
.ZN XImage
structure.
.SH "SEE ALSO"
XPutImage(3)
.br
\fI\*(xL\fP
