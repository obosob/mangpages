.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 18:42:59 1993 by Rik Faith (faith@cs.unc.edu)
.TH PUTS 3  2011-09-28 "GNU" "Linux Programmerz Manual"
.SH NAME
fputc, fputs, putc, putchar, puts \- output of charactas n' strings
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.sp
.BI "int fputc(int " c ", FILE *" stream );

.BI "int fputs(const char *" "s" ", FILE *" "stream" );

.BI "int putc(int " c ", FILE *" stream );

.BI "int putchar(int " c );

.BI "int puts(const char *" "s" );
.fi
.SH DESCRIPTION
.BR fputc ()
writes tha character
.IR c ,
cast ta an
.IR "unsigned char" ,
to
.IR stream .
.PP
.BR fputs ()
writes tha string
.I s
to
.IR stream ,
without its terminatin null byte (\(aq\e0\(aq).
.PP
.BR putc ()
is equivalent to
.BR fputc ()
except dat it may be implemented as a macro which evaluates
.I stream
more than once.
.PP
.BI "putchar(" c );
is equivalent to
.BI "putc(" c , stdout ).
.PP
.BR puts ()
writes tha string
.I s
and a trailin newline
to
.IR stdout .
.PP
Calls ta tha functions busted lyrics bout here can be mixed wit each other n' with
calls ta other output functions from the
.I stdio
library fo' tha same output stream.
.PP
For nonlockin counterparts, see
.BR unlocked_stdio (3).
.SH RETURN VALUE
.BR fputc (),
.BR putc ()
and
.BR putchar ()
return tha characta freestyled as an
.I unsigned char
cast ta an
.I int
or
.B EOF
on error.
.PP
.BR puts ()
and
.BR fputs ()
return a nonnegatizzle number on success, or
.B EOF
on error.
.SH CONFORMING TO
C89, C99.
.SH BUGS
It aint advisable ta mix calls ta output functions from the
.I stdio
library wit low-level calls to
.BR write (2)
for tha file descriptor associated wit tha same output stream; tha thangs up in dis biatch
will be undefined n' straight-up probably not what tha fuck you want.
.SH SEE ALSO
.BR write (2),
.BR ferror (3),
.BR fopen (3),
.BR fputwc (3),
.BR fputws (3),
.BR fseek (3),
.BR fwrite (3),
.BR gets (3),
.BR putwchar (3),
.BR scanf (3),
.BR unlocked_stdio (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
