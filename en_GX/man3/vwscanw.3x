.\"***************************************************************************
.\" Copyright (c) 1998-2006,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_scanw.3x,v 1.17 2010/12/04 18:40:45 tom Exp $
.TH curs_scanw 3X ""
.SH NAME
\fBscanw\fR,
\fBwscanw\fR,
\fBmvscanw\fR,
\fBmvwscanw\fR,
\fBvwscanw\fR, \fBvw_scanw\fR \- convert formatted input from a \fBcurses\fR window
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBint scanw(char *fmt, ...);\fR
.br
\fBint wscanw(WINDOW *win, char *fmt, ...);\fR
.br
\fBint mvscanw(int y, int x, char *fmt, ...);\fR
.br
\fBint mvwscanw(WINDOW *win, int y, int x, char *fmt, ...);\fR
.br
\fBint vw_scanw(WINDOW *win, char *fmt, va_list varglist);\fR
.br
\fBint vwscanw(WINDOW *win, char *fmt, va_list varglist);\fR
.SH DESCRIPTION
Da \fBscanw\fR, \fBwscanw\fR n' \fBmvscanw\fR routines is analogous to
\fBscanf\fR [see \fBscanf\fR(3)].  Da effect of these routines be as though
\fBwgetstr\fR was called on tha window, n' tha resultin line used as input
for \fBsscanf\fR(3).  Fieldz which do not map ta a variable up in tha \fIfmt\fR
field is lost.
.PP
Da \fBvwscanw\fR n' \fBvw_scanw\fR routines is analogous ta \fBvscanf\fR.
They big-ass up a \fBwscanw\fR rockin a variable argument list.
Da third argument be a \fIva_list\fR,
a pointa ta a list of arguments, as defined up in \fB<stdarg.h>\fR.
.SH RETURN VALUE
\fBvwscanw\fR returns \fBERR\fR on failure n' a integer equal ta the
number of fieldz scanned on success.
.PP
Applications may use tha return value from tha \fBscanw\fR, \fBwscanw\fR,
\fBmvscanw\fR n' \fBmvwscanw\fR routines ta determine tha number of fields
which was mapped up in tha call.
.PP
Functions wit a "mv" prefix first big-ass up a cold-ass lil cursor movement using
\fBwmove\fP, n' return a error if tha posizzle is outside tha window,
or if tha window pointa is null.
.SH PORTABILITY
Da XSI Curses standard, Issue 4 raps bout these functions.  Da function
\fBvwscanw\fR is marked TO BE WITHDRAWN, n' is ta be replaced by a gangbangin' function
\fBvw_scanw\fR rockin tha \fB<stdarg.h>\fR intercourse.
Da Single Unix Justification, Version 2 states that
\fBvw_scanw\fR  is preferred ta \fBvwscanw\fR since tha latta requires
includin \fB<varargs.h>\fR, which
cannot be used up in tha same file as \fB<stdarg.h>\fR.
This implementation uses \fB<stdarg.h>\fR fo' both, cuz dat header
is included up in \fB<curses.h\fR>.
.LP
Both XSI n' Da Single Unix Justification, Version 2 state dat these
functions return ERR or OK.
Since tha underlyin \fBscanf\fR can return tha number of shit scanned,
and tha SVr4 code was documented ta use dis feature,
this is probably a editin error which was introduced up in XSI,
rather than bein done intentionally.
Portable applications should only test if tha return value is ERR,
since tha OK value (zero) is likely ta be misleading.
One possible way ta git useful thangs up in dis biatch would be ta bust a "%n" conversion
at tha end of tha format strang ta ensure dat suttin' was processed.
.SH SEE ALSO
\fBcurses\fR(3X), \fBcurs_getstr\fR(3X), \fBcurs_printw\fR(3X), \fBscanf\fR(3)
