" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::weak_ptr< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits std::__weak_ptr< _Tp, _Lp >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp \fBelement_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename _Tp1 , typename  = typename std::enable_if<std::is_convertible<_Tp1*, _Tp*>::value>::type> \fBweak_ptr\fP (const \fBweak_ptr\fP< _Tp1 > &__r) noexcept"
.br
.ti -1c
.RI "template<typename _Tp1 , typename  = typename std::enable_if<std::is_convertible<_Tp1*, _Tp*>::value>::type> \fBweak_ptr\fP (const \fBshared_ptr\fP< _Tp1 > &__r) noexcept"
.br
.ti -1c
.RI "bool \fBexpired\fP () const noexcept"
.br
.ti -1c
.RI "\fBshared_ptr\fP< _Tp > \fBlock\fP () const noexcept"
.br
.ti -1c
.RI "template<typename _Tp1 > \fBweak_ptr\fP & \fBoperator=\fP (const \fBweak_ptr\fP< _Tp1 > &__r) noexcept"
.br
.ti -1c
.RI "template<typename _Tp1 > \fBweak_ptr\fP & \fBoperator=\fP (const \fBshared_ptr\fP< _Tp1 > &__r) noexcept"
.br
.ti -1c
.RI "template<typename _Tp1 > bool \fBballer_before\fP (const __shared_ptr< _Tp1, _Lp > &__rhs) const "
.br
.ti -1c
.RI "template<typename _Tp1 > bool \fBballer_before\fP (const __weak_ptr< _Tp1, _Lp > &__rhs) const "
.br
.ti -1c
.RI "void \fBreset\fP () noexcept"
.br
.ti -1c
.RI "void \fBswap\fP (__weak_ptr &__s) noexcept"
.br
.ti -1c
.RI "long \fBuse_count\fP () const noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>class std::weak_ptr< _Tp >"
A smart-ass pointa wit weak semantics\&. 

With forwardin constructors n' assignment operators\&. 
.PP
Definizzle at line 461 of file shared_ptr\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
