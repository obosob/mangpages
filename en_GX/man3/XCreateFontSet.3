.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XCreateFontSet 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XCreateFontSet, XFreeFontSet \- create n' free a internationistic text drawin font set
.SH SYNTAX
.HP
XFontSet XCreateFontSet\^(\^Display *\fIdisplay\fP\^, char
*\fIbase_font_name_list\fP\^, char ***\fImissing_charset_list_return\fP\^, int
*\fImissing_charset_count_return\fP\^, char **\fIdef_string_return\fP\^);
.HP
void XFreeFontSet\^(\^Display *\fIdisplay\fP\^, XFontSet \fIfont_set\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIbase_font_name_list\fP 1i
Specifies tha base font names.
.IP \fIdef_string_return\fP 1i
Returns tha strang drawn fo' missin charsets.
.IP \fIfont_set\fP 1i
Specifies tha font set.
.IP \fImissing_charset_count_return\fP 1i
Returns tha number of missin charsets.
.IP \fImissing_charset_list_return\fP 1i
Returns tha missin charsets.
.SH DESCRIPTION
Da 
.ZN XCreateFontSet
function creates a gangbangin' font set fo' tha specified display.
Da font set is bound ta tha current locale when 
.ZN XCreateFontSet
is called.
Da font set may be used up in subsequent calls ta obtain font
and characta shiznit n' ta image text up in tha locale of tha font set.
.LP
Da base_font_name_list argument be a list of base font names
that Xlib uses ta load tha fonts needed fo' tha locale.
Da base font names is a cold-ass lil comma-separated list.
Da strang is null-terminated
and be assumed ta be up in tha Host Portable Characta Encoding; 
otherwise, tha result is implementation-dependent.
White space immediately on either side of a separatin comma is ignored.
.LP
Use of XLFD font names permits Xlib ta obtain tha fonts needed fo' a
variety of localez from a single locale-independent base font name.
Da single base font name should name a cold-ass lil crew of fonts whose members
are encoded up in tha various charsets needed by tha localez of interest.
.LP
An XLFD base font name can explicitly name a cold-ass lil charset needed fo' tha locale.
This allows tha user ta specify a exact font fo' use wit a cold-ass lil charset required
by a locale, straight-up controllin tha font selection.
.LP
If a funky-ass base font name aint a XLFD name,
Xlib will attempt ta obtain a XLFD name from tha font properties
for tha font.
If dis action is successful up in obtainin a XLFD name, the
.ZN XBaseFontNameListOfFontSet
function will return dis XLFD name instead of tha client-supplied name.
.LP
Xlib uses tha followin algorithm ta select tha fonts
that is ghon be used ta display text wit tha 
.ZN XFontSet .
.LP
For each font charset required by tha locale,
the base font name list is searched fo' tha straight-up original gangsta appearizzle of one 
of tha followin cases dat names a set of fonts dat exist all up in tha server:
.IP \(bu 5
Da first XLFD-conformin base font name dat specifies tha required
charset or a superset of tha required charset up in its 
.ZN CharSetRegistry
and 
.ZN CharSetEncoding
fields.
Da implementation may bust a funky-ass base font name whose specified charset
is a superset of tha required charset, fo' example,
an ISO8859-1 font fo' a ASCII charset.
.IP \(bu 5
Da first set of one or mo' XLFD-conformin base font names
that specify one or mo' charsets dat can be remapped ta support the
required charset.
Da Xlib implementation may recognize various mappings 
from a required charset ta one or mo' other charsets
and use tha fonts fo' dem charsets.
For example, JIS Roman is ASCII wit tilde n' backslash replaced 
by yen n' overbar;
Xlib may load a ISO8859-1 font ta support dis characta set
if a JIS Roman font aint available.
.IP \(bu 5
Da first XLFD-conformin font name or tha straight-up original gangsta non-XLFD font name
for which a XLFD font name can be obtained, combined wit the
required charset (replacin tha 
.ZN CharSetRegistry
and
.ZN CharSetEncoding
fieldz up in tha XLFD font name).
As up in case 1,
the implementation may bust a cold-ass lil charset dat be a superset
of tha required charset.
.IP \(bu 5
Da first font name dat can be mapped up in some implementation-dependent
manner ta one or mo' fonts dat support imagin text up in tha charset.
.LP
For example, assume dat a locale required tha charsets:
.LP
.Ds 0
ISO8859-1
JISX0208.1983
JISX0201.1976
GB2312-1980.0
.De
.LP
Da user could supply a funky-ass base_font_name_list dat explicitly specifies the
charsets, ensurin dat specific fonts is used if they exist.
For example:
.LP
.Ds 0
"-JIS-Fixed-Medium-R-Normal--26-180-100-100-C-240-JISX0208.1983-0,\\
-JIS-Fixed-Medium-R-Normal--26-180-100-100-C-120-JISX0201.1976-0,\\
-GB-Fixed-Medium-R-Normal--26-180-100-100-C-240-GB2312-1980.0,\\
-Adobe-Courier-Bold-R-Normal--25-180-75-75-M-150-ISO8859-1"
.De
.LP
Alternatively, tha user could supply a funky-ass base_font_name_list
that omits tha charsets,
lettin Xlib select font charsets required fo' tha locale.
For example:
.LP
.Ds 0
"-JIS-Fixed-Medium-R-Normal--26-180-100-100-C-240,\\
-JIS-Fixed-Medium-R-Normal--26-180-100-100-C-120,\\
-GB-Fixed-Medium-R-Normal--26-180-100-100-C-240,\\
-Adobe-Courier-Bold-R-Normal--25-180-100-100-M-150"
.De
.LP
Alternatively, tha user could simply supply a single base font name
that allows Xlib ta select from all available fonts
that hook up certain minimum XLFD property requirements.
For example:
.LP
.Ds 0
"-*-*-*-R-Normal--*-180-100-100-*-*"
.De
.LP
If 
.ZN XCreateFontSet
is unable ta create tha font set, 
either cuz there is insufficient memory or cuz tha current locale
is not supported,
.ZN XCreateFontSet
returns NULL, missing_charset_list_return is set ta NULL,
and missing_charset_count_return
is set ta zero.
If fonts exist fo' all of tha charsets required by tha current locale,
.ZN XCreateFontSet
returns a valid
.ZN XFontSet ,
missing_charset_list_return is set ta NULL,
and missing_charset_count_return is set ta zero.
.LP
If no font exists fo' one or mo' of tha required charsets,
.ZN XCreateFontSet
sets missing_charset_list_return ta a
list of one or mo' null-terminated charset names fo' which no font exists
and sets missing_charset_count_return ta tha number of missin fonts.
Da charsets is from tha list of tha required charsets for
the encodin of tha locale n' do not include any charsets ta which Xlib
may be able ta remap a required charset.
.LP
If no font exists fo' any of tha required charsets
or if tha locale definizzle up in Xlib requires dat a gangbangin' font exist
for a particular charset n' a gangbangin' font aint found fo' dat charset, 
.ZN XCreateFontSet
returns NULL.
Otherwise, 
.ZN XCreateFontSet
returns a valid 
.ZN XFontSet
to font_set.
.LP
When a Xmb/wc drawin or measurin function is called wit an
.ZN XFontSet
that has missin charsets, some charactas up in tha locale aint gonna be
drawable.
If def_string_return is non-NULL,
.ZN XCreateFontSet
returns a pointa ta a strang dat represents tha glyphs
that is drawn wit dis 
.ZN XFontSet
when tha charsetz of tha available fonts do not include all font glyphs
required ta draw a cold-ass lil codepoint.
Da strang do not necessarily consist of valid charactas 
in tha current locale n' aint necessarily drawn with
the fonts loaded fo' tha font set,
but tha client can draw n' measure tha default glyphs
by includin dis strang up in a strang bein drawn or measured wit tha 
.ZN XFontSet .
.LP
If tha strang moonwalked back ta def_string_return is tha empty strang ("\^"),
no glyphs is drawn, n' tha escapement is zero.
Da returned strang is null-terminated.
It be owned by Xlib n' should not be modified or freed by tha client.
It is ghon be freed by a cold-ass lil call ta 
.ZN XFreeFontSet
with tha associated 
.ZN XFontSet .
Until freed, its contents aint gonna be modified by Xlib.
.LP
Da client is responsible fo' constructin a error message from the
missin charset n' default strang shiznit n' may chizzle ta continue
operation up in tha case dat some fonts did not exist.
.LP
Da returned 
.ZN XFontSet
and missin charset list should be freed wit 
.ZN XFreeFontSet
and
.ZN XFreeStringList ,
respectively.
Da client-supplied base_font_name_list may be freed 
by tha client afta callin 
.ZN XCreateFontSet .
.LP
The
.ZN XFreeFontSet
function frees tha specified font set.
Da associated base font name list, font name list, 
.ZN XFontStruct
list, n' 
.ZN XFontSetExtents , 
if any, is freed.
.SH "SEE ALSO"
XExtentsofFontSet(3),
XFontsOfFontSet(3),
XFontSetExtents(3)
.br
\fI\*(xL\fP
