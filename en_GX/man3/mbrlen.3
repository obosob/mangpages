
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code n' manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroupz Single UNIX justification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH MBRLEN 3  2013-06-21 "GNU" "Linux Programmerz Manual"
.SH NAME
mbrlen \- determine number of bytes up in next multibyte character
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "size_t mbrlen(const char *" s ", size_t " n ", mbstate_t *" ps );
.fi
.SH DESCRIPTION
The
.BR mbrlen ()
function inspects at most
.I n
bytez of tha multibyte
strin startin at
.I s
and extracts tha next complete multibyte character.
It thugged-out shiznit tha shift state
.IR *ps .
If tha multibyte characta aint the
null wide character, it returns tha number of bytes dat was consumed from
.IR s .
If tha multibyte characta is tha null wide character, it resets the
shift state
.I *ps
to tha initial state n' returns 0.
.PP
If the
.IR n
bytes startin at
.I s
do not contain a cold-ass lil complete multibyte
character,
.BR mbrlen ()
returns
.IR "(size_t)\ \-2" .
This can happen even if
.I n
>=
.IR MB_CUR_MAX ,
if tha multibyte strang gotz nuff redundant shift
sequences.
.PP
If tha multibyte strang startin at
.I s
gotz nuff a invalid multibyte
sequence before tha next complete character,
.BR mbrlen ()
returns
.IR "(size_t)\ \-1"
and sets
.I errno
to
.BR EILSEQ .
In dis case,
the effects on
.I *ps
are undefined.
.PP
If
.I ps
is a NULL pointer, a static anonymous state known only ta the
.BR mbrlen ()
function is used instead.
.SH RETURN VALUE
The
.BR mbrlen ()
function returns tha number of bytes
parsed from tha multibyte
sequence startin at
.IR s ,
if a non-null wide characta was recognized.
It returns 0, if a null wide characta was recognized.
It returns
.I "(size_t)\ \-1"
and sets
.I errno
to
.BR EILSEQ ,
if a invalid multibyte sequence was
encountered.
It returns
.IR "(size_t)\ \-2"
if it couldn't parse a cold-ass lil complete multibyte
character, meanin that
.I n
should be increased.
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR mbrlen ()
function is thread-safe wit exceptions.
It aint thread-safe if called wit a NULL \fIps\fP parameter.
.SH CONFORMING TO
C99.
.SH NOTES
Da behavior of
.BR mbrlen ()
dependz on the
.B LC_CTYPE
category of the
current locale.
.SH SEE ALSO
.BR mbrtowc (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
