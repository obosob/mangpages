'\" t
.\"     Title: glCopyConvolutionFilter2D
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCOPYCONVOLUTIONFIL" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glCopyConvolutionFilter2D \- copy pixels tha fuck into a two\-dimensionizzle convolution filter
.SH "C SPECIFICATION"
.HP \w'void\ glCopyConvolutionFilter2D('u
.BI "void glCopyConvolutionFilter2D(GLenum\ " "target" ", GLenum\ " "internalformat" ", GLint\ " "x" ", GLint\ " "y" ", GLsizei\ " "width" ", GLsizei\ " "height" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Must be
\fBGL_CONVOLUTION_2D\fR\&.
.RE
.PP
\fIinternalformat\fR
.RS 4
Da internal format of tha convolution filta kernel\&. Da allowable joints are
\fBGL_ALPHA\fR,
\fBGL_ALPHA4\fR,
\fBGL_ALPHA8\fR,
\fBGL_ALPHA12\fR,
\fBGL_ALPHA16\fR,
\fBGL_LUMINANCE\fR,
\fBGL_LUMINANCE4\fR,
\fBGL_LUMINANCE8\fR,
\fBGL_LUMINANCE12\fR,
\fBGL_LUMINANCE16\fR,
\fBGL_LUMINANCE_ALPHA\fR,
\fBGL_LUMINANCE4_ALPHA4\fR,
\fBGL_LUMINANCE6_ALPHA2\fR,
\fBGL_LUMINANCE8_ALPHA8\fR,
\fBGL_LUMINANCE12_ALPHA4\fR,
\fBGL_LUMINANCE12_ALPHA12\fR,
\fBGL_LUMINANCE16_ALPHA16\fR,
\fBGL_INTENSITY\fR,
\fBGL_INTENSITY4\fR,
\fBGL_INTENSITY8\fR,
\fBGL_INTENSITY12\fR,
\fBGL_INTENSITY16\fR,
\fBGL_R3_G3_B2\fR,
\fBGL_RGB\fR,
\fBGL_RGB4\fR,
\fBGL_RGB5\fR,
\fBGL_RGB8\fR,
\fBGL_RGB10\fR,
\fBGL_RGB12\fR,
\fBGL_RGB16\fR,
\fBGL_RGBA\fR,
\fBGL_RGBA2\fR,
\fBGL_RGBA4\fR,
\fBGL_RGB5_A1\fR,
\fBGL_RGBA8\fR,
\fBGL_RGB10_A2\fR,
\fBGL_RGBA12\fR, or
\fBGL_RGBA16\fR\&.
.RE
.PP
\fIx\fR, \fIy\fR
.RS 4
Da window space coordinatez of tha lower\-left coordinizzle of tha pixel array ta copy\&.
.RE
.PP
\fIwidth\fR
.RS 4
Da width of tha pixel array ta copy\&.
.RE
.PP
\fIheight\fR
.RS 4
Da height of tha pixel array ta copy\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglCopyConvolutionFilter2D\fR
defines a two\-dimensionizzle convolution filta kernel wit pixels from tha current
\fBGL_READ_BUFFER\fR
(rather than from main memory, as is tha case for
\fBglConvolutionFilter2D\fR())\&.
.PP
Da screen\-aligned pixel rectangle wit lower\-left corner at (\fIx\fR,\e
\fIy\fR), width
\fIwidth\fR
and height
\fIheight\fR
is used ta define tha convolution filter\&. If any pixels within dis region is outside tha window dat be associated wit tha GL context, tha joints obtained fo' dem pixels is undefined\&.
.PP
Da pixels up in tha rectangle is processed exactly as if
\fBglReadPixels\fR()
had been called with
\fIformat\fR
set ta RGBA yo, but tha process stops just before final conversion\&. Da R, G, B, n' A componentz of each pixel is next scaled by tha four 2D
\fBGL_CONVOLUTION_FILTER_SCALE\fR
parametas n' biased by tha four 2D
\fBGL_CONVOLUTION_FILTER_BIAS\fR
parameters\&. (Da scale n' bias parametas is set by
\fBglConvolutionParameter\fR()
usin the
\fBGL_CONVOLUTION_2D\fR
target n' tha names
\fBGL_CONVOLUTION_FILTER_SCALE\fR
and
\fBGL_CONVOLUTION_FILTER_BIAS\fR\&. Da parametas theyselves is vectorz of four joints dat is applied ta red, green, blue, n' alpha, up in dat order\&.) Da R, G, B, n' A joints is not clamped ta [0,1] at any time durin dis process\&.
.PP
Each pixel is then converted ta tha internal format specified by
\fIinternalformat\fR\&. This conversion simply maps tha component jointz of tha pixel (R, G, B, n' A) ta tha joints included up in tha internal format (red, green, blue, alpha, luminance, n' intensity)\&. Da mappin be as bigs up:
.PP
.TS
allbox tab(:);
lB cB cB cB cB cB cB.
T{
\fB
                        Internal Format
                        \fR
T}:T{
\fB
                        Red
                        \fR
T}:T{
\fB
                        Green
                        \fR
T}:T{
\fB
                        Blue
                        \fR
T}:T{
\fB
                        Alpha
                        \fR
T}:T{
\fB
                        Luminance
                        \fR
T}:T{
\fB
                        Intensity
                        \fR
T}
.T&
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c
l c c c c c c.
T{
\fBGL_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{

T}:T{

T}
T{
\fBGL_LUMINANCE\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}:T{

T}
T{
\fBGL_LUMINANCE_ALPHA\fR
T}:T{

T}:T{

T}:T{

T}:T{
A
T}:T{
R
T}:T{

T}
T{
\fBGL_INTENSITY\fR
T}:T{

T}:T{

T}:T{

T}:T{

T}:T{

T}:T{
R
T}
T{
\fBGL_RGB\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{

T}:T{

T}:T{

T}
T{
\fBGL_RGBA\fR
T}:T{
R
T}:T{
G
T}:T{
B
T}:T{
A
T}:T{

T}:T{

T}
.TE
.sp 1
.PP
Da red, green, blue, alpha, luminance, and/or intensitizzle componentz of tha resultin pixels is stored up in floating\-point rather than integer format\&.
.PP
Pixel orderin is such dat lower x screen coordinates correspond ta lower
\fIi\fR
filta image coordinates, n' lower y screen coordinates correspond ta lower
\fIj\fR
filta image coordinates\&.
.PP
Note dat afta a cold-ass lil convolution is performed, tha resultin color components is also scaled by they corresponding
\fBGL_POST_CONVOLUTION_c_SCALE\fR
parametas n' biased by they corresponding
\fBGL_POST_CONVOLUTION_c_BIAS\fR
parametas (where
\fIc\fR
takes on tha joints
\fBRED\fR,
\fBGREEN\fR,
\fBBLUE\fR, and
\fBALPHA\fR)\&. These parametas is set by
\fBglPixelTransfer\fR()\&.
.SH "NOTES"
.PP
\fBglCopyConvolutionFilter2D\fR
is present only if
ARB_imaging
is returned when
\fBglGetString\fR()
is called wit a argument of
\fBGL_EXTENSIONS\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not
\fBGL_CONVOLUTION_2D\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIinternalformat\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIwidth\fR
is less than zero or pimped outa than tha maximum supported value\&. This value may be queried with
\fBglGetConvolutionParameter\fR()
usin target
\fBGL_CONVOLUTION_2D\fR
and name
\fBGL_MAX_CONVOLUTION_WIDTH\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIheight\fR
is less than zero or pimped outa than tha maximum supported value\&. This value may be queried with
\fBglGetConvolutionParameter\fR()
usin target
\fBGL_CONVOLUTION_2D\fR
and name
\fBGL_MAX_CONVOLUTION_HEIGHT\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglCopyConvolutionFilter2D\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetConvolutionParameter\fR(),
\fBglGetConvolutionFilter\fR()
.SH "SEE ALSO"
.PP
\fBglConvolutionFilter2D\fR(),
\fBglConvolutionParameter\fR(),
\fBglPixelTransfer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
