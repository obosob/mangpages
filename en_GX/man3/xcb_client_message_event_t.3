.TH xcb_client_message_event_t 3  2013-08-04 "XCB" "XCB Events"
.ad l
.SH NAME
xcb_client_message_event_t \- NOT YET DOCUMENTED
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.PP
.SS Event datastructure
.nf
.sp
typedef struct xcb_client_message_event_t {
    uint8_t                   \fIresponse_type\fP;
    uint8_t                   \fIformat\fP;
    uint16_t                  \fIsequence\fP;
    xcb_window_t              \fIwindow\fP;
    xcb_atom_t                \fItype\fP;
    xcb_client_message_data_t \fIdata\fP;
} \fBxcb_client_message_event_t\fP;
.fi
.br
.hy 1
.SH EVENT FIELDS
.IP \fIresponse_type\fP 1i
Da type of dis event, up in dis case \fIXCB_CLIENT_MESSAGE\fP. This field be also present up in tha \fIxcb_generic_event_t\fP n' can be used ta tell events apart from each other.
.IP \fIsequence\fP 1i
Da sequence number of tha last request processed by tha X11 server.
.IP \fIformat\fP 1i
Specifies how tha fuck ta interpret \fIdata\fP. Can be either 8, 16 or 32.
.IP \fIwindow\fP 1i
NOT YET DOCUMENTED.
.IP \fItype\fP 1i
An atom which indicates how tha fuck tha data should be interpreted by tha receiving
client.
.IP \fIdata\fP 1i
Da data itself (20 bytes max).
.SH DESCRIPTION
This event represents a ClientMessage, busted by another X11 client fo' realz. An example
is a cold-ass lil client bustin  tha \fI_NET_WM_STATE\fP ClientMessage ta tha root window
to indicate tha fullscreen window state, effectively requestin dat tha window
manager puts it tha fuck into fullscreen mode.
.SH SEE ALSO
.BR xcb_generic_event_t (3),
.BR xcb_send_event (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org fo' erections n' improvements.
