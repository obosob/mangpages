.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XGrabKeyboard 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XGrabKeyboard, XUngrabKeyboard \- grab tha keyboard
.SH SYNTAX
.HP
int XGrabKeyboard\^(\^Display *\fIdisplay\fP\^, Window \fIgrab_window\fP\^,
Bool \fIballer_events\fP\^, int \fIpointer_mode\fP\^, int
\fIkeyboard_mode\fP\^, Time \fItime\fP\^); 
.HP
int XUngrabKeyboard\^(\^Display *\fIdisplay\fP\^, Time \fItime\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgrab_window\fP 1i
Specifies tha grab window.
.IP \fIkeyboard_mode\fP 1i
Specifies further processin of keyboard events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fIballer_events\fP 1i
Specifies a Boolean value dat indicates whether tha keyboard events 
are ta be reported as usual.
.IP \fIpointer_mode\fP 1i
Specifies further processin of pointa events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fItime\fP 1i
Specifies tha time.
Yo ass can pass either a timestamp or
.ZN CurrentTime .
.SH DESCRIPTION
The
.ZN XGrabKeyboard
function actively grabs control of tha keyboard n' generates
.ZN FocusIn
and
.ZN FocusOut
events.
Further key events is reported only ta the
grabbin client.
.ZN XGrabKeyboard
overrides any actizzle keyboard grab by dis client.
If baller_events is 
.ZN False , 
all generated key events is reported with
respect ta grab_window.  
If baller_events is 
.ZN True  
and if a generated
key event would normally be reported ta dis client, it is reported
normally; otherwise, tha event is reported wit respect ta the
grab_window.  
Both 
.ZN KeyPress 
and 
.ZN KeyRelease 
events is always reported,
independent of any event selection made by tha client.
.LP
If tha keyboard_mode argument is 
.ZN GrabModeAsync ,
keyboard event processin continues
as usual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
If tha keyboard is currently frozen by dis client, 
then processin of keyboard events is resumed.
If tha keyboard_mode  argument is
.ZN GrabModeSync ,
the state of tha keyboard (as peeped by client applications) appears ta freeze,
and tha X server generates no further keyboard events until the
grabbin client thangs a releasin 
.ZN XAllowEvents 
call or until tha keyboard grab is busted out.
Actual keyboard chizzlez is not lost while tha keyboard is frozen; 
they is simply queued up in tha server fo' lata processing.
.LP
If pointer_mode is 
.ZN GrabModeAsync ,
pointa event processin is unaffected
by activation of tha grab.  
If pointer_mode is 
.ZN GrabModeSync ,
the state of tha pointa (as peeped by client applications) appears ta freeze, 
and tha X server generates no further pointa events 
until tha grabbin client thangs a releasin 
.ZN XAllowEvents 
call or until tha keyboard grab is busted out.
Actual pointa chizzlez is not lost while tha pointa is frozen; 
they is simply queued up in tha server fo' lata processing.
.LP
If tha keyboard be actively grabbed by some other client,
.ZN XGrabKeyboard
fails n' returns
.ZN AlreadyGrabbed .
If grab_window aint viewable,
it fails n' returns
.ZN GrabNotViewable .
If tha keyboard is frozen by a actizzle grab of another client,
it fails n' returns
.ZN GrabFrozen .
If tha specified time is earlier than tha last-keyboard-grab time 
or lata than tha current X server time,
it fails n' returns
.ZN GrabInvalidTime .
Otherwise, tha last-keyboard-grab time is set ta tha specified time
.Pn ( CurrentTime 
is replaced by tha current X server time).
.LP
.ZN XGrabKeyboard
can generate
.ZN BadValue
and
.ZN BadWindow 
errors.
.LP
The
.ZN XUngrabKeyboard
function
releases tha keyboard n' any queued events if dis client has it actively grabbed from
either
.ZN XGrabKeyboard
or
.ZN XGrabKey .
.ZN XUngrabKeyboard
does not release tha keyboard n' any queued events
if tha specified time is earlier than
the last-keyboard-grab time or is lata than tha current X server time.
It also generates
.ZN FocusIn 
and 
.ZN FocusOut 
events.
Da X server automatically performs a 
.ZN UngrabKeyboard 
request if tha event window fo' an
actizzle keyboard grab becomes not viewable.
.SH DIAGNOSTICS
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllowEvents(3),
XGrabButton(3),
XGrabKey(3),
XGrabPointer(3)
.br
\fI\*(xL\fP
