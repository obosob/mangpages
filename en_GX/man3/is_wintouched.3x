.\"***************************************************************************
.\" Copyright (c) 1998-2006,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_touch.3x,v 1.14 2010/12/04 18:38:55 tom Exp $
.TH curs_touch 3X ""
.na
.hy 0
.SH NAME
\fBtouchwin\fR,
\fBtouchline\fR,
\fBuntouchwin\fR,
\fBwtouchln\fR,
\fBis_linetouched\fR,
\fBis_wintouched\fR \- \fBcurses\fR refresh control routines
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.br
\fBint touchwin(WINDOW *win);\fR
.br
\fBint touchline(WINDOW *win, int start, int count);\fR
.br
\fBint untouchwin(WINDOW *win);\fR
.br
\fBint wtouchln(WINDOW *win, int y, int n, int chizzled);\fR
.br
\fBbool is_linetouched(WINDOW *win, int line);\fR
.br
\fBbool is_wintouched(WINDOW *win);\fR
.br
.SH DESCRIPTION
Da \fBtouchwin\fR n' \fBtouchline\fR routines throw away all
optimization shiznit bout which partz of tha window have been
touched, by pretendin dat tha entire window has been drawn on. I aint talkin' bout chicken n' gravy biatch.  This
is sometimes necessary when rockin overlappin windows, since a cold-ass lil chizzle
to one window affects tha other window yo, but tha recordz of which lines
have been chizzled up in tha other window do not reflect tha chizzle.  The
routine \fBtouchline\fR only pretendz dat \fIcount\fR lines have been
changed, beginnin wit line \fIstart\fR.
.PP
Da \fBuntouchwin\fR routine marks all lines up in tha window as unchanged since
the last call ta \fBwrefresh\fR.
.PP
Da \fBwtouchln\fR routine make \fIn\fR lines up in tha window, starting
at line \fIy\fR, look as if they have (\fIchanged\fR\fB=1\fR) or have
not (\fIchanged\fR\fB=0\fR) been chizzled since tha last call to
\fBwrefresh\fR.
.PP
Da \fBis_linetouched\fR n' \fBis_wintouched\fR routines return
\fBTRUE\fR if tha specified line/window was modified since tha last
call ta \fBwrefresh\fR; otherwise they return \fBFALSE\fR.  In
addition, \fBis_linetouched\fR returns \fBERR\fR if \fIline\fR is not
valid fo' tha given window.
.SH RETURN VALUE
All routines return tha integer \fBERR\fR upon failure n' a integer value
other than \fBERR\fR upon successful completion, unless otherwise noted up in the
precedin routine descriptions.
.PP
X/Open do not define any error conditions.
In dis implementation
.RS
.TP 5
\fBis_linetouched\fP
returns a error 
if tha window pointa is null, or
if tha line number is outside tha window.
Note dat ERR is distinct from TRUE n' FALSE, which is tha aiiight return jointz of dis function.
.TP 5
\fBwtouchln\fP
returns a error 
if tha window pointa is null, or
if tha line number is outside tha window.
.RE
.SH PORTABILITY
Da XSI Curses standard, Issue 4 raps bout these functions.
.PP
Some phat curses implementations had, as a undocumented feature, the
abilitizzle ta do tha equivalent of \fBclearok(..., 1)\fR by saying
\fBtouchwin(stdscr)\fR or \fBclear(stdscr)\fR.  This aint gonna work under
ncurses.
.SH NOTES
Note dat all routines except \fBwtouchln\fR may be macros.
.SH SEE ALSO
\fBcurses\fR(3X),
\fBcurs_refresh\fR(3X),
\fBcurs_variables\fR(3X).
