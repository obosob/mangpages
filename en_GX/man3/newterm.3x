.\"***************************************************************************
.\" Copyright (c) 1998-2005,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_initscr.3x,v 1.17 2010/12/04 18:36:58 tom Exp $
.TH curs_initscr 3X ""
.na
.hy 0
.SH NAME
\fBinitscr\fR,
\fBnewterm\fR,
\fBendwin\fR,
\fBisendwin\fR,
\fBset_term\fR,
\fBdelscreen\fR \- \fBcurses\fR screen initialization n' manipulation routines
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBWINDOW *initscr(void);\fR
.br
\fBint endwin(void);\fR
.br
\fBbool isendwin(void);\fR
.br
\fBSCREEN *newterm(char *type, FILE *outfd, FILE *infd);\fR
.br
\fBSCREEN *set_term(SCREEN *new);\fR
.br
\fBvoid delscreen(SCREEN* sp);\fR
.br
.SH DESCRIPTION
\fBinitscr\fR is normally tha straight-up original gangsta \fBcurses\fR routine ta booty-call when
initializin a program.  A few special routines sometimes need ta be
called before it; these is \fBslk_init\fR, \fBfilter\fR, \fBripoffline\fR,
\fBuse_env\fR.  For multiple-terminal applications, \fBnewterm\fR may be
called before \fBinitscr\fR.
.PP
Da initscr code determines tha terminal type n' initializes all \fBcurses\fR
data structures.  \fBinitscr\fR also causes tha straight-up original gangsta call ta \fBrefresh\fR to
clear tha screen. I aint talkin' bout chicken n' gravy biatch.  If errors occur, \fBinitscr\fR writes a appropriate error
message ta standard error n' exits; otherwise, a pointa is returned to
\fBstdscr\fR.
.PP
A program dat outputs ta mo' than one terminal should use tha \fBnewterm\fR
routine fo' each terminal instead of \fBinitscr\fR.  A program dat needz to
inspect capabilities, so it can continue ta run up in a line-oriented mode if the
terminal cannot support a screen-oriented program, would also use
\fBnewterm\fR.  Da routine \fBnewterm\fR should be called once fo' each
terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  It returns a variable of type \fBSCREEN *\fR which should be saved
as a reference ta dat terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da arguments is tha \fItype\fR of the
terminal ta be used up in place of \fB$TERM\fR, a gangbangin' file pointa fo' output ta the
terminal, n' another file pointa fo' input from tha terminal (if \fItype\fR
is \fBNULL\fR, \fB$TERM\fR is ghon be used).  Da program must also call
\fBendwin\fR fo' each terminal bein used before exitin from \fBcurses\fR.
If \fBnewterm\fR is called mo' than once fo' tha same terminal, tha first
terminal referred ta must be tha last one fo' which \fBendwin\fR is called.
.PP
A program should always call \fBendwin\fR before exitin or escapin from
\fBcurses\fR mode temporarily.  This routine restores tty modes, moves the
cursor ta tha lower left-hand corner of tha screen n' resets tha terminal into
the proper non-visual mode.  Callin \fBrefresh\fR or \fBdoupdate\fR afta a
temporary escape causes tha program ta resume visual mode.
.PP
Da \fBisendwin\fR routine returns \fBTRUE\fR if \fBendwin\fR has been
called without any subsequent calls ta \fBwrefresh\fR, n' \fBFALSE\fR
otherwise.
.PP
Da \fBset_term\fR routine is used ta switch between different
terminals.  Da screen reference \fBnew\fR becomes tha freshly smoked up current
terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da previous terminal is returned by tha routine.  This is
the only routine which manipulates \fBSCREEN\fR pointers; all other
routines affect only tha current terminal.
.PP
Da \fBdelscreen\fR routine frees storage associated wit the
\fBSCREEN\fR data structure.  Da \fBendwin\fR routine do not do
this, so \fBdelscreen\fR should be called afta \fBendwin\fR if a
particular \fBSCREEN\fR is no longer needed.
.SH RETURN VALUE
\fBendwin\fR returns tha integer \fBERR\fR upon failure n' \fBOK\fR
upon successful completion.
.PP
Routines dat return pointas always return \fBNULL\fR on error.
.PP
X/Open defines no error conditions.
In dis implementation
\fBendwin\fP returns a error if tha terminal was not initialized.
.SH NOTES
Note dat \fBinitscr\fR n' \fBnewterm\fR may be macros.
.SH PORTABILITY
These functions is busted lyrics bout up in tha XSI Curses standard, Issue 4.  It
specifies dat portable applications must not call \fBinitscr\fR mo' than
once.
.PP
Oldskool versionz of curses, e.g., BSD 4.4, may have returned a null pointer
from \fBinitscr\fR when a error is detected, rather than exiting.
It be safe but redundant ta check tha return value of \fBinitscr\fR
in XSI Curses.
.SH SEE ALSO
\fBcurses\fR(3X),
\fBcurs_kernel\fR(3X),
\fBcurs_refresh\fR(3X),
\fBcurs_slk\fR(3X),
\fBcurs_util\fR(3X),
\fBcurs_variables\fR(3X).
