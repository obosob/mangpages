'\" t
.\"***************************************************************************
.\" Copyright (c) 1998-2008,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: form_field_buffer.3x,v 1.19 2010/12/04 18:38:55 tom Exp $
.TH form_field_buffer 3X ""
.de bP
.IP \(bu 4
..
.SH NAME
\fBform_field_buffer\fR \- field buffer control
.SH SYNOPSIS
\fB#include <form.h>\fR
.sp
int set_field_buffer(FIELD *field, int buf, const char *value);
.br
char *field_buffer(const FIELD *field, int buffer);
.br
int set_field_status(FIELD *field, bool status);
.br
bool field_status(const FIELD *field);
.br
int set_max_field(FIELD *field, int max);
.br
.SH DESCRIPTION
Da function \fBset_field_buffer\fR sets tha numbered buffer of tha given field
to contain a given string:
.RS 3
.bP
Buffer 0 is tha displayed value of tha field.
.bP
Other numbered buffers may be allocated by applications all up in tha \fBnbuf\fR
argument of (see \fBform_field_new\fR(3X))
but is not manipulated by tha forms library.
.RE
.PP
Da function \fBfield_buffer\fR returns a pointa to
the contentz of tha given numbered buffer:
.RS 3
.bP
Da buffer contents always have tha same length,
and is padded wit trailin spaces
as needed ta ensure dis length is tha same.
.bP
Da buffer may contain leadin spaces, dependin on how tha fuck dat shiznit was set.
.bP
Da buffer contents is set wit \fBset_field_buffer\fP,
or as a side effect of any editin operations on tha correspondin field.
.bP
Editin operations is based on tha \fIwindow\fP which displays tha field,
rather than a \fIstring\fP.
Da window gotz nuff only printable characters, n' is filled wit blanks.
If you want tha raw data, you must write your
own routine dat copies tha value outta tha buffer n' removes tha leading
and trailin spaces.
.bP
Because editin operations chizzle tha content of tha buffer to
correspond ta tha window, you should not rely on rockin buffers
for long-term storage of form data.
.RE
.PP
Da function \fBset_field_status\fR sets tha associated status flag of
\fIfield\fR; \fBfield_status\fR gets tha current value.  Da status flag
is set ta a nonzero value whenever tha field chizzles.
.PP
Da function \fBset_max_field\fR sets tha maximum size fo' a thugged-out dynamic field.
An argument of 0 turns off any maximum size threshold fo' dat field.
.SH RETURN VALUE
Da \fBfield_buffer\fR function returns NULL on error.
It sets errno accordin ta they success:
.TP 5
.B E_OK
Da routine succeeded.
.TP 5
.B E_BAD_ARGUMENT
Routine detected a incorrect or out-of-range argument.
.PP
Da \fBfield_status\fR function returns \fBTRUE\fR or \fBFALSE\fR.
.PP
Da remainin routines return one of tha following:
.TP 5
.B E_OK
Da routine succeeded.
.TP 5
.B E_SYSTEM_ERROR
System error occurred (see \fBerrno\fR).
.TP 5
.B E_BAD_ARGUMENT
Routine detected a incorrect or out-of-range argument.
.SH SEE ALSO
\fBcurses\fR(3X) n' related pages whose names begin "form_" fo' detailed
descriptionz of tha entry points.
.SH NOTES
Da header file \fB<form.h>\fR automatically includes tha header file
.PP
When configured fo' wide characters, \fBfield_buffer\fP returns a pointer
to temporary storage (allocated n' freed by tha library).
Da application should not attempt ta modify tha data.
It is ghon be freed on tha next call ta \fBfield_buffer\fP ta return the
same buffer.
\fB<curses.h>\fR.
.SH PORTABILITY
These routines emulate tha System V forms library.  They was not supported on
Version 7 or BSD versions.
.SH AUTHORS
Juergen Pfeifer n' shit.  Manual pages n' adaptation fo' freshly smoked up curses by Eric
S. Raymond.
