.\"***************************************************************************
.\" Copyright (c) 1998-2005,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_getstr.3x,v 1.19 2010/12/04 18:36:44 tom Exp $
.TH curs_getstr 3X ""
.na
.hy 0
.SH NAME
\fBgetstr\fR,
\fBgetnstr\fR,
\fBwgetstr\fR,
\fBwgetnstr\fR,
\fBmvgetstr\fR,
\fBmvgetnstr\fR,
\fBmvwgetstr\fR,
\fBmvwgetnstr\fR \- accept characta strings from \fBcurses\fR terminal keyboard
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBint getstr(char *str);\fR
.br
\fBint getnstr(char *str, int n);\fR
.br
\fBint wgetstr(WINDOW *win, char *str);\fR
.br
\fBint wgetnstr(WINDOW *win, char *str, int n);\fR
.br
\fBint mvgetstr(int y, int x, char *str);\fR
.br
\fBint mvwgetstr(WINDOW *win, int y, int x, char *str);\fR
.br
\fBint mvgetnstr(int y, int x, char *str, int n);\fR
.br
\fBint mvwgetnstr(WINDOW *, int y, int x, char *str, int n);\fR
.br
.SH DESCRIPTION
Da function \fBgetstr\fR is equivalent ta a seriez of calls ta \fBgetch\fR,
until a newline or carriage return is received (the terminatin characta is
not included up in tha returned string).  Da resultin value is placed up in the
area pointed ta by tha characta pointa \fIstr\fR.
.PP
\fBwgetnstr\fR readz at most \fIn\fR characters, thus preventin a possible
overflow of tha input buffer n' shit.  Any attempt ta enta mo' charactas (other
than tha terminatin newline or carriage return) causes a funky-ass beep.  Function
keys also cause a funky-ass beep n' is ignored. Y'all KNOW dat shit, muthafucka!  Da \fBgetnstr\fR function reads
from tha \fIstdscr\fR default window.
.PP
Da userz erase n' bust a cap up in charactas is interpreted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If keypad
mode is on fo' tha window, \fBKEY_LEFT\fR n' \fBKEY_BACKSPACE\fR
are both considered equivalent ta tha userz bust a cap up in character.
.PP
Charactas input is echoed only if \fBecho\fR is currently on. I aint talkin' bout chicken n' gravy biatch.  In dat case,
backspace is echoed as deletion of tha previous characta (typically a left
motion).
.SH RETURN VALUE
All routines return tha integer \fBERR\fR upon failure n' a \fBOK\fR (SVr4
specifies only "an integer value other than \fBERR\fR") upon successful
completion.
.PP
X/Open defines no error conditions.
.PP
In dis implementation,
these functions return a error
if tha window pointa is null, or
if its timeout expires without havin any data.
.PP
This implementation serves up a extension as well.
If a SIGWINCH interrupts tha function, it will return \fBKEY_RESIZE\fP
rather than \fBOK\fP or \fBERR\fP.
.PP
Functions wit a "mv" prefix first big-ass up a cold-ass lil cursor movement using
\fBwmove\fP, n' return a error if tha posizzle is outside tha window,
or if tha window pointa is null.
.SH NOTES
Note dat \fBgetstr\fR, \fBmvgetstr\fR, n' \fBmvwgetstr\fR may be macros.
.SH PORTABILITY
These functions is busted lyrics bout up in tha XSI Curses standard, Issue 4.
They read single-byte charactas only.
Da standard do not define any error conditions.
This implementation returns ERR if tha window pointa is null,
or if tha lower-level \fBwgetch\fR call returns a ERR.
.PP
SVr3 n' early SVr4 curses implementations did not reject function keys;
the SVr4.0 documentation fronted dat "special keys" (like fuckin function
keys, "home" key, "clear" key, \fIetc\fR.) is "interpreted", without
givin details.  It lied. Y'all KNOW dat shit, muthafucka!  In fact, tha `character' value appended ta the
strin by dem implementations was predictable but not useful
(being, up in fact, tha low-order eight bitz of tha keyz KEY_ value).
.PP
Da functions \fBgetnstr\fR, \fBmvgetnstr\fR, n' \fBmvwgetnstr\fR were
present but not documented up in SVr4.
.SH SEE ALSO
\fBcurses\fR(3X),
\fBcurs_getch\fR(3X),
\fBcurs_variables\fR(3X).
