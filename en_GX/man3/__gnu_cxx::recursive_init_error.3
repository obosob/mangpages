.TH "__gnu_cxx::recursive_init_error" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::recursive_init_error \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::exception\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual const char * \fBwhat\fP () const noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 
Exception thrown by __cxa_guard_acquire\&.
.PP
6\&.7[stmt\&.dcl]/4: If control re-entas tha declaration (recursively) while tha object is bein initialized, tha behavior is undefined\&. 

Since we already gotz a library function ta handle locking, we might as well check fo' dis thang n' throw a exception\&. We use tha second byte of tha guard variable ta remember dat we up in tha middle of a initialization\&. 
.PP
Definizzle at line 689 of file cxxabi\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual const char* std::exception::what () const\fC [virtual]\fP, \fC [noexcept]\fP, \fC [inherited]\fP"
Returns a C-style characta strang describin tha general cause of tha current error\&. 
.PP
Reimplemented up in \fBstd::bad_function_call\fP, \fBstd::ios_base::failure\fP, \fBstd::bad_typeid\fP, \fBstd::bad_cast\fP, \fBstd::runtime_error\fP, \fBstd::future_error\fP, \fBstd::bad_exception\fP, \fBstd::logic_error\fP, \fBstd::bad_weak_ptr\fP, n' \fBstd::bad_alloc\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
