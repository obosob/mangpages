.\"***************************************************************************
.\" Copyright (c) 1998-2008,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: form_driver.3x,v 1.22 2010/12/04 18:38:55 tom Exp $
.TH form_driver 3X ""
.de bP
.IP \(bu 4
..
.SH NAME
\fBform_driver\fR \- command-processin loop of tha form system
.SH SYNOPSIS
\fB#include <form.h>\fR
.br
int form_driver(FORM *form, int c);
.br
.SH DESCRIPTION
Once a gangbangin' form has been posted (displayed), you should funnel input events ta it
all up in \fBform_driver\fR.  This routine has three major input cases:
.bP
Da input be a gangbangin' form mastabation request.
Navigation request codes is constants defined up in \fB<form.h>\fP,
which is distinct from tha key- n' characta codes returned by \fBwgetch\fP.
.bP
Da input be a printable character.
Printable charactas (which must be positive, less than 256) are
checked accordin ta tha programz locale settings.
.bP
Da input is tha KEY_MOUSE special key associated wit a mouse event.
.PP
Da form driver requests is as bigs up:
.TP 5
REQ_NEXT_PAGE
Move ta tha next page.
.TP 5
REQ_PREV_PAGE
Move ta tha previous page.
.TP 5
REQ_FIRST_PAGE
Move ta tha straight-up original gangsta page.
.TP 5
REQ_LAST_PAGE
Move ta tha last field.
.sp
.TP 5
REQ_NEXT_FIELD
Move ta tha next field.
.TP 5
REQ_PREV_FIELD
Move ta tha previous field.
.TP 5
REQ_FIRST_FIELD
Move ta tha straight-up original gangsta field.
.TP 5
REQ_LAST_FIELD
Move ta tha last field.
.TP 5
REQ_SNEXT_FIELD
Move ta tha sorted next field.
.TP 5
REQ_SPREV_FIELD
Move ta tha sorted previous field.
.TP 5
REQ_SFIRST_FIELD
Move ta tha sorted first field.
.TP 5
REQ_SLAST_FIELD
Move ta tha sorted last field.
.TP 5
REQ_LEFT_FIELD
Move left ta a gangbangin' field.
.TP 5
REQ_RIGHT_FIELD
Move right ta a gangbangin' field.
.TP 5
REQ_UP_FIELD
Move up ta a gangbangin' field.
.TP 5
REQ_DOWN_FIELD
Move down ta a gangbangin' field.
.sp
.TP 5
REQ_NEXT_CHAR
Move ta tha next char.
.TP 5
REQ_PREV_CHAR
Move ta tha previous char.
.TP 5
REQ_NEXT_LINE
Move ta tha next line.
.TP 5
REQ_PREV_LINE
Move ta tha previous line.
.TP 5
REQ_NEXT_WORD
Move ta tha next word.
.TP 5
REQ_PREV_WORD
Move ta tha previous word.
.TP 5
REQ_BEG_FIELD
Move ta tha beginnin of tha field.
.TP 5
REQ_END_FIELD
Move ta tha end of tha field.
.TP 5
REQ_BEG_LINE
Move ta tha beginnin of tha line.
.TP 5
REQ_END_LINE
Move ta tha end of tha line.
.TP 5
REQ_LEFT_CHAR
Move left up in tha field.
.TP 5
REQ_RIGHT_CHAR
Move right up in tha field.
.TP 5
REQ_UP_CHAR
Move up in tha field.
.TP 5
REQ_DOWN_CHAR
Move down up in tha field.
.sp
.TP 5
REQ_NEW_LINE
Insert or overlay a freshly smoked up line.
.TP 5
REQ_INS_CHAR
Insert a funky-ass blank all up in tha cursor.
.TP 5
REQ_INS_LINE
Insert a funky-ass blank line all up in tha cursor.
.TP 5
REQ_DEL_CHAR
Delete characta all up in tha cursor.
.TP 5
REQ_DEL_PREV
Delete characta before tha cursor.
.TP 5
REQ_DEL_LINE
Delete line all up in tha cursor.
.TP 5
REQ_DEL_WORD
Delete blank-delimited word all up in tha cursor.
.TP 5
REQ_CLR_EOL
Clear ta end of line from cursor.
.TP 5
REQ_CLR_EOF
Clear ta end of field from cursor.
.TP 5
REQ_CLR_FIELD
Clear tha entire field.
.TP 5
REQ_OVL_MODE
Enta overlay mode.
.TP 5
REQ_INS_MODE
Enta bang mode.
.sp
.TP 5
REQ_SCR_FLINE
Scroll tha field forward a line.
.TP 5
REQ_SCR_BLINE
Scroll tha field backward a line.
.TP 5
REQ_SCR_FPAGE
Scroll tha field forward a page.
.TP 5
REQ_SCR_BPAGE
Scroll tha field backward a page.
.TP 5
REQ_SCR_FHPAGE
Scroll tha field forward half a page.
.TP 5
REQ_SCR_BHPAGE
Scroll tha field backward half a page.
.sp
.TP 5
REQ_SCR_FCHAR
Scroll tha field forward a cold-ass lil character.
.TP 5
REQ_SCR_BCHAR
Scroll tha field backward a cold-ass lil character.
.TP 5
REQ_SCR_HFLINE
Horizontal scroll tha field forward a line.
.TP 5
REQ_SCR_HBLINE
Horizontal scroll tha field backward a line.
.TP 5
REQ_SCR_HFHALF
Horizontal scroll tha field forward half a line.
.TP 5
REQ_SCR_HBHALF
Horizontal scroll tha field backward half a line.
.sp
.TP
REQ_VALIDATION
Validate field.
.TP
REQ_NEXT_CHOICE
Display next field chizzle.
.TP
REQ_PREV_CHOICE
Display previous field chizzle.
.PP
If tha second argument be a printable character, tha driver places it
in tha current posizzle up in tha current field. Y'all KNOW dat shit, muthafucka!  If it is one of tha forms
requests listed above, dat request is executed.
.SS MOUSE HANDLING
.PP
If tha second argument is tha KEY_MOUSE special key, tha associated
mouse event is translated tha fuck into one of tha above pre-defined requests.
Currently only clicks up in tha user window (e.g., inside tha form display
area or tha decoration window) is handled.
.PP
If you click above tha display region of tha form:
.RS 3
.TP
a REQ_PREV_FIELD is generated fo' a single click,
.TP
a REQ_PREV_PAGE is generated fo' a thugged-out double-click and
.TP
a REQ_FIRST_FIELD is generated fo' a triple-click.
.RE
.PP
If you click below tha display region of tha form:
.RS 3
.TP
a REQ_NEXT_FIELD is generated fo' a single click,
.TP
a REQ_NEXT_PAGE is generated fo' a thugged-out double-click and
.TP
a REQ_LAST_FIELD is generated fo' a triple-click.
.RE
.PP
If you click at a field inside tha display area of tha form:
.RS 3
.bP
the form cursor is positioned ta dat field.
.bP
If you double-click a gangbangin' field,
the form cursor is positioned ta dat field
and \fBE_UNKNOWN_COMMAND\fR is returned.
This return value make sense,
because a thugged-out double click probably means dat a field-specific action should
be returned.
It be exactly tha purpose of dis return value ta signal dat an
application specific command should be executed.
.bP
If a translation
into a request was done, \fBform_driver\fR returns tha result of dis request.
.RE
.PP
If you clicked outside tha user window or tha mouse event could not be translated
into a gangbangin' form request a \fBE_REQUEST_DENIED\fR is returned.
.SS APPLICATION-DEFINED COMMANDS
.PP
If tha second argument is neither printable nor one of tha above
pre-defined form requests, tha driver assumes it be a application-specific
command n' returns \fBE_UNKNOWN_COMMAND\fR.  Application-defined commands
should be defined relatizzle ta \fBMAX_COMMAND\fR, tha maximum value of these
pre-defined requests.
.SH RETURN VALUE
\fBform_driver\fR returns one of tha followin error codes:
.TP 5
.B E_OK
Da routine succeeded.
.TP 5
.B E_BAD_ARGUMENT
Routine detected a incorrect or out-of-range argument.
.TP 5
.B E_BAD_STATE
Routine was called from a initialization or termination function.
.TP 5
.B E_NOT_POSTED
Da form has not been posted.
.TP 5
.B E_INVALID_FIELD
Contentz of field is invalid.
.TP 5
.B E_REQUEST_DENIED
Da form driver could not process tha request.
.TP 5
.B E_SYSTEM_ERROR
System error occurred (see \fBerrno\fR).
.TP 5
.B E_UNKNOWN_COMMAND
Da form driver code saw a unknown request code.
.
.SH SEE ALSO
\fBcurses\fR(3X),
\fBform\fR(3X),
\fBform_variables\fR(3X),
\fBgetch\fR(3X).
.SH NOTES
Da header file \fB<form.h>\fR automatically includes tha header files
\fB<curses.h>\fR.
.SH PORTABILITY
These routines emulate tha System V forms library.  They was not supported on
Version 7 or BSD versions.
.SH AUTHORS
Juergen Pfeifer n' shit.  Manual pages n' adaptation fo' freshly smoked up curses by Eric
S. Raymond.
