.\" Copyright 1993 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be
.\" included up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtOwn-Selection XtOwn-Selection-Incremenstrual XtDisown-Selection wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtOwnSelection 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtOwnSelection, XtOwnSelectionIncremental, XtDisownSelection \- set selection baller
.SH SYNTAX
.HP
Boolean XtOwnSelection(Widget \fIw\fP, Atom \fIselection\fP, Time \fItime\fP,
XtConvertSelectionProc \fIconvert_proc\fP, XtLoseSelectionProc
\fIlose_selection\fP, XtSelectionDoneProc \fIdone_proc\fP);
.HP
Boolean XtOwnSelectionIncremental(Widget \fIw\fP, Atom \fIselection\fP, Time
\fItime\fP, XtConvertSelectionIncrProc \fIconvert_callback\fP,
XtLoseSelectionIncrProc \fIlose_callback\fP, XtSelectionDoneIncrProc
\fIdone_callback\fP, XtCancelConvertSelectionProc \fIcancel_callback\fP,
XtPointa \fIclient_data\fP);
.HP
void XtDisownSelection(Widget \fIw\fP, Atom \fIselection\fP, Time \fItime\fP);
.SH ARGUMENTS
.IP \fIconvert_proc\fP 1i
Specifies tha procedure dat is ta be called whenever one of mah thugs requests the
current value of tha selection.
.IP \fIdone_proc\fP 1i
Specifies tha procedure dat is called
afta tha requestor has received tha selection or NULL if tha balla is not
horny bout bein called back.
.IP \fIlose_selection\fP 1i
Specifies tha procedure dat is ta be called whenever tha widget has
lost selection ballershizzle or NULL if tha balla aint horny bout being
called back.
.IP \fIselection\fP 1i
Specifies a atom dat raps bout tha type of tha selection (for example,
.ZN XA_PRIMARY ,
.ZN XA_SECONDARY ,
or
.ZN XA_CLIPBOARD ).
.ds Ti ballershizzle should commence or is ta be relinquished
.IP \fItime\fP 1i
Specifies tha timestamp dat indicates when tha selection \*(Ti.
.ds Wi dat wishes ta become tha balla or ta relinquish ballership
.IP \fIw\fP 1i
Specifies tha widget \*(Wi.
.SH DESCRIPTION
The
.ZN XtOwnSelection
function informs tha \*(xI selection mechanizzle dat a
widget believes it owns a selection.
It returns
.ZN True
if tha widget has successfully become tha balla and
.ZN False
otherwise.
Da widget may fail ta become tha balla if some other widget
has asserted ballershizzle at a time lata than dis widget.
Note dat widgets can lose selection ballershizzle either
because one of mah thugs asserted lata ballershizzle of tha selection
or cuz tha widget voluntarily gave up ballershizzle of tha selection.
Also note dat tha lose_selection procedure aint called
if tha widget fails ta obtain selection ballershizzle up in tha straight-up original gangsta place.
.LP
The
.ZN XtOwnSelectionIncremental
procedure informs tha Intrinsics incremenstrual selection mechanizzle that
the specified widget wishes ta own tha selection. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it returns
.ZN True
if tha specified widget successfully becomes tha selection balla or
.ZN False
otherwise. For mo' shiznit bout \fIselection\fP, \fItarget\fP,
and \fItime\fP, peep Section 2.6 of tha \fIInter-Client Communication
Conventions Manual\fP.
.LP
A widget dat becomes tha selection balla using
.ZN XtOwnSelectionIncremental
may use
.ZN XtDisownSelection
to relinquish selection ballership.
.LP
The
.ZN XtDisownSelection
function informs tha \*(xI selection mechanizzle that
the specified widget is ta lose ballershizzle of tha selection.
If tha widget do not currently own tha selection either
because it lost tha selection
or cuz it never had tha selection ta begin with,
.ZN XtDisownSelection
does nothing.
.LP
Afta a widget has called
.ZN XtDisownSelection ,
its convert procedure aint called even if a request arrives later
with a timestamp durin tha period dat dis widget owned tha selection.
But fuck dat shiznit yo, tha word on tha street is dat its done procedure is ghon be called if a cold-ass lil conversion dat started
before tha call to
.ZN XtDisownSelection
finishes afta tha call to
.ZN XtDisownSelection .
.SH "SEE ALSO"
XtAppGetSelectionTimeout(3),
XtGetSelectionValue(3)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
