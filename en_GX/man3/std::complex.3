" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::complex< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "constexpr \fBcomplex\fP (const _Tp &__r=_Tp(), const _Tp &__i=_Tp())"
.br
.ti -1c
.RI "template<typename _Up > constexpr \fBcomplex\fP (const \fBcomplex\fP< _Up > &__z)"
.br
.ti -1c
.RI "constexpr \fBcomplex\fP \fB__rep\fP () const "
.br
.ti -1c
.RI "_GLIBCXX_ABI_TAG_CXX11 
.br
constexpr _Tp \fBimag\fP ()"
.br
.ti -1c
.RI "void \fBimag\fP (_Tp __val)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator*=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator*=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator+=\fP (const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator+=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator-=\fP (const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator-=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator/=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator/=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "_GLIBCXX_ABI_TAG_CXX11 
.br
constexpr _Tp \fBreal\fP ()"
.br
.ti -1c
.RI "void \fBreal\fP (_Tp __val)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp>struct std::complex< _Tp >"
Template ta represent complex numbers\&.
.PP
Specializations fo' float, double, n' long double is part of tha library\&. Results wit any other type is not guaranteed\&.
.PP
\fBParameters:\fP
.RS 4
\fITp\fP Type of real n' imaginary joints\&. 
.RE
.PP

.PP
Definizzle at line 63 of file complex\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _Tp> typedef _Tp \fBstd::complex\fP< _Tp >::\fBvalue_type\fP"

.PP
Value typedef\&. 
.PP
Definizzle at line 128 of file complex\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Tp> constexpr \fBstd::complex\fP< _Tp >::\fBcomplex\fP (const _Tp &__r = \fC_Tp()\fP, const _Tp &__i = \fC_Tp()\fP)\fC [inline]\fP"

.PP
Default constructor\&. First parameta is x, second parameta is y\&. Unspecified parametas default ta 0\&. 
.PP
Definizzle at line 132 of file complex\&.
.SS "template<typename _Tp> template<typename _Up > constexpr \fBstd::complex\fP< _Tp >::\fBcomplex\fP (const \fBcomplex\fP< _Up > &__z)\fC [inline]\fP"

.PP
Copy constructor\&. 
.PP
Definizzle at line 139 of file complex\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Tp> \fBcomplex\fP<_Tp>& \fBstd::complex\fP< _Tp >::operator+= (const _Tp &__t)\fC [inline]\fP"

.PP
Add \fIt\fP ta dis complex number\&. 
.PP
Definizzle at line 184 of file complex\&.
.SS "template<typename _Tp> \fBcomplex\fP<_Tp>& \fBstd::complex\fP< _Tp >::operator-= (const _Tp &__t)\fC [inline]\fP"

.PP
Subtract \fIt\fP from dis complex number\&. 
.PP
Definizzle at line 193 of file complex\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
