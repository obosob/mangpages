.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OPENSSL_config 3"
.TH OPENSSL_config 3 "2013-02-11" "1.0.1e" "OpenSSL"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
OPENSSL_config, OPENSSL_no_config \- simple OpenSSL configuration functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/conf.h>
\&
\& void OPENSSL_config(const char *config_name);
\& void OPENSSL_no_config(void);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIOPENSSL_config()\fR configures OpenSSL rockin tha standard \fBopenssl.cnf\fR
configuration file name rockin \fBconfig_name\fR. If \fBconfig_name\fR is \s-1NULL\s0 then
the default name \fBopenssl_conf\fR is ghon be used. Y'all KNOW dat shit, muthafucka! Any errors is ignored. Y'all KNOW dat shit, muthafucka! Further
calls ta \fIOPENSSL_config()\fR gonna git no effect. Da configuration file format
is documented up in tha \fIconf\fR\|(5) manual page.
.PP
\&\fIOPENSSL_no_config()\fR disablez configuration. I aint talkin' bout chicken n' gravy biatch. If called before \fIOPENSSL_config()\fR
no configuration takes place.
.SH "NOTES"
.IX Header "NOTES"
It be \fBstrongly\fR recommended dat \fBall\fR freshly smoked up applications call \fIOPENSSL_config()\fR
or tha mo' sophisticated functions like fuckin \fICONF_modules_load()\fR during
initialization (that is before startin any threads). By bustin this
an application do not need ta keep track of all configuration options
and some freshly smoked up functionalitizzle can be supported automatically.
.PP
It be also possible ta automatically call \fIOPENSSL_config()\fR when a application
calls \fIOPENSSL_add_all_algorithms()\fR by compilin a application wit the
preprocessor symbol \fB\s-1OPENSSL_LOAD_CONF\s0\fR #define'd. Y'all KNOW dat shit, muthafucka! In dis way configuration
can be added without source chizzles.
.PP
Da environment variable \fB\s-1OPENSSL_CONF\s0\fR can be set ta specify tha location
of tha configuration file.
.PP
Currently \s-1ASN1\s0 OBJECTs n' \s-1ENGINE\s0 configuration can be performed future
versionz of OpenSSL will add freshly smoked up configuration options.
.PP
There is nuff muthafuckin reasons why callin tha OpenSSL configuration routines is
advisable. For example freshly smoked up \s-1ENGINE\s0 functionalitizzle was added ta OpenSSL 0.9.7.
In OpenSSL 0.9.7 control functions can be supported by ENGINEs, dis can be
used (among other thangs) ta load dynamic ENGINEs from shared libraries (DSOs).
However straight-up few applications currently support tha control intercourse n' so
very few can load n' use dynamic ENGINEs. Equally up in future mo' sophisticated
ENGINEs will require certain control operations ta customize em. If an
application calls \fIOPENSSL_config()\fR it don't need ta know or care about
\&\s-1ENGINE\s0 control operations cuz they can be performed by editin a
configuration file.
.PP
Applications should free up configuration at application closedown by calling
\&\fICONF_modules_free()\fR.
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
Da \fIOPENSSL_config()\fR function is designed ta be a straight-up simple \*(L"call it and
forget it\*(R" function. I aint talkin' bout chicken n' gravy biatch fo' realz. As a result its behaviour is somewhat limited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Well shiiiit, it ignores
all errors silently n' it can only load from tha standard configuration file
location fo' example.
.PP
It be however \fBmuch\fR betta than not a god damn thang fo' realz. Applications which need finer
control over they configuration functionalitizzle should use tha configuration
functions like fuckin \fICONF_load_modules()\fR directly.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Neither \fIOPENSSL_config()\fR nor \fIOPENSSL_no_config()\fR return a value.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIconf\fR\|(5), \fICONF_load_modules_file\fR\|(3),
\&\fICONF_modules_free\fR\|(3),\fICONF_modules_free\fR\|(3)
.SH "HISTORY"
.IX Header "HISTORY"
\&\fIOPENSSL_config()\fR n' \fIOPENSSL_no_config()\fR first rocked up in OpenSSL 0.9.7
