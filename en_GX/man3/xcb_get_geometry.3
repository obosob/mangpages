.TH xcb_get_geometry 3  2013-08-04 "XCB" "XCB Requests"
.ad l
.SH NAME
xcb_get_geometry \- Git current window geometry
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_get_geometry_cookie_t \fBxcb_get_geometry\fP(xcb_connection_t\ *\fIconn\fP, xcb_drawable_t\ \fIdrawable\fP);
.PP
.SS Reply datastructure
.nf
.sp
typedef struct xcb_get_geometry_reply_t {
    uint8_t      \fIresponse_type\fP;
    uint8_t      \fIdepth\fP;
    uint16_t     \fIsequence\fP;
    uint32_t     \fIlength\fP;
    xcb_window_t \fIroot\fP;
    int16_t      \fIx\fP;
    int16_t      \fIy\fP;
    uint16_t     \fIwidth\fP;
    uint16_t     \fIheight\fP;
    uint16_t     \fIborder_width\fP;
    uint8_t      \fIpad0\fP[2];
} \fBxcb_get_geometry_reply_t\fP;
.fi
.SS Reply function
.HP
xcb_get_geometry_reply_t *\fBxcb_get_geometry_reply\fP(xcb_connection_t\ *\fIconn\fP, xcb_get_geometry_cookie_t\ \fIcookie\fP, xcb_generic_error_t\ **\fIe\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
Da XCB connection ta X11.
.IP \fIdrawable\fP 1i
Da drawable (\fIWindow\fP or \fIPixmap\fP) of which tha geometry is ghon be received.
.SH REPLY FIELDS
.IP \fIresponse_type\fP 1i
Da type of dis reply, up in dis case \fIXCB_GET_GEOMETRY\fP. This field be also present up in tha \fIxcb_generic_reply_t\fP n' can be used ta tell replies apart from each other.
.IP \fIsequence\fP 1i
Da sequence number of tha last request processed by tha X11 server.
.IP \fIlength\fP 1i
Da length of tha reply, up in lyrics (a word is 4 bytes).
.IP \fIdepth\fP 1i
Da depth of tha drawable (bits per pixel fo' tha object).
.IP \fIroot\fP 1i
Root window of tha screen containin \fIdrawable\fP.
.IP \fIx\fP 1i
Da X coordinizzle of \fIdrawable\fP. If \fIdrawable\fP be a window, tha coordinate
specifies tha upper-left outa corner relatizzle ta its parentz origin. I aint talkin' bout chicken n' gravy biatch. If
\fIdrawable\fP be a pixmap, tha X coordinizzle be always 0.
.IP \fIy\fP 1i
Da Y coordinizzle of \fIdrawable\fP. If \fIdrawable\fP be a window, tha coordinate
specifies tha upper-left outa corner relatizzle ta its parentz origin. I aint talkin' bout chicken n' gravy biatch. If
\fIdrawable\fP be a pixmap, tha Y coordinizzle be always 0.
.IP \fIwidth\fP 1i
Da width of \fIdrawable\fP.
.IP \fIheight\fP 1i
Da height of \fIdrawable\fP.
.IP \fIborder_width\fP 1i
Da border width (in pixels).
.SH DESCRIPTION
Gets tha current geometry of tha specified drawable (either \fIWindow\fP or \fIPixmap\fP).
.SH RETURN VALUE
Returns a \fIxcb_get_geometry_cookie_t\fP. Errors gotta be handled when callin tha reply function \fIxcb_get_geometry_reply\fP.

If you wanna handle errors up in tha event loop instead, use \fIxcb_get_geometry_unchecked\fP. Right back up in yo muthafuckin ass. See \fBxcb-requests(3)\fP fo' details.
.SH ERRORS
.IP \fIxcb_drawable_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_window_error_t\fP 1i
TODO: reasons?
.SH EXAMPLE
.nf
.sp
/*
 * Displays tha x n' y posizzle of tha given window.
 *
 */
void my_example(xcb_connection *c, xcb_window_t window) {
    xcb_get_geometry_cookie_t cookie;
    xcb_get_geometry_reply_t *reply;

    cookie = xcb_get_geometry(c, window);
    /* ... do other work here if possible ... */
    if ((reply = xcb_get_geometry_reply(c, cookie, NULL))) {
        printf("This window be at %d, %d\\n", reply->x, reply->y);
    }
    free(reply);
}
.fi
.SH SEE ALSO
.BR xcb-requests (3),
.BR xcb-examplez (3),
.BR xwininfo (1)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org fo' erections n' improvements.
