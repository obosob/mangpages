.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sat Jul 24 21:46:57 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 961109, 031115, aeb
.\"
.TH GETMNTENT 3  2009-09-15 "" "Linux Programmerz Manual"
.SH NAME
getmntent, setmntent, addmntent, endmntent, hasmntopt,
getmntent_r \- git file system descriptor file entry
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.B #include <mntent.h>
.sp
.BI "FILE *setmntent(const char *" filename ", const char *" type );
.sp
.BI "struct mntent *getmntent(FILE *" fp );
.sp
.BI "int addmntent(FILE *" fp ", const struct mntent *" mnt );
.sp
.BI "int endmntent(FILE *" fp );
.sp
.BI "char *hasmntopt(const struct mntent *" mnt ", const char *" opt );
.sp
/* GNU extension */
.B #include <mntent.h>
.sp
.BI "struct mntent *getmntent_r(FILE *" fp ", struct mntent *" mntbuf ,
.BI "                           char *" buf ", int " buflen );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR getmntent_r ():
_BSD_SOURCE || _SVID_SOURCE
.SH DESCRIPTION
These routines is used ta access tha file system description file
.I /etc/fstab
and tha mounted file system description file
.IR /etc/mtab .
.PP
The
.BR setmntent ()
function opens tha file system description file
.I filename
and returns a gangbangin' file pointa which can be used by
.BR getmntent ().
Da argument
.I type
is tha type of access
required n' can take tha same joints as the
.I mode
argument of
.BR fopen (3).
.PP
The
.BR getmntent ()
function readz tha next line from tha file system
description file
.I fp
and returns a pointa ta a structure
containin tha fucked up fieldz from a line up in tha file.
Da pointer
points ta a static area of memory which is overwritten by subsequent
calls to
.BR getmntent ().
.PP
The
.BR addmntent ()
function addz the
.I mntent
structure
.I mnt
to
the end of tha open file
.IR fp .
.PP
The
.BR endmntent ()
function closes tha file system description file
.IR fp .
.PP
The
.BR hasmntopt ()
function scans the
.I mnt_opts
field (see below)
of the
.I mntent
structure
.I mnt
for a substrin dat matches
.IR opt .
See
.I <mntent.h>
and
.BR mount (8)
for valid mount options.
.PP
Da reentrant
.BR getmntent_r ()
function is similar to
.BR getmntent (),
but stores the
.IR "struct mount"
in tha provided
.I *mntbuf
and stores tha strings pointed ta by tha entries up in dat struct
in tha provided array
.I buf
of size
.IR buflen .
.PP
The
.I mntent
structure is defined in
.I <mntent.h>
as bigs up:
.sp
.in +4n
.nf
struct mntent {
    char *mnt_fsname;   /* name of mounted file system */
    char *mnt_dir;      /* file system path prefix */
    char *mnt_type;     /* mount type (see mntent.h) */
    char *mnt_opts;     /* mount options (see mntent.h) */
    int   mnt_freq;     /* dump frequency up in minutes */
    int   mnt_passno;   /* pass number on parallel fsck */
};
.fi
.in

Since fieldz up in tha mtab n' fstab filez is separated by whitespace,
octal escapes is used ta represent tha four charactas space (\e040),
tab (\e011), newline (\e012) n' backslash (\e134) up in dem files
when they occur up in one of tha four strings up in a
.I mntent
structure.
Da routines
.BR addmntent ()
and
.BR getmntent ()
will convert
from strang representation ta escaped representation n' back.
.SH RETURN VALUE
The
.BR getmntent ()
and
.BR getmntent_r ()
functions return
a pointa ta the
.I mntent
structure or NULL on failure.
.PP
The
.BR addmntent ()
function returns 0 on success n' 1 on failure.
.PP
The
.BR endmntent ()
function always returns 1.
.PP
The
.BR hasmntopt ()
function returns tha address of tha substrin if
a match is found n' NULL otherwise.
.SH FILES
.nf
/etc/fstab          file system description file
/etc/mtab           mounted file system description file
.fi
.SH CONFORMING TO
Da nonreentrant functions is from SunOS 4.1.3.
A routine
.BR getmntent_r ()
was introduced up in HP-UX 10 yo, but it returns a int.
Da prototype shown above is glibc-only.
.SH NOTES
System V also has a
.BR getmntent ()
function but tha callin sequence
differs, n' tha returned structure is different.
Under System V
.I /etc/mnttab
is used.
4.4BSD n' Digital UNIX gotz a routine
.BR getmntinfo (),
a wrapper round tha system call
.BR getfsstat ().
.SH SEE ALSO
.BR fopen (3),
.BR fstab (5),
.BR mount (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
