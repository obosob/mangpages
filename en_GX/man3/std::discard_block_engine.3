" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::discard_block_engine< _RandomNumberEngine, __p, __r > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef 
.br
_RandomNumberEngine::result_type \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBdiscard_block_engine\fP ()"
.br
.ti -1c
.RI "\fBdiscard_block_engine\fP (const _RandomNumberEngine &__rng)"
.br
.ti -1c
.RI "\fBdiscard_block_engine\fP (_RandomNumberEngine &&__rng)"
.br
.ti -1c
.RI "\fBdiscard_block_engine\fP (\fBresult_type\fP __s)"
.br
.ti -1c
.RI "template<typename _Sseq , typename  = typename std::enable_if<!std::is_same<_Sseq, discard_block_engine>::value		       && !std::is_same<_Sseq, _RandomNumberEngine>::value> ::type> \fBdiscard_block_engine\fP (_Sseq &__q)"
.br
.ti -1c
.RI "const _RandomNumberEngine & \fBbase\fP () const noexcept"
.br
.ti -1c
.RI "void \fBdiscard\fP (unsigned long long __z)"
.br
.ti -1c
.RI "\fBresult_type\fP \fBoperator()\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP (\fBresult_type\fP __s)"
.br
.ti -1c
.RI "template<typename _Sseq > void \fBseed\fP (_Sseq &__q)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBmax\fP ()"
.br
.ti -1c
.RI "static constexpr \fBresult_type\fP \fBmin\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr size_t \fBblock_size\fP"
.br
.ti -1c
.RI "static constexpr size_t \fBused_block\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, 
.br
_Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::discard_block_engine\fP< _RandomNumberEngine1, __p1, __r1 > &__x)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBdiscard_block_engine\fP &__lhs, const \fBdiscard_block_engine\fP &__rhs)"
.br
.ti -1c
.RI "template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, 
.br
_Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::discard_block_engine\fP< _RandomNumberEngine1, __p1, __r1 > &__x)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r>class std::discard_block_engine< _RandomNumberEngine, __p, __r >"
Produces random numbers from some base engine by discardin blockz of data\&.
.PP
0 <= \fC__r\fP <= \fC__p\fP 
.PP
Definizzle at line 854 of file random\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> typedef _RandomNumberEngine::result_type \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBresult_type\fP"
Da type of tha generated random value\&. 
.PP
Definizzle at line 857 of file random\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBdiscard_block_engine\fP ()\fC [inline]\fP"

.PP
Constructs a thugged-out default discard_block_engine engine\&. Da underlyin engine is default constructed as well\&. 
.PP
Definizzle at line 872 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBdiscard_block_engine\fP (const _RandomNumberEngine &__rng)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Copy constructs a gangbangin' finger-lickin' discard_block_engine engine\&. Copies a existin base class random number generator\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__rng\fP An existin (base class) engine object\&. 
.RE
.PP

.PP
Definizzle at line 882 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBdiscard_block_engine\fP (_RandomNumberEngine &&__rng)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Move constructs a gangbangin' finger-lickin' discard_block_engine engine\&. Copies a existin base class random number generator\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__rng\fP An existin (base class) engine object\&. 
.RE
.PP

.PP
Definizzle at line 892 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBdiscard_block_engine\fP (\fBresult_type\fP__s)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Seed constructs a gangbangin' finger-lickin' discard_block_engine engine\&. Constructs tha underlyin generator engine seeded wit \fC__s\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A seed value fo' tha base class engine\&. 
.RE
.PP

.PP
Definizzle at line 902 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> template<typename _Sseq , typename  = typename std::enable_if<!std::is_same<_Sseq, discard_block_engine>::value		       && !std::is_same<_Sseq, _RandomNumberEngine>::value> ::type> \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBdiscard_block_engine\fP (_Sseq &__q)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Generator construct a gangbangin' finger-lickin' discard_block_engine engine\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__q\fP A seed sequence\&. 
.RE
.PP

.PP
Definizzle at line 915 of file random\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> const _RandomNumberEngine& \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::base () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Gets a cold-ass lil const reference ta tha underlyin generator engine object\&. 
.PP
Definizzle at line 959 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> void \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::discard (unsigned long long__z)\fC [inline]\fP"

.PP
Discard a sequence of random numbers\&. 
.PP
Definizzle at line 980 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> static constexpr \fBresult_type\fP \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::max ()\fC [inline]\fP, \fC [static]\fP"

.PP
Gets tha maximum value up in tha generated random number range\&. 
.PP
Definizzle at line 973 of file random\&.h\&.
.PP
References std::max()\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> static constexpr \fBresult_type\fP \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::min ()\fC [inline]\fP, \fC [static]\fP"

.PP
Gets tha minimum value up in tha generated random number range\&. 
.PP
Definizzle at line 966 of file random\&.h\&.
.PP
References std::min()\&.
.SS "template<typename _RandomNumberEngine , size_t __p, size_t __r> \fBdiscard_block_engine\fP< _RandomNumberEngine, __p, __r >::\fBresult_type\fP \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::operator() ()"

.PP
Gets tha next value up in tha generated random number sequence\&. 
.PP
Definizzle at line 688 of file bits/random\&.tcc\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> void \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::seed ()\fC [inline]\fP"

.PP
Reseedz tha discard_block_engine object wit tha default seed fo' tha underlyin base class generator engine\&. 
.PP
Definizzle at line 924 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> void \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::seed (\fBresult_type\fP__s)\fC [inline]\fP"

.PP
Reseedz tha discard_block_engine object wit tha default seed fo' tha underlyin base class generator engine\&. 
.PP
Definizzle at line 935 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> template<typename _Sseq > void \fBstd::discard_block_engine\fP< _RandomNumberEngine, __p, __r >::seed (_Sseq &__q)\fC [inline]\fP"

.PP
Reseedz tha discard_block_engine object wit tha given seed sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__q\fP A seed generator function\&. 
.RE
.PP

.PP
Definizzle at line 948 of file random\&.h\&.
.SH "Playas And Related Function Documentation"
.PP 
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP<_CharT, _Traits>& operator<< (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBstd::discard_block_engine\fP< _RandomNumberEngine1, __p1, __r1 > &__x)\fC [friend]\fP"

.PP
Inserts tha current state of a gangbangin' finger-lickin' discard_block_engine random number generator engine \fC__x\fP tha fuck into tha output stream \fC__os\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__os\fP An output stream\&. 
.br
\fI__x\fP A discard_block_engine random number generator engine\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da output stream wit tha state of \fC__x\fP banged or up in a error state\&. 
.RE
.PP

.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> bool operator== (const \fBdiscard_block_engine\fP< _RandomNumberEngine, __p, __r > &__lhs, const \fBdiscard_block_engine\fP< _RandomNumberEngine, __p, __r > &__rhs)\fC [friend]\fP"

.PP
Compares two discard_block_engine random number generator objectz of tha same type fo' equality\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP A discard_block_engine random number generator object\&. 
.br
\fI__rhs\fP Another discard_block_engine random number generator object\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if tha infinite sequencez of generated joints would be equal, false otherwise\&. 
.RE
.PP

.PP
Definizzle at line 1004 of file random\&.h\&.
.SS "template<typename _RandomNumberEngine, size_t __p, size_t __r> template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP<_CharT, _Traits>& operator>> (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBstd::discard_block_engine\fP< _RandomNumberEngine1, __p1, __r1 > &__x)\fC [friend]\fP"

.PP
Extracts tha current state of a % subtract_with_carry_engine random number generator engine \fC__x\fP from tha input stream \fC__is\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fI__is\fP An input stream\&. 
.br
\fI__x\fP A discard_block_engine random number generator engine\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Da input stream wit tha state of \fC__x\fP extracted or up in a error state\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
