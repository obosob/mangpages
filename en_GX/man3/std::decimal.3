.TH "std::decimal" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::decimal \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBdecimal128\fP"
.br
.ti -1c
.RI "class \fBdecimal32\fP"
.br
.ti -1c
.RI "class \fBdecimal64\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBdecimal128_to_double\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal128_to_float\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal128_to_long_double\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal128_to_long_long\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "double \fBdecimal32_to_double\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal32_to_float\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal32_to_long_double\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal32_to_long_long\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "double \fBdecimal64_to_double\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal64_to_float\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal64_to_long_double\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal64_to_long_long\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "double \fBdecimal_to_double\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "double \fBdecimal_to_double\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "double \fBdecimal_to_double\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal_to_float\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal_to_float\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "float \fBdecimal_to_float\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal_to_long_double\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal_to_long_double\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "long double \fBdecimal_to_long_double\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal_to_long_long\fP (\fBdecimal32\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal_to_long_long\fP (\fBdecimal64\fP __d)"
.br
.ti -1c
.RI "long long \fBdecimal_to_long_long\fP (\fBdecimal128\fP __d)"
.br
.ti -1c
.RI "static \fBdecimal128\fP \fBmake_decimal128\fP (long long __coeff, int __exp)"
.br
.ti -1c
.RI "static \fBdecimal128\fP \fBmake_decimal128\fP (unsigned long long __coeff, int __exp)"
.br
.ti -1c
.RI "static \fBdecimal32\fP \fBmake_decimal32\fP (long long __coeff, int __exp)"
.br
.ti -1c
.RI "static \fBdecimal32\fP \fBmake_decimal32\fP (unsigned long long __coeff, int __exp)"
.br
.ti -1c
.RI "static \fBdecimal64\fP \fBmake_decimal64\fP (long long __coeff, int __exp)"
.br
.ti -1c
.RI "static \fBdecimal64\fP \fBmake_decimal64\fP (unsigned long long __coeff, int __exp)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator*\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator*\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator*\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator+\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator+\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator+\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator-\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator-\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator-\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal32\fP \fBoperator/\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal64\fP \fBoperator/\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "\fBdecimal128\fP \fBoperator/\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (int __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal32\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal64\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (int __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long long __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, unsigned long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, \fBdecimal64\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, \fBdecimal32\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, unsigned int __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned int __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (\fBdecimal128\fP __lhs, unsigned long long __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (long __lhs, \fBdecimal128\fP __rhs)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (unsigned long long __lhs, \fBdecimal128\fP __rhs)"
.br
.in -1c
.SH "Detailed Description"
.PP 
ISO/IEC TR 24733 Decimal floating-point arithmetic\&. 
.SH "Function Documentation"
.PP 
.SS "long long std::decimal::decimal32_to_long_long (decimal32__d)"

.PP
Non-conformin extension: Conversion ta integral type\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
