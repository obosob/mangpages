'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbFreeDeviceInfo 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbFreeDeviceInfo \- Jacked a XkbDeviceInfoRec structure
.SH SYNOPSIS
.HP
.B void XkbFreeDeviceInfo
.BI "(\^XkbDeviceInfoPtr " "device_info" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "Bool " "free_all" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- device_info
pointa ta XkbDeviceInfoRec up in which ta free items
.TP
.I \- which
mask of componentz of device_info ta free
.TP
.I \- free_all
True => free every last muthafuckin thang, includin device_info
.SH DESCRIPTION
.LP
If 
.I free_all 
is True, tha 
.I XkbFreeDeviceInfo 
frees all componentz of 
.I device_info 
and tha XkbDeviceInfoRec structure pointed ta by 
.I device_info 
itself. If 
.I free_all 
is False, tha value of 
.I which 
determines which subcomponents is freed. Y'all KNOW dat shit, muthafucka! 
.I which 
is a inclusive OR of one or mo' of tha joints from Table 1. If 
.I which 
gotz nuff XkbXI_ButtonActionsMask, all button actions associated wit 
.I device_info 
are freed, 
.I device_info->btn_acts 
is set ta NULL, n' 
.I device_info->num_btns 
is set ta zero. If 
.I which 
gotz nuff all bits up in XkbXI_IndicatorsMask, all XkbDeviceLedInfoRec structures associated wit 
.I device_info 
are freed, 
.I device_info->ledz 
is set ta NULL, n' 
.I device_info->sz_ledz 
and 
.I device_info->num_ledz 
are set ta zero. If 
.I which 
gotz nuff XkbXI_IndicatorMapsMask, all indicator maps associated wit 
.I device_info 
are cleared yo, but tha number of LEDs n' tha ledz structures theyselves is preserved. Y'all KNOW dat shit, muthafucka! If 
.I which 
gotz nuff XkbXI_IndicatorNamesMask, all indicator names associated with
.I device_info 
are cleared yo, but tha number of LEDs n' tha ledz structures theyselves is preserved. Y'all KNOW dat shit, muthafucka! If 
.I which 
gotz nuff XkbXI_IndicatorStateMask, tha indicator state associated wit the
.I device_info 
ledz is set ta zeros but tha number of LEDs n' tha ledz structures theyselves is preserved.
.bp
.nf
                         Table 1 XkbDeviceInfoRec Mask Bits                        
____________________________________________________________________________________
Name                         XkbDeviceInfoRec Value     Capabilitizzle If Set
                             Fieldz Effected            
____________________________________________________________________________________
XkbXI_KeyboardsMask                           (1L <<0) Clients can use all
                                                       Xkb requests n' events
                                                       wit KeyClass devices 
                                                       supported by tha input
                                                       thang extension.

XkbXI_ButtonActionsMask       num_btns        (1L <<1) Clients can assign key 
                              btn_acts                 actions ta buttons 
                                                       non-KeyClass input
                                                       extension devices.
                           
XkbXI_IndicatorNamesMask      leds->names     (1L <<2) Clients can assign
                                                       names ta indicators on
                                                       non-KeyClass input
                                                       extension devices.
                                                             
XkbXI_IndicatorMapsMask       leds->maps      (1L <<3) Clients can assign
                                                       indicator maps to
                                                       indicators on 
                                                       non-KeyClass input
                                                       extension devices.

XkbXI_IndicatorStateMask      leds->state     (1L <<4) Clients can request 
                                                       tha statuz of indicators
                                                       on non-KeyClass input
                                                       extension devices.

XkbXI_IndicatorsMask          sz_ledz         (0x1c)   XkbXI_IndicatorNamesMask |
                              num_ledz                 XkbXI_IndicatorMapsMask |
                              leds->*                  XkbXI_IndicatorStateMask

XkbXI_UnsupportedFeaturesMask unsupported     (1L <<15)

XkbXI_AllDeviceFeaturesMask   Those selected  (0x1e)   XkbXI_IndicatorsMask |
                              by Value Column          XkbSI_ButtonActionsMask
                              masks 

XkbXI_AllFeaturesMask         Those selected  (0x1f)   XkbSI_AllDeviceFeaturesMask |
                              by Value Column          XkbSI_KeyboardsMask
                              masks

XkbXI_AllDetailsMask          Those selected  (0x801f) XkbXI_AllFeaturesMask |
                              by Value column          XkbXI_UnsupportedFeaturesMask
                              masks
.fi
.SH STRUCTURES
.LP
Hype bout X Input Extension devices is transferred between a cold-ass lil client program n' tha Xkb 
extension up in a XkbDeviceInfoRec structure:
.nf

typedef struct {
    char *               name;          /\(** name fo' thang */
    Atom                 type;          /\(** name fo' class of devices */
    unsigned short       device_spec;   /\(** thang of interest */
    Bool                 has_own_state; /\(** True=>this thang has its own state */
    unsigned short       supported;     /\(** bits indicatin supported capabilitizzles */
    unsigned short       unsupported;   /\(** bits indicatin unsupported capabilitizzles */
    unsigned short       num_btns;      /\(** number of entries up in btn_acts */
    XkbAction *          btn_acts;      /\(** button actions */
    unsigned short       sz_leds;       /\(** total number of entries up in LEDs vector */
    unsigned short       num_leds;      /\(** number of valid entries up in LEDs vector */
    unsigned short       dflt_kbd_fb;   /\(** input extension ID of default (core kbd) indicator */
    unsigned short       dflt_led_fb;   /\(** input extension ID of default indicator feedback */
    XkbDeviceLedInfoPtr  leds;          /\(** LED descriptions */
} XkbDeviceInfoRec, *XkbDeviceInfoPtr;
    
typedef struct {
    unsigned short      led_class;        /\(** class fo' dis LED device*/
    unsigned short      led_id;           /\(** ID fo' dis LED thang */
    unsigned int        phys_indicators;  /\(** bits fo' which LEDs physically present */
    unsigned int        maps_present;     /\(** bits fo' which LEDs have maps up in maps */
    unsigned int        names_present;    /\(** bits fo' which LEDs is up in names */
    unsigned int        state;            /\(** 1 bit => correspondin LED is on */
    Atom                names[XkbNumIndicators];   /\(** names fo' LEDs */
    XkbIndicatorMapRec  maps;             /\(** indicator maps fo' each LED */
} XkbDeviceLedInfoRec, *XkbDeviceLedInfoPtr;

.fi    
