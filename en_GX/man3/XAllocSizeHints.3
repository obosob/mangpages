'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface, \fRO'Reilly n' Associates, 
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
'\" t
.TH XAllocSizeHints 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XAllocSizeHints, XSetWMNormalHints, XGetWMNormalHints, XSetWMSizeHints, XGetWMSizeHints, XSizeHints \- allocate size hints structure n' set or read a windowz WM_NORMAL_HINTS property
.SH SYNTAX
.HP
XSizeHints *XAllocSizeHints\^(void\^);
.HP
void XSetWMNormalHints\^(\^Display *\fIdisplay\fP, Window \fIw\fP, XSizeHints *\fIhints\fP\^);
.HP
Status XGetWMNormalHints\^(\^Display *\fIdisplay\fP, Window \fIw\fP,
XSizeHints *\fIhints_return\fP, long *\fIsupplied_return\fP\^);
.HP
void XSetWMSizeHints\^(\^Display *\fIdisplay\fP, Window \fIw\fP, XSizeHints
*\fIhints\fP, Atom \fIproperty\fP\^);
.HP
Status XGetWMSizeHints\^(\^Display *\fIdisplay\fP, Window \fIw\fP, XSizeHints
*\fIhints_return\fP, long *\fIsupplied_return\fP, Atom \fIproperty\fP\^);
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIhints\fP 1i
Specifies tha size hints fo' tha window up in its aiiight state.
.IP \fIhints\fP 1i
Specifies the
.ZN XSizeHints
structure ta be used.
.IP \fIhints_return\fP 1i
Returns tha size hints fo' tha window up in its aiiight state.
.IP \fIproperty\fP 1i
Specifies tha property name.
.IP \fIsupplied_return\fP 1i
Returns tha hints dat was supplied by tha user.
.IP \fIw\fP 1i
Specifies tha window.
.SH DESCRIPTION
The
.ZN XAllocSizeHints
function allocates n' returns a pointa ta a
.ZN XSizeHints
structure.
Note dat all fieldz up in the
.ZN XSizeHints
structure is initially set ta zero.
If insufficient memory be available, 
.ZN XAllocSizeHints
returns NULL.
To free tha memory allocated ta dis structure,
use
.ZN XJacked .
.LP
Da 
.ZN XSetWMNormalHints 
function replaces tha size hints fo' tha WM_NORMAL_HINTS property 
on tha specified window.
If tha property do not already exist,
.ZN XSetWMNormalHints
sets tha size hints fo' tha WM_NORMAL_HINTS property on tha specified window.
Da property is stored wit a type of WM_SIZE_HINTS n' a gangbangin' format of 32.
.LP
.ZN XSetWMNormalHints
can generate
.ZN BadAlloc
and
.ZN BadWindow
errors.
.LP
Da 
.ZN XGetWMNormalHints 
function returns tha size hints stored up in tha WM_NORMAL_HINTS property 
on tha specified window.
If tha property iz of type WM_SIZE_HINTS, iz of format 32,
and is long enough ta contain either a oldschool (pre-ICCCM) 
or freshly smoked up size hints structure, 
.ZN XGetWMNormalHints
sets tha various fieldz of tha 
.ZN XSizeHints
structure, sets tha supplied_return argument ta tha list of fieldz 
that was supplied by tha user (whether or not they contained defined joints),
and returns a nonzero status.
Otherwise, it returns a zero status.
.LP
If 
.ZN XGetWMNormalHints
returns successfully n' a pre-ICCCM size hints property is read, 
the supplied_return argument will contain tha followin bits:
.LP
.Ds
(USPosition|USSize|PPosition|PSize|PMinSize|
 PMaxSize|PResizeInc|PAspect)
.De
.LP
If tha property is big-ass enough ta contain tha base size 
and window gravitizzle fieldz as well, 
the supplied_return argument will also contain tha followin bits:
.LP
.Ds
PBaseSize|PWinGravity
.De
.LP
.ZN XGetWMNormalHints
can generate a
PN BadWindow
error.
.LP
Da 
.ZN XSetWMSizeHints 
function replaces tha size hints fo' tha specified property 
on tha named window.
If tha specified property do not already exist,
.ZN XSetWMSizeHints
sets tha size hints fo' tha specified property
on tha named window.
Da property is stored wit a type of WM_SIZE_HINTS n' a gangbangin' format of 32.
To set a windowz aiiight size hints, 
you can use tha 
.ZN XSetWMNormalHints
function.
.LP
.ZN XSetWMSizeHints
can generate
.ZN BadAlloc ,
.ZN BadAtom ,
and
.ZN BadWindow
errors.
.LP
Da 
.ZN XGetWMSizeHints
function returns tha size hints stored up in tha specified property 
on tha named window.
If tha property iz of type WM_SIZE_HINTS, iz of format 32, 
and is long enough ta contain either a oldschool (pre-ICCCM) 
or freshly smoked up size hints structure, 
.ZN XGetWMSizeHints
sets tha various fieldz of tha 
.ZN XSizeHints
structure, sets tha supplied_return argument ta the
list of fieldz dat was supplied by tha user 
(whether or not they contained defined joints), 
and returns a nonzero status.
Otherwise, it returns a zero status.
To git a windowz aiiight size hints, 
you can use tha 
.ZN XGetWMNormalHints 
function.
.LP
If 
.ZN XGetWMSizeHints
returns successfully n' a pre-ICCCM size hints property is read, 
the supplied_return argument will contain tha followin bits:
.LP
.Ds
(USPosition|USSize|PPosition|PSize|PMinSize|
 PMaxSize|PResizeInc|PAspect)
.De
.LP
If tha property is big-ass enough ta contain tha base size 
and window gravitizzle fieldz as well, 
the supplied_return argument will also contain tha followin bits:
.LP
.Ds
PBaseSize|PWinGravity
.De
.LP
.ZN XGetWMSizeHints
can generate
.ZN BadAtom
and
.ZN BadWindow
errors.
.SH PROPERTIES
.TP 1i
\s-1WM_NORMAL_HINTS\s+1
Size hints fo' a window up in its aiiight state.
Da C type of dis property is
.ZN XSizeHints .
.SH STRUCTURES
The
.ZN XSizeHints
structure gotz nuff:
.LP
/\&* Size hints mask bits */
.TS
lw(.5i) lw(1.1i) lw(1.5i) lw(3.1i).
T{
\&#define
T}	T{
.ZN USPosition
T}	T{
(1L << 0)
T}	T{
/\&* user specified x, y */
T}
T{
\&#define
T}	T{
.ZN USSize
T}	T{
(1L << 1)
T}	T{
/\&* user specified width, height */
T}
T{
\&#define
T}	T{
.ZN PPosition
T}	T{
(1L << 2)
T}	T{
/\&* program specified posizzle */
T}
T{
\&#define
T}	T{
.ZN PSize
T}	T{
(1L << 3)
T}	T{
/\&* program specified size */
T}
T{
\&#define
T}	T{
.ZN PMinSize
T}	T{
(1L << 4)
T}	T{
/\&* program specified minimum size */
T}
T{
\&#define
T}	T{
.ZN PMaxSize
T}	T{
(1L << 5)
T}	T{
/\&* program specified maximum size */
T}
T{
\&#define
T}	T{
.ZN PResizeInc
T}	T{
(1L << 6)
T}	T{
/\&* program specified resize increments */
T}
T{
\&#define
T}	T{
.ZN PAspect
T}	T{
(1L << 7)
T}	T{
/\&* program specified min n' max aspect ratios */
T}
T{
\&#define
T}	T{
.ZN PBaseSize
T}	T{
(1L << 8)
T}
T{
\&#define
T}	T{
.ZN PWinGravity
T}	T{
(1L << 9)
T}
T{
\&#define
T}	T{
.ZN PAllHints
T}	T{
(PPosition|PSize|
.br
PMinSize|PMaxSize|
.br
PResizeInc|PAspect)
T}	T{
T}
.TE
.IN "XSizeHints" "" "@DEF@"
.Ds 0
/\&* Values */

typedef struct {
        long flags;     /\&* marks which fieldz up in dis structure is defined */
        int x, y;       /\&* Obsolete */
        int width, height;      /\&* Obsolete */
        int min_width, min_height;
        int max_width, max_height;
        int width_inc, height_inc;
        struct {
               int x;   /\&* numerator */
               int y;   /\&* denominator */
        } min_aspect, max_aspect;
        int base_width, base_height;
        int win_gravity;
        /\&* dis structure may be extended up in tha future */
} XSizeHints;
.De
.LP
Da x, y, width, n' height thugz is now obsolete
and is left solely fo' compatibilitizzle reasons.
Da min_width n' min_height thugz specify the
minimum window size dat still allows tha application ta be useful.
Da max_width n' max_height thugz specify tha maximum window size.
Da width_inc n' height_inc thugz define a arithmetic progression of
sizes (minimum ta maximum) tha fuck into which tha window prefers ta be resized.
Da min_aspect n' max_aspect thugz is expressed
as ratioz of x n' y, 
and they allow a application ta specify tha range of aspect
ratios it prefers.
Da base_width n' base_height thugz define tha desired size of tha window.
Da window manager will interpret tha posizzle of tha window 
and its border width ta posizzle tha deal wit tha outa rectangle 
of tha overall window specified by tha win_gravitizzle member.
Da outa rectangle of tha window includes any bordaz or decorations
supplied by tha window manager.
In other lyrics,
if tha window manager decides ta place tha window where tha client asked,
the posizzle on tha parent windowz border named by tha win_gravitizzle 
will be placed where tha client window would done been placed 
in tha absence of a window manager.
.LP
Note dat use of the
.ZN PAllHints
macro is highly discouraged.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
Da server failed ta allocate tha axed resource or server memory.
.TP 1i
.ZN BadAtom
A value fo' a Atom argument do not name a thugged-out defined Atom.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllocClassHint(3),
XAllocIconSize(3),
XAllocWMHints(3),
XFree(3),
XSetCommand(3),
XSetTransientForHint(3),
XSetTextProperty(3),
XSetWMClientMachine(3),
XSetWMColormapWindows(3),
XSetWMIconName(3),
XSetWMName(3),
XSetWMProperties(3),
XSetWMProtocols(3),
XStringListToTextProperty(3)
.br
\fI\*(xL\fP
