.\" Copyright 2002 Walta Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" This was done wit tha help of tha glibc manual.
.\"
.\" 2004-10-31, aeb, erected
.TH FPCLASSIFY 3  2010-09-20 "" "Linux Programmerz Manual"
.SH NAME
fpclassify, isfinite, isnormal, isnan, isinf \- floating-point
classification macros
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "int fpclassify(" x );
.sp
.BI "int isfinite(" x );
.sp
.BI "int isnormal(" x );
.sp
.BI "int isnan(" x );
.sp
.BI "int isinf(" x );
.fi
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.\" I aint straight-up grokked tha source ta determine tha FTM requirements;
.\" up in part, tha followin has been tested by experiment.
.ad l
.BR fpclassify (),
.BR isfinite (),
.BR isnormal ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.BR isnan ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.BR isinf ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.SH DESCRIPTION
Floatin point numbers can have special joints, such as
infinite or NaN.
With tha macro
.BI fpclassify( x )
you can smoke up what tha fuck type
.I x
is.
Da macro takes any floating-point expression as argument.
Da result is one of tha followin joints:
.TP 14
.B FP_NAN
.I x
is "Not a Number".
.TP
.B FP_INFINITE
.I x
is either positizzle infinitizzle or wack infinity.
.TP
.B FP_ZERO
.I x
is zero.
.TP
.B FP_SUBNORMAL
.I x
is too lil' small-ass ta be represented up in normalized format.
.TP
.B FP_NORMAL
if not a god damn thang of tha above is erect then it must be a
normal floating-point number.
.LP
Da other macros provide a gangbangin' finger-lickin' dirty-ass short answer ta some standard thangs.
.TP 14
.BI isfinite( x )
returns a nonzero value if
.br
(fpclassify(x) != FP_NAN && fpclassify(x) != FP_INFINITE)
.TP
.BI isnormal( x )
returns a nonzero value if
(fpclassify(x) == FP_NORMAL)
.TP
.BI isnan( x )
returns a nonzero value if
(fpclassify(x) == FP_NAN)
.TP
.BI isinf( x )
returns 1 if
.I x
is positizzle infinity, n' \-1 if
.I x
is wack infinity.
.SH CONFORMING TO
C99, POSIX.1.

For
.BR isinf (),
the standardz merely say dat tha return value is nonzero
if n' only if tha argument has a infinite value.
.SH NOTES
In glibc 2.01 n' earlier,
.BR isinf ()
returns a nonzero value (actually: 1) if
.I x
is positizzle infinitizzle or wack infinity.
(This be all dat C99 requires.)
.SH SEE ALSO
.BR finite (3),
.BR INFINITY (3),
.BR isgreata (3),
.BR signbit (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
