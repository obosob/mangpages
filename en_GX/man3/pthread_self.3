.\" Copyright (c) 2008 Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_SELF 3 2008-10-24 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_self \- obtain ID of tha callin thread
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.B pthread_t pthread_self(void);
.sp
Compile n' link wit \fI\-pthread\fP.
.fi
.SH DESCRIPTION
The
.BR pthread_self ()
function returns tha ID of tha callin thread.
This is tha same ol' dirty value dat is returned in
.IR *thread
in the
.BR pthread_create (3)
call dat pimped dis thread.
.SH RETURN VALUE
This function always succeeds, returnin tha callin threadz ID.
.SH ERRORS
This function always succeeds.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
POSIX.1 allows a implementation wide freedom up in choosing
the type used ta represent a thread ID;
for example, representation rockin either a arithmetic type or
a structure is permitted.
Therefore, variablez of type
.I pthread_t
can't portably be compared rockin tha C equalitizzle operator (\fB==\fP);
use
.BR pthread_equal (3)
instead.

Thread identifiers should be considered opaque:
any attempt ta bust a thread ID other than up in pthreadz calls
is nonportable n' can lead ta unspecified thangs up in dis biatch.

Thread IDs is guaranteed ta be unique only within a process.
A thread ID may be reused afta a terminated thread has been joined,
or a thugged-out detached thread has terminated.

Da thread ID returned by
.BR pthread_self ()
is not tha same thang as tha kernel thread ID returned by a cold-ass lil call to
.BR gettid (2).
.SH SEE ALSO
.BR pthread_create (3),
.BR pthread_equal (3),
.BR pthreadz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
