.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XDrawText 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XDrawText, XDrawText16, XTextItem, XTextItem16 \- draw polytext text n' text drawin structures
.SH SYNTAX
.HP
int XDrawText\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
int \fIx\fP\^, int \fIy\fP\^, XTextItem *\fIitems\fP\^, int \fInitems\fP\^); 
.HP
int XDrawText16\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, int \fIx\fP\^, int \fIy\fP\^, XTextItem16 *\fIitems\fP\^, int
\fInitems\fP\^); 
.SH ARGUMENTS
.IP \fId\fP 1i
Specifies tha drawable. 
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fIitems\fP 1i
Specifies a array of text items.
.IP \fInitems\fP 1i
Specifies tha number of text shit up in tha array.
.ds Xy , which is relatizzle ta tha origin of tha specified drawable \
and define tha origin of tha straight-up original gangsta character
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
The
.ZN XDrawText16
function is similar to
.ZN XDrawText 
except dat it uses 2-byte or 16-bit characters.
Both functions allow complex spacin n' font shifts between counted strings.
.LP
Each text item is processed up in turn.
A font member other than 
.ZN None
in a item causes tha font ta be stored up in tha GC
and used fo' subsequent text.  
A text element delta specifies a additionizzle chizzle
in tha posizzle along tha x axis before tha strang is drawn. I aint talkin' bout chicken n' gravy biatch. 
Da delta be always added ta tha characta origin
and aint dependent on any characteristics of tha font.
Each characta image, as defined by tha font up in tha GC, is treated as an
additionizzle mask fo' a gangbangin' fill operation on tha drawable.
Da drawable is modified only where tha font characta has a lil' bit set ta 1.
If a text item generates a
.ZN BadFont
error, tha previous text shit may done been drawn.
.LP
For fonts defined wit linear indexin rather than 2-byte matrix indexing,
each 
.ZN XChar2b
structure is interpreted as a 16-bit number wit byte1 as tha 
most dope byte.
.LP
Both functions use these GC components:
function, plane-mask, fill-style, font, subwindow-mode, 
clip-x-origin, clip-y-origin, n' clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
and tile-stipple-y-origin.
.LP
.ZN XDrawText
and
.ZN XDrawText16
can generate
.ZN BadDrawable ,
.ZN BadFont ,
.ZN BadGC ,
and
.ZN BadMatch 
errors.
.SH STRUCTURES
The
.ZN XTextItem
and
.ZN XTextItem16
structures contain:
.LP
.Ds 0
typedef struct {
        char *chars;    /\&* pointa ta strang */
        int nchars;     /\&* number of charactas */
        int delta;      /\&* delta between strings */
        Font font;      /\&* Font ta print it in, None don't chizzle */
} XTextItem;
.De
.LP
.Ds 0
typedef struct {
        XChar2b *chars; /\&* pointa ta two-byte charactas */
        int nchars;     /\&* number of charactas */
        int delta;      /\&* delta between strings */
        Font font;      /\&* font ta print it in, None don't chizzle */
} XTextItem16;
.De
.LP
If tha font member is not
.ZN None ,
the font is chizzled before printin n' also is stored up in tha GC.
If a error was generated durin text drawing,
the previous shit may done been drawn.
Da baseline of tha charactas is drawn startin all up in tha x n' y
coordinates dat you pass up in tha text drawin functions.
.LP
For example, consider tha background rectangle drawn by
.ZN XDrawImageStrin .
If you want tha upper-left corner of tha background rectangle
to be at pixel coordinizzle (x,y), pass tha (x,y + ascent)
as tha baseline origin coordinates ta tha text functions.
Da ascent is tha font ascent, as given up in the
.ZN XFontStruct
structure.
If you want tha lower-left corner of tha background rectangle
to be at pixel coordinizzle (x,y), pass tha (x,y \- descent + 1)
as tha baseline origin coordinates ta tha text functions.
Da descent is tha font descent, as given up in the
.ZN XFontStruct
structure.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadFont
A value fo' a Font or GContext argument do not name a thugged-out defined Font.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.SH "SEE ALSO"
XDrawImageString(3),
XDrawString(3),
XLoadFont(3)
.br
\fI\*(xL\fP
