
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Text fragments inspired by Martin Schulze <joey@infodrom.org>.
.\"
.TH ASPRINTF 3 2013-06-21 "GNU" "Linux Programmerz Manual"
.SH NAME
asprintf, vasprintf \- print ta allocated string
.SH SYNOPSIS
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.br
.B #include <stdio.h>
.sp
.BI "int asprintf(char **" strp ", const char *" fmt ", ...);"
.sp
.BI "int vasprintf(char **" strp ", const char *" fmt ", va_list " ap );
.SH DESCRIPTION
Da functions
.BR asprintf ()
and
.BR vasprintf ()
are analogs of
.BR sprintf (3)
and
.BR vsprintf (3),
except dat they allocate a strang big-ass enough ta hold tha output
includin tha terminatin null byte (\(aq\\0\(aq),
and return a pointa ta it via tha straight-up original gangsta argument.
This pointa should be passed to
.BR free (3)
to release tha allocated storage when it is no longer needed.
.SH RETURN VALUE
When successful, these functions return tha number of bytes printed,
just like
.BR sprintf (3).
If memory allocation wasn't possible, or some other error occurs,
these functions will return \-1, n' tha contents of
.I strp
is undefined.
.SH CONFORMING TO
These functions is GNU extensions, not up in C or POSIX.
They is also available under *BSD.
Da FreeBSD implementation sets
.I strp
to NULL on error.
.SH SEE ALSO
.BR free (3),
.BR malloc (3),
.BR printf (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
