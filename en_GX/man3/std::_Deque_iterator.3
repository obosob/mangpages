" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::_Deque_iterator< _Tp, _Ref, _Ptr > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp ** \fB_Map_pointer\fP"
.br
.ti -1c
.RI "typedef \fB_Deque_iterator\fP \fB_Self\fP"
.br
.ti -1c
.RI "typedef \fB_Deque_iterator\fP< _Tp, 
.br
const _Tp &, const _Tp * > \fBconst_iterator\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fB_Deque_iterator\fP< _Tp, 
.br
_Tp &, _Tp * > \fBiterator\fP"
.br
.ti -1c
.RI "typedef 
.br
\fBstd::random_access_iterator_tag\fP \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef _Ptr \fBpointer\fP"
.br
.ti -1c
.RI "typedef _Ref \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_Deque_iterator\fP (_Tp *__x, _Map_pointa __y)"
.br
.ti -1c
.RI "\fB_Deque_iterator\fP (const \fBiterator\fP &__x)"
.br
.ti -1c
.RI "void \fB_M_set_node\fP (_Map_pointa __new_node)"
.br
.ti -1c
.RI "reference \fBoperator*\fP () const "
.br
.ti -1c
.RI "\fB_Self\fP \fBoperator+\fP (difference_type __n) const "
.br
.ti -1c
.RI "\fB_Self\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fB_Self\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fB_Self\fP & \fBoperator+=\fP (difference_type __n)"
.br
.ti -1c
.RI "\fB_Self\fP \fBoperator-\fP (difference_type __n) const "
.br
.ti -1c
.RI "\fB_Self\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fB_Self\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "\fB_Self\fP & \fBoperator-=\fP (difference_type __n)"
.br
.ti -1c
.RI "pointa \fBoperator->\fP () const "
.br
.ti -1c
.RI "reference \fBoperator[]\fP (difference_type __n) const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static size_t \fB_S_buffer_size\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "_Tp * \fB_M_cur\fP"
.br
.ti -1c
.RI "_Tp * \fB_M_first\fP"
.br
.ti -1c
.RI "_Tp * \fB_M_last\fP"
.br
.ti -1c
.RI "_Map_pointa \fB_M_node\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Ref, typename _Ptr>struct std::_Deque_iterator< _Tp, _Ref, _Ptr >"
A deque::iterator\&. 

Quite a lil' bit of intelligence here\&. Much of tha functionalitizzle of deque is straight-up passed off ta dis class\& fo' realz. A deque holdz two of these internally, markin its valid range\& fo' realz. Access ta elements is done as offsetz of either of dem two, relyin on operator overloadin up in dis class\&.
.PP
All tha functions is op overloadz except fo' _M_set_node\&. 
.PP
Definizzle at line 106 of file stl_deque\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Tp, typename _Ref, typename _Ptr> void \fBstd::_Deque_iterator\fP< _Tp, _Ref, _Ptr >::_M_set_node (_Map_pointer__new_node)\fC [inline]\fP"
Prepares ta traverse new_node\&. Right back up in yo muthafuckin ass. Sets every last muthafuckin thang except _M_cur, which should therefore be set by tha calla immediately afterwards, based on _M_first n' _M_last\&. 
.PP
Definizzle at line 234 of file stl_deque\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
