.TH PCRE_GET_STRINGNUMBER 3 "24 June 2012" "PCRE 8.30"
.SH NAME
PCRE - Perl-compatible regular expressions
.SH SYNOPSIS
.rs
.sp
.B #include <pcre.h>
.PP
.SM
.B int pcre_get_stringnumber(const pcre *\fIcode\fP,
.ti +5n
.B const char *\fIname\fP);
.PP
.B int pcre16_get_stringnumber(const pcre16 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR16 \fIname\fP);
.PP
.B int pcre32_get_stringnumber(const pcre32 *\fIcode\fP,
.ti +5n
.B PCRE_SPTR32 \fIname\fP);
.
.SH DESCRIPTION
.rs
.sp
This convenience function findz tha number of a named substrin capturing
parenthesis up in a cold-ass lil compiled pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. Its arguments are:
.sp
  \fIcode\fP    Compiled regular expression
  \fIname\fP    Name whose number is required
.sp
Da yield of tha function is tha number of tha parenthesis if tha name is
found, or PCRE_ERROR_NOSUBSTRING otherwise. When duplicate names is allowed
(PCRE_DUPNAMES is set), it aint defined which of tha numbers is returned by
\fBpcre[16|32]_get_stringnumber()\fP. Yo ass can obtain tha complete list by calling
\fBpcre[16|32]_get_stringtable_entries()\fP.
.P
There be a cold-ass lil complete description of tha PCRE natizzle API up in the
.\" HREF
\fBpcreapi\fP
.\"
page n' a thugged-out description of tha POSIX API up in the
.\" HREF
\fBpcreposix\fP
.\"
page.
