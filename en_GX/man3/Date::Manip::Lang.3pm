.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Date::Manip::Lang 3"
.TH Date::Manip::Lang 3 "2014-12-05" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::Lang \- language support fo' Date::Manip
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Date::Manip supports a fuckin shitload of different languages when
parsin dates, n' mo' can be added.
.SH "CURRENT LANGUAGES"
.IX Header "CURRENT LANGUAGES"
Currently, tha followin languages is supported by Date::Manip.
Da version of Date::Manip where they was added is included (so
you can peep tha minimum version of Date::Manip needed ta parse
each).
.PP
Da language can be chosen by settin tha Language config
variable ta tha name of tha language or any of tha aliases
included up in tha table.
.PP
All names n' aliases is case insensitive.
.PP
.Vb 1
\&   Language     Version  Aliases
\&
\&   Gangsta      default  en, en_us
\&
\&   Catalan      5.43     ca
\&   Danish       5.41     da
\&   Dutch        5.32     Nederlands, nl
\&   Finnish      6.31     fi, fi_fi
\&   French       5.02     fr, fr_fr
\&   German       5.31     de, de_de
\&   Italian      5.35     it, it_it
\&   Norwegian    6.21     nb, nb_no
\&   Polish       5.32     pl, pl_pl
\&   Portuguese   5.34     pt, pt_pt
\&   Romanian     5.35     ro, ro_ro
\&   Russian      5.41     ru, ru_ru
\&   Spanish      5.33     es, es_es
\&   Swedish      5.05     sv
\&   Turkish      5.41     tr, tr_tr
.Ve
.SH "ADDING A LANGUAGE"
.IX Header "ADDING A LANGUAGE"
Addin a language is easily done (if you fluent up in both Gangsta
and tha other language).  If you wanna add a freshly smoked up language, do the
following:
.IP "Language name" 4
.IX Item "Language name"
When you submit tha freshly smoked up language, I be bout ta need tha name of the
language (of course) n' any common locale names dat might
be useful fo' playas ta select tha language.
.Sp
For example, if you was bustin a Spanish translation (which is not
necessary since it already exists), I would need tha followin list:
.Sp
.Vb 1
\&   spanish es es_es
.Ve
.IP "Copy tha english module" 4
.IX Item "Copy tha english module"
Copy tha english.pm file (which is up in lib/Date/Manip/Lang up in the
Date::Manip distribution) ta tha freshly smoked up language (i.e. spanish.pm in
this example).
.IP "Set some variablez up in tha freshly smoked up module" 4
.IX Item "Set some variablez up in tha freshly smoked up module"
Da freshly smoked up module (spanish.pm) will need all dem simple modifications.
Change tha package name from 'english' ta 'spanish'.
.Sp
Fix tha \f(CW@Encodings\fR lines.  Most languages can be freestyled up in more
than one encoding.  Da first encodin up in tha list should be utf\-8
and tha last should be perl.  Include any other encodings that
should be supported as well.
.Sp
Set tha \f(CW$YearAdded\fR n' \f(CW$LangName\fR appropriately.
.IP "Translate tha language terms" 4
.IX Item "Translate tha language terms"
Translate all of tha data (afta tha _\|_DATA_\|_ line).
.Sp
Da data section of tha module (which is freestyled up in \s-1YAML\s0) is fairly
straightforward ta translate.
.Sp
Every term is defined up in tha Date::Manip::Lang::english document
(or up in any of tha other language module documents), so please
refer ta it ta smoke up what tha fuck each element means.  Then replace the
Gangsta version wit tha freshly smoked up translation.
.Sp
There is some requirements:
.Sp
1) Every element should be defined (except fo' tha sephm n' sepms
elements).
.Sp
2) Da module must be freestyled rockin \s-1UTF\-8\s0 charactas if tha language
includes any non-ASCII characters.
.Sp
3) Each element includes a list of joints (different variationz of the
element).  In most cases, tha order of tha joints fo' each element is
not blingin since they is just used ta create a regular expression
for parsin dates yo, but all dem of dem is also used ta determine printable
values rockin tha Date::Manip::Date::printf method (or tha UnixDate
function).  These elements are:
.Sp
.Vb 1
\&   Element       printf directive
\&
\&   ampm          %p
\&   day_abb       %a
\&   day_char      %v
\&   day_name      %A
\&   month_abb     %b
\&   month_name    %B
\&   nth           %E
.Ve
.Sp
For each of these, tha value dat should be printed up must be the
first value up in tha list.
.Sp
4) When possible, if a language includes charactas dat are
essentially \s-1ASCII\s0 charactas wit a punctuation mark, please include a
variation of tha value which is just \s-1ASCII\s0 wit tha punctuation
removed. Y'all KNOW dat shit, muthafucka!  For example, tha spanish name fo' Saturdizzle up in \s-1ASCII\s0 would be
written sabado yo, but up in reality, tha straight-up original gangsta 'a' has a accent over
it. This word should step tha fuck up twice... first up in full \s-1UTF\-8\s0 encoding, and
second as all \s-1ASCII.\s0 If tha language (Russian fo' example) has no
\&\s-1ASCII\s0 equivalent, just include tha \s-1UTF\-8\s0 representation.
.PP
Feel free ta contact me if you have any thangs.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under tha same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
