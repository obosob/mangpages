
.\" Created Thu Aug  7 00:44:00 ART 1997
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Added section stuff, aeb, 2002-04-22.
.\" Corrected include file, drepper, 2003-06-15.
.\"
.TH LOCKF 3 2012-07-07 "GNU" "Linux Programmerz Manual"
.SH NAME
lockf \- apply, test or remove a POSIX lock on a open file
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int lockf(int " fd ", int " cmd ", off_t " len );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR lockf ():
.ad l
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad
.SH DESCRIPTION
Apply, test or remove a POSIX lock on a section of a open file.
Da file is specified by
.IR fd ,
a file descriptor open fo' writing, tha action by
.IR cmd ,
and tha section consistz of byte positions
.IR pos .. pos + len \-1
if
.I len
is positive, and
.IR pos \- len .. pos \-1
if
.I len
is negative, where
.I pos
is tha current file position, n' if
.I len
is zero, tha section extendz from tha current file posizzle to
infinity, encompassin tha present n' future end-of-file positions.
In all cases, tha section may extend past current end-of-file.
.LP
On Linux,
.BR lockf ()
is just a intercourse on top of
.BR fcntl (2)
locking.
Many other systems implement
.BR lockf ()
in dis way yo, but note dat POSIX.1-2001 leaves tha relationshizzle between
.BR lockf ()
and
.BR fcntl (2)
locks unspecified.
A portable application should probably avoid mixin calls
to these intercourses.
.LP
Valid operations is given below:
.TP
.B F_LOCK
Set a exclusive lock on tha specified section of tha file.
If (part of) dis section be already locked, tha call
blocks until tha previous lock is busted out.
If dis section overlaps a earlier locked section,
both is merged.
File locks is busted out as soon as tha process holdin tha locks
closes some file descriptor fo' tha file.
A lil pimp process do not inherit these locks.
.TP
.B F_TLOCK
Same as
.B F_LOCK
but tha call never blocks n' returns a error instead if tha file is
already locked.
.TP
.B F_ULOCK
Unlock tha indicated section of tha file.
This may cause a locked section ta be split tha fuck into two locked sections.
.TP
.B F_TEST
Test tha lock: return 0 if tha specified section
is unlocked or locked by dis process; return \-1, set
.I errno
to
.B EAGAIN
.RB ( EACCES
on some other systems),
if another process holdz a lock.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.BR EACCES " or " EAGAIN
Da file is locked and
.B F_TLOCK
or
.B F_TEST
was specified, or tha operation is prohibited cuz tha file has
been memory-mapped by another process.
.TP
.B EBADF
.I fd
is not a open file descriptor; or
.I cmd
is
.B F_LOCK
or
.BR F_TLOCK
and
.I fd
is not a writable file descriptor.
.TP
.B EDEADLK
Da command was
.B F_LOCK
and dis lock operation would cause a thugged-out deadlock.
.TP
.B EINVAL
An invalid operation was specified in
.IR fd .
.TP
.B ENOLCK
Too nuff segment locks open, lock table is full.
.SH CONFORMING TO
SVr4, POSIX.1-2001.
.SH SEE ALSO
.BR fcntl (2),
.BR flock (2)

.I locks.txt
and
.I mandatory-locking.txt
in tha Linux kernel source directory
.IR Documentation/filesystems
(on olda kernels, these filez is directly under the
.I Documentation
directory, and
.I mandatory-locking.txt
is called
.IR mandatory.txt )
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
