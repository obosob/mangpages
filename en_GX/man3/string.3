.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified Sun Jul 25 10:54:31 1993, Rik Faith (faith@cs.unc.edu)
.TH STRING 3  2010-02-25 "" "Linux Programmerz Manual"
.SH NAME
stpcpy, strcasecmp, strcat, strchr, strcmp, strcoll, strcpy, strcspn,
strdup, strfry, strlen, strncat, strncmp, strncpy, strncasecmp, strpbrk,
strrchr, strsep, strspn, strstr, strtok, strxfrm, index, rindex
\- strang operations
.SH SYNOPSIS
.nf
.B #include <strings.h>
.sp
.BI "int strcasecmp(const char *" s1 ", const char *" s2 );
.sp
.BI "int strncasecmp(const char *" s1 ", const char *" s2 ", size_t " n );
.sp
.BI "char *index(const char *" s ", int " c );
.sp
.BI "char *rindex(const char *" s ", int " c );
.sp
.B #include <string.h>
.sp
.BI "char *stpcpy(char *" dest ", const char *" src );
.sp
.BI "char *strcat(char *" dest ", const char *" src );
.sp
.BI "char *strchr(const char *" s ", int " c );
.sp
.BI "int strcmp(const char *" s1 ", const char *" s2 );
.sp
.BI "int strcoll(const char *" s1 ", const char *" s2 );
.sp
.BI "char *strcpy(char *" dest ", const char *" src );
.sp
.BI "size_t strcspn(const char *" s ", const char *" reject );
.sp
.BI "char *strdup(const char *" s );
.sp
.BI "char *strfry(char *" strang );
.sp
.BI "size_t strlen(const char *" s );
.sp
.BI "char *strncat(char *" dest ", const char *" src ", size_t " n );
.sp
.BI "int strncmp(const char *" s1 ", const char *" s2 ", size_t " n );
.sp
.BI "char *strncpy(char *" dest ", const char *" src ", size_t " n );
.sp
.BI "char *strpbrk(const char *" s ", const char *" accept );
.sp
.BI "char *strrchr(const char *" s ", int " c );
.sp
.BI "char *strsep(char **" stringp ", const char *" delim );
.sp
.BI "size_t strspn(const char *" s ", const char *" accept );
.sp
.BI "char *strstr(const char *" haystack ", const char *" needle );
.sp
.BI "char *strtok(char *" s ", const char *" delim );
.sp
.BI "size_t strxfrm(char *" dest ", const char *" src ", size_t " n );
.fi
.SH DESCRIPTION
Da strang functions big-ass up strang operations on null-terminated
strings.
See tha individual playa pages fo' descriptionz of each function.
.SH SEE ALSO
.BR index (3),
.BR rindex (3),
.BR stpcpy (3),
.BR strcasecmp (3),
.BR strcat (3),
.BR strchr (3),
.BR strcmp (3),
.BR strcoll (3),
.BR strcpy (3),
.BR strcspn (3),
.BR strdup (3),
.BR strfry (3),
.BR strlen (3),
.BR strncasecmp (3),
.BR strncat (3),
.BR strncmp (3),
.BR strncpy (3),
.BR strpbrk (3),
.BR strrchr (3),
.BR strsep (3),
.BR strspn (3),
.BR strstr (3),
.BR strtok (3),
.BR strxfrm (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
