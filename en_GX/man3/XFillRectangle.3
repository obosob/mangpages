.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XFillRectangle 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XFillRectangle, XFillRectangles, XFillPolygon, XFillArc, XFillArcs \- fill rectangles, polygons, or arcs
.SH SYNTAX
.HP
int XFillRectangle\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, int \fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned
int \fIheight\fP\^); 
.HP
int XFillRectangles\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, XRectangle *\fIrectangles\fP\^, int \fInrectangles\fP\^); 
.HP
int XFillPolygon\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC
\fIgc\fP\^, XPoint *\fIpoints\fP\^, int \fInpoints\fP\^, int \fIshape\fP\^,
int \fImode\fP\^);
.HP
int XFillArc\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^, 
int \fIx\fP\^, int \fIy\fP\^, unsigned int \fIwidth\fP\^, unsigned int
\fIheight\fP\^, int \fIangle1\fP\^, int \fIangle2\fP\^); 
.HP
int XFillArcs\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, GC \fIgc\fP\^,
XArc *\fIarcs\fP\^, int \fInarcs\fP\^); 
.SH ARGUMENTS
.IP \fIangle1\fP 1i
Specifies tha start of tha arc relatizzle ta tha three-o'clock position
from tha center, up in unitz of degrees * 64.
.IP \fIangle2\fP 1i
Specifies tha path n' extent of tha arc relatizzle ta tha start of the
arc, up in unitz of degrees * 64.
.IP \fIarcs\fP 1i
Specifies a array of arcs.
.IP \fId\fP 1i
Specifies tha drawable. 
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgc\fP 1i
Specifies tha GC.
.IP \fImode\fP 1i
Specifies tha coordinizzle mode. 
Yo ass can pass
.ZN CoordModeOrigin
or
.ZN CoordModePrevious .
.IP \fInarcs\fP 1i
Specifies tha number of arcs up in tha array.
.IP \fInpoints\fP 1i
Specifies tha number of points up in tha array.
.IP \fInrectangles\fP 1i
Specifies tha number of rectanglez up in tha array.
.IP \fIpoints\fP 1i
Specifies a array of points.
.IP \fIrectangles\fP 1i
Specifies a array of rectangles.
.IP \fIshape\fP 1i
Specifies a gangbangin' finger-lickin' dirty-ass shape dat helps tha server ta improve performance.
Yo ass can pass 
.ZN Complex , 
.ZN Convex , 
or 
.ZN Nonconvex .
.ds Wh , which is tha dimensionz of tha rectangle ta be filled \
or tha major n' minor axez of tha arc
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify tha width n' height\*(Wh.
.ds Xy , which is relatizzle ta tha origin of tha drawable \
and specify tha upper-left corner of tha rectangle
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify tha x n' y coordinates\*(Xy.
.SH DESCRIPTION
The
.ZN XFillRectangle
and
.ZN XFillRectangles
functions fill tha specified rectangle or rectangles
as if a gangbangin' four-point 
.ZN FillPolygon
protocol request was specified fo' each rectangle:
.LP
.Ds
[x,y] [x+width,y] [x+width,y+height] [x,y+height]
.De
.LP
Each function uses tha x n' y coordinates,
width n' height dimensions, n' GC you specify.
.LP
.ZN XFillRectangles
fills tha rectanglez up in tha order listed up in tha array.  
For any given rectangle,
.ZN XFillRectangle
and
.ZN XFillRectangles
do not draw a pixel mo' than once.  
If rectanglez intersect, tha intersectin pixels are
drawn multiple times.
.LP
Both functions use these GC components: 
function, plane-mask, fill-style, subwindow-mode, 
clip-x-origin, clip-y-origin, n' clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
and tile-stipple-y-origin.
.LP
.ZN XFillRectangle
and
.ZN XFillRectangles
can generate
.ZN BadDrawable ,
.ZN BadGC ,
and
.ZN BadMatch 
errors.
.LP
.ZN XFillPolygon 
fills tha region closed by tha specified path.
Da path is closed
automatically if tha last point up in tha list do not coincizzle wit the
first point.
.ZN XFillPolygon
does not draw a pixel of tha region mo' than once.
.ZN CoordModeOrigin
treats all coordinates as relatizzle ta tha origin,
and
.ZN CoordModePrevious
treats all coordinates afta tha straight-up original gangsta as relatizzle ta tha previous point.
.LP
Dependin on tha specified shape, tha followin occurs: 
.IP \(bu 5
If shape is
.ZN Complex , 
the path may self-intersect. 
Note dat contiguous coincident points up in tha path is not treated 
as self-intersection.
.IP \(bu 5
If shape is
.ZN Convex , 
for every last muthafuckin pair of points inside tha polygon,
the line segment connectin dem do not intersect tha path.
If known by tha client,
specifyin 
.ZN Convex 
can improve performance.  
If you specify
.ZN Convex 
for a path dat aint convex, 
the graphics thangs up in dis biatch is undefined.
.IP \(bu 5
If shape is
.ZN Nonconvex , 
the path do not self-intersect yo, but tha shape is not
wholly convex. 
If known by tha client, 
specifyin 
.ZN Nonconvex 
instead of
.ZN Complex 
may improve performance.  
If you specify
.ZN Nonconvex 
for a self-intersectin path, tha graphics thangs up in dis biatch is undefined.
.LP
Da fill-rule of tha GC controls tha fillin behavior of 
self-intersectin polygons.
.LP
This function uses these GC components: 
function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, 
clip-y-origin, n' clip-mask.
It also uses these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
and tile-stipple-y-origin.
.LP
.ZN XFillPolygon
can generate
.ZN BadDrawable ,
.ZN BadGC ,
.ZN BadMatch ,
and
.ZN BadValue 
errors.
.LP
For each arc, 
.ZN XFillArc
or
.ZN XFillArcs
fills tha region closed by tha infinitely thin path
busted lyrics bout by tha specified arc and, dependin on tha 
arc-mode specified up in tha GC, one or two line segments, n' you can put dat on yo' toast. 
For 
.ZN ArcChord , 
the single line segment joinin tha endpointz of tha arc is used. Y'all KNOW dat shit, muthafucka!  
For 
.ZN ArcPieSlice ,
the two line segments joinin tha endpointz of tha arc wit tha center
point is used. Y'all KNOW dat shit, muthafucka!  
.ZN XFillArcs
fills tha arcs up in tha order listed up in tha array.  
For any given arc,  
.ZN XFillArc
and
.ZN XFillArcs
do not draw a pixel mo' than once.  
If regions intersect, 
the intersectin pixels is drawn multiple times.
.LP
Both functions use these GC components: 
function, plane-mask, fill-style, arc-mode, subwindow-mode, clip-x-origin, 
clip-y-origin, n' clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
and tile-stipple-y-origin.
.LP
.ZN XFillArc
and
.ZN XFillArcs
can generate
.ZN BadDrawable ,
.ZN BadGC ,
and
.ZN BadMatch 
errors.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value fo' a Drawable argument do not name a thugged-out defined Window or Pixmap.
.TP 1i
.ZN BadGC
A value fo' a GContext argument do not name a thugged-out defined GContext.
.TP 1i
.ZN BadMatch
An
.ZN InputOnly
window is used as a Drawable.
.TP 1i
.ZN BadMatch
Some argument or pair of arguments has tha erect type n' range but fails
to match up in some other way required by tha request.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
XDrawArc(3),
XDrawPoint(3),
XDrawRectangle(3)
.br
\fI\*(xL\fP
