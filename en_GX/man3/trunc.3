.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH TRUNC 3  2013-06-21 "" "Linux Programmerz Manual"
.SH NAME
trunc, truncf, truncl \- round ta integer, toward zero
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double trunc(double " x );
.br
.BI "float truncf(float " x );
.br
.BI "long double truncl(long double " x );
.fi
.sp
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR trunc (),
.BR truncf (),
.BR truncl ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.SH DESCRIPTION
These functions round
.I x
to tha nearest integer
not larger up in absolute value.
.SH RETURN VALUE
These functions return tha rounded integer value.

If
.IR x
is integral, infinite, or NaN,
.I x
itself is returned.
.SH ERRORS
No errors occur.
.SH VERSIONS
These functions first rocked up in glibc up in version 2.1.
.SH ATTRIBUTES
.SS Multithreadin (see pthreads(7))
The
.BR trunc (),
.BR truncf (),
and
.BR truncl ()
functions is thread-safe.
.SH CONFORMING TO
C99, POSIX.1-2001.
.SH NOTES
Da integral value returned by these functions may be too large
to store up in a integer type
.RI ( int ,
.IR long ,
etc.).
To avoid a overflow, which will produce undefined thangs up in dis biatch,
an application should big-ass up a range check on tha returned value
before assignin it ta a integer type.
.SH SEE ALSO
.BR ceil (3),
.BR floor (3),
.BR lrint (3),
.BR nearbyint (3),
.BR rint (3),
.BR round (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
