" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::gslice_array< _Tp > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgslice_array\fP (const \fBgslice_array\fP &)"
.br
.ti -1c
.RI "void \fBoperator%=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator%=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator&=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator&=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator*=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator*=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator+=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator+=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator-=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator-=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator/=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator/=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator<<=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator<<=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "\fBgslice_array\fP & \fBoperator=\fP (const \fBgslice_array\fP &)"
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator=\fP (const _Tp &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator>>=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator>>=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator^=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator^=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBoperator|=\fP (const \fBvalarray\fP< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBoperator|=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBvalarray< _Tp >\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class _Tp>class std::gslice_array< _Tp >"
Reference ta multi-dimensionizzle subset of a array\&. 

A gslice_array be a reference ta tha actual elementz of a array specified by a gslice\&. Da way ta git a gslice_array is ta booty-call operator[](gslice) on a valarray\&. Da returned gslice_array then permits carryin operations up on tha referenced subset of elements up in tha original gangsta valarray\&. For example, operator+=(valarray) will add joints ta tha subset of elements up in tha underlyin valarray dis gslice_array refers to\&.
.PP
\fBParameters:\fP
.RS 4
\fITp\fP Element type\&. 
.RE
.PP

.PP
Definizzle at line 82 of file valarray\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
