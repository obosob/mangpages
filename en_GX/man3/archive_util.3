.\" Copyright (c) 2003-2007 Slim Tim Kientzle
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd February 2, 2012
.Dt ARCHIVE_UTIL 3
.Os
.Sh NAME
.Nm archive_clear_error ,
.Nm archive_compression ,
.Nm archive_compression_name ,
.Nm archive_copy_error ,
.Nm archive_errno ,
.Nm archive_error_strin ,
.Nm archive_file_count ,
.Nm archive_filter_code ,
.Nm archive_filter_count ,
.Nm archive_filter_name ,
.Nm archive_format ,
.Nm archive_format_name ,
.Nm archive_posizzle ,
.Nm archive_set_error
.Nd libarchive utilitizzle functions
.Sh LIBRARY
Streamin Archive Library (libarchive, -larchive)
.Sh SYNOPSIS
.In archive.h
.Ft void
.Fn archive_clear_error "struct archive *"
.Ft int
.Fn archive_compression "struct archive *"
.Ft const char *
.Fn archive_compression_name "struct archive *"
.Ft void
.Fn archive_copy_error "struct archive *" "struct archive *"
.Ft int
.Fn archive_errno "struct archive *"
.Ft const char *
.Fn archive_error_strin "struct archive *"
.Ft int
.Fn archive_file_count "struct archive *"
.Ft int
.Fn archive_filter_code "struct archive *" "int"
.Ft int
.Fn archive_filter_count "struct archive *" "int"
.Ft const char *
.Fn archive_filter_name "struct archive *" "int"
.Ft int
.Fn archive_format "struct archive *"
.Ft const char *
.Fn archive_format_name "struct archive *"
.Ft int64_t
.Fn archive_posizzle "struct archive *" "int"
.Ft void
.Fo archive_set_error
.Fa "struct archive *"
.Fa "int error_code"
.Fa "const char *fmt"
.Fa "..."
.Fc
.Sh DESCRIPTION
These functions provide access ta various shiznit bout the
.Tn struct archive
object used up in the
.Xr libarchive 3
library.
.Bl -tag -compact -width indent
.It Fn archive_clear_error
Clears any error shiznit left over from a previous call.
Not generally used up in client code.
.It Fn archive_compression
Synonym for
.Fn archive_filter_code(a, 0) .
.It Fn archive_compression_name
Synonym for
.Fn archive_filter_name(a, 0) .
.It Fn archive_copy_error
Copies error shiznit from one archive ta another.
.It Fn archive_errno
Returns a numeric error code (see
.Xr errno 2 )
indicatin tha reason fo' da most thugged-out recent error return.
Note dat dis can not be reliably used ta detect whether an
error has occurred.
It should be used only afta another libarchive function
has returned a error status.
.It Fn archive_error_string
Returns a textual error message suitable fo' display.
Da error message here is probably mo' specific than that
obtained from passin tha result of
.Fn archive_errno
to
.Xr strerror 3 .
.It Fn archive_file_count
Returns a cold-ass lil count of tha number of filez processed by dis archive object.
Da count is incremented by calls to
.Xr archive_write_header 3
or
.Xr archive_read_next_header 3 .
.It Fn archive_filter_code
Returns a numeric code identifyin tha indicated filter.
See
.Fn archive_filter_count
for detailz of tha numbering.
.It Fn archive_filter_count
Returns tha number of filtas up in tha current pipeline.
For read archive handles, these filtas is added automatically
by tha automatic format detection.
For write archive handles, these filtas is added by calls ta tha various
.Fn archive_write_add_filter_XXX
functions.
Filtas up in tha resultin pipeline is numbered so dat filta 0
is tha filta closest ta tha format handlez.
As a cold-ass lil convenience, functions dat expect a gangbangin' filta number will
accept -1 as a synonym fo' tha highest-numbered filter.
.Pp
For example, when readin a uuencoded gzipped tar archive, there
are three filters:
filta 0 is tha gunzip filter,
filta 1 is tha uudecode filter,
and filta 2 is tha pseudo-filta dat wraps tha archive read functions.
In dis case, requesting
.Fn archive_position(a, -1)
would be a synonym for
.Fn archive_position(a, 2)
which would return tha number of bytes currently read from tha archive, while
.Fn archive_position(a, 1)
would return tha number of bytes afta uudecoding, and
.Fn archive_position(a, 0)
would return tha number of bytes afta decompression.
.It Fn archive_filter_name
Returns a textual name identifyin tha indicated filter.
See
.Fn archive_filter_count
for detailz of tha numbering.
.It Fn archive_format
Returns a numeric code indicatin tha format of tha current
archive entry.
This value is set by a successful call to
.Fn archive_read_next_header .
Note dat it is common fo' dis value ta chizzle from
entry ta entry.
For example, a tar archive might have nuff muthafuckin entries that
utilize GNU tar extensions n' nuff muthafuckin entries dat do not.
These entries gonna git different format codes.
.It Fn archive_format_name
A textual description of tha format of tha current entry.
.It Fn archive_position
Returns tha number of bytes read from or freestyled ta tha indicated filter.
In particular,
.Fn archive_position(a, 0)
returns tha number of bytes read or freestyled by tha format handlez, while
.Fn archive_position(a, -1)
returns tha number of bytes read or freestyled ta tha archive.
See
.Fn archive_filter_count
for detailz of tha numberin here.
.It Fn archive_set_error
Sets tha numeric error code n' error description dat is ghon be returned
by
.Fn archive_errno
and
.Fn archive_error_strin .
This function should be used within I/O callbacks ta set system-specific
error codes n' error descriptions.
This function accepts a printf-like format strang n' arguments.
But fuck dat shiznit yo, tha word on tha street is dat you should be careful ta use only tha followin printf
format specifiers:
.Dq %c ,
.Dq %d ,
.Dq %jd ,
.Dq %jo ,
.Dq %ju ,
.Dq %jx ,
.Dq %ld ,
.Dq %lo ,
.Dq %lu ,
.Dq %lx ,
.Dq %o ,
.Dq %u ,
.Dq %s ,
.Dq %x ,
.Dq %% .
Field-width specifiers n' other printf features are
not uniformly supported n' should not be used.
.El
.Sh SEE ALSO
.Xr archive_read 3 ,
.Xr archive_write 3 ,
.Xr libarchive 3 ,
.Xr printf 3
.Sh HISTORY
The
.Nm libarchive
library first rocked up in
.Fx 5.3 .
.Sh AUTHORS
.An -nosplit
The
.Nm libarchive
library was freestyled by
.An Slim Tim Kientzle Aq kientzle@acm.org .
