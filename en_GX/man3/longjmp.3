.\" Written by Mike Haardt, Fri Nov 25 14:51:42 MET 1994
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Added siglongjmp, Sun Mar  2 22:03:05 EST 1997, jrv@vanzandt.mv.com
.\" Modifications, Sun Feb 26 14:39:45 1995, faith@cs.unc.edu
.\" "
.TH LONGJMP 3 2009-01-13 "" "Linux Programmerz Manual"
.SH NAME
longjmp, siglongjmp \- nonlocal jump ta a saved stack context
.SH SYNOPSIS
.nf
.B #include <setjmp.h>

.BI "void longjmp(jmp_buf " env ", int " val );

.BI "void siglongjmp(sigjmp_buf " env ", int " val );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR siglongjmp ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_C_SOURCE
.SH DESCRIPTION
.BR longjmp ()
and
.BR setjmp (3)
are useful fo' dealin wit errors
and interrupts encountered up in a low-level subroutine of a program.
.BR longjmp ()
restores tha environment saved by tha last call of
.BR setjmp (3)
with tha corresponding
.I env
argument.
After
.BR longjmp ()
is completed, program execution continues as if the
correspondin call of
.BR setjmp (3)
had just returned tha value
.IR val .
.BR longjmp ()
cannot cause 0 ta be returned.
If
.BR longjmp ()
is invoked wit a second argument of 0, 1 is ghon be returned instead.
.P
.BR siglongjmp ()
is similar to
.BR longjmp ()
except fo' tha type of
its
.I env
argument.
If, n' only if, the
.BR sigsetjmp (3)
call dat set this
.I env
used a nonzero
.I savesigs
flag,
.BR siglongjmp ()
also restores tha signal mask dat was saved by
.BR sigsetjmp (3).
.SH RETURN VALUE
These functions never return.
.SH CONFORMING TO
C89, C99, n' POSIX.1-2001 specify
.BR longjmp ().
POSIX.1-2001 specifies
.BR siglongjmp ().
.SH NOTES
POSIX do not specify whether
.BR longjmp ()
will restore tha signal context (see
.BR setjmp (3)
for some mo' details).
If you wanna portably save n' restore signal masks, use
.BR sigsetjmp (3)
and
.BR siglongjmp ().
.P
Da jointz of automatic variablez is unspecified afta a cold-ass lil call to
.BR longjmp ()
if they hook up all tha followin criteria:
.IP \(bu 3
they is local ta tha function dat made tha corresponding
.BR setjmp (3)
call;
.IP \(bu
their joints is chizzled between tha calls to
.BR setjmp (3)
and
.BR longjmp ();
and
.IP \(bu
they is not declared as
.IR volatile .
.P
Analogous remarks apply for
.BR siglongjmp ().
.P
.BR longjmp ()
and
.BR siglongjmp ()
make programs hard to
understand n' maintain.
If possible a alternatizzle should be used.
.SH SEE ALSO
.BR setjmp (3),
.BR sigsetjmp (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
