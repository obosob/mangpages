.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTML::FormatRTF 3"
.TH HTML::FormatRTF 3 "2013-11-07" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::FormatRTF \- Format HTML as RTF
.SH "VERSION"
.IX Header "VERSION"
version 2.11
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use HTML::FormatRTF;
\&
\&  mah $out_file = "test.rtf";
\&  open(RTF, ">$out_file")
\&   or take a thugged-out dirtnap "Can\*(Aqt write\-open $out_file: $!\enAborting";
\&
\&  print RTF HTML::FormatRTF\->format_file(
\&    \*(Aqtest.html\*(Aq,
\&      \*(Aqfontname_headings\*(Aq => "Verdana",
\&  );
\&  close(RTF);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
HTML::FormatRTF be a cold-ass lil class fo' objects dat you use ta convert \s-1HTML\s0 ta \s-1RTF.\s0
There is currently no proper support fo' tablez or forms.
.PP
This be a subclass of HTML::Formatter, whose documentation you should
consult fo' mo' shiznit on underlyin methodz like fuckin \f(CW\*(C`new\*(C'\fR, \f(CW\*(C`format\*(C'\fR,
\&\f(CW\*(C`format_file\*(C'\fR etc
.PP
Yo ass can specify any of tha followin parametas up in tha call ta \f(CW\*(C`new\*(C'\fR,
\&\f(CW\*(C`format_file\*(C'\fR, or \f(CW\*(C`format_string\*(C'\fR:
.IP "lm" 4
.IX Item "lm"
Amount of \fIextra\fR indentin ta apply ta tha left margin, up in twips
(\fItw\fRent\fIi\fRethz of a \fIp\fRoint). Default is 0.
.Sp
So if you wanted tha left margin ta be a additionizzle half inch larger, you'd
set \f(CW\*(C`lm => 720\*(C'\fR (since there be a 1440 twips up in a inch). If you wanted it to
be bout 1.5cm larger, you'd set \f(CW\*(C`lw => 850\*(C'\fR (since there be a bout 567
twips up in a cold-ass lil centimeter).
.IP "rm" 4
.IX Item "rm"
Amount of \fIextra\fR indentin ta apply ta tha left margin, up in twips
(\fItw\fRent\fIi\fRethz of a \fIp\fRoint).  Default is 0.
.IP "normal_halfpoint_size" 4
.IX Item "normal_halfpoint_size"
This is tha size of aiiight text up in tha document, up in \fIhalf\fR\-points, n' you can put dat on yo' toast. Da default
value is 22, meanin dat aiiight text is up in 11 point.
.IP "header_halfpoint_size" 4
.IX Item "header_halfpoint_size"
This is tha size of text used up in tha documentz page-header, up in \fIhalf\fR\-points.
Da default value is 17, meanin dat aiiight text is up in 7.5 point.  Currently,
the header consists just of "p.\fIpagenumber\fR" up in tha upper-right-hand corner,
and cannot be disabled.
.IP "head1_halfpoint_size ... head6_halfpoint_size" 4
.IX Item "head1_halfpoint_size ... head6_halfpoint_size"
These control tha font size of each headin level, up in half-twips.  For example,
the default fo' head3_halfpoint_size is 25, meanin dat \s-1HTML \s0\f(CW\*(C`<h3>...</h3>\*(C'\fR text is ghon be up in 12.5 point text (in addizzle ta bein underlined n' up in the
headin font).
.IP "codeblock_halfpoint_size" 4
.IX Item "codeblock_halfpoint_size"
This controls tha font size (in half-points) of tha text used fo' \f(CW\*(C`<pre>...</pre>\*(C'\fR text.  By default, it is 18, meanin 9 point.
.IP "fontname_body" 4
.IX Item "fontname_body"
This option controls what tha fuck font is ta be used fo' tha body of tha text \*(-- that
is, every last muthafuckin thang other than headin text n' text up in pre/code/tt elements, n' you can put dat on yo' toast. The
default value is currently \*(L"Times\*(R".  Other handy joints I can suggest rockin are
\&\*(L"Georgia\*(R" or \*(L"Bookman Oldskool Style\*(R".
.IP "fontname_code" 4
.IX Item "fontname_code"
This option controls what tha fuck font is ta be used fo' text up in pre/code/tt elements.
Da default value is currently \*(L"Courier New\*(R".
.IP "fontname_headings" 4
.IX Item "fontname_headings"
This option controls what tha fuck font name is ta be used fo' headings.  Yo ass can use
the same font as fontname_body yo, but I prefer a sans-serif font, so tha default
value is currently \*(L"Arial\*(R".  Also consider \*(L"Tahoma\*(R" n' \*(L"Verdana\*(R".
.IP "document_language" 4
.IX Item "document_language"
This option controls what tha fuck Microsizzlez language number is ghon be specified as the
language fo' dis document. Da current default value is 1033, fo' \s-1US\s0 Gangsta.
Consult a \s-1RTF\s0 reference fo' other language numbers.
.IP "hr_width" 4
.IX Item "hr_width"
This option controls how tha fuck nuff underline charactas is ghon be used fo' renderin a
\&\*(L"<hr>\*(R" tag. Its default value is currently 50. Yo ass can probably leave this
alone yo, but under some circumstances you might wanna bust a smalla or larger
number.
.IP "no_prolog" 4
.IX Item "no_prolog"
If dis option is set ta a legit value, HTML::FormatRTF will cook up a point of
\&\fInot\fR emittin tha \s-1RTF\s0 prolog before tha document.  By default, dis is off,
meanin dat HTML::FormatRTF \fIwill\fR emit tha prolog.  This option is of
interest only ta advanced users.
.IP "no_trailer" 4
.IX Item "no_trailer"
If dis option is set ta a legit value, HTML::FormatRTF will cook up a point of
\&\fInot\fR emittin tha \s-1RTF\s0 traila all up in tha end of tha document.  By default, this
is off, meanin dat HTML::FormatRTF \fIwill\fR emit tha bit of \s-1RTF\s0 dat endz the
document.  This option iz of interest only ta advanced users.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTML::Formatter, RTF::Writer
.SH "INSTALLATION"
.IX Header "INSTALLATION"
See perlmodinstall fo' shiznit n' options on installin Perl modules.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Yo ass can make freshly smoked up bug reports, n' view existin ones, all up in the
web intercourse at <http://rt.cpan.org/Public/Dist/Display.html?Name=HTML\-Format>.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
Da project homepizzy is <https://metacpan.org/release/HTML\-Format>.
.PP
Da sickest fuckin version of dis module be available from tha Comprehensive Perl
Archive Network (\s-1CPAN\s0). Right back up in yo muthafuckin ass. Smoke up <http://www.perl.com/CPAN/> ta find a \s-1CPAN\s0
site near you, or peep <https://metacpan.org/module/HTML::Format/>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Nigel Metheringham <nigelm@cpan.org>
.IP "\(bu" 4
Shizzle M Burke <sburke@cpan.org>
.IP "\(bu" 4
Gisle Aas <gisle@ActiveState.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Nigel Metheringham, 2002\-2005 Shizzle M Burke, 1999\-2002 Gisle Aas.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as tha Perl 5 programmin language system itself.
