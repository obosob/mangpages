.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XSetScreenSaver 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XSetScreenSaver, XForceScreenSaver, XActivateScreenSaver, XResetScreenSaver, XGetScreenSaver \- manipulate tha screen saver
.SH SYNTAX
.HP
int XSetScreenSaver\^(\^Display *\fIdisplay\fP\^, int \fItimeout\fP\^,
int \fIinterval\fP\^, int \fIprefer_blanking\fP\^, int
\fIallow_exposures\fP\^); 
.HP
int XForceScreenSaver\^(\^Display *\fIdisplay\fP\^, int \fImode\fP\^); 
.HP
int XActivateScreenSaver\^(\^Display *\fIdisplay\fP\^); 
.HP
int XResetScreenSaver\^(\^Display *\fIdisplay\fP\^); 
.HP
int XGetScreenSaver\^(\^Display *\fIdisplay\fP\^, int *\fItimeout_return\fP\^,
int *\fIinterval_return\fP\^, int *\fIprefer_blanking_return\fP\^, int
*\fIallow_exposures_return\fP\^); 
.SH ARGUMENTS
.IP \fIallow_exposures\fP 1i
Specifies tha screen save control joints.
Yo ass can pass
.ZN DontAllowExposures ,
.ZN AllowExposures ,
or
.ZN DefaultExposures .
.IP \fIallow_exposures_return\fP 1i
Returns tha current screen save control value
.Pn ( DontAllowExposures ,
.ZN AllowExposures ,
or
.ZN DefaultExposures ).
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIinterval\fP 1i
Specifies tha interval, up in seconds, between screen saver alterations.
.IP \fIinterval_return\fP 1i
Returns tha interval between screen saver invocations.
.IP \fImode\fP 1i
Specifies tha mode dat is ta be applied.
Yo ass can pass
.ZN ScreenSaverActive
or
.ZN ScreenSaverReset .
.IP \fIprefer_blanking\fP 1i
Specifies how tha fuck ta enable screen blanking.
Yo ass can pass
.ZN DontPreferBlankin ,
.ZN PreferBlankin ,
or
.ZN DefaultBlankin .
.IP \fIprefer_blanking_return\fP 1i
Returns tha current screen blankin preference
.Pn ( DontPreferBlankin ,
.ZN PreferBlankin ,
or
.ZN DefaultBlankin ).
.IP \fItimeout\fP 1i
Specifies tha timeout, up in seconds, until tha screen saver turns on.
.IP \fItimeout_return\fP 1i
Returns tha timeout, up in seconds, until tha screen saver turns on.
.SH DESCRIPTION
Timeout n' interval is specified up in seconds. 
A timeout of 0 disablez tha screen saver 
(but a activated screen saver aint deactivated),
and a timeout of \-1 restores tha default.
Other wack joints generate a
.ZN BadValue
error.
If tha timeout value is nonzero, 
.ZN XSetScreenSaver
enablez tha screen saver.
An interval of 0 disablez tha random-pattern motion.
Both joints is limited ta a 16-bit signed integer range by tha wire protocol,
despite tha C prototype.
If no input from devices (keyboard, mouse, n' so on) is generated 
for tha specified number of timeout secondz once tha screen saver is enabled,
the screen saver be activated.
.LP
For each screen, 
if blankin is preferred n' tha hardware supports vizzle blanking, 
the screen simply goes blank.  
Otherwise, if either exposures is allowed or tha screen can be regenerated 
without bustin  
.ZN Expose 
events ta clients, 
the screen is tiled wit tha root window background tile randomly 
re-origined each interval seconds.
Otherwise, tha screens' state do not chizzle, 
and tha screen saver aint activated.
Da screen saver is deactivated,
and all screen states is restored all up in tha next
keyboard or pointa input or all up in tha next call to
.ZN XForceScreenSaver
with mode
.ZN ScreenSaverReset .  
.LP
If tha server-dependent screen saver method supports periodic chizzle,
the interval argument serves as a hint bout how tha fuck long tha chizzle period
should be, n' zero hints dat no periodic chizzle should be made.
Examplez of ways ta chizzle tha screen include scramblin tha colormap
periodically, movin a icon image round tha screen periodically, or tiling
the screen wit tha root window background tile, randomly re-origined
periodically.
.LP
.ZN XSetScreenSaver
can generate a
.ZN BadValue 
error.
.LP
If tha specified mode is 
.ZN ScreenSaverActizzle 
and tha screen saver currently is deactivated,
.ZN XForceScreenSaver
activates tha screen saver even if tha screen saver had been disabled
with a timeout of zero.
If tha specified mode is 
.ZN ScreenSaverReset 
and tha screen saver currently is enabled,
.ZN XForceScreenSaver
deactivates tha screen saver if dat shiznit was activated,
and tha activation timer is reset ta its initial state 
(as if thang input had been received).
.LP
.ZN XForceScreenSaver
can generate a
.ZN BadValue 
error.
.LP
The
.ZN XActivateScreenSaver
function activates tha screen saver.
.LP
The
.ZN XResetScreenSaver
function resets tha screen saver.
.LP
The
.ZN XGetScreenSaver
function gets tha current screen saver joints.
.SH DIAGNOSTICS
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.SH "SEE ALSO"
\fI\*(xL\fP
