'\" t
.\"     Title: gluNurbsSurface
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLUNURBSSURFACE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gluNurbsSurface \- define tha shape of a NURBS surface
.SH "C SPECIFICATION"
.HP \w'void\ gluNurbsSurface('u
.BI "void gluNurbsSurface(GLUnurbs*\ " "nurb" ", GLint\ " "sKnotCount" ", GLfloat*\ " "sKnots" ", GLint\ " "tKnotCount" ", GLfloat*\ " "tKnots" ", GLint\ " "sStride" ", GLint\ " "tStride" ", GLfloat*\ " "control" ", GLint\ " "sOrder" ", GLint\ " "tOrder" ", GLenum\ " "type" ");"
.SH "PARAMETERS"
.PP
\fInurb\fR
.RS 4
Specifies tha NURBS object (created with
\fBgluNewNurbsRenderer\fR())\&.
.RE
.PP
\fIsKnotCount\fR
.RS 4
Specifies tha number of knots up in tha parametric
\fIu\fR
direction\&.
.RE
.PP
\fIsKnots\fR
.RS 4
Specifies a array of
\fIsKnotCount\fR
nondecreasin knot joints up in tha parametric
\fIu\fR
direction\&.
.RE
.PP
\fItKnotCount\fR
.RS 4
Specifies tha number of knots up in tha parametric
\fIv\fR
direction\&.
.RE
.PP
\fItKnots\fR
.RS 4
Specifies a array of
\fItKnotCount\fR
nondecreasin knot joints up in tha parametric
\fIv\fR
direction\&.
.RE
.PP
\fIsStride\fR
.RS 4
Specifies tha offset (as a fuckin shitload of single\-precision floating\-point joints) between successive control points up in tha parametric
\fIu\fR
direction in
\fIcontrol\fR\&.
.RE
.PP
\fItStride\fR
.RS 4
Specifies tha offset (in single\-precision floating\-point joints) between successive control points up in tha parametric
\fIv\fR
direction in
\fIcontrol\fR\&.
.RE
.PP
\fIcontrol\fR
.RS 4
Specifies a array containin control points fo' tha NURBS surface\&. Da offsets between successive control points up in tha parametric
\fIu\fR
and
\fIv\fR
directions is given by
\fIsStride\fR
and
\fItStride\fR\&.
.RE
.PP
\fIsOrder\fR
.RS 4
Specifies tha order of tha NURBS surface up in tha parametric
\fIu\fR
direction\&. Da order is one mo' than tha degree, hence a surface dat is cubic in
\fIu\fR
has a
\fIu\fR
order of 4\&.
.RE
.PP
\fItOrder\fR
.RS 4
Specifies tha order of tha NURBS surface up in tha parametric
\fIv\fR
direction\&. Da order is one mo' than tha degree, hence a surface dat is cubic in
\fIv\fR
has a
\fIv\fR
order of 4\&.
.RE
.PP
\fItype\fR
.RS 4
Specifies type of tha surface\&.
\fItype\fR
can be any of tha valid two\-dimensionizzle evaluator types (such as
\fBGLU_MAP2_VERTEX_3\fR
or
\fBGLU_MAP2_COLOR_4\fR)\&.
.RE
.SH "DESCRIPTION"
.PP
Use
\fBgluNurbsSurface\fR
within a NURBS (Non\-Uniform Rationizzle B\-Spline) surface definizzle ta describe tha shape of a NURBS surface (before any trimming)\&. To mark tha beginnin of a NURBS surface definition, use the
\fBgluBeginSurface\fR()
command\&. To mark tha end of a NURBS surface definition, use the
\fBgluEndSurface\fR()
command\&. Call
\fBgluNurbsSurface\fR
within a NURBS surface definizzle only\&.
.PP
Positional, texture, n' color coordinates is associated wit a surface by presentin each as a separate
\fBgluNurbsSurface\fR
between a
\fBgluBeginSurface\fR()/\fBgluEndSurface\fR()
pair\&. No mo' than one call to
\fBgluNurbsSurface\fR
for each of color, position, n' texture data can be made within a single
\fBgluBeginSurface\fR()/\fBgluEndSurface\fR()
pair\&. Exactly one call must be made ta describe tha posizzle of tha surface (a
\fItype\fR
of
\fBGLU_MAP2_VERTEX_3\fR
or
\fBGLU_MAP2_VERTEX_4\fR)\&.
.PP
A NURBS surface can be trimmed by rockin tha commands
\fBgluNurbsCurve\fR()
and
\fBgluPwlCurve\fR()
between calls to
\fBgluBeginTrim\fR()
and
\fBgluEndTrim\fR()\&.
.PP
Note dat a
\fBgluNurbsSurface\fR
with
\fIsKnotCount\fR
knots up in the
\fIu\fR
direction and
\fItKnotCount\fR
knots up in the
\fIv\fR
direction wit orders
\fIsOrder\fR
and
\fItOrder\fR
must have (\fIsKnotCount\fR
\-
\fIsOrder\fR)
times
(\fItKnotCount\fR
\-
\fItOrder\fR) control points\&.
.SH "EXAMPLE"
.PP
Da followin commandz render a textured NURBS surface wit normals; tha texture coordinates n' normals is also NURBS surfaces:
.sp
.if n \{\
.RS 4
.\}
.nf
gluBeginSurface(nobj);
   gluNurbsSurface(nobj, \&.\&.\&., GL_MAP2_TEXTURE_COORD_2);
   gluNurbsSurface(nobj, \&.\&.\&., GL_MAP2_NORMAL);
   gluNurbsSurface(nobj, \&.\&.\&., GL_MAP2_VERTEX_4);
gluEndSurface(nobj);
            
.fi
.if n \{\
.RE
.\}
.sp
.SH "SEE ALSO"
.PP
\fBgluBeginSurface\fR(),
\fBgluBeginTrim\fR(),
\fBgluNewNurbsRenderer\fR(),
\fBgluNurbsCurve\fR(),
\fBgluPwlCurve\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
