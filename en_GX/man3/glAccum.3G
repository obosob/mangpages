'\" t
.\"     Title: glAccum
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLACCUM" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glAccum \- operate on tha accumulation buffer
.SH "C SPECIFICATION"
.HP \w'void\ glAccum('u
.BI "void glAccum(GLenum\ " "op" ", GLfloat\ " "value" ");"
.SH "PARAMETERS"
.PP
\fIop\fR
.RS 4
Specifies tha accumulation buffer operation\&. Right back up in yo muthafuckin ass. Symbolic constants
\fBGL_ACCUM\fR,
\fBGL_LOAD\fR,
\fBGL_ADD\fR,
\fBGL_MULT\fR, and
\fBGL_RETURN\fR
are accepted\&.
.RE
.PP
\fIvalue\fR
.RS 4
Specifies a gangbangin' floating\-point value used up in tha accumulation buffer operation\&.
\fIop\fR
determines how
\fIvalue\fR
is used\&.
.RE
.SH "DESCRIPTION"
.PP
Da accumulation buffer be a extended\-range color buffer\&. Images is not rendered tha fuck into it\&. Rather, images rendered tha fuck into one of tha color buffers is added ta tha contentz of tha accumulation buffer afta rendering\&. Effects like fuckin antialiasin (of points, lines, n' polygons), motion blur, n' depth of field can be pimped by accumulatin images generated wit different transformation matrices\&.
.PP
Each pixel up in tha accumulation buffer consistz of red, green, blue, n' alpha joints\&. Da number of bits per component up in tha accumulation buffer dependz on tha implementation\&. Yo ass can examine dis number by calling
\fBglGetIntegerv\fR()
four times, wit arguments
\fBGL_ACCUM_RED_BITS\fR,
\fBGL_ACCUM_GREEN_BITS\fR,
\fBGL_ACCUM_BLUE_BITS\fR, and
\fBGL_ACCUM_ALPHA_BITS\fR\&. Regardless of tha number of bits per component, tha range of joints stored by each component is
\-1 1\&. Da accumulation buffer pixels is mapped one\-to\-one wit frame buffer pixels\&.
.PP
\fBglAccum\fR
operates on tha accumulation buffer\&. Da first argument,
\fIop\fR, be a symbolic constant dat selects a accumulation buffer operation\&. Da second argument,
\fIvalue\fR, be a gangbangin' floating\-point value ta be used up in dat operation\&. Five operations is specified:
\fBGL_ACCUM\fR,
\fBGL_LOAD\fR,
\fBGL_ADD\fR,
\fBGL_MULT\fR, and
\fBGL_RETURN\fR\&.
.PP
All accumulation buffer operations is limited ta tha area of tha current scissor box n' applied identically ta tha red, green, blue, n' alpha componentz of each pixel\&. If a
\fBglAccum\fR
operation thangs up in dis biatch up in a value outside tha range
\-1 1, tha contentz of a accumulation buffer pixel component is undefined\&.
.PP
Da operations is as bigs up:
.PP
\fBGL_ACCUM\fR
.RS 4
Obtains R, G, B, n' A joints from tha buffer currently selected fo' readin (see
\fBglReadBuffer\fR())\&. Each component value is divided by
2 n \- 1, where
n
is tha number of bits allocated ta each color component up in tha currently selected buffer\&. Da result be a gangbangin' floating\-point value up in tha range
0 1, which is multiplied by
\fIvalue\fR
and added ta tha correspondin pixel component up in tha accumulation buffer, thereby uppimpin tha accumulation buffer\&.
.RE
.PP
\fBGL_LOAD\fR
.RS 4
Similar to
\fBGL_ACCUM\fR, except dat tha current value up in tha accumulation buffer aint used up in tha calculation of tha freshly smoked up value\&. That is, tha R, G, B, n' A joints from tha currently selected buffer is divided by
2 n \- 1, multiplied by
\fIvalue\fR, n' then stored up in tha correspondin accumulation buffer cell, overwritin tha current value\&.
.RE
.PP
\fBGL_ADD\fR
.RS 4
Adds
\fIvalue\fR
to each R, G, B, n' A up in tha accumulation buffer\&.
.RE
.PP
\fBGL_MULT\fR
.RS 4
Multiplies each R, G, B, n' A up in tha accumulation buffer by
\fIvalue\fR
and returns tha scaled component ta its correspondin accumulation buffer location\&.
.RE
.PP
\fBGL_RETURN\fR
.RS 4
Transfers accumulation buffer joints ta tha color buffer or buffers currently selected fo' writing\&. Each R, G, B, n' A component is multiplied by
\fIvalue\fR, then multiplied by
2 n \- 1, clamped ta tha range
0 2 n \- 1, n' stored up in tha correspondin display buffer cell\&. Da only fragment operations dat is applied ta dis transfer is pixel ballership, scissor, dithering, n' color writemasks\&.
.RE
.PP
To clear tha accumulation buffer, call
\fBglClearAccum\fR()
with R, G, B, n' A joints ta set it to, then call
\fBglClear\fR()
with tha accumulation buffer enabled\&.
.SH "NOTES"
.PP
Only pixels within tha current scissor box is updated by a
\fBglAccum\fR
operation\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIop\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if there is no accumulation buffer\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglAccum\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_ACCUM_RED_BITS\fR
.PP
\fBglGet\fR()
with argument
\fBGL_ACCUM_GREEN_BITS\fR
.PP
\fBglGet\fR()
with argument
\fBGL_ACCUM_BLUE_BITS\fR
.PP
\fBglGet\fR()
with argument
\fBGL_ACCUM_ALPHA_BITS\fR
.SH "SEE ALSO"
.PP
\fBglClear\fR(),
\fBglClearAccum\fR(),
\fBglCopyPixels\fR(),
\fBglDrawBuffer\fR(),
\fBglGet\fR(),
\fBglReadBuffer\fR(),
\fBglReadPixels\fR(),
\fBglScissor\fR(),
\fBglStencilOp\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
