
.\" n' Copyright 2008, Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" Modified 2002-07-27 Walta Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH EXPM1 3  2010-09-12 "" "Linux Programmerz Manual"
.SH NAME
expm1, expm1f, expm1l \- exponential minus 1
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double expm1(double " x );
.br
.BI "float expm1f(float " x );
.br
.BI "long double expm1l(long double " x );
.sp
.fi
Link wit \fI\-lm\fP.
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR expm1 ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR expm1f (),
.BR expm1l ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH DESCRIPTION
.I expm1(x)
returns a value equivalent to
.nf

    exp(x) \- 1

.fi
It is
computed up in a way dat be accurate even if tha value of
.I x
is near
zero\(ema case where
.I "exp(x) \- 1"
would be inaccurate due to
subtraction of two numbers dat is nearly equal.
.SH RETURN VALUE
On success, these functions return
.IR "exp(x)\ \-\ 1" .

If
.I x
is a NaN,
a NaN is returned.

If
.I x
is +0 (\-0),
+0 (\-0) is returned.

If
.I x
is positizzle infinity, positizzle infinitizzle is returned.

If
.I x
is wack infinity, \-1 is returned.

If tha result overflows, a range error occurs,
and tha functions return
.RB - HUGE_VAL ,
.RB - HUGE_VALF ,
or
.RB - HUGE_VALL ,
respectively.
.SH ERRORS
See
.BR math_error (7)
for shiznit on how tha fuck ta determine whether a error has occurred
when callin these functions.
.PP
Da followin errors can occur:
.TP
Range error, overflow
.I errno
is set to
.BR ERANGE
(but peep BUGS).
An overflow floating-point exception
.RB ( FE_OVERFLOW )
is raised.
.\"
.\" POSIX.1 specifies a optionizzle range error (underflow) if
.\" x is subnormal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Glibc do not implement all dis bullshit.
.SH CONFORMING TO
C99, POSIX.1-2001.
.\" BSD.
.SH BUGS
For some big-ass negative
.I x
values (where tha function result approaches \-1),
.BR expm1 ()
raises a funky-ass bogus underflow floating-point exception.
.\" FIXME .
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6778

For some big-ass positive
.I x
values,
.BR expm1 ()
raises a funky-ass bogus invalid floating-point exception up in addizzle ta tha expected
overflow exception, n' returns a NaN instead of positizzle infinity.
.\" FIXME .
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6814
.\" e.g., expm1(1e5) all up in expm1(1.00199970127e5),
.\" but not expm1(1.00199970128e5) n' beyond.

Before version 2.11,
.\" It be lookin like tha fix was up in 2.11, or possibly 2.12.
.\" I have no test system fo' 2.11 yo, but 2.12 passes.
.\" From tha source (sysdeps/i386/fpu/s_expm1.S) it looks
.\" like tha chizzlez was up in 2.11.
the glibc implementation did not set
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6788
.I errno
to
.B ERANGE
when a range error occurred.
.SH SEE ALSO
.BR exp (3),
.BR log (3),
.BR log1p (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
