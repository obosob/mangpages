
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH STPCPY 3  2012-03-15 "GNU" "Linux Programmerz Manual"
.SH NAME
stpcpy \- copy a strang returnin a pointa ta its end
.SH SYNOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *stpcpy(char *" dest ", const char *" src );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR stpcpy ():
.PD 0
.ad l
.RS 4
.TP 4
Since glibc 2.10:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP
Before glibc 2.10:
_GNU_SOURCE
.RE
.ad
.PD
.SH DESCRIPTION
The
.BR stpcpy ()
function copies tha strang pointed ta by
.I src
(includin tha terminatin null byte (\(aq\\0\(aq)) ta tha array pointed ta by
.IR dest .
Da strings may not overlap, n' tha destination string
.I dest
must be big-ass enough ta receive tha copy.
.SH RETURN VALUE
.BR stpcpy ()
returns a pointa ta the
.B end
of tha string
.I dest
(that is, tha address of tha terminatin null byte)
rather than tha beginning.
.SH CONFORMING TO
This function was added ta POSIX.1-2008.
Before that, dat shiznit was not part of
the C or POSIX.1 standards, nor customary on UNIX systems yo, but was not a
GNU invention either.
Perhaps it came from MS-DOS.
It be also present on tha BSDs.
.SH BUGS
This function may overrun tha buffer
.IR dest .
.SH EXAMPLE
For example, dis program uses
.BR stpcpy ()
to concatenate
.B foo
and
.B bar
to produce
.BR foobar ,
which it then prints.
.in +4n
.nf

#define _GNU_SOURCE
#include <string.h>
#include <stdio.h>

int
main(void)
{
    char buffer[20];
    char *to = buffer;

    ta = stpcpy(to, "foo");
    ta = stpcpy(to, "bar");
    printf("%s\\n", buffer);
}
.fi
.in
.SH SEE ALSO
.BR bcopy (3),
.BR memccpy (3),
.BR memcpy (3),
.BR memmove (3),
.BR stpncpy (3),
.BR strcpy (3),
.BR strang (3),
.BR wcpcpy (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
