'\" t
.\"     Title: xiselectevents
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XISELECTEVENTS" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XISelectEvents, XIGetSelectedEvents \- select fo' or git selected XI2 events on tha window\&.
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput2\&.h>
.fi
.sp
.nf
Status XISelectEvents( Display *display,
                       Window win,
                       XIEventMask *masks,
                       int num_masks);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
masks
       Device event mask\&.
.fi
.sp
.nf
num_masks
       Number of masks up in masks\&.
.fi
.sp
.nf
win
       Specifies tha window\&.
.fi
.sp
.nf
XIEventMask *XIGetSelectedEvents( Display *display,
                                  Window win,
                                  int *num_masks_return);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
num_masks_return
       Number of masks up in tha return value\&.
.fi
.sp
.nf
win
       Specifies tha window\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
XI2 events must be selected rockin XISelectEvents\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XISelectEvents sets tha event mask fo' dis client on win\&.
Further events is only reported ta dis client if tha event
type matches tha selected event mask\&. Da masks overrides the
previously selected event mask fo' tha given device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
If deviceid be a valid device, tha event mask is selected only
for dis device\&. If deviceid is XIAllDevices or
XIAllMasterDevices, tha event mask is selected fo' all devices
or all masta devices, respectively\&. Da effectizzle event mask
is tha bit\-wise OR of tha XIAllDevices, XIAllMasterDevices and
the respectizzle device\*(Aqs event mask\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    int deviceid;
    int mask_len;
    unsigned char* mask;
} XIEventMask;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da mask_len specifies tha length of mask up in bytes\&. mask be a
binary mask up in tha form of (1 << event type)\&. deviceid must be
either a thang or XIAllDevices or XIAllMasterDevices\& fo' realz. A client
may submit nuff muthafuckin masks wit tha same deviceid up in one request
but only tha last mask is ghon be effective\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XISelectEvents can generate a BadValue, a BadDevice, n' a
BadWindow error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XIGetSelectedEvents returns tha events selected by dis client on tha given
window\&. If no events was selected on dis window, XIGetSelectedEvents
returns NULL n' num_masks_return is set ta 0\&. If a internal error occurs,
XIGetSelectedEvents returns NULL n' num_masks_return is set ta \-1\&.
Otherwise, XIGetSelectedEvent returns tha selected event masks fo' all
devices includin tha masks fo' XIAllDevices n' XIAllMasterDevices
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da calla must free tha returned data rockin XFree()\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       A value is outside of tha permitted range\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadWindow
       A value fo' a Window argument do not name a thugged-out defined
       window\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da thang do not
       exist\&.
.fi
.if n \{\
.RE
.\}
