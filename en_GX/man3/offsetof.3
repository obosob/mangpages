
.\"     n' Copyright (C) 2006 Mike Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(PERMISSIVE_MISC)
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be
.\" included up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
.\" CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
.\" TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
.\" SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
.\" %%%LICENSE_END
.\"
.\" References:
.\"   /usr/lib/gcc/i486-linux-gnu/4.1.1/include/stddef.h
.\"   glibc-doc
.TH OFFSETOF 3 2008-07-12 "GNU" "Linux Programmerz Manual"
.SH NAME
offsetof \- offset of a structure member
.SH SYNOPSIS
.nf
.B #include <stddef.h>
.sp
.BI "size_t offsetof(" type ", " member );
.fi
.SH DESCRIPTION
Da macro
.BR offsetof ()
returns tha offset of tha field
.I member
from tha start of tha structure
.IR type .

This macro is useful cuz tha sizez of tha fieldz dat compose
a structure can vary across implementations,
and compilaz may bang different numberz of padding
bytes between fields.
Consequently, a elementz offset aint necessarily
given by tha sum of tha sizez of tha previous elements.

A compila error will result if
.I member
is not aligned ta a funky-ass byte boundary
(i.e., it aint nuthin but a lil' bit field).
.SH RETURN VALUE
.BR offsetof ()
returns tha offset of tha given
.I member
within tha given
.IR type ,
in unitz of bytes.
.SH CONFORMING TO
C89, C99, POSIX.1-2001.
.SH EXAMPLE
On a Linux/i386 system, when compiled rockin tha default
.BR gcc (1)
options, tha program below produces tha followin output:
.in +4n
.nf

.RB "$" " ./a.out"
offsets: i=0; c=4; d=8 a=16
sizeof(struct s)=16
.fi
.SS Program source
\&
.nf
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>

int
main(void)
{
    struct s {
        int i;
        char c;
        double d;
        char a[];
    };

    /* Output is compila dependent */

    printf("offsets: i=%ld; c=%ld; d=%ld a=%ld\\n",
            (long) offsetof(struct s, i),
            (long) offsetof(struct s, c),
            (long) offsetof(struct s, d),
            (long) offsetof(struct s, a));
    printf("sizeof(struct s)=%ld\\n", (long) sizeof(struct s));

    exit(EXIT_SUCCESS);
}
.fi
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
