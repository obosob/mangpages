'\" t
.\"     Title: glGetActiveAtomicCounterBufferiv
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETACTIVEATOMICCOU" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetActiveAtomicCounterBufferiv \- retrieve shiznit bout tha set of actizzle atomic counta buffers fo' a program
.SH "C SPECIFICATION"
.HP \w'void\ glGetActiveAtomicCounterBufferiv('u
.BI "void glGetActiveAtomicCounterBufferiv(Gluint\ " "program" ", GLuint\ " "bufferIndex" ", GLenum\ " "pname" ", GLint\ *" "params" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Da name of a program object from which ta retrieve shiznit\&.
.RE
.PP
\fIbufferIndex\fR
.RS 4
Specifies index of a actizzle atomic counta buffer\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies which parameta of tha atomic counta buffer ta retrieve\&.
.RE
.PP
\fIparams\fR
.RS 4
Specifies tha address of a variable tha fuck into which ta write tha retrieved shiznit\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetActiveAtomicCounterBufferiv\fR
retrieves shiznit bout tha set of actizzle atomic counta buffers fo' a program object\&.
\fIprogram\fR
is tha name of a program object fo' which tha command
\fBglLinkProgram\fR()
has been issued up in tha past\&. Well shiiiit, it aint necessary for
\fIprogram\fR
to done been linked successfully\&. Da link may have failed cuz tha number of actizzle atomic countas exceeded tha limits\&.
.PP
\fIbufferIndex\fR
specifies tha index of a actizzle atomic counta buffer n' must be up in tha range zero ta tha value of
\fBGL_ACTIVE_ATOMIC_COUNTER_BUFFERS\fR
minus one\&. Da value of
\fBGL_ACTIVE_ATOMIC_COUNTER_BUFFERS\fR
for
\fIprogram\fR
indicates tha number of actizzle atomic counta buffer n' can be queried with
\fBglGetProgram\fR()\&.
.PP
If no error occurs, tha parameter(s) specified by
\fIpname\fR
are returned in
\fIparams\fR\&. If a error is generated, tha contents of
\fIparams\fR
are not modified\&.
.PP
If
\fIpname\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER_BINDING\fR, then tha index of tha counta buffer bindin point associated wit tha actizzle atomic counta buffer
\fIbufferIndex\fR
for
\fIprogram\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER_DATA_SIZE\fR, then tha implementation\-dependent minimum total buffer object size, up in baseic machine units, required ta hold all actizzle atomic countas up in tha atomic counta bindin point identified by
\fIbufferIndex\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS\fR, then tha number of actizzle atomic countas fo' tha atomic counta buffer identified by
\fIbufferIndex\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES\fR, then a list of tha actizzle atomic counta indices fo' tha atomic counta buffer identified by
\fIbufferIndex\fR
is returned\&. Da number of elements dat is ghon be freestyled into
\fIparams\fR
is tha value of
\fBGL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS\fR
for
\fIbufferIndex\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER\fR
then a funky-ass boolean value indicatin whether tha atomic counta buffer identified by
\fIbufferIndex\fR
is referenced by tha vertex, tessellation control, tessellation evaluation, geometry, fragment or compute processin stages of
\fIprogram\fR, respectively, is returned\&.
.SH "NOTES"
.PP
\fBglGetActiveAtomicCounterBufferiv\fR
is available only if tha GL version is 4\&.2 or higher\&.
.PP
\fBGL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER\fR
is available only of tha GL version is 4\&.3 or higher\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIprogram\fR
is not tha name of a program object fo' which
\fBglLinkProgram\fR()
has been called up in tha past\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIbufferIndex\fR
is pimped outa than or equal ta tha value of
\fBGL_ACTIVE_ATOMIC_COUNTER_BUFFERS\fR
for
\fIprogram\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIpname\fR
is not one of tha accepted tokens\&.
.SH "SEE ALSO"
.PP
\fBglGetProgram\fR(),
\fBglGetActiveSubroutineUniform\fR(),
\fBglGetActiveSubroutineUniformName\fR(),
\fBglGetUniformLocation\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2011 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
