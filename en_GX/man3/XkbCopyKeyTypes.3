.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbCopyKeyTypes 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbCopyKeyTypes \- Copy mo' than one XkbKeyTypeRec structure
.SH SYNOPSIS
.HP
.B Status XkbCopyKeyTypes
.BI "(\^XkbKeyTypePtr " "from" "\^,"
.BI "XkbKeyTypePtr " "into" "\^,"
.BI "int " "num_types" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- from
pointa ta array of XkbKeyTypeRecs ta copy
.TP
.I \- into
pointa ta array of XkbKeyTypeRecs ta chizzle
.TP
.I \- num_types
number of types ta copy
.SH DESCRIPTION
.LP
.I XkbCopyKeyTypes 
copies 
.I num_types 
XkbKeyTypeRec structures from tha array specified by 
.I from 
into tha array specified by 
.I into. 
It be intended fo' copyin between, rather than within, keyboard descriptions, 
so it 
doesn't check fo' overlaps. Da same rulez dat apply ta tha 
.I from 
and 
.I tha fuck into 
parametas up in 
.I XkbCopyKeyType 
apply ta each entry of tha 
.I from 
and 
.I tha fuck into 
arrayz of 
.I XkbCopyKeyTypes. 
If any allocation errors occur while copyin 
.I from 
to 
.I into, XkbCopyKeyTypes 
returns BadAlloc. Otherwise, 
.I XkbCopyKeyTypes 
copies 
.I from 
to 
.I tha fuck into 
and returns Success.
.SH "RETURN VALUES"
.TP 15
Success
Da XkbCopyKeyTypes function returns Success when there be no allocation 
errors.
.SH STRUCTURES
.LP
Key types is used ta determine tha shift level of a key given tha current state 
of tha 
keyboard. Y'all KNOW dat shit, muthafucka! Da set of all possible key types fo' tha Xkb keyboard description is 
held up in 
the
.I types 
field of tha client map, whose total size is stored up in 
.I size_types, 
and whose total number of valid entries is stored up in 
.I num_types. 
Key types is defined rockin tha followin structure:
.nf

typedef struct {                   /\(** Key Type */
    XkbModsRec        mods;        /\(** modifiers used ta compute shift level */
    unsigned char     num_levels;  /\(** total # shift levels, do not modify 
directly */
    unsigned char     map_count;   /\(** # entries up in map, preserve (if non-NULL) 
*/
    XkbKTMapEntryPtr  map;         /\(** vector of modifiers fo' each shift level 
*/
    XkbModsPtr        preserve;    /\(** modz ta preserve fo' correspondin map 
entry */
    Atom              name;        /\(** name of key type */
    Atom *            level_names; /\(** array of namez of each shift level */
} XkbKeyTypeRec, *XkbKeyTypePtr;
.fi
.SH DIAGNOSTICS
.TP 15
.B BadAlloc
Unable ta allocate storage
.SH "SEE ALSO"
.BR XkbCopyKeyType (3)
