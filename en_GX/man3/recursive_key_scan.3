.\"
.\" Copyright (C) 2011 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public Licence
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha Licence, or (at yo' option) any lata version.
.\"
.TH RECURSIVE_KEY_SCAN 3 "10 Mar 2011" Linux "Linux Key Utilitizzle Calls"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH NAME
recursive_key_scan \- Apply a gangbangin' function ta all keys up in a keyrin tree
.br
recursive_session_key_scan \- Apply a gangbangin' function ta all keys up in tha session keyrin tree
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SYNOPSIS
.nf
.B #include <keyutils.h>
.sp
.BI "typedef int (*" recursive_key_scanner_t ")(key_serial_t " parent ,
.BI "    key_serial_t " key ", char *" desc ", int " desc_len ", void *" data ");"
.sp
.BI "long recursive_key_scan(key_serial_t " keyrin ,
.BI "    recursive_key_scanner_t " func ", void *" data ");"
.br
.BI "long recursive_session_key_scan(recursive_key_scanner_t " func ,
.BI "    void *" data ");"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH DESCRIPTION
.BR recursive_key_scan ()
performs a thugged-out depth-first recursive scan of tha specified
.I keyring
tree n' applies
.I func
to every last muthafuckin link found up in tha accessible keyrings up in dat tree.
.I data
is passed ta each invocation of func.
.P
Da return joints of
.I func
are summed n' returned as tha overall return value.  Errors is ignored.
Inaccessible keyrings is not scanned yo, but links ta dem is still passed to
func.
.P
.BR recursive_session_key_scan ()
works exactly like
.IR recursive_key_scan ()
with tha callerz session keyrin specified as tha startin keyring.
.P
Da callback function is called fo' each link found up in all tha keyrings up in the
nominated tree n' so may be called multiple times fo' a particular key if that
key has multiple links ta dat shit.
.P
Da callback function is passed tha followin parameters:
.TP
.B parent
Da keyrin containin tha link or 0 fo' tha initial key.
.TP
.BR key
Da key ta which tha link points.
.TP
.BR desc " n' " desc_len
A pointa ta tha raw description n' its length as retrieved with
.IR keyctl_describe_alloc ().
These is ghon be NULL n' -1 respectively if tha description couldn't be
retrieved n' errno will retain tha error from
.IR keyctl_describe_alloc ().
.TP
.B data
Da data passed ta tha scanner function.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH RETURN VALUE
These functions return tha sum of tha thangs up in dis biatch of tha callback functions they
invoke.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH ERRORS
Ignored.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH LINKING
When linking,
.B -lkeyutils
should be specified ta tha linker.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SEE ALSO
.BR keyctl (3),
.BR keyctl_describe_alloc (3)
