'\" t
.\"     Title: glTextureView
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLTEXTUREVIEW" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glTextureView \- initialize a texture as a thugged-out data aliaz of another texture\*(Aqs data store
.SH "C SPECIFICATION"
.HP \w'void\ glTextureView('u
.BI "void glTextureView(GLuint\ " "texture" ", GLenum\ " "target" ", GLuint\ " "origtexture" ", GLenum\ " "internalformat" ", GLuint\ " "minlevel" ", GLuint\ " "numlevels" ", GLuint\ " "minlayer" ", GLuint\ " "numlayers" ");"
.SH "PARAMETERS"
.PP
\fItexture\fR
.RS 4
Specifies tha texture object ta be initialized as a view\&.
.RE
.PP
\fItarget\fR
.RS 4
Specifies tha target ta be used fo' tha newly initialized texture\&.
.RE
.PP
\fIorigtexture\fR
.RS 4
Specifies tha name of a texture object of which ta cook up a view\&.
.RE
.PP
\fIinternalFormat\fR
.RS 4
Specifies tha internal format fo' tha newly pimped view\&.
.RE
.PP
\fIminlevel\fR
.RS 4
Specifies lowest level of detail of tha view\&.
.RE
.PP
\fInumlevels\fR
.RS 4
Specifies tha number of levelz of detail ta include up in tha view\&.
.RE
.PP
\fIminlayer\fR
.RS 4
Specifies tha index of tha straight-up original gangsta layer ta include up in tha view\&.
.RE
.PP
\fInumlayers\fR
.RS 4
Specifies tha number of layers ta include up in tha view\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglTextureView\fR
initializes a texture object as a alias, or view of another texture object, pluggin some or all of tha parent texture\*(Aqs data store wit tha initialized texture\&.
\fItexture\fR
specifies a name previously reserved by a successful call to
\fBglGenTextures\fR()
but dat has not yet been bound or given a target\&.
\fItarget\fR
specifies tha target fo' tha newly initialized texture n' must be compatible wit tha target of tha parent texture, given in
\fIorigtexture\fR
as specified up in tha followin table:
.TS
allbox tab(:);
cB cB.
T{
Original Gangsta Target
T}:T{
Compatible New Targets
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
\fBGL_TEXTURE_1D\fR
T}:T{
\fBGL_TEXTURE_1D\fR, \fBGL_TEXTURE_1D_ARRAY\fR
T}
T{
\fBGL_TEXTURE_2D\fR
T}:T{
\fBGL_TEXTURE_2D\fR, \fBGL_TEXTURE_2D_ARRAY\fR
T}
T{
\fBGL_TEXTURE_3D\fR
T}:T{
\fBGL_TEXTURE_3D\fR
T}
T{
\fBGL_TEXTURE_CUBE_MAP\fR
T}:T{
\fBGL_TEXTURE_CUBE_MAP\fR, \fBGL_TEXTURE_2D\fR, \fBGL_TEXTURE_2D_ARRAY\fR, \fBGL_TEXTUER_CUBE_MAP_ARRAY\fR
T}
T{
\fBGL_TEXTURE_RECTANGLE\fR
T}:T{
\fBGL_TEXTURE_RECTANGLE\fR
T}
T{
\fBGL_TEXTURE_BUFFER\fR
T}:T{
\fInone\fR
T}
T{
\fBGL_TEXTURE_1D_ARRAY\fR
T}:T{
\fBGL_TEXTURE_1D\fR, \fBGL_TEXTURE_1D_ARRAY\fR
T}
T{
\fBGL_TEXTURE_2D_ARRAY\fR
T}:T{
\fBGL_TEXTURE_2D\fR, \fBGL_TEXTURE_2D_ARRAY\fR
T}
T{
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR
T}:T{
\fBGL_TEXTURE_CUBE_MAP\fR, \fBGL_TEXTURE_2D\fR, \fBGL_TEXTURE_2D_ARRAY\fR, \fBGL_TEXTUER_CUBE_MAP_ARRAY\fR
T}
T{
\fBGL_TEXTURE_2D_MULTISAMPLE\fR
T}:T{
\fBGL_TEXTURE_2D_MULTISAMPLE\fR, \fBGL_TEXTURE_MULTISAMPLE_ARRAY\fR
T}
T{
\fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR
T}:T{
\fBGL_TEXTURE_2D_MULTISAMPLE\fR, \fBGL_TEXTURE_MULTISAMPLE_ARRAY\fR
T}
.TE
.sp 1
.PP
Da value of
\fBGL_TEXTURE_IMMUTABLE_FORMAT\fR
for
\fIorigtexture\fR
must be
\fBGL_TRUE\fR\& fo' realz. Afta initialization,
\fItexture\fR
inherits tha data store of tha parent texture,
\fIorigtexture\fR
and is usable as a aiiight texture object wit target
\fItarget\fR\&. Data up in tha shared store is reinterpreted wit tha freshly smoked up internal format specified by
\fIinternalformat\fR\&.
\fIinternalformat\fR
must be compatible wit tha internal format of tha parent texture as specified up in tha followin table:
.TS
allbox tab(:);
cB cB.
T{
Class
T}:T{
Internal Formats
T}
.T&
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l
l l.
T{
128\-bit
T}:T{
\fBGL_RGBA32F\fR, \fBGL_RGBA32UI\fR, \fBGL_RGBA32I\fR
T}
T{
96\-bit
T}:T{
\fBGL_RGB32F\fR, \fBGL_RGB32UI\fR, \fBGL_RGB32I\fR
T}
T{
64\-bit
T}:T{
\fBGL_RGBA16F\fR, \fBGL_RG32F\fR, \fBGL_RGBA16UI\fR,
                        \fBGL_RG32UI\fR, \fBGL_RGBA16I\fR, \fBGL_RG32I\fR, \fBGL_RGBA16\fR, \fBGL_RGBA16_SNORM\fR
T}
T{
48\-bit
T}:T{
\fBGL_RGB16\fR, \fBGL_RGB16_SNORM\fR, \fBGL_RGB16F\fR, \fBGL_RGB16UI\fR, \fBGL_RGB16I\fR
T}
T{
32\-bit
T}:T{
\fBGL_RG16F\fR, \fBGL_R11F_G11F_B10F\fR, \fBGL_R32F\fR, \fBGL_RGB10_A2UI\fR,
                                            \fBGL_RGBA8UI\fR, \fBGL_RG16UI\fR, \fBGL_R32UI\fR, \fBGL_RGBA8I\fR,
                                            \fBGL_RG16I\fR, \fBGL_R32I\fR, \fBGL_RGB10_A2\fR, \fBGL_RGBA8\fR,
                                            \fBGL_RG16\fR, \fBGL_RGBA8_SNORM\fR, \fBGL_RG16_SNORM\fR, \fBGL_SRGB8_ALPHA8\fR,
                                            \fBGL_RGB9_E5\fR
T}
T{
24\-bit
T}:T{
\fBGL_RGB8\fR, \fBGL_RGB8_SNORM\fR, \fBGL_SRGB8\fR,
                                            \fBGL_RGB8UI\fR, \fBGL_RGB8I\fR
T}
T{
16\-bit
T}:T{
\fBGL_R16F\fR, \fBGL_RG8UI\fR, \fBGL_R16UI\fR, \fBGL_RG8I\fR,
                                            \fBGL_R16I\fR, \fBGL_RG8\fR, \fBGL_R16\fR, \fBGL_RG8_SNORM\fR, \fBGL_R16_SNORM\fR
T}
T{
8\-bit
T}:T{
\fBGL_R8UI\fR, \fBGL_R8I\fR, \fBGL_R8\fR, \fBGL_R8_SNORM\fR
T}
T{
\fBGL_RGTC1_RED\fR
T}:T{
\fBGL_COMPRESSED_RED_RGTC1\fR, \fBGL_COMPRESSED_SIGNED_RED_RGTC1\fR
T}
T{
\fBGL_RGTC2_RG\fR
T}:T{
\fBGL_COMPRESSED_RG_RGTC2\fR, \fBGL_COMPRESSED_SIGNED_RG_RGTC2\fR
T}
T{
\fBGL_BPTC_UNORM\fR
T}:T{
\fBGL_COMPRESSED_RGBA_BPTC_UNORM\fR, \fBGL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM\fR
T}
T{
\fBGL_BPTC_FLOAT\fR
T}:T{
\fBGL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT\fR, \fBGL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT\fR
T}
.TE
.sp 1
.PP
If tha original gangsta texture be a array or has multiple mipmap levels, tha parameters
\fIminlayer\fR,
\fInumlayers\fR,
\fIminlevel\fR, and
\fInumlevels\fR
control which of dem slices n' levels is considered part of tha texture\&. The
\fIminlevel\fR
and
\fIminlayer\fR
parametas is relatizzle ta tha view of tha original gangsta texture\&. If
\fInumlayers\fR
or
\fInumlevels\fR
extend beyond tha original gangsta texture, they is clamped ta tha max extent of tha original gangsta texture\&.
.PP
If tha freshly smoked up texture\*(Aqs target is
\fBGL_TEXTURE_CUBE_MAP\fR, tha clamped
\fInumlayers\fR
must be equal ta 6\&. If tha freshly smoked up texture\*(Aqs target is
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR, then
\fInumlayers\fR
counts layer\-faces rather than layers, n' tha clamped
\fInumlayers\fR
must be a multiple of 6\&. If tha freshly smoked up texture\*(Aqs target is
\fBGL_TEXTURE_CUBE_MAP\fR
or
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR, tha width n' height of tha original gangsta texture\*(Aqs levels must be equal\&.
.PP
When tha original gangsta texture\*(Aqs target is
\fBGL_TEXTURE_CUBE_MAP\fR, tha layer parametas is interpreted up in tha same order as if it was a
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR
with 6 layer\-faces\&.
.PP
If
\fItarget\fR
is
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_RECTANGLE\fR, or
\fBGL_TEXTURE_2D_MULTISAMPLE\fR,
\fInumlayers\fR
must equal 1\&.
.PP
Da dimensionz of tha original gangsta texture must be less than or equal ta tha maximum supported dimensionz of tha freshly smoked up target\&. For example, if tha original gangsta texture has a
\fBGL_TEXTURE_2D_ARRAY\fR
target n' its width is pimped outa than
\fBGL_MAX_CUBE_MAP_TEXTURE_SIZE\fR, a error is ghon be generated if
\fBglTextureView\fR
is called ta create a
\fBGL_TEXTURE_CUBE_MAP\fR
view\&.
.PP
Texture commandz dat take a
\fIlevel\fR
or
\fIlayer\fR
parameter, such as
\fBglTexSubImage2D\fR(), interpret dat parameta ta be relatizzle ta tha view of tha texture\&. i\&.e\&. tha mipmap level of tha data store dat would be updated via
\fBTexSubImage2D\fR()
would be tha sum of
\fIlevel\fR
and tha value of
\fBGL_TEXTURE_VIEW_MIN_LEVEL\fR\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIminlayer\fR
or
\fIminlevel\fR
are larger than tha top billin layer or level of
\fIorigtexture\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItarget\fR
is not compatible wit tha target of
\fIorigtexture\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha dimensions of
\fIorigtexture\fR
are pimped outa than tha maximum supported dimensions for
\fItarget\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIinternalformat\fR
is not compatible wit tha internal format of
\fIorigtexture\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItexture\fR
has already been bound or otherwise given a target\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha value of
\fBGL_TEXTURE_IMMUTABLE_FORMAT\fR
for
\fIorigtexture\fR
is not
\fBGL_TRUE\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIorigtexture\fR
is not tha name of a existin texture object\&.
.PP
\fBGL_INVALID_VALUE\fR
is generaged if
\fItarget\fR
is
\fBGL_TEXTURE_CUBE_MAP\fR
and
\fInumlayers\fR
is not 6, or if
\fItarget\fR
is
\fBGL_TEXTURE_CUBE_MAP_ARRAY\fR
and
\fInumlayers\fR
is not a integer multiple of 6\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItarget\fR
is
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_RECTANGLE\fR, or
\fBGL_TEXTURE_2D_MULTISAMPLE\fR
and
\fInumlayers\fR
does not equal 1\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItexture\fR
zero or aint tha name of a texture previously returned from a successful call to
\fBglGenTextures\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglTexParameter\fR()
with arguments
\fBGL_TEXTURE_VIEW_MIN_LEVEL\fR,
\fBGL_TEXTURE_VIEW_NUM_LEVELS\fR,
\fBGL_TEXTURE_VIEW_MIN_LAYER\fR,
\fBGL_TEXTURE_VIEW_NUM_LAYERS\fR, or
\fBGL_TEXTURE_IMMUTABLE_LEVELS\fR\&.
.SH "SEE ALSO"
.PP
\fBglTexStorage1D\fR(),
\fBglTexStorage2D\fR(),
\fBglTexStorage3D\fR(),
\fBglGetTexParameter\fR()\&.
.SH "COPYRIGHT"
.PP
Copyright
\(co
2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
