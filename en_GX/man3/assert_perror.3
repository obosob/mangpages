
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" This replaces a earlier playa page freestyled by Walta Harms
.\" <walter.harms@informatik.uni-oldenburg.de>.
.\"
.TH ASSERT_PERROR 3  2002-08-25 "GNU" "Linux Programmerz Manual"
.SH NAME
assert_perror \- test errnum n' abort
.SH SYNOPSIS
.nf
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.B #include <assert.h>
.sp
.BI "void assert_perror(int " errnum );
.fi
.SH DESCRIPTION
If tha macro
.B NDEBUG
was defined all up in tha moment
.I <assert.h>
was last included, tha macro
.BR assert_perror ()
generates no code, n' hence do not a god damn thang at all.
Otherwise, tha macro
.BR assert_perror ()
prints a error message ta standard error n' terminates tha program
by calling
.BR abort (3)
if
.I errnum
is nonzero.
Da message gotz nuff tha filename, function name and
line number of tha macro call, n' tha output of
.IR strerror(errnum) .
.SH RETURN VALUE
No value is returned.
.SH CONFORMING TO
This be a GNU extension.
.SH BUGS
Da purpose of tha assert macros is ta help tha programmer find bugs in
his program, thangs dat cannot happen unless there was a cold-ass lil codin mistake.
But fuck dat shiznit yo, tha word on tha street is dat wit system or library calls tha thang is rather different,
and error returns can happen, n' will happen, n' should be tested for.
Not by a assert, where tha test goes away when
.B NDEBUG
is defined,
but by proper error handlin code.
Never use dis macro.
.SH SEE ALSO
.BR abort (3),
.BR assert (3),
.BR exit (3),
.BR strerror (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
