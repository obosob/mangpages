.\" Copyright (c) 2006, Mike Kerrisk (mtk.manpages@gmail.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH SOCKATMARK 3 2008-12-03 "Linux" "Linux Programmerz Manual"
.SH NAME
sockatmark \- determine whether socket be at out-of-band mark
.SH SYNOPSIS
.B #include <sys/socket.h>
.sp
.BI "int sockatmark(int " sockfd );
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR sockatmark ():
_POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600
.ad b
.SH DESCRIPTION
.BR sockatmark ()
returns a value indicatin whether or not tha socket referred
to by tha file descriptor
.I sockfd
is all up in tha out-of-band mark.
If tha socket be all up in tha mark, then 1 is returned;
if tha socket aint all up in tha mark, 0 is returned.
This function do not remove tha out-of-band mark.
.SH RETURN VALUE
A successful call to
.BR sockatmark ()
returns 1 if tha socket be all up in tha out-of-band mark, or 0 if it is not.
On error, \-1 is returned and
.I errno
is set ta indicate tha error.
.SH ERRORS
.TP
.B EBADF
.I sockfd
is not a valid file descriptor.
.TP
.B EINVAL
.\" POSIX.1 say ENOTTY fo' dis case
.I sockfd
is not a gangbangin' file descriptor ta which
.BR sockatmark ()
can be applied.
.SH VERSIONS
.BR sockatmark ()
was added ta glibc up in version 2.2.4.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
If
.BR sockatmark ()
returns 1, then tha out-of-band data can be read rockin the
.B MSG_OOB
flag of
.BR recv (2).

Out-of-band data is supported only on some stream socket protocols.

.BR sockatmark ()
can safely be called from a handlez fo' the
.B SIGURG
signal.

.BR sockatmark ()
is implemented rockin the
.B SIOCATMARK
.BR ioctl (2)
operation.
.SH BUGS
Prior ta glibc 2.4,
.BR sockatmark ()
did not work.
.SH EXAMPLE
Da followin code can be used afta receipt of a
.B SIGURG
signal ta read (and discard) all data up ta tha mark,
and then read tha byte of data all up in tha mark:
.nf

    char buf[BUF_LEN];
    char oobdata;
    int atmark, s;

    fo' (;;) {
        atmark = sockatmark(sockfd);
        if (atmark == \-1) {
            perror("sockatmark");
            break;
        }

        if (atmark)
            break;

        s = read(sockfd, buf, BUF_LEN) <= 0);
        if (s == \-1)
            perror("read");
        if (s <= 0)
            break;
    }

    if (atmark == 1) {
        if (recv(sockfd, &oobdata, 1, MSG_OOB) == \-1) {
            perror("recv");
            ...
        }
    }
.fi
.SH SEE ALSO
.BR fcntl (2),
.BR recv (2),
.BR bust (2),
.BR tcp (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
