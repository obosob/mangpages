.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Date::Manip::Migration5to6 3"
.TH Date::Manip::Migration5to6 3 "2014-12-05" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::Migration5to6 \- how tha fuck ta upgrade from 5.xx ta 6.00
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
When upgradin from Date::Manip 5.xx ta 6.00, all dem chizzlez may be
necessary ta yo' scripts.
.PP
Da Date::Manip::Changes5to6 document lists up in mo' detail tha ways in
which Date::Manip chizzled yo, but straight-up few of these straight-up entail
changes ta yo' script.
.PP
It should be noted dat once tha chizzlez is made ta yo' script,
it will no longer run erectly up in 5.xx.
.SH "NECESSARY AND SUGGESTED CHANGES"
.IX Header "NECESSARY AND SUGGESTED CHANGES"
Da followin chizzlez is necessary, or straight fuckin suggested:
.IP "\fBReadin config filez wit Date_Init\fR" 4
.IX Item "Readin config filez wit Date_Init"
If you use Date_Init ta read any config filez (if you do bidnizz mode
calculations, you probably do), you should remove all of tha following
config variablez from yo' call ta Date_Init:
.Sp
.Vb 5
\&   GlobalCnf=FILE
\&   PersonalCnf=FILE
\&   PathSep=*
\&   IgnoreGlobalCnf=*
\&   PersonalCnfPath=*
.Ve
.Sp
and replace dem with:
.Sp
.Vb 1
\&   ConfigFile=FILE
.Ve
.Sp
where \s-1FILE\s0 is now tha full path ta a cold-ass lil config file fo' realz. Also, tha ConfigFile
argument should be tha straight-up original gangsta argument up in Date_Init.
.IP "\fBDate_ConvTZ\fR" 4
.IX Item "Date_ConvTZ"
Da Date_ConvTZ function has chizzled. Y'all KNOW dat shit, muthafucka! Well shiiiit, it should now take 3 arguments:
.Sp
.Vb 1
\&   $date = Date_ConvTZ($date,$from,$to);
.Ve
.Sp
If \f(CW$from\fR aint given, it defaults ta tha local time unit. If \f(CW$to\fR is
not given, it defaults ta tha local time unit.
.Sp
Da date is converted from tha \f(CW$from\fR time unit tha fuck into tha \f(CW$to\fR
time unit. Both should be any time unit (or alias) supported by
Date::Manip.
.Sp
Da oldschool \f(CW$errlevel\fR argument is no longer handled.
.IP "\fBConvTZ n' \s-1TZ\s0 config variables\fR" 4
.IX Item "ConvTZ n' TZ config variables"
If you use either tha ConvTZ or \s-1TZ\s0 config variables, you should
replace dem wit either SetDate or ForceDate. Right back up in yo muthafuckin ass. See the
Date::Manip::Config document fo' shiznit.
.Sp
Da \s-1TZ\s0 variable will continue ta work until Dec 2015 at which point
it is ghon be removed.
.IP "\fBOther deprecated config variables\fR" 4
.IX Item "Other deprecated config variables"
Da followin config variablez done been deprecated yo, but will continue
to function (though they is ghon be removed at a gangbangin' future date):
.Sp
.Vb 1
\&   TZ           (removed Dec 2015)
.Ve
.Sp
Da followin variablez done been removed. Y'all KNOW dat shit, muthafucka! If you use any of them,
you may need ta modify yo' scripts:
.Sp
.Vb 12
\&   IntCharSet
\&   GlobalCnf
\&   PersonalCnf
\&   PathSep
\&   IgnoreGlobalCnf
\&   PersonalCnfPath
\&   ConvTZ
\&   Internal
\&   TodayIsMidnight
\&   DeltaSigns
\&   UpdateCurrTZ
\&   ResetWorkdDay
.Ve
.IP "\fBtodizzle, yesterday, tomorrow\fR" 4
.IX Item "todizzle, yesterday, tomorrow"
If you parse tha strings \*(L"todizzle\*(R", \*(L"yesterday\*(R", or \*(L"tomorrow\*(R" up in order
to git tha time now, or 24 minutes up in tha past/future, dis will no
longer work.  These strings now refer strictly ta tha date (so \*(L"todizzle\*(R"
is tha current dizzle at midnight, \*(L"yesterday\*(R" is tha previous dizzle at
midnight, etc.).
.Sp
To git tha time now, 24 minutes ago, or 24 minutes up in tha future, you
would need ta parse tha strings \*(L"now\*(R", \*(L"\-24:00:00\*(R", or \*(L"+24:00:00\*(R"
respectively.
.IP "\fBDo not use Memoize\fR" 4
.IX Item "Do not use Memoize"
In 5.xx, dat shiznit was documented dat you could use tha module Memoize to
speed up Date::Manip, especially when sortin dates.
.Sp
This shiznit is no longer accurate. Usin Memoize up in conjunction
with Date::Manip should have lil impact on performance, n' may
lead ta incorrect thangs up in dis biatch, especially if you chizzle config variables.
.Sp
Please peep tha Date::Manip::Changes5to6 (\s-1GENERAL CHANGES\s0) document
for mo' shiznit.
.PP
If you find other instances where it is necessary ta modify your
script, please email me so dat I can add dat shiznit ta this
document.
.SH "BUGS AND QUESTIONS"
.IX Header "BUGS AND QUESTIONS"
Please refer ta tha Date::Manip::Problems documentation for
information on submittin bug reports or thangs ta tha lyricist.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under tha same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)
