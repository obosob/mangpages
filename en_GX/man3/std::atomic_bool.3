.TH "std::atomic_bool" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::atomic_bool \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBstd::atomic< bool >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBatomic_bool\fP (const \fBatomic_bool\fP &)=delete"
.br
.ti -1c
.RI "constexpr \fBatomic_bool\fP (bool __i) noexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m1, \fBmemory_order\fP __m2) noexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m1, \fBmemory_order\fP __m2) volatilenoexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m=memory_order_seq_cst) noexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_strong\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m=memory_order_seq_cst) volatilenoexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m1, \fBmemory_order\fP __m2) noexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m1, \fBmemory_order\fP __m2) volatilenoexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m=memory_order_seq_cst) noexcept"
.br
.ti -1c
.RI "bool \fBcompare_exchange_weak\fP (bool &__i1, bool __i2, \fBmemory_order\fP __m=memory_order_seq_cst) volatilenoexcept"
.br
.ti -1c
.RI "bool \fBexchange\fP (bool __i, \fBmemory_order\fP __m=memory_order_seq_cst) noexcept"
.br
.ti -1c
.RI "bool \fBexchange\fP (bool __i, \fBmemory_order\fP __m=memory_order_seq_cst) volatilenoexcept"
.br
.ti -1c
.RI "bool \fBis_lock_free\fP () const noexcept"
.br
.ti -1c
.RI "bool \fBis_lock_free\fP () const volatilenoexcept"
.br
.ti -1c
.RI "bool \fBload\fP (\fBmemory_order\fP __m=memory_order_seq_cst) const noexcept"
.br
.ti -1c
.RI "bool \fBload\fP (\fBmemory_order\fP __m=memory_order_seq_cst) const volatilenoexcept"
.br
.ti -1c
.RI "\fBoperator bool\fP () const noexcept"
.br
.ti -1c
.RI "\fBoperator bool\fP () const volatilenoexcept"
.br
.ti -1c
.RI "\fBatomic_bool\fP & \fBoperator=\fP (const \fBatomic_bool\fP &)=delete"
.br
.ti -1c
.RI "\fBatomic_bool\fP & \fBoperator=\fP (const \fBatomic_bool\fP &) volatile=delete"
.br
.ti -1c
.RI "bool \fBoperator=\fP (bool __i) noexcept"
.br
.ti -1c
.RI "bool \fBoperator=\fP (bool __i) volatilenoexcept"
.br
.ti -1c
.RI "void \fBstore\fP (bool __i, \fBmemory_order\fP __m=memory_order_seq_cst) noexcept"
.br
.ti -1c
.RI "void \fBstore\fP (bool __i, \fBmemory_order\fP __m=memory_order_seq_cst) volatilenoexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 
atomic_bool 
.PP
Definizzle at line 54 of file atomic\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
