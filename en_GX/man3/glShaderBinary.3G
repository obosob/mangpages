'\" t
.\"     Title: glShaderBinary
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLSHADERBINARY" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glShaderBinary \- load pre\-compiled shader binaries
.SH "C SPECIFICATION"
.HP \w'void\ glShaderBinary('u
.BI "void glShaderBinary(GLsizei\ " "count" ", const\ GLuint\ *" "shaders" ", GLenum\ " "binaryFormat" ", const\ void\ *" "binary" ", GLsizei\ " "length" ");"
.SH "PARAMETERS"
.PP
\fIcount\fR
.RS 4
Specifies tha number of shader object handlez contained in
\fIshaders\fR\&.
.RE
.PP
\fIshaders\fR
.RS 4
Specifies tha address of a array of shader handlez tha fuck into which ta load pre\-compiled shader binaries\&.
.RE
.PP
\fIbinaryFormat\fR
.RS 4
Specifies tha format of tha shader binaries contained in
\fIbinary\fR\&.
.RE
.PP
\fIbinary\fR
.RS 4
Specifies tha address of a array of bytes containin pre\-compiled binary shader code\&.
.RE
.PP
\fIlength\fR
.RS 4
Specifies tha length of tha array whose address is given in
\fIbinary\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglShaderBinary\fR
loadz pre\-compiled shader binary code tha fuck into the
\fIcount\fR
shader objects whose handlez is given in
\fIshaders\fR\&.
\fIbinary\fR
points to
\fIlength\fR
bytez of binary shader code stored up in client memory\&.
\fIbinaryFormat\fR
specifies tha format of tha pre\-compiled code\&.
.PP
Da binary image contained in
\fIbinary\fR
will be decoded accordin ta tha extension justification definin tha specified
\fIbinaryFormat\fR
token\&. OpenGL do not define any specific binary formats yo, but it do provide a mechanizzle ta obtain token vaues fo' such formats provided by such extensions\&.
.PP
Dependin on tha typez of tha shader objects in
\fIshaders\fR,
\fBglShaderBinary\fR
will individually load binary vertex or fragment shaders, or load a executable binary dat gotz nuff a optimized pair of vertex n' fragment shadaz stored up in tha same binary\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_OPERATION\fR
is generated if mo' than one of tha handlez in
\fIshaders\fR
refers ta tha same shader object\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIbinaryFormat\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if tha data pointed ta by
\fIbinary\fR
does not match tha format specified by
\fIbinaryFormat\fR\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with parameter
\fBGL_NUM_SHADER_BINARY_FORMATS\fR\&.
.PP
\fBglGet\fR()
with parameter
\fBGL_SHADER_BINARY_FORMATS\fR\&.
.SH "SEE ALSO"
.PP
\fBglGetProgram\fR(),
\fBglGetProgramBinary\fR(),
\fBglProgramBinary\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
