'\" t
.\" Copyright 1999 Oracle and/or its affiliates fo' realz. All muthafuckin rights reserved.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbChangeControls 3 "libX11 1.6.1" "X Version 11" "XKB FUNCTIONS"
.SH NAME
XkbChangeControls \- Provides a gangbangin' flexible method fo' uppimpin tha controls up in a 
server ta match dem up in 
the chizzled keyboard description
.SH SYNOPSIS
.HP
.B Bool XkbChangeControls
.BI "(\^Display *" "dpy" "\^,"
.BI "XkbDescPtr " "xkb" "\^,"
.BI "XkbControlsChangesPtr " "changes" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- dpy
connection ta X server
.TP
.I \- xkb
keyboard description wit chizzled xkb->ctrls
.TP
.I \- chizzles
which partz of xkb->ctrls have chizzled
.SH DESCRIPTION
.LP
Da XkbControlsChangesRec structure allows applications ta track modifications 
to a XkbControlsRec 
structure n' thereby reduce tha amount of traffic busted ta tha server n' shit. Da same 
XkbControlsChangesRec 
structure may be used up in nuff muthafuckin successive modifications ta tha same 
XkbControlsRec structure, then 
subsequently used ta cause all of tha chizzles, n' only tha chizzles, ta be 
propagated ta tha server n' shit. 

Da 
.I chizzled_ctrls 
field be a mask specifyin which logical setz of data up in tha controls structure 
have been modified. Y'all KNOW dat shit, muthafucka! In 
this context, modified means 
.I set, 
that is, if a value is set ta tha same value it previously contained, it has 
still been modified, n' is 
noted as chizzled. Y'all KNOW dat shit, muthafucka! Valid joints fo' 
.I chizzled_ctrls 
are any combination of tha masks listed up in Table 1 dat have "ok" up in tha 
.I chizzled_ctrls 
column. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Settin a lil' bit implies tha correspondin data fieldz from tha "Relevant 
XkbControlsRec Data 
Fields" column up in Table 1 done been modified. Y'all KNOW dat shit, muthafucka! Da 
.I enabled_ctrls_changes 
field specifies which bits up in tha 
.I enabled_ctrls 
field have chizzled. Y'all KNOW dat shit, muthafucka! If tha number of keyboard crews has chizzled, tha 
.I num_groups_changed 
field is set ta True.

Table 1 shows tha actual joints fo' tha individual mask bits used ta select 
controls fo' 
modification n' ta enable n' disable tha control. Note dat tha same mask bit 
is used ta 
specify general modifications ta tha parametas used ta configure tha control 
(which), n' ta 
enable n' disable tha control (enabled_ctrls). Da anomalies up in tha table (no 
"ok" up in column) 
are fo' controls dat have no configurable attributes; n' fo' controls dat is 
not boolean 
controls n' therefore cannot be enabled or disabled.

.TS
c s s s s
l l l l l
l l l l l
l l l l l
l l l l l
lw(1.5i) lw(1.5i) l lw(1.5i) l.
Table 1 Xkb Controls
_
Control	Control
	Selection	Relevant
	Mask	XkbControlsRec	Boolean Control
	(which parameter)	DataFields	enabled_ctrls bit	Section
_	 
T{
AccessXFeedback
T}	T{
XkbAccessXFeedbackMask
T}	ax_options:	T{
XkbAccessXFeedbackMask
T}	10.6.3
		  XkbAX_*FBMask
T{
AccessXKeys
T}			T{
XkbAccessXKeysMask
T}	10.6.1
T{
AccessXTimeout
T}	T{
XkbAccessXTimeoutMask
T}	ax_timeout	T{
XkbAccessXTimeoutMask
T}	10.6.2
		axt_opts_mask
		axt_opts_values
		axt_ctrls_mask
		axt_ctrls_values
T{
AudibleBell
T}			T{
XkbAudibleBellMask
T}	9.2
T{
AutoReset
T}				10.1.2
T{
BounceKeys
T}	T{
XkbBounceKeysMask
T}	debounce_delay	T{
XkbBounceKeysMask
T}	10.6.7
T{
Detectable-
T}				10.3.3
T{
Autorepeat
T}
T{
EnabledControls
T}	T{
XkbControlsEnabledMask
T}	enabled_ctrls	T{
Non-Boolean Control
T}	10.1.1
T{
GroupsWrap
T}	T{
XkbGroupsWrapMask
T}	groups_wrap	T{
Non-Boolean Control
T}	10.7.1
T{
IgnoreGroupLock
T}			T{
XkbIgnoreGroupLockMask
T}	10.7.3
T{
IgnoreLockMods
T}	T{
XkbIgnoreLockModsMask
T}	ignore_lock	T{
Non-Boolean Control
T}	5.1
T{
InternalMods
T}	T{
XkbInternalModsMask
T}	internal	T{
Non-Boolean Control
T}	5.1
T{
MouseKeys
T}	T{
XkbMouseKeysMask
T}	mk_dflt_btn	T{
XkbMouseKeysMask
T}	10.5.1
T{
MouseKeysAccel
T}	T{
XkbMouseKeysAccelMask
T}	mk_delay	T{
XkbMouseKeysAccelMask
T}	10.5.2
		mk_interval
		mk_time_to_max
		mk_max_speed
		mk_curve
T{
Overlay1
T}			T{
XkbOverlay1Mask
T}	10.4
T{
Overlay2
T}			T{
XkbOverlay2Mask
T}	10.4
T{
PerKeyRepeat
T}	T{
XkbPerKeyRepeatMask
T}	per_key_repeat	T{
Non-Boolean Control
T}	10.3.1
T{
RepeatKeys
T}	T{
XkbRepeatKeysMask
T}	repeat_delay	T{
XkbRepeatKeysMask
T}	10.3
			repeat_interval
T{
SlowKeys
T}	T{
XkbSlowKeysMask
T}	slow_keys_delay	T{
XkbSlowKeysMask
T}	10.6.6
T{
StickyKeys
T}	T{
XkbStickyKeysMask
T}	ax_options:	T{
XkbStickyKeysMask
T}	10.6.8
		  XkbAX_TwoKeysMask
		  XkbAX_LatchToLockMask
.TE			  

Table 2 shows tha actual joints fo' tha individual mask bits used ta select 
controls fo' 
modification n' ta enable n' disable tha control. Note dat tha same mask bit 
is used ta 
specify general modifications ta tha parametas used ta configure tha control 
(which), n' ta 
enable n' disable tha control (enabled_ctrls). Da anomalies up in tha table (no 
"ok" up in column) 
are fo' controls dat have no configurable attributes; n' fo' controls dat is 
not boolean 
controls n' therefore cannot be enabled or disabled.

.TS
c s s s
l l l l
l l l l
l l l l. 
Table 2 Controls Mask Bits
_
Mask Bit	which or	enabled	Value
	changed_ctrls	_ctrls
_
XkbRepeatKeysMask	ok	ok	(1L<<0)
XkbSlowKeysMask	ok	ok	(1L<<1)
XkbBounceKeysMask	ok	ok	(1L<<2)
XkbStickyKeysMask	ok	ok	(1L<<3)
XkbMouseKeysMask	ok	ok	(1L<<4)
XkbMouseKeysAccelMask	ok	ok	(1L<<5)
XkbAccessXKeysMask	ok	ok	(1L<<6)
XkbAccessXTimeoutMask	ok	ok	(1L<<7)
XkbAccessXFeedbackMask	ok	ok	(1L<<8)
XkbAudibleBellMask		ok	(1L<<9)
XkbOverlay1Mask		ok	(1L<<10)
XkbOverlay2Mask		ok	(1L<<11)
XkbIgnoreGroupLockMask		ok	(1L<<12)
XkbGroupsWrapMask	ok		(1L<<27)
XkbInternalModsMask	ok		(1L<<28)
XkbIgnoreLockModsMask	ok		(1L<<29)
XkbPerKeyRepeatMask	ok		(1L<<30)
XkbControlsEnabledMask	ok		(1L<<31)
XkbAccessXOptionsMask	ok	ok	(XkbStickyKeysMask | 
			XkbAccessXFeedbackMask)
XkbAllBooleanCtrlsMask		ok	(0x00001FFF) 
XkbAllControlsMask	ok		(0xF8001FFF)
.TE




If you have a Xkb description wit controls dat done been modified n' a 
XkbControlsChangesRec dat 
raps bout tha chizzlez dat done been made, tha 
.I XkbChangeControls 
function serves up a gangbangin' flexible method fo' uppimpin tha controls up in a server ta 
match dem up in tha chizzled 
keyboard description.

.I XkbChangeControls 
copies any controls fieldz specified by 
.I chizzlez 
from tha keyboard description controls structure, 
.I xkb->ctrls, 
to tha server specified by 
.I dpy.
.SH STRUCTURES
.LP
Da XkbControlsChangesRec structure is defined as bigs up:
.nf

typedef struct _XkbControlsChanges {
    unsigned int  chizzled_ctrls;         /\(** bits indicatin chizzled control data 
*/
    unsigned int  enabled_ctrls_changes; /\(** bits indicatin enabled/disabled 
controls */
    Bool          num_groups_changed;    /\(** True if number of keyboard crews 
changed */
} XkbControlsChangesRec,*XkbControlsChangesPtr;

.fi
