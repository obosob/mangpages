'\" t
.\"     Title: glSampleCoverage
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLSAMPLECOVERAGE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glSampleCoverage \- specify multisample coverage parameters
.SH "C SPECIFICATION"
.HP \w'void\ glSampleCoverage('u
.BI "void glSampleCoverage(GLfloat\ " "value" ", GLboolean\ " "invert" ");"
.SH "PARAMETERS"
.PP
\fIvalue\fR
.RS 4
Specify a single floating\-point sample coverage value\&. Da value is clamped ta tha range
0 1\&. Da initial value is 1\&.0\&.
.RE
.PP
\fIinvert\fR
.RS 4
Specify a single boolean value representin if tha coverage masks should be inverted\&.
\fBGL_TRUE\fR
and
\fBGL_FALSE\fR
are accepted\&. Da initial value is
\fBGL_FALSE\fR\&.
.RE
.SH "DESCRIPTION"
.PP
Multisamplin samplez a pixel multiple times at various implementation\-dependent subpixel locations ta generate antialiasin effects\&. Multisamplin transparently antialiases points, lines, polygons, n' images if it is enabled\&.
.PP
\fIvalue\fR
is used up in constructin a temporary mask used up in determinin which samplez is ghon be used up in resolvin tha final fragment color\&. This mask is bitwise\-anded wit tha coverage mask generated from tha multisamplin computation\&. If the
\fIinvert\fR
flag is set, tha temporary mask is inverted (all bits flipped) n' then tha bitwise\-and is computed\&.
.PP
If a implementation aint gots any multisample buffers available, or multisamplin is disabled, rasterization occurs wit only a single sample computin a pixel\*(Aqs final RGB color\&.
.PP
Provided a implementation supports multisample buffers, n' multisamplin is enabled, then a pixel\*(Aqs final color is generated by combinin nuff muthafuckin samplez per pixel\&. Each sample gotz nuff color, depth, n' stencil shiznit, allowin dem operations ta be performed on each sample\&.
.SH "NOTES"
.PP
Da type of the
\fIvalue\fR
parameta was chizzled from GLclampf ta GLfloat\&. This chizzle is transparent ta user code n' is busted lyrics bout up in detail on the
\fBremovedTypes\fR()
page\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_SAMPLE_COVERAGE_VALUE\fR
.PP
\fBglGet\fR()
with argument
\fBGL_SAMPLE_COVERAGE_INVERT\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_MULTISAMPLE\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_SAMPLE_ALPHA_TO_COVERAGE\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_SAMPLE_ALPHA_TO_ONE\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_SAMPLE_COVERAGE\fR
.SH "SEE ALSO"
.PP
\fBglEnable\fR(),
\fBremovedTypes\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
