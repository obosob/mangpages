
.\" Based up in part on GNU libc documentation
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH GETLINE 3  2013-04-19 "GNU" "Linux Programmerz Manual"
.SH NAME
getline, getdelim \- delimited strang input
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.sp
.BI "ssize_t getline(char **" lineptr ", size_t *" n ", FILE *" stream );

.BI "ssize_t getdelim(char **" lineptr ", size_t *" n ", int " delim \
", FILE *" stream );
.fi
.sp
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.ad l
.BR getline (),
.BR getdelim ():
.PD 0
.RS 4
.TP 4
Since glibc 2.10:
_POSIX_C_SOURCE\ >=\ 200809L || _XOPEN_SOURCE\ >=\ 700
.TP
Before glibc 2.10:
_GNU_SOURCE
.RE
.PD
.ad
.SH DESCRIPTION
.BR getline ()
readz a entire line from \fIstream\fP,
storin tha address of tha buffer containin tha text into
.IR "*lineptr" .
Da buffer is null-terminated n' includes tha newline character, if
one was found.

If
.I "*lineptr"
is NULL, then
.BR getline ()
will allocate a funky-ass buffer fo' storin tha line,
which should be freed by tha user program.
(In dis case, tha value in
.I *n
is ignored.)

Alternatively, before calling
.BR getline (),
.I "*lineptr"
can contain a pointa ta a
.BR malloc (3)\-allocated
buffer
.I "*n"
bytes up in size.
If tha buffer aint big-ass enough ta hold tha line,
.BR getline ()
resizes it with
.BR realloc (3),
updating
.I "*lineptr"
and
.I "*n"
as necessary.

In either case, on a successful call,
.I "*lineptr"
and
.I "*n"
will be updated ta reflect tha buffer address n' allocated size respectively.

.BR getdelim ()
works like
.BR getline (),
except dat a line delimita other than newline can be specified as the
.I delimiter
argument.
As with
.BR getline (),
a delimita characta aint added if one was not present
in tha input before end of file was reached.
.SH RETURN VALUE
On success,
.BR getline ()
and
.BR getdelim ()
return tha number of charactas read, includin tha delimita character,
but not includin tha terminatin null byte (\(aq\\0\(aq).
This value can be used
to handle embedded null bytes up in tha line read.

Both functions return \-1 on failure ta read a line (includin end-of-file
condition).
In tha event of a error,
.I errno
is set ta indicate tha cause.
.SH ERRORS
.TP
.B EINVAL
Wack arguments
.RI ( n
or
.I lineptr
is NULL, or
.I stream
is not valid).
.SH VERSIONS
These functions is available since libc 4.6.27.
.SH CONFORMING TO
Both
.BR getline ()
and
.BR getdelim ()
were originally GNU extensions.
They was standardized up in POSIX.1-2008.
.SH EXAMPLE
.nf
#define _GNU_SOURCE
#include <stdio.h>
#include <stdlib.h>

int
main(void)
{
    FILE *fp;
    char *line = NULL;
    size_t len = 0;
    ssize_t read;

    fp = fopen("/etc/motd", "r");
    if (fp == NULL)
        exit(EXIT_FAILURE);

    while ((read = getline(&line, &len, fp)) != \-1) {
        printf("Retrieved line of length %zu :\en", read);
        printf("%s", line);
    }

    free(line);
    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.BR read (2),
.BR fgets (3),
.BR fopen (3),
.BR fread (3),
.BR gets (3),
.BR scanf (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
