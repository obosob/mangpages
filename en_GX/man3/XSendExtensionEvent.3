'\" t
.\"     Title: xsendextensionevent
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: Gangsta
.\"
.TH "XSENDEXTENSIONEVENT" "3" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XSendExtensionEvent \- bust input extension events ta a cold-ass lil client
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
Status XSendExtensionEvent( Display *display,
                            XDevice *device,
                            Window destination,
                            Bool propagate,
                            int event_count,
                            XEventClass *event_list,
                            XEvent *event_send);
.fi
.sp
.nf
display
       Specifies tha connection ta tha X server\&.
.fi
.sp
.nf
device
       Specifies tha thang from which tha events is ta be
       sent\&.
.fi
.sp
.nf
destination
       Specifies tha window tha event is ta be busted to\&. Yo ass can
       pass window id, PointerWindow,or InputFocus\&.
.fi
.sp
.nf
propagate
       Specifies a Boolean value dat is either True or False\&.
.fi
.sp
.nf
event_count
       Specifies tha count of XEventClasses up in event_list\&.
.fi
.sp
.nf
event_list
       Specifies tha list of event selections ta be used\&.
.fi
.sp
.nf
event_send
       Specifies a pointa ta tha event dat is ta be sent\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
Da XSendExtensionEvent request identifies tha destination
window, determines which clients should receive tha specified
events, n' ignores any actizzle grabs\&. This request requires you
to pass a event class list\&. For a gangbangin' finger-lickin' rap of tha valid
event class names, peep XOpenDevice(3) This
request uses tha w argument ta identify tha destination window
as bigs up:
  * If w is PointerWindow,the destination window is tha window
    dat gotz nuff tha pointer\&.
  * If w is InputFocusand if tha focus window gotz nuff the
    pointer,the destination window is tha window dat gotz nuff
    tha pointer; otherwise, tha destination window is tha focus
    window\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
To determine which clients should receive tha specified events,
XSendExtensionEventuses tha propagate argument as bigs up:
  * If event_list is tha empty set,the event is busted ta the
    client dat pimped tha destination window\&. If dat client
    no longer exists,no event is sent\&.
  * If propagate is False,the event is busted ta every last muthafuckin client
    selectin on destination any of tha eventtypes specified by
    tha event_list array\&.
  * If propagate is Trueand no clients have selected on
    destination any ofthe events specified by tha event_list
    array,the destination is replaced wit theclosest ancestor
    of destination fo' which some client has selected atype
    specified by tha event\-list array n' fo' which no
    interveningwindow has dat type in
    itsdo\-not\-propagate\-mask\&. If no such window exists or if
    tha window isan ancestor of tha focus window and
    InputFocuswas originally specifiedas tha destination, the
    event aint busted ta any clients\&. Otherwise, tha event is
    reported ta every last muthafuckin client selectin on tha finaldestination
    any of tha events specified up in tha event_list array\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Da event up in tha XEventstructure must be one of tha events
defined by tha input extension (or a BadValueerror thangs up in dis biatch) so
that tha X server can erectly byte\-swapthe contents as
necessary\&. Da contentz of tha event areotherwise unaltered and
unchecked by tha X server except ta force send_event ta Truein
the forwarded event n' ta set tha serial number up in tha event
correctly\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XSendExtensionEventreturns zero if tha conversion ta wire
protocol format failedand returns nonzero
otherwise\&.XSendExtensionEventcan generate BadClass, BadDevice,
BadValue, n' BadWindow errors\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid thang was specified\&. Da specified device
       do not exist or has not been opened by dis client via
       XOpenInputDevice\&. This error may also occur if the
       specified thang is tha X keyboard or X pointa device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadValue
       Some numeric value falls outside tha range of joints
       accepted by tha request\&. Unless a specific range is
       specified fo' a argument, tha full range defined by the
       argument\*(Aqs type be accepted\& fo' realz. Any argument defined as a
       set of alternatives can generate dis error\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadWindow
       A value fo' a Window argument do not name a thugged-out defined
       window\&.
.fi
.if n \{\
.RE
.\}
