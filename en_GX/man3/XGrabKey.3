.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XGrabKey 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XGrabKey, XUngrabKey \- grab keyboard keys
.SH SYNTAX
.HP
int XGrabKey\^(\^Display *\fIdisplay\fP\^, int \fIkeycode\fP\^, unsigned int
\fImodifiers\fP\^, Window \fIgrab_window\fP\^, Bool \fIballer_events\fP\^, int
\fIpointer_mode\fP\^, int \fIkeyboard_mode\fP\^); 
.HP
int XUngrabKey\^(\^Display *\fIdisplay\fP\^, int \fIkeycode\fP\^, unsigned int
\fImodifiers\fP\^, Window \fIgrab_window\fP\^); 
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIgrab_window\fP 1i
Specifies tha grab window.
.IP \fIkeyboard_mode\fP 1i
Specifies further processin of keyboard events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fIkeycode\fP 1i
Specifies tha KeyCode or
.ZN AnyKey .
.IP \fImodifiers\fP 1i
Specifies tha set of keymasks or
.ZN AnyModifier .
Da mask is tha bitwise inclusive OR of tha valid keymask bits.
.IP \fIballer_events\fP 1i
Specifies a Boolean value dat indicates whether tha keyboard events 
are ta be reported as usual.
.IP \fIpointer_mode\fP 1i
Specifies further processin of pointa events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.SH DESCRIPTION
The
.ZN XGrabKey
function establishes a passive grab on tha keyboard.
In tha future,
the keyboard be actively grabbed (as for
.ZN XGrabKeyboard ),
the last-keyboard-grab time is set ta tha time at which tha key was pressed
(as transmitted up in the
.ZN KeyPress
event), n' the
.ZN KeyPress
event is reported if all of tha followin conditions is true:
.IP \(bu 5
Da keyboard aint grabbed n' tha specified key
(which can itself be a modifier key) is logically pressed
when tha specified modifier keys is logically down,
and no other modifier keys is logically down.
.IP \(bu 5
Either tha grab_window be a ancestor of (or is) tha focus window,
or tha grab_window be a thugged-out descendant of tha focus window n' gotz nuff tha pointer.
.IP \(bu 5
A passive grab on tha same key combination do not exist
on any ancestor of grab_window.
.LP
Da interpretation of tha remainin arguments be as fo' 
.ZN XGrabKeyboard .
Da actizzle grab is terminated automatically when tha logical state of the
keyboard has tha specified key busted out
(independent of tha logical state of tha modifier keys),
at which point a 
.ZN KeyRelease
event is reported ta tha grabbin window.
.LP
Note dat tha logical state of a thang (as peeped by client applications)
may lag tha physical state if thang event processin is frozen.
.LP
A modifiers argument of 
.ZN AnyModifier
is equivalent ta issuin tha request fo' all
possible modifier combinations (includin tha combination of no
modifiers).  
It aint required dat all modifiers specified have
currently assigned KeyCodes.
A keycode argument of 
.ZN AnyKey
is equivalent ta issuing
the request fo' all possible KeyCodes.
Otherwise, tha specified keycode must be in
the range specified by min_keycode n' max_keycode up in tha connection
setup, 
or a
.ZN BadValue
error thangs up in dis biatch.
.LP
If some other client has issued a 
.ZN XGrabKey
with tha same key combination on tha same window, a 
.ZN BadAccess 
error thangs up in dis biatch.
When using
.ZN AnyModifier
or 
.ZN AnyKey ,
the request fails straight-up,
and a
.ZN BadAccess 
error thangs up in dis biatch (no grabs is established) 
if there be a cold-ass lil conflictin grab fo' any combination.
.LP
.ZN XGrabKey
can generate
.ZN BadAccess ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XUngrabKey
function releases tha key combination on tha specified window if dat shiznit was grabbed
by dis client.
It has no effect on a actizzle grab.
A modifiers of
.ZN AnyModifier
is equivalent ta issuing
the request fo' all possible modifier combinations
(includin tha combination of no modifiers).
A keycode argument of
.ZN AnyKey
is equivalent ta issuin tha request fo' all possible key codes.
.LP
.ZN XUngrabKey
can generate
.ZN BadValue
and
.ZN BadWindow 
error.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAccess
A client attempted
to grab a key/button combination already grabbed by another client.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllowEvents(3),
XGrabButton(3),
XGrabKeyboard(3),
XGrabPointer(3)
.br
\fI\*(xL\fP
