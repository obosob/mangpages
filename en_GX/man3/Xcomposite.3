'\" t
.\"     Title: Xcomposite
.\"    Author: Keith Packard <keithp@keithp.com>
.\" Generator: DocBook XSL Stylesheets vsnapshot_9276 <http://docbook.sf.net/>
.\"      Date: <pubdate>23 April 2007</pubdate>
.\"    Manual: X Composite Extension Library
.\"    Source: "libXcomposite 0.4.4" "X Version 11"
.\"  Language: Gangsta
.\"
.TH "XCOMPOSITE" "3" "<pubdate>23 April 2007</pubdate>" ""libXcomposite 0.4.4" "X Version 11"" "X Composite Extension Library"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
Xcomposite \- X Composite Extension library
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <X11/extensions/Xcomposite\&.h>
.fi
.ft
.HP \w'Bool\ XCompositeQueryExtension('u
.BI "Bool XCompositeQueryExtension(Display\ *" "dpy" ", int\ *" "event_base_return" ", int\ *" "error_base_return" ");"
.HP \w'Status\ XCompositeQueryVersion('u
.BI "Status XCompositeQueryVersion(Display\ *" "dpy" ", int\ *" "major_version_return" ", int\ *" "minor_version_return" ");"
.HP \w'int\ XCompositeVersion('u
.BI "int XCompositeVersion(void);"
.HP \w'void\ XCompositeRedirectWindow('u
.BI "void XCompositeRedirectWindow(Display\ *" "dpy" ", Window\ " "window" ", int\ " "update" ");"
.HP \w'void\ XCompositeRedirectSubwindows('u
.BI "void XCompositeRedirectSubwindows(Display\ *" "dpy" ", Window\ " "window" ", int\ " "update" ");"
.HP \w'void\ XCompositeUnredirectWindow('u
.BI "void XCompositeUnredirectWindow(Display\ *" "dpy" ", Window\ " "window" ", int\ " "update" ");"
.HP \w'void\ XCompositeUnredirectSubwindows('u
.BI "void XCompositeUnredirectSubwindows(Display\ *" "dpy" ", Window\ " "window" ", int\ " "update" ");"
.HP \w'XserverRegion\ XCompositeCreateRegionFromBorderClip('u
.BI "XserverRegion XCompositeCreateRegionFromBorderClip(Display\ *" "dpy" ", Window\ " "window" ");"
.HP \w'Pixmap\ XCompositeNameWindowPixmap('u
.BI "Pixmap XCompositeNameWindowPixmap(Display\ *" "dpy" ", Window\ " "window" ");"
.HP \w'Window\ XCompositeGetOverlayWindow('u
.BI "Window XCompositeGetOverlayWindow(Display\ *" "dpy" ", Window\ " "window" ");"
.HP \w'void\ XCompositeReleaseOverlayWindow('u
.BI "void XCompositeReleaseOverlayWindow(Display\ *" "dpy" ", Window\ " "window" ");"
.SH "DESCRIPTION"
.PP
Da composite extension serves up nuff muthafuckin related mechanisms:
.PP
Per\-hierarchy storage
.RS 4
Da renderin of a entire hierarchy of windows is repimped up ta off\-screen storage\&. Da pixelz of dat hierarchy is available whenever it is viewable\&. Right back up in yo muthafuckin ass. Storage be automatically reallocated when tha top level window chizzlez size\&. Contents beyond tha geometry of tha top window is not preserved\&.
.RE
.PP
Automatic shadow update
.RS 4
When a hierarchy is rendered off\-screen, tha X server serves up a automatic mechanizzle fo' presentin dem contents within tha parent window\&. Da implementation is free ta make dis update lag behind actual renderin operations by a unspecified amount of time\&. This automatic update mechanizzle may be disabled so dat tha parent window contents can be straight-up determined by a external application\&.
.RE
.PP
Composite Overlay Window
.RS 4
Version 0\&.3 of tha protocol addz tha Composite Overlay Window, which serves up compositin managers wit a surface on which ta draw without interference\&. This window be always above aiiight windows n' be always below tha screen saver window\&. Well shiiiit, it be a InputOutput window whose width n' height is tha screen dimensions\&. Its visual is tha root visual n' its border width is zero\& fo' realz. Attempts ta redirect it rockin tha composite extension is ignored\&. This window do not step tha fuck up in tha reply of tha QueryTree request\&. Well shiiiit, it be also a override redirect window\&. These last two features make it invisible ta window managers n' other X11 clients\&. Da only way ta access tha XID of dis window is via tha CompositeGetOverlayWindow request\&. Initially, tha Composite Overlay Window is unmapped\&.
.RE
.PP
Parent window clipping
.RS 4
Version 0\&.4 of tha protocol modifies tha semantics of parent window clippin up in tha presence of manual repimped up children\&. With dis version, tha area up in tha parent covered by manual repimped up lil pimps is left up in tha parent clip list instead of bein removed as up in olda versions\&.
.RE
.PP
Per\-hierarchy storage may be pimped fo' individual windows or fo' all lil pimpz of a window\&. Manual shadow update may be selected by only a single application fo' each window; manual update may also be selected on a per\-window basis or fo' each lil pimp of a window\&. Detectin when ta update may be done wit tha Damage extension\&.
.PP
Da off\-screen storage includes tha window contents, its bordaz n' tha contentz of all descendants\&.
.SH "ARGUMENTS"
.PP
.PP
\fIdisplay\fR
.RS 4
Pointa ta the
\fBDisplay\fR
structure returned from
\fBXOpenDisplay\fR
for tha connection ta tha X server\&.
.RE
.PP
\fIevent_base_return\fR
.RS 4
Pointa ta integer where tha base value fo' Composite Extension events is ghon be stored\&.
.RE
.PP
\fIerror_base_return\fR
.RS 4
Pointa ta integer where tha base value fo' Composite Extension errors is ghon be stored\&.
.RE
.PP
\fImajor_version_return\fR
.RS 4
Pointa ta integer where tha major version of tha Composite Extension supported by tha X server is ghon be stored\&.
.RE
.PP
\fIminor_version_return\fR
.RS 4
Pointa ta integer where tha minor version of tha Composite Extension supported by tha X server is ghon be stored\&.
.RE
.PP
\fIwindow\fR
.RS 4
Specifies tha window ID ta operate on\&.
.RE
.PP
\fIupdate\fR
.RS 4
Specifies tha mode fo' uppimpin tha window contents\&. Must be either
\fBCompositeRedirectAutomatic\fR
or
\fBCompositeRedirectManual\fR\&.
.RE
.SH "FUNCTIONS"
.PP
.PP
\fBXCompositeQueryExtension\fR
.RS 4

\fBXCompositeQueryExtension\fR
determines if tha Composite Extension be available on tha given display\&. Well shiiiit, it returns
\fBTrue\fR
if tha extension is supported, otherwise
\fBFalse\fR\&. If tha extension is present, tha base joints fo' events n' errors is returned, n' can be used ta decode incomin event n' error joints\&.
.RE
.PP
\fBXCompositeQueryVersion\fR
.RS 4

\fBXCompositeQueryVersion\fR
determines if tha X Server supports a version of tha X Composite Extension which is compatible wit tha client library\& fo' realz. A non\-zero Status is returned if a cold-ass lil compatible version of tha extension is supported, otherwise a zero Status is returned\&. If tha extension is supported, tha major n' minor version numbers is moonwalked back ta indicate tha level of Composite Extension support\&. No other XComposite functions (except XCompositeQueryExtension) may be called before dis function\&. If a cold-ass lil client violates dis rule, tha effectz of all subsequent XComposite calls dat it make is undefined\&.
.RE
.PP
\fBXCompositeVersion\fR
.RS 4

\fBXCompositeVersion\fR
returns tha version of tha X Composite library\&. Da version number is encoded as:
(major * 10000) + (minor * 100) + revision
.sp
For example, version 1\&.4\&.6 would be encoded as tha integer 10406\&.
.RE
.PP
\fBXCompositeRedirectWindow\fR
.RS 4

\fBXCompositeRedirectWindow\fR
requests tha X server ta direct tha hierarchy startin at
\fIwindow\fR
to off\-screen storage\&. The
\fIupdate\fR
argument specifies whether tha contents is mirrored ta tha parent window automatically or not\&. Only one client at a time may specify a update type of
\fBCompositeRedirectManual\fR, another attempt will result up in a
BadAccess
error\&. When all clients enablin redirection terminate, tha redirection will automatically be disabled\&.
.sp
Da root window may not be redirected\&. Bustin so thangs up in dis biatch up in a
BadMatch
error\&. Right back up in yo muthafuckin ass. Specifyin a invalid window id will result up in a
BadWindow
error\&.
.RE
.PP
\fBXCompositeRedirectSubwindows\fR
.RS 4

\fBXCompositeRedirectSubwindows\fR
requests tha X server ta redirect hierarchies startin at all current n' future lil pimps of
\fIwindow\fR
as in
\fBXCompositeRedirectWindow\fR\&. If
\fIupdate\fR
is
\fBCompositeRedirectManual\fR, then paintin of tha window background durin window manipulation n' ClearArea requests is inhibited\&.
.RE
.PP
\fBXCompositeUnredirectWindow\fR
.RS 4

\fBXCompositeUnredirectWindow\fR
requests tha X server ta terminizzle redirection of
\fIwindow\fR\&. If tha specified window was not selected fo' redirection by tha current client, a
BadValue
error thangs up in dis biatch\&.
.RE
.PP
\fBXCompositeUnredirectSubwindows\fR
.RS 4

\fBXCompositeUnredirectWindow\fR
requests tha X server ta terminizzle redirection of all lil pimps of
\fIwindow\fR\&. If tha specified window was not selected fo' sub\-redirection by tha current client, a
BadValue
error thangs up in dis biatch\&.
.RE
.PP
\fBXCompositeCreateRegionFromBorderClip\fR
.RS 4

\fBXCompositeCreateRegionFromBorderClip\fR
creates a region containin tha "usual" border clip value; dat is tha area of tha window clipped against siblings n' tha parent\&. This region can be used ta restrict renderin ta suitable areas while uppimpin only a single window\&. Da region is copied all up in tha moment tha request is executed; future chizzlez ta tha window hierarchy aint gonna be reflected up in dis region\&.
.RE
.PP
\fBXCompositeNameWindowPixmap\fR
.RS 4

\fBXCompositeNameWindowPixmap\fR
creates n' returns a pixmap id dat serves as a reference ta tha off\-screen storage for
\fIwindow\fR\&. This pixmap will remain allocated until freed, even if tha window is unmapped, reconfigured or destroyed\&. But fuck dat shiznit yo, tha word on tha street is dat tha window will git a freshly smoked up pixmap allocated each time it is mapped or resized, so dis function will need ta be reinvoked fo' tha client ta continue ta refer ta tha storage holdin tha current window contents\&. Generates a
BadMatch
error if
\fIwindow\fR
is not repimped up or aint visible\&.
.sp
Da X server must support at least version 0\&.2 of tha Composite Extension for
\fBXCompositeNameWindowPixmap\fR\&.
.RE
.PP
\fBXCompositeGetOverlayWindow\fR
.RS 4

\fBXCompositeGetOverlayWindow\fR
returns tha window ID of tha Composite Overlay Window fo' tha screen specified by tha argument
\fIwindow\fR\&. This function notifies tha X server dat tha client wishes ta use tha Composite Overlay Window of dis screen\&. If dis Composite Overlay Window has not yet been mapped, it is mapped by dis request\&.
.sp
Da Composite Overlay Window fo' a particular screen is ghon be unmapped when all clients whoz ass have called dis function have either called
\fBXCompositeReleaseOverlayWindow\fR
for dat screen, or terminated they connection ta tha X server\&.
.sp
Da X server must support at least version 0\&.3 of tha Composite Extension for
\fBXCompositeGetOverlayWindow\fR\&.
.RE
.PP
\fBXCompositeReleaseOverlayWindow\fR
.RS 4
This request specifies dat tha client is no longer rockin tha Composite Overlay Window on tha screen specified by tha argument
\fIwindow\fR\& fo' realz. A screen\*(Aqs Composite Overlay Window is unmapped when there be no longer any clients rockin it\&.
.sp
Da X server must support at least version 0\&.3 of tha Composite Extension for
\fBXCompositeReleaseOverlayWindow\fR\&.
.RE
.SH "AUTHORS"
.PP
\fBKeith Packard\fR <\&keithp@keithp\&.com\&>
.RS 4
Extension justification n' implementation
.RE
.PP
\fBDeron Johnson\fR <\&deron\&.johnson@sun\&.com\&>
.RS 4
Overlay Window justification n' implementation
.RE
