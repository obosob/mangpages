
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH POSIX_FALLOCATE 3  2013-02-12 "GNU" "Linux Programmerz Manual"
.SH NAME
posix_fallocate \- allocate file space
.SH SYNOPSIS
.nf
.B #include <fcntl.h>
.sp
.BI "int posix_fallocate(int " fd ", off_t " offset ", off_t " len );
.fi
.sp
.ad l
.in -4n
Feature Test Macro Requirements fo' glibc (see
.BR feature_test_macros (7)):
.in
.sp
.BR posix_fallocate ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _POSIX_C_SOURCE\ >=\ 200112L
.RE
.ad
.SH DESCRIPTION
Da function
.BR posix_fallocate ()
ensures dat disk space be allocated fo' tha file referred ta by the
descriptor
.I fd
for tha bytes up in tha range startin at
.I offset
and continuin for
.I len
bytes.
Afta a successful call to
.BR posix_fallocate (),
subsequent writes ta bytes up in tha specified range are
guaranteed not ta fail cuz of lack of disk space.

If tha size of tha file is less than
.IR offset + len ,
then tha file is increased ta dis size;
otherwise tha file size is left unchanged.
.SH RETURN VALUE
.BR posix_fallocate ()
returns zero on success, or a error number on failure.
Note that
.I errno
is not set.
.SH ERRORS
.TP
.B EBADF
.I fd
is not a valid file descriptor, or aint opened fo' writing.
.TP
.B ESTDG
.I offset+len
exceedz tha maximum file size.
.TP
.B EINVAL
.I offset
was less than 0, or
.I len
was less than or equal ta 0.
.TP
.B ENODEV
.I fd
does not refer ta a regular file.
.TP
.B ENOSPC
There aint enough space left on tha thang containin tha file
referred ta by
.IR fd .
.TP
.B ESPIPE
.I fd
refers ta a pipe.
.SH VERSIONS
.BR posix_fallocate ()
is available since glibc 2.1.94.
.SH CONFORMING TO
POSIX.1-2001.

POSIX.1-2008 say dat a implementation
.I shall
give the
.B EINVAL
error if
.I len
was 0, or
.I offset
was less than 0.
POSIX.1-2001 say dat a implementation
.I shall
give the
.B EINVAL
error if
.I len
is less than 0, or
.I offset
was less than 0, and
.I may
give tha error if
.I len
equals zero.
.SH SEE ALSO
.BR fallocate (1),
.BR fallocate (2),
.BR lseek (2),
.BR posix_fadvise (2)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
