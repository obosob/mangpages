
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code n' manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroupz Single UNIX justification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH WCSTOK 3  2011-09-28 "GNU" "Linux Programmerz Manual"
.SH NAME
wcstok \- split wide-characta strang tha fuck into tokens
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "wchar_t *wcstok(wchar_t *" wcs ", const wchar_t *" delim \
", wchar_t **" ptr );
.fi
.SH DESCRIPTION
The
.BR wcstok ()
function is tha wide-characta equivalent of the
.BR strtok (3)
function,
with a added argument ta make it multithread-safe.
It can be used
to split a wide-characta string
.I wcs
into tokens, where a token is
defined as a substrin not containin any wide-charactas from
.IR delim .
.PP
Da search starts at
.IR wcs ,
if
.I wcs
is not NULL,
or at
.IR *ptr ,
if
.I wcs
is NULL.
First, any delimita wide-charactas is skipped, dat is, the
pointa be advanced beyond any wide-charactas which occur in
.IR delim .
If tha end of tha wide-characta strang is now
reached,
.BR wcstok ()
returns NULL, ta indicate dat no tokens
were found, n' stores a appropriate value in
.IR *ptr ,
so dat subsequent calls to
.BR wcstok ()
will continue ta return NULL.
Otherwise, the
.BR wcstok ()
function recognizes tha beginnin of a token
and returns a pointa ta it yo, but before bustin that, it zero-terminates the
token by replacin tha next wide-characta which occurs in
.I delim
with
a null wide characta (L\(aq\\0\(aq),
and it thugged-out shit
.I *ptr
so dat subsequent calls will
continue searchin afta tha end of recognized token.
.SH RETURN VALUE
The
.BR wcstok ()
function returns a pointa ta tha next token,
or NULL if no further token was found.
.SH CONFORMING TO
C99.
.SH NOTES
Da original
.I wcs
wide-characta strang is destructively modified during
the operation.
.SH EXAMPLE
Da followin code loops over tha tokens contained up in a wide-characta string.
.sp
.nf
wchar_t *wcs = ...;
wchar_t *token;
wchar_t *state;
for (token = wcstok(wcs, " \\t\\n", &state);
    token != NULL;
    token = wcstok(NULL, " \\t\\n", &state)) {
    ...
}
.fi
.SH SEE ALSO
.BR strtok (3),
.BR wcschr (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
