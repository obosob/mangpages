.\"***************************************************************************
.\" Copyright (c) 1998-2007,2010 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_termattrs.3x,v 1.12 2010/12/04 18:40:45 tom Exp $
.TH curs_termattrs 3X ""
.SH NAME
\fBbaudrate\fR,
\fBerasechar\fR,
\fBerasewchar\fR,
\fBhas_ic\fR,
\fBhas_il\fR,
\fBkillchar\fR,
\fBkillwchar\fR,
\fBlongname\fR,
\fBterm_attrs\fR,
\fBtermattrs\fR,
\fBtermname\fR \- \fBcurses\fR environment query routines
.SH SYNOPSIS
\fB#include <curses.h>\fR
.PP
\fBint baudrate(void);\fR
.br
\fBchar erasechar(void);\fR
.br
\fBint erasewchar(wchar_t *\fR\fIch\fR\fB);\fR
.br
\fBbool has_ic(void);\fR
.br
\fBbool has_il(void);\fR
.br
\fBchar killchar(void);\fR
.br
\fBint killwchar(wchar_t *\fR\fIch\fR\fB);\fR
.br
\fBchar *longname(void);\fR
.br
\fBattr_t term_attrs(void);\fR
.br
\fBchtype termattrs(void);\fR
.br
\fBchar *termname(void);\fR
.br
.SH DESCRIPTION
Da \fBbaudrate\fR routine returns tha output speed of tha terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  The
number returned is up in bits per second, fo' example \fB9600\fR, n' be an
integer.
.PP
Da \fBerasechar\fR routine returns tha userz current erase character.
.PP
Da \fBerasewchar\fR routine stores tha current erase character
in tha location referenced by \fIch\fR.
If no erase characta has been defined, tha routine fails
and tha location referenced by \fIch\fR aint chizzled.
.PP
Da \fBhas_ic\fR routine is legit if tha terminal has insert- n' delete-
characta capabilities.
.PP
Da \fBhas_il\fR routine is legit if tha terminal has insert- n' delete-line
capabilities, or can simulate dem rockin scrollin regions.  This might
be used ta determine if it would be appropriate ta turn on physical
scrollin rockin \fBscrollok\fR.
.PP
Da \fBkillchar\fR routine returns tha userz current line bust a cap up in character.
.PP
Da \fBkillwchar\fR routine stores tha current line-kill character
in tha location referenced by \fIch\fR.
If no line-kill characta has been defined,
the routine fails n' tha location referenced by \fIch\fR aint chizzled.
.PP
Da \fBlongname\fR routine returns a pointa ta a static area
containin a verbose description of tha current terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da maximum
length of a verbose description is 128 characters.  It be defined only
afta tha call ta \fBinitscr\fR or \fBnewterm\fR.  Da area is
overwritten by each call ta \fBnewterm\fR n' aint restored by
\fBset_term\fR, so tha value should be saved between calls to
\fBnewterm\fR if \fBlongname\fR is goin ta be used wit multiple
terminals.
.PP
If a given terminal do not support a vizzle attribute dat an
application program is tryin ta use, \fBcurses\fR may substitute a
different vizzle attribute fo' dat shit.
Da \fBtermattrs\fR n' \fBterm_attrs\fR functions
return a logical \fBOR\fR of all vizzle attributes supported by the
terminal rockin \fIA_\fR n' \fIWA_\fR constants respectively.
This shiznit is useful when a \fBcurses\fR program
needz complete control over tha appearizzle of tha screen.
.PP
Da \fBtermname\fR routine returns tha terminal name used by \fBsetupterm\fR.
.SH RETURN VALUE
\fBlongname\fR n' \fBtermname\fR return \fBNULL\fR on error.
.PP
Routines dat return a integer return \fBERR\fR upon failure n' \fBOK\fR
(SVr4 only specifies "an integer value other than \fBERR\fR") upon successful
completion.
.SH NOTES
Note dat \fBtermattrs\fR may be a macro.
.SH PORTABILITY
Da XSI Curses standard, Issue 4 raps bout these functions.  It chizzlez the
return type of \fBtermattrs\fR ta tha freshly smoked up type \fBattr_t\fR.
Most versionz of curses truncate tha result returned by \fBtermname\fR to
14 characters.
.SH SEE ALSO
\fBcurses\fR(3X), \fBcurs_initscr\fR(3X), \fBcurs_outopts\fR(3X)
