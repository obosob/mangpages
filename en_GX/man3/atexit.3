.\" Copyright 1993 Dizzy Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewinez _POSIX Programmerz Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD playa pages
.\" Modified 1993-03-29, Dizzy Metcalfe
.\" Modified 1993-07-24, Rik Faith (faith@cs.unc.edu)
.\" Modified 2003-10-25, Walta Harms
.\"
.TH ATEXIT 3  2008-12-05 "Linux" "Linux Programmerz Manual"
.SH NAME
atexit \- regista a gangbangin' function ta be called at aiiight process termination
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int atexit(void (*" function )(void));
.fi
.SH DESCRIPTION
The
.BR atexit ()
function registas tha given
.I function
to be
called at aiiight process termination, either via
.BR exit (3)
or via return from tha program's
.IR main ().
Functions so registered is called in
the reverse order of they registration; no arguments is passed.

Da same function may be registered multiple times:
it is called once fo' each registration.
.LP
POSIX.1-2001 requires dat a implementation allow at least
.B ATEXIT_MAX
(32) such functions ta be registered.
Da actual limit supported by a implementation can be obtained using
.BR sysconf (3).
.LP
When a cold-ass lil lil pimp process is pimped via
.BR fork (2),
it inherits copiez of its parentz registrations.
Upon a successful call ta one of the
.BR exec (3)
functions,
all registrations is removed.
.SH RETURN VALUE
The
.BR atexit ()
function returns tha value 0 if successful; otherwise
it returns a nonzero value.
.SH CONFORMING TO
SVr4, 4.3BSD, C89, C99, POSIX.1-2001.
.SH NOTES
Functions registered using
.BR atexit ()
(and
.BR on_exit (3))
are not called if a process terminates abnormally cuz
of tha delivery of a signal.

If one of tha functions registered functions calls
.BR _exit (2),
then any remainin functions is not invoked,
and tha other process termination steps performed by
.BR exit (3)
are not performed.

POSIX.1-2001 say dat tha result of calling
.BR exit (3)
more than once (i.e., calling
.BR exit (3)
within a gangbangin' function registered using
.BR atexit ())
is undefined.
On some systems (but not Linux), dis can result up in a infinite recursion;
.\" This can happen on OpenBSD 4.2 fo' example, n' is documented
.\" as occurrin on FreeBSD as well.
.\" Glibc do "the Right Thing" -- invocation of tha remaining
.\" exit handlezs carries on as normal.
portable programs should not invoke
.BR exit (3)
inside a gangbangin' function registered using
.BR atexit ().

The
.BR atexit ()
and
.BR on_exit (3)
functions regista functions on tha same list:
at aiiight process termination,
the registered functions is invoked up in reverse order
of they registration by these two functions.

POSIX.1-2001 say dat tha result is undefined if
.BR longjmp (3)
is used ta terminizzle execution of one of tha functions registered
.BR atexit ().
.\" In glibc, thangs seem ta be handled aiiight
.SS Linux notes
Since glibc 2.2.3,
.BR atexit ()
(and
.BR on_exit (3))
can be used within a gangbangin' finger-lickin' dirty-ass shared library ta establish functions
that is called when tha shared library is unloaded.
.SH EXAMPLE
.nf
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

void
bye(void)
{
    printf("That was all, folks\en");
}

int
main(void)
{
    long a;
    int i;

    a = sysconf(_SC_ATEXIT_MAX);
    printf("ATEXIT_MAX = %ld\en", a);

    i = atexit(bye);
    if (i != 0) {
        fprintf(stderr, "cannot set exit function\en");
        exit(EXIT_FAILURE);
    }

    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.BR _exit (2),
.BR exit (3),
.BR on_exit (3)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
