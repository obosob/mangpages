'\" t
.\"     Title: glBufferData
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLBUFFERDATA" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBufferData \- creates n' initializes a funky-ass buffer object\*(Aqs data store
.SH "C SPECIFICATION"
.HP \w'void\ glBufferData('u
.BI "void glBufferData(GLenum\ " "target" ", GLsizeiptr\ " "size" ", const\ GLvoid\ *\ " "data" ", GLenum\ " "usage" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha target buffer object\&. Da symbolic constant must be
\fBGL_ARRAY_BUFFER\fR,
\fBGL_ATOMIC_COUNTER_BUFFER\fR,
\fBGL_COPY_READ_BUFFER\fR,
\fBGL_COPY_WRITE_BUFFER\fR,
\fBGL_DRAW_INDIRECT_BUFFER\fR,
\fBGL_DISPATCH_INDIRECT_BUFFER\fR,
\fBGL_ELEMENT_ARRAY_BUFFER\fR,
\fBGL_PIXEL_PACK_BUFFER\fR,
\fBGL_PIXEL_UNPACK_BUFFER\fR,
\fBGL_SHADER_STORAGE_BUFFER\fR,
\fBGL_TEXTURE_BUFFER\fR,
\fBGL_TRANSFORM_FEEDBACK_BUFFER\fR, or
\fBGL_UNIFORM_BUFFER\fR\&.
.RE
.PP
\fIsize\fR
.RS 4
Specifies tha size up in bytez of tha buffer object\*(Aqs freshly smoked up data store\&.
.RE
.PP
\fIdata\fR
.RS 4
Specifies a pointa ta data dat is ghon be copied tha fuck into tha data store fo' initialization, or
\fBNULL\fR
if no data is ta be copied\&.
.RE
.PP
\fIusage\fR
.RS 4
Specifies tha expected usage pattern of tha data store\&. Da symbolic constant must be
\fBGL_STREAM_DRAW\fR,
\fBGL_STREAM_READ\fR,
\fBGL_STREAM_COPY\fR,
\fBGL_STATIC_DRAW\fR,
\fBGL_STATIC_READ\fR,
\fBGL_STATIC_COPY\fR,
\fBGL_DYNAMIC_DRAW\fR,
\fBGL_DYNAMIC_READ\fR, or
\fBGL_DYNAMIC_COPY\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglBufferData\fR
creates a freshly smoked up data store fo' tha buffer object currently bound to
\fItarget\fR\& fo' realz. Any pre\-existin data store is deleted\&. Da freshly smoked up data store is pimped wit tha specified
\fIsize\fR
in bytes and
\fIusage\fR\&. If
\fIdata\fR
is not
\fBNULL\fR, tha data store is initialized wit data from dis pointer\&. In its initial state, tha freshly smoked up data store aint mapped, it has a
\fBNULL\fR
mapped pointer, n' its mapped access is
\fBGL_READ_WRITE\fR\&.
.PP
\fIusage\fR
is a hint ta tha GL implementation as ta how tha fuck a funky-ass buffer object\*(Aqs data store is ghon be accessed\&. This enablez tha GL implementation ta make mo' intelligent decisions dat may hella impact buffer object performance\&. Well shiiiit, it do not, however, constrain tha actual usage of tha data store\&.
\fIusage\fR
can be fucked up down tha fuck into two parts: first, tha frequency of access (modification n' usage), n' second, tha nature of dat access\&. Da frequency of access may be one of these:
.PP
STREAM
.RS 4
Da data store contents is ghon be modified once n' used at most all dem times\&.
.RE
.PP
STATIC
.RS 4
Da data store contents is ghon be modified once n' used nuff times\&.
.RE
.PP
DYNAMIC
.RS 4
Da data store contents is ghon be modified repeatedly n' used nuff times\&.
.RE
.PP
Da nature of access may be one of these:
.PP
DRAW
.RS 4
Da data store contents is modified by tha application, n' used as tha source fo' GL drawin n' image justification commands\&.
.RE
.PP
READ
.RS 4
Da data store contents is modified by readin data from tha GL, n' used ta return dat data when queried by tha application\&.
.RE
.PP
COPY
.RS 4
Da data store contents is modified by readin data from tha GL, n' used as tha source fo' GL drawin n' image justification commands\&.
.RE
.SH "NOTES"
.PP
If
\fIdata\fR
is
\fBNULL\fR, a thugged-out data store of tha specified size is still pimped yo, but its contents remain uninitialized n' thus undefined\&.
.PP
Clients must align data elements consistent wit tha requirementz of tha client platform, wit a additionizzle base\-level requirement dat a offset within a funky-ass buffer ta a thugged-out datum comprising
N bytes be a multiple of N\&.
.PP
The
\fBGL_ATOMIC_COUNTER_BUFFER\fR
target be available only if tha GL version is 4\&.2 or pimped outer\&.
.PP
The
\fBGL_DISPATCH_INDIRECT_BUFFER\fR
and
\fBGL_SHADER_STORAGE_BUFFER\fR
targets is available only if tha GL version is 4\&.3 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not one of tha accepted buffer targets\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIusage\fR
is not
\fBGL_STREAM_DRAW\fR,
\fBGL_STREAM_READ\fR,
\fBGL_STREAM_COPY\fR,
\fBGL_STATIC_DRAW\fR,
\fBGL_STATIC_READ\fR,
\fBGL_STATIC_COPY\fR,
\fBGL_DYNAMIC_DRAW\fR,
\fBGL_DYNAMIC_READ\fR, or
\fBGL_DYNAMIC_COPY\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIsize\fR
is negative\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if tha reserved buffer object name 0 is bound to
\fItarget\fR\&.
.PP
\fBGL_OUT_OF_MEMORY\fR
is generated if tha GL is unable ta create a thugged-out data store wit tha specified
\fIsize\fR\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetBufferSubData\fR()
.PP
\fBglGetBufferParameter\fR()
with argument
\fBGL_BUFFER_SIZE\fR
or
\fBGL_BUFFER_USAGE\fR
.SH "SEE ALSO"
.PP
\fBglBindBuffer\fR(),
\fBglBufferSubData\fR(),
\fBglMapBuffer\fR(),
\fBglUnmapBuffer\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2005 Addison\-Wesley\&. Copyright
\(co
2011\-2012 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
