'\" t
.\"     Title: glGetTexLevelParameter
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETTEXLEVELPARAMET" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetTexLevelParameta \- return texture parameta joints fo' a specific level of detail
.SH "C SPECIFICATION"
.HP \w'void\ glGetTexLevelParameterfv('u
.BI "void glGetTexLevelParameterfv(GLenum\ " "target" ", GLint\ " "level" ", GLenum\ " "pname" ", GLfloat\ *\ " "params" ");"
.HP \w'void\ glGetTexLevelParameteriv('u
.BI "void glGetTexLevelParameteriv(GLenum\ " "target" ", GLint\ " "level" ", GLenum\ " "pname" ", GLint\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Specifies tha symbolic name of tha target texture, one of
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_TEXTURE_1D_ARRAY\fR,
\fBGL_TEXTURE_2D_ARRAY\fR,
\fBGL_TEXTURE_RECTANGLE\fR,
\fBGL_TEXTURE_2D_MULTISAMPLE\fR,
\fBGL_TEXTURE_2D_MULTISAMPLE_ARRAY\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Z\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Z\fR,
\fBGL_PROXY_TEXTURE_1D\fR,
\fBGL_PROXY_TEXTURE_2D\fR,
\fBGL_PROXY_TEXTURE_3D\fR,
\fBGL_PROXY_TEXTURE_1D_ARRAY\fR,
\fBGL_PROXY_TEXTURE_2D_ARRAY\fR,
\fBGL_PROXY_TEXTURE_RECTANGLE\fR,
\fBGL_PROXY_TEXTURE_2D_MULTISAMPLE\fR,
\fBGL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY\fR,
\fBGL_PROXY_TEXTURE_CUBE_MAP\fR, or
\fBGL_TEXTURE_BUFFER\fR\&.
.RE
.PP
\fIlevel\fR
.RS 4
Specifies tha level\-of\-detail number of tha desired image\&. Level 0 is tha base image level\&. Level
n
is the
nth mipmap reduction image\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies tha symbolic name of a texture parameter\&.
\fBGL_TEXTURE_WIDTH\fR,
\fBGL_TEXTURE_HEIGHT\fR,
\fBGL_TEXTURE_DEPTH\fR,
\fBGL_TEXTURE_INTERNAL_FORMAT\fR,
\fBGL_TEXTURE_BORDER\fR,
\fBGL_TEXTURE_RED_SIZE\fR,
\fBGL_TEXTURE_GREEN_SIZE\fR,
\fBGL_TEXTURE_BLUE_SIZE\fR,
\fBGL_TEXTURE_ALPHA_SIZE\fR,
\fBGL_TEXTURE_DEPTH_SIZE\fR,
\fBGL_TEXTURE_COMPRESSED\fR,
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR, and
\fBGL_TEXTURE_BUFFER_OFFSET\fR
are accepted\&.
.RE
.PP
\fIparams\fR
.RS 4
Returns tha axed data\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetTexLevelParameter\fR
returns in
\fIparams\fR
texture parameta joints fo' a specific level\-of\-detail value, specified as
\fIlevel\fR\&.
\fItarget\fR
defines tha target texture, either
\fBGL_TEXTURE_1D\fR,
\fBGL_TEXTURE_2D\fR,
\fBGL_TEXTURE_3D\fR,
\fBGL_PROXY_TEXTURE_1D\fR,
\fBGL_PROXY_TEXTURE_2D\fR,
\fBGL_PROXY_TEXTURE_3D\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_X\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Y\fR,
\fBGL_TEXTURE_CUBE_MAP_POSITIVE_Z\fR,
\fBGL_TEXTURE_CUBE_MAP_NEGATIVE_Z\fR, or
\fBGL_PROXY_TEXTURE_CUBE_MAP\fR\&.
.PP
\fBGL_MAX_TEXTURE_SIZE\fR, and
\fBGL_MAX_3D_TEXTURE_SIZE\fR
are not straight-up descriptizzle enough\&. Well shiiiit, it has ta report tha phattest square texture image dat can be accommodated wit mipmaps n' bordaz yo, but a long-ass skinny texture, or a texture without mipmaps n' borders, may easily fit up in texture memory\&. Da proxy targets allow tha user ta mo' accurately query whether tha GL can accommodate a texture of a given configuration\&. If tha texture cannot be accommodated, tha texture state variables, which may be queried with
\fBglGetTexLevelParameter\fR, is set ta 0\&. If tha texture can be accommodated, tha texture state joints is ghon be set as they would be set fo' a non\-proxy target\&.
.PP
\fIpname\fR
specifies tha texture parameta whose value or joints is ghon be returned\&.
.PP
Da accepted parameta names is as bigs up:
.PP
\fBGL_TEXTURE_WIDTH\fR
.RS 4
.sp
\fIparams\fR
returns a single value, tha width of tha texture image\&. This value includes tha border of tha texture image\&. Da initial value is 0\&.
.RE
.PP
\fBGL_TEXTURE_HEIGHT\fR
.RS 4
.sp
\fIparams\fR
returns a single value, tha height of tha texture image\&. This value includes tha border of tha texture image\&. Da initial value is 0\&.
.RE
.PP
\fBGL_TEXTURE_DEPTH\fR
.RS 4
.sp
\fIparams\fR
returns a single value, tha depth of tha texture image\&. This value includes tha border of tha texture image\&. Da initial value is 0\&.
.RE
.PP
\fBGL_TEXTURE_INTERNAL_FORMAT\fR
.RS 4
.sp
\fIparams\fR
returns a single value, tha internal format of tha texture image\&.
.RE
.PP
\fBGL_TEXTURE_RED_TYPE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_GREEN_TYPE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_BLUE_TYPE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_ALPHA_TYPE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_DEPTH_TYPE\fR
.RS 4
.sp
Da data type used ta store tha component\&. Da types
\fBGL_NONE\fR,
\fBGL_SIGNED_NORMALIZED\fR,
\fBGL_UNSIGNED_NORMALIZED\fR,
\fBGL_FLOAT\fR,
\fBGL_INT\fR, and
\fBGL_UNSIGNED_INT\fR
may be moonwalked back ta indicate signed normalized fixed\-point, unsigned normalized fixed\-point, floating\-point, integer unnormalized, n' unsigned integer unnormalized components, respectively\&.
.RE
.PP
\fBGL_TEXTURE_RED_SIZE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_GREEN_SIZE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_BLUE_SIZE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_ALPHA_SIZE\fR,
.RS 4
.RE
.PP
\fBGL_TEXTURE_DEPTH_SIZE\fR
.RS 4
.sp
Da internal storage resolution of a individual component\&. Da resolution chosen by tha GL is ghon be a cold-ass lil close match fo' tha resolution axed by tha user wit tha component argument of
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglCopyTexImage1D\fR(), and
\fBglCopyTexImage2D\fR()\&. Da initial value is 0\&.
.RE
.PP
\fBGL_TEXTURE_COMPRESSED\fR
.RS 4
.sp
\fIparams\fR
returns a single boolean value indicatin if tha texture image is stored up in a cold-ass lil compressed internal format\&. Da initiali value is
\fBGL_FALSE\fR\&.
.RE
.PP
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR
.RS 4
.sp
\fIparams\fR
returns a single integer value, tha number of unsigned bytez of tha compressed texture image dat would be returned from
\fBglGetCompressedTexImage\fR()\&.
.RE
.PP
\fBGL_TEXTURE_BUFFER_OFFSET\fR
.RS 4
.sp
\fIparams\fR
returns a single integer value, tha offset tha fuck into tha data store of tha buffer bound ta a funky-ass buffer texture\&.
\fBglTexBufferRange\fR()\&.
.RE
.PP
\fBGL_TEXTURE_BUFFER_SIZE\fR
.RS 4
.sp
\fIparams\fR
returns a single integer value, tha size of tha range of a thugged-out data store of tha buffer bound ta a funky-ass buffer texture\&.
\fBglTexBufferRange\fR()\&.
.RE
.SH "NOTES"
.PP
If a error is generated, no chizzle is made ta tha contents of
\fIparams\fR\&.
.PP
\fBglGetTexLevelParameter\fR
returns tha texture level parametas fo' tha actizzle texture unit\&.
.PP
\fBGL_TEXTURE_BUFFER_OFFSET\fR
and
\fBGL_TEXTURE_BUFFER_SIZE\fR
are available only if tha GL version is 4\&.3 or pimped outer\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
or
\fIpname\fR
is not a accepted value\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIlevel\fR
is less than 0\&.
.PP
\fBGL_INVALID_VALUE\fR
may be generated if
\fIlevel\fR
is pimped outa than
log 2\fImax\fR, where
\fImax\fR
is tha returned value of
\fBGL_MAX_TEXTURE_SIZE\fR\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fItarget\fR
is
\fBGL_TEXTURE_BUFFER\fR
and
\fIlevel\fR
is not zero\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBGL_TEXTURE_COMPRESSED_IMAGE_SIZE\fR
is queried on texture images wit a uncompressed internal format or on proxy targets\&.
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglGetTexParameter\fR(),
\fBglCopyTexImage1D\fR(),
\fBglCopyTexImage2D\fR(),
\fBglCopyTexSubImage1D\fR(),
\fBglCopyTexSubImage2D\fR(),
\fBglCopyTexSubImage3D\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexSubImage3D\fR(),
\fBglTexParameter\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. Copyright
\(co
2010\-2012 Khronos Group\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
