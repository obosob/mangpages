'\" t
.\"     Title: glLogicOp
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLLOGICOP" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glLogicOp \- specify a logical pixel operation fo' rendering
.SH "C SPECIFICATION"
.HP \w'void\ glLogicOp('u
.BI "void glLogicOp(GLenum\ " "opcode" ");"
.SH "PARAMETERS"
.PP
\fIopcode\fR
.RS 4
Specifies a symbolic constant dat selects a logical operation\&. Da followin symbols is accepted:
\fBGL_CLEAR\fR,
\fBGL_SET\fR,
\fBGL_COPY\fR,
\fBGL_COPY_INVERTED\fR,
\fBGL_NOOP\fR,
\fBGL_INVERT\fR,
\fBGL_AND\fR,
\fBGL_NAND\fR,
\fBGL_OR\fR,
\fBGL_NOR\fR,
\fBGL_XOR\fR,
\fBGL_EQUIV\fR,
\fBGL_AND_REVERSE\fR,
\fBGL_AND_INVERTED\fR,
\fBGL_OR_REVERSE\fR, and
\fBGL_OR_INVERTED\fR\&. Da initial value is
\fBGL_COPY\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglLogicOp\fR
specifies a logical operation that, when enabled, be applied between tha incomin RGBA color n' tha RGBA color all up in tha correspondin location up in tha frame buffer\&. To enable or disable tha logical operation, call
\fBglEnable\fR()
and
\fBglDisable\fR()
usin tha symbolic constant
\fBGL_COLOR_LOGIC_OP\fR\&. Da initial value is disabled\&.
.PP
.TS
allbox tab(:);
lB lB.
T{
\fB
                        Opcode
                        \fR
T}:T{
\fB
                        Resultin Operation
                        \fR
T}
.T&
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c
l c.
T{
\fBGL_CLEAR\fR
T}:T{
0
T}
T{
\fBGL_SET\fR
T}:T{
1
T}
T{
\fBGL_COPY\fR
T}:T{
s
T}
T{
\fBGL_COPY_INVERTED\fR
T}:T{
~s
T}
T{
\fBGL_NOOP\fR
T}:T{
d
T}
T{
\fBGL_INVERT\fR
T}:T{
~d
T}
T{
\fBGL_AND\fR
T}:T{
s & d
T}
T{
\fBGL_NAND\fR
T}:T{
~(s & d)
T}
T{
\fBGL_OR\fR
T}:T{
s | d
T}
T{
\fBGL_NOR\fR
T}:T{
~(s | d)
T}
T{
\fBGL_XOR\fR
T}:T{
s ^ d
T}
T{
\fBGL_EQUIV\fR
T}:T{
~(s ^ d)
T}
T{
\fBGL_AND_REVERSE\fR
T}:T{
s & ~d
T}
T{
\fBGL_AND_INVERTED\fR
T}:T{
~s & d
T}
T{
\fBGL_OR_REVERSE\fR
T}:T{
s | ~d
T}
T{
\fBGL_OR_INVERTED\fR
T}:T{
~s | d
T}
.TE
.sp 1
.PP
\fIopcode\fR
is a symbolic constant chosen from tha list above\&. In tha explanation of tha logical operations,
\fIs\fR
represents tha incomin color and
\fId\fR
represents tha color up in tha frame buffer\&. Right back up in yo muthafuckin ass. Standard C\-language operators is used\& fo' realz. As these bitwise operators suggest, tha logical operation be applied independently ta each bit pair of tha source n' destination colors\&.
.SH "NOTES"
.PP
When mo' than one RGBA color buffer is enabled fo' drawing, logical operations is performed separately fo' each enabled buffer, rockin fo' tha destination value tha contentz of dat buffer (see
\fBglDrawBuffer\fR())\&.
.PP
Logic operations have no effect on floatin point draw buffers\&. But fuck dat shiznit yo, tha word on tha street is dat if
\fBGL_COLOR_LOGIC_OP\fR
is enabled, blendin is still disabled up in dis case\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIopcode\fR
is not a accepted value\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with argument
\fBGL_LOGIC_OP_MODE\fR\&.
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_COLOR_LOGIC_OP\fR\&.
.SH "SEE ALSO"
.PP
\fBglBlendFunc\fR(),
\fBglDrawBuffer\fR(),
\fBglEnable\fR(),
\fBglStencilOp\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
