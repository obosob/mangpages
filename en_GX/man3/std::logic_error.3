.TH "std::logic_error" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::logic_error \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::exception\fP\&.
.PP
Inherited by \fB__gnu_pbds::container_error\fP, \fBstd::domain_error\fP, \fBstd::future_error\fP, \fBstd::invalid_argument\fP, \fBstd::length_error\fP, n' \fBstd::out_of_range\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlogic_error\fP (const \fBstring\fP &__arg)"
.br
.ti -1c
.RI "virtual const char * \fBwhat\fP () const noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 
One of two subclassez of exception\&. 

Logic errors represent problems up in tha internal logic of a program; up in theory, these is preventable, n' even detectable before tha program runs (e\&.g\&., violationz of class invariants)\&. 
.PP
Definizzle at line 55 of file stdexcept\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "std::logic_error::logic_error (const \fBstring\fP &__arg)\fC [explicit]\fP"
Takes a cold-ass lil characta strang describin tha error\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual const char* std::logic_error::what () const\fC [virtual]\fP, \fC [noexcept]\fP"
Returns a C-style characta strang describin tha general cause of tha current error (the same strang passed ta tha ctor)\&. 
.PP
Reimplemented from \fBstd::exception\fP\&.
.PP
Reimplemented up in \fBstd::future_error\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
