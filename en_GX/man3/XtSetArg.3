.\" Copyright 1993 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be
.\" included up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtSet-Arg XtMerge-Arg-Lists wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtSetArg 3 "libXt 1.1.4" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtSetArg, XtMergeArgLists \- set n' merge ArgLists
.SH SYNTAX
.HP
int XtSetArg(Arg \fIarg\fP, Strin \fIname\fP, XtArgVal \fIvalue\fP);
.HP
ArgList XtMergeArgLists(ArgList \fIargs1\fP, Cardinal \fInum_args1\fP, ArgList
\fIargs2\fP, Cardinal \fInum_args2\fP);
.SH ARGUMENTS
.IP \fIarg\fP 1i
Specifies tha name-value pair ta set.
.IP \fIargs1\fP 1i
Specifies tha first
.ZN ArgList .
.IP \fIargs2\fP 1i
Specifies tha second
.ZN ArgList .
.IP \fInum_args1\fP 1i
Specifies tha number of arguments up in tha straight-up original gangsta argument list.
.IP \fInum_args2\fP 1i
Specifies tha number of arguments up in tha second argument list.
.IP \fIname\fP 1i
Specifies tha name of tha resource.
.IP \fIvalue\fP 1i
Specifies tha value of tha resource if it will fit up in an
.ZN XtArgVal
or tha address.
.SH DESCRIPTION
The
.ZN XtSetArg
function is probably used up in a highly stylized manner to
minimize tha probabilitizzle of bustin a mistake; fo' example:
.LP
.Ds
Arg args[20];
int n;

n = 0;
XtSetArg(args[n], XtNheight, 100);      n++;
XtSetArg(args[n], XtNwidth, 200);       n++;
XtSetValues(widget, args, n);
.De
.LP
Alternatively, a application can statically declare tha argument list
and use
.ZN XtNumber :
.LP
.Ds
static Args args[] = {
        {XtNheight, (XtArgVal) 100},
        {XtNwidth, (XtArgVal) 200},
};
XtSetValues(Widget, args, XtNumber(args));
.De
.LP
Note dat you should not use auto-increment or auto-decrement
within tha straight-up original gangsta argument to
.ZN XtSetArg .
.ZN XtSetArg
can be implemented as a macro dat dereferences tha straight-up original gangsta argument twice.
.LP
The
.ZN XtMergeArgLists
function allocates enough storage ta hold tha combined
.ZN ArgList
structures n' copies dem tha fuck into dat shit.
Note dat it do not check fo' duplicate entries.
When it is no longer needed,
free tha returned storage by using
.ZN XtJacked .
.SH "SEE ALSO"
XtOffset(3)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
