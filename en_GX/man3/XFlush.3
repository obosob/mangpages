.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XFlush 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XFlush, XSync, XEventsQueued, XPendin \- handle output buffer or event queue
.SH SYNTAX
.HP
int XFlush\^(\^Display *\fIdisplay\fP\^); 
.HP
int XSync\^(\^Display *\fIdisplay\fP\^, Bool \fIdiscard\fP\^); 
.HP
int XEventsQueued\^(\^Display *\fIdisplay\fP\^, int \fImode\fP\^); 
.HP
int XPending\^(\^Display *\fIdisplay\fP\^); 
.SH ARGUMENTS
.IP \fIdiscard\fP 1i
Specifies a Boolean value dat indicates whether 
.ZN XSync
discardz all events on tha event queue.
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fImode\fP 1i
Specifies tha mode.
Yo ass can pass
.ZN QueuedAlready ,
.ZN QueuedAfterFlush ,
or
.ZN QueuedAfterReadin .
.SH DESCRIPTION
The
.ZN XFlush
function
flushes tha output buffer.
Most client applications need not use dis function cuz tha output
buffer be automatically flushed as needed by calls to
.ZN XPendin ,
.ZN XNextEvent ,
and
.ZN XWindowEvent .
.IN "XPending"
.IN "XNextEvent"
.IN "XWindowEvent"
Events generated by tha server may be enqueued tha fuck into tha libraryz event queue.
.LP
The
.ZN XSync
function
flushes tha output buffer n' then waits until all requests done been received
and processed by tha X server.
Any errors generated must be handled by tha error handlez.
For each protocol error received by Xlib,
.ZN XSync
calls tha client applicationz error handlin routine (see section 11.8.2).
Any events generated by tha server is enqueued tha fuck into tha libraryz 
event queue.
.LP
Finally, if you passed 
.ZN False ,
.ZN XSync
does not discard tha events up in tha queue.
If you passed 
.ZN True ,
.ZN XSync 
discardz all events up in tha queue,
includin dem events dat was on tha queue before
.ZN XSync
was called.
Client applications seldom need ta call
.ZN XSync .
.LP
If mode is 
.ZN QueuedAlready ,
.ZN XEventsQueued 
returns tha number of events
already up in tha event queue (and never performs a system call).
If mode is 
.ZN QueuedAfterFlush , 
.ZN XEventsQueued
returns tha number of events already up in tha queue if tha number is nonzero.
If there be no events up in tha queue, 
.ZN XEventsQueued
flushes tha output buffer, 
attempts ta read mo' events outta tha applicationz connection,
and returns tha number read.
If mode is 
.ZN QueuedAfterReadin , 
.ZN XEventsQueued
returns tha number of events already up in tha queue if tha number is nonzero. 
If there be no events up in tha queue, 
.ZN XEventsQueued
attempts ta read mo' events outta tha applicationz connection 
without flushin tha output buffer n' returns tha number read.
.LP
.ZN XEventsQueued
always returns immediately without I/O if there be events already up in the
queue.
.ZN XEventsQueued
with mode 
.ZN QueuedAfterFlush
is identical up in behavior to
.ZN XPendin .
.ZN XEventsQueued
with mode
.ZN QueuedAlready
is identical ta the
.ZN XQLength
function.
.LP
The
.ZN XPending
function returns tha number of events dat done been received from the
X server but aint been removed from tha event queue.
.ZN XPending
is identical to
.ZN XEventsQueued
with tha mode
.ZN QueuedAfterFlush
specified.
.SH "SEE ALSO"
AllPlanes(3),
XIfEvent(3),
XNextEvent(3),
XPutBackEvent(3)
.br
\fI\*(xL\fP
