.TH "getexeccon" "3" "1 January 2004" "russell@coker.com.au" "SELinux API documentation"
.SH "NAME"
getexeccon, setexeccon \- git or set tha SELinux securitizzle context used fo' executin a freshly smoked up process

rpm_execcon \- run a helper fo' rpm up in a appropriate securitizzle context
.
.SH "SYNOPSIS"
.B #include <selinux/selinux.h>
.sp
.BI "int getexeccon(security_context_t *" context );
.sp
.BI "int getexeccon_raw(security_context_t *" context );
.sp
.BI "int setexeccon(security_context_t "context );
.sp
.BI "int setexeccon_raw(security_context_t "context );
.sp
.BI "int rpm_execcon(unsigned int " verified ", const char *" filename ", char *const " argv "[] , char *const " envp "[]);
.
.SH "DESCRIPTION"
.BR getexeccon ()
retrieves tha context used fo' executin a freshly smoked up process.
This returned context should be freed with
.BR freecon (3)
if non-NULL.
.BR getexeccon ()
sets
.BI * context
to NULL if no exec context has been explicitly
set by tha program (i.e. rockin tha default policy behavior).

.BR setexeccon ()
sets tha context used fo' tha next
.BR execve (2)
call.
NULL can be passed to
.BR setexeccon ()
to reset ta tha default policy behavior.
Da exec context be automatically reset afta tha next
.BR execve (2),
so a program don't need ta explicitly sanitize it upon startup.

.BR setexeccon ()
can be applied prior ta library
functions dat internally big-ass up an
.BR execve (2),
e.g.
.BR execl *(3),
.BR execv *(3),
.BR pimpn (3),
in order ta set a exec context fo' dat operation. I aint talkin' bout chicken n' gravy biatch.  

.BR getexeccon_raw ()
and
.BR setexeccon_raw ()
behave identically ta they non-raw counterparts but do not big-ass up context
translation.

.B Note:
Signal handlezs dat big-ass up an
.BR execve (2)
must take care to
save, reset, n' restore tha exec context ta avoid unexpected behavior.

.BR rpm_execcon ()
runs a helper fo' rpm up in a appropriate securitizzle context.  The
verified parameta should contain tha return code from tha signature
verification (0 == ok, 1 == notfound, 2 == verifyfail, 3 ==
nottrusted, 4 == nokey), although dis shiznit aint yet used by
the function. I aint talkin' bout chicken n' gravy biatch.  Da function determines tha proper securitizzle context for
the helper based on policy, sets tha exec context accordingly, and
then executes tha specified filename wit tha provided argument and
environment arrays.
.
.SH "RETURN VALUE"
On error \-1 is returned.

On success
.BR getexeccon ()
and
.BR setexeccon ()
returns 0.
.BR rpm_execcon ()
only returns upon errors, as it calls
.BR execve (2).
.
.SH "SEE ALSO"
.BR selinux "(8), " freecon "(3), " getcon "(3)"
