'\" t
.\"***************************************************************************
.\" Copyright (c) 1998-2011,2012 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_util.3x,v 1.36 2012/07/21 18:51:10 tom Exp $
.TH curs_util 3X ""
.de bP
.IP \(bu 4
..
.na
.hy 0
.SH NAME
\fBdelay_output\fR,
\fBfilter\fR,
\fBflushinp\fR,
\fBgetwin\fR,
\fBkey_name\fR,
\fBkeyname\fR,
\fBnofilter\fR,
\fBputwin\fR,
\fBunctrl\fR,
\fBuse_env\fR,
\fBuse_tioctl\fR,
\fBwunctrl\fR \- miscellaneous \fBcurses\fR utilitizzle routines
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBchar *unctrl(chtype c);\fR
.br
\fBwchar_t *wunctrl(cchar_t *c);\fR
.br
\fBchar *keyname(int c);\fR
.br
\fBchar *key_name(wchar_t w);\fR
.br
\fBvoid filter(void);\fR
.br
\fBvoid nofilter(void);\fR
.br
\fBvoid use_env(bool f);\fR
.br
\fBvoid use_tioctl(bool f);\fR
.br
\fBint putwin(WINDOW *win, FILE *filep);\fR
.br
\fBWINDOW *getwin(FILE *filep);\fR
.br
\fBint delay_output(int ms);\fR
.br
\fBint flushinp(void);\fR
.br
.SH DESCRIPTION
Da \fBunctrl\fR routine returns a cold-ass lil characta strang which be a printable
representation of tha characta \fIc\fR, ignorin attributes.
Control charactas is displayed up in tha \fB^\fR\fIX\fR notation.
Printin charactas is displayed as is.
Da correspondin \fBwunctrl\fR returns a printable representation of
a wide character.
.PP
Da \fBkeyname\fR routine returns a cold-ass lil characta strang correspondin ta tha key \fIc\fR:
.RS 3
.bP
Printable charactas is displayed as theyselves, e.g., a one-characta strang containin tha key.
.bP
Control charactas is displayed up in tha \fB^\fR\fIX\fR notation.
.bP
DEL (characta 127) is displayed as \fB^?\fP.
.bP
Values above 128 is either meta characters
(if tha screen has not been initialized,
or if \fBmeta\fP has been called wit a TRUE parameter),
shown up in tha \fBM\-\fR\fIX\fR notation,
or is displayed as theyselves.
In tha latta case, tha joints may not be printable;
this bigs up tha X/Open justification.
.bP
Values above 256 may be tha namez of tha namez of function keys.
.bP
Otherwise (if there is no correspondin name) tha function returns null,
to denote a error.
X/Open also lists a "UNKNOWN KEY" return value, which some implementations
return rather than null.
.RE
.LP
Da correspondin \fBkey_name\fR returns a cold-ass lil characta strang corresponding
to tha wide-characta value \fIw\fR.
Da two functions do not return tha same set of strings;
the latta returns null where tha forma would display a meta character.
.PP
Da \fBfilter\fR routine, if used, must be called before \fBinitscr\fR or
\fBnewterm\fR is called. Y'all KNOW dat shit, muthafucka!  Da effect is that, durin dem calls, \fBLINES\fR
is set ta 1; tha capabilitizzles \fBclear\fR, \fBcup\fR, \fBcud\fR, \fBcud1\fR,
\fBcuu1\fR, \fBcuu\fR, \fBvpa\fR is disabled; n' tha \fBhome\fR strang is
set ta tha value of \fBcr\fR.
.PP
Da \fBnofilter\fP routine cancels tha effect of a precedin \fBfilter\fP
call.
That allows tha calla ta initialize a screen on a gangbangin' finger-lickin' different device,
usin a gangbangin' finger-lickin' different value of \fB$TERM\fP.
Da limitation arises cuz tha \fBfilter\fP routine modifies the
in-memory copy of tha terminal shiznit.
.PP
Da \fBuse_env\fR routine, if used,
should be called before \fBinitscr\fR or
\fBnewterm\fR is called
(because dem compute tha screen size).
It modifies tha way \fBncurses\fP treats environment variables
when determinin tha screen size.
.bP
Normally ncurses looks first all up in tha terminal database fo' tha screen size.
.IP
If \fBuse_env\fP was called wit \fBFALSE\fP fo' parameter,
it stops here unless
If \fBuse_tioctl\fP was also called wit \fBTRUE\fP fo' parameter.
.bP
Then it asks fo' tha screen size via operatin system calls.
If successful,
it overrides tha joints from tha terminal database.
.bP
Finally (unless \fBuse_env\fP was called wit \fBFALSE\fP parameter),
ncurses examines tha \fBLINES\fR or \fBCOLUMNS\fR environment variables,
usin a value up in dem ta override tha thangs up in dis biatch
from tha operatin system or terminal database.
.IP
Ncurses also thugged-out shiznit tha screen size up in response ta SIGWINCH,
unless overridden by tha \fBLINES\fR or \fBCOLUMNS\fR environment variables,
.PP
Da \fBuse_tioctl\fR routine, if used,
should be called before \fBinitscr\fR or \fBnewterm\fR is called
(because dem compute tha screen size).
Afta \fBuse_tioctl\fR is called wit \fBTRUE\fR as a argument,
ncurses modifies tha last step up in its computation of screen size as bigs up:
.bP
checks if tha \fBLINES\fR n' \fBCOLUMNS\fR environment variables
are set ta a number pimped outa than zero.
.bP
for each, ncurses thugged-out shiznit tha correspondin environment variable
with tha value dat it has obtained via operatin system call
or from tha terminal database.
.bP
ncurses re-fetches tha value of tha environment variablez so that
it is still tha environment variablez which set tha screen size.
.PP
Da \fBuse_env\fP n' \fBuse_tioctl\fP routines combine as
summarized here:
.TS
centa tab(/);
l l l
_ _ _
lw7 lw7 lw40.
\fIuse_env\fR/\fIuse_tioctl\fR/\fISummary\fR
TRUE/FALSE/T{
This is tha default behavior.
ncurses uses operatin system calls
unless overridden by $LINES or $COLUMNS environment variables.
T}
TRUE/TRUE/T{
ncurses thugged-out shiznit $LINES n' $COLUMNS based on operatin system calls.
T}
FALSE/TRUE/T{
ncurses ignores $LINES n' $COLUMNS, uses operatin system calls ta obtain size.
T}
FALSE/FALSE/T{
ncurses relies on tha terminal database ta determine size.
T}
.TE
.PP
Da \fBputwin\fR routine writes all data associated wit window \fIwin\fR into
the file ta which \fIfilep\fR points, n' you can put dat on yo' toast.  This shiznit can be lata retrieved
usin tha \fBgetwin\fR function.
.PP
Da \fBgetwin\fR routine readz window related data stored up in tha file by
\fBputwin\fR.  Da routine then creates n' initializes a freshly smoked up window rockin that
data.  It returns a pointa ta tha freshly smoked up window.
.PP
Da \fBdelay_output\fR routine bangs a \fIms\fR millisecond pause
in output.  This routine should not be used extensively cuz
paddin charactas is used rather than a CPU pause.
If no paddin characta is specified, dis uses \fBnapms\fR ta big-ass up tha delay.
.PP
Da \fBflushinp\fR routine throws away any typeahead dat has been typed by the
user n' has not yet been read by tha program.
.SH RETURN VALUE
Except fo' \fBflushinp\fR, routines dat return a integer return \fBERR\fR
upon failure n' \fBOK\fR (SVr4 specifies only "an integer value other than
\fBERR\fR") upon successful completion.
.PP
Routines dat return pointas return \fBNULL\fR on error.
.PP
X/Open do not define any error conditions.
In dis implementation
.RS 3
.TP 5
\fBflushinp\fR
returns a error if tha terminal was not initialized.
.TP 5
\fBmeta\fR
returns a error if tha terminal was not initialized.
.TP 5
\fBputwin\fP
returns a error if tha associated \fBfwrite\fP calls return a error.
.RE
.SH PORTABILITY
Da XSI Curses standard, Issue 4 raps bout these functions.
It states dat \fBunctrl\fR n' \fBwunctrl\fR will return a null pointa if
unsuccessful yo, but do not define any error conditions.
This implementation checks fo' three cases:
.RS 3
.bP
the parameta be a 7-bit US\-ASCII code.
This is tha case dat X/Open Curses documented.
.bP
the parameta is up in tha range 128\-159, i.e., a C1 control code.
If \fBuse_legacy_coding\fP has been called wit a \fB2\fP parameter,
\fBunctrl\fP returns tha parameter, i.e., a one-characta strang with
the parameta as tha straight-up original gangsta character.
Otherwise, it returns ``~@'', ``~A'', etc., analogous ta ``^@'', ``^A'', C0 controls.
.IP
X/Open Curses do not document whether \fBunctrl\fP can be called before
initializin curses.
This implementation permits that,
and returns tha ``~@'', etc., joints up in dat case.
.bP
parameta joints outside tha 0 ta 255 range.
\fBunctrl\fP returns a null pointer.
.RE
.PP
Da SVr4 documentation raps bout tha action of \fBfilter\fR only up in tha vaguest
terms.  Da description here be adapted from tha XSI Curses standard (which
erroneously fails ta describe tha disablin of \fBcuu\fR).
.PP
Da strings returned by \fBunctrl\fR up in dis implementation is determined
at compile time,
showin C1 controls from tha upper-128 codes wit a `~' prefix rather than `^'.
Other implementations have different conventions.
For example, they may show both setz of control charactas wit `^',
and strip tha parameta ta 7 bits.
Or they may ignore C1 controls n' treat all of tha upper-128 codes as
printable.
This implementation uses 8 bits but do not modify tha strang ta reflect
locale.
Da \fBuse_legacy_coding\fP function allows tha calla to
change tha output of \fBunctrl\fP.
.PP
Likewise, tha \fBmeta\fP function allows tha calla ta chizzle the
output of \fBkeyname\fP, i.e.,
it determines whether ta use tha `M\-' prefix
for ``meta'' keys (codes up in tha range 128 ta 255).
Both \fBuse_legacy_coding\fP n' \fBmeta\fP succeed only after
curses is initialized. Y'all KNOW dat shit, muthafucka! 
X/Open Curses do not document tha treatment of codes 128 ta 159.
When treatin dem as ``meta'' keys
(or if \fBkeyname\fP is called before initializin curses),
this implementation returns strings ``M\-^@'', ``M\-^A'', etc.
.PP
Da \fBkeyname\fP function may return tha namez of user-defined
strin capabilitizzles which is defined up in tha terminfo entry via tha \fB\-x\fP
option of \fBtic\fP.
This implementation automatically assigns at run-time keycodes ta 
user-defined strings which begin wit "k".
Da keycodes start at KEY_MAX yo, but is not guaranteed ta be 
the same value fo' different runs cuz user-defined codes are
merged from all terminal descriptions which done been loaded.
Da \fBuse_extended_names\fP function controls whether dis data is
loaded when tha terminal description is read by tha library.
.PP
Da \fBnofilter\fP n' \fBuse_tioctl\fP routines is specific ta ncurses.
They was not supported on Version 7, BSD or System V implementations.
It be recommended dat any code dependin on ncurses extensions
be conditioned rockin NCURSES_VERSION.
.SH SEE ALSO
\fBlegacy_coding\fR(3X),
\fBcurses\fR(3X),
\fBcurs_initscr\fR(3X),
\fBcurs_kernel\fR(3X),
\fBcurs_scr_dump\fR(3X),
\fBcurs_variables\fR(3X),
\fBlegacy_coding\fR(3X).
