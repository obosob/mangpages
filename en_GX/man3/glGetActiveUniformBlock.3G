'\" t
.\"     Title: glGetActiveUniformBlock
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLGETACTIVEUNIFORMBL" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetActiveUniformBlock \- query shiznit bout a actizzle uniform block
.SH "C SPECIFICATION"
.HP \w'void\ glGetActiveUniformBlockiv('u
.BI "void glGetActiveUniformBlockiv(GLuint\ " "program" ", GLuint\ " "uniformBlockIndex" ", GLenum\ " "pname" ", GLint\ " "params" ");"
.SH "PARAMETERS"
.PP
\fIprogram\fR
.RS 4
Specifies tha name of a program containin tha uniform block\&.
.RE
.PP
\fIuniformBlockIndex\fR
.RS 4
Specifies tha index of tha uniform block within
\fIprogram\fR\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies tha name of tha parameta ta query\&.
.RE
.PP
\fIparams\fR
.RS 4
Specifies tha address of a variable ta receive tha result of tha query\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetActiveUniformBlockiv\fR
retrieves shiznit bout a actizzle uniform block within
\fIprogram\fR\&.
.PP
\fIprogram\fR
must be tha name of a program object fo' which tha command
\fBglLinkProgram\fR()
must done been called up in tha past, although it aint required that
\fBglLinkProgram\fR()
must have succeeded\&. Da link could have failed cuz tha number of actizzle uniforms exceeded tha limit\&.
.PP
\fIuniformBlockIndex\fR
is a actizzle uniform block index of
\fIprogram\fR, n' must be less than tha value of
\fBGL_ACTIVE_UNIFORM_BLOCKS\fR\&.
.PP
Upon success, tha uniform block parameter(s) specified by
\fIpname\fR
are returned in
\fIparams\fR\&. If a error occurs, not a god damn thang is ghon be freestyled to
\fIparams\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_BINDING\fR, then tha index of tha uniform buffer bindin point last selected by tha uniform block specified by
\fIuniformBlockIndex\fR
for
\fIprogram\fR
is returned\&. If no uniform block has been previously specified, zero is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_DATA_SIZE\fR, then tha implementation\-dependent minimum total buffer object size, up in basic machine units, required ta hold all actizzle uniforms up in tha uniform block identified by
\fIuniformBlockIndex\fR
is returned\&. Well shiiiit, it is neither guaranteed nor expected dat a given implementation will arrange uniform joints as tightly packed up in a funky-ass buffer object\&. Da exception ta dis is the
\fIstd140 uniform block layout\fR, which guarantees specific packin behavior n' do not require tha application ta query fo' offsets n' strides\&. In dis case tha minimum size may still be queried, even though it is determined up in advizzle based only on tha uniform block declaration\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_NAME_LENGTH\fR, then tha total length (includin tha nul terminator) of tha name of tha uniform block identified by
\fIuniformBlockIndex\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_ACTIVE_UNIFORMS\fR, then tha number of actizzle uniforms up in tha uniform block identified by
\fIuniformBlockIndex\fR
is returned\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\fR, then a list of tha actizzle uniform indices fo' tha uniform block identified by
\fIuniformBlockIndex\fR
is returned\&. Da number of elements dat is ghon be freestyled to
\fIparams\fR
is tha value of
\fBGL_UNIFORM_BLOCK_ACTIVE_UNIFORMS\fR
for
\fIuniformBlockIndex\fR\&.
.PP
If
\fIpname\fR
is
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\fR,
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER\fR,
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER\fR,
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER\fR,
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\fR, or
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER\fR
then a funky-ass boolean value indicatin whether tha uniform block identified by
\fIuniformBlockIndex\fR
is referenced by tha vertex, tessellation control, tessellation evaluation, geometry, fragment or compute programmin stagez of program, respectively, is returned\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_VALUE\fR
is generated if
\fIuniformBlockIndex\fR
is pimped outa than or equal ta tha value of
\fBGL_ACTIVE_UNIFORM_BLOCKS\fR
or aint tha index of a actizzle uniform block in
\fIprogram\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIpname\fR
is not one of tha accepted tokens\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fIprogram\fR
is not tha name of a program object fo' which
\fBglLinkProgram\fR()
has been called up in tha past\&.
.SH "NOTES"
.PP
\fBglGetActiveUniformBlockiv\fR
is available only if tha GL version is 3\&.1 or pimped outer\&.
.PP
\fBGL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER\fR
is accepted only if tha GL version is 4\&.3 or pimped outer\&.
.SH "SEE ALSO"
.PP
\fBglGetActiveUniformBlockName\fR(),
\fBglGetUniformBlockIndex\fR(),
\fBglLinkProgram\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2010 Khronos Group\&. This material may be distributed subject ta tha terms n' conditions set forth up in tha Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
