.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear. Shiiit, dis aint no joke.  Run. I aint talkin' bout chicken n' gravy biatch.  Save yo ass.  No user-serviceable parts.
.    \" fudge factors fo' nroff n' troff
.if n \{\
.    dz #H 0
.    dz #V .8m
.    dz #F .3m
.    dz #[ \f1
.    dz #] \fP
.\}
.if t \{\
.    dz #H ((1u-(\\\\n(.fu%2u))*.13m)
.    dz #V .6m
.    dz #F 0
.    dz #[ \&
.    dz #] \&
.\}
.    \" simple accents fo' nroff n' troff
.if n \{\
.    dz ' \&
.    dz ` \&
.    dz ^ \&
.    dz , \&
.    dz ~ ~
.    dz /
.\}
.if t \{\
.    dz ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    dz ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    dz ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    dz , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    dz ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    dz / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff n' (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" erections fo' vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" fo' low resolution devices (crt n' lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    dz : e
.    dz 8 ss
.    dz o a
.    dz d- d\h'-1'\(ga
.    dz D- D\h'-1'\(hy
.    dz th \o'bp'
.    dz Th \o'LP'
.    dz ae ae
.    dz Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AutoSplit 3pm"
.TH AutoSplit 3pm "2014-01-31" "perl v5.18.4" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
AutoSplit \- split a package fo' autoloading
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& autosplit($file, $dir, $keep, $check, $modtime);
\&
\& autosplit_lib_modules(@modules);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This function will split up yo' program tha fuck into filez dat tha AutoLoader
module can handle. Well shiiiit, it is used by both tha standard perl libraries n' by
the MakeMaker utility, ta automatically configure libraries fo' autoloading.
.PP
Da \f(CW\*(C`autosplit\*(C'\fR intercourse splits tha specified file tha fuck into a hierarchy 
rooted all up in tha directory \f(CW$dir\fR. Well shiiiit, it creates directories as needed ta reflect
class hierarchy, n' creates tha file \fIautosplit.ix\fR. This file acts as
both forward declaration of all package routines, n' as timestamp fo' the
last update of tha hierarchy.
.PP
Da remainin three arguments ta \f(CW\*(C`autosplit\*(C'\fR govern other options to
the autosplitter.
.ie n .IP "$keep" 2
.el .IP "\f(CW$keep\fR" 2
.IX Item "$keep"
If tha third argument, \fI\f(CI$keep\fI\fR, is false, then any
pre-existin \f(CW\*(C`*.al\*(C'\fR filez up in tha autoload directory is removed if
they is no longer part of tha module (obsoleted functions).
\&\f(CW$keep\fR defaults ta 0.
.ie n .IP "$check" 2
.el .IP "\f(CW$check\fR" 2
.IX Item "$check"
The
fourth argument, \fI\f(CI$check\fI\fR, instructs \f(CW\*(C`autosplit\*(C'\fR ta check tha module
currently bein split ta ensure dat it includes a \f(CW\*(C`use\*(C'\fR
specification fo' tha AutoLoader module, n' skips tha module if
AutoLoader aint detected.
\&\f(CW$check\fR defaults ta 1.
.ie n .IP "$modtime" 2
.el .IP "\f(CW$modtime\fR" 2
.IX Item "$modtime"
Lastly, tha \fI\f(CI$modtime\fI\fR argument specifies
that \f(CW\*(C`autosplit\*(C'\fR is ta check tha modification time of tha module
against dat of tha \f(CW\*(C`autosplit.ix\*(C'\fR file, n' only split tha module if
it is newer.
\&\f(CW$modtime\fR defaults ta 1.
.PP
Typical use of AutoSplit up in tha perl MakeMaker utilitizzle is via tha command-line
with:
.PP
.Vb 1
\& perl \-e \*(Aquse AutoSplit; autosplit($ARGV[0], $ARGV[1], 0, 1, 1)\*(Aq
.Ve
.PP
Defined as a Make macro, it is invoked wit file n' directory arguments;
\&\f(CW\*(C`autosplit\*(C'\fR will split tha specified file tha fuck into tha specified directory and
delete obsolete \f(CW\*(C`.al\*(C'\fR files, afta checkin first dat tha module do use
the AutoLoader, n' ensurin dat tha module aint already currently split
in its current form (the modtime test).
.PP
Da \f(CW\*(C`autosplit_lib_modules\*(C'\fR form is used up in tha buildin of perl. Well shiiiit, it takes
as input a list of filez (modules) dat is assumed ta reside up in a gangbangin' finger-lickin' directory
\&\fBlib\fR relatizzle ta tha current directory. Each file is busted ta tha 
autosplitta one at a time, ta be split tha fuck into tha directory \fBlib/auto\fR.
.PP
In both usagez of tha autosplitter, only subroutines defined followin the
perl \fI_\|_END_\|_\fR token is split up tha fuck into separate files. Right back up in yo muthafuckin ass. Some
routines may be placed prior ta dis marker ta force they immediate loading
and parsing.
.SS "Multiple packages"
.IX Subsection "Multiple packages"
Az of version 1.01 of tha AutoSplit module it is possible ta have
multiple packages within a single file. Both of tha followin cases
are supported:
.PP
.Vb 7
\&   package NAME;
\&   _\|_END_\|_
\&   sub AAA { ... }
\&   package NAME::option1;
\&   sub BBB { ... }
\&   package NAME::option2;
\&   sub BBB { ... }
\&
\&   package NAME;
\&   _\|_END_\|_
\&   sub AAA { ... }
\&   sub NAME::option1::BBB { ... }
\&   sub NAME::option2::BBB { ... }
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
\&\f(CW\*(C`AutoSplit\*(C'\fR will inform tha user if it is necessary ta create the
top-level directory specified up in tha invocation. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it is preferred that
the script or installation process dat invokes \f(CW\*(C`AutoSplit\*(C'\fR have
created tha full directory path ahead of time. This warnin may
indicate dat tha module is bein split tha fuck into a incorrect path.
.PP
\&\f(CW\*(C`AutoSplit\*(C'\fR will warn tha user of all subroutines whose name causes
potential file namin conflicts on machines wit drastically limited
(8 charactas or less) file name length. Right back up in yo muthafuckin ass. Since tha subroutine name is
used as tha file name, these warnings can aid up in portabilitizzle ta such
systems.
.PP
Warnings is issued n' tha file skipped if \f(CW\*(C`AutoSplit\*(C'\fR cannot locate
either tha \fI_\|_END_\|_\fR marker or a \*(L"package Name;\*(R"\-style justification.
.PP
\&\f(CW\*(C`AutoSplit\*(C'\fR will also emit general diagnostics fo' inabilitizzle to
create directories or files.
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\f(CW\*(C`AutoSplit\*(C'\fR is maintained by tha perl5\-porters. Please direct
any thangs ta tha canonical mailin list fo' realz. Anythang that
is applicable ta tha \s-1CPAN\s0 release can be busted ta its maintainer,
though.
.PP
Lyricist n' Maintainer: Da Perl5\-Portas <perl5\-porters@perl.org>
.PP
Maintainer of tha \s-1CPAN\s0 release: Steffen Muella <smueller@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This package has been part of tha perl core since tha straight-up original gangsta release
of perl5. Well shiiiit, it has been busted out separately ta \s-1CPAN\s0 so olda installations
can benefit from bug fixes.
.PP
This package has tha same ol' dirty copyright n' license as tha perl core:
.PP
.Vb 3
\&             Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999,
\&        2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008
\&        by Larry Wall n' others
\&    
\&                            All muthafuckin rights reserved.
\&    
\&    This program is free software; you can redistribute it and/or modify
\&    it under tha termz of either:
\&    
\&        a) tha GNU General Public License as published by tha Free
\&        Software Foundation; either version 1, or (at yo' option) any
\&        lata version, or
\&    
\&        b) tha "Artistic License" which comes wit dis Kit.
\&    
\&    This program is distributed up in tha hope dat it is ghon be useful,
\&    but WITHOUT ANY WARRANTY; without even tha implied warranty of
\&    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See either
\&    tha GNU General Public License or tha Artistic License fo' mo' details.
\&    
\&    Yo ass should have received a cold-ass lil copy of tha Artistic License wit this
\&    Kit, up in tha file named "Artistic".  If not, I\*(Aqll be glad ta provide one.
\&    
\&    Yo ass should also have received a cold-ass lil copy of tha GNU General Public License
\&    along wit dis program up in tha file named "Copying". If not, write ta tha 
\&    Jacked Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 
\&    02111\-1307, USA or visit they wizzy page on tha internizzle at
\&    http://www.gnu.org/copyleft/gpl.html.
\&    
\&    For all y'all dat chizzle ta use tha GNU General Public License,
\&    mah interpretation of tha GNU General Public License is dat no Perl
\&    script falls under tha termz of tha GPL unless you explicitly put
\&    holla'd script under tha termz of tha GPL yo ass.  Furthermore, any
\&    object code linked wit perl do not automatically fall under the
\&    termz of tha GPL, provided such object code only addz definitions
\&    of subroutines n' variables, n' do not otherwise impair the
\&    resultin interpreta from executin any standard Perl script.  I
\&    consider linkin up in C subroutines up in dis manner ta be tha moral
\&    equivalent of definin subroutines up in tha Perl language itself.  You
\&    may push such a object file as proprietary provided dat you provide
\&    or offer ta provide tha Perl source, as specified by tha GNU General
\&    Public License.  (This is merely a alternate way of specifyin input
\&    ta tha program.)  Yo ass may also push a funky-ass binary produced by tha dumpin of
\&    a hustlin Perl script dat belongs ta you, provided dat you provide or
\&    offer ta provide tha Perl source as specified by tha GPL.  (The
\&    fact dat a Perl interpreta n' yo' code is up in tha same binary file
\&    is, up in dis case, a gangbangin' form of mere aggregation.)  This is mah interpretation
\&    of tha GPL.  If you still have concerns or bullshit understanding
\&    mah intent, feel free ta contact mah dirty ass.  Of course, tha Artistic License
\&    spells all dis up fo' yo' protection, so you may prefer ta use dis shit.
.Ve
