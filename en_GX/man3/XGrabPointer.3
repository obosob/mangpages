.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtaining
.\" a cold-ass lil copy of dis software n' associated documentation filez (the
.\" "Software"), ta deal up in tha Software without restriction, including
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or push copiez of tha Software, n' to
.\" permit peeps ta whom tha Software is furnished ta do so, subject to
.\" tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice shall be included
.\" up in all copies or substantial portionz of tha Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained up in dis notice, tha name of tha X Consortium shall
.\" not be used up in advertisin or otherwise ta promote tha sale, use or
.\" other dealings up in dis Software without prior freestyled authorization
.\" from tha X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Weapons Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission ta use, copy, modify n' distribute dis documentation for
.\" any purpose n' without fee is hereby granted, provided dat tha above
.\" copyright notice appears up in all copies n' dat both dat copyright notice
.\" n' dis permission notice step tha fuck up in all copies, n' dat tha names of
.\" Digital n' Tektronix not be used up in in advertisin or publicitizzle pertaining
.\" ta dis documentation without specific, freestyled prior permission.
.\" Digital n' Tektronix make no representations bout tha suitability
.\" of dis documentation fo' any purpose.
.\" It be provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XGrabPointa 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XGrabPointer, XUngrabPointer, XChangeActivePointerGrab \- grab tha pointer
.SH SYNTAX
.HP
int XGrabPointer\^(\^Display *\fIdisplay\fP\^, Window \fIgrab_window\fP\^,
Bool \fIballer_events\fP\^, unsigned int \fIevent_mask\fP\^, int
\fIpointer_mode\fP\^, int \fIkeyboard_mode\fP\^, Window \fIconfine_to\fP\^,
Cursor \fIcursor\fP\^, Time \fItime\fP\^); 
.HP
int XUngrabPointer\^(\^Display *\fIdisplay\fP\^, Time \fItime\fP\^); 
.HP
int XChangeActivePointerGrab\^(\^Display *\fIdisplay\fP\^, unsigned int
\fIevent_mask\fP\^, Cursor \fIcursor\fP\^, Time \fItime\fP\^); 
.SH ARGUMENTS
.IP \fIconfine_to\fP 1i
Specifies tha window ta confine tha pointa up in or
.ZN None .
.IP \fIcursor\fP 1i
Specifies tha cursor dat is ta be displayed durin tha grab or
.ZN None . 
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIevent_mask\fP 1i
Specifies which pointa events is reported ta tha client.
Da mask is tha bitwise inclusive OR of tha valid pointa event mask bits.
.IP \fIgrab_window\fP 1i
Specifies tha grab window.
.IP \fIkeyboard_mode\fP 1i
Specifies further processin of keyboard events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fIballer_events\fP 1i
Specifies a Boolean value dat indicates whether tha pointa 
events is ta be reported as usual or reported wit respect ta tha grab window 
if selected by tha event mask.
.IP \fIpointer_mode\fP 1i
Specifies further processin of pointa events.
Yo ass can pass 
.ZN GrabModeSync 
or
.ZN GrabModeAsync .
.IP \fItime\fP 1i
Specifies tha time.
Yo ass can pass either a timestamp or
.ZN CurrentTime .
.SH DESCRIPTION
The
.ZN XGrabPointer
function actively grabs control of tha pointa n' returns
.ZN GrabSuccess
if tha grab was successful.
Further pointa events is reported only ta tha grabbin client.
.ZN XGrabPointer
overrides any actizzle pointa grab by dis client.
If baller_events is 
.ZN False , 
all generated pointa events
are reported wit respect ta grab_window n' is reported only if
selected by event_mask.
If baller_events is 
.ZN True
and if a generated
pointa event would normally be reported ta dis client, 
it is reported as usual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
Otherwise, tha event is reported wit respect ta the
grab_window n' is reported only if selected by event_mask.
For either value of baller_events, unreported events is discarded.
.LP
If tha pointer_mode is 
.ZN GrabModeAsync , 
pointa event processin continues as usual.
If tha pointa is currently frozen by dis client, 
the processin of events fo' tha pointa is resumed.
If tha pointer_mode is 
.ZN GrabModeSync , 
the state of tha pointer, as peeped by
client applications,
appears ta freeze, n' tha X server generates no further pointa events
until tha grabbin client calls 
.ZN XAllowEvents
or until tha pointa grab is busted out.
Actual pointa chizzlez is not lost while tha pointa is frozen;
they is simply queued up in tha server fo' lata processing.
.LP
If tha keyboard_mode is 
.ZN GrabModeAsync , 
keyboard event processin is unaffected by activation of tha grab.
If tha keyboard_mode is 
.ZN GrabModeSync , 
the state of tha keyboard, as peeped by
client applications,
appears ta freeze, n' tha X server generates no further keyboard events
until tha grabbin client calls 
.ZN XAllowEvents
or until tha pointa grab is busted out.
Actual keyboard chizzlez is not lost while tha pointa is frozen;
they is simply queued up in tha server fo' lata processing.
.LP
If a cold-ass lil cursor is specified, it is displayed regardless of what
window tha pointa is in. I aint talkin' bout chicken n' gravy biatch.  
If 
.ZN None
is specified,
the aiiight cursor fo' dat window is displayed
when tha pointa is up in grab_window or one of its subwindows;
otherwise, tha cursor fo' grab_window is displayed.
.LP
If a cold-ass lil confine_to window is specified,
the pointa is restricted ta stay contained up in dat window.
Da confine_to window need have no relationshizzle ta tha grab_window.
If tha pointa aint initially up in tha confine_to window, 
it is warped automatically ta tha closest edge 
just before tha grab activates n' enter/leave events is generated as usual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
If tha confine_to window is subsequently reconfigured, 
the pointa is warped automatically, as necessary, 
to keep it contained up in tha window.
.LP
Da time argument allows you ta avoid certain circumstances dat come up
if applications take a long-ass time ta respond or if there be long network
delays.
Consider a thang where you have two applications, both
of which normally grab tha pointa when clicked on.
If both applications specify tha timestamp from tha event, 
the second application may raise up fasta n' successfully grab tha pointer
before tha straight-up original gangsta application. I aint talkin' bout chicken n' gravy biatch. 
Da first application then will git a indication dat tha other application 
grabbed tha pointa before its request was processed.
.LP
.ZN XGrabPointa 
generates
.ZN EnterNotify 
and
.ZN LeaveNotify 
events.
.LP
Either if grab_window or confine_to window aint viewable
or if tha confine_to window lies straight-up outside tha boundariez of tha root
window,
.ZN XGrabPointer
fails n' returns
.ZN GrabNotViewable .
If tha pointa be actively grabbed by some other client,
it fails n' returns
.ZN AlreadyGrabbed .
If tha pointa is frozen by a actizzle grab of another client,
it fails n' returns
.ZN GrabFrozen .
If tha specified time is earlier than tha last-pointer-grab time or lata 
than tha current X server time, it fails n' returns
.ZN GrabInvalidTime .
Otherwise, tha last-pointer-grab time is set ta tha specified time
.Pn ( CurrentTime 
is replaced by tha current X server time).
.LP
.ZN XGrabPointer
can generate
.ZN BadCursor ,
.ZN BadValue ,
and
.ZN BadWindow 
errors.
.LP
The
.ZN XUngrabPointer
function releases tha pointa n' any queued events
if dis client has actively grabbed tha pointa from
.ZN XGrabPointa ,
.ZN XGrabButton ,
or from a aiiight button press.
.ZN XUngrabPointer
does not release tha pointa if tha specified
time is earlier than tha last-pointer-grab time or is lata than the
current X server time.
It also generates 
.ZN EnterNotify 
and 
.ZN LeaveNotify 
events.
Da X server performs a 
.ZN UngrabPointa 
request automatically if tha event window or confine_to window 
for a actizzle pointa grab becomes not viewable
or if window reconfiguration causes tha confine_to window ta lie straight-up
outside tha boundariez of tha root window.
.LP
The
.ZN XChangeActivePointerGrab
function chizzlez tha specified dynamic parametas if tha pointa be actively
grabbed by tha client n' if tha specified time is no earlier than the
last-pointer-grab time n' no lata than tha current X server time.
This function has no effect on tha passive parametaz of a
.ZN XGrabButton .
Da interpretation of event_mask n' cursor is tha same ol' dirty as busted lyrics bout in
.ZN XGrabPointa .
.LP
.ZN XChangeActivePointerGrab
can generate a
.ZN BadCursor 
and
.ZN BadValue
error.
.SH DIAGNOSTICS
.TP 1i
.ZN BadCursor
A value fo' a Cursor argument do not name a thugged-out defined Cursor.
.TP 1i
.ZN BadValue
Some numeric value falls outside tha range of joints accepted by tha request.
Unless a specific range is specified fo' a argument, tha full range defined
by tha argumentz type be accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Any argument defined as a set of
alternatives can generate dis error.
.TP 1i
.ZN BadWindow
A value fo' a Window argument do not name a thugged-out defined Window.
.SH "SEE ALSO"
XAllowEvents(3),
XGrabButton(3),
XGrabKey(3),
XGrabKeyboard(3)
.br
\fI\*(xL\fP
