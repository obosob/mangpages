'\" t
.\"     Title: glXCreateContext
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLXCREATECONTEXT" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glXCreateContext \- create a freshly smoked up GLX renderin context
.SH "C SPECIFICATION"
.HP \w'GLXContext\ glXCreateContext('u
.BI "GLXContext glXCreateContext(Display\ *\ " "dpy" ", XVisualInfo\ *\ " "vis" ", GLXContext\ " "shareList" ", Bool\ " "direct" ");"
.SH "PARAMETERS"
.PP
\fIdpy\fR
.RS 4
Specifies tha connection ta tha X server\&.
.RE
.PP
\fIvis\fR
.RS 4
Specifies tha visual dat defines tha frame buffer resources available ta tha renderin context\&. Well shiiiit, it aint nuthin but a pointa ta an
\fBXVisualInfo\fR
structure, not a visual ID or a pointa ta a
\fBVisual\fR\&.
.RE
.PP
\fIshareList\fR
.RS 4
Specifies tha context wit which ta share display lists\&.
\fBNULL\fR
indicates dat no pluggin is ta take place\&.
.RE
.PP
\fIdirect\fR
.RS 4
Specifies whether renderin is ta be done wit a gangbangin' finger-lickin' direct connection ta tha graphics system if possible (\fBTrue\fR) or all up in tha X server (\fBFalse\fR)\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglXCreateContext\fR
creates a GLX renderin context n' returns its handle\&. This context can be used ta render tha fuck into both windows n' GLX pixmaps\&. If
\fBglXCreateContext\fR
fails ta create a renderin context,
\fBNULL\fR
is returned\&.
.PP
If
\fIdirect\fR
is
\fBTrue\fR, then a gangbangin' finger-lickin' direct renderin context is pimped if tha implementation supports direct rendering, if tha connection is ta a X server dat is local, n' if a gangbangin' finger-lickin' direct renderin context be available\&. (An implementation may return a indirect context when
\fIdirect\fR
is
\fBTrue\fR\&.) If
\fIdirect\fR
is
\fBFalse\fR, then a renderin context dat rendaz all up in tha X server be always pimped\&. Direct renderin serves up a performizzle advantage up in some implementations\&. But fuck dat shiznit yo, tha word on tha street is dat direct renderin contexts cannot be shared outside a single process, n' they may be unable ta render ta GLX pixmaps\&.
.PP
If
\fIshareList\fR
is not
\fBNULL\fR, then all display\-list indexes n' definitions is shared by context
\fIshareList\fR
and by tha newly pimped context\& fo' realz. An arbitrary number of contexts can share a single display\-list space\&. But fuck dat shiznit yo, tha word on tha street is dat all renderin contexts dat share a single display\-list space must theyselves exist up in tha same address space\&. Two renderin contexts share a address space if both is nondirect rockin tha same server, or if both is direct n' owned by a single process\&. Note dat up in tha nondirect case, it aint necessary fo' tha callin threadz ta share a address space, only fo' they related renderin contexts ta share a address space\&.
.PP
If tha GL version is 1\&.1 or pimped outer, then all texture objects except object 0 is shared by any contexts dat share display lists\&.
.SH "NOTES"
.PP
\fBXVisualInfo\fR
is defined in
\fIXutil\&.h\&.\fR
It be a structure dat includes
\fIvisual\fR,
\fIvisualID\fR,
\fIscreen\fR, and
\fIdepth\fR
elements\&.
.PP
A
\fIprocess\fR
is a single execution environment, implemented up in a single address space, consistin of one or mo' threads\&.
.PP
A
\fIthread\fR
is one of a set of subprocesses dat share a single address space yo, but maintain separate program counters, stack spaces, n' other related global data\& fo' realz. A
\fIthread\fR
that is tha only gangmember of its subprocess crew is equivalent ta a
\fIprocess\fR\&.
.PP
It may not be possible ta render ta a GLX pixmap wit a gangbangin' finger-lickin' direct renderin context\&.
.SH "ERRORS"
.PP
\fBNULL\fR
is returned if execution fails on tha client side\&.
.PP
\fBBadMatch\fR
is generated if tha context ta be pimped would not share tha address space or tha screen of tha context specified by
\fIshareList\fR\&.
.PP
\fBBadValue\fR
is generated if
\fIvis\fR
is not a valid visual (for example, if a particular GLX implementation do not support it)\&.
.PP
\fBGLXBadContext\fR
is generated if
\fIshareList\fR
is not a GLX context n' is not
\fBNULL\fR\&.
.PP
\fBBadAlloc\fR
is generated if tha server aint gots enough resources ta allocate tha freshly smoked up context\&.
.SH "SEE ALSO"
.PP
\fBglXDestroyContext\fR(),
\fBglXGetConfig\fR(),
\fBglXIsDirect\fR(),
\fBglXMakeCurrent\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
