" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_pbds::detail::pat_trie_base::_CIter< Node, Leaf, Head, Inode, Is_Forward_Iterator > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fB__gnu_pbds::detail::pat_trie_base::_Iter< Node, Leaf, Head, Inode, Is_Forward_Iterator >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< Head > \fB__rebind_h\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< Inode > \fB__rebind_in\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< Leaf > \fB__rebind_l\fP"
.br
.ti -1c
.RI "typedef _Alloc::template 
.br
rebind< Node > \fB__rebind_n\fP"
.br
.ti -1c
.RI "typedef allocator_type \fB_Alloc\fP"
.br
.ti -1c
.RI "typedef Node::allocator_type \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef type_traits::const_pointa \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
type_traits::const_reference \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef 
.br
allocator_type::difference_type \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef __rebind_h::other::pointa \fBhead_pointer\fP"
.br
.ti -1c
.RI "typedef Inode::iterator \fBinode_iterator\fP"
.br
.ti -1c
.RI "typedef __rebind_in::other::pointa \fBinode_pointer\fP"
.br
.ti -1c
.RI "typedef 
.br
\fBstd::bidirectional_iterator_tag\fP \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef 
.br
__rebind_l::other::const_pointa \fBleaf_const_pointer\fP"
.br
.ti -1c
.RI "typedef __rebind_l::other::pointa \fBleaf_pointer\fP"
.br
.ti -1c
.RI "typedef __rebind_n::other::pointa \fBnode_pointer\fP"
.br
.ti -1c
.RI "typedef type_traits::pointa \fBpointer\fP"
.br
.ti -1c
.RI "typedef type_traits::reference \fBreference\fP"
.br
.ti -1c
.RI "typedef Node::type_traits \fBtype_traits\fP"
.br
.ti -1c
.RI "typedef type_traits::value_type \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_CIter\fP (node_pointa p_nd=0)"
.br
.ti -1c
.RI "\fB_CIter\fP (const \fB_CIter\fP< Node, Leaf, Head, Inode,!Is_Forward_Iterator > &other)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fB_CIter\fP &other) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fB_CIter\fP< Node, Leaf, Head, Inode,!Is_Forward_Iterator > &other) const "
.br
.ti -1c
.RI "const_reference \fBoperator*\fP () const "
.br
.ti -1c
.RI "\fB_CIter\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fB_CIter\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fB_CIter\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "\fB_CIter\fP \fBoperator--\fP (int)"
.br
.ti -1c
.RI "const_pointa \fBoperator->\fP () const "
.br
.ti -1c
.RI "\fB_CIter\fP & \fBoperator=\fP (const \fB_CIter\fP &other)"
.br
.ti -1c
.RI "\fB_CIter\fP & \fBoperator=\fP (const \fB_CIter\fP< Node, Leaf, Head, Inode,!Is_Forward_Iterator > &other)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fB_CIter\fP &other) const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fB_CIter\fP< Node, Leaf, Head, Inode,!Is_Forward_Iterator > &other) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "node_pointa \fBm_p_nd\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBdec\fP (false_type)"
.br
.ti -1c
.RI "void \fBdec\fP (true_type)"
.br
.ti -1c
.RI "void \fBinc\fP (false_type)"
.br
.ti -1c
.RI "void \fBinc\fP (true_type)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static node_pointa \fBget_larger_sibling\fP (node_pointa p_nd)"
.br
.ti -1c
.RI "static node_pointa \fBget_smaller_sibling\fP (node_pointa p_nd)"
.br
.ti -1c
.RI "static leaf_pointa \fBleftmost_descendant\fP (node_pointa p_nd)"
.br
.ti -1c
.RI "static leaf_pointa \fBrightmost_descendant\fP (node_pointa p_nd)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Node, typename Leaf, typename Head, typename Inode, bool Is_Forward_Iterator>class __gnu_pbds::detail::pat_trie_base::_CIter< Node, Leaf, Head, Inode, Is_Forward_Iterator >"
Const iterator\&. 
.PP
Definizzle at line 487 of file pat_trie_base\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
