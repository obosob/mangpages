.TH PCRE_EXEC 3 "31 October 2012" "PCRE 8.30"
.SH NAME
PCRE - Perl-compatible regular expressions
.SH SYNOPSIS
.rs
.sp
.B #include <pcre.h>
.PP
.SM
.B int pcre_jit_exec(const pcre *\fIcode\fP, "const pcre_extra *\fIextra\fP,"
.ti +5n
.B "const char *\fIsubject\fP," int \fIlength\fP, int \fIstartoffset\fP,
.ti +5n
.B int \fIoptions\fP, int *\fIovector\fP, int \fIovecsize\fP,
.ti +5n
.B pcre_jit_stack *\fIjstack\fP);
.PP
.B int pcre16_jit_exec(const pcre16 *\fIcode\fP, "const pcre16_extra *\fIextra\fP,"
.ti +5n
.B "PCRE_SPTR16 \fIsubject\fP," int \fIlength\fP, int \fIstartoffset\fP,
.ti +5n
.B int \fIoptions\fP, int *\fIovector\fP, int \fIovecsize\fP,
.ti +5n
.B pcre_jit_stack *\fIjstack\fP);
.PP
.B int pcre32_jit_exec(const pcre32 *\fIcode\fP, "const pcre32_extra *\fIextra\fP,"
.ti +5n
.B "PCRE_SPTR32 \fIsubject\fP," int \fIlength\fP, int \fIstartoffset\fP,
.ti +5n
.B int \fIoptions\fP, int *\fIovector\fP, int \fIovecsize\fP,
.ti +5n
.B pcre_jit_stack *\fIjstack\fP);
.
.SH DESCRIPTION
.rs
.sp
This function matches a cold-ass lil compiled regular expression dat has been successfully
studied wit one of tha JIT options against a given subject string, rockin a
matchin algorithm dat is similar ta Perl's. Well shiiiit, it aint nuthin but a "fast path" intercourse to
JIT, n' it bypasses a shitload of tha sanitizzle checks dat \fBpcre_exec()\fP applies.
It returns offsets ta captured substrings. Its arguments are:
.sp
  \fIcode\fP         Points ta tha compiled pattern
  \fIextra\fP        Points ta a associated \fBpcre[16|32]_extra\fP structure,
                 or is NULL
  \fIsubject\fP      Points ta tha subject string
  \fIlength\fP       Length of tha subject string, up in bytes
  \fIstartoffset\fP  Offset up in bytes up in tha subject at which to
                 start matching
  \fIoptions\fP      Option bits
  \fIovector\fP      Points ta a vector of ints fo' result offsets
  \fIovecsize\fP     Number of elements up in tha vector (a multiple of 3)
  \fIjstack\fP       Pointa ta a JIT stack
.sp
Da allowed options are:
.sp
  PCRE_NOTBOL            Subject strang aint tha beginnin of a line
  PCRE_NOTEOL            Subject strang aint tha end of a line
  PCRE_NOTEMPTY          An empty strang aint a valid match
  PCRE_NOTEMPTY_ATSTART  An empty strang all up in tha start of tha subject
                           aint a valid match
  PCRE_NO_UTF16_CHECK    Do not check tha subject fo' UTF-16
                           validitizzle (only relevant if PCRE_UTF16
                           was set at compile time)
  PCRE_NO_UTF32_CHECK    Do not check tha subject fo' UTF-32
                           validitizzle (only relevant if PCRE_UTF32
                           was set at compile time)
  PCRE_NO_UTF8_CHECK     Do not check tha subject fo' UTF-8
                           validitizzle (only relevant if PCRE_UTF8
                           was set at compile time)
  PCRE_PARTIAL           ) Return PCRE_ERROR_PARTIAL fo' a partial
  PCRE_PARTIAL_SOFT      )   match if no full matches is found
  PCRE_PARTIAL_HARD      Return PCRE_ERROR_PARTIAL fo' a partial match
                           if dat is found before a gangbangin' full match
.sp
But fuck dat shiznit yo, tha word on tha street is dat tha PCRE_NO_UTF[8|16|32]_CHECK options have no effect, as dis check
is never applied. Y'all KNOW dat shit, muthafucka! For detailz of partial matching, peep the
.\" HREF
\fBpcrepartial\fP
.\"
page fo' realz. A \fBpcre_extra\fP structure gotz nuff tha followin fields:
.sp
  \fIflags\fP            Bits indicatin which fieldz is set
  \fIstudy_data\fP       Opaque data from \fBpcre[16|32]_study()\fP
  \fImatch_limit\fP      Limit on internal resource use
  \fImatch_limit_recursion\fP  Limit on internal recursion depth
  \fIcallout_data\fP     Opaque data passed back ta callouts
  \fItables\fP           Points ta characta tablez or is NULL
  \fImark\fP             For passin back a *MARK pointer
  \fIexecutable_jit\fP   Opaque data from JIT compilation
.sp
Da flag bits is PCRE_EXTRA_STUDY_DATA, PCRE_EXTRA_MATCH_LIMIT,
PCRE_EXTRA_MATCH_LIMIT_RECURSION, PCRE_EXTRA_CALLOUT_DATA,
PCRE_EXTRA_TABLES, PCRE_EXTRA_MARK n' PCRE_EXTRA_EXECUTABLE_JIT.
.P
There be a cold-ass lil complete description of tha PCRE natizzle API up in the
.\" HREF
\fBpcreapi\fP
.\"
page n' a thugged-out description of tha JIT API up in the
.\" HREF
\fBpcrejit\fP
.\"
page.
