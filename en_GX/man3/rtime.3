.\" Copyright 2003 walta harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" Modified 2003-04-04 Walta Harms
.\" <walter.harms@informatik.uni-oldenburg.de>
.\"
.\" Slightly polished, aeb, 2003-04-06
.\"
.TH RTIME 3 2012-08-03 "GNU" "Linux Programmerz Manual"
.SH NAME
rtime \- git time from a remote machine
.SH SYNOPSIS
.nf
.B "#include <rpc/des_crypt.h>"
.sp
.BI "int rtime(struct sockaddr_in *" addrp ", struct rpc_timeval *" timep ,
.BI "          struct rpc_timeval *" timeout );
.fi
.SH DESCRIPTION
This function uses tha Time Server Protocol as busted lyrics bout in
RFC\ 868 ta obtain tha time from a remote machine.
.LP
Da Time Server Protocol gives tha time up in secondz since
00:00:00 UTC, 1 Jan 1900,
and dis function subtracts tha appropriate constant up in order to
convert tha result ta secondz since the
Epoch, 1970-01-01 00:00:00 +0000 (UTC).
.LP
When
.I timeout
is non-NULL, tha udp/time socket (port 37) is used.
Otherwise, tha tcp/time socket (port 37) is used.
.SH RETURN VALUE
On success, 0 is returned, n' tha obtained 32-bit time value is stored in
.IR timep\->tv_sec .
In case of error \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
All errors fo' underlyin functions
.RB ( sendto (2),
.BR poll (2),
.BR recvfrom (2),
.BR connect (2),
.BR read (2))
can occur.
Mo'over:
.TP
.B EIO
Da number of returned bytes aint 4.
.TP
.B ETIMEDOUT
Da waitin time as defined up in timeout has expired.
.SH NOTES
Only IPv4 is supported.
.LP
Some
.I in.timed
versions support only TCP.
Try tha example program with
.I use_tcp
set ta 1.
.LP
Libc5 uses tha prototype
.br
int rtime(struct sockaddr_in *, struct timeval *, struct timeval *);
.br
and requires
.I <sys/time.h>
instead of
.IR <rpc/auth_des.h> .
.SH BUGS
.BR rtime ()
in glibc 2.2.5 n' earlier do not work properly on 64-bit machines.
.SH EXAMPLE
This example requires dat port 37 is up n' open.
Yo ass may check
that tha time entry within
.I /etc/inetd.conf
is not commented out.
.br
Da program connects ta a cold-ass lil computa called "linux".
Usin "localhost" do not work.
Da result is tha localtime of tha computa "linux".
.sp
.nf
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <time.h>
#include <rpc/auth_des.h>
#include <netdb.h>

int use_tcp = 0;
char *servername = "linux";

int
main(void)
{
    struct sockaddr_in name;
    struct rpc_timeval time1 = {0,0};
    struct rpc_timeval timeout = {1,0};
    struct hostent *hent;
    int ret;

    memset(&name, 0, sizeof(name));
    sethostent(1);
    hent = gethostbyname(servername);
    memcpy(&name.sin_addr, hent\->h_addr, hent\->h_length);

    ret = rtime(&name, &time1, use_tcp ? NULL : &timeout);
    if (ret < 0)
        perror("rtime error");
    else {
	time_t t = time1.tv_sec;
        printf("%s\\n", ctime(&t));
    }

    exit(EXIT_SUCCESS);
}
.fi
.SH SEE ALSO
.\" .BR netdate (1),
.BR ntpdate (1),
.\" .BR rdate (1),
.BR inetd (8)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
