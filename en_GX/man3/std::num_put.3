" 3 "Thu Sep 11 2014" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::num_put< _CharT, _OutIta > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBstd::locale::facet\fP\&.
.SS "Public Types"

.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "typedef _CharT \fBchar_type\fP"
.br
.ti -1c
.RI "typedef _OutIta \fBiter_type\fP"
.br
.in -1c
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBnum_put\fP (size_t __refs=0)"
.br
.ti -1c
.RI "template<typename _ValueT > _OutIta \fB_M_insert_float\fP (_OutIta __s, \fBios_base\fP &__io, _CharT __fill, char __mod, _ValueT __v) const "
.br
.ti -1c
.RI "template<typename _ValueT > _OutIta \fB_M_insert_int\fP (_OutIta __s, \fBios_base\fP &__io, _CharT __fill, _ValueT __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, bool __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, const void *__v) const "
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long long __v) const "
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, double __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long double __v) const "
.br
.in -1c
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBlocale::id\fP \fBid\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~num_put\fP ()"
.br
.ti -1c
.RI "void \fB_M_group_float\fP (const char *__grouping, size_t __grouping_size, \fBchar_type\fP __sep, const \fBchar_type\fP *__p, \fBchar_type\fP *__new, \fBchar_type\fP *__cs, int &__len) const "
.br
.ti -1c
.RI "void \fB_M_group_int\fP (const char *__grouping, size_t __grouping_size, \fBchar_type\fP __sep, \fBios_base\fP &__io, \fBchar_type\fP *__new, \fBchar_type\fP *__cs, int &__len) const "
.br
.ti -1c
.RI "template<typename _ValueT > \fBiter_type\fP \fB_M_insert_float\fP (\fBiter_type\fP, \fBios_base\fP &__io, \fBchar_type\fP __fill, char __mod, _ValueT __v) const "
.br
.ti -1c
.RI "template<typename _ValueT > \fBiter_type\fP \fB_M_insert_int\fP (\fBiter_type\fP, \fBios_base\fP &__io, \fBchar_type\fP __fill, _ValueT __v) const "
.br
.ti -1c
.RI "void \fB_M_pad\fP (\fBchar_type\fP __fill, \fBstreamsize\fP __w, \fBios_base\fP &__io, \fBchar_type\fP *__new, const \fBchar_type\fP *__cs, int &__len) const "
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, bool __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP, double) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP, long double) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP, const void *) const "
.br
.in -1c
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static __c_locale \fB_S_clone_c_locale\fP (__c_locale &__cloc)  throw ()"
.br
.ti -1c
.RI "static void \fB_S_create_c_locale\fP (__c_locale &__cloc, const char *__s, __c_locale __old=0)"
.br
.ti -1c
.RI "static void \fB_S_destroy_c_locale\fP (__c_locale &__cloc)"
.br
.ti -1c
.RI "static __c_locale \fB_S_get_c_locale\fP ()"
.br
.ti -1c
.RI "static const char * \fB_S_get_c_name\fP ()  throw ()"
.br
.ti -1c
.RI "static __c_locale \fB_S_lc_ctype_c_locale\fP (__c_locale __cloc, const char *__s)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _CharT, typename _OutIter>class std::num_put< _CharT, _OutIta >"
Primary class template num_put\&.
.PP
This facet encapsulates tha code ta convert a number ta a string\&. Well shiiiit, it is used by tha ostream numeric insertion operators\&. 

Da num_put template uses protected virtual functions ta provide tha actual thangs up in dis biatch\&. Da hood accessors forward tha call ta tha virtual functions\&. These virtual functions is hooks fo' pimpers ta implement tha behavior they require from tha num_put facet\&. 
.PP
Definizzle at line 2254 of file locale_facets\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIta > typedef _CharT \fBstd::num_put\fP< _CharT, _OutIta >::\fBchar_type\fP"

.PP
Public typedefs\&. 
.PP
Definizzle at line 2260 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > typedef _OutIta \fBstd::num_put\fP< _CharT, _OutIta >::\fBiter_type\fP"

.PP
Public typedefs\&. 
.PP
Definizzle at line 2261 of file locale_facets\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIta > \fBstd::num_put\fP< _CharT, _OutIta >::\fBnum_put\fP (size_t__refs = \fC0\fP)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Constructor performs initialization\&. This is tha constructor provided by tha standard\&.
.PP
\fBParameters:\fP
.RS 4
\fI__refs\fP Passed ta tha base facet class\&. 
.RE
.PP

.PP
Definizzle at line 2275 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > virtual \fBstd::num_put\fP< _CharT, _OutIta >::~\fBnum_put\fP ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Destructor\&. 
.PP
Definizzle at line 2454 of file locale_facets\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIta > _OutIta \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, bool__v) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 1089 of file locale_facets\&.tcc\&.
.PP
References std::ios_base::_M_getloc(), std::ios_base::adjustfield, std::ios_base::boolalpha, std::ios_base::flags(), std::ios_base::left, n' std::ios_base::width()\&.
.PP
Referenced by std::num_put< _CharT, _OutIta >::put()\&.
.SS "template<typename _CharT , typename _OutIta > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long__v) const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2474 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, unsigned long__v) const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2478 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long long__v) const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2484 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, unsigned long long__v) const\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2489 of file locale_facets\&.h\&.
.SS "template<typename _CharT , typename _OutIta > _OutIta \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, double__v) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 1141 of file locale_facets\&.tcc\&.
.SS "template<typename _CharT , typename _OutIta > _OutIta \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long double__v) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 1155 of file locale_facets\&.tcc\&.
.SS "template<typename _CharT , typename _OutIta > _OutIta \fBstd::num_put\fP< _CharT, _OutIta >::do_put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, const void *__v) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Numeric formatting\&. These functions do tha work of formattin numeric joints n' insertin dem tha fuck into a stream\&. This function be a hook fo' derived classes ta chizzle tha value returned\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 1162 of file locale_facets\&.tcc\&.
.PP
References std::ios_base::flags(), std::ios_base::hex, n' std::ios_base::uppercase\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, bool__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha boolean \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
If ios_base::boolalpha is set, writes ctype<CharT>::truename() or ctype<CharT>::falsename()\&. Otherwise formats \fIv\fP as a int\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2293 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha integral value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::basefield\&. If equal ta ios_base::oct, formats like tha printf o specifier\&. Else if equal ta ios_base::hex, formats like x or X wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like d, ld, lld fo' signed n' u, lu, llu fo' unsigned joints\&. Note dat if both oct n' hex is set, neither will take effect\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showbase is set, '0' precedes octal joints (except 0) n' '0[xX]' precedes hex joints\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2335 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, unsigned long__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha integral value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::basefield\&. If equal ta ios_base::oct, formats like tha printf o specifier\&. Else if equal ta ios_base::hex, formats like x or X wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like d, ld, lld fo' signed n' u, lu, llu fo' unsigned joints\&. Note dat if both oct n' hex is set, neither will take effect\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showbase is set, '0' precedes octal joints (except 0) n' '0[xX]' precedes hex joints\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2339 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long long__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha integral value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::basefield\&. If equal ta ios_base::oct, formats like tha printf o specifier\&. Else if equal ta ios_base::hex, formats like x or X wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like d, ld, lld fo' signed n' u, lu, llu fo' unsigned joints\&. Note dat if both oct n' hex is set, neither will take effect\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showbase is set, '0' precedes octal joints (except 0) n' '0[xX]' precedes hex joints\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2345 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, unsigned long long__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha integral value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::basefield\&. If equal ta ios_base::oct, formats like tha printf o specifier\&. Else if equal ta ios_base::hex, formats like x or X wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like d, ld, lld fo' signed n' u, lu, llu fo' unsigned joints\&. Note dat if both oct n' hex is set, neither will take effect\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showbase is set, '0' precedes octal joints (except 0) n' '0[xX]' precedes hex joints\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2349 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, double__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha floatin point value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::floatfield\&. If equal ta ios_base::fixed, formats like tha printf f specifier\&. Else if equal ta ios_base::scientific, formats like e or E wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like g or G dependin on uppercase\&. Note dat if both fixed n' scientistical is set, tha effect will also be like g or G\&.
.PP
Da output precision is given by io\&.precision()\&. This precision is capped at numeric_limits::digits10 + 2 (different fo' double n' long double)\&. Da default precision is 6\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showpoint is set, a thugged-out decimal point will always be output\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2398 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, long double__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha floatin point value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
Formattin be affected by tha flag settings up in \fIio\fP\&.
.PP
Da basic format be affected by tha value of io\&.flags() & ios_base::floatfield\&. If equal ta ios_base::fixed, formats like tha printf f specifier\&. Else if equal ta ios_base::scientific, formats like e or E wit ios_base::uppercase unset or set respectively\&. Otherwise, formats like g or G dependin on uppercase\&. Note dat if both fixed n' scientistical is set, tha effect will also be like g or G\&.
.PP
Da output precision is given by io\&.precision()\&. This precision is capped at numeric_limits::digits10 + 2 (different fo' double n' long double)\&. Da default precision is 6\&.
.PP
If ios_base::showpos is set, '+' is output before positizzle joints\&. If ios_base::showpoint is set, a thugged-out decimal point will always be output\&.
.PP
Da decimal point characta used is numpunct::decimal_point()\&. Thousandz separators is banged accordin ta numpunct::grouping() n' numpunct::thousands_sep()\&.
.PP
If io\&.width() is non-zero, enough \fIfill\fP charactas is banged ta make tha result at least dat wide\&. If (io\&.flags() & ios_base::adjustfield) == ios_base::left, result is padded all up in tha end\&. If ios_base::internal, then paddin occurs immediately afta either a '+' or '-' or afta '0x' or '0X'\&. Otherwise, paddin occurs all up in tha beginning\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2402 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SS "template<typename _CharT , typename _OutIta > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIta >::put (\fBiter_type\fP__s, \fBios_base\fP &__io, \fBchar_type\fP__fill, const void *__v) const\fC [inline]\fP"

.PP
Numeric formatting\&. Formats tha pointa value \fIv\fP n' bangs it tha fuck into a stream\&. Well shiiiit, it do so by callin num_put::do_put()\&.
.PP
This function formats \fIv\fP as a unsigned long wit ios_base::hex n' ios_base::showbase set\&.
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP Stream ta write to\&. 
.br
\fI__io\fP Source of locale n' flags\&. 
.br
\fI__fill\fP Char_type ta use fo' filling\&. 
.br
\fI__v\fP Value ta format n' insert\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator afta writing\&. 
.RE
.PP

.PP
Definizzle at line 2423 of file locale_facets\&.h\&.
.PP
References std::num_put< _CharT, _OutIta >::do_put()\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIta > \fBlocale::id\fP \fBstd::num_put\fP< _CharT, _OutIta >::id\fC [static]\fP"

.PP
Numpunct facet id\&. 
.PP
Definizzle at line 2265 of file locale_facets\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen fo' libstdc++ from tha source code\&.
