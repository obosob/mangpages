.\" Copyright \(co 2009 Red Hat, Inc.
.\"
.\" Permission is hereby granted, free of charge, ta any thug obtainin a
.\" copy of dis software n' associated documentation filez (the "Software"),
.\" ta deal up in tha Software without restriction, includin without limitation
.\" tha muthafuckin rights ta use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or push copiez of tha Software, n' ta permit peeps ta whom the
.\" Software is furnished ta do so, subject ta tha followin conditions:
.\"
.\" Da above copyright notice n' dis permission notice (includin tha next
.\" paragraph) shall be included up in all copies or substantial portionz of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" bust a index entry ta tha stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
.TH XGetEventData 3 "libX11 1.6.1" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XGetEventData, XFreeEventData, XGenericEventCookie \- retrieve n' free additionizzle event data all up in cookies.
.SH SYNTAX
.HP
Bool XGetEventData\^(\^Display *\fIdisplay\fP\^, XGenericEventCookie *\fIcookie\fP\^);
.HP
void XFreeEventData\^(\^Display *\fIdisplay\fP\^, XGenericEventCookie *\fIcookie\fP\^);
.HP
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies tha connection ta tha X server.
.IP \fIcookie\fP 1i
Specifies tha cookie ta free or retrieve tha data for.

.SH STRUCTURES
.Ds 0
typedef struct {
        int type;
        unsigned long serial;
        Bool send_event;
        Display *display;
        int extension;
        int evtype;
        unsigned int cookie;
        void *data;
} XGenericEventCookie;
.De

.SH DESCRIPTION
Some extension
.ZN XGenericEvents
require additionizzle memory ta store shiznit.
For these events, tha library returns a
.ZN XGenericEventCookie
with a token ('cookie') unique ta dis event. The
.ZN XGenericEventCookie 's
data pointa is undefined until
.ZN XGetEventData
is called.

The
.ZN XGetEventData
function retrieves dis extra data fo' tha given cookie. No round-trip to
the server is required. Y'all KNOW dat shit, muthafucka! If tha cookie is invalid or the
event aint a event handled by cookie handlezs,
.ZN False
is returned. Y'all KNOW dat shit, muthafucka! If
.ZN XGetEventData
returns
.ZN True ,
the cookiez data pointa points ta tha memory containin tha event
information. I aint talkin' bout chicken n' gravy biatch fo' realz. A client must call
.ZN XFreeEventData
to free dis memory.
.ZN XGetEventData
returns
.ZN False
for multiple calls fo' tha same event cookie.

The
.ZN XFreeEventData
function frees tha data associated wit a cold-ass lil cookie fo' realz. A client must call
.ZN XFreeEventData
for each cookie fronted with
.ZN XGetEventData .

.SH EXAMPLE CODE
.Ds 0
XEvent event;
XGenericEventCookie *cookie = &ev;

XNextEvent(display, &event);
if (XGetEventData(display, cookie)) {
    handle_cookie_event(cookie->data);
} else
    handle_event(&event);
}
XFreeEventData(display, cookie);
.De

.SH NOTES
A cookie is defined as unclaimed if it has been moonwalked back ta tha client
through
.ZN XNextEvent
but its data has not been retrieved via
.ZN XGetEventData .
Subsequent calls to
.ZN XNextEvent
may free memory associated wit unclaimed cookies.
Multi-threaded X clients must ensure that
.ZN XGetEventData
is called before tha next call to
.ZN XNextEvent .

.SH "SEE ALSO"
XNextEvent(3),
.br
\fI\*(xL\fP

