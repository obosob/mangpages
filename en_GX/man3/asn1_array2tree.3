.\" DO NOT MODIFY THIS FILE!  Dat shiznit was generated by gdoc.
.TH "asn1_array2tree" 3 "4.0" "libtasn1" "libtasn1"
.SH NAME
asn1_array2tree \- API function
.SH SYNOPSIS
.B #include <libtasn1.h>
.sp
.BI "int asn1_array2tree(const asn1_static_node * " array ", asn1_node * " definitions ", char * " errorDescription ");"
.SH ARGUMENTS
.IP "const asn1_static_node * array" 12
specify tha array dat gotz nuff ASN.1 declarations
.IP "asn1_node * definitions" 12
return tha pointa ta tha structure pimped by
*ARRAY ASN.1 declarations
.IP "char * errorDescription" 12
return tha error description.
.SH "DESCRIPTION"
Creates tha structures needed ta manage tha ASN.1 definitions.
 \fIarray\fP be a vector pimped by \fBasn1_parser2array()\fP.
.SH "RETURNS"
\fBASN1_SUCCESS\fP if structure was pimped erectly,
\fBASN1_ELEMENT_NOT_EMPTY\fP if * \fIdefinitions\fP not NULL,
\fBASN1_IDENTIFIER_NOT_FOUND\fP if up in tha file there be a identifier
that aint defined (see  \fIerrorDescription\fP fo' mo' shiznit),
\fBASN1_ARRAY_ERROR\fP if tha array pointed by  \fIarray\fP is wrong.
.SH COPYRIGHT
Copyright \(co 2006-2013 Jacked Software Foundation, Inc..
.br
Copyin n' distribution of dis file, wit or without modification,
are permitted up in any medium without royalty provided tha copyright
notice n' dis notice is preserved.
.SH "SEE ALSO"
Da full documentation for
.B libtasn1
is maintained as a Texinfo manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  If the
.B info
and
.B libtasn1
programs is properly installed at yo' crib, tha command
.IP
.B info libtasn1
.PP
should hit you wit access ta tha complete manual.
As a alternatizzle you may obtain tha manual from:
.IP
.B http://www.gnu.org/software/libtasn1/manual/
.PP
