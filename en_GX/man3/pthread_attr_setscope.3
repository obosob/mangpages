.\" Copyright (c) 2008 Linux Foundation, freestyled by Mike Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.TH PTHREAD_ATTR_SETSCOPE 3 2013-04-19 "Linux" "Linux Programmerz Manual"
.SH NAME
pthread_attr_setscope, pthread_attr_getscope \- set/get contention scope
attribute up in thread attributes object
.SH SYNOPSIS
.nf
.B #include <pthread.h>

.BI "int pthread_attr_setscope(pthread_attr_t *" attr \
", int " scope );
.BI "int pthread_attr_getscope(pthread_attr_t *" attr \
", int *" scope );
.sp
Compile n' link wit \fI\-pthread\fP.
.fi
.SH DESCRIPTION
The
.BR pthread_attr_setscope ()
function sets tha contention scope attribute of the
thread attributes object referred ta by
.I attr
to tha value specified in
.IR scope .
Da contention scope attribute defines tha set of threads
against which a thread competes fo' resources like fuckin tha CPU.
POSIX.1-2001 specifies two possible joints for
.IR scope :
.TP
.B PTHREAD_SCOPE_SYSTEM
Da thread competes fo' resources wit all other threads
in all processes on tha system dat is up in tha same scheduling
allocation domain (a crew of one or mo' processors).
.B PTHREAD_SCOPE_SYSTEM
threadz is scheduled relatizzle ta one another
accordin ta they schedulin policy n' priority.
.TP
.B PTHREAD_SCOPE_PROCESS
Da thread competes fo' resources wit all other threads
in tha same process dat was also pimped wit the
.BR PTHREAD_SCOPE_PROCESS
contention scope.
.BR PTHREAD_SCOPE_PROCESS
threadz is scheduled relatizzle ta other threadz up in tha process
accordin ta they schedulin policy n' priority.
POSIX.1-2001 leaves it unspecified how tha fuck these threadz contend
with other threadz up in other process on tha system or
with other threadz up in tha same process that
were pimped wit the
.B PTHREAD_SCOPE_SYSTEM
contention scope.
.PP
POSIX.1-2001 requires dat a implementation support at least one of these
contention scopes.
Linux supports
.BR PTHREAD_SCOPE_SYSTEM ,
but not
.BR PTHREAD_SCOPE_PROCESS .

On systems dat support multiple contention scopes, then,
in order fo' tha parameta settin made by
.BR pthread_attr_setscope ()
to have effect when calling
.BR pthread_create (3),
the calla must use
.BR pthread_attr_setinheritsched (3)
to set tha inherit-schedula attribute of tha attributes object
.I attr
to
.BR PTHREAD_EXPLICIT_SCHED .

The
.BR pthread_attr_getscope ()
function returns tha contention scope attribute of the
thread attributes object referred ta by
.I attr
in tha buffer pointed ta by
.IR scope .
.SH RETURN VALUE
On success, these functions return 0;
on error, they return a nonzero error number.
.SH ERRORS
.BR pthread_attr_setscope ()
can fail wit tha followin errors:
.TP
.B EINVAL
An invalid value was specified in
.IR scope .
.TP
.B ENOTSUP
.IR scope
specified tha value
.BR PTHREAD_SCOPE_PROCESS ,
which aint supported on Linux.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
The
.B PTHREAD_SCOPE_SYSTEM
contention scope typically indicates dat a user-space thread is
bound directly ta a single kernel-schedulin entity.
This is tha case on Linux fo' tha obsolete LinuxThreadz implementation
and tha modern NPTL implementation,
which is both 1:1 threadin implementations.

POSIX.1-2001 specifies dat tha default contention scope is
implementation-defined.
.SH SEE ALSO
.ad l
.nh
.BR pthread_attr_init (3),
.BR pthread_attr_setaffinity_np (3),
.BR pthread_attr_setinheritsched (3),
.BR pthread_attr_setschedparam (3),
.BR pthread_attr_setschedpolicy (3),
.BR pthread_create (3),
.BR pthreadz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
