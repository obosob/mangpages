'\" t
.\"     Title: glColorSubTable
.\"    Author: opengl.org
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 08/03/2013
.\"    Manual: OpenGL Manual
.\"    Source: opengl.org
.\"  Language: Gangsta
.\"
.TH "GLCOLORSUBTABLE" "3G" "08/03/2013" "opengl.org" "OpenGL Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glColorSubTable \- respecify a portion of a cold-ass lil color table
.SH "C SPECIFICATION"
.HP \w'void\ glColorSubTable('u
.BI "void glColorSubTable(GLenum\ " "target" ", GLsizei\ " "start" ", GLsizei\ " "count" ", GLenum\ " "format" ", GLenum\ " "type" ", const\ GLvoid\ *\ " "data" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
Must be one of
\fBGL_COLOR_TABLE\fR,
\fBGL_POST_CONVOLUTION_COLOR_TABLE\fR, or
\fBGL_POST_COLOR_MATRIX_COLOR_TABLE\fR\&.
.RE
.PP
\fIstart\fR
.RS 4
Da startin index of tha portion of tha color table ta be replaced\&.
.RE
.PP
\fIcount\fR
.RS 4
Da number of table entries ta replace\&.
.RE
.PP
\fIformat\fR
.RS 4
Da format of tha pixel data in
\fIdata\fR\&. Da allowable joints are
\fBGL_RED\fR,
\fBGL_GREEN\fR,
\fBGL_BLUE\fR,
\fBGL_ALPHA\fR,
\fBGL_LUMINANCE\fR,
\fBGL_LUMINANCE_ALPHA\fR,
\fBGL_RGB\fR,
\fBGL_BGR\fR,
\fBGL_RGBA\fR, and
\fBGL_BGRA\fR\&.
.RE
.PP
\fItype\fR
.RS 4
Da type of tha pixel data in
\fIdata\fR\&. Da allowable joints are
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_BYTE\fR,
\fBGL_UNSIGNED_SHORT\fR,
\fBGL_SHORT\fR,
\fBGL_UNSIGNED_INT\fR,
\fBGL_INT\fR,
\fBGL_FLOAT\fR,
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR,
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, and
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR\&.
.RE
.PP
\fIdata\fR
.RS 4
Pointa ta a one\-dimensionizzle array of pixel data dat is processed ta replace tha specified region of tha color table\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglColorSubTable\fR
is used ta respecify a cold-ass lil contiguous portion of a cold-ass lil color table previously defined using
\fBglColorTable\fR()\&. Da pixels referenced by
\fIdata\fR
replace tha portion of tha existin table from indices
\fIstart\fR
to
start + count \- 1, inclusive\&. This region may not include any entries outside tha range of tha color table as dat shiznit was originally specified\&. Well shiiiit, it aint a error ta specify a subtexture wit width of 0 yo, but such a justification has no effect\&.
.PP
If a non\-zero named buffer object is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a portion of a cold-ass lil color table is respecified,
\fIdata\fR
is treated as a funky-ass byte offset tha fuck into tha buffer object\*(Aqs data store\&.
.SH "NOTES"
.PP
\fBglColorSubTable\fR
is present only if
ARB_imaging
is returned when
\fBglGetString\fR()
is called wit a argument of
\fBGL_EXTENSIONS\fR\&.
.PP
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIformat\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItype\fR
is not one of tha allowable joints\&.
.PP
\fBGL_INVALID_VALUE\fR
is generated if
start + count > width\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target n' tha data would be unpacked from tha buffer object such dat tha memory readz required would exceed tha data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound ta the
\fBGL_PIXEL_UNPACK_BUFFER\fR
target and
\fIdata\fR
is not evenly divisible tha fuck into tha number of bytes needed ta store up in memory a thugged-out datum indicated by
\fItype\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglColorSubTable\fR
is executed between tha execution of
\fBglBegin\fR()
and tha correspondin execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetColorTable\fR(),
\fBglGetColorTableParameter\fR()
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_UNPACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglColorTable\fR(),
\fBglColorTableParameter\fR(),
\fBglCopyColorTable\fR(),
\fBglCopyColorSubTable\fR(),
\fBglGetColorTable\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under tha SGI Jacked Software B License\&. For details, see
\m[blue]\fBhttp://oss\&.sgi\&.com/projects/FreeB/\fR\m[]\&.
.SH "AUTHORS"
.PP
\fBopengl\&.org\fR
