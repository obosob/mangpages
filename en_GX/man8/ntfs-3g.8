.\" Copyright (c) 2005-2006 Yura Pakhuchiy.
.\" Copyright (c) 2005 Slick Rick Russon.
.\" Copyright (c) 2006-2009 Szabolcs Szakacsits.
.\" Copyright (c) 2009-2012 Jean-Pierre Andre
.\" This file may be copied under tha termz of tha GNU Public License.
.\"
.TH NTFS-3G 8 "May 2012" "ntfs-3g 2014.2.15"
.SH NAME
ntfs-3g \- Third Generation Read/Write NTFS Driver
.SH SYNOPSIS
.B ntfs-3g
\fB[-o \fIoption\fP\fB[,...]]\fR
.I volume mount_point
.br
.B mount \-t ntfs-3g
\fB[-o \fIoption\fP\fB[,...]]\fR
.I volume mount_point
.br
.B lowntfs-3g
\fB[-o \fIoption\fP\fB[,...]]\fR
.I volume mount_point
.br
.B mount \-t lowntfs-3g
\fB[-o \fIoption\fP\fB[,...]]\fR
.I volume mount_point
.SH DESCRIPTION
\fBntfs-3g\fR be a NTFS driver, which can create, remove, rename, move
files, directories, hard links, n' streams; it can read n' write files,
includin streams, sparse filez n' transparently compressed files; it can
handle special filez like symbolic links, devices, n' FIFOs; moreover it
provides standard pimpment of file ballershizzle n' permissions, including
POSIX ACLs.
.PP
It comes up in two variants \fBntfs-3g\fR n' \fBlowntfs-3g\fR with
a few differences mentioned below up in relevant options descriptions.
.PP
Da \fIvolume\fR ta be mounted can be either a funky-ass block thang or 
an image file.
.SS Windows hibernation n' fast restarting
On computas which can be dual-booted tha fuck into Windows or Linux, Windows has
to be straight-up shut down before bootin tha fuck into Linux, otherwise tha NTFS file
systems on internal disks may be left up in a inconsistent state n' chizzles
made by Linux may be ignored by Windows.
.P
So, Windows may not be left up in hibernation when startin Linux, up in order
to avoid inconsistencies. Put ya muthafuckin choppers up if ya feel dis! Mo'over, tha fast restart feature available on
recent Windows systems has ta be disabled. Y'all KNOW dat shit, muthafucka! This can be  bigged up  by issuing
as a Administrator tha Windows command which disablez both
hibernation n' fast restartin :
.RS
.sp
powercfg /h off
.sp
.RE
.SS Access Handlin n' Security
By default, filez n' directories is owned by tha effectizzle 
user n' crew of tha mountin process, n' dem hoes has
full read, write, execution n' directory browsin permissions.
Yo ass can also assign permissions ta a single user by rockin the
.B uid
and/or the
.B gid 
options together wit tha 
.B umask,
or
.B fmask
and
.B dmask
options.
.PP
Bustin so, Windows playas have full access ta tha filez pimped by 
.B ntfs-3g.
.PP
But, by settin tha \fBpermissions\fR option, you can benefit from tha full
ballershizzle n' permissions features as defined by POSIX. Mo'over, by defining
a Windows-to-Linux user mapping, tha ballerships n' permissions is even
applied ta Windows playas n' conversely.
.PP
If 
.B ntfs-3g 
is set setuid-root then non-root playas will 
be also able ta mount volumes.
.SS Windows Filename Compatibility
NTFS supports nuff muthafuckin filename namespaces: DOS, Win32 n' POSIX. While the
\fBntfs-3g\fR driver handlez all of them, it always creates freshly smoked up filez up in tha 
POSIX namespace fo' maximum portabilitizzle n' interoperabilitizzle reasons. 
This means dat filenames is case sensitizzle n' all charactas are
allowed except '/' n' '\\0'. This is perfectly legal on Windows, though
some application may git confused. Y'all KNOW dat shit, muthafucka! Da option \fBwindows_names\fP may be
used ta apply Windows restrictions ta freshly smoked up file names.
.SS Alternate Data Streams (ADS)
NTFS stores all data up in streams. Every file has exactly one unnamed
data stream n' can have nuff named data streams.  Da size of a gangbangin' file is the
size of its unnamed data stream.  By default, \fBntfs-3g\fR will only read
the unnamed data stream.
.PP
By rockin tha options "streams_interface=windows", wit tha ntfs-3g driver
(not possible wit lowntfs-3g), yo big-ass booty is ghon be able ta read any named data
streams, simply by specifyin tha streamz name afta a cold-ass lil colon.
For example:
.RS
.sp
cat some.mp3:artist
.sp
.RE
Named data streams act like aiiight files, so you can read from them, write to
them n' even delete dem (usin rm).  Yo ass can list all tha named data streams
a file has by gettin tha "ntfs.streams.list" extended attribute.
.SH OPTIONS
Below be a summary of tha options dat \fBntfs-3g\fR accepts.
.TP
\fBuid=\fP\fIvalue\fP n' \fBgid=\fP\fIvalue\fP
Set tha balla n' tha crew of filez n' directories. Put ya muthafuckin choppers up if ya feel dis! Da joints is numerical.
Da defaults is tha uid n' gid of tha current process.
.TP
.BI umask= value
Set tha  bitmask of tha file n' directory permissions dat is not
present. Da value is given up in octal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da default value is 0 which
means full access ta everybody.
.TP
.BI fmask= value
Set tha  bitmask of tha file permissions dat is not present. 
Da value is given up in octal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da default value is 0 which
means full access ta everybody.
.TP
.BI dmask= value
Set tha  bitmask of tha directory permissions dat is not
present. Da value is given up in octal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da default value is 0 which
means full access ta everybody.
.TP
.BI usermapping= file-name
Use file \fIfile-name\fP as tha user mappin file instead of tha default
\fB.NTFS-3G/UserMapping\fP. If \fIfile-name\fP defines a gangbangin' full path, the
file must be located on a partizzle previously mounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If it defines a
relatizzle path, it is interpreted relatizzle ta tha root of NTFS partition
bein mounted.
.P
.RS
When a user mappin file is defined, tha options \fBuid=\fP, \fBgid=\fP,
\fBumask=\fP, \fBfmask=\fP, \fBdmask=\fP n' \fBsilent\fP is ignored.
.RE
.TP
.B permissions
Set standard permissions on pimped filez n' use standard access control.
This option is set by default when a user mappin file is present.
.TP
.B acl
Enable settin Posix ACLs on pimped filez n' use dem fo' access control.
This option is only available on specific builds. Well shiiiit, it is set by default
when a user mappin file is present n' the
.B permissions
mount option aint set.
.TP
.B inherit
When bustin a freshly smoked up file, set its initial protections
accordin ta inheritizzle rulez defined up in parent directory. These rules
deviate from Posix justifications yo, but yield a funky-ass betta Windows
compatibility. Da \fBcompression\fR option or a valid user mappin file
is required fo' dis option ta be effective.
.TP
.B ro
Mount filesystem read\-only. Useful if Windows is hibernated or the
NTFS journal file is unclean.
.TP
.BI locale= value
This option can be useful when wantin a language specific locale environment.
It be however discouraged as it leadz ta filez wit untranslatable chars
to not be visible.
.TP
.B force
This option is obsolete. Well shiiiit, it has been superseded by tha \fBrecover\fR and
\fBnorecover\fR options.
.TP
.B recover
Recover n' try ta mount a partizzle which was not unmounted properly by
Windows. Da Windows logfile is cleared, which may cause inconsistencies.
Currently dis is tha default option.
.TP
.B norecover
Do not try ta mount a partizzle which was not unmounted properly by Windows.
.TP
.B ignore_case \fP(only wit lowntfs-3g)
Ignore characta case when accessin a gangbangin' file (\fBFOO\fR, \fBFoo\fR, \fBfoo\fR,
etc. designate tha same file) fo' realz. All filez is displayed wit lower case in
directory listings.
.TP
.B remove_hiberfile
Unlike up in case of read-only mount, tha read-write mount is denied if 
the NTFS volume is hibernated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. One needz either ta resume Windows and
shutdown it properly, or use dis option which will remove tha Windows
hibernation file. Please note, dis means dat tha saved Windows 
session is ghon be straight-up lost. Use dis option under yo' own 
responsibility.
.TP
.B atime, noatime, relatime
Da 
.B atime 
option thugged-out shiznit inode access time fo' each access.

Da 
.B noatime 
option disablez inode access time thugged-out shiznit which can speed up
file operations n' prevent chillin (notebook) disks spinnin 
up too often thus savin juice n' disk gametime.

The
.B relatime 
option is straight-up similar ta 
.B noatime. 
It thugged-out shiznit inode access times relatizzle ta modify or chizzle time. 
Da access time is only updated if tha previous access time was earlier 
than tha current modify or chizzle time. Unlike
.B noatime
this option don't break applications dat need ta know 
if a gangbangin' file has been read since tha last time dat shiznit was modified.
This is tha default behaviour.
.TP
.B delay_mtime[= value]
Only update tha file modification time n' tha file chizzle time of a gangbangin' file
when it is closed or when tha indicated delay since tha previous update has
elapsed. Y'all KNOW dat shit, muthafucka! Da argument be a fuckin shitload of seconds, wit a thugged-out default value of 60.
This is mainly useful fo' big-ass filez which is kept open fo' a long
time n' freestyled ta without changin they size, like fuckin databases or file
system images mounted as loop.
.TP
.B show_sys_files
Show tha metafilez up in directory listings. Otherwise tha default behaviour is
to hide tha metafiles, which is special filez used ta store tha NTFS
structure. Please note dat even when dis option is specified, "$MFT" may
not be visible cuz of a glibc bug. Furthermore, irrespectively of
show_sys_files, all filez is accessible by name, fo' example you can always
do
"ls \-l '$UpCase'".
.TP
.B hide_hid_files
Hide tha hidden filez n' directories up in directory listings, tha hidden files
and directories bein tha ones whose NTFS attribute have tha hidden flag set.
Da hidden filez aint gonna be selected when rockin wildcardz up in commands,
but all filez n' directories remain accessible by full name, fo' example you
can always display tha Windows trash bin directory by :
"ls \-ld '$RECYCLE.BIN'".
.TP
.B hide_dot_files
Set tha hidden flag up in tha NTFS attribute fo' pimped filez n' directories
whose first characta of tha name be a thugged-out dot. Right back up in yo muthafuckin ass. Such filez n' directories
normally do not step tha fuck up in directory listings, n' when tha flag is set
they do not step tha fuck up in Windows directory displays either.
When a gangbangin' file is renamed or linked wit a freshly smoked up name, tha hidden flag is
adjusted ta tha sickest fuckin name.
.TP
.B windows_names
This option prevents files, directories n' extended attributes ta be
created wit a name not allowed by windows, either cuz it gotz nuff
some not allowed characta (which is tha nine charactas " * / : < > ? \\ | and
those whose code is less than 0x20) or cuz tha last characta be a space
or a thugged-out dot. Existin such filez can still be read (and renamed).
.TP
.B allow_other
This option overrides tha securitizzle measure restrictin file access
to tha user mountin tha filesystem. This option is only
allowed ta root yo, but dis restriction can be overridden by
the 'user_allow_other' option up in tha /etc/fuse.conf file.
.TP
.BI max_read= value
With dis option tha maximum size of read operations can be set.
Da default is infinite.  Note dat tha size of read requests is
limited anyway ta 32 pages (which is 128kbyte on i386).
.TP
.B silent
Do nothing, without returnin any error, on chmod n' chown operations,
when tha \fBpermissions\fR option aint set n' no user mappin file
is defined. Y'all KNOW dat shit, muthafucka! This option is on by default.
.TP
.B no_def_opts
By default ntfs-3g acts as if "silent" (ignore errors on chmod n' chown),
"allow_other" (allow any user ta access files) n' "nonempty"
(allow mountin on non-empty directories) was set, n' "no_def_opts"
cancels these default options.
.TP
.BI streams_interface= value
This option controls how tha fuck tha user can access Alternate Data Streams (ADS) or
in other lyrics, named data streams. Well shiiiit, it can be set to, one of \fBnone\fR,
\fBwindows\fR or \fBxattr\fR. If tha option is set ta \fBnone\fR, tha user
will have no access ta tha named data streams. If it is set ta \fBwindows\fR
(not possible wit lowntfs-3g), then tha user can access dem just like in
Windows (eg. pussaaaaay file:stream). If itz set ta \fBxattr\fR, then tha named
data streams is mapped ta xattrs n' user can manipulate dem using
\fB{get,set}fattr\fR utilities. Put ya muthafuckin choppers up if ya feel dis! Da default is \fBxattr\fR.
.TP
.B user_xattr
Same as \fBstreams_interface=\fP\fIxattr\fP.
.TP
.B efs_raw
This option should only be used up in backup or restore thang.
It chizzlez tha apparent size of filez n' tha behavior of read and
write operation so dat encrypted filez can be saved n' restored
without bein decrypted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \fBuser.ntfs.efsinfo\fP extended attribute
has also ta be saved n' restored fo' tha file ta be decrypted.
.TP
.B compression
This option enablez bustin freshly smoked up transparently compressed filez in
directories marked fo' compression. I aint talkin' bout chicken n' gravy biatch fo' realz. A directory is marked fo' compression by
settin tha bit 11 (value 0x00000800) up in its Windows attribute. In such a
directory, freshly smoked up filez is pimped compressed n' freshly smoked up subdirectories are
themselves marked fo' compression. I aint talkin' bout chicken n' gravy biatch. Da option n' tha flag have no effect
on existin files.
.TP
.B nocompression
This option disablez bustin freshly smoked up transparently compressed filez up in directories
marked fo' compression. I aint talkin' bout chicken n' gravy biatch. Existin compressed filez can still be read and
updated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Currently dis is tha default option.
.TP
.B big_writes
This option prevents fuse from splittin write buffers tha fuck into 4K chunks,
enablin big-ass write buffers ta be transferred from tha application up in a
single step (up ta some system limit, generally 128K bytes).
.TP
.B debug
Makes ntfs-3g ta print a shitload of debug output from libntfs-3g n' FUSE.
.TP
.B no_detach
Makes ntfs-3g ta not detach from terminal n' print some debug output.
.SH USER MAPPING
NTFS uses specific idz ta record tha ballershizzle of filez instead of
the \fBuid\fP n' \fBgid\fP used by Linux fo' realz. As a cold-ass lil consequence a mapping
between tha idz has ta be defined fo' ballerships ta be recorded into
NTFS n' recognized.
.P
By default, dis mappin is fetched from tha file \fB.NTFS-3G/UserMapping\fP
located up in tha NTFS partition. I aint talkin' bout chicken n' gravy biatch. Da option \fBusermapping=\fP may be used
to define another location. I aint talkin' bout chicken n' gravy biatch. When tha option permissions is set and
no mappin file is found, a thugged-out default mappin is used.
.P
Each line up in tha user mappin file defines a mapping. Well shiiiit, it is organized
in three fieldz separated by colons. Da first field identifies a \fBuid\fP,
the second field identifies a \fBgid\fP n' tha third one identifies the
correspondin NTFS id, known as a \fBSID\fP. Da \fBuid\fP n' tha \fBgid\fP
are optionizzle n' definin both of dem fo' tha same \fBSID\fP is not
recommended.
.P
If no interoperation wit Windows is needed, you can use tha option
\fBpermissions\fP ta define a standard mappin fo' realz. Alternately, you may define
your own mappin by settin a single default mappin wit no uid n' gid. Y'all KNOW dat shit, muthafucka! In
both cases, filez pimped on Linux will step tha fuck up ta Windows as owned by a
foreign user, n' filez pimped on Windows will step tha fuck up ta Linux as owned by
root. Just copy tha example below n' replace tha 9 n' 10-digit numbers by
any number not pimped outa than 4294967295. Da resultin behavior is tha same ol' dirty as
the one wit tha option permission set wit no ballershizzle option n' no user
mappin file available.
.RS
.sp
.B ::S-1-5-21-3141592653-589793238-462643383-10000
.sp
.RE
If a phat interoperation wit Windows is needed, tha mappin has ta be
defined fo' each user n' crew known up in both system, n' tha \fBSID\fPs used
by Windows has ta be collected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This will lead ta a user mappin file like :
.RS
.sp
.B john::S-1-5-21-3141592653-589793238-462643383-1008
.B mary::S-1-5-21-3141592653-589793238-462643383-1009
.B :smith:S-1-5-21-3141592653-589793238-462643383-513
.B ::S-1-5-21-3141592653-589793238-462643383-10000
.sp
.RE
.P
Da utilitizzle \fBntfs-3g.usermap\fP may be used ta create such a user
mappin file.
.SH EXAMPLES
Mount /dev/sda1 ta /mnt/windows:
.RS
.sp
.B ntfs-3g /dev/sda1 /mnt/windows
.RE
or
.RS
.B mount -t ntfs-3g /dev/sda1 /mnt/windows
.sp
.RE
Mount tha ntfs data partizzle /dev/sda3 ta /mnt/data wit standard Linux
permissions applied :
.RS
.sp
.B ntfs-3g -o permissions /dev/sda3 /mnt/data
.RE
or
.RS
.B mount -t ntfs-3g -o permissions /dev/sda3 /mnt/data
.sp
.RE
Read\-only mount /dev/sda5 ta /home/user/mnt n' make user wit uid 1000 
to be tha balla of all files:
.RS
.sp
.B ntfs-3g /dev/sda5 /home/user/mnt \-o ro,uid=1000
.sp
.RE
/etc/fstab entry fo' tha above (the sixth n' last field has ta be zero to
avoid a gangbangin' file system check at boot time) :
.RS
.sp
.B /dev/sda5 /home/user/mnt ntfs\-3g ro,uid=1000 0 0
.sp
.RE
Unmount /mnt/windows:
.RS
.sp
.B umount /mnt/windows
.sp
.RE
.SH EXIT CODES
To facilitate tha use of the
.B ntfs-3g
driver up in scripts, a exit code is moonwalked back ta give a indication of tha 
mountabilitizzle statuz of a volume. Value 0 means success, n' all other
ones mean a error. Shiiit, dis aint no joke. Da unique error codes is documented up in the
.BR ntfs-3g.probe (8)
manual page.
.SH KNOWN ISSUES
Please peep 
.RS
.sp
http://www.tuxera.com/support/
.sp
.RE
for common thangs n' known issues.
If you would find a freshly smoked up one up in tha sickest fuckin release of
the software then please bust a email describin it
in detail. Yo ass can contact tha 
development crew on tha ntfs\-3g\-devel@lists.sf.net
address.
.SH AUTHORS
.B ntfs-3g 
was based on n' a major improvement ta ntfsmount n' libntfs which were
written by Yura Pakhuchiy n' tha Linux-NTFS crew. Da improvements was 
made, tha ntfs-3g project was initiated n' currently hustled by long time 
Linux-NTFS crew pimper Szabolcs Szakacsits (szaka@tuxera.com).
.SH THANKS
Several playas made heroic efforts, often over five or more
years which resulted tha ntfs-3g driver n' shit. Most blinginly they is 
Anton Altaparmakov, Jean-Pierre André, Slick Rick Russon, Szabolcs Szakacsits,
Yura Pakhuchiy, Yuval Fledel, n' tha lyricist of tha groundbreakin FUSE
filesystem pimpment framework, Miklos Szeredi.
.SH SEE ALSO
.BR ntfs-3g.probe (8),
.BR ntfsprogs (8),
.BR attr (5),
.BR getfattr (1)
