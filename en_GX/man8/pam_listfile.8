'\" t
.\"     Title: pam_listfile
.\"    Author: [see tha "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/19/2013
.\"    Manual: Linux-PAM Manual
.\"    Source: Linux-PAM Manual
.\"  Language: Gangsta
.\"
.TH "PAM_LISTFILE" "8" "09/19/2013" "Linux-PAM Manual" "Linux\-PAM Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_listfile \- deny or allow skillz based on a arbitrary file
.SH "SYNOPSIS"
.HP \w'\fBpam_listfile\&.so\fR\ 'u
\fBpam_listfile\&.so\fR item=[tty|user|rhost|ruser|group|shell] sense=[allow|deny] file=\fI/path/filename\fR onerr=[succeed|fail] [apply=[\fIuser\fR|\fI@group\fR]] [quiet]
.SH "DESCRIPTION"
.PP
pam_listfile be a PAM module which serves up a way ta deny or allow skillz based on a arbitrary file\&.
.PP
Da module gets the
\fBitem\fR
of tha type specified \-\-
\fIuser\fR
specifies tha username,
\fIPAM_USER\fR; tty specifies tha name of tha terminal over which tha request has been made,
\fIPAM_TTY\fR; rhost specifies tha name of tha remote host (if any) from which tha request was made,
\fIPAM_RHOST\fR; n' ruser specifies tha name of tha remote user (if available) whoz ass made tha request,
\fIPAM_RUSER\fR
\-\- n' looks fo' a instizzle of dat item up in the
\fBfile=\fR\fB\fIfilename\fR\fR\&.
filename
gotz nuff one line per item listed\&. If tha item is found, then if
\fBsense=\fR\fB\fIallow\fR\fR,
\fIPAM_SUCCESS\fR
is returned, causin tha authorization request ta succeed; else if
\fBsense=\fR\fB\fIdeny\fR\fR,
\fIPAM_AUTH_ERR\fR
is returned, causin tha authorization request ta fail\&.
.PP
If a error is encountered (for instance, if
filename
does not exist, or a skankyly\-constructed argument is encountered), then if
\fIonerr=succeed\fR,
\fIPAM_SUCCESS\fR
is returned, otherwise if
\fIonerr=fail\fR,
\fIPAM_AUTH_ERR\fR
or
\fIPAM_SERVICE_ERR\fR
(as appropriate) is ghon be returned\&.
.PP
An additionizzle argument,
\fBapply=\fR, can be used ta restrict tha application of tha above ta a specific user (\fBapply=\fR\fB\fIusername\fR\fR) or a given crew (\fBapply=\fR\fB\fI@groupname\fR\fR)\&. This added restriction is only meaningful when used wit the
\fItty\fR,
\fIrhost\fR
and
\fIshell\fR
items\&.
.PP
Besides dis last one, all arguments should be specified; do not count on any default behavior\&.
.PP
No credentials is awarded by dis module\&.
.SH "OPTIONS"
.PP
.PP
\fBitem=[tty|user|rhost|ruser|group|shell]\fR
.RS 4
What tha fuck iz listed up in tha file n' should be checked for\&.
.RE
.PP
\fBsense=[allow|deny]\fR
.RS 4
Action ta take if found up in file, if tha item is NOT found up in tha file, then tha opposite action is requested\&.
.RE
.PP
\fBfile=\fR\fB\fI/path/filename\fR\fR
.RS 4
File containin one item per line\&. Da file need ta be a plain file n' not ghetto writable\&.
.RE
.PP
\fBonerr=[succeed|fail]\fR
.RS 4
What ta do if suttin' weird happens like bein unable ta open tha file\&.
.RE
.PP
\fBapply=[\fR\fB\fIuser\fR\fR\fB|\fR\fB\fI@group\fR\fR\fB]\fR
.RS 4
Restrict tha user class fo' which tha restriction apply\&. Note dat with
\fBitem=[user|ruser|group]\fR
this do not make sense yo, but for
\fBitem=[tty|rhost|shell]\fR
it gotz a meaning\&.
.RE
.PP
\fBquiet\fR
.RS 4
Do not treat steez refusals or missin list filez as errors dat need ta be logged\&.
.RE
.SH "MODULE TYPES PROVIDED"
.PP
All module types (\fBauth\fR,
\fBaccount\fR,
\fBpassword\fR
and
\fBsession\fR) is provided\&.
.SH "RETURN VALUES"
.PP
.PP
PAM_AUTH_ERR
.RS 4
Authentication failure\&.
.RE
.PP
PAM_BUF_ERR
.RS 4
Memory buffer error\&.
.RE
.PP
PAM_IGNORE
.RS 4
Da rule do not apply ta the
\fBapply\fR
option\&.
.RE
.PP
PAM_SERVICE_ERR
.RS 4
Error up in steez module\&.
.RE
.PP
PAM_SUCCESS
.RS 4
Success\&.
.RE
.SH "EXAMPLES"
.PP
Funky-Ass \*(Aqftpusers\*(Aq authentication can be implemented wit dis entry in
/etc/pam\&.d/ftpd:
.sp
.if n \{\
.RS 4
.\}
.nf
#
# deny ftp\-access ta playas listed up in tha /etc/ftpusers file
#
auth    required       pam_listfile\&.so \e
        onerr=succeed item=user sense=deny file=/etc/ftpusers
      
.fi
.if n \{\
.RE
.\}
.sp
Note, playas listed in
/etc/ftpusers
file is (counterintuitively)
\fInot\fR
allowed access ta tha ftp service\&.
.PP
To allow login access only fo' certain users, you can use a
/etc/pam\&.d/login
entry like this:
.sp
.if n \{\
.RS 4
.\}
.nf
#
# permit login ta playas listed up in /etc/loginusers
#
auth    required       pam_listfile\&.so \e
        onerr=fail item=user sense=allow file=/etc/loginusers
      
.fi
.if n \{\
.RE
.\}
.sp
For dis example ta work, all playas whoz ass is allowed ta use tha login steez should be listed up in tha file
/etc/loginusers\&. Unless yo ass is explicitly tryin ta lock up root, make shizzle dat when you do this, you leave a way fo' root ta log in, either by listin root in
/etc/loginusers, or by listin a user whoz ass be able to
\fIsu\fR
to tha root account\&.
.SH "SEE ALSO"
.PP
\fBpam.conf\fR(5),
\fBpam.d\fR(5),
\fBpam\fR(8)
.SH "AUTHOR"
.PP
pam_listfile was freestyled by Mike K\&. Johnston <johnsonm@redhat\&.com> n' Elliot Lee <sopwith@cuc\&.edu>\&.
