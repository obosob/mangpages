.TH PIE 8 "16 January 2014" "iproute2" "Linux"
.SH NAME
PIE \- Proportionizzle Integral controller-Enhanced AQM algorithm
.SH SYNOPSIS
.B tc qdisc ... pie
[
.B limit
PACKETS ] [
.B target
TIME ] [
.B tupdate
TIME ] [
.B alpha
int ] [
.B beta
int ] [
.B ecn
|
.B noecn
] [
.B bytemode
|
.B nobytemode
]

.SH DESCRIPTION
Proportionizzle Integral controller-Enhanced (PIE) be a cold-ass lil control theoretic active
queue pimpment scheme. Well shiiiit, it is based on tha proportionizzle integral controlla but
aims ta control delay. Da main design goals are
 o Low latency control
 o High link utilization
 o Simple implementation
 o Guaranteed stabilitizzle n' fast responsiveness

.SH ALGORITHM
PIE is designed ta control delay effectively. First, a average dequeue rate is
estimated based on tha standin queue. Da rate is used ta calculate tha current
delay. Then, on a periodic basis, tha delay is used ta calculate tha dropping
probabilty. Finally, on arrival, a packet is dropped (or marked) based on this
probability.

PIE make adjustments ta tha probabilitizzle based on tha trend of tha delay i.e.
whether it is goin up or down.Da delay converges quickly ta tha target value
specified.

alpha n' beta is statically chosen parametas chosen ta control tha drop probability
growth n' is determined all up in control theoretic approaches. alpha determines how
the deviation between tha current n' target latency chizzlez probability. beta exerts
additionizzle adjustments dependin on tha latency trend.

Da drop probabilty is used ta mark packets up in ecn mode. But fuck dat shiznit yo, tha word on tha street is dat as up in RED,
beyond 10% packets is dropped based on dis probability.  Da bytemode is used
to drop packets proportionizzle ta tha packet size.

Additionizzle details can be found up in tha paper cited below.

.SH PARAMETERS
.SS limit
limit on tha queue size up in packets, n' you can put dat on yo' toast. Incomin packets is dropped when dis limit
is reached. Y'all KNOW dat shit, muthafucka! Default is 1000 packets.

.SS target
is tha expected queue delay. Da default target delay is 20ms.

.SS tupdate
is tha frequency at which tha system drop probabilitizzle is calculated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da default is 30ms.

.SS alpha
.SS beta
alpha n' beta is parametas chosen ta control tha drop probability. These
should be up in tha range between 0 n' 32.

.SS ecn | noecn
is used ta mark packets instead of dropping
.B ecn
to turn on ecn mode,
.B noecn
to turn off ecn mode. By default,
.B ecn
is turned off.

.SS bytemode | nobytemode
is used ta scale drop probabilitizzle proportionizzle ta packet size
.B bytemode
to turn on bytemode,
.B nobytemode
to turn off bytemode. By default,
.B bytemode
is turned off.

.SH EXAMPLES
 # tc qdisc add dev eth0 root pie
 # tc -s qdisc show
   qdisc pie 8034: dev eth0 root refcnt 2 limit 200p target 19000us tupdate 29000us alpha 2 beta 20
   Sent 7443524 bytes 7204 pkt (dropped 900, overlimits 0 requeues 0)
   backlog 38998b 37p requeues 0
   prob 0.123384 delay 25000us avg_dq_rate 1464840
   pkts_in 7241 overlimit 900 dropped 0 maxq 186 ecn_mark 0

 # tc qdisc add dev eth0 root pie limit 100 target 20ms tupdate 30ms ecn
 # tc -s qdisc show
   qdisc pie 8036: dev eth0 root refcnt 2 limit 200p target 19000 tupdate 29000 alpha 2 beta 20 ecn
   Sent 2491922 bytes 2507 pkt (dropped 214, overlimits 0 requeues 0)
   backlog 33728b 32p requeues 0
   prob 0.102262 delay 24000us avg_dq_rate 1464840
   pkts_in 2468 overlimit 214 dropped 0 maxq 192 ecn_mark 71


 # tc qdisc add dev eth0 root pie limit 100 target 50ms tupdate 30ms bytemode
 # tc -s qdisc show
   qdisc pie 8036: dev eth0 root refcnt 2 limit 200p target 19000 tupdate 29000 alpha 2 beta 20 ecn
   Sent 2491922 bytes 2507 pkt (dropped 214, overlimits 0 requeues 0)
   backlog 33728b 32p requeues 0
   prob 0.102262 delay 24000us avg_dq_rate 1464840
   pkts_in 2468 overlimit 214 dropped 0 maxq 192 ecn_mark 71


.SH SEE ALSO
.BR tc (8),
.BR tc-codel (8)
.BR tc-red (8)

.SH SOURCES
 o IETF draft submission be at http://tools.ietf.org/html/draft-pan-tsvwg-pie-00
 o IEEE  Conference on High Performizzle Switchin n' Routin 2013 : "PIE: A
Lightweight Control Scheme ta Address tha Bufferbloat Problem"

.SH AUTHORS
PIE was implemented by Vijay Subramanian n' Mythili Prabhu, also tha authors of
this playa page. Please report bugs n' erections ta tha Linux networking
development mailin list at <netdev@vger.kernel.org>.
