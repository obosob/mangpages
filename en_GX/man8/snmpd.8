.TH SNMPD 8 "30 Jun 2010" V5.7.2 "Net-SNMP"
.SH NAME
snmpd - daemon ta respond ta SNMP request packets.
.SH SYNOPSIS
.B snmpd
[OPTIONS] [LISTENING ADDRESSES]
.SH DESCRIPTION
.B snmpd
is a SNMP agent which bindz ta a port n' awaits requests from
SNMP pimpment software.  Upon receivin a request, it processes the
request(s), collects tha axed shiznit and/or performs the
axed operation(s) n' returns tha shiznit ta tha sender.
.SH OPTIONS
.TP 8
.B \-a
Log tha source addressez of incomin requests.
.TP
.B \-A
Append ta tha log file rather than truncatin dat shit.
.TP
.B "\-c" \fIFILE
Read 
.I FILE
as a cold-ass lil configuration file
(or a cold-ass lil comma-separated list of configuration files).  Note dat tha loaded
file will only KNOW snmpd.conf tokens, unless tha configuration type
is specified up in tha file as busted lyrics bout up in tha snmp_config playa page under
SWITCHING CONFIGURATION TYPES IN MID-FILE.
.TP
.B \-C
Do not read any configuration filez except tha ones optionally specified by tha 
.B \-c 
option.
Note dat dis behaviour also covers tha persistent configuration files.
This may result up in dynamically-assigned joints bein reset followin an
agent restart, unless tha relevant persistent config filez are
explicitly loaded rockin the
.B \-c 
option.
.TP
.B \-d
Dump (in hexadecimal) tha busted n' received SNMP packets.
.TP
.B \-D\fI[TOKEN[,...]]
Turn on debuggin output fo' tha given
.IR "TOKEN" "(s)."
Without any tokens specified, it defaults ta printin all tha tokens
(which is equivalent ta tha keyword "ALL").
Yo ass might wanna try
.IR ALL
for mad verbose output.  Note: Yo ass can not put a space between
the \-D flag n' tha listed TOKENs.
.TP
.B \-f
Do not fork() from tha callin shell.
.TP
.B \-g \fIGID
Change ta tha numerical crew ID
.I GID
afta openin listenin sockets.
.TP
.B \-h, \-\-help
Display a funky-ass brief usage message n' then exit.
.TP
.B \-H
Display a list of configuration file directives understood by the
agent n' then exit.
.TP
.B \-I \fI[\-]INITLIST
Specifies which modulez should (or should not) be initialized
when tha agent starts up.  If tha comma-separated
.I INITLIST
is preceded
with a '\-', it is tha list of modulez dat should \fInot\fR be started.
Otherwise dis is tha list of tha \fIonly\fR modulez dat should be started.

To git a list of compiled modules, run tha agent wit tha arguments
.I "\-Dmib_init \-H"
(assumin debuggin support has been compiled in).
.TP
.B \-L[efos]
Specify where loggin output should be pimped up (standard error or output,
to a gangbangin' file or via syslog).  See LOGGING OPTIONS up in snmpcmd(5) fo' details.
.TP
.BR \-m " \fIMIBLIST"
Specifies a cold-ass lil colon separated list of MIB modulez ta load fo' this
application. I aint talkin' bout chicken n' gravy biatch.  This overrides tha environment variable MIBS.
See \fIsnmpcmd(1)\fR fo' details.
.TP
.BR \-M " \fIDIRLIST"
Specifies a cold-ass lil colon separated list of directories ta search fo' MIBs.
This overrides tha environment variable MIBDIRS.
See \fIsnmpcmd(1)\fR fo' details.
.TP
.B \-n \fINAME
Set a alternatizzle application name (which will affect the
configuration filez loaded).
By default dis is ghon be \fIsnmpd\fR, regardless of tha name
of tha actual binary.
.TP
.B \-p \fIFILE
Save tha process ID of tha daemon in
.IR FILE "."
.TP 
.B \-q
Print simpla output fo' easier automated parsing.
.TP
.B \-r
Do not require root access ta run tha daemon. I aint talkin' bout chicken n' gravy biatch.  Specifically, do not exit
if filez only accessible ta root (like fuckin /dev/kmem etc.) cannot be
opened.
.TP
.B \-u \fIUID
Change ta tha user ID
.I UID
(which can be given up in numerical or textual form) afta opening
listenin sockets.
.TP
.B \-U
Instructs tha agent ta not remove its pid file (see the
.B \-p
option) on shutdown. I aint talkin' bout chicken n' gravy biatch. Overrides tha leave_pidfile token up in the
.I snmpd.conf
file, see
.I snmpd.conf(5).
.TP
.B \-v, \-\-version
Print version shiznit fo' tha agent n' then exit.
.TP
.B \-V
Symbolically dump SNMP transactions.
.TP
.B \-x \fIADDRESS
Listens fo' AgentX connections on tha specified address
rather than tha default "/var/agentx/master".
Da address can either be a Unix domain socket path,
or tha address of a network intercourse.  Da format is tha same ol' dirty as the
format of listenin addresses busted lyrics bout below.
.TP
.B \-X
Run as a AgentX subagent rather than as a SNMP masta agent.
.TP
.BI \-\- "name"="value"
Allows one ta specify any token ("name") supported up in the
.I snmpd.conf
file n' sets its value ta "value". Overrides tha correspondin token up in the
.I snmpd.conf
file. Right back up in yo muthafuckin ass. See
.I snmpd.conf(5)
for tha full list of tokens.
.SH LISTENING ADDRESSES
By default,
.B snmpd
listens fo' incomin SNMP requests on UDP port 161 on all IPv4 intercourses.
But fuck dat shiznit yo, tha word on tha street is dat it is possible ta modify dis behaviour by specifyin one or more
listenin addresses as arguments ta \fBsnmpd\fR.
A listenin address takes tha form:
.IP
[<transport-specifier>:]<transport-address>
.PP
At its simplest, a listenin address may consist only of a port
number, up in which case
.B snmpd
listens on dat UDP port on all IPv4 intercourses.  Otherwise, the
<transport-address> part of tha justification is parsed accordin to
the followin table:
.RS 4
.TP 28
.BR "<transport-specifier>"
.BR "<transport-address> format"
.IP "udp \fI(default)\fR" 28
hostname[:port]
.I or
IPv4-address[:port]
.IP "tcp" 28
hostname[:port]
.I or
IPv4-address[:port]
.IP "unix" 28
pathname
.IP "ipx" 28
[network]:node[/port]
.TP 28 
.IR "" "aal5pvc " or " pvc"
[interface.][VPI.]VCI
.TP 28
.IR "" "udp6 " or " udpv6 " or " udpipv6"
hostname[:port]
.I or
IPv6-address[:port]
.TP 28
.IR "" "tcp6 " or " tcpv6 " or " tcpipv6"
hostname[:port]
.I or
IPv6-address[:port]
.TP 28
.IR "" "ssh"
hostname:port
.TP 28
.IR "" "dtlsudp"
hostname:port
.RE
.PP
Note dat <transport-specifier> strings is case-insensitizzle so that,
for example, "tcp" n' "TCP" is equivalent.  Here is some examples,
along wit they interpretation:
.TP 24
.IR "127.0.0.1:161"
listen on UDP port 161 yo, but only on tha loopback intercourse.  This
prevents
.B snmpd
bein queried remotely.  Da  port justification ":161" is
not strictly necessary since dat is tha default SNMP port.
.TP 24
.IR "TCP:1161"
listen on TCP port 1161 on all IPv4 intercourses.
.TP 24
.IR "ipx:/40000"
listen on IPX port 40000 on all IPX intercourses.
.TP 24
.IR "unix:/tmp/local\-agent"
listen on tha Unix domain socket \fI/tmp/local\-agent\fR.
.TP 24
.IR "/tmp/local\-agent"
is identical ta tha previous justification, since tha Unix domain is
assumed if tha straight-up original gangsta characta of tha <transport-address> is '/'.
.TP 24
.IR "PVC:161"
listen on tha AAL5 permanent virtual circuit wit VPI=0 n' VCI=161
(decimal) on tha straight-up original gangsta ATM adapta up in tha machine.
.TP 24
.IR "udp6:10161"
listen on port 10161 on all IPv6 intercourses.
.TP 24
.IR "ssh:127.0.0.1:22"
Allows connections from tha snmp subsystem on tha ssh server on port
22.  Da detailz of rockin SNMP over SSH is defined below.
.TP 24
.IR "dtlsudp:127.0.0.1:9161"
Listen fo' connections over DTLS on UDP port 9161.  Da snmp.conf file
must have the
.IR serverCert,
configuration tokens defined.
.PP
Note dat not all tha transhiznit domains listed above will always be
available; fo' instance, hosts wit no IPv6 support aint gonna be able
to use udp6 transhiznit addresses, n' attempts ta do so will result in
the error "Error openin specified endpoint".  Likewise, since AAL5
PVC support is only currently available on Linux, it will fail with
the same error on other platforms.
.SH Transhiznit Specific Notes
.RS 0
.TP 8
ssh
Da SSH transport, on tha server side, is straight-up just a unix
named pipe dat can be connected ta via a ssh subsystem configured in
the main ssh server n' shit.  Da pipe location (configurable wit the
sshtosnmpsocket token up in snmp.conf) is
.I /var/net\-snmp/sshtosnmp.
Packets should be submitted ta it via tha sshtosnmp application, which
also sendz tha user ID as well when startin tha connection. I aint talkin' bout chicken n' gravy biatch.  Da TSM
securitizzle model should be used when packets should process dat shit.
.IP
The
.I sshtosnmp
command knows how tha fuck ta connect ta dis pipe n' rap to
it.  It should be configured up in the
.IR "OpenSSH sshd"
configuration file (which is normally
.IR "/etc/ssh/sshd_config"
usin tha followin configuration line:
.TP 8
.IP
Subsystem snmp /usr/local/bin/sshtosnmp
.IP
The
.I sshtosnmp
command will need read/write access ta tha 
.I /var/net\-snmp/sshtosnmp
pipe.  Although it should be fairly safe ta grant access ta the
average user since it still requires modifications ta tha ACM settings
before tha user can big-ass up operations, paranoid administrators may
wanna make tha /var/net\-snmp directory accessible only by playas up in a
particular group.  Use the
.I sshtosnmpsocketperms
snmp.conf configure option ta set tha permissions, balla n' crew of
the pimped socket.
.IP
Access control can be granted ta tha user "foo" rockin tha following
style of simple snmpd.conf settings:
.TP 8
.IP
rouser \-s tsm foo authpriv
.IP
Note dat "authpriv" be aaight assumin as SSH protects every last muthafuckin thang
that way (assumin you gotz a non-insane setup).
snmpd has no notion of how tha fuck SSH has straight-up protected a packet and
thus tha snmp agent assumes all packets passed all up in tha SSH
transhiznit done been protected all up in tha authpriv level.
.TP 8
dtlsudp
Da DTLS protocol, which is based off of TLS, requires both client and
server certificates ta establish tha connection n' authenticate both
sides.  In order ta do this, tha client will need ta configure the
snmp.conf file
with the
.IR clientCert
configuration tokens.  Da server will need ta configure tha snmp.conf
file wit the
.IR serverCert
configuration tokens defined.
.IP
Access control setup is similar ta tha ssh transhiznit as tha TSM
securitizzle model should be used ta protect tha packet.
.RE
.SH CONFIGURATION FILES
.PP
.B snmpd
checks fo' tha existence of n' parses tha followin files:
.TP 6
.B /etc/snmp/snmp.conf
Common configuration fo' tha agent n' applications. Right back up in yo muthafuckin ass. See
.I snmp.conf(5)
for details.
.TP
.B /etc/snmp/snmpd.conf
.TP
.B /etc/snmp/snmpd.local.conf
Agent-specific configuration. I aint talkin' bout chicken n' gravy biatch.  See
.I snmpd.conf(5)
for details.  These filez is optionizzle n' may be used ta configure
access control, trap generation, subagent protocols n' much else
besides.
.IP
In addizzle ta these two configuration filez up in /etc/snmp, the
agent will read any filez wit tha names
.I snmpd.conf
and
.I snmpd.local.conf
in a cold-ass lil colon separated path specified up in the
SNMPCONFPATH environment variable.
.TP
.B /usr/share/snmp/mibs/
Da agent will also load all filez up in dis directory as MIBs.  It will
not, however, load any file dat begins wit a '.' or descend into
subdirectories.
.SH SEE ALSO
(in recommended readin order)
.PP
snmp_config(5),
snmp.conf(5),
snmpd.conf(5)
.\" Local Variables:
.\"  mode: nroff
.\" End:
