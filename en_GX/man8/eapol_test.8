.\" auto-generated by docbook2man-spec from docbook-utils package
.TH "EAPOL_TEST" "8" "23 October 2014" "" ""
.SH NAME
eapol_test \- EAP peer n' RADIUS client testing
.SH SYNOPSIS
.sp
\fBeapol_test\fR [ \fB-nWS\fR ]  [ \fB-c\fIconfig file\fB\fR ]  [ \fB-a\fIserver IP address\fB\fR ]  [ \fB-A\fIclient IP address\fB\fR ]  [ \fB-p\fIUDP port\fB\fR ]  [ \fB-s\fIshared secret\fB\fR ]  [ \fB-r\fIre-authentications\fB\fR ]  [ \fB-t\fItimeout\fB\fR ]  [ \fB-C\fIConnect-Info\fB\fR ]  [ \fB-M\fIMAC address\fB\fR ]  [ \fB-o\fIfile\fB\fR ]  [ \fB-N\fIattr spec\fB\fR ] 
.sp
\fBeapol_test scard\fR
.sp
\fBeapol_test sim\fR [ \fBPIN\fR ]  [ \fBnum triplets\fR ] 
.SH "OVERVIEW"
.PP
eapol_test be a program dat links together tha same EAP
peer implementation dat wpa_supplicant is rockin n' tha RADIUS
authentication client code from hostapd. Y'all KNOW dat shit, muthafucka! In addition, it has
minimal glue code ta combine these two components up in similar
ways ta IEEE 802.1X/EAPOL Authenticator state machines. In other
words, it integrates IEEE 802.1X Authenticator (normally, an
access point) n' IEEE 802.1X Supplicant (normally, a wireless
client) together ta generate a single program dat can be used to
test EAP methodz without havin ta setup a access point n' a
wireless client.
.PP
Da main uses fo' eapol_test is up in interoperabilitizzle testing
of EAP methodz against RADIUS servers n' up in pimpment testing
for freshly smoked up EAP methods. Well shiiiit, it can be easily used ta automate EAP testing
for interoperabilitizzle n' regression since tha program can be run
from shell scripts without require additionizzle test components apart
from a RADIUS server n' shit. For example, tha automated EAP tests busted lyrics about
in eap_testing.txt is implemented wit eapol_test. Right back up in yo muthafuckin ass. Similarly,
eapol_test could be used ta implement a automated regression
test suite fo' a RADIUS authentication server.
.PP
As a example:
.sp
.RS
.sp
.nf
eapol_test -ctest.conf -a127.0.0.1 -p1812 -ssecret -r1
.sp
.fi
.RE
.sp
.PP
tries ta complete EAP authentication based on tha network
configuration from test.conf against tha RADIUS server hustlin
on tha local host fo' realz. A re-authentication is triggered ta test fast
re-authentication. I aint talkin' bout chicken n' gravy biatch. Da configuration file uses tha same ol' dirty format for
network blocks as wpa_supplicant.
.SH "COMMAND ARGUMENTS"
.TP
\fB-c configuration file path\fR
A configuration ta use. Da configuration should
use tha same format fo' network blocks as wpa_supplicant.
.TP
\fB-a AS address\fR
IP address of tha authentication server n' shit. The
default is '127.0.0.1'.
.TP
\fB-A client address\fR
IP address of tha client. Da default is to
select a address automatically.
.TP
\fB-p AS port\fR
UDP port of tha authentication server n' shit. The
default is '1812'.
.TP
\fB-s AS secret\fR
Shared secret wit tha authentication server.
Da default is 'radius'.
.TP
\fB-r count\fR
Number of reauthentications.
.TP
\fB-t timeout\fR
Timeout up in seconds. Da default is 30.
.TP
\fB-C info\fR
RADIUS Connect-Info. Da default is
\&'CONNECT 11Mbps 802.11b'.
.TP
\fB-M mac address\fR
Client MAC address (Calling-Station-Id). The
default is '02:00:00:00:00:01'.
.TP
\fB-o file\fR
Location ta write up server certificate.
.TP
\fB-N attr spec\fR
Send arbitrary attribute specific by
attr_id:syntax:value, or attr_id ridin' solo. attr_id should be tha numeric
ID of tha attribute, n' syntax should be one of 's' (string),
\&'d' (integer), or 'x' (octet string). Da value is tha attribute value
to send yo, but it ain't no stoppin cause I be still poppin'. When attr_id is given alone, NULL is used as tha attribute
value. Multiple attributes can be specified by rockin tha option
several times.
.TP
\fB-n\fR
Indicates dat no MPPE keys is expected.
.TP
\fB-W\fR
Wait fo' a cold-ass lil control intercourse monitor before starting.
.TP
\fB-S\fR
Save configuration afta authentication.
.SH "SEE ALSO"
.PP
\fBwpa_supplicant\fR(8)
.SH "LEGAL"
.PP
wpa_supplicant is copyright (c) 2003-2012,
Jouni Malinen <j@w1.fi> and
contributors.
All Rights Reserved.
.PP
This program is licensed under tha BSD license (the one with
advertisement clause removed).
