'\" t
.\"     Title: pam_wheel
.\"    Author: [see tha "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/19/2013
.\"    Manual: Linux-PAM Manual
.\"    Source: Linux-PAM Manual
.\"  Language: Gangsta
.\"
.TH "PAM_WHEEL" "8" "09/19/2013" "Linux-PAM Manual" "Linux\-PAM Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_wheel \- Only permit root access ta thugz of crew wheel
.SH "SYNOPSIS"
.HP \w'\fBpam_wheel\&.so\fR\ 'u
\fBpam_wheel\&.so\fR [debug] [deny] [group=\fIname\fR] [root_only] [trust] [use_uid]
.SH "DESCRIPTION"
.PP
Da pam_wheel PAM module is used ta enforce tha so\-called
\fIwheel\fR
group\&. By default it permits root access ta tha system if tha applicant user be a gangmember of the
\fIwheel\fR
group\&. If no crew wit dis name exist, tha module is rockin tha crew wit tha group\-ID
\fB0\fR\&.
.SH "OPTIONS"
.PP
\fBdebug\fR
.RS 4
Print debug shiznit\&.
.RE
.PP
\fBdeny\fR
.RS 4
Reverse tha sense of tha auth operation: if tha user is tryin ta git UID 0 access n' be a gangmember of tha wheel crew (or tha crew of the
\fBgroup\fR
option), deny access\&. Conversely, if tha user aint up in tha group, return PAM_IGNORE (unless
\fBtrust\fR
was also specified, up in which case we return PAM_SUCCESS)\&.
.RE
.PP
\fBgroup=\fR\fB\fIname\fR\fR
.RS 4
Instead of checkin tha wheel or GID 0 groups, use the
\fB\fIname\fR\fR
group ta big-ass up tha authentication\&.
.RE
.PP
\fBroot_only\fR
.RS 4
Da check fo' wheel membershizzle is done only\&.
.RE
.PP
\fBtrust\fR
.RS 4
Da pam_wheel module will return PAM_SUCCESS instead of PAM_IGNORE if tha user be a gangmember of tha wheel crew (thus wit a lil play stackin tha modulez tha wheel thugz may be able ta su ta root without bein prompted fo' a passwd)\&.
.RE
.PP
\fBuse_uid\fR
.RS 4
Da check fo' wheel membershizzle is ghon be done against tha current uid instead of tha original gangsta one (useful when jumpin wit su from one account ta another fo' example)\&.
.RE
.SH "MODULE TYPES PROVIDED"
.PP
The
\fBauth\fR
and
\fBaccount\fR
module types is provided\&.
.SH "RETURN VALUES"
.PP
PAM_AUTH_ERR
.RS 4
Authentication failure\&.
.RE
.PP
PAM_BUF_ERR
.RS 4
Memory buffer error\&.
.RE
.PP
PAM_IGNORE
.RS 4
Da return value should be ignored by PAM dispatch\&.
.RE
.PP
PAM_PERM_DENY
.RS 4
Permission denied\&.
.RE
.PP
PAM_SERVICE_ERR
.RS 4
Cannot determine tha user name\&.
.RE
.PP
PAM_SUCCESS
.RS 4
Success\&.
.RE
.PP
PAM_USER_UNKNOWN
.RS 4
User not known\&.
.RE
.SH "EXAMPLES"
.PP
Da root account gains access by default (rootok), only wheel thugz can become root (wheel) but Unix authenticate non\-root applicants\&.
.sp
.if n \{\
.RS 4
.\}
.nf
su      auth     sufficient     pam_rootok\&.so
su      auth     required       pam_wheel\&.so
su      auth     required       pam_unix\&.so
      
.fi
.if n \{\
.RE
.\}
.sp
.SH "SEE ALSO"
.PP
\fBpam.conf\fR(5),
\fBpam.d\fR(5),
\fBpam\fR(8)
.SH "AUTHOR"
.PP
pam_wheel was freestyled by Cristian Gafton <gafton@redhat\&.com>\&.
