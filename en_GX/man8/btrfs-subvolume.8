'\" t
.\"     Title: btrfs-subvolume
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-SUBVOLUME" "8" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-subvolume \- control btrfs subvolume(s)
.SH "SYNOPSIS"
.sp
\fBbtrfs subvolume\fR \fI<subcommand>\fR [\fI<args>\fR]
.SH "DESCRIPTION"
.sp
\fBbtrfs subvolume\fR is used ta control tha filesystem ta create/delete/list/show subvolumes n' snapshots\&.
.SH "SUBVOLUME AND SNAPSHOT"
.sp
A subvolume up in btrfs aint like a LVM logical volume, which is like independent from each other, a funky-ass btrfs subvolume has its hierarchy n' relations between other subvolumes\&.
.sp
A subvolume up in btrfs can be accessed up in two ways\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
From tha parent subvolume

When accessin from tha parent subvolume, tha subvolume can be used just like a gangbangin' finger-lickin' directory\&. Well shiiiit, it can have lil pimp subvolumes n' its own files/directories\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Separate mounted filesystem

When
\fBmount\fR(8) using
\fIsubvol\fR
or
\fIsubvolid\fR
mount option, one can access files/directories/subvolumes inside it yo, but not a god damn thang up in parent subvolumes\&.
.RE
.sp
Also every last muthafuckin btrfs filesystem has a thugged-out default subvolume as its initially top\-level subvolume, whose subvolume id is 5(FS_TREE)\&.
.sp
A btrfs snapshot is much like a subvolume yo, but shares its data(and metadata) wit other subvolume/snapshot\&. Cuz of tha capabilitizzlez of COW, modifications inside a snapshot will only show up in a snapshot but not up in its source subvolume\&.
.sp
Although up in btrfs, subvolumes/snapshots is treated as directories, only subvolume/snapshot can be tha source of a snapshot, snapshot can not be made from aiiight directories\&.
.SH "SUBCOMMAND"
.PP
\fBcreate\fR [\-i \fI<qgroupid>\fR] \fI<name>\fR
.RS 4
Smoke a subvolume
\fI<name>\fR
in
\fI<dest>\fR\&.
.sp
If
\fI<dest>\fR
is not given, subvolume
\fI<name>\fR
will be pimped up in tha currently directory\&.
.sp
\fBOptions\fR
.PP
\-i \fI<qgroupid>\fR
.RS 4
Add tha newly pimped subvolume ta a qgroup\&. This option can be given multiple times\&.
.RE
.RE
.PP
\fBdelete\fR [options] \fI<subvolume>\fR [\fI<subvolume>\fR\&...]
.RS 4
Delete tha subvolume(s) from tha filesystem\&.
.sp
If
\fI<subvolume>\fR
is not a subvolume, btrfs returns a error but continues if there be mo' arguments ta process\&.
.sp
Da correspondin directory is removed instantly but tha data blocks is removed later\&. Da deletion do not involve full commit by default cuz of performizzle reasons (as a cold-ass lil consequence, tha subvolume may step tha fuck up again n' again n' again afta a cold-ass lil crash)\&. Use one of the
\fI\-\-commit\fR
options ta wait until tha operation is safely stored on tha media\&.
.sp
\fBOptions\fR
.PP
\-c|\-\-commit\-after
.RS 4
wait fo' transaction commit all up in tha end of tha operation
.RE
.PP
\-C|\-\-commit\-each
.RS 4
wait fo' transaction commit afta delet each subvolume
.RE
.RE
.PP
\fBlist\fR [options] [\-G \fI<value>\fR] [\-C \fI<value>\fR] [\-\-sort=rootid,gen,ogen,path] \fI<path>\fR
.RS 4
List tha subvolumes present up in tha filesystem
\fI<path>\fR\&.
.sp
For every last muthafuckin subvolume tha followin shiznit is shown by default\&.

ID
\fI<ID>\fR
top level
\fI<ID>\fR
path
\fI<path>\fR
where path is tha relatizzle path of tha subvolume ta tha top level subvolume\&. Da subvolume\(cqs ID may be used by tha subvolume set\-default command, or at mount time via tha subvolid= option\&. If
\fB\-p\fR
is given, then parent
\fI<ID>\fR
is added ta tha output between ID n' top level\&. Da parent\(cqs ID may be used at mount time via the
\fBsubvolrootid=\fR
option\&.
.sp
\fBOptions\fR
.PP
\-p
.RS 4
print parent ID\&.
.RE
.PP
\-a
.RS 4
print all tha subvolumes up in tha filesystem n' distinguish between absolute n' relatizzle path wit respect ta tha given
\fI<path>\fR\&.
.RE
.PP
\-c
.RS 4
print tha ogeneration of tha subvolume, aliases: ogen or origin generation\&.
.RE
.PP
\-g
.RS 4
print tha generation of tha subvolume\&.
.RE
.PP
\-o
.RS 4
print only subvolumes below specified
\fI<path>\fR\&.
.RE
.PP
\-u
.RS 4
print tha UUID of tha subvolume\&.
.RE
.PP
\-q
.RS 4
print tha parent uuid of subvolumes (and snapshots)\&.
.RE
.PP
\-R
.RS 4
print tha UUID of tha busted subvolume, where tha subvolume is tha result of a receive operation
.RE
.PP
\-t
.RS 4
print tha result as a table\&.
.RE
.PP
\-s
.RS 4
only snapshot subvolumes up in tha filesystem is ghon be listed\&.
.RE
.PP
\-r
.RS 4
only readonly subvolumes up in tha filesystem is ghon be listed\&.
.RE
.PP
\-G \fI<value>\fR
.RS 4
list subvolumes up in tha filesystem dat its generation is >=, \*(Aq\(la or = value\&. \*(Aq+\*(Aq means >\*(Aq= value, \*(Aq\-\*(Aq means <= value, If there is neither \*(Aq+\*(Aq nor \*(Aq\-\*(Aq, it means = value\&.
.RE
.PP
\-C \fI<value>\fR
.RS 4
list subvolumes up in tha filesystem dat its ogeneration is >=, <= or = value\&. Da usage is tha same ol' dirty to
\fI\-g\fR
option\&.
.RE
.PP
\-\-sort=rootid,gen,ogen,path
.RS 4
list subvolumes up in order by specified items\&. you can add \*(Aq+\*(Aq or \*(Aq\-\*(Aq up in front of each items, \*(Aq+\*(Aq means ascending, \*(Aq\-\*(Aq means descending\&. Da default be ascending\&.
.sp
for \-\-sort you can combine some shit together by \*(Aq,\*(Aq, just like \-sort=+ogen,\-gen,path,rootid\&.
.RE
.RE
.PP
\fBsnapshot\fR [\-r] \fI<source>\fR \fI<dest>\fR|\fI<name>\fR
.RS 4
Smoke a writable/readonly snapshot of tha subvolume
\fI<source>\fR
with tha name
\fI<name>\fR
in the
\fI<dest>\fR
directory\&.
.sp
If only
\fI<dest>\fR
is given, tha subvolume is ghon be named tha basename of
\fI<source>\fR\&. If
\fI<source>\fR
is not a subvolume, btrfs returns a error\&. If
\fI\-r\fR
is given, tha snapshot is ghon be readonly\&.
.RE
.PP
\fBget\-default\fR \fI<path>\fR
.RS 4
Git tha default subvolume of tha filesystem
\fI<path>\fR\&.
.sp
Da output format is similar to
\fBsubvolume list\fR
command\&.
.RE
.PP
\fBset\-default\fR \fI<id>\fR \fI<path>\fR
.RS 4
Set tha subvolume of tha filesystem
\fI<path>\fR
which is mounted as default\&.
.sp
Da subvolume is identified by
\fI<id>\fR, which is returned by the
\fBsubvolume list\fR
command\&.
.RE
.PP
\fBfind\-new\fR \fI<subvolume>\fR \fI<last_gen>\fR
.RS 4
List tha recently modified filez up in a subvolume, after
\fI<last_gen>\fR
ID\&.
.RE
.PP
\fBshow\fR \fI<path>\fR
.RS 4
Show shiznit of a given subvolume up in the
\fI<path>\fR\&.
.RE
.PP
\fBsync\fR \fI<path>\fR [subvolid\&...]
.RS 4
Wait until given subvolume(s) is straight-up removed from tha filesystem afta deletion\&. If no subvolume id is given, wait until all ongoin deletion requests is complete\&. This may take long if freshly smoked up deleted subvolumes step tha fuck up durin tha chill interval\&.
.sp
\fBOptions\fR
.PP
\-s \fI<N>\fR
.RS 4
sleep N secondz between checks (default: 1)
.RE
.RE
.SH "EXIT STATUS"
.sp
\fBbtrfs subvolume\fR returns a zero exit status if it succeeds\&. Non zero is returned up in case of failure\&.
.SH "AVAILABILITY"
.sp
\fBbtrfs\fR is part of btrfs\-progs\&. Please refer ta tha btrfs wiki \m[blue]\fBhttp://btrfs\&.wiki\&.kernel\&.org\fR\m[] fo' further details\&.
.SH "SEE ALSO"
.sp
\fBmkfs\&.btrfs\fR(8), \fBbtrfs\-subvolume\fR(8), \fBbtrfs\-quota\fR(8), \fBbtrfs\-qgroup\fR(8),
