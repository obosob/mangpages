'\" t
.\"     Title: btrfs-device
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-DEVICE" "8" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-device \- control btrfs devices
.SH "SYNOPSIS"
.sp
\fBbtrfs device\fR \fI<subcommand>\fR \fI<args>\fR
.SH "DESCRIPTION"
.sp
\fBbtrfs device\fR is used ta control tha btrfs devices, since btrfs can be used across nuff muthafuckin devices, \fBbtrfs device\fR is used fo' multiple thang pimpment\&.
.SH "DEVICE MANAGEMENT"
.sp
Btrfs filesystem is capable ta manage multiple devices\&.
.sp
Btrfs filesystem uses different profilez ta manage different RAID level, n' use balizzle ta rebuild chunks, also devices can be added/removed/replace online\&.
.PP
Profile
.RS 4
Btrfs filesystem uses data/metadata profilez ta manage allocation/duplication mechanism\&.

Profilez like RAID level can be assigned ta data n' metadata separately\&.
.sp
See
\fBmkfs\&.btrfs\fR(8) fo' mo' details\&.
.RE
.PP
RAID level
.RS 4
Btrfs filesystem supports most of tha standard RAID level: 0/1/5/6/10\&.

RAID levels can be assigned at mkfs time or online\&.
.sp
See
\fBmkfs\&.btrfs\fR(8) fo' mkfs time RAID level assign and
\fBbtrfs\-balance\fR(8) fo' online RAID level assign\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
Since btrfs is under heavy pimpment especially tha RAID5/6 support, it is
\fBhighly\fR
recommended ta read tha follow btrfs wiki page ta git mo' updated details on RAID5/6:
\m[blue]\fBhttps://btrfs\&.wiki\&.kernel\&.org/index\&.php/RAID56\fR\m[]
.sp .5v
.RE
.RE
.PP
Balance
.RS 4
\fBbtrfs\-balance\fR(8) subcommand can be used ta balizzle or rebuild chunks ta tha desired profile\&.
.sp
Cuz of tha fact dat balizzle can rebuild/recovery chunks accordin ta its RAID duplication if possible, so when rockin RAID1/5/6/10 wit some devices failed n' you just added a freshly smoked up thang ta btrfs using
\fBbtrfs\-device\fR(8), you should run
\fBbtrfs\-balance\fR(8) ta rebuild tha chunks\&.
.sp
See
\fBbtrfs\-balance\fR(8) fo' mo' details\&.
.RE
.PP
Device add/remove/replace
.RS 4
Device can be added/removed using
\fBbtrfs\-replace\fR(8) subcommand n' replaced using
\fBbtrfs\-replace\fR(8)\&.
.sp
When thang is removed or replaced, btrfs will do tha chunk rebuild if needed\&.
.sp
See
\fBbtrfs\-replace\fR(8) n' dis playa page fo' mo' details\&.
.RE
.SH "SUBCOMMAND"
.PP
\fBadd\fR [\-Kf] \fI<dev>\fR [\fI<dev>\fR\&...] \fI<path>\fR
.RS 4
Add device(s) ta tha filesystem identified by
\fI<path>\fR\&.
.sp
If applicable, a whole thang discard (TRIM) operation is performed\&.
.sp
\fBOptions\fR
.PP
\-K|\-\-nodiscard
.RS 4
do not big-ass up discard by default
.RE
.PP
\-f|\-\-force
.RS 4
force overwrite of existin filesystem on tha given disk(s)
.RE
.RE
.PP
\fBdelete\fR \fI<dev>\fR [\fI<dev>\fR\&...] \fI<path>\fR
.RS 4
Remove device(s) from a gangbangin' filesystem identified by
\fI<path>\fR\&.
.RE
.PP
\fBscan\fR [(\-\-all\-devices|\-d)|\fI<device>\fR [\fI<device>\fR\&...]]
.RS 4
Scan devices fo' a funky-ass btrfs filesystem\&.
.sp
If one or mo' devices is passed, these is scanned fo' a funky-ass btrfs filesystem\&. If no devices is passed, btrfs uses block devices containin btrfs filesystem as listed by blkid\&. Finally, if
\fI\-\-all\-devices\fR
or
\fI\-d\fR
is passed, all tha devices under /dev is scanned\&.
.RE
.PP
\fBready\fR \fI<device>\fR
.RS 4
Peep thang ta peep if it has all of it\(cqs devices up in cache fo' mounting\&.
.RE
.PP
\fBstats\fR [\-z] \fI<path>\fR|\fI<device>\fR
.RS 4
Read n' print tha thang IO stats fo' all devicez of tha filesystem identified by
\fI<path>\fR
or fo' a single
\fI<device>\fR\&.
.sp
\fBOptions\fR
.PP
\-z
.RS 4
Reset stats ta zero afta readin them\&.
.RE
.RE
.SH "EXIT STATUS"
.sp
\fBbtrfs device\fR returns a zero exit status if it succeeds\&. Non zero is returned up in case of failure\&.
.SH "AVAILABILITY"
.sp
\fBbtrfs\fR is part of btrfs\-progs\&. Please refer ta tha btrfs wiki \m[blue]\fBhttp://btrfs\&.wiki\&.kernel\&.org\fR\m[] fo' further details\&.
.SH "SEE ALSO"
.sp
\fBmkfs\&.btrfs\fR(8), \fBbtrfs\-replace\fR(8), \fBbtrfs\-balance\fR(8)
