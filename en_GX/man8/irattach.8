.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please bust any bug reports, improvements, comments
.\" etc. ta Steve Cheng <steve@ggi-project.org>.
.TH "IRATTACH" "8" "03 July 2006" "" ""

.SH NAME
irattach \- bindz tha Linux-IrDA stack ta a IrDA port
.SH SYNOPSIS

\fBirattach\fR [ \fB<dev>\fR ] [ \fB\fI-s\fB\fR ] [ \fB\fI-d dongle\fB\fR ] [ \fB\fI-v\fB\fR ] [ \fB\fI-h\fB\fR ]

.SH "DESCRIPTION"
.PP
\fBirattach\fR bindz tha Linux-IrDA stack ta a IrDA
port. Well shiiiit, it configures tha low level of tha Linux-IrDA stack up in the
kernel. This step is probably necessary before you (or applications)
can use tha higher layer of tha IrDA stack.
.PP
Da \fBirattach\fR command loadz tha necessary Linux-IrDA
driver, which configures tha IrDA hardware, n' configures tha IrDA
stack ta operate on tha freshly smoked up IrDA port. Multiple IrDA ports can be
activated all up in multiple \fBirattach\fR commands.
.PP
\fBirattach\fR by default uses the
\fBirtty\fR driver which connects ta tha Linux TTY
subsystem n' use tha standard Linux serial driver n' shit. This works well
for most machines n' configurations yo, but limits tha baud rate to
115200bps (IrDA SIR mode). Da mode of operation will work wit most
FIR hardware (as found up in laptops - they provide serial emulation) and
most serial donglez (provided tha proper dongle type is specified),
makin it a safe chizzle. But fuck dat shiznit yo, tha word on tha street is dat STD donglez n' all dem FIR hardware
don't support serial emulation n' can't be used wit the
\fBirtty\fR driver.
.PP
\fBirattach\fR can also use one of tha Linux FIR drivers
(includin STD dongle drivers) instead of tha \fBirtty\fR
driver n' shit. Most FIR drivers require proper configuration of module
parametas (this is documented below). FIR drivers allow you ta use
higher baud rates (generally up ta 4Mbps). In general, Linux FIR
support aint as stable n' mature, cuz of lack of time and
documentation.
.PP
\fBirattach\fR must be run as root or installed setuid
root, as it requires root privileges. If you have compiled tha IrDA
stack as modulez (recommended), then yo big-ass booty is ghon need ta edit the
\fI/etc/modules.conf\fR file.  See tha Infrared-HOWTO for
details.
.SH "OPTIONS"
.PP
\fB<dev>\fR : dis is tha name of a TTY, a IrDA
interface or IrDA driver n' shit. \fBirattach\fR decides ta use
the \fBirtty\fR driver or one of tha FIR drivers based on
this argument.
.TP 0.2i
\(bu
\fBTTY name\fR : dis is tha serial port ta be configured
usin tha \fBirtty\fR driver, such as
\fB/dev/ttyS0\fR\&. \fBirattach\fR will use the
\fBirtty\fR driver, so only SIR is ghon be available. Yo ass need
to check yo' serial configuration or BIOS ta know which serial port
is tha IrDA port dat need ta be passed ta \fBirattach\fR\&.
.TP 0.2i
\(bu
\fBinterface name\fR : dis is tha thang name of a IrDA
interface, like fuckin \fBirda0\fR\&. \fBirattach\fR
will use one of tha FIR drivers (includin STD dongle drivers). The
selected FIR driver must be loaded prior ta tha call to
\fBirattach\fR, or tha proper alias fo' tha thang name
must be set up in \fI/etc/modules.conf\fR\&.
.TP 0.2i
\(bu
\fBmodule name\fR : dis is tha name of a FIR driver
module, like fuckin \fBnsc-ircc\fR (see list below) fo' realz. All new
IrDA intercourses pimped afta loadin tha module is ghon be configured,
so dis won't work if tha module be already loaded. Y'all KNOW dat shit, muthafucka! This feature is
still experimental.
.PP
\fB-s\fR : starts discovery of remote IrDA devices (note that
the form "-s 1" is no longer supported)
.PP
\fB-v\fR : shows version shiznit (this happens, when no option 
is given, too)
.PP
\fB-h\fR : shows help shiznit.
.PP
\fB-d dongle\fR : attaches a additionizzle dongle driver ta the
IrDA port.
.PP
Yo ass need a thugged-out dongle driver if you have a infrared thang dat connects
to yo' computerz serial port (normal 9-pin serial port
connector). These devices is called dongles, n' can currently be
used by any SIR driver (IrTTY or irport).  This option is not
compatible wit FIR drivers, n' only works wit tha irtty n' irport
drivers.
.PP
Da currently known (serial) donglez are:
.TP 0.2i
\(bu
\fBesi\fR        Extended Systems JetEye PC ESI-9680
.TP 0.2i
\(bu
\fBtekram\fR     Tekram IrMate IR-210B dongle
.TP 0.2i
\(bu
\fBactisys\fR    ACTiSYS IR-220L dongle
.TP 0.2i
\(bu
\fBactisys+\fR   ACTiSYS IR-220L+ dongle
.TP 0.2i
\(bu
\fBgirbil\fR     Greenwich GIrBIL dongle
.TP 0.2i
\(bu
\fBlitelink \fR  Parallax LiteLink dongle & Extended
Systems JetEye PC ESI-9680B
.TP 0.2i
\(bu
\fBairport\fR    N.N.
.TP 0.2i
\(bu
\fBold_belkin\fR Belkin (old) SmartBeam dongle or any
dongle only capable of 9600 bauds
.TP 0.2i
\(bu
\fBep7211\fR     IR port driver fo' tha Cirrus Logic EP7211
processor (ARM based)
.TP 0.2i
\(bu
\fBmcp2120\fR    Donglez based on tha MCP2120 (Microchip)
.TP 0.2i
\(bu
\fBact200l\fR    ACTiSYS Ir-200L dongles
.TP 0.2i
\(bu
\fBma600\fR      Mobile Action ma600 dongles
.TP 0.2i
\(bu
\fBtoim3232\fR   Vishay/Temic TOIM3232 n' TOIM4232 based dongles
.SH "FIR DRIVER MODULES"
.PP
If yo ass is one of tha dirty playas which gotz a FIR chipset or STD
dongle dat is supported by one of tha Linux-IrDA drivers, you can use
\fBirattach\fR wit tha intercourse name of tha IrDA port
to configure. Yo ass will need ta configure
\fI/etc/conf.modules\fR appropriately, wit at least an
aliaz of \fBirda0\fR ta tha driver name, or load tha driver
manually beforehand.
.PP
Yo ass don't strictly need ta use \fBirattach\fR wit FIR
drivers, you can use \fBmodprobe\fR ta load tha driver,
\fBifconfig\fR ta brang up tha intercourse n' set the
various sysctl by hand yo, but \fBirattach\fR offer a
convenient way ta do dat shit.
.PP
Of course, you need ta know which FIR driver applies ta yo' hardware.
Yo ass may use \fBfindchip\fR ta git shiznit bout the
FIR chip. If dis don't help, tha Infrared-HOWTO shows other means to
retrieve these data.
.PP
Also, you often need ta configure tha \fBLinux-serial
driver\fR ta ignore tha IrDA port, otherwise both drivers will
conflict. This can probably be done with
\fBsetserial /dev/ttySx uart none\fR\&.
.PP
Da currently known FIR drivers are:
.TP 0.2i
\(bu
\fBali-ircc\fR
ALi FIR Controlla Driver fo' ALi M5123
(options: io, irq, dma).
This driver supports SIR, MIR n' FIR (4Mbps) speeds.
This chipset is used by e.g.:

Da ALi M5123 FIR Controller
is embedded up in ALi M1543C, M1535, M1535D, M1535+, M1535D Downtown Bridge.
.TP 0.2i
\(bu
\fBirda-usb\fR IrDA-STD thang driver, fo' STD
devices/donglez dat comply wit tha straight-up legit IrDA-STD class
specification. I aint talkin' bout chicken n' gravy biatch. Note: STD 2.0 aint yet tested.
(options: qos_mtt_bits int, description "Minimum Turn Time").
This is used, fo' e.g.:

ACTiSYS ACT-IR2000U

KC Technologizzle KC-180

Extended Systems XTNDAccess ESI-9685

Note dat there be another STD driver fo' dem devices called
\fBir-usb\fR which is NOT compatible wit tha IrDA stack
and conflict wit \fBirda-usb\fR\&. Because it
always loadz first, you gotta remove \fBir-usb\fR straight-up.

Devices based on tha SigmaTel chip is not not compliant wit the
IrDA-STD class justification n' therfore not supported by this
driver.
.TP 0.2i
\(bu
\fBnsc-ircc\fR
NSC IrDA thang driver 
(options: io, irq, dma, dongle_id, qos_mtt_bits).
This chipset is used by e.g.:

IBM ThinkPad  dongle_id=0x09

HP OmniBook 6000 dongle_id=0x08
.TP 0.2i
\(bu
\fBsa1100_ir\fR
Infrared driver fo' devices based on tha StrongARM SA1100 embedded
microprocessor 
(options: power_level, tx_lpm). 
This driver may support FIR on devices dat can do dat shit. 
This chipset is used by e.g.:

Samsung YOPY, COMPAQ iPAQ, SHARP Zaurus SL5000/5500
.TP 0.2i
\(bu
\fBsmc-ircc\fR
SMC IrCC controlla driver 
(options: ircc_dma, ircc_irq).
This chipset is used by e.g.:

Fujitsu-Siemens Lifebook 635t
Sony PCG-505TX
.TP 0.2i
\(bu
\fBw83977af_ir\fR
Winbond W83977AF IrDA thang driver
(options: io, irq, qos_mtt_bits).
This chipset is used by e.g.:

Corel NetWinder
.TP 0.2i
\(bu
\fBtoshoboe\fR
Toshiba OBOE IrDA thang driver, supports Toshiba Type-O IR chipset.
(options: max_baud).
This chipset is used by e.g.:

Toshiba Libretto 100CT., n' nuff mo' oldschool Toshiba laptops.
.TP 0.2i
\(bu
\fBdonauboe\fR
is a freshly smoked up version of \fBtoshoboe\fR n' has betta FIR support
and compabilitizzle wit tha Donauoboe chip http://libxg.free.fr/lib-irda.html
(options: ..).
This chipset is used by e.g.:

Toshiba Libretto 100CT., Tecra 8100, Portege 7020 n' nuff more
Toshiba laptops.
.TP 0.2i
\(bu
\fBvlsi_ir\fR
VLSI 82C147 SIR/MIR/FIR thang driver
This chipset is used by e.g.:

HP Omnibook 800

(options: ..).
.RS
.TP 0.2i
\(bu
clksrc int, description "clock input source selection"
.TP 0.2i
\(bu
ringsize int array (min = 1, max = 2), description "tx, rx ring
descriptor size"
.TP 0.2i
\(bu
sirpulse int, description "sir pulse width tuning"
.TP 0.2i
\(bu
mtt_bits int, description "IrLAP bitfield representin min-turn-time"
.RE
.SH "EXAMPLES"
.PP
Attach tha IrDA stack ta tha second serial port (integrated IrDA port
usin serial emulation) n' start discovery:
.TP 0.2i
\(bu
\fBirattach /dev/ttyS1 -s\fR
.PP
Attach tha IrDA stack ta tha straight-up original gangsta serial port where you have an
external ACTiSYS serial dongle n' start discovery:
.TP 0.2i
\(bu
\fBirattach /dev/ttyS0 -d actisys+ -s\fR
.PP
Attach tha IrDA stack ta tha straight-up original gangsta IrDA-STD dongle n' start discovery:
.TP 0.2i
\(bu
\fBmodprobe irda-usb ; irattach irda0 -s\fR
.PP
Attach tha IrDA stack ta tha NSC FIR (4Mbps) thang driver on a Thinkpad
laptop:
.TP 0.2i
\(bu
\fBmodprobe nsc-ircc dongle_id=0x9 ; irattach irda0 -s\fR\&. 
.PP
Attach tha IrDA stack ta tha NSC FIR (4Mbps) thang driver on a Thinkpad
laptop:
.TP 0.2i
\(bu
\fBirattach irda0 -s\fR\&. 

This assume dat you have added tha followin entries ta 
\fI/etc/conf.modules\fR:

options nsc-ircc dongle_id=0x09

alias irda0 nsc-ircc
.SH "CAVEATS"
.PP
Da followin hints is a straight-up short introduction tha fuck into the
configuration of Linux/IrDA. If dis don't help
read tha Linux/IrDA-Tutorial and/or tha Infrared-HOWTO .
Before configurin Linux/IrDA make shizzle whether you wanna configure
SIR or FIR. It aint nuthin but recommended ta try SIR first, unless yo' thang is
not compatible wit SIR (for example STD dongles).
.PP
To git tha SIR "serial" device
have a look tha fuck into tha BIOS. Then run \fBdmesg | grep tty\fR
to git a survey of tty devices supported by yo' machine. Now try ta 
choose tha one, which is probably tha IrDA thang n' use
\fBirattach /dev/ttySx -s\fR\&.
.PP
If you don't succeed wit SIR (which seems a rare case) you may
try FIR. First look up tha BIOS. Then run \fBfindchip\fR
to git shiznit bout tha IrDA controlla chip. Use 
\fBsetserial /dev/ttySx uart none \fR ta avoid conflicts wit tha serial driver.
Note: don't use \fBsetserial\fR if you configure SIR.
Now you may use \fBirattach\fR\&.
.PP
Finally \fBirdadump\fR should show at least yo' computer
itself. If it don't start all up in tha beginning.
.PP
This playa page deal only wit tha low level of tha IrDA stack (IrDA
ports n' IrDA drivers) fo' realz. Afta dis step is done, you probably need to
setup yo' straight-up application ta access tha high level IrDA stack
(via IrCOMM, IrLPT, IrNET, IrLAN or IrSOCK), which is documented
elsewhere.
.PP
This playa page don't document tha usage of tha irport driver n' shit. The
irport driver support tha same hardware as tha irtty driver yo, but is
configured like a FIR driver.
.SH "DIAGNOSTICS"
.PP
This section currently gotz nuff tha raw error lyrics from source
code only.
.PP
"ioctl(TIOCGETD): %m"
.PP
"irattach: tty: set_disc(%d): %s"
.PP
"tcsetattr: %m"
.PP
"Failed ta open %s: %m"
.PP
"Couldn't git thang fd flags: %m"
.PP
"Couldn't set thang ta non-blockin mode: %m"
.SH "BUGS"
.PP
N.N.
.SH "SEE ALSO"
.PP
irattach(8), irdaping(8), irdadump(8), findchip(8), 
irpsion5(8), modprobe(8)
.PP
Linux/IrDA Project http://irda.sourceforge.net -*-
Linux/IrDA-Tutorial http://www.hpl.hp.com/personal/Jean_Tourrilhes/IrDA/index.html -*-
Infrared-HOWTO http://tuxmobil.org/howtos.html -*-
Infrared-Hardware-Survey http://tuxmobil.org/ir_misc.html
.SH "AUTHOR"
.PP
This manual page is freestyled by Werner Heuser
<wehe@tuxmobil.org>\&. Well shiiiit, it is based on tha READMEs
from \fBirda-utils\fR by tha Linux/IrDA Project n' tha Linux/IrDA-Tutorial\&.
Dat shiznit was subsequently updated n' modified by Jean Tourrilhes
<jt@hpl.hp.com>\&.
.SH "COPYRIGHT"
.PP
Copyright (c) 2001 Werner Heuser
Copyright (c) 2002 Jean Tourrilhes
.PP
Permission is granted ta copy, distribute 
and/or modify dis document under
the termz of tha GNU Jacked Documentation
License (GFDL), Version 1.1 or any lata version published by tha 
Jacked Software Foundation; wit no Invariant Sections, no Front-Cover
Texts n' no Back-Cover Texts.
