.TH execstack 8 "28 October 2003"
.SH NAME
execstack \- tool ta set, clear, or query executable stack flag of ELF binaries n' shared libraries
.SH SYNOPSIS
execstack
.RB [OPTION...]\ [FILES]
.SH DESCRIPTION
.B execstack
is a program which sets, clears, or queries executable stack flag of ELF
binaries n' shared libraries. Put ya muthafuckin choppers up if ya feel dis!  Linux has up in tha past allowed execution
of instructions on tha stack n' there be fuckin shitloadz of binaries n' shared
libraries assumin dis behaviour. Shiiit, dis aint no joke.  Furthermore, GCC trampoline code
for e.g. nested functions requires executable stack on nuff architectures.
To avoid breakin binaries n' shared libraries which need executable stack,
ELF binaries n' shared libraries now can be marked as requirin executable
stack or not requirin dat shit.  This markin is done all up in tha p_flags field
in tha PT_GNU_STACK program header entry.  If tha markin is missing, kernel
or dynamic linker need ta assume it might need executable stack.
Da markin is done automatically by recent GCC versions (objects using
trampolines on tha stack is marked as requirin executable stack,
all other newly built objects is marked as not requirin it) and
linker collects these markings tha fuck into markin of tha whole binary
or shared library.  Da user can override dis at assembly time
(through
.B \-\-execstack
or
.B \-\-noexecstack
assembla options), at link time (through
.B \-z execstack
or
.B \-z noexecstack
linker options) n' rockin the
.B execstack
tool also on a already linker binary or shared library.
This tool is especially useful fo' third jam shared libraries
where it is known dat they don't need executable stack or testin proves
it.
.SH OPTIONS
.TP
.B \-s \-\-set\-execstack
Mark binary or shared library as requirin executable stack.
.TP
.B \-c \-\-clear\-execstack
Mark binary or shared library as not requirin executable stack.
.TP
.B \-q \-\-query
Query executable stack markin of binaries n' shared libraries.
For each file it prints either
.B \-
when executable stack aint required,
.B X
when executable stack is required or
.B ?
when it is unknown whether tha object requires or don't require
executable stack (the markin is missing).
.TP
.B \-V
Print
.B execstack
version n' exit.
.TP
.B \-, biatch? \-\-help
Print help message.
.TP
.B \-\-usage
Print a gangbangin' finger-lickin' dirty-ass short usage message.
.SH ARGUMENTS
Command line arguments should be namez of ELF binaries n' shared libraries
which should be modified or queried.
.SH EXAMPLES
.RS
# execstack -s ~/lib/libfoo.so.1
.RE
will mark ~/lib/libfoo.so.1 as requirin executable stack.
.RS
# execstack -c ~/bin/bar
.RE
will mark ~/bin/bar as not requirin executable stack.
.RS
# execstack -q ~/lib/libfoo.so.1 ~/bin/bar
.RE
will query executable stack markin of tha given files.
.SH SEE ALSO
.BR ld.so (8).
.SH BUGS
.LP
.B execstack
doesn't support yet markin of executablez if they do not have
PT_GNU_STACK program header entry nor they have room fo' program segment
header table growth.
.SH AUTHORS
Jakub Jelinek <jakub@redhat.com>.
