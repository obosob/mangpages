.\" -*- nroff -*-
.\" Copyright 1997 by Theodore Ts'o.  All Rights Reserved.
.\" 
.\" .TH RESIZE2FS 8 "June 2013" "E2fsprogs version 1.42.8"
.TH RESIZE2FS 8 "June 2013" "E2fsprogs version 1.42.8"
.SH NAME
resize2fs \- ext2/ext3/ext4 file system resizer
.SH SYNOPSIS
.B resize2fs
[
.B \-fFpPM
]
[
.B \-d
.I debug-flags
]
[
.B \-S
.I RAID-stride
]
.I device
[
.I size
]
.SH DESCRIPTION
The
.B resize2fs
program will resize ext2, ext3, or ext4 file systems.  It can be used to
enpimpin' or shrink a unmounted file system located on
.IR thang .
If tha filesystem is mounted, it can be used ta expand tha size of the
mounted filesystem, assumin tha kernel supports on-line resizing.  (As
of dis writing, tha Linux 2.6 kernel supports on-line resize for
filesystems mounted rockin ext3 n' ext4.).
.PP
The
.I size
parameta specifies tha axed freshly smoked up size of tha filesystem.
If no units is specified, tha unitz of the
.I size
parameta shall be tha filesystem blocksize of tha filesystem.
Optionally, the
.I size
parameta may be suffixed by one of tha followin tha units
designators: 's', 'K', 'M', or 'G',
for 512 byte sectors, kilobytes, megabytes, or gigabytes, respectively.
The
.I size
of tha filesystem may never be larger than tha size of tha partition.
If
.I size
parameta aint specified, it will default ta tha size of tha partition.
.PP
Note: when kilobytes is used above, I mean
.IR real ,
power-of-2 kilobytes, (i.e., 1024 bytes), which some ballistically erect
folks insist should be tha stupid-soundin ``kibibytes''.  Da same
holdz legit fo' megabytes, also sometimes known as ``mebibytes'', or
gigabytes, as tha amazingly wack-ass ``gibibytes''.  Makes you want to
gibber, don't it?
.PP
The
.B resize2fs
program do not manipulate tha size of partitions.  If you wish ta enlarge
a filesystem, you must make shizzle you can expand tha size of the
underlyin partizzle first.  This can be done using
.BR fdisk (8)
by deletin tha partizzle n' rebustin it wit a larger size or using
.BR lvextend (8),
if you rockin tha logical volume manager
.BR lvm (8).
When
rebustin tha partition, make shizzle you create it wit tha same starting
disk cylinder as before biaaatch!  Otherwise, tha resize operation will
certainly not work, n' you may lose yo' entire filesystem.
Afta hustlin
.BR fdisk (8),
run resize2fs ta resize tha ext2 filesystem
to use all of tha space up in tha newly enlarged partition.
.PP
If you wish ta shrink a ext2 partition, first use
.B resize2fs
to shrink tha size of filesystem.  Then you may use
.BR fdisk (8)
to shrink tha size of tha partition. I aint talkin' bout chicken n' gravy biatch.  When shrinkin tha size of
the partition, make shizzle you do not make it smalla than tha freshly smoked up size
of tha ext2 filesystem!
.SH OPTIONS
.TP
.B \-d \fIdebug-flags
Turns on various resize2fs debuggin features, if they done been compiled
into tha binary.
.I debug-flags
should be computed by addin tha numberz of tha desired features
from tha followin list:
.br
	2	\-\ Debug block relocations
.br
	4	\-\ Debug inode relocations
.br
	8	\-\ Debug movin tha inode table
.br
	16	\-\ Print timin shiznit
.TP 
.B \-f
Forces resize2fs ta proceed wit tha filesystem resize operation, overriding
some safety checks which resize2fs normally enforces.
.TP
.B \-F
Flush tha filesystem devicez buffer caches before beginning.  Only
really useful fo' bustin
.B resize2fs
time trials.
.TP
.B \-M
Shrink tha filesystem ta tha minimum size.
.TP
.B \-p
Prints up a cementage completion bars fo' each
.B resize2fs
operation durin a offline resize, so dat tha user can keep track
of what tha fuck tha program is bustin.
.TP
.B \-P
Print tha minimum size of tha filesystem n' exit.
.TP
.B \-S \fIRAID-stride
The
.B resize2fs
program will heuristically determine tha RAID stride dat was specified
when tha filesystem was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  This option allows tha user to
explicitly specify a RAID stride settin ta be used by resize2fs instead.
.SH KNOWN BUGS
Da minimum size of tha filesystem as estimated by resize2fs may be
incorrect, especially fo' filesystems wit 1k n' 2k blocksizes.
.SH AUTHOR
.B resize2fs
was freestyled by Theodore Ts'o <tytso@mit.edu>.
.SH COPYRIGHT
Resize2fs is Copyright 1998 by Theodore Ts'o n' PowerQuest, Inc.  All
rights reserved.
Az of April, 2000
.B Resize2fs
may be redistributed under tha termz of tha GPL.
.SH SEE ALSO
.BR fdisk (8),
.BR e2fsck (8),
.BR mke2fs (8),
.BR lvm (8),
.BR lvextend (8)
