'\" t
.\"     Title: pam_xauth
.\"    Author: [see tha "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/19/2013
.\"    Manual: Linux-PAM Manual
.\"    Source: Linux-PAM Manual
.\"  Language: Gangsta
.\"
.TH "PAM_XAUTH" "8" "09/19/2013" "Linux-PAM Manual" "Linux\-PAM Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_xauth \- PAM module ta forward xauth keys between users
.SH "SYNOPSIS"
.HP \w'\fBpam_xauth\&.so\fR\ 'u
\fBpam_xauth\&.so\fR [debug] [xauthpath=\fI/path/to/xauth\fR] [systemuser=\fIUID\fR] [targetuser=\fIUID\fR]
.SH "DESCRIPTION"
.PP
Da pam_xauth PAM module is designed ta forward xauth keys (sometimes referred ta as "cookies") between users\&.
.PP
Without pam_xauth, when xauth is enabled n' a user uses the
\fBsu\fR(1)
command ta assume another user\*(Aqs privileges, dat user is no longer able ta access tha original gangsta user\*(Aqs X display cuz tha freshly smoked up user aint gots tha key needed ta access tha display\&. pam_xauth solves tha problem by forwardin tha key from tha user hustlin su (the source user) ta tha user whose identitizzle tha source user be assumin (the target user) when tha session is pimped, n' beatin tha livin shiznit outta tha key when tha session is torn down\&.
.PP
This means, fo' example, dat when you run
\fBsu\fR(1)
from a xterm session, yo big-ass booty is ghon be able ta run X programs without explicitly dealin wit the
\fBxauth\fR(1)
xauth command or ~/\&.Xauthoritizzle files\&.
.PP
pam_xauth will only forward keys if xauth can list a key connected ta tha $DISPLAY environment variable\&.
.PP
Primitizzle access control is provided by
~/\&.xauth/export
in tha invokin user\*(Aqs home directory and
~/\&.xauth/import
in tha target user\*(Aqs home directory\&.
.PP
If a user has a
~/\&.xauth/import
file, tha user will only receive dem scooby snacks from playas listed up in tha file\&. If there is no
~/\&.xauth/import
file, tha user will accept dem scooby snacks from any other user\&.
.PP
If a user has a
\&.xauth/export
file, tha user will only forward dem scooby snacks ta playas listed up in tha file\&. If there is no
~/\&.xauth/export
file, n' tha invokin user is not
\fBroot\fR, tha user will forward dem scooby snacks ta any other user\&. If there is no
~/\&.xauth/export
file, n' tha invokin user is
\fBroot\fR, tha user will
\fInot\fR
forward dem scooby snacks ta other users\&.
.PP
Both tha import n' export filez support wildcardz (such as
\fI*\fR)\&. Both tha import n' export filez can be empty, signifyin dat no playas is allowed\&.
.SH "OPTIONS"
.PP
\fBdebug\fR
.RS 4
Print debug shiznit\&.
.RE
.PP
\fBxauthpath=\fR\fB\fI/path/to/xauth\fR\fR
.RS 4
Specify tha path tha xauth program (it is expected in
/usr/X11R6/bin/xauth,
/usr/bin/xauth, or
/usr/bin/X11/xauth
by default)\&.
.RE
.PP
\fBsystemuser=\fR\fB\fIUID\fR\fR
.RS 4
Specify tha highest UID which is ghon be assumed ta belong ta a "system" user\&. pam_xauth will refuse ta forward credentials ta playas wit UID less than or equal ta dis number, except fo' root n' tha "targetuser", if specified\&.
.RE
.PP
\fBtargetuser=\fR\fB\fIUID\fR\fR
.RS 4
Specify a single target UID which is exempt from tha systemuser check\&.
.RE
.SH "MODULE TYPES PROVIDED"
.PP
Only the
\fBsession\fR
type is provided\&.
.SH "RETURN VALUES"
.PP
PAM_BUF_ERR
.RS 4
Memory buffer error\&.
.RE
.PP
PAM_PERM_DENIED
.RS 4
Permission denied by import/export file\&.
.RE
.PP
PAM_SESSION_ERR
.RS 4
Cannot determine user name, UID or access playas home directory\&.
.RE
.PP
PAM_SUCCESS
.RS 4
Success\&.
.RE
.PP
PAM_USER_UNKNOWN
.RS 4
User not known\&.
.RE
.SH "EXAMPLES"
.PP
Add tha followin line to
/etc/pam\&.d/su
to forward xauth keys between playas when callin su:
.sp
.if n \{\
.RS 4
.\}
.nf
session  optionizzle  pam_xauth\&.so
      
.fi
.if n \{\
.RE
.\}
.sp
.SH "IMPLEMENTATION DETAILS"
.PP
pam_xauth will work
\fIonly\fR
if it is used from a setuid application up in which the
\fBgetuid\fR() call returns tha id of tha user hustlin tha application, n' fo' which PAM can supply tha name of tha account dat tha user be attemptin ta assume\&. Da typical application of dis type is
\fBsu\fR(1)\&. Da application must call both
\fBpam_open_session\fR() and
\fBpam_close_session\fR() wit tha ruid set ta tha uid of tha callin user n' tha euid set ta root, n' must have provided as tha PAM_USER item tha name of tha target user\&.
.PP
pam_xauth calls
\fBxauth\fR(1)
as tha source user ta extract tha key fo' $DISPLAY, then calls xauth as tha target user ta merge tha key tha fuck into tha a temporary database n' lata remove tha database\&.
.PP
pam_xauth cannot be holla'd at ta not remove tha keys when tha session is closed\&.
.SH "FILES"
.PP
~/\&.xauth/import
.RS 4
XXX
.RE
.PP
~/\&.xauth/export
.RS 4
XXX
.RE
.SH "SEE ALSO"
.PP
\fBpam.conf\fR(5),
\fBpam.d\fR(5),
\fBpam\fR(8)
.SH "AUTHOR"
.PP
pam_xauth was freestyled by Nalin Dahyabhai <nalin@redhat\&.com>, based on original gangsta version by Mike K\&. Johnston <johnsonm@redhat\&.com>\&.
