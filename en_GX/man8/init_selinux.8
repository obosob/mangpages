.TH  "init_selinux"  "8"  "14-12-02" "init" "SELinux Policy init"
.SH "NAME"
init_selinux \- Securitizzle Enhanced Linux Policy fo' tha init processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures tha init processes via flexible mandatory access control.

Da init processes execute wit tha init_t SELinux type. Yo ass can check if you have these processes hustlin by executin tha \fBps\fP command wit tha \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep init_t


.SH "ENTRYPOINTS"

Da init_t SELinux type can be entered via tha \fBfilesystem_type, unlabeled_t, proc_type, file_type, mtrr_device_t, sysctl_type, init_exec_t\fP file types.

Da default entrypoint paths fo' tha init_t domain is tha following:

all filez on tha system, /dev/cpu/mtrr, /sbin/init(ng)?, /usr/sbin/init(ng)?, /usr/lib/systemd/[^/]*, /usr/lib/systemd/system-generators/[^/]*, /bin/systemd, /sbin/upstart, /usr/bin/systemd, /usr/sbin/upstart
.SH PROCESS TYPES
SELinux defines process types (domains) fo' each process hustlin on tha system
.PP
Yo ass can peep tha context of a process rockin tha \fB\-Z\fP option ta \fBps\bP
.PP
Policy governs tha access confined processes gotta files.
SELinux init policy is straight-up flexible allowin playas ta setup they init processes up in as secure a method as possible.
.PP
Da followin process types is defined fo' init:

.EX
.B initrc_t, init_t
.EE
.PP
Note:
.B semanage permissive -a init_t
can be used ta make tha process type init_t permissive. Right back up in yo muthafuckin ass. SELinux do not deny access ta permissive process types yo, but tha AVC (SELinux denials) lyrics is still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required. Y'all KNOW dat shit, muthafucka!  init policy is mad flexible n' has nuff muthafuckin booleans dat allow you ta manipulate tha policy n' run init wit tha tightest access possible.


.PP
If you wanna allow playas ta resolve user passwd entries directly from ldap rather then rockin a sssd server, you must turn on tha authlogin_nsswitch_use_ldap boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you wanna deny user domains applications ta map a memory region as both executable n' writable, dis is fucked up n' tha executable should be reported up in bugzilla, you must turn on tha deny_execmem boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P deny_execmem 1

.EE

.PP
If you wanna deny any process from ptracin or debuggin any other processes, you must turn on tha deny_ptrace boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you wanna allow all domains ta use other domains file descriptors, you must turn on tha domain_fd_use boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you wanna allow all domains ta have tha kernel load modules, you must turn on tha domain_kernel_load_modulez boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modulez 1

.EE

.PP
If you wanna allow all domains ta execute up in fips_mode, you must turn on tha fips_mode boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you wanna enable readin of urandom fo' all domains, you must turn on tha global_ssp boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you wanna allow confined applications ta run wit kerberos, you must turn on tha kerberos_enabled boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you wanna control tha mobilitizzle ta mmap a low area of tha address space, as configured by /proc/sys/vm/mmap_min_addr, you must turn on tha mmap_low_allowed boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P mmap_low_allowed 1

.EE

.PP
If you wanna allow system ta run wit NIS, you must turn on tha nis_enabled boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you wanna allow confined applications ta use nscd shared memory, you must turn on tha nscd_use_shm boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.PP
If you wanna disable kernel module loading, you must turn on tha secure_mode_insmod boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P secure_mode_insmod 1

.EE

.PP
If you wanna boolean ta determine whether tha system permits loadin policy, settin enforcin mode, n' changin boolean joints, n' you can put dat on yo' toast.  Set dis ta legit n' you gotta reboot ta set it back, you must turn on tha secure_mode_policyload boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P secure_mode_policyload 1

.EE

.PP
If you wanna allow unconfined executablez ta make they heap memory executable.  Bustin dis be a straight-up wack idea. Probably indicates a funky-ass badly coded executable yo, but could indicate a attack. This executable should be reported up in bugzilla, you must turn on tha selinuxuser_execheap boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P selinuxuser_execheap 1

.EE

.PP
If you wanna allow all unconfined executablez ta use libraries requirin text relocation dat is not labeled textrel_shlib_t, you must turn on tha selinuxuser_execmod boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P selinuxuser_execmod 1

.EE

.PP
If you wanna allow unconfined executablez ta make they stack executable.  This should never, eva be necessary. Probably indicates a funky-ass badly coded executable yo, but could indicate a attack. This executable should be reported up in bugzilla, you must turn on tha selinuxuser_execstack boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P selinuxuser_execstack 1

.EE

.PP
If you wanna support X userspace object manager, you must turn on tha xserver_object_manager boolean. I aint talkin' bout chicken n' gravy biatch. Enabled by default.

.EX
.B setsebool -P xserver_object_manager 1

.EE

.PP
If you wanna allow ZoneMinder ta run su/sudo, you must turn on tha unitminder_run_sudo boolean. I aint talkin' bout chicken n' gravy biatch. Disabled by default.

.EX
.B setsebool -P unitminder_run_sudo 1

.EE

.SH NSSWITCH DOMAIN

.PP
If you wanna allow playas ta resolve user passwd entries directly from ldap rather then rockin a sssd server fo' tha init_t, initrc_t, you must turn on tha authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you wanna allow confined applications ta run wit kerberos fo' tha init_t, initrc_t, you must turn on tha kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH "MANAGED FILES"

Da SELinux process type init_t can manage filez labeled wit tha followin file types.  Da paths listed is tha default paths fo' these file types.  Note tha processes UID still need ta have DAC permissions.

.br
.B file_type

	all filez on tha system
.br

.SH FILE CONTEXTS
SELinux requires filez ta have a extended attribute ta define tha file type.
.PP
Yo ass can peep tha context of a gangbangin' file rockin tha \fB\-Z\fP option ta \fBls\bP
.PP
Policy governs tha access confined processes gotta these files.
SELinux init policy is straight-up flexible allowin playas ta setup they init processes up in as secure a method as possible.
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines tha file context types fo' tha init, if you wanted to
store filez wit these types up in a gangbangin' finger-lickin' diffent paths, you need ta execute tha semanage command ta sepecify alternate labelin n' then use restorecon ta put tha labels on disk.

.B semanage fcontext -a -t init_exec_t '/srv/init/content(/.*)?'
.br
.B restorecon -R -v /srv/myinit_content

Note: SELinux often uses regular expressions ta specify labels dat match multiple files.

.I Da followin file types is defined fo' init:


.EX
.PP
.B init_exec_t
.EE

- Set filez wit tha init_exec_t type, if you wanna transizzle a executable ta tha init_t domain.

.br
.TP 5
Paths:
/sbin/init(ng)?, /usr/sbin/init(ng)?, /usr/lib/systemd/[^/]*, /usr/lib/systemd/system-generators/[^/]*, /bin/systemd, /sbin/upstart, /usr/bin/systemd, /usr/sbin/upstart

.EX
.PP
.B init_tmp_t
.EE

- Set filez wit tha init_tmp_t type, if you wanna store init temporary filez up in tha /tmp directories.


.EX
.PP
.B init_var_lib_t
.EE

- Set filez wit tha init_var_lib_t type, if you wanna store tha init filez under tha /var/lib directory.


.EX
.PP
.B init_var_run_t
.EE

- Set filez wit tha init_var_run_t type, if you wanna store tha init filez under tha /run or /var/run directory.


.EX
.PP
.B initctl_t
.EE

- Set filez wit tha initctl_t type, if you wanna treat tha filez as initctl data.


.EX
.PP
.B initrc_devpts_t
.EE

- Set filez wit tha initrc_devpts_t type, if you wanna treat tha filez as initrc devpts data.


.EX
.PP
.B initrc_exec_t
.EE

- Set filez wit tha initrc_exec_t type, if you wanna transizzle a executable ta tha initrc_t domain.

.br
.TP 5
Paths:
/etc/init\.d/.*, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /opt/nfast/sbin/init.d-ncipher, /usr/libexec/dcc/stop-.*, /usr/libexec/dcc/start-.*, /usr/lib/systemd/fedora[^/]*, /opt/nfast/scripts/init.d/(.*), /etc/rc\.d/rc, /etc/X11/prefdm, /usr/sbin/startx, /usr/bin/sepg_ctl, /usr/sbin/apachectl, /usr/sbin/ldap-agent, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/restart-dirsrv, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/share/system-config-skillz/system-config-skillz-mechanism\.py

.EX
.PP
.B initrc_state_t
.EE

- Set filez wit tha initrc_state_t type, if you wanna treat tha filez as initrc state data.


.EX
.PP
.B initrc_tmp_t
.EE

- Set filez wit tha initrc_tmp_t type, if you wanna store initrc temporary filez up in tha /tmp directories.


.EX
.PP
.B initrc_var_log_t
.EE

- Set filez wit tha initrc_var_log_t type, if you wanna treat tha data as initrc var log data, probably stored under tha /var/log directory.


.EX
.PP
.B initrc_var_run_t
.EE

- Set filez wit tha initrc_var_run_t type, if you wanna store tha initrc filez under tha /run or /var/run directory.

.br
.TP 5
Paths:
/var/run/utmp, /var/run/random-seed, /var/run/runlevel\.dir, /var/run/setmixer_flag

.PP
Note: File context can be temporarily modified wit tha chcon command. Y'all KNOW dat shit, muthafucka!  If you wanna permanently chizzle tha file context you need ta use the
.B semanage fcontext
command. Y'all KNOW dat shit, muthafucka!  This will modify tha SELinux labelin database.  Yo ass will need ta use
.B restorecon
to apply tha labels.

.SH "COMMANDS"
.B semanage fcontext
can also be used ta manipulate default file context mappings.
.PP
.B semanage permissive
can also be used ta manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used ta enable/disable/install/remove policy modules.

.B semanage boolean
can also be used ta manipulate tha booleans

.PP
.B system-config-selinux
is a GUI tool available ta customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage".

.SH "SEE ALSO"
selinux(8), init(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8)</textarea>

<div id="button">
<br/>
<input type="submit" name="translate" value="Tranzizzle Dis Shiznit" />
</div>

</form> 

</div>

<div id="space3"></div>
<div id="disclaimer"><h2>Use this to translate your words into gangsta</h2>
<h2>Click <a href="more.html">here</a> to learn more about Gizoogle</h2></div>

</body>
</html>
