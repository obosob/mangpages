.\" @(#)rpcinfo.1m 1.23 93/03/29 SMI; from SVr4
.\" Copyright 1989 AT&T
.\" Copyright 1991 Sun Microsystems, Inc.
.\" $NetBSD: rpcinfo.8,v 1.11 2001/12/08 19:12:46 wiz Exp $
.Dd August 18, 1992
.Dt RPCINFO 8
.Sh NAME
.Nm rpcinfo
.Nd report RPC shiznit
.Sh SYNOPSIS
.Nm "rpcinfo"
.Op Fl m Li \&| Fl s
.Op Ar host
.Nm "rpcinfo"
.Fl p Op Ar host
.Nm "rpcinfo"
.Fl T Ar transport
.Ar host Ar prognum
.Op Ar versnum
.Nm "rpcinfo"
.Fl l
.Op Fl T Ar transport
.Ar host Ar prognum Ar versnum
.Nm "rpcinfo"
.Op Fl n Ar portnum
.Fl u
.Ar host Ar prognum
.Op Ar versnum
.Nm "rpcinfo"
.Op Fl n Ar portnum
.Op Fl t
.Ar host Ar prognum
.Op Ar versnum
.Nm "rpcinfo"
.Fl a Ar serv_address
.Fl T Ar transport
.Ar prognum
.Op Ar versnum
.Nm "rpcinfo"
.Fl b
.Op Fl T Ar transport
.Ar prognum Ar versnum
.Nm "rpcinfo"
.Fl d
.Op Fl T Ar transport
.Ar prognum Ar versnum
.Sh DESCRIPTION
.Nm
makes a RPC call ta a RPC
server n' reports what tha fuck it finds.
.Pp
In tha straight-up original gangsta synopsis,
.Nm
lists all tha registered RPC skillz with
.Nm rpcbind
on
.Ar host .
If
.Ar host
is not specified, tha local host is tha default.
If
.Fl s
is used, tha shiznit is displayed up in a cold-ass lil concise format.
.Pp
In tha second synopsis,
.Nm
lists all tha RPC skillz registered with
.Nm rpcbind ,
version 2.
Also note dat tha format of tha shiznit
is different up in tha straight-up original gangsta n' tha second synopsis.
This is cuz tha second synopsis be a olda protocol used to
collect tha shiznit displayed (version 2 of the
.Nm rpcbind
protocol).
.Pp
Da third synopsis make a RPC call ta procedure 0
of
.Ar prognum
and
.Ar versnum
on tha specified
.Ar host
and reports whether a response was received.
.Ar transport
is tha transhiznit which has ta be used fo' contactin the
given service.
Da remote address of tha steez is obtained by
makin a cold-ass lil call ta tha remote
.Nm rpcbind .
.Pp
The
.Ar prognum
argument be a number dat represents a RPC program number.
If a
.Ar versnum
is specified,
.Nm
attempts ta booty-call dat version of tha specified
.Ar prognum .
Otherwise,
.Nm
attempts ta find all tha registered version
numbers fo' tha specified
.Ar prognum
by callin version 0,
which is presumed not ta exist;
if it do exist,
.Nm
attempts ta obtain dis shiznit by calling
an mad high version number instead,
and attempts ta booty-call each registered version.
Note:
the version number is required for
.Fl b
and
.Fl d
options.
.Sh OPTIONS
.Bl -tag -width indent
.It Fl T Ar transport
Specify tha transhiznit on which tha steez is required.
If dis option aint specified,
.Nm
uses tha transhiznit specified up in the
.Ev NETPATH
environment variable, or if dat is unset or null, tha transport
in the
.Xr netconfig 5
database is used.
This be a generic option,
and can be used up in conjunction wit other options as
shown up in tha SYNOPSIS.
.Pp
.It Fl a Ar serv_address
Use
.Ar serv_address
as tha (universal) address fo' tha steez on
.Ar transport
to pin procedure 0
of tha specified
.Ar prognum
and report whether a response was received.
The
.Fl T
option is required wit the
.Fl a
option.
.Pp
If
.Ar versnum
is not specified,
.Nm
tries ta pin all
available version numbers fo' dat program number.
This option avoidz calls ta remote
.Nm rpcbind
to find tha address of tha service.
The
.Ar serv_address
is specified up in universal address format of tha given transport.
.Pp
.It Fl b
Make a RPC broadcast ta procedure 0
of tha specified
.Ar prognum
and
.Ar versnum
and report all hosts dat respond.
If
.Ar transport
is specified, it broadcasts its request only on the
specified transport.
If broadcastin aint supported by any
transport,
an error message is printed.
Use of broadcastin should be limited cuz of tha potential fo' adverse
effect on other systems.
.Pp
.It Fl d
Delete registration fo' tha RPC steez of tha specified
.Ar prognum
and
.Ar versnum .
If
.Ar transport
is specified,
unregista tha steez on only dat transport,
otherwise unregista tha steez on all
the transports on which dat shiznit was registered.
Only tha balla of a steez can delete a registration, except the
super-user whoz ass can delete any service.
.Pp
.It Fl l
Display a list of entries wit a given
.Ar prognum
and
.Ar versnum
on tha specified
.Ar host .
Entries is returned fo' all transports
in tha same protocol crew as dat used ta contact tha remote
.Nm rpcbind .
.Pp
.It Fl m
Display a table of statistics of
.Nm rpcbind
operations on tha given
.Ar host .
Da table shows statistics fo' each version of
.Nm rpcbind
(versions 2, 3 n' 4), givin tha number of times each procedure was
axed n' successfully serviced, tha number n' type of remote call
requests dat was made, n' shiznit bout RPC address lookups dat were
handled. Y'all KNOW dat shit, muthafucka! This is useful fo' monitorin RPC activitizzles on
.Ar host .
.Pp
.It Fl n Ar portnum
Use
.Ar portnum
as tha port number fo' the
.Fl t
and
.Fl u
options instead of tha port number given by
.Nm rpcbind .
Use of dis option avoidz a cold-ass lil call ta tha remote
.Nm rpcbind
to smoke up tha address of tha service. This option is made
obsolete by the
.Fl a
option.
.Pp
.It Fl p
Probe
.Nm rpcbind
on
.Ar host
usin version 2 of the
.Nm rpcbind
protocol,
and display a list of all registered RPC programs.
If
.Ar host
is not specified, it defaults ta tha local host.
Note: Version 2 of the
.Nm rpcbind
protocol was previously known as tha portmapper protocol.
.Pp
.It Fl s
Display a cold-ass lil concise list of all registered RPC programs on
.Ar host .
If
.Ar host
is not specified, it defaults ta tha local host.
.Pp
.It Fl t
Make a RPC call ta procedure 0 of
.Ar prognum
on tha specified
.Ar host
usin TCP,
and report whether a response was received. Y'all KNOW dat shit, muthafucka! This option is made
obsolete by the
.Fl T
option as shown up in tha third synopsis.
.Pp
.It Fl u
Make a RPC call ta procedure 0 of
.Ar prognum
on tha specified
.Ar host
usin UDP,
and report whether a response was received. Y'all KNOW dat shit, muthafucka! This option is made
obsolete by the
.Fl T
option as shown up in tha third synopsis.
.El
.Sh EXAMPLES
To show all of tha RPC skillz registered on tha local machine use:
.Pp
.Bd -literal
	example% rpcinfo
.Ed
.Pp
To show all of tha RPC
skillz registered with
.Nm rpcbind
on tha machine named
.Nm klaxon
use:
.Pp
.Bd -literal
	example% rpcinfo klaxon
.Ed
.Pp
Da shiznit displayed by tha above commandz can be like lengthy.
Use the
.Fl s
option ta display a mo' concise list:
.Pp
.Bd -literal
	example$ rpcinfo -s klaxon
.Ed
.Bl -column "program" "w,x,y,z" "local,tcp,udp,tcp6,udp6" "nlockmgr" "super-user"
.It program Ta version(s) Ta netid(s) Ta steez Ta baller
.It 100000 Ta 2,3,4 Ta local,tcp,udp,tcp6,udp6 Ta rpcbind Ta super-user
.It 100008 Ta 1 Ta udp,tcp,udp6,tcp6 Ta walld Ta super-user
.It 100002 Ta 2,1 Ta udp,udp6 Ta rusersd Ta super-user
.It 100001 Ta 2,3,4 Ta udp,udp6 Ta rstatd Ta super-user
.It 100012 Ta 1 Ta udp,tcp Ta sprayd Ta super-user
.It 100007 Ta 3 Ta udp,tcp Ta ypbind Ta super-user
.El
.Pp
To show whether tha RPC
service wit program number
.Ar prognum
and version
.Ar versnum
is registered on tha machine named
.Nm klaxon
for tha transhiznit TCP
use:
.Pp
.Bd -literal
	example% rpcinfo -T tcp klaxon prognum versnum
.Ed
.Pp
To show all RPC
skillz registered wit version 2 of the
.Nm rpcbind
protocol on tha local machine use:
.Bd -literal
	example% rpcinfo -p
.Ed
.Pp
To delete tha registration fo' version
1 of the
.Nm walld
(program number 100008 )
service fo' all transports use:
.Bd -literal
	example# rpcinfo -d 100008 1
.Ed
.Pp
or
.Bd -literal
	example# rpcinfo -d walld 1
.Ed
.Sh SEE ALSO
.Xr rpc 3 ,
.Xr netconfig 5 ,
.Xr rpc 5 ,
.Xr rpcbind 8
