'\" t
.\"     Title: btrfs-inspect-internal
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-INSPECT\-INTE" "8" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-inspect-internal \- resolve different btrfs shit fo' debug purpose
.SH "SYNOPSIS"
.sp
\fBbtrfs inspect\-internal\fR \fI<subcommand>\fR \fI<args>\fR
.SH "DESCRIPTION"
.sp
\fBbtrfs inspect\-internal\fR is used ta resolve different shit fo' debug purpose\&.
.SH "SUBCOMMAND"
.PP
\fBinode\-resolve\fR [\-v] \fI<inode>\fR \fI<path>\fR
.RS 4
Resolves an
\fI<inode>\fR
in subvolume
\fI<path>\fR
to all filesystem paths\&.
.sp
\fBOptions\fR
.PP
\-v
.RS 4
verbose mode\&. print count of returned paths n' ioctl() return value
.RE
.RE
.PP
\fBlogical\-resolve\fR [\-Pv] [\-s \fI<bufsize>\fR] \fI<logical>\fR \fI<path>\fR
.RS 4
Resolves a
\fI<logical>\fR
address up in tha filesystem mounted at
\fI<path>\fR
to all inodes\&.
.sp
By default, each inode is then resolved ta a gangbangin' file system path (similar ta tha inode\-resolve subcommand)\&.
.sp
\fBOptions\fR
.PP
\-P
.RS 4
skip tha path resolvin n' print tha inodes instead
.RE
.PP
\-v
.RS 4
verbose mode\&. print count of returned paths n' all ioctl() return joints
.RE
.PP
\-s \fI<bufsize>\fR
.RS 4
set inode container\(cqs size\&.
.sp
This is used ta increase inode container\(cqs size up in case it aint enough ta read all tha resolved thangs up in dis biatch\&. Da max value one can set is 64k\&.
.RE
.RE
.PP
\fBsubvolid\-resolve\fR \fI<subvolid>\fR \fI<path>\fR
.RS 4
Git file system paths fo' tha given subvolume ID\&.
.RE
.PP
\fBrootid\fR \fI<path>\fR
.RS 4
For a given file or directory, return tha containin tree root id\&. For a subvolume return it\(cqs own tree id\&.
.sp
Da result is undefined fo' tha so\-called empty subvolumes (identified by inode number 2)\&.
.RE
.SH "EXIT STATUS"
.sp
\fBbtrfs inspect\-internal\fR returns a zero exit status if it succeeds\&. Non zero is returned up in case of failure\&.
.SH "AVAILABILITY"
.sp
\fBbtrfs\fR is part of btrfs\-progs\&. Please refer ta tha btrfs wiki \m[blue]\fBhttp://btrfs\&.wiki\&.kernel\&.org\fR\m[] fo' further details\&.
.SH "SEE ALSO"
.sp
\fBmkfs\&.btrfs\fR(8), \fBbtrfs\-debug\-tree\fR(8)
