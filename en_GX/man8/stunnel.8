.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some characta translations n' predefined strings.  \*(-- will
.\" give a unbreakable dash, \*(PI'ma give pi, \*(L" will give a left
.\" double quote, n' \*(R" will give a right double quote.  \*(C+ will
.\" give a sickr C++.  Capital omega is used ta do unbreakable dashes and
.\" therefore won't be available.  \*(C` n' \*(C' expand ta `' up in nroff,
.\" not a god damn thang up in troff, fo' use wit C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    dz -- \(*W-
.    dz PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    dz L" ""
.    dz R" ""
.    dz C` ""
.    dz C' ""
'br\}
.el\{\
.    dz -- \|\(em\|
.    dz PI \(*p
.    dz L" ``
.    dz R" ''
.    dz C`
.    dz C'
'br\}
.\"
.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If tha F regista is turned on, we'll generate index entries on stderr for
.\" titlez (.TH), headaz (.SH), subsections (.SS), shit (.Ip), n' index
.\" entries marked wit X<> up in POD.  Of course, you gonna gotta process the
.\" output yo ass up in some meaningful fashion.
.\"
.\" Avoid warnin from groff bout undefined regista 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "STUNNEL 8"
.TH STUNNEL 8 "2014.09.26" "5.04" "stunnel"
.\" For nroff, turn off justification. I aint talkin' bout chicken n' gravy biatch.  Always turn off hyphenation; it makes
.\" way too nuff mistakes up in technical documents.
.if n .ad l
.nh
.SH "NAME"
stunnel \- universal SSL tunnel
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.IP "\fBUnix:\fR" 4
.IX Item "Unix:"
\&\fBstunnel\fR [\s-1FILE\s0] | \-fdÂ N | \-help | \-version | \-sockets
.IP "\fB\s-1WIN32:\s0\fR" 4
.IX Item "WIN32:"
\&\fBstunnel\fR [ [\-install | \-uninstall | \-start | \-stop] | \-exit]
    [\-quiet] [\s-1FILE\s0] ] | \-help | \-version | \-sockets
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Da \fBstunnel\fR program is designed ta work as \fI\s-1SSL\s0\fR encryption wrapper 
between remote clients n' local (\fIinetd\fR\-startable) or remote
servers. Da concept is dat havin non-SSL aware daemons hustlin on
your system you can easily set dem up ta rap wit clients over
secure \s-1SSL\s0 channels.
.PP
\&\fBstunnel\fR can be used ta add \s-1SSL\s0 functionalitizzle ta commonly used \fIInetd\fR
daemons like \s-1POP\-2, POP\-3,\s0 n' \s-1IMAP\s0 servers, ta standalone daemons like
\&\s-1NNTP, SMTP\s0 n' \s-1HTTP,\s0 n' up in tunnelin \s-1PPP\s0 over network sockets without
changes ta tha source code.
.PP
This thang includes cryptographic software freestyled by
Eric Young (eay@cryptsoft.com)
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\s-1FILE\s0\fR" 4
.IX Item "FILE"
Use specified configuration file
.IP "\fB\-fd N\fR (Unix only)" 4
.IX Item "-fd N (Unix only)"
Read tha config file from specified file descriptor
.IP "\fB\-help\fR" 4
.IX Item "-help"
Print \fBstunnel\fR help menu
.IP "\fB\-version\fR" 4
.IX Item "-version"
Print \fBstunnel\fR version n' compile time defaults
.IP "\fB\-sockets\fR" 4
.IX Item "-sockets"
Print default socket options
.IP "\fB\-install\fR (\s-1NT/2000/XP\s0 only)" 4
.IX Item "-install (NT/2000/XP only)"
Install \s-1NT\s0 Service
.IP "\fB\-uninstall\fR (\s-1NT/2000/XP\s0 only)" 4
.IX Item "-uninstall (NT/2000/XP only)"
Uninstall \s-1NT\s0 Service
.IP "\fB\-start\fR (\s-1NT/2000/XP\s0 only)" 4
.IX Item "-start (NT/2000/XP only)"
Start \s-1NT\s0 Service
.IP "\fB\-stop\fR (\s-1NT/2000/XP\s0 only)" 4
.IX Item "-stop (NT/2000/XP only)"
Quit \s-1NT\s0 Service
.IP "\fB\-exit\fR (Win32 only)" 4
.IX Item "-exit (Win32 only)"
Exit a already started stunnel
.IP "\fB\-quiet\fR (\s-1NT/2000/XP\s0 only)" 4
.IX Item "-quiet (NT/2000/XP only)"
Don't display any message boxes
.SH "CONFIGURATION FILE"
.IX Header "CONFIGURATION FILE"
Each line of tha configuration file can be either:
.IP "\(bu" 4
An empty line (ignored).
.IP "\(bu" 4
A comment startin wit ';' (ignored).
.IP "\(bu" 4
An 'option_name = option_value' pair.
.IP "\(bu" 4
\&'[service_name]' indicatin a start of a steez definition.
.PP
An address parameta of a option may be either:
.IP "\(bu" 4
A port number.
.IP "\(bu" 4
A colon-separated pair of \s-1IP\s0 address (either IPv4, IPv6, or domain name) n' port number.
.IP "\(bu" 4
A Unix socket path (Unix only).
.SS "\s-1GLOBAL OPTIONS\s0"
.IX Subsection "GLOBAL OPTIONS"
.IP "\fBchroot\fR = \s-1DIRECTORY \s0(Unix only)" 4
.IX Item "chroot = DIRECTORY (Unix only)"
directory ta chroot \fBstunnel\fR process
.Sp
\&\fBchroot\fR keeps \fBstunnel\fR up in chrooted jail.  \fICApath\fR, \fICRLpath\fR, \fIpid\fR
and \fIexec\fR is located inside tha jail n' tha patches gotta be relative
to tha directory specified wit \fBchroot\fR.
.Sp
Several functionz of tha operatin system also need they filez ta be located within chroot jail, e.g.:
.RS 4
.IP "\(bu" 4
Delayed resolver typically needz /etc/nsswitch.conf n' /etc/resolv.conf.
.IP "\(bu" 4
Local time up in log filez needz /etc/timezone.
.IP "\(bu" 4
Some other functions may need devices, e.g. /dev/zero or /dev/null.
.RE
.RS 4
.RE
.IP "\fBcompression\fR = deflate | zlib | rle" 4
.IX Item "compression = deflate | zlib | rle"
select data compression algorithm
.Sp
default: no compression
.Sp
deflate is tha standard compression method as busted lyrics bout up in \s-1RFC 1951.\s0
.Sp
zlib compression of \fBOpenSSL 0.9.8\fR or above aint backward compatible with
\&\fBOpenSSL 0.9.7\fR.
.Sp
rle compression is currently not implemented by tha \fBOpenSSL\fR library.
.IP "\fBdebug\fR = [\s-1FACILITY.\s0]LEVEL" 4
.IX Item "debug = [FACILITY.]LEVEL"
debuggin level
.Sp
Level be a one of tha syslog level names or numbers
emerg (0), alert (1), crit (2), err (3), warnin (4), notice (5),
info (6), or debug (7).  All logs fo' tha specified level and
all levels numerically less than it is ghon be shown. I aint talkin' bout chicken n' gravy biatch.  Use \fIdebug = debug\fR or
\&\fIdebug = 7\fR fo' top billin debuggin output.  Da default is notice (5).
.Sp
Da syslog facilitizzle 'authpriv' is ghon be used unless a gangbangin' facilitizzle name is supplied.
(Facilitizzles is not supported on Win32.)
.Sp
Case is ignored fo' both facilitizzles n' levels.
.IP "\fB\s-1EGD\s0\fR = \s-1EGD_PATH \s0(Unix only)" 4
.IX Item "EGD = EGD_PATH (Unix only)"
path ta Entropy Gatherin Daemon socket
.Sp
Entropy Gatherin Daemon socket ta use ta feed \fBOpenSSL\fR random number
generator. Shiiit, dis aint no joke.  (Available only if compiled wit \fBOpenSSL 0.9.5a\fR or higher)
.IP "\fBengine\fR = auto | \s-1ENGINE_ID\s0" 4
.IX Item "engine = auto | ENGINE_ID"
select hardware engine
.Sp
default: software-only cryptography
.Sp
Here be a example of advanced engine configuration ta read private key from an
OpenSC engine
.Sp
.Vb 7
\&    engine=dynamic
\&    engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so
\&    engineCtrl=ID:pkcs11
\&    engineCtrl=LIST_ADD:1
\&    engineCtrl=LOAD
\&    engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc\-pkcs11.so
\&    engineCtrl=INIT
\&
\&    [service]
\&    engineNum=1
\&    key=id_45
.Ve
.IP "\fBengineCtrl\fR = COMMAND[:PARAMETER]" 4
.IX Item "engineCtrl = COMMAND[:PARAMETER]"
control hardware engine
.Sp
Special commandz \*(L"\s-1LOAD\*(R"\s0 n' \*(L"\s-1INIT\*(R"\s0 can be used ta load n' initialize the
engine cryptogaphic module.
.IP "\fBengineDefault\fR = \s-1TASK_LIST\s0" 4
.IX Item "engineDefault = TASK_LIST"
set OpenSSL tasks delegated ta tha current engine
.Sp
Da parameta specifies a cold-ass lil comma-separated list of task ta be delegated ta the
current engine.
.Sp
Da followin tasks may be available, if supported by tha engine: \s-1ALL, RSA,
DSA, ECDH, ECDSA, DH, RAND, CIPHERS, DIGESTS, PKEY, PKEY_CRYPTO, PKEY_ASN1.\s0
.IP "\fBfips\fR = yeaaaa | no" 4
.IX Item "fips = yeaaaa | no"
Enable or disable \s-1FIPS 140\-2\s0 mode.
.Sp
This option allows ta disable enterin \s-1FIPS\s0 mode if \fBstunnel\fR was compiled
with \s-1FIPS 140\-2\s0 support.
.Sp
default: no (since version 5.00)
.IP "\fBforeground\fR = yeaaaa | no (Unix only)" 4
.IX Item "foreground = yeaaaa | no (Unix only)"
foreground mode
.Sp
Stay up in foreground (don't fork) n' log ta stderr
instead of via syslog (unless \fIoutput\fR is specified).
.Sp
default: background up in daemon mode
.IP "\fBiconActive\fR = \s-1ICON_FILE \s0(\s-1GUI\s0 only)" 4
.IX Item "iconActizzle = ICON_FILE (GUI only)"
\&\s-1GUI\s0 icon ta be displayed when there be established connections
.Sp
On Windows platform tha parameta should be a .ico file containin a 16x16
pixel image.
.IP "\fBiconError\fR = \s-1ICON_FILE \s0(\s-1GUI\s0 only)" 4
.IX Item "iconError = ICON_FILE (GUI only)"
\&\s-1GUI\s0 icon ta be displayed when no valid configuration is loaded
.Sp
On Windows platform tha parameta should be a .ico file containin a 16x16
pixel image.
.IP "\fBiconIdle\fR = \s-1ICON_FILE \s0(\s-1GUI\s0 only)" 4
.IX Item "iconIdle = ICON_FILE (GUI only)"
\&\s-1GUI\s0 icon ta be displayed when there be no established connections
.Sp
On Windows platform tha parameta should be a .ico file containin a 16x16
pixel image.
.IP "\fBlog\fR = append | overwrite" 4
.IX Item "log = append | overwrite"
log file handling
.Sp
This option allows ta chizzle whether tha log file (specified wit tha \fIoutput\fR
option) be appended or overwritten when opened or re-opened.
.Sp
default: append
.IP "\fBoutput\fR = \s-1FILE\s0" 4
.IX Item "output = FILE"
append log lyrics ta a gangbangin' file
.Sp
/dev/stdout thang can be used ta bust log lyrics ta tha standard
output (for example ta log dem wit daemontools splogger).
.IP "\fBpid\fR = \s-1FILE \s0(Unix only)" 4
.IX Item "pid = FILE (Unix only)"
pid file location
.Sp
If tha argument is empty, then no pid file is ghon be pimped.
.Sp
\&\fIpid\fR path is relatizzle ta \fIchroot\fR directory if specified.
.IP "\fBRNDbytes\fR = \s-1BYTES\s0" 4
.IX Item "RNDbytes = BYTES"
bytes ta read from random seed files
.Sp
Number of bytez of data read from random seed files.  With \s-1SSL\s0 versions less
than \fB0.9.5a\fR, also determines how tha fuck nuff bytez of data is considered
sufficient ta seed tha \s-1PRNG. \s0 Mo' recent \fBOpenSSL\fR versions gotz a funky-ass builtin
function ta determine when sufficient randomnizz be available.
.IP "\fBRNDfile\fR = \s-1FILE\s0" 4
.IX Item "RNDfile = FILE"
path ta file wit random seed data
.Sp
Da \s-1SSL\s0 library will use data from dis file first ta seed tha random
number generator.
.IP "\fBRNDoverwrite\fR = yeaaaa | no" 4
.IX Item "RNDoverwrite = yeaaaa | no"
overwrite tha random seed filez wit freshly smoked up random data
.Sp
default: yes
.IP "\fBservice\fR = \s-1SERVICE \s0(Unix only)" 4
.IX Item "service = SERVICE (Unix only)"
use specified strang as \fIinetd\fR mode steez name fo' \s-1TCP\s0 Wrapper library
.Sp
default: stunnel
.IP "\fBsetgid\fR = \s-1GROUP \s0(Unix only)" 4
.IX Item "setgid = GROUP (Unix only)"
\&\fIsetgid()\fR ta tha specified crew up in daemon mode n' clear all other groups
.IP "\fBsetuid\fR = \s-1USER \s0(Unix only)" 4
.IX Item "setuid = USER (Unix only)"
\&\fIsetuid()\fR ta tha specified user up in daemon mode
.IP "\fBsocket\fR = a|l|r:OPTION=VALUE[:VALUE]" 4
.IX Item "socket = a|l|r:OPTION=VALUE[:VALUE]"
Set a option on accept/local/remote socket
.Sp
Da joints fo' linger option is l_onof:l_linger.
Da joints fo' time is tv_sec:tv_usec.
.Sp
Examples:
.Sp
.Vb 9
\&    socket = l:SO_LINGER=1:60
\&        set one minute timeout fo' closin local socket
\&    socket = r:SO_OOBINLINE=yes
\&        place out\-of\-band data directly tha fuck into the
\&        receive data stream fo' remote sockets
\&    socket = a:SO_REUSEADDR=no
\&        disable address reuse (enabled by default)
\&    socket = a:SO_BINDTODEVICE=lo
\&        only accept connections on loopback intercourse
.Ve
.IP "\fBsyslog\fR = yeaaaa | no (Unix only)" 4
.IX Item "syslog = yeaaaa | no (Unix only)"
enable loggin via syslog
.Sp
default: yes
.IP "\fBtaskbar\fR = yeaaaa | no (\s-1WIN32\s0 only)" 4
.IX Item "taskbar = yeaaaa | no (WIN32 only)"
enable tha taskbar icon
.Sp
default: yes
.SS "SERVICE-LEVEL \s-1OPTIONS\s0"
.IX Subsection "SERVICE-LEVEL OPTIONS"
Each configuration section begins wit steez name up in square brackets.
Da steez name is used fo' libwrap (\s-1TCP\s0 Wrappers) access control n' lets
you distinguish \fBstunnel\fR skillz up in yo' log files.
.PP
Note dat if you wish ta run \fBstunnel\fR up in \fIinetd\fR mode (where it
is provided a network socket by a server like fuckin \fIinetd\fR, \fIxinetd\fR,
or \fItcpserver\fR) then you should read tha section entitled \fI\s-1INETD MODE\s0\fR
below.
.IP "\fBaccept\fR = [\s-1HOST:\s0]PORT" 4
.IX Item "accept = [HOST:]PORT"
accept connections on specified address
.Sp
If no host specified, defaults ta all IPv4 addresses fo' tha local host.
.Sp
To listen on all IPv6 addresses use:
.Sp
.Vb 1
\&    connect = :::PORT
.Ve
.IP "\fBCApath\fR = \s-1DIRECTORY\s0" 4
.IX Item "CApath = DIRECTORY"
Certificate Authoritizzle directory
.Sp
This is tha directory up in which \fBstunnel\fR will look fo' certificates when using
the \fIverify\fR.  Note dat tha certificates up in dis directory should be named
\&\s-1XXXXXXXX.0\s0 where \s-1XXXXXXXX\s0 is tha hash value of tha \s-1DER\s0 encoded subject of the
cert.
.Sp
Da hash algorithm has been chizzled up in \fBOpenSSL 1.0.0\fR.  It be required to
c_rehash tha directory on upgrade from \fBOpenSSL 0.x.x\fR ta \fBOpenSSL 1.x.x\fR.
.Sp
\&\fICApath\fR path is relatizzle ta \fIchroot\fR directory if specified.
.IP "\fBCAfile\fR = \s-1CERT_FILE\s0" 4
.IX Item "CAfile = CERT_FILE"
Certificate Authoritizzle file
.Sp
This file gotz nuff multiple \s-1CA\s0 certificates, used wit tha \fIverify\fR.
.IP "\fBcert\fR = \s-1PEM_FILE\s0" 4
.IX Item "cert = PEM_FILE"
certificate chain \s-1PEM\s0 file name
.Sp
A \s-1PEM\s0 be always needed up in server mode.
Specifyin dis flag up in client mode will use dis certificate chain
as a cold-ass lil client side certificate chain. I aint talkin' bout chicken n' gravy biatch.  Usin client side certs is optional.
Da certificates must be up in \s-1PEM\s0 format n' must be sorted startin wit the
certificate ta tha highest level (root \s-1CA\s0).
.IP "\fBciphers\fR = \s-1CIPHER_LIST\s0" 4
.IX Item "ciphers = CIPHER_LIST"
Select permitted \s-1SSL\s0 ciphers
.Sp
A colon delimited list of tha ciphers ta allow up in tha \s-1SSL\s0 connection,
for example \s-1DES\-CBC3\-SHA:IDEA\-CBC\-MD5.\s0
.IP "\fBclient\fR = yeaaaa | no" 4
.IX Item "client = yeaaaa | no"
client mode (remote steez uses \s-1SSL\s0)
.Sp
default: no (server mode)
.IP "\fBconnect\fR = [\s-1HOST:\s0]PORT" 4
.IX Item "connect = [HOST:]PORT"
connect ta a remote address
.Sp
If no host is specified, tha host defaults ta localhost.
.Sp
Multiple \fBconnect\fR options is allowed up in a single steez section.
.Sp
If host resolves ta multiple addresses and/or if multiple \fIconnect\fR
options is specified, then tha remote address is chosen rockin a
round-robin algorithm.
.IP "\fBCRLpath\fR = \s-1DIRECTORY\s0" 4
.IX Item "CRLpath = DIRECTORY"
Certificate Revocation Lists directory
.Sp
This is tha directory up in which \fBstunnel\fR will look fo' CRLs when
usin tha \fIverify\fR. Note dat tha CRLs up in dis directory should
be named \s-1XXXXXXXX\s0.r0 where \s-1XXXXXXXX\s0 is tha hash value of tha \s-1CRL.\s0
.Sp
Da hash algorithm has been chizzled up in \fBOpenSSL 1.0.0\fR.  It be required to
c_rehash tha directory on upgrade from \fBOpenSSL 0.x.x\fR ta \fBOpenSSL 1.x.x\fR.
.Sp
\&\fICRLpath\fR path is relatizzle ta \fIchroot\fR directory if specified.
.IP "\fBCRLfile\fR = \s-1CERT_FILE\s0" 4
.IX Item "CRLfile = CERT_FILE"
Certificate Revocation Lists file
.Sp
This file gotz nuff multiple CRLs, used wit tha \fIverify\fR.
.IP "\fBcurve\fR = \s-1NID\s0" 4
.IX Item "curve = NID"
specify \s-1ECDH\s0 curve name
.Sp
To git a list of supported cuves use:
.Sp
.Vb 1
\&    openssl ecparam \-list_curves
.Ve
.Sp
default: prime256v1
.IP "\fBdelay\fR = yeaaaa | no" 4
.IX Item "delay = yeaaaa | no"
delay \s-1DNS\s0 lookup fo' \fIconnect\fR option
.Sp
This option is useful fo' dynamic \s-1DNS,\s0 or when \s-1DNS\s0 aint available during
\&\fBstunnel\fR startup (road warrior \s-1VPN,\s0 dial-up configurations).
.Sp
Delayed resolver mode be automatically engaged when stunnel fails ta resolve on
startup any of tha \fIconnect\fR targets fo' a service.
.Sp
Delayed resolver inflicts \fIfailover = prio\fR.
.Sp
default: no
.IP "\fBengineId\fR = \s-1ENGINE_ID\s0" 4
.IX Item "engineId = ENGINE_ID"
select engine \s-1ID\s0 fo' tha service
.IP "\fBengineNum\fR = \s-1ENGINE_NUMBER\s0" 4
.IX Item "engineNum = ENGINE_NUMBER"
select engine number fo' tha service
.Sp
Da engines is numbered startin from 1.
.IP "\fBexec\fR = \s-1EXECUTABLE_PATH\s0" 4
.IX Item "exec = EXECUTABLE_PATH"
execute local inetd-type program
.Sp
\&\fIexec\fR path is relatizzle ta \fIchroot\fR directory if specified.
.Sp
Da followin environmenstrual variablez is set on Unix platform:
\&\s-1REMOTE_HOST, REMOTE_PORT, SSL_CLIENT_DN, SSL_CLIENT_I_DN.\s0
.ie n .IP "\fBexecargs\fR = $0 $1 $2 ..." 4
.el .IP "\fBexecargs\fR = \f(CW$0\fR \f(CW$1\fR \f(CW$2\fR ..." 4
.IX Item "execargs = $0 $1 $2 ..."
arguments fo' \fIexec\fR includin program name ($0)
.Sp
Quotin is currently not supported.
Arguments is separated wit arbitrary number of whitespaces.
.IP "\fBfailover\fR = rr | prio" 4
.IX Item "failover = rr | prio"
Failover game fo' multiple \*(L"connect\*(R" targets.
.Sp
.Vb 2
\&    rr (round robin) \- fair load distribution
\&    prio (priority) \- use tha order specified up in config file
.Ve
.Sp
default: rr
.IP "\fBident\fR = \s-1USERNAME\s0" 4
.IX Item "ident = USERNAME"
use \s-1IDENT \s0(\s-1RFC 1413\s0) username checking
.IP "\fBkey\fR = \s-1KEY_FILE\s0" 4
.IX Item "key = KEY_FILE"
private key fo' certificate specified wit \fIcert\fR option
.Sp
Private key is needed ta authenticate certificate baller.
Since dis file should be kept secret it should only be readable
to its balla n' shit.  On Unix systems you can use tha followin command:
.Sp
.Vb 1
\&    chmod 600 keyfile
.Ve
.Sp
default: value of \fIcert\fR option
.IP "\fBlibwrap\fR = yeaaaa | no" 4
.IX Item "libwrap = yeaaaa | no"
Enable or disable tha use of /etc/hosts.allow n' /etc/hosts.deny.
.Sp
default: no (since version 5.00)
.IP "\fBlocal\fR = \s-1HOST\s0" 4
.IX Item "local = HOST"
\&\s-1IP\s0 of tha outgoin intercourse is used as source fo' remote connections.
Use dis option ta bind a static local \s-1IP\s0 address, instead.
.IP "\fBsni\fR = \s-1SERVICE:SERVER_PATTERN \s0(server mode)" 4
.IX Item "sni = SERVICE:SERVER_PATTERN (server mode)"
Use tha steez as a slave steez (a name-based virtual server) fo' Server
Name Indication \s-1TLS\s0 extension (\s-1RFC 3546\s0).
.Sp
\&\fIservice_name\fR specifies tha masta steez dat accepts client connections
with \fIaccept\fR option. I aint talkin' bout chicken n' gravy biatch.  \fIserver_name_pattern\fR specifies tha host name ta be
redirected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da pattern may start wit '*' character, e.g. '*.example.com'.
Multiple slave skillz is normally specified fo' a single masta service.
\&\fIsni\fR option can also be specified mo' than once within a single slave
service.
.Sp
This service, as well as tha masta service, may not be configured up in client
mode.
.Sp
\&\fIconnect\fR option of tha slave steez is ignored when \fIprotocol\fR option is
specified, as \fIprotocol\fR connects remote host before \s-1TLS\s0 handshake.
.Sp
Libwrap checks (Unix only) is performed twice: wit masta steez name after
\&\s-1TCP\s0 connection be accepted, n' wit slave steez name durin \s-1TLS\s0 handshake.
.Sp
Option \fIsni\fR is only available when compiled wit \fBOpenSSL 1.0.0\fR n' later.
.IP "\fBsni\fR = \s-1SERVER \s0(client mode)" 4
.IX Item "sni = SERVER (client mode)"
Use tha parameta as tha value of \s-1TLS\s0 Server Name Indication (\s-1RFC 3546\s0)
extension.
.Sp
Option \fIsni\fR is only available when compiled wit \fBOpenSSL 1.0.0\fR n' later.
.IP "\fB\s-1OCSP\s0\fR = \s-1URL\s0" 4
.IX Item "OCSP = URL"
select \s-1OCSP\s0 server fo' certificate verification
.IP "\fBOCSPflag\fR = \s-1OCSP_FLAG\s0" 4
.IX Item "OCSPflag = OCSP_FLAG"
specify \s-1OCSP\s0 server flag
.Sp
Several \fIOCSPflag\fR can be used ta specify multiple flags.
.Sp
currently supported flags: \s-1NOCERTS, NOINTERN NOSIGS, NOCHAIN, NOVERIFY,
NOEXPLICIT, NOCASIGN, NODELEGATED, NOCHECKS, TRUSTOTHER, RESPID_KEY, NOTIME\s0
.IP "\fBoptions\fR = \s-1SSL_OPTIONS\s0" 4
.IX Item "options = SSL_OPTIONS"
\&\fBOpenSSL\fR library options
.Sp
Da parameta is tha \fBOpenSSL\fR option name as busted lyrics bout up in the
\&\fI\fISSL_CTX_set_options\fI\|(3ssl)\fR manual yo, but without \fI\s-1SSL_OP_\s0\fR prefix.
Several \fIoptions\fR can be used ta specify multiple options.
.Sp
For example fo' compatibilitizzle wit erroneous Eudora \s-1SSL\s0 implementation
the followin option can be used:
.Sp
.Vb 1
\&    options = DONT_INSERT_EMPTY_FRAGMENTS
.Ve
.IP "\fBprotocol\fR = \s-1PROTO\s0" 4
.IX Item "protocol = PROTO"
application protocol ta negotiate \s-1SSL\s0
.Sp
This option enablez initial, protocol-specific negotiation of tha \s-1SSL/TLS\s0
encryption.
\&\fIprotocol\fR option should not be used wit \s-1SSL\s0 encryption on a separate port.
.Sp
Currently supported protocols:
.RS 4
.IP "\fIcifs\fR" 4
.IX Item "cifs"
Proprietary (undocummented) extension of \s-1CIFS\s0 protocol implemented up in Samba.
Support fo' dis extension was dropped up in Samba 3.0.0.
.IP "\fIconnect\fR" 4
.IX Item "connect"
Based on \s-1RFC 2817 \- \s0\fIUpgradin ta \s-1TLS\s0 Within \s-1HTTP/1.1\s0\fR, section 5.2 \- \fIRequestin a Tunnel wit \s-1CONNECT\s0\fR
.Sp
This protocol is only supported up in client mode.
.IP "\fIimap\fR" 4
.IX Item "imap"
Based on \s-1RFC 2595 \- \s0\fIUsin \s-1TLS\s0 wit \s-1IMAP, POP3\s0 n' \s-1ACAP\s0\fR
.IP "\fInntp\fR" 4
.IX Item "nntp"
Based on \s-1RFC 4642 \- \s0\fIUsin Transhiznit Layer Securitizzle (\s-1TLS\s0) wit Network Shit Transfer Protocol (\s-1NNTP\s0)\fR
.Sp
This protocol is only supported up in client mode.
.IP "\fIpgsql\fR" 4
.IX Item "pgsql"
Based on http://www.postgresql.org/docs/8.3/static/protocol\-flow.html#AEN73982
.IP "\fIpop3\fR" 4
.IX Item "pop3"
Based on \s-1RFC 2449 \- \s0\fI\s-1POP3\s0 Extension Mechanism\fR
.IP "\fIproxy\fR" 4
.IX Item "proxy"
Haproxy client \s-1IP\s0 address http://haproxy.1wt.eu/download/1.5/doc/proxy\-protocol.txt
.IP "\fIsmtp\fR" 4
.IX Item "smtp"
Based on \s-1RFC 2487 \- \s0\fI\s-1SMTP\s0 Service Extension fo' Secure \s-1SMTP\s0 over \s-1TLS\s0\fR
.RE
.RS 4
.RE
.IP "\fBprotocolAuthentication\fR = basic | ntlm" 4
.IX Item "protocolAuthentication = basic | ntlm"
authentication type fo' protocol negotiations
.Sp
Currently authentication type only applies ta tha 'connect' protocol.
.Sp
default: basic
.IP "\fBprotocolHost\fR = \s-1HOST:PORT\s0" 4
.IX Item "protocolHost = HOST:PORT"
destination address fo' protocol negotiations
.Sp
\&\fIprotocolHost\fR specifies tha final \s-1SSL\s0 server ta be connected by tha proxy,
and not tha proxy server directly connected by \fBstunnel\fR.
Da proxy server should be specified wit tha 'connect' option.
.Sp
Currently protocol destination address only applies ta 'connect' protocol.
.IP "\fBprotocolPassword\fR = \s-1PASSWORD\s0" 4
.IX Item "protocolPassword = PASSWORD"
password fo' protocol negotiations
.IP "\fBprotocolUsername\fR = \s-1USERNAME\s0" 4
.IX Item "protocolUsername = USERNAME"
username fo' protocol negotiations
.IP "\fBpty\fR = yeaaaa | no (Unix only)" 4
.IX Item "pty = yeaaaa | no (Unix only)"
allocate pseudoterminal fo' 'exec' option
.IP "\fBredirect\fR = [\s-1HOST:\s0]PORT" 4
.IX Item "redirect = [HOST:]PORT"
redirect \s-1SSL\s0 client connections on authentication failures
.Sp
This option only works up in server mode, n' without protocol negotiation.
.IP "\fBrenegotiation\fR = yeaaaa | no" 4
.IX Item "renegotiation = yeaaaa | no"
support \s-1SSL\s0 renegotiation
.Sp
Applicationz of tha \s-1SSL\s0 renegotiation include some authentication scenarios,
or re-keyin long lastin connections.
.Sp
On tha other hand dis feature can facilitate a trivial CPU-exhaustion
DoS attack:
.Sp
http://vincent.bernat.im/en/blog/2011\-ssl\-dos\-mitigation.html
.Sp
Please note dat disablin \s-1SSL\s0 renegotiation do not straight-up mitigate
this issue.
.Sp
default: yeaaaa (if supported by \fBOpenSSL\fR)
.IP "\fBreset\fR = yeaaaa | no" 4
.IX Item "reset = yeaaaa | no"
attempt ta use \s-1TCP RST\s0 flag ta indicate a error
.Sp
This option aint supported on some platforms.
.Sp
default: yes
.IP "\fBretry\fR = yeaaaa | no" 4
.IX Item "retry = yeaaaa | no"
reconnect a cold-ass lil connect+exec section afta itz disconnected
.Sp
default: no
.IP "\fBsessionCacheSize\fR = \s-1NUM_ENTRIES\s0" 4
.IX Item "sessionCacheSize = NUM_ENTRIES"
session cache size
.Sp
\&\fIsessionCacheSize\fR specifies tha maximum number of tha internal session cache
entries.
.Sp
Da value of 0 can be used fo' unlimited size.  It aint recommended
for thang use cuz of tha risk of memory exhaustion DoS attack.
.IP "\fBsessionCacheTimeout\fR = \s-1TIMEOUT\s0" 4
.IX Item "sessionCacheTimeout = TIMEOUT"
session cache timeout
.Sp
This is tha number of secondz ta keep cached \s-1SSL\s0 sessions.
.IP "\fBsessiond\fR = \s-1HOST:PORT\s0" 4
.IX Item "sessiond = HOST:PORT"
address of sessiond \s-1SSL\s0 cache server
.IP "\fBsslVersion\fR = \s-1SSL_VERSION\s0" 4
.IX Item "sslVersion = SSL_VERSION"
select version of \s-1SSL\s0 protocol
.Sp
Allowed options: all, SSLv2, SSLv3, TLSv1, TLSv1.1, TLSv1.2
.IP "\fBstack\fR = \s-1BYTES \s0(except fo' \s-1FORK\s0 model)" 4
.IX Item "stack = BYTES (except fo' FORK model)"
thread stack size
.IP "\fBTIMEOUTbusy\fR = \s-1SECONDS\s0" 4
.IX Item "TIMEOUTbusy = SECONDS"
time ta wait fo' expected data
.IP "\fBTIMEOUTclose\fR = \s-1SECONDS\s0" 4
.IX Item "TIMEOUTclose = SECONDS"
time ta wait fo' close_notify (set ta 0 fo' buggy \s-1MSIE\s0)
.IP "\fBTIMEOUTconnect\fR = \s-1SECONDS\s0" 4
.IX Item "TIMEOUTconnect = SECONDS"
time ta wait ta connect a remote host
.IP "\fBTIMEOUTidle\fR = \s-1SECONDS\s0" 4
.IX Item "TIMEOUTidle = SECONDS"
time ta keep a idle connection
.IP "\fBtransparent\fR = none | source | destination | both (Unix only)" 4
.IX Item "transparent = none | source | destination | both (Unix only)"
enable transparent proxy support on selected platforms
.Sp
Supported joints:
.RS 4
.IP "\fInone\fR" 4
.IX Item "none"
Disable transparent proxy support.  This is tha default.
.IP "\fIsource\fR" 4
.IX Item "source"
Re-write address ta step tha fuck up as if wrapped daemon is connecting
from tha \s-1SSL\s0 client machine instead of tha machine hustlin \fBstunnel\fR.
.Sp
This option is currently available in:
.RS 4
.IP "Remote mode (\fIconnect\fR option) on \fILinux >=2.6.28\fR" 4
.IX Item "Remote mode (connect option) on Linux >=2.6.28"
This configuration requires \fBstunnel\fR ta be executed as root n' without
\&\fIsetuid\fR option.
.Sp
This configuration requires tha followin setup fo' iptablez n' routing
(possibly up in /etc/rc.local or equivalent file):
.Sp
.Vb 7
\&    iptablez \-t mangle \-N DIVERT
\&    iptablez \-t mangle \-A PREROUTING \-p tcp \-m socket \-j DIVERT
\&    iptablez \-t mangle \-A DIVERT \-j MARK \-\-set\-mark 1
\&    iptablez \-t mangle \-A DIVERT \-j ACCEPT
\&    ip rule add fwmark 1 lookup 100
\&    ip route add local 0.0.0.0/0 dev lo table 100
\&    echo 0 >/proc/sys/net/ipv4/conf/lo/rp_filter
.Ve
.Sp
\&\fBstunnel\fR must also ta be executed as root n' without \fIsetuid\fR option.
.IP "Remote mode (\fIconnect\fR option) on \fILinux 2.2.x\fR" 4
.IX Item "Remote mode (connect option) on Linux 2.2.x"
This configuration requires kernel ta be compiled wit \fItransparent proxy\fR
option.
Connected steez must be installed on a separate host.
Routin towardz tha clients has ta go all up in tha \fBstunnel\fR box.
.Sp
\&\fBstunnel\fR must also ta be executed as root n' without \fIsetuid\fR option.
.IP "Remote mode (\fIconnect\fR option) on \fIFreeBSD >=8.0\fR" 4
.IX Item "Remote mode (connect option) on FreeBSD >=8.0"
This configuration requires additionizzle firewall n' routin setup.
\&\fBstunnel\fR must also ta be executed as root n' without \fIsetuid\fR option.
.IP "Local mode (\fIexec\fR option)" 4
.IX Item "Local mode (exec option)"
This configuration works by pre-loadin \fIlibstunnel.so\fR shared library.
_RLD_LIST environment variable is used on Tru64, n' \s-1LD_PRELOAD\s0 variable on
other platforms.
.RE
.RS 4
.RE
.IP "\fIdestination\fR" 4
.IX Item "destination"
Original Gangsta destination is used instead of \fIconnect\fR option.
.Sp
A steez section fo' transparent destination may be lookin like this:
.Sp
.Vb 4
\&    [transparent]
\&    client=yes
\&    accept=<stunnel_port>
\&    transparent=destination
.Ve
.Sp
This configuration requires tha followin setup fo' iptables
(possibly up in /etc/rc.local or equivalent file):
.Sp
.Vb 2
\&    /sbin/iptablez \-I INPUT \-i eth0 \-p tcp \-\-dport <stunnel_port> \-j ACCEPT
\&    /sbin/iptablez \-t nat \-I PREROUTING \-i eth0 \-p tcp \-\-dport <redirected_port> \-j DNAT \-\-to\-destination <local_ip>:<stunnel_port>
.Ve
.Sp
Transparent destination option is currently only supported on Linux.
.IP "\fIboth\fR" 4
.IX Item "both"
Use both \fIsource\fR n' \fIdestination\fR transparent proxy.
.RE
.RS 4
.Sp
Two legacy options is also supported fo' backward compatibility:
.IP "\fIyes\fR" 4
.IX Item "yes"
This options has been renamed ta \fIsource\fR.
.IP "\fIno\fR" 4
.IX Item "no"
This options has been renamed ta \fInone\fR.
.RE
.RS 4
.RE
.IP "\fBverify\fR = \s-1LEVEL\s0" 4
.IX Item "verify = LEVEL"
verify peer certificate
.RS 4
.IP "level 0" 4
.IX Item "level 0"
Request n' ignore peer certificate.
.IP "level 1" 4
.IX Item "level 1"
Verify peer certificate if present.
.IP "level 2" 4
.IX Item "level 2"
Verify peer certificate.
.IP "level 3" 4
.IX Item "level 3"
Verify peer wit locally installed certificate.
.IP "level 4" 4
.IX Item "level 4"
Ignore \s-1CA\s0 chain n' only verify peer certificate.
.IP "default" 4
.IX Item "default"
No verify.
.RE
.RS 4
.Sp
It be blingin ta understand, dat dis option was solely designed fo' access
control n' not fo' authorization. I aint talkin' bout chicken n' gravy biatch.  Specifically fo' level 2 every last muthafuckin non-revoked
certificate be accepted regardless of its Common Name.  For dis reason a
dedicated \s-1CA\s0 should be used wit level 2, n' not a generic \s-1CA\s0 commonly used
for webservers.  Level 3 is preferred fo' point-to-point connections.
.RE
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
\&\fBstunnel\fR returns zero on success, non-zero on error.
.SH "SIGNALS"
.IX Header "SIGNALS"
Da followin signals can be used ta control \fBstunnel\fR up in Unix environment:
.IP "\s-1SIGHUP\s0" 4
.IX Item "SIGHUP"
Force a reload of tha configuration file.
.Sp
Some global options aint gonna be reloaded:
.RS 4
.IP "\(bu" 4
chroot
.IP "\(bu" 4
foreground
.IP "\(bu" 4
pid
.IP "\(bu" 4
setgid
.IP "\(bu" 4
setuid
.RE
.RS 4
.Sp
Da use of 'setuid' option will also prevent \fBstunnel\fR from bindin privileged
(<1024) ports durin configuration reloading.
.Sp
When 'chroot' option is used, \fBstunnel\fR will look fo' all its filez (including
configuration file, certificates, log file n' pid file) within tha chroot
jail.
.RE
.IP "\s-1SIGUSR1\s0" 4
.IX Item "SIGUSR1"
Close n' reopen \fBstunnel\fR log file.
This function can be used fo' log rotation.
.IP "\s-1SIGTERM, SIGQUIT, SIGINT\s0" 4
.IX Item "SIGTERM, SIGQUIT, SIGINT"
Shut \fBstunnel\fR down.
.PP
Da result of bustin  any other signals ta tha server is undefined.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
In order ta provide \s-1SSL\s0 encapsulation ta yo' local \fIimapd\fR service, use:
.PP
.Vb 4
\&    [imapd]
\&    accept = 993
\&    exec = /usr/sbin/imapd
\&    execargs = imapd
.Ve
.PP
or up in remote mode:
.PP
.Vb 3
\&    [imapd]
\&    accept = 993
\&    connect = 143
.Ve
.PP
In order ta let yo' local e\-mail client connect ta a SSL-enabled \fIimapd\fR
service on another server, configure tha e\-mail client ta connect ta localhost
on port 119 n' use:
.PP
.Vb 4
\&    [imap]
\&    client = yes
\&    accept = 143
\&    connect = servername:993
.Ve
.PP
If you wanna provide tunnelin ta yo' \fIpppd\fR daemon on port 2020,
use suttin' like:
.PP
.Vb 5
\&    [vpn]
\&    accept = 2020
\&    exec = /usr/sbin/pppd
\&    execargs = pppd local
\&    pty = yes
.Ve
.PP
If you wanna use \fBstunnel\fR up in \fIinetd\fR mode ta launch yo' imapd
process, you'd use dis \fIstunnel.conf\fR.
Note there must be no \fI[service_name]\fR section.
.PP
.Vb 2
\&    exec = /usr/sbin/imapd
\&    execargs = imapd
.Ve
.SH "NOTES"
.IX Header "NOTES"
.SS "\s-1RESTRICTIONS\s0"
.IX Subsection "RESTRICTIONS"
\&\fBstunnel\fR cannot be used fo' tha \s-1FTP\s0 daemon cuz of tha nature
of tha \s-1FTP\s0 protocol which utilizes multiple ports fo' data transfers.
There is available SSL-enabled versionz of \s-1FTP\s0 n' telnet daemons, however.
.SS "\s-1INETD MODE\s0"
.IX Subsection "INETD MODE"
Da most common use of \fBstunnel\fR is ta listen on a network
port n' establish communication wit either a freshly smoked up port
via tha connect option, or a freshly smoked up program via tha \fIexec\fR option.
However there be a special case when you wish ta have
some other program accept incomin connections and
launch \fBstunnel\fR, fo' example wit \fIinetd\fR, \fIxinetd\fR,
or \fItcpserver\fR.
.PP
For example, if you have tha followin line up in \fIinetd.conf\fR:
.PP
.Vb 1
\&    imaps stream tcp nowait root /usr/bin/stunnel stunnel /etc/stunnel/imaps.conf
.Ve
.PP
In these cases, tha \fIinetd\fR\-style program is responsible
for bindin a network socket (\fIimaps\fR above) n' handing
it ta \fBstunnel\fR when a cold-ass lil connection is received.
Thus you do not want \fBstunnel\fR ta have any \fIaccept\fR option.
All tha \fIService Level Options\fR should be placed up in the
global options section, n' no \fI[service_name]\fR section
will be present.  See tha \fI\s-1EXAMPLES\s0\fR section fo' example
configurations.
.SS "\s-1CERTIFICATES\s0"
.IX Subsection "CERTIFICATES"
Each SSL-enabled daemon need ta present a valid X.509 certificate
to tha peer n' shit. Well shiiiit, it also needz a private key ta decrypt tha incoming
data. Da easiest way ta obtain a cold-ass lil certificate n' a key is ta 
generate dem wit tha free \fBOpenSSL\fR package. Yo ass can find more
information on certificates generation on pages listed below.
.PP
Da order of contentz of tha \fI.pem\fR file is blingin.  It should contain the
unencrypted private key first, then a signed certificate (not certificate
request).  There should be also empty lines afta certificate n' private key.
Plaintext certificate shiznit appended on tha top of generated certificate
should be discarded. Y'all KNOW dat shit, muthafucka! So tha file should be lookin like this:
.PP
.Vb 8
\&    \-\-\-\-\-BEGIN RSA PRIVATE KEY\-\-\-\-\-
\&    [encoded key]
\&    \-\-\-\-\-END RSA PRIVATE KEY\-\-\-\-\-
\&    [empty line]
\&    \-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-
\&    [encoded certificate]
\&    \-\-\-\-\-END CERTIFICATE\-\-\-\-\-
\&    [empty line]
.Ve
.SS "\s-1RANDOMNESS\s0"
.IX Subsection "RANDOMNESS"
\&\fBstunnel\fR need ta seed tha \s-1PRNG \s0(pseudo random number generator) in
order fo' \s-1SSL\s0 ta use phat randomness.  Da followin sources is loaded
in order until sufficient random data has been gathered:
.IP "\(bu" 4
Da file specified wit tha \fIRNDfile\fR flag.
.IP "\(bu" 4
Da file specified by tha \s-1RANDFILE\s0 environment variable, if set.
.IP "\(bu" 4
Da file .rnd up in yo' home directory, if \s-1RANDFILE\s0 not set.
.IP "\(bu" 4
Da file specified wit '\-\-with\-random' at compile time.
.IP "\(bu" 4
Da contentz of tha screen if hustlin on Windows.
.IP "\(bu" 4
Da egd socket specified wit tha \fI\s-1EGD\s0\fR flag.
.IP "\(bu" 4
Da egd socket specified wit '\-\-with\-egd\-sock' at compile time.
.IP "\(bu" 4
Da /dev/urandom device.
.PP
With recent (\fBOpenSSL 0.9.5a\fR or later) version of \s-1SSL\s0 it will stop loading
random data automatically when sufficient entropy has been gathered. Y'all KNOW dat shit, muthafucka!  With
previous versions it will continue ta gather from all tha above sources since
no \s-1SSL\s0 function exists ta tell when enough data be available.
.PP
Note dat on Windows machines dat aint gots console user interaction
(mouse movements, bustin windows, etc.) tha screen contents is not
variable enough ta be sufficient, n' you should provide a random file
for use wit tha \fIRNDfile\fR flag.
.PP
Note dat tha file specified wit tha \fIRNDfile\fR flag should contain
random data \*(-- dat means it should contain different shiznit
each time \fBstunnel\fR is run. I aint talkin' bout chicken n' gravy biatch.  This is handled automatically
unless tha \fIRNDoverwrite\fR flag is used. Y'all KNOW dat shit, muthafucka!  If you wish ta update dis file
manually, tha \fIopenssl rand\fR command up in recent versionz of \fBOpenSSL\fR,
would be useful.
.PP
Important note: If /dev/urandom be available, \fBOpenSSL\fR often seedz tha \s-1PRNG\s0
with it while checkin tha random state.  On systems wit /dev/urandom
\&\fBOpenSSL\fR is likely ta use it even though it is listed all up in tha straight-up bottom of
the list above.  This is tha behaviour of \fBOpenSSL\fR n' not \fBstunnel\fR.
.SS "\s-1DH PARAMETERS\s0"
.IX Subsection "DH PARAMETERS"
Stunnel 4.40 n' lata gotz nuff hardcoded 2048\-bit \s-1DH\s0 parameters.
.PP
It be also possible ta specify \s-1DH\s0 parametas up in tha certificate file:
.PP
.Vb 1
\&    openssl dhparam 2048 >> stunnel.pem
.Ve
.PP
\&\s-1DH\s0 parameta generation may take nuff muthafuckin minutes.
.SH "FILES"
.IX Header "FILES"
.IP "\fIstunnel.conf\fR" 4
.IX Item "stunnel.conf"
\&\fBstunnel\fR configuration file
.SH "BUGS"
.IX Header "BUGS"
Option \fIexecargs\fR n' Win32 command line do not support quoting.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\fItcpd\fR\|(8)" 4
.IX Item "tcpd"
access control facilitizzle fo' internizzle skillz
.IP "\fIinetd\fR\|(8)" 4
.IX Item "inetd"
internizzle 'super\-server'
.IP "\fIhttp://www.stunnel.org/\fR" 4
.IX Item "http://www.stunnel.org/"
\&\fBstunnel\fR homepage
.IP "\fIhttp://www.openssl.org/\fR" 4
.IX Item "http://www.openssl.org/"
\&\fBOpenSSL\fR project joint
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "MichaÅ Trojnara" 4
.IX Item "MichaÅ Trojnara"
<\fIMichal.Trojnara@mirt.net\fR>
