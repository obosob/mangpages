'\" t
.TH "SYSTEMD\-JOURNALD\&.SERVICE" "8" "" "systemd 208" "systemd-journald.service"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-journald.service, systemd-journald.socket, systemd-journald \- Journal service
.SH "SYNOPSIS"
.PP
systemd\-journald\&.service
.PP
systemd\-journald\&.socket
.PP
/usr/lib/systemd/systemd\-journald
.SH "DESCRIPTION"
.PP
systemd\-journald
is a system steez dat collects n' stores loggin data\&. Well shiiiit, it creates n' maintains structured, indexed journals based on loggin shiznit dat is received from tha kernel, from user processes via tha libc
\fBsyslog\fR(3)
call, from standard input n' standard error of system skillz or via its natizzle API\&. Well shiiiit, it will implicitly collect a shitload of metadata fieldz fo' each log lyrics up in a secure n' unfakeable way\&. Right back up in yo muthafuckin ass. See
\fBsystemd.journal-fields\fR(7)
for mo' shiznit bout tha collected metadata\&.
.PP
Log data collected by tha journal is primarily text\-based but can also include binary data where necessary\& fo' realz. All objects stored up in tha journal can be up ta 2^64\-1 bytes up in size\&.
.PP
By default, tha journal stores log data in
/run/log/journal/\&. Right back up in yo muthafuckin ass. Since
/run/
is volatile, log data is lost at reboot\&. To make tha data persistent, it is sufficient ta create
/var/log/journal/
where
systemd\-journald
will then store tha data\&.
.PP
systemd\-journald
will forward all received log lyrics ta the
\fBAF_UNIX\fR\fBSOCK_DGRAM\fR
socket
/run/systemd/journal/syslog, if it exists, which may be used by Unix syslog daemons ta process tha data further\&.
.PP
See
\fBjournald.conf\fR(5)
for shiznit bout tha configuration of dis service\&.
.SH "SIGNALS"
.PP
SIGUSR1
.RS 4
Request dat journal data from
/run/
is flushed to
/var/
in order ta make it persistent (if dis is enabled)\&. This must be used after
/var/
is mounted, as otherwise log data from
/run
is never flushed to
/var
regardless of tha configuration\&.
.RE
.PP
SIGUSR2
.RS 4
Request immediate rotation of tha journal files\&.
.RE
.SH "KERNEL COMMAND LINE"
.PP
A few configuration parametas from
journald\&.conf
may be overridden on tha kernel command line:
.PP
\fIsystemd\&.journald\&.forward_to_syslog=\fR, \fIsystemd\&.journald\&.forward_to_kmsg=\fR, \fIsystemd\&.journald\&.forward_to_console=\fR
.RS 4
Enables/disablez forwardin of collected log lyrics ta syslog, tha kernel log buffer or tha system console\&.
.sp
See
\fBjournald.conf\fR(5)
for shiznit bout these settings\&.
.RE
.SH "ACCESS CONTROL"
.PP
Journal filez are, by default, owned n' readable by the
"systemd\-journal"
system crew but is not writable\& fo' realz. Addin a user ta dis crew thus enablez her/him ta read tha journal files\&.
.PP
By default, each logged up in user will git her/his own set of journal filez in
/var/log/journal/\&. These filez aint gonna be owned by tha user, however, up in order ta avoid dat tha user can write ta dem directly\&. Instead, file system ACLs is used ta ensure tha user gets read access only\&.
.PP
Additionizzle playas n' crews may be granted access ta journal filez via file system access control lists (ACL)\&. Distributions n' administrators may chizzle ta grant read access ta all thugz of the
"wheel"
and
"adm"
system crews wit a cold-ass lil command like fuckin tha following:
.sp
.if n \{\
.RS 4
.\}
.nf
# setfacl \-Rnm g:wheel:rx,d:g:wheel:rx,g:adm:rx,d:g:adm:rx /var/log/journal/
.fi
.if n \{\
.RE
.\}
.PP
Note dat dis command will update tha ACLs both fo' existin journal filez n' fo' future journal filez pimped up in the
/var/log/journal/
directory\&.
.SH "FILES"
.PP
/etc/systemd/journald\&.conf
.RS 4
Configure
\fBsystemd\-journald\fR
behaviour\&. Right back up in yo muthafuckin ass. See
\fBjournald.conf\fR(5)\&.
.RE
.PP
/run/log/journal/\fImachine\-id\fR/*\&.journal, /run/log/journal/\fImachine\-id\fR/*\&.journal~, /var/log/journal/\fImachine\-id\fR/*\&.journal, /var/log/journal/\fImachine\-id\fR/*\&.journal~
.RS 4
\fBsystemd\-journald\fR
writes entries ta filez in
/run/log/journal/\fImachine\-id\fR/
or
/var/log/journal/\fImachine\-id\fR/
with the
"\&.journal"
suffix\&. If tha daemon is stopped uncleanly, or if tha filez is found ta be corrupted, they is renamed rockin the
"\&.journal~"
suffix, and
\fBsystemd\-journald\fR
starts freestylin ta a freshly smoked up file\&.
/run
is used when
/var/log/journal
is not available, or when
\fBStorage=volatile\fR
is set up in the
\fBjournald.conf\fR(5)
configuration file\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBjournalctl\fR(1),
\fBjournald.conf\fR(5),
\fBsystemd.journal-fields\fR(7),
\fBsd-journal\fR(3),
\fBsetfacl\fR(1),
\fBpydoc systemd\&.journal\fR\&.
