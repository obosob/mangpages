'\" t
.\"     Title: cifs.upcall
.\"    Author: [see tha "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 02/07/2010
.\"    Manual: System Administration tools
.\"    Source: cifs-utils 4.0
.\"  Language: Gangsta
.\"
.TH "CIFS\&.UPCALL" "8" "02/07/2010" "cifs-utils" "System Administration tools"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
cifs.upcall \- Userspace upcall helper fo' Common Internizzle File System (CIFS)
.SH "SYNOPSIS"
.HP \w'\ 'u
cifs\&.upcall [\-\-trust\-dns|\-t] [\-\-version|\-v] [\-\-legacy\-uid|\-l] [--krb5conf=/path/to/krb5.conf|-k /path/to/krb5.conf] [--keytab=/path/to/keytab|-K /path/to/keytab] {keyid}
.SH "DESCRIPTION"
.PP
This tool is part of tha cifs-utils suite\&.
.PP
cifs\&.upcall be a userspace helper program fo' tha linux CIFS client filesystem\&. There is a fuckin shitload of activitizzles dat tha kernel cannot easily do itself\&. This program be a cold-ass lil callout program dat do these thangs fo' tha kernel n' then returns tha result\&.
.PP
cifs\&.upcall is generally intended ta be run when tha kernel calls request\-key(8)
for a particular key type\&. While it can be run directly from tha command\-line, it\z not generally intended ta be run dat way\&.
.SH "OPTIONS"
.PP
\-c
.RS 4
This option is deprecated n' is currently ignored\&.
.RE
.PP
\--krb5conf=/path/to/krb5.conf|-k /path/to/krb5.conf
.RS 4
This option allows administrators ta set a alternate location fo' the
krb5.conf file dat cifs.upcall will use.
.RE
.PP
\--keytab=/path/to/keytab|-K /path/to/keytab
.RS 4
This option allows administrators ta specify a keytab file ta be used. Y'all KNOW dat shit, muthafucka! When a user has no credential cache already established, cifs.upcall will attempt ta use dis keytab ta acquire em. Da default is tha system-wide keytab /etc/krb5.keytab.
.RE
.PP
\-\-trust\-dns|\-t
.RS 4
With krb5 upcalls, tha name used as tha host portion of tha steez principal defaults ta tha hostname portion of tha UNC\&. This option allows tha upcall program ta reverse resolve tha network address of tha server up in order ta git tha hostname\&.
.sp
This is less secure than not trustin DNS\&. When rockin dis option, it\z possible dat a attacker could git control of DNS n' trick tha client tha fuck into mountin a gangbangin' finger-lickin' different server altogether\&. It\z preferable ta instead add server principals ta tha KDC fo' every last muthafuckin possible hostname yo, but dis option exists fo' cases where dat isn\'t possible\&. Da default is ta not trust reverse hostname lookups up in dis fashion\&.
.RE
.PP
\-\-legacy\-uid|\-l
.RS 4
Traditionally, tha kernel has busted only a single uid= parameta ta tha upcall fo' tha SPNEGO upcall that\z used ta determine what tha fuck userz credential cache ta use. This parameta be affected by tha uid= mount option, which also governs tha ballershizzle of filez on tha mount\&.
.sp
Newer kernels bust a cold-ass lil creduid= option as well, which gotz nuff what tha fuck uid it be thinkin straight-up owns tha credentials dat it\z lookin for\& fo' realz. At mount time, dis is generally set ta tha real uid of tha user bustin tha mount. For multisession mounts, itz set ta tha fsuid of tha mount user n' shit. Right back up in yo muthafuckin ass. Set dis option if you want cifs.upcall ta use tha olda uid= parameta instead of tha creduid= parameter\&.
.RE
.PP
\-\-version|\-v
.RS 4
Print version number n' exit\&.
.RE
.SH "CONFIGURATION FOR KEYCTL"
.PP
cifs\&.upcall is designed ta be called from tha kernel via tha request\-key callout program\&. This requires dat request\-key be holla'd at where n' how tha fuck ta booty-call dis program\&. Da current cifs\&.upcall program handlez two different key types:
.PP
cifs\&.spnego
.RS 4
This keytype is fo' retrievin kerberos session keys
.RE
.PP
dns_resolver
.RS 4
This key type is fo' resolvin hostnames tha fuck into IP addresses. Right back up in yo muthafuckin ass. Support fo' dis key type may eventually be deprecated (see below).
.RE
.PP
To make dis program useful fo' CIFS, you\'ll need ta set up entries fo' dem up in request\-key\&.conf(5)\& yo. Here\z a example of a entry fo' each key type:
.sp
.if n \{\
.RS 4
.\}
.nf
#OPERATION  TYPE           D C PROGRAM ARG1 ARG2\&.\&.\&.
#=========  =============  = = ================================
create      cifs\&.spnego    * * /usr/sbin/cifs\&.upcall %k
create      dns_resolver   * * /usr/sbin/cifs\&.upcall %k
.fi
.if n \{\
.RE
.\}
.PP
See
\fBrequest-key.conf\fR(5)
for mo' info on each field\&.

Da keyutils package has also started includin a thugged-out dns_resolver handlin program as well dat is preferred over tha one up in cifs.upcall. If yo ass is rockin a keyutils version equal ta or pimped outa than 1.5, you should use key.dns_resolver ta handle tha dns_resolver keytype instead of cifs.upcall. Right back up in yo muthafuckin ass. See \fBkey.dns_resolver\fR(8) fo' mo' info.
.SH "SEE ALSO"
.PP

\fBrequest-key.conf\fR(5),
\fBmount.cifs\fR(8),
\fBkey.dns_resolver\fR(8)
.SH "AUTHOR"
.PP
Igor Mammedov freestyled tha cifs\&.upcall program\&.
.PP
Jeff Layton authored dis manpage\&.
.PP
Da maintainer of tha Linux CIFS VFS is Steve French\&.
.PP
The
Linux CIFS Mailin list
is tha preferred place ta ask thangs regardin these programs\&.
