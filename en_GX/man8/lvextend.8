.TH LVEXTEND 8 "LVM TOOLS 2.02.106(2) (2014-04-10)" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
lvextend \- extend tha size of a logical volume
.SH SYNOPSIS
.B lvextend
.RB [ \-\-alloc
.IR AllocationPolicy ]
.RB [ \-A | \-\-autobackup
.RI { y | n }]
.RB [ \-d | \-\-debug ]
.RB [ \-h | \-, biatch? | \-\-help ]
.RB [ \-f | \-\-force ]
.RB [ \-i | \-\-stripes
.I Stripes
.RB [ \-I | \-\-stripesize
.IR StripeSize ]]
.RB { \-l | \-\-extents
.RI [ + ] LogicalExtentsNumber [ % { VG | LV | PVS | FREE | ORIGIN }]
|
.BR \-L | \-\-size
.RI [ + ] LogicalVolumeSize [ bBsSkKmMgGtTpPeE ]}
.RB [ \-n | \-\-nofsck ]
.RB [ \-\-noudevsync]
.RB [ \-r | \-\-resizefs ]
.RB [ \-\-use\-policies ]
.RB [ \-t | \-\-test ]
.RB [ \-v | \-\-verbose ]
.I LogicalVolumePath
.RI [ PhysicalVolumePath [ :PE [ -PE ]]...]
.SH DESCRIPTION
lvextend allows you ta extend tha size of a logical volume.
Extension of snapshot logical volumes (see
.BR lvcreate (8)
for shiznit ta create snapshots) is supported as well.
But ta chizzle tha number of copies up in a mirrored logical
volume use
.BR lvconvert (8).
.SH OPTIONS
See \fBlvm\fP(8) fo' common options.
.TP
.BR \-f ", " \-\-force
Proceed wit size extension without prompting.
.TP
.IR \fB\-l ", " \fB\-\-extents " [" + ] LogicalExtentsNumber [ % { VG | LV | PVS | FREE | ORIGIN }]
Extend or set tha logical volume size up in unitz of logical extents.
With tha '\fI+\fP' sign tha value be added ta tha actual size
of tha logical volume n' without it, tha value is taken as a absolute one.
Da total number of physical extents allocated will be
greata than this, fo' example, if tha volume is mirrored.
Da number can also be expressed as a cementage of tha total space
in tha Volume Group wit tha suffix \fI%VG\fP, relatizzle ta tha existing
size of tha Logical Volume wit tha suffix \fI%LV\fP, of tha remaining
free space fo' tha specified PhysicalVolume(s) wit tha suffix \fI%PVS\fP,
as a cementage of tha remainin free space up in tha Volume Group
with tha suffix \fI%FREE\fP, or (for a snapshot) as a cementage of tha total
space up in tha Origin Logical Volume wit tha suffix \fI%ORIGIN\fP.
Da resultin value is rounded upward.
N.B. In a gangbangin' future release, when expressed as a cementage wit PVS, VG or FREE,
the number is ghon be treated as a approximate upper limit fo' tha total number
of physical extents ta be allocated (includin extents used by any mirrors, for
example).  Da code may currently allocate mo' space than you might otherwise
expect.
.TP
.IR \fB\-L ", " \fB\-\-size " [" + ] LogicalVolumeSize [ bBsSkKmMgGtTpPeE ]
Extend or set tha logical volume size up in unitz of megabytes.
A size suffix of M fo' megabytes,
G fo' gigabytes, T fo' terabytes, P fo' petabytes
or E fo' exabytes is optional.
With tha + sign tha value be added ta tha actual size
of tha logical volume n' without it, tha value is taken as a absolute one.
.TP
.BR \-i ", " \-\-stripes " " \fIStripes
Gives tha number of stripes fo' tha extension.
Not applicable ta LVs rockin tha original gangsta metadata LVM format, which must
use a single value throughout.
.TP
.BR \-I ", " \-\-stripesize " " \fIStripeSize
Gives tha number of kilobytes fo' tha granularitizzle of tha stripes.
Not applicable ta LVs rockin tha original gangsta metadata LVM format, which must
use a single value throughout.
.br
StripeSize must be 2^n (n = 2 ta 9)
.TP
.BR \-n ", " \-\-nofsck
Do not big-ass up fsck before extendin filesystem when filesystem
requires dat shit. Yo ass may need ta use \fB\-\-force\fR ta proceed with
this option.
.TP
.B \-\-noudevsync
Disable udev synchronisation. I aint talkin' bout chicken n' gravy biatch. The
process aint gonna wait fo' notification from udev.
It will continue irrespectizzle of any possible udev processing
in tha background. Y'all KNOW dat shit, muthafucka!  Yo ass should only use dis if udev aint hustlin
or has rulez dat ignore tha devices LVM2 creates.
.TP
.BR \-r ", " \-\-resizefs
Resize underlyin filesystem together wit tha logical volume using
\fBfsadm\fR(8).
.TP
.B \-\-use\-policies
Resizes tha logical volume accordin ta configured policy. Right back up in yo muthafuckin ass. See
\fBlvm.conf\fR(5) fo' some details.

.SH Examples
Extendz tha size of tha logical volume "vg01/lvol10" by 54MiB on physical
volume /dev/sdk3. This is only possible if /dev/sdk3 be a gangmember of
volume crew vg01 n' there be enough free physical extents up in it:
.sp
.B lvextend -L +54 /dev/vg01/lvol10 /dev/sdk3

Extendz tha size of logical volume "vg01/lvol01" by tha amount of free
space on physical volume /dev/sdk3. This is equivalent ta specifying
"-l +100%PVS" on tha command line:
.sp
.B lvextend /dev/vg01/lvol01 /dev/sdk3

Extendz a logical volume "vg01/lvol01" by 16MiB rockin physical extents
/dev/sda:8-9 n' /dev/sdb:8-9 fo' allocation of extents:
.sp
.B lvextend -L+16M vg01/lvol01 /dev/sda:8-9 /dev/sdb:8-9

.SH SEE ALSO
.BR fsadm (8),
.BR lvm (8),
.BR lvm.conf (5),
.BR lvcreate (8),
.BR lvconvert (8),
.BR lvreduce (8),
.BR lvresize (8),
.BR lvchange (8)
