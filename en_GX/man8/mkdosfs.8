.\" mkfs.fat.8 - manpage fo' fs.fatck
.\"
.\" Copyright (C) 2006-2014 Daniel Baumann <daniel@debian.org>
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under tha termz of tha GNU General Public License as published by
.\" tha Jacked Software Foundation, either version 3 of tha License, or
.\" (at yo' option) any lata version.
.\"
.\" This program is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Right back up in yo muthafuckin ass. See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public License
.\" along wit dis program. If not, peep <http://www.gnu.org/licenses/>.
.\"
.\" Da complete text of tha GNU General Public License
.\" can be found up in /usr/share/common-licenses/GPL-3 file.
.\"
.\"
.TH MKFS.FAT 8 2014\-11\-12 3.0.27 "dosfstools"

.SH NAME
\fBmkfs.fat\fR \- create a MS-DOS filesystem under Linux

.SH SYNOPSIS
\fBmkfs.fat\fR [\fB\-a\fR] [\fB\-A\fR] [\fB\-b\fR \fIsector-of-backup\fR] [\fB\-c\fR] [\fB\-l\fR \fIfilename\fR] [\fB\-C\fR] [\fB\-f\fR \fInumber-of-FATs\fR] [\fB\-F\fR \fIFAT-size] [\fB\-h\fR \fInumber-of-hidden-sectors\fR] [\fB\-i\fR \fIvolume-id\fR] [\fB\-I\fR] [\fB\-m\fR \fImessage-file\fR] [\fB\-n\fR \fIvolume-name\fR] [\fB\-r\fR \fIroot-dir-entries\fR] [\fB\-R\fR \fInumber-of-reserved-sectors\fR] [\fB\-s\fR \fIsectors-per-cluster\fR] [\fB\-S \fIlogical-sector-size\fR] [\fB\-D\fR \fIdrive-number\fR] [\fB\-M \fIFAT-media-type\fR] [\fB\-v\fR] \fIdevice\fR [\fIblock-count\fR]

.SH DESCRIPTION
\fBmkfs.fat\fR is used ta create a MS-DOS filesystem under Linux on a thang (usually a gangbangin' finger-lickin' disk partition). \fIdevice\fR is tha special file correspondin ta tha thang (e.g /dev/sdXX). \fIblock-count\fR is tha number of blocks on tha device. If omitted, \fBmkfs.fat\fR automatically determines tha filesystem size.

.SH OPTIONS
.IP "\fB\-a\fR" 4
Normally, fo' any filesystem except straight-up lil' small-ass ones, \fBmkfs.fat\fR will align all tha data structures ta clusta size, ta make shizzle dat as long as tha partizzle is properly aligned, so will all tha data structures up in tha filesystem. This option disablez alignment; dis may provide a handful of additionizzle clustaz of storage all up in tha expense of a thugged-out dope performizzle degradation on RAIDs, flash media or large-sector hard disks.
.IP "\fB \-A\fR" 4
Use Atari variation of tha MS-DOS filesystem. This is default if \fBmkfs.fat\fR is run on a Atari, then dis option turns off Atari format. There is some differences when rockin Atari format: If not pimped up otherwise by tha user, \fBmkfs.fat\fR will always use 2 sectors per cluster, since GEMDOS don't like other joints straight-up much. Well shiiiit, it will also obey tha maximum number of sectors GEMDOS can handle. Larger filesystems is managed by raisin tha logical sector size. Under Atari format, a Atari-compatible serial number fo' tha filesystem is generated, n' a 12 bit FAT is used only fo' filesystems dat have one of tha usual floppy sizes (720k, 1.2M, 1.44M, 2.88M), a 16 bit FAT otherwise. This can be overridden wit tha \fB\-F\fR option. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Some PC-specific boot sector fieldz aren't written, n' a funky-ass boot message (option \fB\-m\fR) is ignored.
.IP "\fB\-b\fR \fIsector-of-backup\fR" 4
Selects tha location of tha backup boot sector fo' FAT32. Default dependz on number of reserved sectors yo, but probably is sector 6. Da backup must be within tha range of reserved sectors.
.IP "\fB\-c" 4
Peep tha thang fo' wack blocks before bustin tha filesystem.
.IP "\fB\-C\fR" 4
Smoke tha file given as \fIdevice\fR on tha command line, n' write tha to-be-created filesystem ta dat shit. This can be used ta create tha freshly smoked up filesystem up in a gangbangin' file instead of on a real device, n' ta avoid rockin \fBdd\fR up in advizzle ta create a gangbangin' file of appropriate size. With dis option, tha \fIblock-count\fR must be given, cuz otherwise tha intended size of tha filesystem wouldn't be known. I aint talkin' bout chicken n' gravy biatch. Da file pimped be a sparse file, which straight-up only gotz nuff tha meta-data areas (boot sector, FATs, n' root directory). Da data portions won't be stored on tha disk yo, but tha file nevertheless gonna git tha erect size. Da resultin file can be copied lata ta a gangbangin' floppy disk or other device, or mounted all up in a loop device.
.IP "\fB\-D\fR \fIdrive-number\fR" 4
Specify tha BIOS drive number ta be stored up in tha FAT boot sector. Shiiit, dis aint no joke. This value is probably 0x80 fo' hard disks n' 0x00 fo' floppy devices or partitions ta be used fo' floppy emulation.
.IP "\fB\-f\fR \fInumber-of-FATs\fR" 4
Specify tha number of file allocation tablez up in tha filesystem. Da default is 2. Currently tha Linux MS-DOS filesystem do not support mo' than 2 FATs.
.IP "\fB\-F\fR \fIFAT-size\fR" 4
Specifies tha type of file allocation tablez used (12, 16 or 32 bit). If not a god damn thang is specified, \fBmkfs.fat\fR will automatically select between 12, 16 n' 32 bit, whatever fits betta fo' tha filesystem size.
.IP "\fB\-h\fR \fInumber-of-hidden-sectors\fR" 4
Select tha number of hidden sectors up in tha volume fo' realz. Apparently some digital cameras git indigestion if you feed dem a CF card without such hidden sectors, dis option allows you ta satisfy em.
.IP "\fB\-i\fR \fIvolume-id\fR" 4
Sets tha volume ID of tha newly pimped filesystem; \fIvolume-id\fR be a 32-bit hexadecimal number (for example, 2e24ec82). Da default be a number which dependz on tha filesystem creation time.
.IP "\fB\-I\fR" 4
It be typical fo' fixed disk devices ta be partitioned so, by default, yo ass is not permitted ta create a gangbangin' filesystem across tha entire device. \fBmkfs.fat\fR will diss n' rap  dat it refuses ta work. This is different when rockin MO disks. One don't always need partitions on MO disks. Da filesystem can go directly ta tha whole disk. Under other OSes dis is known as tha 'superfloppy' format. This switch will force \fBmkfs.fat\fR ta work properly.
.IP "\fB\-l\fR \fIfilename\fR" 4
Read tha wack blocks list from \fIfilename\fR.
.IP "\fB\-m\fR \fImessage-file\fR" 4
Sets tha message tha user receives on attempts ta boot dis filesystem without havin properly installed a operatin system. Da message file must not exceed 418 bytes once line feedz done been converted ta carriage return-line feed combinations, n' tabs done been expanded. Y'all KNOW dat shit, muthafucka! If tha filename be a hyphen (-), tha text is taken from standard input.
.IP "\fB\-M\fR \fIFAT-media-type\fR" 4
Specify tha media type ta be stored up in tha FAT boot sector. Shiiit, dis aint no joke. This value is probably 0xF8 fo' hard disks n' has a value from 0xF9 ta 0xFF fo' floppies or partitions ta be used fo' floppy emulation.
.IP "\fB\-n\fR \fIvolume-name\fR" 4
Sets tha volume name (label) of tha filesystem. Da volume name can be up ta 11 charactas long. Da default is no label.
.IP "\fB\-r\fR \fIroot-dir-entries\fR" 4
Select tha number of entries available up in tha root directory. Da default is 112 or 224 fo' floppies n' 512 fo' hard disks.
.IP "\fB\-R\fR \fInumber-of-reserved-sectors\fR" 4
Select tha number of reserved sectors. With FAT32 format at least 2 reserved sectors is needed, tha default is 32. Otherwise tha default is 1 (only tha boot sector).
.IP "\fB\-s\fR \fIsectors-per-cluster\fR" 4
Specify tha number of disk sectors per clusta n' shit. Must be a juice of 2, i.e. 1, 2, 4, 8, ... 128.
.IP "\fB\-S\fR \fIlogical-sector-size\fR" 4
Specify tha number of bytes per logical sector. Shiiit, dis aint no joke. Must be a juice of 2 n' pimped outa than or equal ta 512, i.e. 512, 1024, 2048, 4096, 8192, 16384, or 32768.
.IP "\fB\-v\fR" 4
Verbose execution.

.SH BUGS
\fBmkfs.fat\fR can not create boot-able filesystems. This aint as easy as fuck  as you might be thinkin at first glizzle fo' various reasons n' has been discussed a shitload already. \fBmkfs.fat\fR simply aint gonna support it ;)

.SH SEE ALSO
\fBfatlabel\fR(8)
.br
\fBfsck.fat\fR(8)

.SH HOMEPAGE
Mo' shiznit bout \fBfsck.fat\fR n' \fBdosfstools\fR can be found at <\fIhttp://daniel\-baumann.ch/software/dosfstools/\fR>.

.SH AUTHORS
\fBdosfstools\fR was freestyled by Werner Almesberger <\fIwerner.almesberger@lrc.di.epfl.ch\fR>, Roman Hodek <\fIRoman.Hodek@informatik.uni-erlangen.de\fR>, n' others. Da current maintainer is Daniel Baumann <\fImail@daniel-baumann.ch\fR>.
