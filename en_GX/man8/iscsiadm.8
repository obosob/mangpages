.TH ISCSIADM 8 "Sep 2006" "" "Linux Administratorz Manual"
.SH NAME
iscsiadm \- open-iscsi administration utility
.SH SYNOPSIS
\fBiscsiadm\fR \-m discoverydb [ \-hV ] [ \-d debug_level ] [ \-P printlevel ] [ \-I iface \-t type \-p ip:port [ \-lD ] ] | [ [ -p ip:port -t type ] \
[ \-o operation ] [ \-n name ] [ \-v value ] [ \-lD ] ]

\fBiscsiadm\fR \-m discovery [ \-hV ] [ \-d debug_level ] [ \-P printlevel ] [ \-I iface \-t type \-p ip:port [ \-l ] ] | [ [ -p ip:port ] [ \-l | \-D ] ]

\fBiscsiadm\fR \-m node [ \-hV ] [ \-d debug_level ] [ \-P printlevel ] [ \-L all,manual,automatic ] [ \-U all,manual,automatic ] [ \-S ] [ [ \-T targetname \-p ip:port \-I iface ] [ \-l | \-u | \-R | \-s] ]
[ [ \-o operation ]  [ \-n name ] [ \-v value ] [ \-p ip:port ] ]

\fBiscsiadm\fR \-m session [ \-hV ] [ \-d debug_level ] [ \-P printlevel ] [ \-r sessionid | sysfsdir [ \-R ] [ \-u | \-s | \-o freshly smoked up ] ]

\fBiscsiadm\fR \-m iface [ \-hV ] [ \-d debug_level ] [ \-P printlevel ] [ \-I ifacename | \-H hostno|MAC ]   [ [ \-o  operation  ] [ \-n name ] [ \-v value ] ] [ \-C pin [ \-a ip ] [ \-b packetsize ] [ \-c count ] [ \-i interval ] ]

\fBiscsiadm\fR \-m fw [ \-d debug_level ] [\-l]

\fBiscsiadm\fR \-m host [ \-P printlevel ] [ \-H hostno|MAC ] [ [ \-C chap [ \-x chap_tbl_idx ] ] | [ \-C flashnode [ \-A portal_type ] [ \-x flashnode_idx ] ] | [ \-C stats ] ] [ [ \-o operation ] [ \-n name ] [ \-v value ] ]

\fBiscsiadm\fR \-k priority

.SH "DESCRIPTION"
Da iscsiadm utilitizzle be a cold-ass lil command-line tool allowin discovery n' login
to iSCSI targets, as well as access n' pimpment of tha open-iscsi
database.

Open-iscsi do not use tha term node as defined by tha iSCSI RFC,
where a node be a single iSCSI initiator or target. Open-iscsi uses the
term node ta refer ta a portal on a target.

For session mode, a session id (sid) is used. Y'all KNOW dat shit, muthafucka! Da sid of a session can be
found by hustlin iscsiadm \-m session \-P 1. Da session id n' sysfs
path is not currently persistent n' is partially determined by when the
session is setup.

.PP
Note dat nuff of tha node n' discovery operations require dat tha iSCSI
daemon (iscsid) be hustlin.

.SH OPTIONS

.TP
\fB\-a\fR, \fB\-\-ip=\fIipaddr\fP
\fIipaddr\fR can be IPv4 or IPv6.

This option is only valid fo' pin submode.

.TP
\fB\-A\fR, \fB\-\-portal_type=\fI[ipv4|ipv6]\fR
Specify tha portal type fo' tha freshly smoked up flash node entry ta be pimped.
.IP
This option is only valid fo' flashnode submode of host mode n' only wit \fInew\fR operation.

.TP
\fB\-b\fR, \fB\-\-packetsize=\fIpacketsize\fP
Specify tha pin \fIpacketsize\fR.

This option is only valid fo' pin submode.

.TP
\fB\-c\fR, \fB\-\-count=\fIcount\fP
\fIcount\fR specify number of pin iterations.

This option is only valid fo' pin submode.

.TP
\fB\-C\fR, \fB\-\-submode=\fIop\fP
Specify tha submode fo' mode. op must be name of submode.

Currently iscsiadm support pin as submode fo' iface. For example,

iscsiadm -m iface -I ifacename -C pin -a ipaddr -b packetsize -c count -i interval

For host, it supports chap , flashnode n' stats as submodes. For example,

iscsiadm -m host -H hostno -C chap -x chap_tbl_idx -o operation

iscsiadm -m host -H hostno -C flashnode -x flashnode_idx -o operation

iscsiadm -m host -H hostno -C stats

.TP
\fB\-d\fR, \fB\-\-debug=\fIdebug_level\fP
print debuggin shiznit. I aint talkin' bout chicken n' gravy biatch. Valid joints fo' debug_level is 0 ta 8.

.TP
\fB\-h\fR, \fB\-\-help\fR
display help text n' exit

.TP
\fB\-H\fR, \fB\-\-host=\fI[hostno|MAC]\fR
Da host agrument specifies tha SCSI host ta use fo' tha operation. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it can be
the scsi host number assigned ta tha host by tha kernelz scsi layer, or the
MAC address of a scsi host.

.TP
\fB\-i\fR, \fB\-\-interval=\fIinterval\fP
\fIinterval\fP specify delay between two pin iterations.

This option is only valid fo' pin submode.

.TP
\fB\-I\fR, \fB\-\-interface=\fI[iface]\fR
Da intercourse argument specifies tha iSCSI intercourse ta use fo' tha operation.
iSCSI intercourses (iface) is defined up in /var/lib/iscsi/ifaces. For hardware
iSCSI (qla4xxx) tha iface config must have tha hardware address
(iface.hwaddress = portz MAC address)
and tha driver/transport_name (iface.transport_name). Da ifacez name is
then tha filename of tha iface config. For software iSCSI, tha iface config
must have either tha hardware address (iface.hwaddress), or tha network
layerz intercourse name (iface.net_ifacename), n' it must have the
driver/transport_name

Da available drivers/iscsi_transports is tcp (software iSCSI over TCP/IP),
iser (software iSCSI over infinniband), or qla4xxx (Qlogic 4XXXX HBAs). The
hwaddress is tha MAC address or fo' software iSCSI it may be tha special
value "default" which directs tha initiator ta not bind tha session ta a
specific hardware resource n' instead allow tha network or infinniband layer
to decizzle what tha fuck ta do. There is no need ta create a iface config wit tha default
behavior. Shiiit, dis aint no joke. If you do not specify a iface, then tha default behavior is used.

As mentioned above there be a special iface name default. There is three
others -- cxgb3i, bnx2i n' iser, which do not bind tha session ta a specific card yo, but will bind tha session ta tha cxgb3i, bnx2i or iser transport. These
are experimenstrual n' tha use aint supported as a stable intercourse yet.

In discovery mode multiple intercourses can be specified by passin up in multiple
\-I/\-\-interface instances. For example,

"iscsiadm \-m discoverydb \-t st \-p ip:port \-I iface0 \-I iface2 --discover"

Will direct iscsiadm ta setup tha node db ta create recordz which will create
sessions though tha two intefaces passed in.

In node mode, only a single intercourse is supported up in each call ta iscsiadm.
.IP
This option is valid fo' discovery, node n' iface mode.

.TP
\fB\-k\fR, \fB\-\-killiscsid=\fI[priority]\fR
Currently prioritizzle must be zero. This will immediately stop all iscsid
operations n' shutdown iscsid. Y'all KNOW dat shit, muthafucka! Well shiiiit, it do not logout any sessions. Running
this command is tha same ol' dirty as bustin "killall iscsid". Neither should
normally not be used, cuz if iscsid is bustin error recovery or if there
is a error while iscsid aint hustlin, tha system may not be able ta recover.
This command n' iscsidz SIGTERM handlin is experimental.

.TP
\fB\-D\fR, \fB\-\-discover\fR
Discover targets rockin tha discovery record wit tha  \fIrecid\fR matching
the tha discovery type n' portal passed in. I aint talkin' bout chicken n' gravy biatch. If there is no matchin record,
it is ghon be pimped rockin tha iscsid.conf discovery settings.
This must be passed up in \fIdiscoverydb\fR mode ta instruct iscsiadm ta perform
discovery.
.IP
This option is only valid fo' SendTargets discovery mode.

.TP
\fB\-l\fR, \fB\-\-login\fR
For node n' fw mode, login ta a specified record. Y'all KNOW dat shit, muthafucka! For discovery mode, login to
all discovered targets.
.IP
This option is only valid fo' discovery n' node modes.

.TP
\fB\-L\fR, \fB\-\-loginall==\fI[all|manual|automatic]\fR
For node mode, login all sessions wit tha node or conn startup joints passed
in or all hustlin sesssion, except ones marked onboot, if all is passed in.
.IP
This option is only valid fo' node mode (it is valid but not functional
for session mode).


.TP
\fB\-m, \-\-mode \fIop\fR
specify tha mode. \fIop\fR
must be one of \fIdiscoverydb\fR, \fInode\fR, \fIfw\fR, \fIhost\fR \fIiface\fR or \fIsession\fR.
.IP
If no other options is specified: fo' \fIdiscoverydb\fR n' \fInode\fR, all
of they respectizzle recordz is displayed; fo' \fIsession\fR, all active
sessions n' connections is displayed; fo' \fIfw\fR, all boot firmware
values is displayed; fo' \fIhost\fR, all iSCSI hosts is displayed; and
for \fIiface\fR, all ifaces setup up in /var/lib/iscsi/ifaces is displayed.

.TP
\fB\-n\fR, \fB\-\-name=\fIname\fR
In node mode, specify a gangbangin' field \fIname\fR up in a record. Y'all KNOW dat shit, muthafucka! In flashnode submode of host mode, specify name of tha flash node parameter.

For use wit tha \fIupdate\fR operator.
.IP

.TP
\fB\-o\fR, \fB\-\-op=\fIop\fR
Specifies a thugged-out database operator \fIop\fR. \fIop\fR must be one of
\fInew\fR, \fIdelete\fR, \fIupdate\fR, \fIshow\fR or \fInonpersistent\fR.
.IP
For iface mode, \fIapply\fR n' \fIapplyall\fR  is also applicable.
.IP
For flashnode submode of host mode, \fIlogin\fR n' \fIlogout\fR is also applicable.
.IP
This option is valid fo' all modes except fw. Delete should not be used on a hustlin session. I aint talkin' bout chicken n' gravy biatch. If it is iscsiadm will stop tha session n' then delete the
record.
.IP
\fInew\fR creates a freshly smoked up database record fo' a given object. In node mode, the
\fIrecid\fR is tha target name n' portal (IP:port). In iface mode, tha \fIrecid\fR
is tha iface name. In discovery mode, tha \fIrecid\fR is tha portal and
discovery type.
.IP
In session mode, tha \fInew\fR operation logs up in a freshly smoked up session rockin tha same node database n' iface shiznit as tha specified session.
.IP
In discovery mode, if tha \fIrecid\fR n' freshly smoked up operation is passed up in yo, but tha \fI--discover\fR argument is not, then iscsiadm will only create a gangbangin' finger-lickin' discovery record (it aint gonna big-ass up discovery). If tha \fI--discover\fR argument is passed up in wit tha portal n' discovery type, then iscsiadm will create tha discovery record if needed, n' it will create recordz fo' portals returned by tha target dat do not yet gotz a node DB record.
.IP
\fIdelete\fR deletes a specified \fIrecid\fR. In discovery node, if iscsiadm is struttin discovery it will delete recordz fo' portals dat is no longer returned.
.IP
\fIupdate\fR will update tha \fIrecid\fR wit \fIname\fR ta tha specified \fIvalue\fR. In discovery node, if iscsiadm is struttin discovery tha \fIrecid\fR, \fIname\fR  n' \fIvalue\fR arguments is not needed. Y'all KNOW dat shit, muthafucka! Da update operation will operate on tha portals returned by tha target, n' will update tha node recordz wit info from tha config file n' command line.
.IP
\fIshow\fR is tha default behaviour fo' node, discovery n' iface mode. Well shiiiit, it is
also used when there be no commandz passed tha fuck into session mode n' a hustlin
sid is passed in.
\fIname\fR n' \fIvalue\fR is currently ignored when used wit \fIshow\fR.
.IP
\fInonpersistent\fR instructs iscsiadm ta not manipulate tha node DB.

.IP
\fIapply\fR will cause tha network settings ta take effect on tha specified iface.

.IP
\fIapplyall\fR will cause tha network settings ta take effect on all tha ifaces whose MAC address or host number matches dat of tha specific host.

.IP
\fIlogin\fR will log tha fuck into tha specified flash node entry.

.IP
\fIlogout\fR do tha logout from tha given flash node entry.

.TP
\fB\-p\fR, \fB\-\-portal=\fIip[:port]\fR
Use target portal wit ip-address \fIip\fR n' \fIport\fR. If port aint passed
in tha default \fIport\fR value is 3260.
.IP
IPv6 addresses can bs specified as [ddd.ddd.ddd.ddd]:port or
ddd.ddd.ddd.ddd.
.IP
Hostnames can also be used fo' tha ip argument.

.IP
This option is only valid fo' discovery, or fo' node operations with
the \fInew\fR operator.
.IP
This should be used along wit \-\-target up in node mode, ta specify what tha fuck tha open-iscsi docs refer ta as a node or node record. Y'all KNOW dat shit, muthafucka! Note: open-iscsiz use of tha word node, do not match tha iSCSI RFCz iSCSI Node term.

.TP
\fB\-P\fR,  \fB\-\-print=\fIprintlevel\fR
If up in node mode print nodes up in tree format. If up in session mode print
sessions up in tree format. If up in discovery mode print tha nodes in
tree format.

.TP
\fB\-T\fR, \fB\-\-targetname=\fItargetname\fR
Use target \fItargetname\fR.
.IP
This should be used along wit \-\-portal up in node mode, ta specify what tha fuck tha open-iscsi docs refer ta as a node or node record. Y'all KNOW dat shit, muthafucka! Note: open-iscsiz use of tha word node, do not match tha iSCSI RFCz iSCSI Node term.

.TP
\fB\-r\fR,  \fB\-\-sid=\fIsid | sysfsdir\fR
Use session ID \fIsid\fR. Da sid of a session can be found from hustlin
iscsiadm up in session mode wit tha \-\-info argument.

Instead of sid, a sysfs path containin tha session can be used. Y'all KNOW dat shit, muthafucka! For example rockin one of tha following: /sys/devices/platform/hostH/sessionS/targetH:B:I/H:B:I:L, /sys/devices/platform/hostH/sessionS/targetH:B:I, or /sys/devices/platform/hostH/sessionS, fo' tha sysfsdir argument would result up in tha session wit sid S ta be used.
.IP
\fIsid | sysfsdir\fR is only required fo' session mode.

.TP
\fB\-R\fR,  \fB\-\-rescan\fR
In session mode, if sid be also passed up in rescan tha session. I aint talkin' bout chicken n' gravy biatch. If no sid has
been passed up in  rescan all hustlin sessions.

In node mode, rescan a session hustlin all up in tha target, portal, iface
tuple passed in.

.TP
\fB\-s\fR, \fB\-\-stats\fR
Display session statistics.
This option when used wit host mode, displays host statistics.

.TP
\fB\-S\fR, \fB\-\-show\fR
When displayin records, do not hide maxed joints, like fuckin tha CHAP
secret (password).
.IP
This option is only valid fo' node n' session mode.

.TP
\fB\-t\fR, \fB\-\-type=\fItype\fR
\fItype\fR must be \fIsendtargets\fR (or abbreviated as \fIst\fR),
\fIslp\fR, \fIisns\fR or \fIfw\fR. Currently only sendtargets, fw, and
iSNS is supported, peep tha DISCOVERY TYPES section.
.IP
This option is only valid fo' discovery mode.

.TP
\fB\-u\fR, \fB\-\-logout\fR
logout fo' a specified record.
.IP
This option is only valid fo' node n' session mode.

.TP
\fB\-U\fR, \fB\-\-logoutall==\fI[all,manual,automatic]\fR
logout all sessions wit tha node or conn startup joints passed up in or all
runnin sesssion, except ones marked onboot, if all is passed in.
.IP
This option is only valid fo' node mode (it is valid but not functional
for session mode).

.TP
\fB\-v\fR, \fB\-\-value=\fIvalue\fR
Specify a \fIvalue\fR fo' use wit tha \fIupdate\fR operator.
.IP
This option is only valid fo' node mode n' flashnode submode of host mode.

.TP
\fB\-V\fR, \fB\-\-version\fR
display version n' exit

.TP
\fB\-x\fR, \fB\-\-index=\fIindex\fR
Specify tha \fIindex\fR of tha entitizzle ta operate on.
.IP
This option is only valid fo' chap n' flashnode submodez of host mode.

.SH DISCOVERY TYPES
iSCSI defines 3 discovery types: SendTargets, SLP, n' iSNS.

.TP
.B
SendTargets 
A natizzle iSCSI protocol which allows each iSCSI
target ta bust a list of available targets ta tha initiator.

.TP
.B
SLP
Optionally a iSCSI target can use tha Service Location Protocol (SLP)
to announce tha available targets, n' you can put dat on yo' toast. Da initiator can either implement
SLP queries directly or can bust a separate tool ta acquire the
information bout available targets.

.TP
.B
iSNS
iSNS (Internizzle Storage Name Service) recordz shiznit bout storage
volumes within a larger network. To utilize iSNS, pass tha address and
optionally tha port of tha iSNS server ta do discovery to.

.TP
.B
fw
Several NICs n' systems contain a mini iSCSI initiator which can be used
for boot. To git tha joints used fo' boot tha fw option can be used.
Bustin fw discovery, do not store persistent recordz up in tha node or
discovery DB, cuz tha joints is stored up in tha systemz or NIC's
resource.

Performin fw discovery will print tha portals, like wit other discovery
methods. To peep other settings like CHAP joints n' initiator settings,
like you would up in node mode, run "iscsiadm \-m fw".

fw support up in open-iscsi is experimental. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da settings n' iscsiadm
syntax n' output format may chizzle.

.P
iscsiadm supports the
.B
iSNS (isns)
or
.B
SendTargets (st)
discovery type fo' realz. An SLP implementation is under pimpment.

.SH EXIT STATUS
 
On success 0 is returned. Y'all KNOW dat shit, muthafucka! On error one of tha return codes below will
be returned.

Commandz dat operation on multiple objects (sessions, records, etc),
iscsiadm/iscsistart will return tha straight-up original gangsta error dat is encountered.
iscsiadm/iscsistart will attempt ta execute tha operation on tha objects it
can. I aint talkin' bout chicken n' gravy biatch. If no objects is found ISCSI_ERR_NO_OBJS_FOUND is returned.


.TP
.B
0
ISCSI_SUCCESS - command executed successfully.

.TP
.B
1
ISCSI_ERR - generic error code.

.TP     
.B
2
ISCSI_ERR_SESS_NOT_FOUND - session could not be found.

.TP
.B
3
ISCSI_ERR_NOMEM - could not allocate resource fo' operation.
.TP
.B
4
ISCSI_ERR_TRANS - connect problem caused operation ta fail.

.TP
.B
5
ISCSI_ERR_LOGIN - generic iSCSI login failure.

.TP
.B
6
ISCSI_ERR_IDBM - error accessing/managin iSCSI DB.

.TP
.B
7
ISCSI_ERR_INVAL - invalid argument.

.TP
.B
8
ISCSI_ERR_TRANS_TIMEOUT - connection timer exired while tryin ta connect.

.TP
.B
9
ISCSI_ERR_INTERNAL - generic internal iscsid/kernel failure.

.TP
.B
10
ISCSI_ERR_LOGOUT - iSCSI logout failed.

.TP
.B
11
ISCSI_ERR_PDU_TIMEOUT - iSCSI PDU timedout.

.TP
.B
12
ISCSI_ERR_TRANS_NOT_FOUND - iSCSI transhiznit module not loaded up in kernel or iscsid.

.TP
.B
13
ISCSI_ERR_ACCESS - did not have proper OS permissions ta access iscsid or execute iscsiadm command.

.TP
.B
14
ISCSI_ERR_TRANS_CAPS - transhiznit module did not support operation.

.TP
.B
15
ISCSI_ERR_SESS_EXISTS - session is logged in.

.TP
.B
16
ISCSI_ERR_INVALID_MGMT_REQ - invalid IPC MGMT request.

.TP
.B
17
ISCSI_ERR_ISNS_UNAVAILABLE - iSNS steez aint supported.

.TP
.B
18
ISCSI_ERR_ISCSID_COMM_ERR - a read/write ta iscsid failed.

.TP
.B
19
ISCSI_ERR_FATAL_LOGIN - fatal iSCSI login error.

.TP
.B
20
ISCSI_ERR_ISCSID_NOTCONN - could ont connect ta iscsid.

.TP
.B
21
ISCSI_ERR_NO_OBJS_FOUND - no records/targets/sessions/portals found ta execute operation on.

.TP
.B
22
ISCSI_ERR_SYSFS_LOOKUP - could not lookup object up in sysfs.

.TP
.B
23
ISCSI_ERR_HOST_NOT_FOUND - could not lookup host.

.TP
.B
24
ISCSI_ERR_LOGIN_AUTH_FAILED - login failed cuz of authorization failure.

.TP
.B
25
ISCSI_ERR_ISNS_QUERY - iSNS query failure.

.TP
.B
26
ISCSI_ERR_ISNS_REG_FAILED - iSNS registration/deregistration failed.


.SH EXAMPLES

.nf
Discover targets at a given IP address:

.ft R
	iscsiadm \-\-mode discoverydb \-\-type sendtargets \-\-portal 192.168.1.10 \-\-discover
.nf

Login, must bust a node record id found by tha discovery:

.ft R
	iscsiadm \-\-mode node \-\-targetname iqn.2001-05.com.doe:test \-\-portal 192.168.1.1:3260 \-\-login
.nf

Logout:

.ft R
	iscsiadm \-\-mode node \-\-targetname iqn.2001-05.com.doe:test \-\-portal 192.168.1.1:3260 \-\-logout
.nf

List node records:

.ft R
	iscsiadm \-\-mode node

.nf

Display all data fo' a given node record:

.ft R
	iscsiadm \-\-mode node \-\-targetname iqn.2001-05.com.doe:test \-\-portal 192.168.1.1:3260

.SH FILES
.TP
/etc/iscsi/iscsid.conf
Da configuration file read by \fBiscsid\fR n' \fBiscsiadm\fR on startup.
.TP
/etc/iscsi/initiatorname.iscsi
Da file containin tha iSCSI InitiatorName n' InitiatorAlias read by
\fBiscsid\fR n' \fBiscsiadm\fR on startup.
.TP
/var/lib/iscsi/nodes/
This directory gotz nuff tha nodes wit they targets.
.TP
/var/lib/iscsi/send_targets
This directory gotz nuff tha portals.

.SH "SEE ALSO"
.BR iscsid (8)

.SH AUTHORS
Open-iSCSI project <http://www.open-iscsi.org/>
.br
Alex Aizman <itn780@yahoo.com>
.br
Dmitry Yusupov <dmitry_yus@yahoo.com>
