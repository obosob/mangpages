.TH PVCREATE 8 "LVM TOOLS 2.02.106(2) (2014-04-10)" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
pvcreate \- initialize a gangbangin' finger-lickin' disk or partizzle fo' use by LVM
.SH SYNOPSIS
.B pvcreate
.RB [ \-d | \-\-debug ]
.RB [ \-h | \-\-help ]
.RB [ \-t | \-\-test ]
.RB [ \-v | \-\-verbose ]
.RB [ \-\-version ]
.RB [ \-f [ f ]| \-\-force
.RB [ \-\-force ]]
.RB [ \-y | \-\-yes ]
.RB [ \-\-labelsector ]
.RB [ \-\-bootloaderareasize
.IR size ]
.RB [ \-M | \-\-metadatatype
.IR type ]
.RB [ \-\- [ pv ] metadatacopies
.IR NumberOfCopies ]
.RB [ \-\-metadatasize
.IR size ]
.RB [ \-\-metadataignore
.RI { y | n }]
.RB [ \-\-dataalignment
.IR alignment ]
.RB [ \-\-dataalignmentoffset
.IR alignment_offset ]
.RB [ \-\-restorefile
.IR file ]
.RB [ \-\-norestorefile ]
.RB [ \-\-setphysicalvolumesize
.IR size ]
.RB [ \-u | \-\-uuid
.IR uuid ]
.RB [ \-Z | \-\-zero
.RI { y | n }]
.I PhysicalVolume
.RI [ PhysicalVolume ...]
.SH DESCRIPTION
pvcreate initializes
.I PhysicalVolume
for lata use by tha Logical Volume Manager (LVM).  Each
.I PhysicalVolume
can be a gangbangin' finger-lickin' disk partition, whole disk, meta device, or loopback file.
For DOS disk partitions, tha partizzle id should be set ta 0x8e using
.BR fdisk (8),
.BR cfdisk (8),
or a equivalent.  For
.B whole disk devices only
the partizzle table must be erased, which will effectively destroy all
data on dat disk.  This can be done by zeroin tha straight-up original gangsta sector with:
.sp
.BI "dd if=/dev/zero of=" PhysicalVolume " bs=512 count=1"
.sp
Continue with
.BR vgcreate (8)
to create a freshly smoked up volume crew on
.IR PhysicalVolume ,
or
.BR vgextend (8)
to add
.I PhysicalVolume
to a existin volume group.
.SH OPTIONS
See \fBlvm\fP(8) fo' common options.
.TP
.BR \-f ", " \-\-force
Force tha creation without any confirmation. I aint talkin' bout chicken n' gravy biatch.  Yo ass can not recreate
(reinitialize) a physical volume belongin ta a existin volume group.
In a emergency you can override dis behaviour wit \fB-ff\fP.
.TP
.BR \-u ", " \-\-uuid " " \fIuuid
Specify tha uuid fo' tha device.
Without dis option, \fBpvcreate\fP(8) generates a random uuid.
All of yo' physical volumes must have unique uuids.
Yo ass need ta use dis option before restorin a funky-ass backup of LVM metadata
onto a replacement thang - peep \fBvgcfgrestore\fP(8).  As such, use of
\fB\-\-restorefile\fP is compulsory unless tha \fB\-\-norestorefile\fP is
used.
.TP
.BR \-y ", " \-\-yes
Answer yeaaaa ta all thangs.
.TP
.BR \-Z ", " \-\-zero " {" \fIy | \fIn }
Whether or not tha straight-up original gangsta 4 sectors (2048 bytes) of tha thang should be
wiped.
If dis option aint given, the
default is ta wipe these sectors unless either or both of the
\fB\-\-restorefile\fP or \fB\-\-uuid\fP options was specified.
.SH NEW METADATA OPTIONS
LVM2 introduces a freshly smoked up format fo' storin metadata on disk.
This freshly smoked up format is mo' efficient n' resilient than tha format the
original gangsta version of LVM used n' offers tha advanced user pimped outer
flexibilitizzle n' control.
.P
Da freshly smoked up format may be selected on tha command line wit \fB\-M2\fP or by
settin \fBformat = "lvm2"\fP up in tha \fBglobal\fP section of \fBlvm.conf\fP(5).
Each physical volume up in tha same volume crew must use tha same format yo, but
different volume crews on a machine may use different formats
simultaneously: tha tools can handle both formats.
Additionizzle formats can be added as shared libraries.
.P
Additionizzle tools fo' manipulatin tha locations n' sizez of metadata areas
will be freestyled up in due course.  Use tha verbose/debug options on tha tools
to peep where tha metadata areas is placed.
.TP
.B \-\-metadatasize \fIsize
Da approximate amount of space ta be set aside fo' each metadata area.
(Da size you specify may git rounded.)
.TP
.B \-\-dataalignment \fIalignment
Align tha start of tha data ta a multiple of dis number.
Yo ass should also specify a appropriate \fIPhysicalExtentSize\fP when bustin
the Volume Group wit \fBvgcreate\fP.
.sp
To peep tha location of tha straight-up original gangsta Physical Extent of a existin Physical Volume
use \fBpvs -o +pe_start\fP .  It is ghon be a multiple of tha requested
alignment.  In addizzle it may be shifted by \fIalignment_offset\fP from
\fIdata_alignment_offset_detection\fP (if enabled up in \fBlvm.conf\fP(5)) or
\fB\-\-dataalignmentoffset\fP.
.TP
.B \-\-dataalignmentoffset \fIalignment_offset
Shift tha start of tha data area by dis additionizzle \fIalignment_offset\fP.
.TP
.BR \-\- [ pv ] metadatacopies " " \fINumberOfCopies
Da number of metadata areas ta set aside on each PV.  Currently
this can be 0, 1 or 2.
If set ta 2, two copiez of tha volume crew metadata
are held on tha PV, one all up in tha front of tha PV n' one all up in tha end.
If set ta 1 (the default), one copy is kept all up in tha front of tha PV
(startin up in tha 5th sector).
If set ta 0, no copies is kept on dis PV - you might wish ta use this
with VGs containin big-ass numberz of PVs.  But if you do dis and
then lata use \fBvgsplit\fP(8) you must ensure dat each VG is still going
to gotz a suitable number of copiez of tha metadata afta tha split!
.TP
.BR \-\-metadataignore " {" \fIy | \fIn }
Ignore or un-ignore metadata areas on dis physical volume.
Da default is "n".  This settin can be chizzled wit \fBpvchange\fP.
If metadata areas on a physical volume is ignored, LVM will
not store metadata up in tha metadata areas present on dis Physical
Volume.  Metadata areas cannot be pimped or extended afta Logical
Volumes done been allocated on tha device. If you do not wanna store
metadata on dis device, it is still wise always ta allocate a metadata
area up in case you need it up in tha future n' ta use dis option ta instruct
LVM2 ta ignore dat shit.
.TP
.B \-\-restorefile \fIfile
In conjunction wit \fB--uuid\fP, dis extracts tha location n' size
of tha data on tha PV from tha file (produced by \fBvgcfgbackup\fP)
and ensures dat tha metadata dat tha program produces is consistent
with tha contentz of tha file i.e. tha physical extents is ghon be in
the same place n' not git overwritten by freshly smoked up metadata.  This provides
a mechanizzle ta upgrade tha metadata format or ta add/remove metadata
areas. Use wit care. Right back up in yo muthafuckin ass. See also \fBvgconvert\fP(8).
.TP
.B \-\-norestorefile
In conjunction wit \fB\-\-uuid\fP, dis allows a \fIuuid\fP ta be specified
without also requirin dat a funky-ass backup of tha metadata be provided.
.TP
.B \-\-labelsector \fIsector
By default tha PV is labelled wit a LVM2 identifier up in its second
sector (sector 1).  This lets you bust a gangbangin' finger-lickin' different sector near the
start of tha disk (between 0 n' 3 inclusive - peep LABEL_SCAN_SECTORS
in tha source).  Use wit care.
.TP
.B \-\-bootloaderareasize \fIsize
Smoke a separate bootloader area of specified size besides PVz data
area. Da bootloader area be a area of reserved space on tha PV from
which LVM2 aint gonna allocate any extents n' itz kept untouched. Y'all KNOW dat shit, muthafucka! This is
primarily aimed fo' use wit bootloadaz ta embed they own data or metadata.
Da start of tha bootloader area be always aligned, peep also \fB--dataalignment\fP
and \fB--dataalignmentoffset\fP. Da bootloader area size may eventually
end up increased cuz of tha alignment yo, but itz never less than the
size dat is requested. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. To peep tha bootloader area start n' size of
an existin Physical Volume use \fBpvs -o +pv_ba_start,pv_ba_size\fP.
.TP
.B \-\-setphysicalvolumesize \fIsize
Overrides tha automatically-detected size of tha PV.  Use wit care.
.SH Examples
Initialize partizzle #4 on tha third SCSI disk n' tha entire fifth
SCSI disk fo' lata use by LVM:
.sp
.B pvcreate /dev/sdc4 /dev/sde

If tha 2nd SCSI disk be a 4KiB sector drive dat compensates fo' windows
partitionin (sector 7 is tha lowest aligned logical block, tha 4KiB
sectors start at LBA -1, n' consequently sector 63 be aligned on a 4KiB
boundary) manually account fo' dis when initializin fo' use by LVM:
.sp
.B pvcreate \-\-dataalignmentoffset 7s /dev/sdb

.SH SEE ALSO
.BR lvm.conf (5),
.BR lvm (8),
.BR vgcreate (8),
.BR vgextend (8),
.BR lvcreate (8),
.BR cfdisk (8),
.BR fdisk (8),
.BR losetup (8),
.BR mdadm (8),
.BR vgcfgrestore (8),
.BR vgconvert (8)
