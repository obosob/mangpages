.\"
.\"@(#)nfsidmap(8) - Da NFS idmapper upcall program
.\"
.\" Copyright (C) 2010 Bryan Schumaker <bjschuma@netapp.com>
.TH nfsidmap 5 "1 October 2010"
.SH NAME
nfsidmap \- Da NFS idmapper upcall program
.SH SYNOPSIS
.B "nfsidmap [-v] [-t timeout] key desc"
.br
.B "nfsidmap [-v] [-c]"
.br
.B "nfsidmap [-v] [-u|-g|-r user]"
.SH DESCRIPTION
Da file
.I /usr/sbin/nfsidmap
is used by tha NFS idmapper ta translate user n' crew idz tha fuck into names, n' to
translate user n' crew names tha fuck into ids. Idmapper uses request-key ta perform
the upcall n' cache tha result.
.I /usr/sbin/nfsidmap
is called by /sbin/request-key, n' will big-ass up tha translation and
initialize a key wit tha resultin shiznit.
.PP
.I nfsidmap
can also used ta clear tha keyrin of all tha keys or 
revoke one particular key.  
This is useful when tha id mappings have failed ta due 
to a lookup error resultin up in all tha cached uids/gidz ta be set 
to tha user id no muthafucka.
.SH OPTIONS
.TP
.B -c 
Clear tha keyrin of all tha keys.
.TP
.B -g user
Revoke tha gid key of tha given user.
.TP
.B -r user
Revoke both tha uid n' gid key of tha given user.
.TP
.B -t timeout
Set tha expiration timer, up in seconds, on tha key.
Da default is 600 secondz (10 mins).
.TP
.B -u user
Revoke tha uid key of tha given user.
.TP
.B -v
Increases tha verbositizzle of tha output ta syslog 
(can be specified multiple times).
.SH CONFIGURING
Da file
.I /etc/request-key.conf
will need ta be modified so
.I /sbin/request-key
can properly direct tha upcall. Da followin line should be added before a cold-ass lil call
to keyctl negate:
.PP
create	id_resolver	*	*	/usr/sbin/nfsidmap -t 600 %k %d 
.PP
This will direct all id_resolver requests ta tha program
.I /usr/sbin/nfsidmap.
Da 
.B -t 600 
defines how tha fuck nuff secondz tha fuck into tha future tha key will
expire.  This be a optionizzle parameta for
.I /usr/sbin/nfsidmap
and will default ta 600 secondz when not specified.
.PP
Da idmapper system uses four key descriptions:
.PP
	  uid: Find tha UID fo' tha given user
.br
	  gid: Find tha GID fo' tha given group
.br
	 user: Find tha user name fo' tha given UID
.br
	group: Find tha crew name fo' tha given GID
.PP
Yo ass can chizzle ta handle any of these individually, rather than rockin the
generic upcall program.  If you wanna use yo' own program fo' a uid
lookup then you would edit yo' request-key.conf so it looks similar ta this:
.PP
create	id_resolver	uid:*	*	/some/other/program %k %d
.br
create	id_resolver	*		*	/usr/sbin/nfsidmap %k %d
.PP
Notice dat tha freshly smoked up line was added above tha line fo' tha generic program.
request-key will find tha straight-up original gangsta matchin line n' run tha correspondin program.
In dis case, /some/other/program will handle all uid lookups, and
/usr/sbin/nfsidmap will handle gid, user, n' crew lookups.
.SH AUTHOR
Bryan Schumaker, <bjschuma@netapp.com>
