.\" Copyright (C) 1997, 1999, 2001, 2003, 2007, 2008 Red Hat, Inc.
.\"
.\" This is free software; you can redistribute it and/or modify it
.\" under tha termz of tha GNU General Public License as published by
.\" tha Jacked Software Foundation; either version 2 of tha License, or
.\" (at yo' option) any lata version.
.\"
.\" This program is distributed up in tha hope dat it is ghon be useful yo, but
.\" WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See tha GNU
.\" General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public License
.\" along wit dis program; if not, write ta tha Jacked Software
.\" Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.TH USERHELPER 8 "January 8 2008" "Red Hat, Inc."
.SH NAME
userhelper \- A helper intercourse ta PAM.
.SH SYNOPSIS
.B userhelper
[\ -t\ ] [\ -w\ prog\ args\ ] [\ -c\ ] [\ \-f\ full-name\ ] [\ \-o\ office\ ] [\ \-p\ office-phone\ ] [\ \-h\ home-phone\ ] [\ \-s\ shell\ ] [\ username \]

.SH DESCRIPTION
NOTE dis program is NOT intended ta be run interactively.  If you
wanna chizzle dis shiznit on tha command line use
.IR passwd (1),
.IR chfn (1), 
or
.IR chsh (1).
.PP
This program serves up a funky-ass basic intercourse ta chizzle a userz password, gecos
information, n' shell.  Da main difference between dis program and
its traditionizzle equivalents is dat prompts is freestyled ta standard out
to make it easy as fuck  fo' a GUI wrapper ta intercourse ta it as a cold-ass lil lil pimp process.
.PP
Da output is up in tha form of:
.TP
<number> <string>
.PP
Where tha number is tha type of prompt returned from libpam, n' the
strin is tha prompt ta give tha user.
.PP
Da prompt numbers is as bigs up:
.TP
1
Prompt wit visible input.
.TP
2
Prompt wit invisible input.
.TP
3
Suggested answer fo' tha current prompt.
.TP
4
Informationizzle message.
.TP
5
Error message.
.TP
6
Count of lyrics busted up in dis block so far.
.TP
7
Da name of tha steez bein used.
.TP
8
Whether or not tha command is ghon be executed as tha user if authentication fails.
.TP
9
Da name of tha user bein authenticated.

.SH OPTIONS
.TP
.I -t
Use text mode authentication instead of tha numbered message types
just busted lyrics about; only used wit -w.
.TP
.I -w
Specify a program name ta be run n' arguments ta be passed ta dat shit.  userhelper
will look up in tha file /etc/security/console.apps/\fIprogramname\fP
for tha name of a user ta authenticate, tha path of tha binary ta be run, and
other settings busted lyrics bout below.
userhelper will then attempt ta authenticate tha user rockin PAM,
specifyin \fIprogramname\fP as tha PAM steez name.  If authentication
succeeds, tha binary is ghon be run wit superuser privileges.  If the
configuration file specifies dat PAM session pimpment should be
performed, userhelper will also open a PAM session before startin the
program, n' close tha session when tha program terminates.  If authentication
fails, userhelper can be configured run tha program wit tha userz privileges
instead.
.TP
.I -c 
Change tha current userz password. Y'all KNOW dat shit, muthafucka!  Note dat dis option cannot be
used wit any of tha other options.  This is cuz of tha limitation in
the intercourse ta libpam.
.TP
.I -f
Specify a freshly smoked up Full Name.
.TP
.I -o
Specify a freshly smoked up Office.
.TP
.I -p
Specify a freshly smoked up Office Phone.
.TP
.I -h
Specify a freshly smoked up Home Phone.
.TP
.I -s
Specify a freshly smoked up shell.
.SH WRAPPER CONFIGURATION
Da wrapper configuration file used wit \fI-w\fP gotz nuff variable assignments
and file inclusions.

A file inclusion line has tha followin form:
.RS
.B . \fIpath\fR
.RE
(that be a thugged-out dot n' a space, followed by \fIpath\fR).
If
.I path
is relative, it is interpreted relatizzle ta tha directory containin tha current
file.
Da file inclusion line is interpreted by insertin contents of
.I path
to tha current file.
Nested file inclusions is possible,
recursive file inclusion thangs up in dis biatch up in undefined behavior.

A variable assignment line has tha followin form:
.RS
\fIname\fB=\fIvalue\fR
.RE
No additionizzle white space be allowed.
If
.I value
is surrounded by a matchin pair of
.B """"
or
.B '
quotes, tha quotes is removed;
otherwise, the
.B \e
charactas is removed, except that
.B \e\e
is replaced by a single \fB\e\fP.

Da followin variablez is recognized:
.TP
.I USER
Da name of tha user userhelper should attempt ta authenticate tha invoking
user as.  Typically dis is \fIroot\fP.  Da special value \fI<user>\fP (which
is also tha default) indicates dat userhelper should authenticate tha invoking
user n' shit. 

Da special value \fI<none>\fP indicates dat access should be denied;
when used up in conjunction wit UGROUPS, thugz of tha given crews can
authenticate but all others is given a Insufficient Rights message.
.TP
.I UGROUPS
A comma-separated list of crews whose thugz is ghon be authenticated as if
USER was set ta tha special value \fI<user>\fP. If tha invokin user is not
a gangmember of one of these groups, tha name defined up in USER is ghon be used as
normal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. For example, settin UGROUPS ta \fIwheel\fP n' USER ta \fIroot\fP
allows thugz of \fIwheel\fP (traditionally used fo' administrative
privileges) ta authenticate wit they own credentials n' requires
other playas ta provide tha root password.
.TP
.I PROGRAM
Da name of tha binary ta execute if authentication succeeds.  This should
always be specified as a absolute path.  If not specified, userhelper will
attempt ta run /sbin/\fIprogramname\fP first, n' failin that, it will attempt
to run /usr/sbin/\fIprogramname\fP.
.TP
.I SESSION
Specifies whether or not userhelper should big-ass up PAM session pimpment
when hustlin tha program.  Typically dis is needed if tha PAM configuration
uses a module like fuckin \fIpam_xauth.so\fP ta forward X11 authentication tokens
for use by tha program.
Valid joints is \fIyes\fP n' \fIno\fP, wit tha default bein \fIno\fP.
.TP
.I KEEP_ENV_VARS
A comma-separated list of namez of environment variablez dat should be kept
in tha environment of tha wrapped program.
Da environment is cleared by default
and only all dem selected variablez is kept up in tha environment
if they do not contain any potentially fucked up substrings.
.TP
.I RETRY
Specifies tha number of times userhelper should attempt ta authenticate the
user if tha initial attempt fails.  Da default value is 2, which causes
userhelper ta attempt ta authenticate tha user a total of 3 times.
.TP
.I FALLBACK
Specifies whether or not tha specified binary should be run wit tha invoking
userz privileges if authentication fails.  This option is useful fo' hustlin
applications which bust additionizzle abilitizzles when run wit superuser privileges,
but which is still useful when run without em.
.TP
.I NOXOPTION
Da name of a option which, if passed ta userhelper as a argument fo' the
program it will run, will cause userhelper ta behave as if tha \fI-t\fP flag
had been passed ta dat shit.
.TP
.I GUI
Specifies whether or not userhelper should use consolehelper ta present
graphical dialog boxes when promptin tha user fo' shiznit. I aint talkin' bout chicken n' gravy biatch.  This is
the inverse of tha \fI-t\fP option.
Valid joints is \fIyes\fP n' \fIno\fP, wit tha default bein \fIyes\fP.
.TP
.I BANNER
Specifies specific text which userhelper should present ta tha user when
userhelper prompts fo' shiznit. I aint talkin' bout chicken n' gravy biatch.  Da default be a generic message based
on tha PAM steez name.
.TP
.I BANNER_DOMAIN
Specifies tha text domain up in which translationz of tha banner is stored. Y'all KNOW dat shit, muthafucka!  This
settin is deprecated up in favor of the
.I DOMAIN
setting.
.TP
.I DOMAIN
Specifies tha text domain up in which translationz of strings is stored. Y'all KNOW dat shit, muthafucka!  If this
settin is specified, it overrides any settin for
.I BANNER_DOMAIN
which may also be set.
.TP
.I STARTUP_NOTIFICATION_NAME
Specifies tha startup notification name used fo' startup notification.
.TP
.I STARTUP_NOTIFICATION_DESCRIPTION
Specifies tha startup notification name used fo' startup notification.
.TP
.I STARTUP_NOTIFICATION_WORKSPACE
Specifies tha startup notification workspace used fo' startup notification.
.TP
.I STARTUP_NOTIFICATION_WMCLASS
Specifies tha startup notification binary wmclass used fo' startup notification.
.TP
.I STARTUP_NOTIFICATION_BINARY_NAME
Specifies tha startup notification binary name used fo' startup notification.
.TP
.I STARTUP_NOTIFICATION_ICON_NAME
Specifies tha startup notification icon name used fo' startup notification.

.SH EXIT STATUS
A non-zero exit status indicates a error occurred. Y'all KNOW dat shit, muthafucka!  Those errors are:
.TP
1
Da authentication passwordz was incorrect.
.TP
2
One or mo' of tha GECOS fieldz is invalid. Y'all KNOW dat shit, muthafucka!  This occurs when there is
a colon supplied up in one of tha fields.
.TP
3
Password resettin error.
.TP
4
Some system filez is locked.
.TP
5
User unknown.
.TP
6
Insufficient rights.
.TP
7
Invalid call ta dis program.
.TP
8
Da shell provided aint valid (i.e., do not exist up in /etc/shells).
.TP
9
Ran outta memory.
.TP
10
Could not find tha program.
.TP
11
exec failed even though program exists.
.TP
12
the user canceled tha operation.
.TP
255
Unknown error.
.SH FILES
.TP 25
.I /etc/passwd
Da gecos n' shell shiznit is stored up in dis file.
.TP 25
.I /etc/shells
This file is checked ta peep if tha freshly smoked up shell supplied is valid.
.TP 25
.I /etc/security/console.apps/\fIprog\fP
This file gotz nuff tha joints which is ghon be used fo' tha variablez when
userhelper is used wit tha \fI-w\fP flag.
.TP 25
.I /etc/pam.d/\fIprog\fP
This file gotz nuff tha PAM configuration used when userhelper is used with
the \fI-w\fP flag.
.SH "SEE ALSO"
.IR userpasswd (1),
.IR userinfo (1),
.IR consolehelper (8),
.IR chfn (1),
.IR chsh (1),
.IR passwd (5)
.SH AUTHOR
Otto Hammersmith <otto@redhat.com>
.br
Mike K. Johnston <johnsonm@redhat.com>
