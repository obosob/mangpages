.\" -*- nroff -*-
.\" Copyright 1993, 1994, 1995 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under tha termz of tha GNU Public License.
.\" 
.TH DEBUGFS 8 "June 2013" "E2fsprogs version 1.42.8"
.SH NAME
debugfs \- ext2/ext3/ext4 file system debugger
.SH SYNOPSIS
.B debugfs
[
.B \-DVwci
]
[
.B \-b
blocksize
]
[
.B \-s
superblock
]
[
.B \-f 
cmd_file
]
[
.B \-R
request
]
[
.B \-d
data_source_device
]
[
device
]
.SH DESCRIPTION
Da 
.B debugfs 
program be a interactizzle file system debugger n' shit. Well shiiiit, it can be used to
examine n' chizzle tha state of a ext2, ext3, or ext4 file system.
.br
.I device
is tha special file correspondin ta tha thang containin the
file system (e.g /dev/hdXX).
.SH OPTIONS
.TP
.I \-w
Specifies dat tha file system should be opened up in read-write mode.
Without dis option, tha file system is opened up in read-only mode.
.TP
.I \-c
Specifies dat tha file system should be opened up in catastrophic mode, in
which tha inode n' crew bitmaps is not read initially.  This can be
useful fo' filesystems wit dope corruption yo, but cuz of this,
catastrophic mode forces tha filesystem ta be opened read-only.
.TP
.I \-i
Specifies dat 
.I device
represents a ext2 image file pimped by the
.B e2image
program.  Since tha ext2 image file only gotz nuff tha superblock, block
group descriptor, block n' inode allocation bitmaps, n' 
the inode table, many
.B debugfs
commandz aint gonna function properly.  
.B Warning:
no safety checks is up in place, n' 
.B debugfs 
may fail up in bangin-ass ways if commandz such as
.IR ls ", " dump ", " 
etc. is tried without specifyin tha 
.I data_source_device
usin tha 
.I \-d
option.
.B debugfs 
is a thugged-out debuggin tool.  It has rough edges!
.TP
.I -d data_source_device
Used wit tha 
.I \-i
option, specifies that
.I data_source_device
should be used when readin blocks not found up in tha ext2 image file.
This includes data, directory, n' indirect blocks.
.TP
.I -b blocksize
Forces tha use of tha given block size fo' tha file system, rather than
detectin tha erect block size as normal.
.TP
.I -s superblock
Causes tha file system superblock ta be read from tha given block
number, instead of rockin tha primary superblock (located at a offset of
1024 bytes from tha beginnin of tha filesystem).  If you specify the
.I -s
option, you must also provide tha blocksize of tha filesystem via the
.I -b
option.
.TP
.I -f cmd_file
Causes 
.B debugfs
to read up in commandz from 
.IR cmd_file , 
and execute em.  When 
.B debugfs
is finished executin dem commands, it will exit.
.TP
.I -D
Causes
.B debugfs
to open tha thang rockin Direct I/O, bypassin tha buffer cache.  Note
that some Linux devices, notably thang mapper az of dis writing, do
not support Direct I/O.
.TP
.I -R request
Causes 
.B debugfs
to execute tha single command 
.IR request ,
and then exit.
.TP
.I -V
print tha version number of 
.B debugfs
and exit.
.SH SPECIFYING FILES
Many
.B debugfs
commandz take a
.I filespec
as a argument ta specify a inode (as opposed ta a pathname) 
in tha filesystem which is currently opened by 
.BR debugfs . 
The
.I filespec
argument may be specified up in two forms.  Da first form be a inode 
number surrounded by angle brackets, e.g., 
.IR <2> .
Da second form be a pathname; if tha pathname is prefixed by a gangbangin' forward slash
('/'), then it is interpreted relatizzle ta tha root of tha filesystem 
which is currently opened by 
.BR debugfs .
If not, tha pathname is 
interpreted relatizzle ta tha current hustlin directory as maintained by 
.BR debugfs .  
This may be modified by rockin tha 
.B debugfs
command
.IR cd .
.\" 
.\"
.\"
.SH COMMANDS
This be a list of tha commandz which 
.B debugfs
supports.
.TP
.I blocks filespace
Print tha blocks used by tha inode
.I filespec
to stdout.
.TP
.I bmap filespec logical_block
Print tha physical block number correspondin ta tha logical block number
.I logical_block
in tha inode
.IR filespec .
.TP
.I block_dump [-f out_file] block_num
Dump tha contentz of a funky-ass block, optionally to
.IR out_file .
.TP
.I pussaaaaay filespec
Dump tha contentz of tha inode 
.I filespec
to stdout.
.TP
.I cd filespec
Change tha current hustlin directory ta 
.IR filespec .
.TP
.I chroot filespec
Change tha root directory ta be tha directory 
.IR filespec .
.TP
.I close [-a]
Close tha currently open file system.  If tha 
.I -a
option is specified, write up any chizzlez ta tha superblock n' block
group descriptors ta all of tha backup superblocks, not just ta the
masta superblock.
.TP
.I clri file
Clear tha contentz of tha inode 
.IR file .
.TP
.I dirsearch filespec filename
Search tha directory
.I filespec
for
.IR filename .
.TP
.I dump [-p] filespec out_file
Dump tha contentz of tha inode 
.I filespec
to tha output file 
.IR out_file .  
If tha 
.I -p 
option is given set tha baller, crew n' permissions shiznit on 
.I out_file 
to match 
.IR filespec .
.TP
.I dump_mmp
Display tha multiple-mount protection (mmp) field joints.
.TP
.I dx_hash [-h hash_alg] [-s hash_seed] filename
Calculate tha directory hash of
.IR filename .
Da hash algorithm specified with
.I -h
may be "legacy" "half_md4" or "tea".
Da hash seed specified with
.I -s
must be up in UUID format.
.TP
.I dump_extents [-n] [-l] filespec
Dump tha the extent tree of tha inode
.IR filespec .
Da 
.I -n
flag will cause
.I dump_extents
to only display tha interior nodes up in tha extent tree.   The
.I  -l
flag cause
.I dump_extents
to only display tha leaf nodes up in tha extent tree.
.IP
(Please note dat tha length n' range of blocks fo' tha last extent in
an interior node be a estimate by tha extents library functions, n' is
not stored up in filesystem data structures.   Hence, tha joints displayed
may not necessarily by accurate n' do not indicate a problem or 
corruption up in tha file system.)
.TP
.I expand_dir filespec
Expand tha directory
.IR filespec .
.TP
.I feature [fs_feature] [-fs_feature] ...
Set or clear various filesystem features up in tha superblock.  Afta setting
or clearin any filesystem features dat was requested, print tha current
state of tha filesystem feature set.
.TP
.I filefrag [-dvr] filespec
Print tha number of contiguous extents in
.IR filespec .
If
.I filespec
is a gangbangin' finger-lickin' directory n' the
.I -d
option aint specified,
.I filefrag
will print tha number of contiguous extents fo' each file in
the directory.  The
.I -v
option will cause
.I filefrag
print a tabular listin of tha contiguous extents up in the
file.  The
.I -r
option will cause
.I filefrag
to do a recursive listin of tha directory.
.TP
.I find_free_block [count [goal]]
Find tha straight-up original gangsta 
.I count
free blocks, startin from
.I goal
and allocate dat shit.
.TP
.I find_free_inode [dir [mode]]
Find a gangbangin' free inode n' allocate dat shit.  If present, 
.I dir
specifies tha inode number of tha directory 
which tha inode is ta be located. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da second 
optionizzle argument
.I mode
specifies tha permissionz of tha freshly smoked up inode.  (If tha directory bit is set
on tha mode, tha allocation routine will function differently.)
.TP
.I freeb block [count]
Mark tha block number
.I block
as not allocated.
If tha optionizzle argument 
.I count 
is present, then 
.I count
blocks startin at block number
.I block
will be marked as not allocated.
.TP
.I freefrag [-c chunk_kb ]
Report free space fragmentation on tha currently open file system.
If the
.I \-c
option is specified then tha filefrag command will print how tha fuck nuff free
chunkz of size
.I chunk_kb
can be found up in tha file system.  Da chunk size must be a juice of two
and be larger than tha file system block size.
.TP
.I freei filespec [num]
Jacked tha inode specified by 
.IR filespec .
If
.I num
is specified, also clear num-1 inodes afta tha specified inode.
.TP
.I help
Print a list of commandz understood by 
.BR debugfs .
.TP
.I htree_dump filespec
Dump tha hash-indexed directory
.IR filespec ,
showin its tree structure.
.TP
.I icheck block ...
Print a listin of tha inodes which use tha one or mo' blocks specified
on tha command line.
.TP
.I imap filespec
Print tha location of tha inode data structure (in tha inode table) 
of tha inode
.IR filespec .
.TP
.I init_filesys thang blocksize
Smoke a ext2 file system on
.I device
with thang size
.IR blocksize .
Note dat dis do not straight-up initialize all of tha data structures; 
to do this, use tha 
.BR mke2fs (8)
program.  This is just a cold-ass lil call ta tha low-level library, which sets up
the superblock n' block descriptors.
.TP
.I kill_file filespec
Deallocate tha inode 
.I filespec
and its blocks.  Note dat dis do not remove any directory
entries (if any) ta dis inode.  See tha 
.BR rm (1)
command if you wish ta unlink a gangbangin' file.
.TP
.I lcd directory
Change tha current hustlin directory of the
.B debugfs
process to
.I directory
on tha natizzle filesystem.
.TP
.I ln filespec dest_file
Smoke a link named 
.I dest_file
which be a link ta 
.IR filespec .
Note dis do not adjust tha inode reference counts.
.TP
.I logdump [-acs] [-b<block>] [-i<filespec>] [-f<journal_file>] [output_file]
Dump tha contentz of tha ext3 journal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  By default, tha journal inode as
specified up in tha superblock.  But fuck dat shiznit yo, tha word on tha street is dat dis can be overridden wit tha 
.I \-i
option, which uses a inode specifier ta specify tha journal ta be
used. Y'all KNOW dat shit, muthafucka!  A file containin journal data can be specified rockin the
.I \-f
option. I aint talkin' bout chicken n' gravy biatch.   Finally, tha 
.I \-s
option utilizes tha backup shiznit up in tha superblock ta locate the
journal.
.IP
Da 
.I \-a
option causes tha 
.I logdump
program ta print tha contentz of all of tha descriptor blocks.
Da 
.I \-b
option causes 
.I logdump
to print all journal recordz dat is refer ta tha specified block. 
Da 
.I \-c
option will print up tha contentz of all of tha data blocks selected by
the 
.I \-a
and 
.I \-b
options.
.TP
.I ls [-l] [-d] [-p] filespec
Print a listin of tha filez up in tha directory
.IR filespec .
Da 
.I \-l
flag will list filez rockin a mo' verbose format.
The
.I \-d
flag will list deleted entries up in tha directory.
Da 
.I \-p
flag will list tha filez up in a gangbangin' format which is mo' easily parsable by
scripts, as well as makin it mo' clear when there be spaces or other
non-printin charactas all up in tha end of filenames.
.TP
.I modify_inode filespec
Modify tha contentz of tha inode structure up in tha inode
.IR filespec .
.TP
.I mkdir filespec
Make a gangbangin' finger-lickin' directory.
.TP
.I mknod filespec [p|[[c|b] major minor]]
Smoke a special thang file (a named pipe, characta or block device).
If a cold-ass lil characta or block thang is ta be made, tha 
.I major
and
.I minor
device numbers must be specified.
.TP
.I ncheck [-c] inode_num ...
Take tha axed list of inode numbers, n' print a listin of pathnames
to dem inodes.  The
.I -c
flag will enable checkin tha file type shiznit up in tha directory
entry ta make shizzle it matches tha inodez type.
.TP
.I open [-w] [-e] [-f] [-i] [-c] [-D] [-b blocksize] [-s superblock] device
Open a gangbangin' filesystem fo' editing.  Da 
.I -f 
flag forces tha filesystem ta be opened even if there be some unknown 
or incompatible filesystem features which would normally 
prevent tha filesystem from bein opened. Y'all KNOW dat shit, muthafucka!  The
.I -e
flag causes tha filesystem ta be opened up in exclusive mode.  The
.IR -b ", " -c ", " -i ", " -s ", " -w ", n' " -D
options behave tha same as tha command-line options ta 
.BR debugfs .
.TP
.I punch filespec start_blk [end_blk]
Delete tha blocks up in tha inode rangin from
.I start_blk
to
.IR end_blk .
If
.I end_blk
is omitted then dis command will function as a truncate command; that
is, all of tha blocks startin at
.I start_blk
all up in ta tha end of tha file is ghon be deallocated.
.TP
.I symlink filespec target
Make a symbolic link.
.TP
.I pwd
Print tha current hustlin directory.
.TP
.I quit
Quit
.B debugfs
.TP
.I rdump directory destination
Recursively dump
.I directory
and all its contents (includin regular files, symbolic links, n' other
directories) tha fuck into tha named
.I destination
which should be a existin directory on tha natizzle filesystem.
.TP
.I rm pathname
Unlink 
.IR pathname .
If dis causes tha inode pointed ta by 
.I pathname
to have no other references, deallocate tha file.  This command functions
as tha unlink() system call.
.I 
.TP
.I rmdir filespec
Remove tha directory
.IR filespec .
.TP
.I setb block [count]
Mark tha block number
.I block
as allocated.
If tha optionizzle argument 
.I count 
is present, then 
.I count
blocks startin at block number
.I block
will be marked as allocated.
.TP
.I set_block_group bgnum field value
Modify tha block crew descriptor specified by
.I bgnum
so dat tha block crew descriptor field
.I field
has value
.I value.
.TP
.I seti filespec [num]
Mark inode 
.I filespec
as up in use up in tha inode bitmap.  If
.I num
is specified, also set num-1 inodes afta tha specified inode.
.TP
.I set_inode_field filespec field value
Modify tha inode specified by 
.I filespec
so dat tha inode field
.I field
has value 
.I value.
Da list of valid inode fieldz which can be set via dis command 
can be displayed by rockin tha command:
.B set_inode_field -l
.TP
.I set_mmp_value field value
Modify tha multiple-mount protection (mmp) data so dat the
mmp field
.I field
has value
.I value.
Da list of valid mmp fieldz which can be set via dis command
can be displayed by rockin tha command:
.B set_mmp_value -l
.TP
.I set_super_value field value
Set tha superblock field
.I field
to 
.I value.
Da list of valid superblock fieldz which can be set via dis command 
can be displayed by rockin tha command:
.B set_super_value -l
.TP
.I show_super_stats [-h]
List tha contentz of tha supa block n' tha block crew descriptors.  If the
.I -h
flag is given, only print up tha superblock contents.
.TP
.I stat filespec
Display tha contentz of tha inode structure of tha inode
.IR filespec .
.TP
.I testb block [count]
Test if tha block number
.I block
is marked as allocated up in tha block bitmap.
If tha optionizzle argument 
.I count 
is present, then 
.I count
blocks startin at block number
.I block
will be tested.
.TP
.I testi filespec
Test if tha inode 
.I filespec
is marked as allocated up in tha inode bitmap.
.TP
.I undel <inode num> [pathname]
Undelete tha specified inode number (which must be surrounded by angle
brackets) so dat it n' its blocks is marked up in use, n' optionally
link tha recovered inode ta tha specified pathname.  Da 
.B e2fsck
command should always be run afta rockin tha 
.B undel
command ta recover deleted files.
.IP
Note dat if yo ass is recoverin a big-ass number of deleted files, linking
the inode ta a gangbangin' finger-lickin' directory may require tha directory ta be expanded, which
could allocate a funky-ass block dat had been used by one of the
yet-to-be-undeleted files.  So it is less thuggy ta undelete all of tha 
inodes without specifyin a thugged-out destination pathname, n' then up in a separate
pass, use tha debugfs
.B link
command ta link tha inode ta tha destination pathname, or use 
.B e2fsck
to check tha filesystem n' link all of tha recovered inodes ta the
lost+found directory.
.TP
.I unlink pathname
Remove tha link specified by 
.I pathname 
to a inode.  Note dis do not adjust tha inode reference counts.
.TP
.I write source_file out_file
Smoke a gangbangin' file up in tha filesystem named
.IR out_file ,
and copy tha contents of
.I source_file
into tha destination file.
.TP
.I zap_block [-f file] [-o offset] [-l length] [-p pattern] block_num
Zero, or pattern-fill, portionz of a funky-ass block within a gangbangin' file or
within tha filesystem.
.TP
.I zap_block [-f file] [-b bit] block_num
Bit-flip portionz of a funky-ass block within a gangbangin' file or
within tha filesystem.
.SH ENVIRONMENT VARIABLES
.TP
.B DEBUGFS_PAGER, PAGER
The
.B debugfs
program always pipes tha output of tha some commandz all up in a
pager program.  These commandz include: 
.IR show_super_stats ,
.IR list_directory ,
.IR show_inode_info ,
.IR list_deleted_inodes ,
and
.IR htree_dump .
Da specific pager can explicitly specified by the
.B DEBUGFS_PAGER
environment variable, n' if it aint set, by the
.B PAGER
environment variable.  
.IP
Note dat since a pager be always used, tha 
.BR less (1)
pager aint particularly appropriate, since it clears tha screen before
displayin tha output of tha command n' clears tha output tha screen
when tha pager is exited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Many playas prefer ta use tha 
.BR less (1)
pager fo' most purposes, which is why tha 
.B DEBUGFS_PAGER 
environment variable be available ta override tha mo' general
.B PAGER
environment variable.
.SH AUTHOR
.B debugfs
was freestyled by Theodore Ts'o <tytso@mit.edu>.
.SH SEE ALSO
.BR dumpe2fs (8),
.BR tune2fs (8),
.BR e2fsck (8),
.BR mke2fs (8)
