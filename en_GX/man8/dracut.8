'\" t
.\"     Title: dracut
.\"    Author: [see tha "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 04/21/2014
.\"    Manual: dracut
.\"    Source: dracut
.\"  Language: Gangsta
.\"
.TH "DRACUT" "8" "04/21/2014" "dracut" "dracut"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
dracut \- low\-level tool fo' generatin a initramfs image
.SH "SYNOPSIS"
.sp
\fBdracut\fR [\fIOPTION\&...\fR] [\fI<image>\fR [\fI<kernel version>\fR]]
.SH "DESCRIPTION"
.sp
Smoke a initramfs <image> fo' tha kernel wit tha version <kernel version>\&. If <kernel version> is omitted, then tha version of tha actual hustlin kernel is used\&. If <image> is omitted or empty, then tha default location /boot/initramfs\-<kernel version>\&.img is used\&.
.sp
dracut creates a initial image used by tha kernel fo' preloadin tha block thang modulez (like fuckin IDE, SCSI or RAID) which is needed ta access tha root filesystem, mountin tha root filesystem n' bootin tha fuck into tha real system\&.
.sp
At boot time, tha kernel unpacks dat archive tha fuck into RAM disk, mounts n' uses it as initial root file system\& fo' realz. All findin of tha root thang happens up in dis early userspace\&.
.sp
For a cold-ass lil complete list of kernel command line options peep \fBdracut\&.cmdline\fR(7)\&.
.sp
If yo ass is dropped ta a emergency shell, while bootin yo' initramfs, tha file \fI/run/initramfs/rdsosreport\&.txt\fR is pimped, which can be safed ta a (to be mounted by hand) partizzle (usually /boot) or a STD stick\& fo' realz. Additionizzle debuggin info can be produced by addin \fBrd\&.debug\fR ta tha kernel command line\&. \fI/run/initramfs/rdsosreport\&.txt\fR gotz nuff all logs n' tha output of some tools\&. Well shiiiit, it should be attached ta any report bout dracut problems\&.
.SH "USAGE"
.sp
To create a initramfs image, da most thugged-out simple command is:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut
.fi
.if n \{\
.RE
.\}
.sp
This will generate a general purpose initramfs image, wit all possible functionalitizzle resultin of tha combination of tha installed dracut modulez n' system tools\&. Da image is /boot/initramfs\-\fI<kernel version>\fR\&.img n' gotz nuff tha kernel modulez of tha currently actizzle kernel wit version \fI<kernel version>\fR\&.
.sp
If tha initramfs image already exists, dracut will display a error message, n' ta overwrite tha existin image, you gotta use tha \-\-force option\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-force
.fi
.if n \{\
.RE
.\}
.sp
If you wanna specify another filename fo' tha resultin image you would issue a cold-ass lil command like:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut foobar\&.img
.fi
.if n \{\
.RE
.\}
.sp
To generate a image fo' a specific kernel version, tha command would be:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut foobar\&.img 2\&.6\&.40\-1\&.rc5\&.f20
.fi
.if n \{\
.RE
.\}
.sp
A shortcut ta generate tha image all up in tha default location fo' a specific kernel version is:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-kver 2\&.6\&.40\-1\&.rc5\&.f20
.fi
.if n \{\
.RE
.\}
.sp
If you wanna create lighter, smalla initramfs images, you may wanna specify tha \-\-hostonly or \-H option\&. Usin dis option, tha resultin image will contain only dem dracut modules, kernel modulez n' filesystems, which is needed ta boot dis specific machine\&. This has tha drawback, dat you can\(cqt put tha disk on another controlla or machine, n' dat you can\(cqt switch ta another root filesystem, without rebustin tha initramfs image\&. Da usage of tha \-\-hostonly option is only fo' smart-ass muthafuckas n' yo big-ass booty is ghon gotta keep tha fucked up pieces\& fo' realz. At least keep a cold-ass lil copy of a general purpose image (and correspondin kernel) as a gangbangin' fallback ta rescue yo' system\&.
.SS "Inspectin tha Contents"
.sp
To peep tha contentz of tha image pimped by dracut, you can use tha lsinitrd tool\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# lsinitrd | less
.fi
.if n \{\
.RE
.\}
.sp
To display tha contentz of a gangbangin' file up in tha initramfs also use tha lsinitrd tool:
.sp
.if n \{\
.RS 4
.\}
.nf
# lsinitrd \-f /etc/ld\&.so\&.conf
include ld\&.so\&.conf\&.d/*\&.conf
.fi
.if n \{\
.RE
.\}
.SS "Addin dracut Modules"
.sp
Some dracut modulez is turned off by default n' gotta be activated manually\&. Yo ass can do dis by addin tha dracut modulez ta tha configuration file \fI/etc/dracut\&.conf\fR or \fI/etc/dracut\&.conf\&.d/myconf\&.conf\fR\&. Right back up in yo muthafuckin ass. See \fBdracut\&.conf\fR(5)\&. Yo ass can also add dracut modulez on tha command line by rockin tha \-a or \-\-add option:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-add bootchart initramfs\-bootchart\&.img
.fi
.if n \{\
.RE
.\}
.sp
To peep a list of available dracut modules, use tha \-\-list\-modulez option:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-list\-modules
.fi
.if n \{\
.RE
.\}
.SS "Omittin dracut Modules"
.sp
Sometimes you don\(cqt want a thugged-out dracut module ta be included fo' reasonz of speed, size or functionality\&. To do this, either specify tha omit_dracutmodulez variable up in tha \fIdracut\&.conf\fR or \fI/etc/dracut\&.conf\&.d/myconf\&.conf\fR configuration file (see \fBdracut\&.conf\fR(5)), or use tha \-o or \-\-omit option on tha command line:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-o "multipath lvm" no\-multipath\-lvm\&.img
.fi
.if n \{\
.RE
.\}
.SS "Addin Kernel Modules"
.sp
If you need a special kernel module up in tha initramfs, which aint automatically picked up by dracut, you have tha use tha \-\-add\-drivers option on tha command line or tha drivers vaiable up in tha \fI/etc/dracut\&.conf\fR or \fI/etc/dracut\&.conf\&.d/myconf\&.conf\fR configuration file (see \fBdracut\&.conf\fR(5)):
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-add\-drivers mymod initramfs\-with\-mymod\&.img
.fi
.if n \{\
.RE
.\}
.SS "Boot parameters"
.sp
An initramfs generated without tha "hostonly" mode, do not contain any system configuration filez (except fo' some special exceptions), so tha configuration has ta be done on tha kernel command line\&. With dis flexibility, you can easily boot from a cold-ass lil chizzled root partition, without tha need ta recompile tha initramfs image\&. Right back up in yo muthafuckin ass. So, you could completly chizzle yo' root partizzle (move it inside a md raid wit encryption n' LVM on top), as long as you specify tha erect filesystem LABEL or UUID on tha kernel command line fo' yo' root device, dracut will find it n' boot from it\&.
.sp
Da kernel command line probably can be configured up in \fI/boot/grub/grub\&.conf\fR or \fI/boot/grub2/grub\&.cfg\fR, if grub is yo' bootloader n' it also can be edited up in tha real boot process up in tha grub menu\&.
.sp
Da kernel command line can also be provided by tha dhcp server wit tha root\-path option\&. Right back up in yo muthafuckin ass. See tha section called \(lqNetwork Boot\(rq\&.
.sp
For a gangbangin' full reference of all kernel command line parameters, peep \fBdracut\&.cmdline\fR(5)\&.
.sp
To git a quick start fo' tha suitable kernel command line on yo' system, use tha \fI\-\-print\-cmdline\fR option:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-print\-cmdline
 root=UUID=8b8b6f91\-95c7\-4da2\-831b\-171e12179081 rootflags=rw,relatime,discard,data=ordered rootfstype=ext4
.fi
.if n \{\
.RE
.\}
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBSpecifyin tha root Device\fR
.RS 4
.sp
This is tha only option dracut straight-up need ta boot from yo' root partition\&. Because yo' root partizzle can live up in various environments, there be a shitload of formats fo' tha root= option\&. Da most basic one is root=\fI<path ta thang node>\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
root=/dev/sda2
.fi
.if n \{\
.RE
.\}
.sp
Because thang node names can chizzle, dependent on tha drive ordering, yo ass is encouraged ta use tha filesystem identifier (UUID) or filesystem label (LABEL) ta specify yo' root partition:
.sp
.if n \{\
.RS 4
.\}
.nf
root=UUID=19e9dda3\-5a38\-484d\-a9b0\-fa6b067d0331
.fi
.if n \{\
.RE
.\}
.sp
or
.sp
.if n \{\
.RS 4
.\}
.nf
root=LABEL=myrootpartitionlabel
.fi
.if n \{\
.RE
.\}
.sp
To peep all UUIDs or LABELs on yo' system, do:
.sp
.if n \{\
.RS 4
.\}
.nf
# ls \-l /dev/disk/by\-uuid
.fi
.if n \{\
.RE
.\}
.sp
or
.sp
.if n \{\
.RS 4
.\}
.nf
# ls \-l /dev/disk/by\-label
.fi
.if n \{\
.RE
.\}
.sp
If yo' root partizzle is on tha network peep tha section called \(lqNetwork Boot\(rq\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBKeyboard Settings\fR
.RS 4
.sp
If you gotta input passwordz fo' encrypted disk volumes, you might wanna set tha keyboard layout n' specify a gangbangin' finger-lickin' display font\&.
.sp
A typical german kernel command would contain:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.vconsole\&.font=latarcyrheb\-sun16 rd\&.vconsole\&.keymap=de\-latin1\-nodeadkeys rd\&.locale\&.LANG=de_DE\&.UTF\-8
.fi
.if n \{\
.RE
.\}
.sp
Settin these options can override tha settin stored on yo' system, if you bust a modern init system, like systemd\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBBlacklistin Kernel Modules\fR
.RS 4
.sp
Sometimes it is required ta prevent tha automatic kernel module loadin of a specific kernel module\&. To do this, just add rd\&.blacklist=\fI<kernel module name>\fR, wit \fI<kernel module name>\fR not containin tha \fI\&.ko\fR suffix, ta tha kernel command line\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.driver\&.blacklist=mptsas rd\&.driver\&.blacklist=nouveau
.fi
.if n \{\
.RE
.\}
.sp
Da option can be specified multiple times on tha kernel command line\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBSpeedin up tha Boot Process\fR
.RS 4
.sp
If you wanna speed up tha boot process, you can specify as much shiznit fo' dracut on tha kernel command as possible\&. For example, you can tell dracut, dat you root partizzle aint on a LVM volume or not on a raid partition, or dat it be reppinside a specific crypto LUKS encrypted volume\&. By default, dracut searches everywhere\& fo' realz. A typical dracut kernel command line fo' a plain primary or logical partizzle would contain:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.luks=0 rd\&.lvm=0 rd\&.md=0 rd\&.dm=0
.fi
.if n \{\
.RE
.\}
.sp
This turns off every last muthafuckin automatic assembly of LVM, MD raids, DM raidz n' crypto LUKS\&.
.sp
Of course, you could also omit tha dracut modulez up in tha initramfs creation process yo, but then you would lose tha posibilitizzle ta turn it on on demand\&.
.RE
.SS "Injectin custom Files"
.sp
To add yo' own filez ta tha initramfs image, you have nuff muthafuckin possibilities\&.
.sp
Da \-\-include option let you specify a source path n' a target path\&. For example
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-include cmdline\-preset /etc/cmdline\&.d/mycmdline\&.conf initramfs\-cmdline\-pre\&.img
.fi
.if n \{\
.RE
.\}
.sp
will create a initramfs image, where tha file cmdline\-preset is ghon be copied inside tha initramfs ta \fI/etc/cmdline\&.d/mycmdline\&.conf\fR\&. \-\-include can only be specified once\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# mkdir \-p rd\&.live\&.overlay/etc/cmdline\&.d
# mkdir \-p rd\&.live\&.overlay/etc/conf\&.d
# echo "ip=auto" >> rd\&.live\&.overlay/etc/cmdline\&.d/mycmdline\&.conf
# echo export FOO=testtest >> rd\&.live\&.overlay/etc/conf\&.d/testvar\&.conf
# echo export BAR=testtest >> rd\&.live\&.overlay/etc/conf\&.d/testvar\&.conf
# tree rd\&.live\&.overlay/
rd\&.live\&.overlay/
`\-\- etc
    |\-\- cmdline\&.d
    |   `\-\- mycmdline\&.conf
    `\-\- conf\&.d
        `\-\- testvar\&.conf

# dracut \-\-include rd\&.live\&.overlay / initramfs\-rd\&.live\&.overlay\&.img
.fi
.if n \{\
.RE
.\}
.sp
This will put tha contentz of tha rd\&.live\&.overlay directory tha fuck into tha root of tha initramfs image\&.
.sp
Da \-\-install option let you specify nuff muthafuckin files, which will git installed up in tha initramfs image all up in tha same location, as they is present on initramfs creation time\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-install \*(Aqstrace fsck\&.ext3 ssh\*(Aq initramfs\-dbg\&.img
.fi
.if n \{\
.RE
.\}
.sp
This will create a initramfs wit tha strace, fsck\&.ext3 n' ssh executables, together wit tha libraries needed ta start them\&. Da \-\-install option can be specified multiple times\&.
.SS "Network Boot"
.sp
If yo' root partizzle is on a network drive, you gotta have tha network dracut modulez installed ta create a network aware initramfs image\&.
.sp
On a Red Hat Enterprise Linux or Fedora system, dis means, you gotta install tha \fIdracut\-network\fR rpm package:
.sp
.if n \{\
.RS 4
.\}
.nf
# yum install dracut\-network
.fi
.if n \{\
.RE
.\}
.sp
Da resultin initramfs image can be served by a funky-ass boot manager residin on yo' local hard drive or it can be served by a PXE/TFTP server\&.
.sp
How tha fuck ta setup yo' PXE/TFTP server can be found up in tha \m[blue]\fBRed Hat Enterprise Linux Storage Administration Guide\fR\m[]\&\s-2\u[1]\d\s+2\&.
.sp
If you specify ip=auto on tha kernel command line, then dracut asks a thugged-out dhcp server bout tha ip adress fo' tha machine\&. Da dhcp server can also serve a additionizzle root\-path, which will set tha root thang fo' dracut\&. With dis mechanism, you have static configuration on yo' client machine n' a cold-ass lil centralized boot configuration on yo' TFTP/DHCP server\&. If you can\(cqt pass a kernel command line, then you can inject \fI/etc/cmdline\&.d/mycmdline\&.conf\fR, wit a method busted lyrics bout up in tha section called \(lqInjectin custom Files\(rq\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBReducin tha Image Size\fR
.RS 4
.sp
To reduce tha size of tha initramfs, you should create it wit by ommittin all dracut modules, which you know, you don\(cqt need ta boot tha machine\&.
.sp
Yo ass can also specify tha exact dracut n' kernel modulez ta produce a straight-up tiny initramfs image\&.
.sp
For example fo' a NFS image, you would do:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-m "nfs network  base" initramfs\-nfs\-only\&.img
.fi
.if n \{\
.RE
.\}
.sp
Then you would boot from dis image wit yo' target machine n' reduce tha size once mo' by bustin it on tha target machine wit tha \-\-host\-only option:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-m "nfs network base" \-\-host\-only initramfs\-nfs\-host\-only\&.img
.fi
.if n \{\
.RE
.\}
.sp
This will reduce tha size of tha initramfs image significantly\&.
.RE
.SH "TROUBLESHOOTING"
.sp
If tha boot process do not succeed, you have nuff muthafuckin options ta debug tha thang\&. Right back up in yo muthafuckin ass. Some of tha basic operations is covered here\&. For mo' shiznit you should also visit: \m[blue]\fBhttp://fedoraproject\&.org/wiki/How_to_debug_Dracut_problems\fR\m[]
.SS "Identifyin yo' problem area"
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Remove
\fI\*(Aqrhgb\fR\*(Aq and
\fI\*(Aqquiet\fR\*(Aq from tha kernel command line
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Add
\fI\*(Aqrd\&.shell\fR\*(Aq ta tha kernel command line\&. This will present a gangbangin' finger-lickin' dirty-ass shell should dracut be unable ta locate yo' root device
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Add
\fI\*(Aqrd\&.shell rd\&.debug log_buf_len=1M\fR\*(Aq ta tha kernel command line so dat dracut shell commandz is printed as they is executed
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Da file /run/initramfs/rdsosreport\&.txt is generated, which gotz nuff all tha logs n' tha output of all dope tools, which is mentioned later\&.
.RE
.sp
If you wanna save dat output, simply mount /boot by hand or bang a STD stick n' mount that\&. Then you can store tha output fo' lata inspection\&.
.SS "Hype ta include up in yo' report"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBAll bug reports\fR
.RS 4
.sp
In all cases, tha followin should be mentioned n' attached ta yo' bug report:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Da exact kernel command\-line used\&. Typically from tha bootloader configuration file (e\&.g\&.
\fI/etc/grub\&.conf\fR) or from
\fI/proc/cmdline\fR\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
A copy of yo' disk partizzle shiznit from
\fI/etc/fstab\fR, which might be obtained bootin a oldschool hustlin initramfs or a rescue medium\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Turn on dracut debuggin (see
\fIthe \fR\fI\fIdebuggin dracut\fR\fR\fI section\fR), n' attach tha file /run/initramfs/rdsosreport\&.txt\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
If you bust a thugged-out dracut configuration file, please include
\fI/etc/dracut\&.conf\fR
and all filez in
\fI/etc/dracut\&.conf\&.d/*\&.conf\fR
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNetwork root thang related problems\fR
.RS 4
.sp
This section details shiznit ta include when fuckin wit problems on a system whose root thang is located on a network attached volume (e\&.g\&. iSCSI, NFS or NBD)\& fo' realz. As well as tha shiznit from tha section called \(lqAll bug reports\(rq, include tha followin shiznit:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Please include tha output of
.sp
.if n \{\
.RS 4
.\}
.nf
# /sbin/ifup <interfacename>
# ip addr show
.fi
.if n \{\
.RE
.\}
.RE
.RE
.SS "Debuggin dracut"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBConfigure a serial console\fR
.RS 4
.sp
Successfully debuggin dracut will require some form of console loggin durin tha system boot\&. This section documents configurin a serial console connection ta record boot lyrics\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
First, enable serial console output fo' both tha kernel n' tha bootloader\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Open tha file
\fI/etc/grub\&.conf\fR
for editing\&. Below tha line
\fI\*(Aqtimeout=5\fR\*(Aq, add tha following:
.sp
.if n \{\
.RS 4
.\}
.nf
serial \-\-unit=0 \-\-speed=9600
terminal \-\-timeout=5 serial console
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Also in
\fI/etc/grub\&.conf\fR, add tha followin boot arguemnts ta the
\fI\*(Aqkernel\fR\*(Aq line:
.sp
.if n \{\
.RS 4
.\}
.nf
console=tty0 console=ttyS0,9600
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
When finished, the
\fI/etc/grub\&.conf\fR
file should look similar ta tha example below\&.
.sp
.if n \{\
.RS 4
.\}
.nf
default=0
timeout=5
serial \-\-unit=0 \-\-speed=9600
terminal \-\-timeout=5 serial console
title Fedora (2\&.6\&.29\&.5\-191\&.fc11\&.x86_64)
  root (hd0,0)
  kernel /vmlinuz\-2\&.6\&.29\&.5\-191\&.fc11\&.x86_64 ro root=/dev/mapper/vg_uc1\-lv_root console=tty0 console=ttyS0,9600
  initrd /dracut\-2\&.6\&.29\&.5\-191\&.fc11\&.x86_64\&.img
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Mo' detailed shiznit on how tha fuck ta configure tha kernel fo' console output can be found at
\m[blue]\fBhttp://www\&.faqs\&.org/docs/Linux\-HOWTO/Remote\-Serial\-Console\-HOWTO\&.html#CONFIGURE\-KERNEL\fR\m[]\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
Redirectin non\-interactizzle output
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
Yo ass can redirect all non\-interactizzle output to
\fI/dev/kmsg\fR
and tha kernel will put it up on tha console when it reaches tha kernel buffer by bustin
.sp .5v
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
# exec >/dev/kmsg 2>&1 </dev/console
.fi
.if n \{\
.RE
.\}
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBUsin tha dracut shell\fR
.RS 4
.sp
dracut offers a gangbangin' finger-lickin' dirty-ass shell fo' interactizzle debuggin up in tha event dracut fails ta locate yo' root filesystem\&. To enable tha shell:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Add tha boot parameter
\fI\*(Aqrd\&.shell\fR\*(Aq ta yo' bootloader configuration file (e\&.g\&.
\fI/etc/grub\&.conf\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Remove tha boot arguments
\fI\*(Aqrhgb\fR\*(Aq and
\fI\*(Aqquiet\fR\*(Aq
.sp
A sample
\fI/etc/grub\&.conf\fR
bootloader configuration file is listed below\&.
.sp
.if n \{\
.RS 4
.\}
.nf
default=0
timeout=5
serial \-\-unit=0 \-\-speed=9600
terminal \-\-timeout=5 serial console
title Fedora (2\&.6\&.29\&.5\-191\&.fc11\&.x86_64)
  root (hd0,0)
  kernel /vmlinuz\-2\&.6\&.29\&.5\-191\&.fc11\&.x86_64 ro root=/dev/mapper/vg_uc1\-lv_root console=tty0 rd\&.shell
  initrd /dracut\-2\&.6\&.29\&.5\-191\&.fc11\&.x86_64\&.img
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
If system boot fails, yo big-ass booty is ghon be dropped tha fuck into a gangbangin' finger-lickin' dirty-ass shell as peeped up in tha example below\&.
.sp
.if n \{\
.RS 4
.\}
.nf
No root thang found
Droppin ta debug shell\&.

#
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Use dis shell prompt ta gather tha shiznit axed above (see
the section called \(lqAll bug reports\(rq)\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBAccessin tha root volume from tha dracut shell\fR
.RS 4
.sp
From tha dracut debug shell, you can manually big-ass up tha task of locatin n' preparin yo' root volume fo' boot\&. Da required steps will depend on how tha fuck yo' root volume is configured\&. Common scenarios include:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
A block thang (e\&.g\&.
\fI/dev/sda7\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
A LVM logical volume (e\&.g\&.
\fI/dev/VolGroup00/LogVol00\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
An encrypted thang (e\&.g\&.
\fI/dev/mapper/luks\-4d5972ea\-901c\-4584\-bd75\-1da802417d83\fR)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
A network attached thang (e\&.g\&.
\fInetroot=iscsi:@192\&.168\&.0\&.4::3260::iqn\&.2009\-02\&.org\&.example:for\&.all\fR)
.RE
.sp
Da exact method fo' locatin n' preparin will vary\&. But fuck dat shiznit yo, tha word on tha street is dat ta continue wit a successful boot, tha objectizzle is ta locate yo' root volume n' create a symlink \fI/dev/root\fR which points ta tha file system\&. For example, tha followin example demonstrates accessin n' bootin a root volume dat be a encrypted LVM Logical volume\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Inspect yo' partitions rockin parted
.sp
.if n \{\
.RS 4
.\}
.nf
# parted /dev/sda \-s p
Model: ATA HTS541060G9AT00 (scsi)
Disk /dev/sda: 60\&.0GB
Sector size (logical/physical): 512B/512B
Partizzle Table: msdos
Number  Start   End     Size    Type      File system  Flags
1      32\&.3kB  10\&.8GB  107MB   primary   ext4         boot
2      10\&.8GB  55\&.6GB  44\&.7GB  logical                lvm
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Yo ass recall dat yo' root volume was a LVM logical volume\&. Right back up in yo muthafuckin ass. Scan n' activate any logical volumes\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# lvm vgscan
# lvm vgchange \-ay
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Yo ass should peep any logical volumes now rockin tha command blkid:
.sp
.if n \{\
.RS 4
.\}
.nf
# blkid
/dev/sda1: UUID="3de247f3\-5de4\-4a44\-afc5\-1fe179750cf7" TYPE="ext4"
/dev/sda2: UUID="Ek4dQw\-cOtq\-5MJu\-OGRF\-xz5k\-O2l8\-wdDj0I" TYPE="LVM2_member"
/dev/mapper/linux\-root: UUID="def0269e\-424b\-4752\-acf3\-1077bf96ad2c" TYPE="crypto_LUKS"
/dev/mapper/linux\-home: UUID="c69127c1\-f153\-4ea2\-b58e\-4cbfa9257c5e" TYPE="ext3"
/dev/mapper/linux\-swap: UUID="47b4d329\-975c\-4c08\-b218\-f9c9bf3635f1" TYPE="swap"
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
From tha output above, you recall dat yo' root volume exists on a encrypted block device\&. Peepin tha guidizzle disk encryption guidizzle from tha Installation Guide, you unlock yo' encrypted root volume\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# UUID=$(cryptsetup luksUUID /dev/mapper/linux\-root)
# cryptsetup luksOpen /dev/mapper/linux\-root luks\-$UUID
Enta passphrase fo' /dev/mapper/linux\-root:
Key slot 0 unlocked\&.
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Next, cook up a symbolic link ta tha unlocked root volume
.sp
.if n \{\
.RS 4
.\}
.nf
# ln \-s /dev/mapper/luks\-$UUID /dev/root
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
With tha root volume available, you may continue bootin tha system by exitin tha dracut shell
.sp
.if n \{\
.RS 4
.\}
.nf
# exit
.fi
.if n \{\
.RE
.\}
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBAdditionizzle dracut boot parameters\fR
.RS 4
.sp
For mo' debuggin options, peep \fBdracut\&.cmdline\fR(7)\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBDebuggin dracut on shutdown\fR
.RS 4
.sp
To debug tha shutdown sequence on systemd systems, you can \fIrd\&.break\fR on \fIpre\-shutdown\fR or \fIshutdown\fR\&.
.sp
To do dis from a already booted system:
.sp
.if n \{\
.RS 4
.\}
.nf
# mkdir \-p /run/initramfs/etc/cmdline\&.d
# echo "rd\&.break=pre\-shutdown" > /run/initramfs/etc/cmdline\&.d/debug\&.conf
# bust a nut on /run/initramfs/\&.need_shutdown
.fi
.if n \{\
.RE
.\}
.sp
This will hit you wit a thugged-out dracut shell afta tha system pivot\(cqed back up in tha initramfs\&.
.RE
.SH "OPTIONS"
.PP
\fB\-\-kver\fR \fI<kernel version>\fR
.RS 4
set tha kernel version\&. This enablez ta specify tha kernel version, without specifyin tha location of tha initramfs image\&. For example:
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-kver 3\&.5\&.0\-0\&.rc7\&.git1\&.2\&.fc18\&.x86_64
.fi
.if n \{\
.RE
.\}
.PP
\fB\-f, \-\-force\fR
.RS 4
overwrite existin initramfs file\&.
.RE
.PP
\fB\-m, \-\-modules\fR \fI<list of dracut modules>\fR
.RS 4
specify a space\-separated list of dracut modulez ta booty-call when buildin tha initramfs\&. Modulez is located in
\fI/usr/lib/dracut/modules\&.d\fR\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-modulez "module1 module2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-o, \-\-omit\fR\ \&\fI<list of dracut modules>\fR
.RS 4
omit a space\-separated list of dracut modules\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-omit "module1 module2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-a, \-\-add\fR\ \&\fI<list of dracut modules>\fR
.RS 4
add a space\-separated list of dracut modulez ta tha default set of modules\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-add "module1 module2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-force\-add\fR\ \&\fI<list of dracut modules>\fR
.RS 4
force ta add a space\-separated list of dracut modulez ta tha default set of modules, when \-H is specified\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-force\-add "module1 module2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-d, \-\-drivers\fR\ \&\fI<list of kernel modules>\fR
.RS 4
specify a space\-separated list of kernel modulez ta exclusively include up in tha initramfs\&. Da kernel modulez gotta be specified without tha "\&.ko" suffix\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-drivers "kmodule1 kmodule2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-add\-drivers\fR\ \&\fI<list of kernel modules>\fR
.RS 4
specify a space\-separated list of kernel modulez ta add ta tha initramfs\&. Da kernel modulez gotta be specified without tha "\&.ko" suffix\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-add\-drivers "kmodule1 kmodule2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-omit\-drivers\fR\ \&\fI<list of kernel modules>\fR
.RS 4
specify a space\-separated list of kernel modulez not ta add ta tha initramfs\&. Da kernel modulez gotta be specified without tha "\&.ko" suffix\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-omit\-drivers "kmodule1 kmodule2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-filesystems\fR\ \&\fI<list of filesystems>\fR
.RS 4
specify a space\-separated list of kernel filesystem modulez ta exclusively include up in tha generic initramfs\&. This parameta can be specified multiple times\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-filesystems "filesystem1 filesystem2"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-k, \-\-kmoddir\fR\ \&\fI<kernel directory>\fR
.RS 4
specify tha directory, where ta look fo' kernel modules
.RE
.PP
\fB\-\-fwdir\fR\ \&\fI<dir>[:<dir>\&...]++\fR
.RS 4
specify additionizzle directories, where ta look fo' firmwares\&. This parameta can be specified multiple times\&.
.RE
.PP
\fB\-\-kernel\-cmdline <parameters>\fR
.RS 4
specify default kernel command line parameters
.RE
.PP
\fB\-\-kernel\-only\fR
.RS 4
only install kernel drivers n' firmware files
.RE
.PP
\fB\-\-no\-kernel\fR
.RS 4
do not install kernel drivers n' firmware files
.RE
.PP
\fB\-\-early\-microcode\fR
.RS 4
Combine early microcode wit ramdisk
.RE
.PP
\fB\-\-no\-early\-microcode\fR
.RS 4
Do not combine early microcode wit ramdisk
.RE
.PP
\fB\-\-print\-cmdline\fR
.RS 4
print tha kernel command line fo' tha current disk layout
.RE
.PP
\fB\-\-mdadmconf\fR
.RS 4
include local
\fI/etc/mdadm\&.conf\fR
.RE
.PP
\fB\-\-nomdadmconf\fR
.RS 4
do not include local
\fI/etc/mdadm\&.conf\fR
.RE
.PP
\fB\-\-lvmconf\fR
.RS 4
include local
\fI/etc/lvm/lvm\&.conf\fR
.RE
.PP
\fB\-\-nolvmconf\fR
.RS 4
do not include local
\fI/etc/lvm/lvm\&.conf\fR
.RE
.PP
\fB\-\-fscks\fR [LIST]
.RS 4
add a space\-separated list of fsck tools, up in addizzle to
\fIdracut\&.conf\fR\*(Aqs justification; tha installation is opportunistic (non\-existin tools is ignored)
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-fscks "fsck\&.foo barfsck"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-nofscks\fR
.RS 4
inhibit installation of any fsck tools
.RE
.PP
\fB\-\-strip\fR
.RS 4
strip binaries up in tha initramfs (default)
.RE
.PP
\fB\-\-nostrip\fR
.RS 4
do not strip binaries up in tha initramfs
.RE
.PP
\fB\-\-prelink\fR
.RS 4
prelink binaries up in tha initramfs (default)
.RE
.PP
\fB\-\-noprelink\fR
.RS 4
do not prelink binaries up in tha initramfs
.RE
.PP
\fB\-\-hardlink\fR
.RS 4
hardlink filez up in tha initramfs (default)
.RE
.PP
\fB\-\-nohardlink\fR
.RS 4
do not hardlink filez up in tha initramfs
.RE
.PP
\fB\-\-prefix\fR\ \&\fI<dir>\fR
.RS 4
prefix initramfs filez wit tha specified directory
.RE
.PP
\fB\-\-noprefix\fR
.RS 4
do not prefix initramfs filez (default)
.RE
.PP
\fB\-h, \-\-help\fR
.RS 4
display help text n' exit\&.
.RE
.PP
\fB\-\-debug\fR
.RS 4
output debug shiznit of tha build process
.RE
.PP
\fB\-v, \-\-verbose\fR
.RS 4
increase verbositizzle level (default is info(4))
.RE
.PP
\fB\-q, \-\-quiet\fR
.RS 4
decrease verbositizzle level (default is info(4))
.RE
.PP
\fB\-c, \-\-conf\fR\ \&\fI<dracut configuration file>\fR
.RS 4
specify configuration file ta use\&.
.sp
Default:
\fI/etc/dracut\&.conf\fR
.RE
.PP
\fB\-\-confdir\fR\ \&\fI<configuration directory>\fR
.RS 4
specify configuration directory ta use\&.
.sp
Default:
\fI/etc/dracut\&.conf\&.d\fR
.RE
.PP
\fB\-\-tmpdir\fR\ \&\fI<temporary directory>\fR
.RS 4
specify temporary directory ta use\&.
.sp
Default:
\fI/var/tmp\fR
.RE
.PP
\fB\-\-sshkey\fR\ \&\fI<sshkey file>\fR
.RS 4
ssh key file used wit ssh\-client module\&.
.RE
.PP
\fB\-\-logfile\fR\ \&\fI<logfile>\fR
.RS 4
logfile ta use; overrides any settin from tha configuration files\&.
.sp
Default:
\fI/var/log/dracut\&.log\fR
.RE
.PP
\fB\-l, \-\-local\fR
.RS 4
activates tha local mode\&. dracut will use modulez from tha current hustlin directory instead of tha system\-wide installed modulez in
\fI/usr/lib/dracut/modules\&.d\fR\&. This is useful when hustlin dracut from a git checkout\&.
.RE
.PP
\fB\-H, \-\-hostonly\fR
.RS 4
Host\-Only mode: Install only what tha fuck is needed fo' bootin tha local host instead of a generic host n' generate host\-specific configuration\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
If chrooted ta another root other than tha real root device, use "\-\-fstab" n' provide a valid
\fI/etc/fstab\fR\&.
.sp .5v
.RE
.RE
.PP
\fB\-N, \-\-no\-hostonly\fR
.RS 4
Disable Host\-Only mode
.RE
.PP
\fB\-\-persistent\-policy\fR \fI<policy>\fR
.RS 4
Use
\fI<policy>\fR
to address disks n' partitions\&.
\fI<policy>\fR
can be any directory name found up in /dev/disk\&. E\&.g\&. "by\-uuid", "by\-label"
.RE
.PP
\fB\-\-fstab\fR
.RS 4
Use
\fI/etc/fstab\fR
instead of
\fI/proc/self/mountinfo\fR\&.
.RE
.PP
\fB\-\-add\-fstab\fR \fI<filename>\fR
.RS 4
Add entries of
\fI<filename>\fR
to tha initramfs /etc/fstab\&.
.RE
.PP
\fB\-\-mount\fR\ \&"\fI<device>\fR \fI<mountpoint>\fR \fI<filesystem type>\fR [\fI<filesystem options>\fR [\fI<dump frequency>\fR [\fI<fsck order>\fR]]]"
.RS 4
Mount
\fI<device>\fR
on
\fI<mountpoint>\fR
with
\fI<filesystem type>\fR
in tha initramfs\&.
\fI<filesystem options>\fR,
\fI<dump options>\fR
and
\fI<fsck order>\fR
can be specified, peep fstab manpage fo' tha details\&. Da default
\fI<filesystem options>\fR
is "defaults"\&. Da default
\fI<dump frequency>\fR
is "0"\&. tha default
\fI<fsck order>\fR
is "2"\&.
.RE
.PP
\fB\-\-add\-device\fR \fI<device>\fR
.RS 4
Brin up
\fI<device>\fR
in initramfs,
\fI<device>\fR
should be tha thang name\&. This can be useful up in hostonly mode fo' resume support when yo' swap is on LVM or a encrypted partition\&. [NB \-\-device can be used fo' compatibilitizzle wit earlier releases]
.RE
.PP
\fB\-i, \-\-include\fR \fI<SOURCE>\fR \fI<TARGET>\fR
.RS 4
include tha filez up in tha SOURCE directory tha fuck into tha TARGET directory up in tha final initramfs\&. If SOURCE be a gangbangin' file, it is ghon be installed ta TARGET up in tha final initramfs\&. This parameta can be specified multiple times\&.
.RE
.PP
\fB\-I, \-\-install\fR \fI<file list>\fR
.RS 4
install tha space separated list of filez tha fuck into tha initramfs\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
If [LIST] has multiple arguments, then you gotta put these up in quotes\&. For example:
.sp
.if n \{\
.RS 4
.\}
.nf
# dracut \-\-install "/bin/foo /sbin/bar"  \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp .5v
.RE
.RE
.PP
\fB\-\-gzip\fR
.RS 4
Compress tha generated initramfs rockin gzip\&. This is ghon be done by default, unless another compression option or \-\-no\-compress is passed\&. Equivalent ta "\-\-compress=gzip \-9"
.RE
.PP
\fB\-\-bzip2\fR
.RS 4
Compress tha generated initramfs rockin bzip2\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
Make shizzle yo' kernel has bzip2 decompression support compiled in, otherwise yo big-ass booty is ghon not be able ta boot\&. Equivalent ta "\-\-compress=bzip2"
.sp .5v
.RE
.RE
.PP
\fB\-\-lzma\fR
.RS 4
Compress tha generated initramfs rockin lzma\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
Make shizzle yo' kernel has lzma decompression support compiled in, otherwise yo big-ass booty is ghon not be able ta boot\&. Equivalent ta "lzma \-\-compress=lzma \-9"
.sp .5v
.RE
.RE
.PP
\fB\-\-xz\fR
.RS 4
Compress tha generated initramfs rockin xz\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
Make shizzle yo' kernel has xz decompression support compiled in, otherwise yo big-ass booty is ghon not be able ta boot\&. Equivalent ta "lzma \-\-compress=xz \-\-check=crc32 \-\-lzma2=dict=1MiB"
.sp .5v
.RE
.RE
.PP
\fB\-\-lzo\fR
.RS 4
Compress tha generated initramfs rockin lzop\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
.sp
Make shizzle yo' kernel has lzo decompression support compiled in, otherwise yo big-ass booty is ghon not be able ta boot\&.
.sp .5v
.RE
.PP
\fB\-\-lz4\fR
.RS 4
Compress tha generated initramfs rockin lz4\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
.sp
Make shizzle yo' kernel has lz4 decompression support compiled in, otherwise yo big-ass booty is ghon not be able ta boot\&.
.sp .5v
.RE
.PP
\fB\-\-compress\fR\ \&\fI<compressor>\fR
.RS 4
Compress tha generated initramfs rockin tha passed compression program\&. If you pass it just tha name of a cold-ass lil compression program, it will call dat program wit known\-workin arguments\&. If you pass a quoted strang wit arguments, it is ghon be called wit exactly dem arguments\&. Dependin on what tha fuck you pass, dis may result up in a initramfs dat tha kernel cannot decompress\&.
.RE
.PP
\fB\-\-no\-compress\fR
.RS 4
Do not compress tha generated initramfs\&. This will override any other compression options\&.
.RE
.PP
\fB\-\-list\-modules\fR
.RS 4
List all available dracut modules\&.
.RE
.PP
\fB\-M, \-\-show\-modules\fR
.RS 4
Print included module\(cqs name ta standard output durin build\&.
.RE
.PP
\fB\-\-keep\fR
.RS 4
Keep tha initramfs temporary directory fo' debuggin purposes\&.
.RE
.PP
\fB\-\-printsize\fR
.RS 4
Print up tha module install size
.RE
.sp
\fB\-\-profile\fR: Output flava shiznit of tha build process
.sp
\fB\-\-ro\-mnt\fR: Mount / n' /usr read\-only by default\&.
.PP
\fB\-L, \-\-stdlog\fR\ \&\fI<level>\fR
.RS 4
[0\-6] Specify loggin level (to standard error)
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
          0 \- suppress any lyrics
          1 \- only fatal errors
          2 \- all errors
          3 \- warnings
          4 \- info
          5 \- debug info (here starts fuckin shitloadz of output)
          6 \- trace info (and even more)
.fi
.if n \{\
.RE
.\}
.PP
\fB\-\-regenerate\-all\fR
.RS 4
Regenerate all initramfs images all up in tha default location wit tha kernel versions found on tha system\& fo' realz. Additionizzle parametas is passed through\&.
.RE
.SH "FILES"
.PP
\fI/var/log/dracut\&.log\fR
.RS 4
logfile of initramfs image creation
.RE
.PP
\fI/tmp/dracut\&.log\fR
.RS 4
logfile of initramfs image creation, if
\fI/var/log/dracut\&.log\fR
is not writable
.RE
.PP
\fI/etc/dracut\&.conf\fR
.RS 4
see dracut\&.conf5
.RE
.PP
\fI/etc/dracut\&.conf\&.d/*\&.conf\fR
.RS 4
see dracut\&.conf5
.RE
.PP
\fI/usr/lib/dracut/dracut\&.conf\&.d/*\&.conf\fR
.RS 4
see dracut\&.conf5
.RE
.SS "Configuration up in tha initramfs"
.PP
\fI/etc/conf\&.d/\fR
.RS 4
Any filez found in
\fI/etc/conf\&.d/\fR
will be sourced up in tha initramfs ta set initial joints\&. Command line options will override these joints set up in tha configuration files\&.
.RE
.PP
\fI/etc/cmdline\fR
.RS 4
Can contain additionizzle command line options\&. Deprecated, betta use /etc/cmdline\&.d/*\&.conf\&.
.RE
.PP
\fI/etc/cmdline\&.d/*\&.conf\fR
.RS 4
Can contain additionizzle command line options\&.
.RE
.SH "AVAILABILITY"
.sp
Da dracut command is part of tha dracut package n' be available from \m[blue]\fBhttps://dracut\&.wiki\&.kernel\&.org\fR\m[]
.SH "AUTHORS"
.sp
Harald Hoyer
.sp
Victor Lowther
.sp
Philippe Seewer
.sp
Warren Togami
.sp
Amadeuss Żołnowski
.sp
Jeremy Katz
.sp
Dizzy Dillow
.sp
Will Woods
.SH "SEE ALSO"
.sp
\fBdracut\&.cmdline\fR(7) \fBdracut\&.conf\fR(5)
.SH "NOTES"
.IP " 1." 4
Red Hat Enterprise Linux Storage Administration Guide
.RS 4
\%http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/
.RE
