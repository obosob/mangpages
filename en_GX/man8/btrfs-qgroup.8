'\" t
.\"     Title: btrfs-qgroup
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-QGROUP" "8" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-qgroup \- control tha quota crew of a funky-ass btrfs filesystem
.SH "SYNOPSIS"
.sp
\fBbtrfs qgroup\fR \fI<subcommand>\fR \fI<args>\fR
.SH "DESCRIPTION"
.sp
\fBbtrfs qgroup\fR is used ta control quota group(qgroup) of a funky-ass btrfs filesystem\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
To use qgroup, it need ta enable quota first rockin \fBbtrfs quota\fR command\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBWarning\fR
.ps -1
.br
.sp
Qgroup aint stable yet n' will impact performizzle up in current mainline kernel(v3\&.14 so far)\&.
.sp .5v
.RE
.SH "QGROUP"
.sp
Quota crew or qgroup up in btrfs has its hierarchy like subvolume\&. One subvolume/snapshot can reach its quota limits if it consumes all tha quota assigned ta it or any of tha parent qgroup(s)\&.
.sp
Also fo' snapshot, it consumes no quota initially since all its data shares wit its parent, so only modification up in snapshot consumes quota\&.
.sp
Every subvolume/snapshot gonna git its own qgroup wit id \fI0/\fR<subvolume id>\*(Aq\*(Aq upon bustin yo, but can be lata destroyed by \fBbtrfs qgroup destroy\fR command\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
If tha qgroup of a subvolume is destroyed, quota bout tha subvolume aint gonna be functionizzle until qgroup \fI0/\fR<subvolume id>\*(Aq\*(Aq is pimped again\&.
.sp .5v
.RE
.SH "SUBCOMMAND"
.PP
\fBassign\fR \fI<src>\fR \fI<dst>\fR \fI<path>\fR
.RS 4
Assign qgroup
\fI<src>\fR
as tha lil pimp qgroup of
\fI<dst>\fR
in tha btrfs filesystem identified by
\fI<path>\fR\&.
.RE
.PP
\fBremove\fR \fI<src>\fR \fI<dst>\fR \fI<path>\fR
.RS 4
Remove tha relationshizzle between lil pimp qgroup
\fI<src>\fR
and parent qgroup
\fI<dst>\fR
in tha btrfs filesystem identified by
\fI<path>\fR\&.
.RE
.PP
\fBcreate\fR \fI<qgroupid>\fR \fI<path>\fR
.RS 4
Smoke a subvolume quota group\&.
.sp
For the
\fI0/\fR<subvolume id>\*(Aq\*(Aq qgroup, a qgroup can be pimped even before tha subvolume pimped\&.
.RE
.PP
\fBdestroy\fR \fI<qgroupid>\fR \fI<path>\fR
.RS 4
Destroy a qgroup\&.
.sp
If a qgroup is no isolated,which means it aint nuthin but a parent or lil pimp qgroup, it can\(cqt be destroyed\&.
.RE
.PP
\fBshow\fR [options] \fI<path>\fR
.RS 4
Show all qgroups up in tha btrfs filesystem identified by
\fI<path>\fR\&.
.sp
\fBOptions\fR
.PP
\-p
.RS 4
print parent qgroup id\&.
.RE
.PP
\-c
.RS 4
print lil pimp qgroup id\&.
.RE
.PP
\-r
.RS 4
print max referenced size of qgroup\&.
.RE
.PP
\-e
.RS 4
print max exclusive size of qgroup\&.
.RE
.PP
\-F
.RS 4
list all qgroups which impact tha given path(include ancestral qgroups)
.RE
.PP
\-f
.RS 4
list all qgroups which impact tha given path(exclude ancestral qgroups)
.RE
.PP
\-\-sort=\fI<attr>\fR[,\fI<attr>\fR]\&...
.RS 4
list qgroups up in order of
\fI<attr>\fR\&.
.sp
\fI<attr>\fR
can be one or mo' of qgroupid,rfer,excl,max_rfer,max_excl\&.
.sp
Prefix \*(Aq+\*(Aq means ascendin order n' \*(Aq\-\*(Aq means descendin order of
\fI<attr>\fR\&. If no prefix is given, use ascendin order by default\&.
.sp
If multiple \*(Aq<attr>\*(Aqs is given, use comma ta separate\&.
.RE
.RE
.PP
\fBlimit\fR [options] \fI<size>\fR|none [\fI<qgroupid>\fR] \fI<path>\fR
.RS 4
Limit tha size of a qgroup to
\fI<size>\fR
or no limit up in tha btrfs filesystem identified by
\fI<path>\fR\&.
.sp
If
\fI<qgroupid>\fR
is not given, qgroup of tha subvolume identified by
\fI<path>\fR
is used if possible\&.
.RE
.SH "EXIT STATUS"
.sp
\fBbtrfs qgroup\fR returns a zero exit status if it succeeds\&. Non zero is returned up in case of failure\&.
.SH "AVAILABILITY"
.sp
\fBbtrfs\fR is part of btrfs\-progs\&. Please refer ta tha btrfs wiki \m[blue]\fBhttp://btrfs\&.wiki\&.kernel\&.org\fR\m[] fo' further details\&.
.SH "SEE ALSO"
.sp
\fBmkfs\&.btrfs\fR(8), \fBbtrfs\-subvolume\fR(8), \fBbtrfs\-quota\fR(8),
