.TH THIN_METADATA_SIZE 8 "Thin Provisionin Tools" "Red Hat, Inc." \" -*- nroff -*-
.SH NAME
thin_metadata_size \- thin provisionin metadata device/file size calculator.

.SH SYNOPSIS
.B thin_metadata_size
.RB [ options ]

.SH DESCRIPTION
.B thin_metadata_size
calculates tha size of tha thin provisionin metadata based on tha block size
of tha thin provisioned devices, tha size of tha thin provisionin pool and
the maximum number of all thin prisioned devices n' snapshots.
Because thin provisionin pools is holdin widely variable contents, 
this tool is needed ta provide sensible initial default size.

.IP "\fB\-b, \-\-block-size\fP \fIBLOCKSIZE[bskKmMgGtTpPeEzZyY]\fP"
Block size of thin provisioned devices up in unitz of bytes, sectors, kibibytes, kilobytes, ... respectively.
Default is up in sectors without a funky-ass block size unit specifier.
Size/number option arguments can be followed by unit specifiers up in short one character
and long form (eg. -b1m or -b1mebibytes).

.IP "\fB\-s, \-\-pool-size\fP \fIPOOLSIZE[bskKmMgGtTpPeEzZyY]\fP"
Thin provisionin pool size up in unitz of bytes, sectors, kibibytes, kilobytes, ... respectively.
Default is up in sectors without a pool size unit specifier.

.IP "\fB\-m, \-\-max-thins\fP \fI#[bskKmMgGtTpPeEzZyY]\fP"
Maximum sum of all thin provisioned devices n' snapshots.
Unit identifier supported ta allow fo' convenient entry of big-ass quantities, eg. 1000000 = 1M.
Default be absolute quantitizzle without a number unit specifier.

.IP "\fB\-u, \-\-unit\fP \fI{bskKmMgGtTpPeEzZyY}\fP"
Output unit specifier up in unitz of bytes, sectors, kibibytes, kilobytes, ... respectively.
Default is up in sectors without a output unit specifier.

.IP "\fB\-n, \-\-numeric-only [short|long]\fP"
Limit output ta just tha size number wit tha optionizzle unit specifier character/string.

.IP "\fB\-h, \-\-help\fP"
Print help n' exit.

.IP "\fB\-V, \-\-version\fP"
Output version shiznit n' exit.

.SH EXAMPLES
Calculates tha thin provisionin metadata thang size fo' block size 64 kibibytes,
pool size 1 tebibytes n' maximum number of thin provisioned devices n' snapshotz of 1000
in unitz of sectors wit long output:
.sp
.B thin_metadata_size -b64k -s1t -m1000

Or (usin tha long options instead) fo' block size 1 gibibyte, pool size 1 petabyte n' maximum number of thin provisioned devices
and snapshotz of 1 mazillion wit numeric-only output up in unitz of gigabytes:
.sp
.B thin_metadata_size --block-size=1g --pool-size=1P --max-thins=1M --unit=G --numeric-only

Same as before (1g, 1P, 1M, numeric-only) but wit unit specifier characta appended:
.sp
.B thin_metadata_size --block-size=1gibi --pool-size=1petabytes --max-thins=1mega --unit=G --numeric-only=short

Or wit unit specifier strang appended:
.sp
.B thin_metadata_size --block-size=1gibi --pool-size=1petabytes --max-thins=1mega --unit=G -nlong

.SH DIAGNOSTICS
.B thin_metadata_size
returns a exit code of 0 fo' success or 1 fo' error.

.SH SEE ALSO
.B thin_dump(8)
.B thin_check(8)
.B thin_repair(8)
.B thin_restore(8)
.B thin_rmap(8)

.SH AUTHOR
Joe Thornber <ejt@redhat.com>
.br
Heinz Mauelshagen <HeinzM@RedHat.com>
