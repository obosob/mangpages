.TH ARP 8 "2008\-10\-03" "net\-tools" "Linux System Administratorz Manual"
.SH NAME
arp \- manipulate tha system ARP cache
.SH SYNOPSIS
.B arp
.RB [ \-vn ]
.RB [ \-H
.IR type ]
.RB [ \-i
.IR if ]
.RB [ \-ae ]
.RI [ hostname ]
.PP
.B arp
.RB [ \-v ]
.RB [ \-i
.IR if ]
.B \-d
.I hostname
.RB [ pub ]
.PP
.B arp
.RB [ \-v ]
.RB [ \-H
.IR type ]
.RB [ \-i
.IR if ]
.B \-s
.I hostname hw_addr
.RB [ temp ]
.PP
.B arp
.RB [ \-v ]
.RB [ \-H
.IR type ]
.RB [ \-i
.IR if ]
.B \-s
.I hostname hw_addr
.RB [ netmask
.IR nm ]
.B pub
.PP
.B arp
.RB [ \-v ]
.RB [ \-H
.IR type ]
.RB [ \-i
.IR if ]
.B \-Ds
.I hostname
.I ifname
.RB [ netmask
.IR nm ]
.B pub
.PP
.B arp
.RB [ \-vnD ]
.RB [ \-H
.IR type ]
.RB [ \-i
.IR if ]
.B \-f
.RI [ filename ]

.SH NOTE
.P
This program is obsolete. For replacement check \fBip neigh\fR.

.SH DESCRIPTION
.B Arp
manipulates or displays tha kernelz IPv4 network neighbour cache. Well shiiiit, it can add
entries ta tha table, delete one or display tha current content.

.B ARP
standz fo' Address Resolution Protocol, which is used ta find tha media
access control address of a network neighbour fo' a given IPv4 Address.
.SH MODES
.B arp
with no mode specifier will print tha current content of tha table. Well shiiiit, it is
possible ta limit tha number of entries printed, by specifyin a hardware
address type, intercourse name or host address.

.B arp -d
.I address
will delete a ARP table entry. Root or netadmin privilege is required ta do
this. Da entry is found by IP address. If a hostname is given, it will be
resolved before lookin up tha entry up in tha ARP table.

.B arp -s
.I address hw_addr
is used ta set up a freshly smoked up table entry. Da format of the
.I hw_addr
parameta is dependent on tha hardware class yo, but fo' most classes one can
assume dat tha usual presentation can be used. Y'all KNOW dat shit, muthafucka!  For tha Ethernet class,
this is 6 bytes up in hexadecimal, separated by colons. When addin proxy arp
entries (that is dem wit the
.BR pub lish
flag set) a
.B netmask
may be specified ta proxy arp fo' entire subnets, n' you can put dat on yo' toast. This aint good
practice yo, but is supported by olda kernels cuz it can be
useful naaahhmean, biatch? If the
.B temp
flag aint supplied entries is ghon be permanent stored tha fuck into tha ARP
cache. To simplify settin up entries fo' one of yo' own network intercourses, you can use the
.B "arp \-Ds"
.I address ifname
form. In dat case tha hardware address is taken from tha intercourse wit the
specified name.

.br
.SH OPTIONS
.TP
.B "\-v, \-\-verbose"
Tell tha user what tha fuck is goin on by bein verbose.
.TP
.B "\-n, \-\-numeric"
shows numerical addresses instead of tryin ta determine symbolic host, port
or user names.
.TP
\fB\-H\fI type\fR, \fB\-\-hw\-type\fI type\fR, \fB\-t\fI type\fR
When settin or readin tha ARP cache, dis optionizzle parameta tells
.B arp
which class of entries it should check for. Shiiit, dis aint no joke.  Da default value of
this parameta is
.B ether
(i.e. hardware code 0x01 fo' IEEE 802.3 10Mbps Ethernet).
Other joints might include network technologies such as
.RB "ARCnet (" arcnet ")"
,
.RB "PROnet (" pronet ")"
,
.RB "AX.25 (" ax25 ")"
and
.RB "NET/ROM (" netrom ")."
.TP
.B \-a
Use alternate BSD steez output format (with no fixed columns).
.TP
.B \-e
Use default Linux steez output format (with fixed columns).
.TP
.B "\-D, \-\-use-device"
Instead of a hw_addr, tha given argument is tha name of a intercourse.
.B arp
will use tha MAC address of dat intercourse fo' tha table entry. This is probably tha dopest option ta set up a proxy ARP entry ta yo ass.
.TP
\fB\-i\fI If\fR, \fB\-\-device\fI If\fR
Select a intercourse. When dumpin tha ARP cache only entries matching
the specified intercourse is ghon be printed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. When settin a permanent or
.B temp
ARP entry dis intercourse is ghon be associated wit tha entry; if this
option aint used, tha kernel will guess based on tha routing
table. For
.B pub
entries tha specified intercourse is tha intercourse on which ARP requests will
be answered.
.br
.B NOTE:
This has ta be different from tha intercourse ta which tha IP
datagrams is ghon be routed.
.B NOTE:
Az of kernel 2.2.0 it is no longer possible ta set a ARP entry fo' an
entire subnet. Linux instead do automagic proxy arp when a route
exists n' it is forwarding. Right back up in yo muthafuckin ass. See
.BR arp (7)
for details fo' realz. Also the
.B dontpub
option which be available fo' delete n' set operations cannot be
used wit 2.4 n' newer kernels.
.TP
\fB\-f\fI filename\fR, \fB\-\-file\fI filename\fR
Similar ta the
.B \-s
option, only dis time tha address info is taken from file
.IR filename .
This can be used if ARP entries fo' a shitload of hosts gotta be
set up.  Da name of tha data file is straight-up often
.IR /etc/ethers ,
but dis aint official. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. If no filename is specified
.I /etc/ethers
is used as default.
.sp 1
Da format of tha file is simple; it
only gotz nuff ASCII text lines wit a hostname, n' a hardware
address separated by whitespace fo' realz. Additionally the
.BR "pub" , " temp" " and" " netmask"
flags can be used.
.LP
In all places where a
.B hostname
is expected, one can also enta an
.B "IP address"
in dotted-decimal notation.
.P
As a special case fo' compatibilitizzle tha order of tha hostname and
the hardware address can be exchanged.
.LP
Each complete entry up in tha ARP cache is ghon be marked wit the
.B C
flag. Permanent entries is marked with
.B M
and published entries have the
.B P
flag.
.SH EXAMPLES
.B /usr/sbin/arp -i eth0 -Ds 10.0.0.2 eth1 pub

This will answer ARP requests fo' 10.0.0.2 on eth0 wit tha MAC address for
eth1.

.B /usr/sbin/arp -i eth1 -d 10.0.0.1

Delete tha ARP table entry fo' 10.0.0.1 on intercourse eth1. This will match
published proxy ARP entries n' permanent entries.
.SH FILES
.I /proc/net/arp
.br
.I /etc/networks
.br
.I /etc/hosts
.br
.I /etc/ethers
.SH SEE ALSO
.BR ip(8)
.SH AUTHORS
Fred N. van Kempen <waltje@uwalt.nl.mugnet.org>, Bernd Eckenfels <net\-tools@lina.inka.de>.
