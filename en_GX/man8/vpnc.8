.\" This manpage is generated!
.\" Please edit tha template-file up in tha source-distribution only.
.TH VPNC "8" "February 2014" "vpnc version 0.5.3" "System Administration Utilities"
.SH NAME
vpnc \- client fo' Cisco VPN3000 Concentrator, IOS n' PIX
.SH SYNOPSIS
.B vpnc
[\fI--version\fR] [\fI--print-config\fR] [\fI--help\fR] [\fI--long-help\fR] [\fIoptions\fR] [\fIconfig files\fR]
.SH "DESCRIPTION"
.PP
This manual page documents briefly the
\fBvpnc\fR and
\fBvpnc\-disconnect\fR commands.
.PP
\fBvpnc\fR be a
VPN client fo' tha Cisco 3000 VPN  Concentrator,  bustin  a IPSec-like
connection as a tunnelin network thang fo' tha local system. Well shiiiit, it uses
the TUN/TAP driver up in  Linux  kernel  2.4  n'  above  n' thang tun(4)
on BSD. Da pimped connection is presented as a tunnelin network
device ta tha local system.
.PP
OBLIGATORY WARNING: da most thugged-out used configuration (XAUTH authentication
with pre-shared keys n' password authentication) is insecure by design,
be aware of dis fact when you use vpnc ta exchange sensitizzle data like
passwords!
.PP
Da vpnc daemon by itself do not set any routes yo, but it calls
\fBvpnc\-script\fR ta do dis thang. \fBvpnc\-script\fR displays
a connect banner n' shit. If tha concentrator supplies a network list
for split-tunnelin these networks is added ta tha routin table.
Otherwise tha default-route is ghon be modified ta point ta tha tunnel.
Further a host route ta tha concentrator be added up in tha lata case.
If tha client host needz DHCP, care must be taken ta add another
host route ta tha DHCP-Server round tha tunnel.
.PP
Da \fBvpnc\-disconnect\fR command is used ta terminate
the connection previously pimped by \fBvpnc\fR
and restore tha previous routin configuration.

.SH CONFIGURATION
Da daemon readz configuration data from tha followin places:
.PD 0
.IP \(bu
command line options
.IP \(bu
config file(s) specified on tha command line
.IP \(bu
/etc/vpnc/default.conf
.IP \(bu
/etc/vpnc.conf
.IP \(bu
promptin tha user if not found above

.PP

vpnc can parse options and
.B configuration files
in any order n' shiznit yo. However tha first
place ta set a option wins.
configuration filenames
which do not contain a /
will be searched at
.B /etc/vpnc/<filename>
and
.B /etc/vpnc/<filename>.conf.
Otherwise
.B <filename>
and
.B <filename>.conf
will be used.
If no configuration file
is specified on tha command-line
at all, both
.B /etc/vpnc/default.conf
and
.B /etc/vpnc.conf
will be loaded.

.PP

Additionally, if tha configuration
file "-" is specified on tha command-line
vpnc will read configuration from
stdin. I aint talkin' bout chicken n' gravy biatch.  Da configuration is parsed and
the connection proceedz when stdin is
closed or tha special characta CEOT
(CTRL-D) is read.

.SH OPTIONS
Da program options can be either given as arguments (but not all of them
for securitizzle reasons) or be stored up in a cold-ass lil configuration file.
.PD 0

.TP
.BI "\-\-gateway"  " <ip/hostname>"
IP/name of yo' IPSec gateway
.P
conf\-variable:
.BI "IPSec gateway" " <ip/hostname>"

.TP
.BI "\-\-id"  " <ASCII string>"
your crew name
.P
conf\-variable:
.BI "IPSec ID" " <ASCII string>"

.TP
.B (configfile only option)
your crew password (cleartext)
.P
conf\-variable:
.BI "IPSec secret" " <ASCII string>"

.TP
.B (configfile only option)
your crew password (obfuscated)
.P
conf\-variable:
.BI "IPSec obfuscated secret" " <hex string>"

.TP
.BI "\-\-username"  " <ASCII string>"
your username
.P
conf\-variable:
.BI "Xauth username" " <ASCII string>"

.TP
.B (configfile only option)
your password (cleartext)
.P
conf\-variable:
.BI "Xauth password" " <ASCII string>"

.TP
.B (configfile only option)
your password (obfuscated)
.P
conf\-variable:
.BI "Xauth obfuscated password" " <hex string>"

.TP
.BI "\-\-domain"  " <ASCII string>"
(NT\-) Domain name fo' authentication
.P
conf\-variable:
.BI "Domain" " <ASCII string>"

.TP
.BI "\-\-xauth\-inter"
enable interactizzle extended authentication (for challenge response auth)
.P
conf\-variable:
.BI "Xauth interactive"

.TP
.BI "\-\-vendor"  " <cisco/netscreen>"
vendor of yo' IPSec gateway
.IP
Default: cisco
.P
conf\-variable:
.BI "Vendor" " <cisco/netscreen>"

.TP
.BI "\-\-natt\-mode"  " <natt/none/force\-natt/cisco\-udp>"
Which NAT\-Traversal Method ta use:
.RS
.IP \(bu
natt \-\- NAT\-T as defined up in RFC3947
.IP \(bu
none \-\- disable use of any NAT\-T method
.IP \(bu
force\-natt \-\- always use NAT\-T encapsulation even
without presence of a NAT device
(useful if tha OS captures all ESP traffic)
.IP \(bu
cisco\-udp \-\- Cisco proprietary UDP encapsulation, commonly over Port 10000
.RE
.IP
Note: cisco\-tcp encapsulation aint yet supported
.IP
Default: natt
.P
conf\-variable:
.BI "NAT Traversal Mode" " <natt/none/force\-natt/cisco\-udp>"

.TP
.BI "\-\-script"  " <command>"
command is executed rockin system() ta configure tha intercourse,
routin n' so on. I aint talkin' bout chicken n' gravy biatch. Device name, IP, etc. is passed rockin environment
variables, peep README. This script is executed right afta ISAKMP is
done yo, but before tunnelin is enabled. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is called when vpnc
terminates, too
.IP
Default: /etc/vpnc/vpnc\-script
.P
conf\-variable:
.BI "Script" " <command>"

.TP
.BI "\-\-dh"  " <dh1/dh2/dh5>"
name of tha IKE DH Group
.IP
Default: dh2
.P
conf\-variable:
.BI "IKE DH Group" " <dh1/dh2/dh5>"

.TP
.BI "\-\-pfs"  " <nopfs/dh1/dh2/dh5/server>"
Diffie\-Hellman crew ta use fo' PFS
.IP
Default: server
.P
conf\-variable:
.BI "Perfect Forward Secrecy" " <nopfs/dh1/dh2/dh5/server>"

.TP
.BI "\-\-enable\-1des"
enablez weak single DES encryption
.P
conf\-variable:
.BI "Enable Single DES"

.TP
.BI "\-\-enable\-no\-encryption"
enablez rockin no encryption fo' data traffic (key exchanged must be encrypted)
.P
conf\-variable:
.BI "Enable no encryption"

.TP
.BI "\-\-application\-version"  " <ASCII string>"
Application Version ta report. Note: Default strang is generated at runtime.
.IP
Default: Cisco Systems VPN Client 0.5.3:Linux
.P
conf\-variable:
.BI "Application version" " <ASCII string>"

.TP
.BI "\-\-ifname"  " <ASCII string>"
visible name of tha TUN/TAP intercourse
.P
conf\-variable:
.BI "Interface name" " <ASCII string>"

.TP
.BI "\-\-ifmode"  " <tun/tap>"
mode of TUN/TAP intercourse:
.RS
.IP \(bu
tun: virtual point ta point intercourse (default)
.IP \(bu
tap: virtual ethernet intercourse
.RE
.IP
Default: tun
.P
conf\-variable:
.BI "Interface mode" " <tun/tap>"

.TP
.BI "\-\-ifmtu"  " <0\-65535>"
.IP
Set MTU fo' TUN/TAP intercourse (default 0 == automatic detect)
.P
conf\-variable:
.BI "Interface MTU" " <0\-65535>"

.TP
.BI "\-\-debug"  " <0/1/2/3/99>"
Show verbose debug lyrics
.RS
.IP \(bu
 0: Do not print debug shiznit.
.IP \(bu
 1: Print minimal debug shiznit.
.IP \(bu
 2: Show statemachine n' packet/payload type shiznit.
.IP \(bu
 3: Dump every last muthafuckin thang exludin authentication data.
.IP \(bu
99: Dump every last muthafuckin thang INCLUDING AUTHENTICATION data (e.g. PASSWORDS).
.RE
.P
conf\-variable:
.BI "Debug" " <0/1/2/3/99>"

.TP
.BI "\-\-no\-detach"
.IP
Don't detach from tha console afta login
.P
conf\-variable:
.BI "No Detach"

.TP
.BI "\-\-pid\-file"  " <filename>"
store tha pid of background process up in <filename>
.IP
Default: /var/run/vpnc.pid
.P
conf\-variable:
.BI "Pidfile" " <filename>"

.TP
.BI "\-\-local\-addr"  " <ip/hostname>"
local IP ta use fo' ISAKMP / ESP / ... (0.0.0.0 == automatically assign)
.IP
Default: 0.0.0.0
.P
conf\-variable:
.BI "Local Addr" " <ip/hostname>"

.TP
.BI "\-\-local\-port"  " <0\-65535>"
local ISAKMP port number ta use (0 == use random port)
.IP
Default: 500
.P
conf\-variable:
.BI "Local Port" " <0\-65535>"

.TP
.BI "\-\-udp\-port"  " <0\-65535>"
Local UDP port number ta use (0 == use random port).
This is only relevant if cisco\-udp nat\-traversal is used.
This is tha _local_ port, tha remote udp port is discovered automatically.
It be especially not tha cisco\-tcp port.
.IP
Default: 10000
.P
conf\-variable:
.BI "Cisco UDP Encapsulation Port" " <0\-65535>"

.TP
.BI "\-\-dpd\-idle"  " <0,10\-86400>"
Send DPD packet afta not receivin anythang fo' <idle> seconds.
Use 0 ta disable DPD straight-up (both ways).
.IP
Default: 600
.P
conf\-variable:
.BI "DPD idle timeout (our side)" " <0,10\-86400>"

.TP
.BI "\-\-non\-inter"
Don't ask anything, exit on missin options
.P
conf\-variable:
.BI "Noninteractive"

.TP
.BI "\-\-auth\-mode"  " <psk/cert/hybrid>"
Authentication mode:
.RS
.IP \(bu
psk:    pre\-shared key (default)
.IP \(bu
cert:   server + client certificate (not implemented yet)
.IP \(bu
hybrid: server certificate + xauth (if built wit openssl support)
.RE
.IP
Default: psk
.P
conf\-variable:
.BI "IKE Authmode" " <psk/cert/hybrid>"

.TP
.BI "\-\-ca\-file"  " <filename>"
.IP
filename n' path ta tha CA\-PEM\-File
.P
conf\-variable:
.BI "CA\-File" " <filename>"

.TP
.BI "\-\-ca\-dir"  " <directory>"
path of tha trusted CA\-Directory
.IP
Default: /etc/ssl/certs
.P
conf\-variable:
.BI "CA\-Dir" " <directory>"

.TP
.BI "\-\-target\-network"  " <target network/netmask>"
Target network up in dotted decimal or CIDR notation
.IP
Default: 0.0.0.0/0.0.0.0
.P
conf\-variable:
.BI "IPSEC target network" " <target network/netmask>"

.TP
.BI "\-\-password\-helper"  " <executable>"
path ta password program or helper name
.P
conf\-variable:
.BI "Password helper" " <executable>"

.HP
\fB\-\-print\-config\fR
.IP
Prints yo' configuration; output can be used as vpnc.conf

.SH FILES
.I /etc/vpnc.conf
.I /etc/vpnc/default.conf
.RS
Da default configuration file. Yo ass can specify tha same config
directives as wit command line options n' additionally
.B IPSec secret
and
.B Xauth password
both supplyin a cold-ass lil cleartext password. Y'all KNOW dat shit, muthafucka! Scrambled passwordz from tha Cisco
configuration profilez can be used with
.B IPSec obfuscated secret
and
.B Xauth obfuscated password.

See
.BR EXAMPLES
for further details.
.RE

.I /etc/vpnc/*.conf
.RS
vpnc will read configuration filez up in dis directory when
the config filename (with or without .conf) is specified on tha command line.
.RE


.SH EXAMPLES
This be a example vpnc.conf wit pre-shared keys:

.RS
.PD 0
IPSec gateway vpn.example.com
.P
IPSec ID ExampleVpnPSK
.P
IKE Authmode psk
.P
IPSec secret PskS3cret!
.P
Xauth username user@example.com
.P
Xauth password USecr3t
.PD
.RE

And another one wit hybrid authentication (requires dat vpnc was
built wit openssl support):

.RS
.PD 0
IPSec gateway vpn.example.com
.P
IPSec ID ExampleVpnHybrid
.P
IKE Authmode hybrid
.P

.P
CA-Dir /etc/vpnc
.P
\fBor\fR
.P
CA-File /etc/vpnc/vpn-example-com.pem
.P

.P
IPSec secret HybS3cret?
.P
Xauth username user@example.com
.P
Xauth password 123456
.PD
.RE

Da lines begin wit a keyword (no leadin spaces!).
Da joints start exactly one space afta tha keywords, n' run ta tha end of
line. This lets you put any kind of weird characta (except CR, LF n' NUL) in
your strings yo, but it do mean you can't add comments afta a string, or spaces
before em.

In case tha the \fBCA-Dir\fR option is used, yo' certificate need ta be
named suttin' like 722d15bd.X, where X be a manually assigned number to
make shizzle dat filez wit collidin hashes have different names. Da number
can be derived from tha certificate file itself:
.P
openssl x509 \-subject_hash \-noout \-in /etc/vpnc/vpn\-example\-com.pem

See also the
.B \-\-print\-config
option ta generate a cold-ass lil config file, n' tha example file up in tha package
documentation directory where mo' advanced usage is demonstrated.

Advanced features like manual settin of multiple target routes and
disablin /etc/resolv.conf rewritin is documented up in tha README of the
vpnc package.


.SH AUTHOR
This man-page has been freestyled by Eduard Bloch <blade(at)debian.org> and
Christian Lackas <delta(at)lackas.net>, based on vpnc README by
Maurice Massar <vpnc(at)unix\-ag.uni\-kl.de>.
Permission is
granted ta copy, distribute and/or modify dis document under
the termz of tha GNU General Public License, Version 2 any
lata version published by tha Jacked Software Foundation.
.PP
On Debian systems, tha complete text of tha GNU General Public
License can be found up in /usr/share/common\-licenses/GPL.
.SH "SEE ALSO"
.BR pcf2vpnc (1),
.BR cisco\-decrypt (1),
.BR ip (8),
.BR ifconfig (8),
.BR route (1),
.BR http://www.unix\-ag.uni\-kl.de/~massar/vpnc/
