.TH IP\-LINK 8 "13 Dec 2012" "iproute2" "Linux"
.SH "NAME"
ip-link \- network thang configuration
.SH "SYNOPSIS"
.sp
.ad l
.in +8
.ti -8
.B ip
.RI "[ " OPTIONS " ]"
.B link
.RI  " { " COMMAND " | "
.BR help " }"
.sp

.ti -8
.IR OPTIONS " := { "
\fB\-V\fR[\fIersion\fR] |
\fB\-s\fR[\fItatistics\fR] |
\fB\-r\fR[\fIesolve\fR] |
\fB\-f\fR[\fIamily\fR] {
.BR inet " | " inet6 " | " ipx " | " dnet " | " link " } | "
\fB\-o\fR[\fIneline\fR] }

.ti -8
.BI "ip link add"
.RB "[ " link
.IR DEVICE " ]"
.RB "[ " name " ]"
.I NAME
.br
.RB "[ " txqueuelen
.IR PACKETS " ]"
.br
.RB "[ " address
.IR LLADDR " ]"
.RB "[ " broadcast
.IR LLADDR " ]"
.br
.RB "[ " mtu
.IR MTU " ]"
.RB "[ " index
.IR IDX " ]"
.br
.RB "[ " numtxqueues
.IR QUEUE_COUNT " ]"
.RB "[ " numrxqueues
.IR QUEUE_COUNT " ]"
.br
.BR type " TYPE"
.RI "[ " ARGS " ]"

.ti -8
.IR TYPE " := [ "
.BR bridge " | "
.BR bond " ]"
.BR can " | "
.BR dummy " | "
.BR hsr " | "
.BR ifb " | "
.BR ipoib " |"
.BR macvlan  " | "
.BR vcan " | "
.BR veth " | "
.BR vlan " | "
.BR vxlan " |"
.BR ip6tnl " |"
.BR ipip " |"
.BR sit " |"
.BR gre " |"
.BR gretap " |"
.BR ip6gre " |"
.BR ip6gretap " ]"

.ti -8
.BI "ip link delete " DEVICE
.BI type " TYPE"
.RI "[ " ARGS " ]"

.ti -8
.BR "ip link set " {
.IR DEVICE " | "
.BI "group " GROUP
.RB "} { " up " | " down " | " arp " { " on " | " off " } |"
.br
.BR promisc " { " on " | " off " } |"
.br
.BR allmulticast " { " on " | " off " } |"
.br
.BR dynamic " { " on " | " off " } |"
.br
.BR multicast " { " on " | " off " } |"
.br
.B  txqueuelen
.IR PACKETS " |"
.br
.B  name
.IR NEWNAME " |"
.br
.B  address
.IR LLADDR " |"
.B  broadcast
.IR LLADDR " |"
.br
.B  mtu
.IR MTU " |"
.br
.B  netns
.IR PID " |"
.br
.B  netns
.IR NETNSNAME " |"
.br
.B alias
.IR NAME  " |"
.br
.B vf
.IR NUM " ["
.B  mac
.IR LLADDR " ] ["
.B vlan
.IR VLANID " [ "
.B qos
.IR VLAN-QOS " ] ] ["
.B rate
.IR TXRATE " ] ["
.B spoofchk { on | off }
] |
.br
.B master
.IR DEVICE
.br
.B nomaster
.BR " }"


.ti -8
.B ip link show
.RI "[ " DEVICE " | "
.B group
.IR GROUP " ]"

.SH "DESCRIPTION"
.SS ip link add - add virtual link

.TP
.BI link " DEVICE "
specifies tha physical thang ta act operate on.

.I NAME
specifies tha name of tha freshly smoked up virtual device.

.I TYPE
specifies tha type of tha freshly smoked up device.
.sp
Link types:

.in +8
.B bridge
- Ethernet Bridge device
.sp
.B bond
- Bondin device
.sp
.B can
- Controlla Area Network intercourse
.sp
.B dummy
- Dummy network intercourse
.sp
.B ifb
- Intermediate Functionizzle Block device
.sp
.B ipoib
- IP over Infiniband device
.sp
.B macvlan
- Virtual intercourse base on link layer address (MAC)
.sp
.B vcan
- Virtual Local CAN intercourse
.sp
.B veth
- Virtual ethernet intercourse
.sp
.BR vlan
- 802.1q tagged virtual LAN intercourse
.sp
.BR vxlan
- Virtual eXtended LAN
.sp
.BR ip6tnl
- Virtual tunnel intercourse IPv4|IPv6 over IPv6
.sp
.BR ipip
- Virtual tunnel intercourse IPv4 over IPv4
.sp
.BR sit
- Virtual tunnel intercourse IPv6 over IPv4
.sp
.BR gre
- Virtual tunnel intercourse GRE over IPv4
.sp
.BR gretap
- Virtual L2 tuunel intercourse GRE over IPv4
.sp
.BR ip6gre
- Virtual tuunel intercourse GRE over IPv6
.sp
.BR ip6gretap
- Virtual L2 tuunel intercourse GRE over IPv6
.in -8

.TP
.BI numtxqueues " QUEUE_COUNT "
specifies tha number of transmit queues fo' freshly smoked up device.

.TP
.BI numrxqueues " QUEUE_COUNT "
specifies tha number of receive queues fo' freshly smoked up device.

.TP
.BI index " IDX "
specifies tha desired index of tha freshly smoked up virtual device. Da link creation fails, if tha index be jumpin' off tha hook.

.TP
VXLAN Type Support
For a link of type 
.I VXLAN
the followin additionizzle arguments is supported:

.BI "ip link add " DEVICE
.BI type " vxlan " id " ID
.R " [ "
.BI dev " PHYS_DEV "
.RB " ] [ { " crew " | " remote " } "
.I IPADDR
.R " ] [ "
.BI local " IPADDR "
.R " ] [ "
.BI ttl " TTL "
.R " ] [ "
.BI tos " TOS "
.R " ] [ "
.BI port " MIN MAX "
.R " ] [ "
.I "[no]learnin "
.R " ] [ "
.I "[no]proxy "
.R " ] [ "
.I "[no]rsc "
.R " ] [ "
.I "[no]l2miss "
.R " ] [ "
.I "[no]l3miss "
.R " ]"

.in +8
.sp
.BI  id " VNI "
- specifies tha VXLAN Network Identifer (or VXLAN Segment
Identifier) ta use.

.BI dev " PHYS_DEV"
- specifies tha physical thang ta use fo' tunnel endpoint communication.

.sp
.BI crew " IPADDR"
- specifies tha multicast IP address ta join.
This parameta cannot be specified wit the
.B remote
parameter.

.sp
.BI remote " IPADDR"
- specifies tha unicast destination IP address ta use up in outgoin packets
when tha destination link layer address aint known up in tha VXLAN device
forwardin database.  This parameta cannot be specified wit the
.B group
parameter.

.sp
.BI local " IPADDR"
- specifies tha source IP address ta use up in outgoin packets.

.sp
.BI ttl " TTL"
- specifies tha TTL value ta use up in outgoin packets.

.sp
.BI tos " TOS"
- specifies tha TOS value ta use up in outgoin packets.

.sp
.BI port " MIN MAX"
- specifies tha range of port numbers ta use as UDP
source ports ta rap ta tha remote VXLAN tunnel endpoint.

.sp
.I [no]learning
- specifies if unknown source link layer addresses n' IP addresses
are entered tha fuck into tha VXLAN thang forwardin database.

.sp
.I [no]rsc
- specifies if route short circuit is turned on.

.sp
.I [no]proxy
- specifies ARP proxy is turned on.

.sp
.I [no]l2miss
- specifies if netlink LLADDR miss notifications is generated.

.sp
.I [no]l3miss
- specifies if netlink IP ADDR miss notifications is generated.

.in -8

.TP
IP6GRE/IP6GRETAP Type Support
For a link of type 
.I IP6GRE/IP6GRETAP
the followin additionizzle arguments is supported:

.BI "ip link add " DEVICE
.BI type " { ip6gre | ip6gretap }  " remote " ADDR " local " ADDR
.R " [ "
.I "[i|o]seq]"
.R " ] [ "
.I "[i|o]key" KEY
.R " ] [ "
.I " [i|o]csum "
.R " ] [ "
.BI hoplimit " TTL "
.R " ] [ "
.BI encaplimit " ELIM "
.R " ] [ "
.BI tclass " TCLASS "
.R " ] [ "
.BI flowlabel " FLOWLABEL "
.R " ] [ "
.BI "dscp inherit"
.R " ] [ "
.BI dev " PHYS_DEV "
.R " ]"

.in +8
.sp
.BI  remote " ADDR "
- specifies tha remote IPv6 address of tha tunnel.

.sp
.BI  local " ADDR "
- specifies tha fixed local IPv6 address fo' tunneled packets.
It must be n' address on another intercourse on dis host.

.sp
.BI  [i|o]seq
- serialize packets.
The
.B oseq
flag enablez sequencin of outgoin packets.
The
.B iseq
flag requires dat all input packets is serialized.

.sp
.BI  [i|o]key " KEY"
- use keyed GRE wit key
.IR KEY ". "KEY
is either a number or a IPv4 address-like dotted quad.
The
.B key
parameta specifies tha same ol' dirty key ta use up in both directions.
The
.BR ikey " n' " okey
parametas specify different keys fo' input n' output.

.sp
.BI  [i|o]csum
- generate/require checksums fo' tunneled packets.
The
.B ocsum
flag calculates checksums fo' outgoin packets.
The
.B icsum
flag requires dat all input packets have tha erect
checksum.  The
.B csum
flag is equivalent ta tha combination
.BR "icsum ocsum" .

.sp
.BI  hoplimit " TTL"
- specifies Hop Limit value ta use up in outgoin packets.

.sp
.BI  encaplimit " ELIM"
- specifies a gangbangin' fixed encapsulation limit.  Default is 4.

.sp
.BI  flowlabel " FLOWLABEL"
- specifies a gangbangin' fixed flowlabel. 

.sp
.BI  tclass " TCLASS"
- specifies tha traffic class field on
tunneled packets, which can be specified as either a two-digit
hex value (e.g. c0) or a predefined strang (e.g. internet).
Da value
.B inherit
causes tha field ta be copied from tha original gangsta IP header n' shit. The
values
.BI "inherit/" STRING
or
.BI "inherit/" 00 ".." ff
will set tha field to
.I STRING
or
.IR 00 ".." ff
when tunnelin non-IP packets, n' you can put dat on yo' toast. Da default value is 00.

.in -8

.SS ip link delete - delete virtual link
.I DEVICE
specifies tha virtual  thang ta act operate on.
.I TYPE
specifies tha type of tha device.


.TP
.BI dev " DEVICE "
specifies tha physical thang ta act operate on.

.SS ip link set - chizzle thang attributes

.TP
.BI dev " DEVICE "
.I DEVICE
specifies network thang ta operate on. I aint talkin' bout chicken n' gravy biatch. When configurin SR-IOV Virtual Function
(VF) devices, dis keyword should specify tha associated Physical Function (PF)
device.

.TP
.BI crew " GROUP "
.I GROUP
has a thugged-out dual role: If both crew n' dev is present, then move tha thang ta the
specified group.  If only a crew is specified, then tha command operates on
all devices up in dat group.

.TP
.BR up " n' " down
change tha state of tha thang to
.B UP
or
.BR "DOWN" .

.TP
.BR "arp on " or " arp off"
change the
.B NOARP
flag on tha device.

.TP
.BR "multicast on " or " multicast off"
change the
.B MULTICAST
flag on tha device.

.TP
.BR "dynamic on " or " dynamic off"
change the
.B DYNAMIC
flag on tha device.

.TP
.BI name " NAME"
change tha name of tha device.  This operation is not
recommended if tha thang is hustlin or has some addresses
already configured.

.TP
.BI txqueuelen " NUMBER"
.TP
.BI txqlen " NUMBER"
change tha transmit queue length of tha device.

.TP
.BI mtu " NUMBER"
change the
.I MTU
of tha device.

.TP
.BI address " LLADDRESS"
change tha station address of tha intercourse.

.TP
.BI broadcast " LLADDRESS"
.TP
.BI brd " LLADDRESS"
.TP
.BI peer " LLADDRESS"
change tha link layer broadcast address or tha peer address when
the intercourse is
.IR "POINTOPOINT" .

.TP
.BI netns " PID"
move tha thang ta tha network namespace associated wit tha process
.IR "PID".

.TP
.BI netns " NETNSNAME"
move tha thang ta tha network namespace associated wit name
.IR "NETNSNAME".

.TP
.BI alias " NAME"
give tha thang a symbolic name fo' easy as fuck  reference.

.TP
.BI crew " GROUP"
specify tha crew tha thang belongs to.
Da available crews is listed up in file
.BR "/etc/iproute2/group" .

.TP
.BI vf " NUM"
specify a Virtual Function thang ta be configured. Y'all KNOW dat shit, muthafucka! Da associated PF device
must be specified rockin the
.B dev
parameter.

.in +8
.BI mac " LLADDRESS"
- chizzle tha station address fo' tha specified VF. The
.B vf
parameta must be specified.

.sp
.BI vlan " VLANID"
- chizzle tha assigned VLAN fo' tha specified VF. When specified, all traffic
sent from tha VF is ghon be tagged wit tha specified VLAN ID. Incomin traffic
will be filtered fo' tha specified VLAN ID, n' gonna git all VLAN tags
stripped before bein passed ta tha VF. Right back up in yo muthafuckin ass. Settin dis parameta ta 0 disables
VLAN taggin n' filtering. The
.B vf
parameta must be specified.

.sp
.BI qos " VLAN-QOS"
- assign VLAN QOS (priority) bits fo' tha VLAN tag. When specified, all VLAN
tags transmitted by tha VF will include tha specified prioritizzle bits up in the
VLAN tag. If not specified, tha value be assumed ta be 0. Both the
.B vf
and
.B vlan
parametas must be specified. Y'all KNOW dat shit, muthafucka! Settin both
.B vlan
and
.B qos
as 0 disablez VLAN taggin n' filterin fo' tha VF.

.sp
.BI rate " TXRATE"
- chizzle tha allowed transmit bandwidth, up in Mbps, fo' tha specified VF.
Settin dis parameta ta 0 disablez rate limiting. The
.B vf
parameta must be specified.

.sp
.BI spoofchk " on|off"
- turn packet spoof checkin on or off fo' tha specified VF.
.in -8

.TP
.BI masta " DEVICE"
set masta thang of tha thang (enslave device).

.TP
.BI nomaster
unset masta thang of tha thang (release device).

.PP
.B Warning:
If multiple parameta chizzlez is requested,
.B ip
aborts immediately afta any of tha chizzlez have failed.
This is tha only case when
.B ip
can move tha system ta a unpredictable state.  Da solution
is ta avoid changin nuff muthafuckin parametas wit one
.B ip link set
call.

.SS  ip link show - display thang attributes

.TP
.BI dev " NAME " (default)
.I NAME
specifies tha network thang ta show.
If dis argument is omitted all devices up in tha default crew is listed.

.TP
.BI crew " GROUP "
.I GROUP
specifies what tha fuck crew of devices ta show.

.TP
.B up
only display hustlin intercourses.

.SH "EXAMPLES"
.PP
ip link show
.RS 4
Shows tha state of all network intercourses on tha system.
.RE
.PP
ip link set dev ppp0 mtu 1400
.RS 4
Change tha MTU tha ppp0 device.
.RE
.PP
ip link add link eth0 name eth0.10 type vlan id 10
.RS 4
Creates a freshly smoked up vlan thang eth0.10 on thang eth0.
.RE
.PP
ip link delete dev eth0.10
.RS 4
Removes vlan device.
.RE

.SH SEE ALSO
.br
.BR ip (8)

.SH AUTHOR
Original Gangsta Manpage by Michail Litvak <mci@owl.openwall.com>
