'\" t
.\"     Title: pam
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/19/2013
.\"    Manual: Linux-PAM Manual
.\"    Source: Linux-PAM Manual
.\"  Language: Gangsta
.\"
.TH "PAM" "8" "09/19/2013" "Linux-PAM Manual" "Linux-PAM Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
PAM, pam \- Pluggable Authentication Modulez fo' Linux
.SH "DESCRIPTION"
.PP
This manual is intended ta offer a quick introduction to
\fBLinux\-PAM\fR\&. For mo' shiznit tha reader is pimped up ta the
\fBLinux\-PAM system administrators\*(Aq guide\fR\&.
.PP
\fBLinux\-PAM\fR
is a system of libraries dat handle tha authentication taskz of applications (skillz) on tha system\&. Da library serves up a stable general intercourse (Application Programmin Interface \- API) dat privilege grantin programs (such as
\fBlogin\fR(1)
and
\fBsu\fR(1)) defer ta ta big-ass up standard authentication tasks\&.
.PP
Da principal feature of tha PAM approach is dat tha nature of tha authentication is dynamically configurable\&. In other lyrics, tha system administrator is free ta chizzle how tha fuck individual service\-providin applications will authenticate users\&. This dynamic configuration is set by tha contentz of tha single
\fBLinux\-PAM\fR
configuration file
/etc/pam\&.conf\& fo' realz. Alternatively, tha configuration can be set by individual configuration filez located up in the
/etc/pam\&.d/
directory\&. Da presence of dis directory will cause
\fBLinux\-PAM\fR
to
\fIignore\fR/etc/pam\&.conf\&.
.PP
From tha deal wit view of tha system administrator, fo' whom dis manual is provided, it aint of primary importizzle ta KNOW tha internal behavior of the
\fBLinux\-PAM\fR
library\&. Da blingin point ta recognize is dat tha configuration file(s)
\fIdefine\fR
the connection between applications
(\fBskillz\fR) n' tha pluggable authentication modules
(\fBPAM\fRs) dat big-ass up tha actual authentication tasks\&.
.PP
\fBLinux\-PAM\fR
separates tha tasks of
\fIauthentication\fR
into four independent pimpment groups:
\fBaccount\fR
management;
\fBauth\fRentication pimpment;
\fBpassword\fR
management; and
\fBsession\fR
management\&. (Our thugged-out asses highlight tha abbreviations used fo' these crews up in tha configuration file\&.)
.PP
Simply put, these crews take care of different aspectz of a typical user\*(Aqs request fo' a restricted service:
.PP
\fBaccount\fR
\- provide account verification typez of service: has tha user\*(Aqs password expired?; is dis user permitted access ta tha axed service?
.PP
\fBauth\fRentication \- authenticate a user n' set up user credentials\&. Typically dis is via some challenge\-response request dat tha user must satisfy: if yo ass is whoz ass you claim ta be please enta yo' password\&. Not all authentications iz of dis type, there exist hardware based authentication schemes (like fuckin tha use of smart\-cardz n' biometric devices), wit suitable modules, these may be substituted seamlessly fo' mo' standard approaches ta authentication \- such is tha flexibilitizzle of
\fBLinux\-PAM\fR\&.
.PP
\fBpassword\fR
\- dis group\*(Aqs responsibilitizzle is tha task of uppimpin authentication mechanisms\&. Typically, such skillz is straight fuckin coupled ta dem of the
\fBauth\fR
group\&. Right back up in yo muthafuckin ass. Some authentication mechanizzlez lend theyselves well ta bein updated wit such a gangbangin' function\&. Right back up in yo muthafuckin ass. Standard UN*X password\-based access is tha obvious example: please enta a replacement password\&.
.PP
\fBsession\fR
\- dis crew of tasks cover thangs dat should be done prior ta a steez bein given n' afta it is withdrawn\&. Right back up in yo muthafuckin ass. Such tasks include tha maintenizzle of audit trails n' tha mountin of tha user\*(Aqs home directory\&. The
\fBsession\fR
management crew is blingin as it serves up both a openin n' closin hook fo' modulez ta affect tha skillz available ta a user\&.
.SH "FILES"
.PP
/etc/pam\&.conf
.RS 4
the configuration file
.RE
.PP
/etc/pam\&.d
.RS 4
the
\fBLinux\-PAM\fR
configuration directory\&. Generally, if dis directory is present, the
/etc/pam\&.conf
file is ignored\&.
.RE
.SH "ERRORS"
.PP
Typically errors generated by the
\fBLinux\-PAM\fR
system of libraries, is ghon be freestyled to
\fBsyslog\fR(3)\&.
.SH "CONFORMING TO"
.PP
DCE\-RFC 86\&.0, October 1995\&. Gotz Nuff additionizzle features yo, but remains backwardly compatible wit dis RFC\&.
.SH "SEE ALSO"
.PP
\fBpam\fR(3),
\fBpam_authenticate\fR(3),
\fBpam_sm_setcred\fR(3),
\fBpam_strerror\fR(3),
\fBPAM\fR(8)
