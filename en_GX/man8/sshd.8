.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All muthafuckin rights reserved
.\"
.\" As far as I be concerned, tha code I have freestyled fo' dis software
.\" can be used freely fo' any purpose.  Any derived versionz of this
.\" software must be clearly marked as such, n' if tha derived work is
.\" incompatible wit tha protocol description up in tha RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All muthafuckin rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All muthafuckin rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $OpenBSD: sshd.8,v 1.270 2013/06/27 14:05:37 jmc Exp $
.Dd $Mdocdate: June 27 2013 $
.Dt SSHD 8
.Os
.Sh NAME
.Nm sshd
.Nd OpenSSH SSH daemon
.Sh SYNOPSIS
.Nm sshd
.Bk -words
.Op Fl 46DdeiqTt
.Op Fl b Ar bits
.Op Fl C Ar connection_spec
.Op Fl c Ar host_certificate_file
.Op Fl E Ar log_file
.Op Fl f Ar config_file
.Op Fl g Ar login_grace_time
.Op Fl h Ar host_key_file
.Op Fl k Ar key_gen_time
.Op Fl o Ar option
.Op Fl p Ar port
.Op Fl u Ar len
.Ek
.Sh DESCRIPTION
.Nm
(OpenSSH Daemon) is tha daemon program for
.Xr ssh 1 .
Together these programs replace
.Xr rlogin 1
and
.Xr rsh 1 ,
and provide secure encrypted communications between two untrusted hosts
over a insecure network.
.Pp
.Nm
listens fo' connections from clients.
It be normally started at boot from
.Pa /etc/rc .
It forks a new
daemon fo' each incomin connection.
Da forked daemons handle
key exchange, encryption, authentication, command execution,
and data exchange.
.Pp
.Nm
can be configured rockin command-line options or a cold-ass lil configuration file
(by default
.Xr sshd_config 5 ) ;
command-line options override joints specified up in the
configuration file.
.Nm
rereadz its configuration file when it receives a hangup signal,
.Dv SIGHUP ,
by executin itself wit tha name n' options dat shiznit was started with, e.g.\&
.Pa /usr/sbin/sshd .
.Pp
Da options is as bigs up:
.Bl -tag -width Ds
.It Fl 4
Forces
.Nm
to use IPv4 addresses only.
.It Fl 6
Forces
.Nm
to use IPv6 addresses only.
.It Fl b Ar bits
Specifies tha number of bits up in tha ephemeral protocol version 1
server key (default 1024).
.It Fl C Ar connection_spec
Specify tha connection parametas ta use fo' the
.Fl T
extended test mode.
If provided, any
.Cm Match
directives up in tha configuration file
that would apply ta tha specified user, host, n' address is ghon be set before
the configuration is freestyled ta standard output.
Da connection parametas is supplied as keyword=value pairs.
Da keywordz are
.Dq user ,
.Dq host ,
.Dq laddr ,
.Dq lport ,
and
.Dq addr .
All is required n' may be supplied up in any order, either wit multiple
.Fl C
options or as a cold-ass lil comma-separated list.
.It Fl c Ar host_certificate_file
Specifies a path ta a cold-ass lil certificate file ta identify
.Nm
durin key exchange.
Da certificate file must match a host key file specified rockin the
.Fl h
option or the
.Cm HostKey
configuration directive.
.It Fl D
When dis option is specified,
.Nm
will not detach n' do not become a thugged-out daemon.
This allows easy as fuck  monitorin of
.Nm sshd .
.It Fl d
Debug mode.
Da server sendz verbose debug output ta standard error,
and do not put itself up in tha background.
Da server also aint gonna fork n' will only process one connection.
This option is only intended fo' debuggin fo' tha server.
Multiple
.Fl d
options increase tha debuggin level.
Maximum is 3.
.It Fl E Ar log_file
Append debug logs to
.Ar log_file
instead of tha system log.
.It Fl e
Write debug logs ta standard error instead of tha system log.
.It Fl f Ar config_file
Specifies tha name of tha configuration file.
Da default is
.Pa /etc/ssh/sshd_config .
.Nm
refuses ta start if there is no configuration file.
.It Fl g Ar login_grace_time
Gives tha grace time fo' clients ta authenticate theyselves (default
120 seconds).
If tha client fails ta authenticate tha user within
this nuff seconds, tha server disconnects n' exits.
A value of zero indicates no limit.
.It Fl h Ar host_key_file
Specifies a gangbangin' file from which a host key is read.
This option must be given if
.Nm
is not run as root (as tha normal
host key filez is normally not readable by mah playas but root).
Da default is
.Pa /etc/ssh/ssh_host_key
for protocol version 1, and
.Pa /etc/ssh/ssh_host_dsa_key ,
.Pa /etc/ssh/ssh_host_ecdsa_key
and
.Pa /etc/ssh/ssh_host_rsa_key
for protocol version 2.
It be possible ta have multiple host key filez for
the different protocol versions n' host key algorithms.
.It Fl i
Specifies that
.Nm
is bein run from
.Xr inetd 8 .
.Nm
is normally not run
from inetd cuz it need ta generate tha server key before it can
respond ta tha client, n' dis may take tenz of seconds.
Clients would gotta wait too long if tha key was regenerated every last muthafuckin time.
But fuck dat shiznit yo, tha word on tha street is dat wit lil' small-ass key sizes (e.g. 512) using
.Nm
from inetd may
be feasible.
.It Fl k Ar key_gen_time
Specifies how tha fuck often tha ephemeral protocol version 1 server key is
regenerated (default 3600 seconds, or one hour).
Da motivation fo' regeneratin tha key fairly
often is dat tha key aint stored anywhere, n' afta bout a hour
it becomes impossible ta recover tha key fo' decryptin intercepted
communications even if tha machine is cracked tha fuck into or physically
seized.
A value of zero indicates dat tha key aint NEVER gonna be regenerated.
.It Fl o Ar option
Can be used ta give options up in tha format used up in tha configuration file.
This is useful fo' specifyin options fo' which there is no separate
command-line flag.
For full detailz of tha options, n' they joints, see
.Xr sshd_config 5 .
.It Fl p Ar port
Specifies tha port on which tha server listens fo' connections
(default 22).
Multiple port options is permitted.
Ports specified up in tha configuration file wit the
.Cm Port
option is ignored when a cold-ass lil command-line port is specified.
Ports specified rockin the
.Cm ListenAddress
option override command-line ports.
.It Fl q
Quiet mode.
Nothang is busted ta tha system log.
Normally tha beginning,
authentication, n' termination of each connection is logged.
.It Fl T
Extended test mode.
Peep tha validitizzle of tha configuration file, output tha effectizzle configuration
to stdout n' then exit.
Optionally,
.Cm Match
rulez may be applied by specifyin tha connection parametas rockin one or more
.Fl C
options.
.It Fl t
Test mode.
Only check tha validitizzle of tha configuration file n' sanitizzle of tha keys.
This is useful fo' updating
.Nm
reliably as configuration options may chizzle.
.It Fl u Ar len
This option is used ta specify tha size of tha field
in the
.Li utmp
structure dat holdz tha remote host name.
If tha resolved host name is longer than
.Ar len ,
the dotted decimal value is ghon be used instead.
This allows hosts wit straight-up long host names that
overflow dis field ta still be uniquely identified.
Specifying
.Fl u0
indicates dat only dotted decimal addresses
should be put tha fuck into the
.Pa utmp
file.
.Fl u0
may also be used ta prevent
.Nm
from makin DNS requests unless tha authentication
mechanizzle or configuration requires dat shit.
Authentication mechanizzlez dat may require DNS include
.Cm RhostsRSAAuthentication ,
.Cm HostbasedAuthentication ,
and rockin a
.Cm from="pattern-list"
option up in a key file.
Configuration options dat require DNS include rockin a
USER@HOST pattern in
.Cm AllowUsers
or
.Cm DenyUsers .
.El
.Sh AUTHENTICATION
Da OpenSSH SSH daemon supports SSH protocols 1 n' 2.
Da default is ta use protocol 2 only,
though dis can be chizzled via the
.Cm Protocol
option in
.Xr sshd_config 5 .
Protocol 2 supports DSA, ECDSA n' RSA keys;
protocol 1 only supports RSA keys.
For both protocols,
each host has a host-specific key,
normally 2048 bits,
used ta identify tha host.
.Pp
Forward securitizzle fo' protocol 1 is provided through
an additionizzle server key,
normally 768 bits,
generated when tha server starts.
This key is normally regenerated every last muthafuckin minute if it has been used, and
is never stored on disk.
Whenever a cold-ass lil client connects, tha daemon respondz wit its public
host n' server keys.
Da client compares the
RSA host key against its own database ta verify dat it has not chizzled.
Da client then generates a 256-bit random number.
It encrypts this
random number rockin both tha host key n' tha server key, n' sends
the encrypted number ta tha server.
Both sides then use this
random number as a session key which is used ta encrypt all further
communications up in tha session.
Da rest of tha session is encrypted
usin a cold-ass lil conventionizzle cipher, currently Blowfish or 3DES, wit 3DES
bein used by default.
Da client selects tha encryption algorithm
to use from dem offered by tha server.
.Pp
For protocol 2,
forward securitizzle is provided all up in a Diffie-Hellman key agreement.
This key agreement thangs up in dis biatch up in a gangbangin' finger-lickin' dirty-ass shared session key.
Da rest of tha session is encrypted rockin a symmetric cipher, currently
128-bit AES, Blowfish, 3DES, CAST128, Arcfour, 192-bit AES, or 256-bit AES.
Da client selects tha encryption algorithm
to use from dem offered by tha server.
Additionally, session integritizzle is provided
all up in a cold-ass lil cryptographic message authentication code
(hmac-md5, hmac-sha1, umac-64, umac-128, hmac-ripemd160,
hmac-sha2-256 or hmac-sha2-512).
.Pp
Finally, tha server n' tha client enta a authentication dialog.
Da client tries ta authenticate itself using
host-based authentication,
hood key authentication,
GSSAPI authentication,
challenge-response authentication,
or password authentication.
.Pp
Regardless of tha authentication type, tha account is checked to
ensure dat it be accessible.  An account aint accessible if it is
locked, listed in
.Cm DenyUsers
or its crew is listed in
.Cm DenyGroups
\&.  Da definizzle of a locked account is system dependant. Right back up in yo muthafuckin ass. Some platforms
have they own account database (eg AIX) n' some modify tha passwd field (
.Ql \&*LK\&*
on Solaris n' UnixWare,
.Ql \&*
on HP-UX, containing
.Ql Nologin
on Tru64,
a leading
.Ql \&*LOCKED\&*
on FreeBSD n' a leading
.Ql \&!
on most Linuxes).
If there be a requirement ta disable password authentication
for tha account while allowin still public-key, then tha passwd field
should be set ta suttin' other than these joints (eg
.Ql NP
or
.Ql \&*NP\&*
).
.Pp
If tha client successfully authenticates itself, a gangbangin' finger-lickin' dialog for
preparin tha session is entered.
At dis time tha client may request
things like allocatin a pseudo-tty, forwardin X11 connections,
forwardin TCP connections, or forwardin tha authentication agent
connection over tha secure channel.
.Pp
Afta this, tha client either requests a gangbangin' finger-lickin' dirty-ass shell or execution of a cold-ass lil command.
Da sides then enta session mode.
In dis mode, either side may send
data at any time, n' such data is forwarded to/from tha shell or
command on tha server side, n' tha user terminal up in tha client side.
.Pp
When tha user program terminates n' all forwarded X11 n' other
connections done been closed, tha server sendz command exit status to
the client, n' both sides exit.
.Sh LOGIN PROCESS
When a user successfully logs in,
.Nm
does tha following:
.Bl -enum -offset indent
.It
If tha login is on a tty, n' no command has been specified,
prints last login time and
.Pa /etc/motd
(unless prevented up in tha configuration file or by
.Pa ~/.hushlogin ;
see the
.Sx FILES
section).
.It
If tha login is on a tty, recordz login time.
.It
Checks
.Pa /etc/nologin ;
if it exists, prints contents n' quits
(unless root).
.It
Changes ta run wit aiiight user privileges.
.It
Sets up basic environment.
.It
Readz tha file
.Pa ~/.ssh/environment ,
if it exists, n' playas is allowed ta chizzle they environment.
See the
.Cm PermitUserEnvironment
option in
.Xr sshd_config 5 .
.It
Changes ta userz home directory.
.It
If
.Pa ~/.ssh/rc
exists, runs it; else if
.Pa /etc/ssh/sshrc
exists, runs
it; otherwise runs xauth.
The
.Dq rc
filez is given tha X11
authentication protocol n' cookie up in standard input.
See
.Sx SSHRC ,
below.
.It
Runs userz shell or command.
.El
.Sh SSHRC
If tha file
.Pa ~/.ssh/rc
exists,
.Xr sh 1
runs it afta readin the
environment filez but before startin tha userz shell or command.
It must not produce any output on stdout; stderr must be used
instead.
If X11 forwardin is up in use, it will receive tha "proto cookie" pair in
its standard input (and
.Ev DISPLAY
in its environment).
Da script must call
.Xr xauth 1
because
.Nm
will not run xauth automatically ta add X11 cookies.
.Pp
Da primary purpose of dis file is ta run any initialization routines
which may be needed before tha userz home directory becomes
accessible; AFS be a particular example of such a environment.
.Pp
This file will probably contain some initialization code followed by
suttin' similar to:
.Bd -literal -offset 3n
if read proto cookie && [ -n "$DISPLAY" ]; then
	if [ `echo $DISPLAY | cut -c1-10` = 'localhost:' ]; then
		# X11UseLocalhost=yes
		echo add unix:`echo $DISPLAY |
		    cut -c11-` $proto $cookie
	else
		# X11UseLocalhost=no
		echo add $DISPLAY $proto $cookie
	fi | xauth -q -
fi
.Ed
.Pp
If dis file do not exist,
.Pa /etc/ssh/sshrc
is run, n' if that
does not exist either, xauth is used ta add tha cookie.
.Sh AUTHORIZED_KEYS FILE FORMAT
.Cm AuthorizedKeysFile
specifies tha filez containin hood keys for
hood key authentication;
if none is specified, tha default is
.Pa ~/.ssh/authorized_keys
and
.Pa ~/.ssh/authorized_keys2 .
Each line of tha file gotz nuff one
key (empty lines n' lines startin wit a
.Ql #
are ignored as
comments).
Protocol 1 hood keys consist of tha followin space-separated fields:
options, bits, exponent, modulus, comment.
Protocol 2 hood key consist of:
options, keytype, base64-encoded key, comment.
Da options field is optional;
its presence is determined by whether tha line starts
with a number or not (the options field never starts wit a number).
Da bits, exponent, modulus, n' comment fieldz give tha RSA key for
protocol version 1; the
comment field aint used fo' anythang (but may be convenient fo' the
user ta identify tha key).
For protocol version 2 tha keytype is
.Dq ecdsa-sha2-nistp256 ,
.Dq ecdsa-sha2-nistp384 ,
.Dq ecdsa-sha2-nistp521 ,
.Dq ssh-dss
or
.Dq ssh-rsa .
.Pp
Note dat lines up in dis file is probably nuff muthafuckin hundred bytes long
(because of tha size of tha hood key encoding) up ta a limit of
8 kilobytes, which permits DSA keys up ta 8 kilobits n' RSA
keys up ta 16 kilobits.
Yo ass don't wanna type dem in; instead, copy the
.Pa identity.pub ,
.Pa id_dsa.pub ,
.Pa id_ecdsa.pub ,
or the
.Pa id_rsa.pub
file n' edit dat shit.
.Pp
.Nm
enforces a minimum RSA key modulus size fo' protocol 1
and protocol 2 keyz of 768 bits.
.Pp
Da options (if present) consist of comma-separated option
specifications.
No spaces is permitted, except within double quotes.
Da followin option justifications is supported (note
that option keywordz is case-insensitive):
.Bl -tag -width Ds
.It Cm cert-authority
Specifies dat tha listed key be a cold-ass lil certification authoritizzle (CA) dat is
trusted ta validate signed certificates fo' user authentication.
.Pp
Certificates may encode access restrictions similar ta these key options.
If both certificate restrictions n' key options is present, da most thugged-out
restrictizzle union of tha two be applied.
.It Cm command="command"
Specifies dat tha command is executed whenever dis key is used for
authentication.
Da command supplied by tha user (if any) is ignored.
Da command is run on a pty if tha client requests a pty;
otherwise it is run without a tty.
If a 8-bit clean channel is required,
one must not request a pty or should specify
.Cm no-pty .
A quote may be included up in tha command by quotin it wit a funky-ass backslash.
This option might be useful
to restrict certain hood keys ta big-ass up just a specific operation.
An example might be a key dat permits remote backups but not a god damn thang else.
Note dat tha client may specify TCP and/or X11
forwardin unless they is explicitly prohibited.
Da command originally supplied by tha client be available up in the
.Ev SSH_ORIGINAL_COMMAND
environment variable.
Note dat dis option applies ta shell, command or subsystem execution.
Also note dat dis command may be superseded by either a
.Xr sshd_config 5
.Cm ForceCommand
directizzle or a cold-ass lil command embedded up in a cold-ass lil certificate.
.It Cm environment="NAME=value"
Specifies dat tha strang is ta be added ta tha environment when
loggin up in rockin dis key.
Environment variablez set dis way
override other default environment joints.
Multiple optionz of dis type is permitted.
Environment processin is disabled by default n' is
controlled via the
.Cm PermitUserEnvironment
option.
This option be automatically disabled if
.Cm UseLogin
is enabled.
.It Cm from="pattern-list"
Specifies dat up in addizzle ta hood key authentication, either tha canonical
name of tha remote host or its IP address must be present up in the
comma-separated list of patterns.
See PATTERNS in
.Xr ssh_config 5
for mo' shiznit on patterns.
.Pp
In addizzle ta tha wildcard matchin dat may be applied ta hostnames or
addresses, a
.Cm from
stanza may match IP addresses rockin CIDR address/masklen notation.
.Pp
Da purpose of dis option is ta optionally increase security: hood key
authentication by itself do not trust tha network or name servers or
anythang (but tha key); however, if some muthafucka somehow steals tha key, tha key
permits a intruder ta log up in from anywhere up in tha ghetto. Right back up in yo muthafuckin ass.
This additionizzle option make rockin a jacked key mo' hard as fuck (name
servers and/or routas would gotta be compromised up in addizzle to
just tha key).
.It Cm no-agent-forwarding
Forbidz authentication agent forwardin when dis key is used for
authentication.
.It Cm no-port-forwarding
Forbidz TCP forwardin when dis key is used fo' authentication.
Any port forward requests by tha client will return a error.
This might be used, e.g. up in connection wit the
.Cm command
option.
.It Cm no-pty
Prevents tty allocation (a request ta allocate a pty will fail).
.It Cm no-user-rc
Disablez execution of
.Pa ~/.ssh/rc .
.It Cm no-X11-forwarding
Forbidz X11 forwardin when dis key is used fo' authentication.
Any X11 forward requests by tha client will return a error.
.It Cm permitopen="host:port"
Limit local
.Li ``ssh -L''
port forwardin such dat it may only connect ta tha specified host and
port.
IPv6 addresses can be specified by enclosin tha address up in square brackets.
Multiple
.Cm permitopen
options may be applied separated by commas.
No pattern matchin is performed on tha specified hostnames,
they must be literal domains or addresses.
A port justification of
.Cm *
matches any port.
.It Cm principals="principals"
On a
.Cm cert-authority
line, specifies allowed principals fo' certificate authentication as a
comma-separated list.
At least one name from tha list must step tha fuck up in tha certificate's
list of principals fo' tha certificate ta be accepted.
This option is ignored fo' keys dat is not marked as trusted certificate
signers rockin the
.Cm cert-authority
option.
.It Cm tunnel="n"
Force a
.Xr tun 4
device on tha server.
Without dis option, tha next available thang is ghon be used if
the client requests a tunnel.
.El
.Pp
An example authorized_keys file:
.Bd -literal -offset 3n
# Comments allowed at start of line
ssh-rsa AAAAB3Nza...LiPk== user@example.net
from="*.sales.example.net,!pc.sales.example.net" ssh-rsa
AAAAB2...19Q== john@example.net
command="dump /home",no-pty,no-port-forwardin ssh-dss
AAAAC3...51R== example.net
permitopen="192.0.2.1:80",permitopen="192.0.2.2:25" ssh-dss
AAAAB5...21S==
tunnel="0",command="sh /etc/netstart tun0" ssh-rsa AAAA...==
jane@example.net
.Ed
.Sh SSH_KNOWN_HOSTS FILE FORMAT
The
.Pa /etc/ssh/ssh_known_hosts
and
.Pa ~/.ssh/known_hosts
filez contain host hood keys fo' all known hosts.
Da global file should
be prepared by tha administrator (optional), n' tha per-user file is
maintained automatically: whenever tha user connects from a unknown host,
its key be added ta tha per-user file.
.Pp
Each line up in these filez gotz nuff tha followin fields: markers (optional),
hostnames, bits, exponent, modulus, comment.
Da fieldz is separated by spaces.
.Pp
Da marker is optionizzle yo, but if it is present then it must be one of
.Dq @cert-authoritizzle ,
to indicate dat tha line gotz nuff a cold-ass lil certification authoritizzle (CA) key,
or
.Dq @revoked ,
to indicate dat tha key contained on tha line is revoked n' must not ever
be accepted.
Only one marker should be used on a key line.
.Pp
Hostnames be a cold-ass lil comma-separated list of patterns
.Pf ( Ql *
and
.Ql \&?
act as
wildcards); each pattern up in turn is matched against tha canonical host
name (when authenticatin a cold-ass lil client) or against tha user-supplied
name (when authenticatin a server).
A pattern may also be preceded by
.Ql \&!
to indicate negation: if tha host name matches a negated
pattern, it aint accepted (by dat line) even if it matched another
pattern on tha line.
A hostname or address may optionally be enclosed within
.Ql \&[
and
.Ql \&]
brackets then followed by
.Ql \&:
and a non-standard port number.
.Pp
Alternately, hostnames may be stored up in a hashed form which hides host names
and addresses should tha filez contents be disclosed.
Hashed hostnames start wit a
.Ql |
character.
Only one hashed hostname may step tha fuck up on a single line n' none of tha above
negation or wildcard operators may be applied.
.Pp
Bits, exponent, n' modulus is taken directly from tha RSA host key; they
can be obtained, fo' example, from
.Pa /etc/ssh/ssh_host_key.pub .
Da optionizzle comment field continues ta tha end of tha line, n' aint used.
.Pp
Lines startin with
.Ql #
and empty lines is ignored as comments.
.Pp
When struttin host authentication, authentication be accepted if any
matchin line has tha proper key; either one dat matches exactly or,
if tha server has presented a cold-ass lil certificate fo' authentication, tha key
of tha certification authoritizzle dat signed tha certificate.
For a key ta be trusted as a cold-ass lil certification authority, it must use the
.Dq @cert-authority
marker busted lyrics bout above.
.Pp
Da known hosts file also serves up a gangbangin' facilitizzle ta mark keys as revoked,
for example when it is known dat tha associated private key has been
stolen.
Revoked keys is specified by includin the
.Dq @revoked
marker all up in tha beginnin of tha key line, n' is never accepted for
authentication or as certification authoritizzles yo, but instead will
produce a warnin from
.Xr ssh 1
when they is encountered.
.Pp
It be permissible (but not
recommended) ta have nuff muthafuckin lines or different host keys fo' tha same
names.
This will inevitably happen when short formz of host names
from different domains is put up in tha file.
It be possible
that tha filez contain conflictin shiznit; authentication is
accepted if valid shiznit can be found from either file.
.Pp
Note dat tha lines up in these filez is typically hundredz of characters
long, n' you definitely don't wanna type up in tha host keys by hand.
Rather, generate dem by a script,
.Xr ssh-keyscan 1
or by taking
.Pa /etc/ssh/ssh_host_key.pub
and addin tha host names all up in tha front.
.Xr ssh-keygen 1
also offers some basic automated editin for
.Pa ~/.ssh/known_hosts
includin removin hosts matchin a host name n' convertin all host
names ta they hashed representations.
.Pp
An example ssh_known_hosts file:
.Bd -literal -offset 3n
# Comments allowed at start of line
closenet,...,192.0.2.53 1024 37 159...93 closenet.example.net
cvs.example.net,192.0.2.10 ssh-rsa AAAA1234.....=
# A hashed hostname
|1|JfKTdBh7rNbXkVAQCRp4OQoPfmI=|USECr3SWf1JUPsms5AqfD5QfxkM= ssh-rsa
AAAA1234.....=
# A revoked key
@revoked * ssh-rsa AAAAB5W...
# A CA key, accepted fo' any host up in *.mydomain.com or *.mydomain.org
@cert-authoritizzle *.mydomain.org,*.mydomain.com ssh-rsa AAAAB5W...
.Ed
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa ~/.hushlogin
This file is used ta suppress printin tha last login time and
.Pa /etc/motd ,
if
.Cm PrintLastLog
and
.Cm PrintMotd ,
respectively,
are enabled.
It do not suppress printin of tha banner specified by
.Cm Banner .
.Pp
.It Pa ~/.rhosts
This file is used fo' host-based authentication (see
.Xr ssh 1
for mo' shiznit).
On some machines dis file may need ta be
world-readable if tha userz home directory is on a NFS partition,
because
.Nm
readz it as root.
Additionally, dis file must be owned by tha user,
and must not have write permissions fo' any suckas.
Da recommended
permission fo' most machines is read/write fo' tha user, n' not
accessible by others.
.Pp
.It Pa ~/.shosts
This file is used up in exactly tha same way as
.Pa .rhosts ,
but allows host-based authentication without permittin login with
rlogin/rsh.
.Pp
.It Pa ~/.k5login
.It Pa ~/.k5users
These filez enforce GSSAPI/Kerberos authentication access control.
Further details is busted lyrics bout in
.Xr ksu 1 .
.Pp
.It Pa ~/.ssh/
This directory is tha default location fo' all user-specific configuration
and authentication shiznit.
There is no general requirement ta keep tha entire contentz of dis directory
secret yo, but tha recommended permissions is read/write/execute fo' tha user,
and not accessible by others.
.Pp
.It Pa ~/.ssh/authorized_keys
Lists tha hood keys (DSA/ECDSA/RSA) dat can be used fo' loggin in
as dis user.
Da format of dis file is busted lyrics bout above.
Da content of tha file aint highly sensitizzle yo, but tha recommended
permissions is read/write fo' tha user, n' not accessible by others.
.Pp
If dis file, the
.Pa ~/.ssh
directory, or tha userz home directory is writable
by other users, then tha file could be modified or replaced by unauthorized
users.
In dis case,
.Nm
will not allow it ta be used unless the
.Cm StrictModes
option has been set to
.Dq no .
.Pp
.It Pa ~/.ssh/environment
This file is read tha fuck into tha environment at login (if it exists).
It can only contain empty lines, comment lines (that start with
.Ql # ) ,
and assignment linez of tha form name=value.
Da file should be writable
only by tha user; it need not be readable by any suckas.
Environment processin is disabled by default n' is
controlled via the
.Cm PermitUserEnvironment
option.
.Pp
.It Pa ~/.ssh/known_hosts
Gotz Nuff a list of host keys fo' all hosts tha user has logged into
that is not already up in tha systemwide list of known host keys.
Da format of dis file is busted lyrics bout above.
This file should be writable only by root/the balla and
can yo, but need not be, ghetto-readable.
.Pp
.It Pa ~/.ssh/rc
Gotz Nuff initialization routines ta be run before
the userz home directory becomes accessible.
This file should be writable only by tha user, n' need not be
readable by any suckas.
.Pp
.It Pa /etc/hosts.allow
.It Pa /etc/hosts.deny
Access controls dat should be enforced by tcp-wrappers is defined here.
Further details is busted lyrics bout in
.Xr hosts_access 5 .
.Pp
.It Pa /etc/hosts.equiv
This file is fo' host-based authentication (see
.Xr ssh 1 ) .
It should only be writable by root.
.Pp
.It Pa /etc/ssh/moduli
Gotz Nuff Diffie-Hellman crews used fo' tha "Diffie-Hellman Group Exchange".
Da file format is busted lyrics bout in
.Xr moduli 5 .
.Pp
.It Pa /etc/motd
See
.Xr motd 5 .
.Pp
.It Pa /etc/nologin
If dis file exists,
.Nm
refuses ta let mah playas except root log in.
Da contentz of tha file
are displayed ta mah playas tryin ta log in, n' non-root connections are
refused.
Da file should be ghetto-readable.
.Pp
.It Pa /etc/ssh/shosts.equiv
This file is used up in exactly tha same way as
.Pa hosts.equiv ,
but allows host-based authentication without permittin login with
rlogin/rsh.
.Pp
.It Pa /etc/ssh/ssh_host_key
.It Pa /etc/ssh/ssh_host_dsa_key
.It Pa /etc/ssh/ssh_host_ecdsa_key
.It Pa /etc/ssh/ssh_host_rsa_key
These filez contain tha private partz of tha host keys.
These filez should only be owned by root, readable only by root, n' not
accessible ta others.
Note that
.Nm
does not start if these filez is group/world-accessible.
.Pp
.It Pa /etc/ssh/ssh_host_key.pub
.It Pa /etc/ssh/ssh_host_dsa_key.pub
.It Pa /etc/ssh/ssh_host_ecdsa_key.pub
.It Pa /etc/ssh/ssh_host_rsa_key.pub
These filez contain tha hood partz of tha host keys.
These filez should be ghetto-readable but writable only by
root.
Their contents should match tha respectizzle private parts.
These filez is not
really used fo' anything; they is provided fo' tha convenience of
the user so they contents can be copied ta known hosts files.
These filez is pimped using
.Xr ssh-keygen 1 .
.Pp
.It Pa /etc/ssh/ssh_known_hosts
Systemwide list of known host keys.
This file should be prepared by the
system administrator ta contain tha hood host keyz of all machines up in the
organization.
Da format of dis file is busted lyrics bout above.
This file should be writable only by root/the balla and
should be ghetto-readable.
.Pp
.It Pa /etc/ssh/sshd_config
Gotz Nuff configuration data for
.Nm sshd .
Da file format n' configuration options is busted lyrics bout in
.Xr sshd_config 5 .
.Pp
.It Pa /etc/ssh/sshrc
Similar to
.Pa ~/.ssh/rc ,
it can be used ta specify
machine-specific login-time initializations globally.
This file should be writable only by root, n' should be ghetto-readable.
.Pp
.It Pa /var/empty/sshd
.Xr chroot 2
directory used by
.Nm
durin privilege separation up in tha pre-authentication phase.
Da directory should not contain any filez n' must be owned by root
and not crew or ghetto-writable.
.Pp
.It Pa /var/run/sshd.pid
Gotz Nuff tha process ID of the
.Nm
listenin fo' connections (if there be nuff muthafuckin daemons hustlin
concurrently fo' different ports, dis gotz nuff tha process ID of tha one
started last).
Da content of dis file aint sensitive; it can be ghetto-readable.
.El
.Sh ENVIRONMENT
.Bl -tag -width Ds -compact
.Pp
.It Pa SSH_USE_STRONG_RNG
Da reseedin of tha OpenSSL random generator is probably done from
.Cm /dev/urandom .
If tha 
.Cm SSH_USE_STRONG_RNG
environment variable is set ta value other than
.Cm 0
the OpenSSL random generator is reseeded from
.Cm /dev/random .
Da number of bytes read is defined by tha SSH_USE_STRONG_RNG value. 
Minimum is 14 bytes.
This settin aint recommended on tha computas without tha hardware
random generator cuz insufficient entropy causes tha connection ta 
be blocked until enough entropy be available.
.El
.Sh IPV6
IPv6 address can be used everywhere where IPv4 address. In all entries must be tha IPv6 address enclosed up in square brackets, n' you can put dat on yo' toast. Note: Da square brackets is metacharactas fo' tha shell n' must be escaped up in shell.
.Sh SEE ALSO
.Xr scp 1 ,
.Xr sftp 1 ,
.Xr ssh 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr ssh-keygen 1 ,
.Xr ssh-keyscan 1 ,
.Xr chroot 2 ,
.Xr hosts_access 5 ,
.Xr login.conf 5 ,
.Xr moduli 5 ,
.Xr sshd_config 5 ,
.Xr inetd 8 ,
.Xr sftp-server 8
.Sh AUTHORS
OpenSSH be a thugged-out derivatizzle of tha original gangsta n' free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt n' Dug Song
removed nuff bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed tha support fo' SSH
protocol versions 1.5 n' 2.0.
Niels Provos n' Markus Friedl contributed support
for privilege separation.
.Sh CAVEATS
System securitizzle aint improved unless
.Nm rshd ,
.Nm rlogind ,
and
.Nm rexecd
are disabled (thus straight-up disabling
.Xr rlogin
and
.Xr rsh
into tha machine).
