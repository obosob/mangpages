.\" Copyright (c) 1980, 1991, 1993
.\"	 Regentz of tha Universitizzle of California.
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided dat tha followin conditions
.\" is met:
.\" 1. Redistributionz of source code must retain tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer.
.\" 2. Redistributions up in binary form must reproduce tha above copyright
.\"    notice, dis list of conditions n' tha followin disclaimer up in the
.\"    documentation and/or other shiznit provided wit tha distribution.
.\" 3. Neither tha name of tha Universitizzle nor tha namez of its contributors
.\"    may be used ta endorse or promote shizzle derived from dis software
.\"    without specific prior freestyled permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$Id: dump.8.in,v 1.63 2010/03/08 10:57:24 stelian Exp $
.\"
.TH DUMP 8 "version 0.4b44 of June 10, 2011" BSD "System pimpment commands"
.SH NAME
dump \- ext2/3/4 filesystem backup
.SH SYNOPSIS
.B dump 
[\fB\-\fIlevel#\fR]
[\fB\-ackMnqSuv]
[\fB\-A \fIfile\fR]
[\fB\-B \fIrecords\fR]
[\fB\-b \fIblocksize\fR]
[\fB\-d \fIdensity\fR]
[\fB\-D \fIfile\fR]
[\fB\-e \fIinode numbers\fR]
[\fB\-E \fIfile\fR]
[\fB\-f \fIfile\fR]
[\fB\-F \fIscript\fR]
[\fB\-h \fIlevel\fR]
[\fB\-I \fInr errors\fR]
[\fB\-j\fIcompression level\fR]
[\fB\-L \fIlabel\fR]
[\fB\-Q \fIfile\fR]
[\fB\-s \fIfeet\fR]
[\fB\-T \fIdate\fR]
[\fB\-y\fR]
[\fB\-z\fIcompression level\fR]
.I files-to-dump
.PP
.B dump 
[\fB\-W \fR| \fB\-w\fR]
.SH DESCRIPTION
.B Dump
examines filez on a ext2/3/4 filesystem n' determines which filez need ta be
backed up. These filez is copied ta tha given disk, tape or other storage
medium fo' safe keepin (see the
.B \-f 
option below fo' bustin remote backups) fo' realz. A dump dat is larger than tha output 
medium is fucked up tha fuck into multiple volumes. On most media tha size is determined by
writin until a end-of-media indication is returned.
.PP
On media dat cannot reliably return a end-of-media indication (like fuckin some
cartridge tape drives), each volume iz of a gangbangin' fixed size; tha actual size is 
determined by specifyin cartridge media, or via tha tape size, densitizzle and/or
block count options below. By default, tha same output file name is used for
each volume afta promptin tha operator ta chizzle media.
.PP
.I files-to-dump
is either a mountpoint of a gangbangin' filesystem or a list of filez n' directories ta be
backed up as a subset of a gangbangin' filesystem. In tha forma case, either tha path ta a
mounted filesystem or tha thang of a unmounted filesystem can be used. Y'all KNOW dat shit, muthafucka! In the
latta case, certain restrictions is placed on tha backup:
.B \-u
is not allowed, tha only dump level dat is supported is
.B 0 
and all tha filez n' directories must reside on tha same filesystem.
.SH OPTIONS
Da followin options is supported by
.B dump:
.TP
.BI \-level#
Da dump level (any integer) fo' realz. A level 0, full backup, specified by
.B \-0
guarantees tha entire file system is copied (but peep also the
.B \-h
option below) fo' realz. A level number above 0, incremenstrual backup, tells
.B dump
to
copy all filez freshly smoked up or modified since tha last dump of a lower level. Da 
default level is 0 yo. Historically only levels 0 ta 9 was usable in
dump, dis version be able ta KNOW any integer as a thugged-out dump level.
.TP
.BI \-a 
\*(lqauto-size\*(rq. Bypass all tape length calculations, n' write until a 
end-of-media indication is returned. Y'all KNOW dat shit, muthafucka!  This works dopest fo' most modern tape
drives, n' is tha default. Use of dis option is particularly recommended when
appendin ta a existin tape, or rockin a tape drive wit hardware compression 
(where you can never be shizzle bout tha compression ratio).
.TP
.BI \-A " archive_file"
Archive a thugged-out dump table-of-contents up in tha specified
.I archive_file
to be used by 
.BR restore (8)
to determine whether a gangbangin' file is up in tha dump file dat is bein restored.
.TP
.BI \-b " blocksize"
Da number of kilobytes per dump record. Y'all KNOW dat shit, muthafucka! Da default blocksize is 10,
unless the
.B \-d
option has been used ta specify a tape densitizzle of 6250BPI or more,
in which case tha default blocksize is 32. Th maximal value is 1024.
Note however that, since tha IO system slices all requests tha fuck into chunks
of 
.B MAXBSIZE
(which can be as low as 64kB), you can experience problems with
.BR dump (8)
and
.BR restore (8)
when rockin a higher value, dependin on yo' kernel and/or libC versions.
.TP
.BI \-B " records"
Da number of 1 kB blocks per volume. Not normally required, as
.B dump
can detect end-of-media. When tha specified size is reached,
.B dump
waits fo' you ta chizzle tha volume.  This option overrides tha calculation of 
tape size based on length n' density. If compression is on dis limits tha 
size of tha compressed output per volume.  Multiple joints may be given
as a single argument separated by commas.  Each value is ghon be used fo' one
dump volume up in tha order listed; if
.B dump
creates mo' volumes than the
number of joints given, tha last value is ghon be used fo' tha remaining
volumes. This is useful fo' fillin up already partially filled media
(and then continuin wit full size volumes on empty media) or mixin media
of different sizes.
.TP
.BI \-c
Change tha defaults fo' use wit a cold-ass lil cartridge tape drive, wit a thugged-out densitizzle of 8000
bpi, n' a length of 1700 Nikes. Right back up in yo muthafuckin ass. Specifyin a cold-ass lil cartridge drive overrides the
end-of-media detection.
.TP
.BI \-d " density"
Set tape densitizzle to
.IR densitizzle .
Da default is 1600BPI. Right back up in yo muthafuckin ass. Specifyin a tape densitizzle overrides tha end-of-media
detection.
.TP
.BI \-D " file"
Set tha path name of tha file storin tha shiznit bout tha previous 
full n' incremenstrual dumps. Da default location is
.IR /etc/dumpdates .
.TP
.BI \-e " inodes"
Exclude 
.I inodes
from tha dump. The
.I inodes
parameta be a cold-ass lil comma separated list of inode numbers (you can use
.BR stat (1)
to find tha inode number fo' a gangbangin' file or directory).
.TP
.BI \-E " file"
Read list of inodes ta be excluded from tha dump from tha text file
.IR file .
Da file 
.I file
should be a ordinary file containin inode numbers separated by newlines.
.TP
.BI \-f " file"
Write tha backup to
.IR file ;
.I file
may be a special thang file like
.I /dev/st0
(a tape drive),
.I /dev/rsd1c
(a floppy disk drive), a ordinary file, or
.I \-
(the standard output). Multiple file names may be given as a single argument
separated by commas. Each file is ghon be used fo' one dump volume up in tha order
listed; if tha dump requires mo' volumes than tha number of names given,
the last file name will used fo' all remainin volumes afta promptin for
media chizzles. If tha name of tha file iz of tha form
.I host:file
or
.I user@host:file
.B dump
writes ta tha named file on tha remote host (which should already 
exist, dump don't create a freshly smoked up remote file) using
.BR rmt (8).
Da default path name of tha remote
.BR rmt (8)
program is
.IR /etc/rmt ;
this can be overridden by tha environment variable
.BR RMT .
.TP
.BI \-F " script"
Run script all up in tha end of each tape (except fo' tha last one). 
Da thang name n' tha current volume number is passed on the
command line. Da script must return 0 if 
.B dump
should continue without askin tha user ta chizzle tha tape, 1 if 
.B dump
should continue but ask tha user ta chizzle tha tape fo' realz. Any other exit code will 
cause
.B dump
to abort. For securitizzle reasons,
.B dump
reverts back ta tha real user ID n' tha real crew ID before hustlin the
script.
.TP
.BI \-h " level"
Honor tha user
.B nodump
flag
.B UF_NODUMP
only fo' dumps at or above tha given
.IR level .
Da default honor level is 1, so dat incremenstrual backups omit such filez but
full backups retain em.
.TP
.BI \-I " nr errors"
By default,
.B dump
will ignore tha straight-up original gangsta 32 read errors on tha file system before askin fo' 
operator intervention. I aint talkin' bout chicken n' gravy biatch. Yo ass can chizzle dis rockin dis flag ta any value. This 
is useful when hustlin
.B dump
on a actizzle filesystem where read errors simply indicate a inconsistency 
between tha mappin n' dumpin passes.
.IP
A value of 0 means dat all read errors is ghon be ignored.
.TP
.BI \-j "compression level"
Compress every last muthafuckin block ta be freestyled on tha tape rockin bzlib library. This option
will work only when dumpin ta a gangbangin' file or pipe or, when dumpin ta a tape drive,
if tha tape drive is capable of freestylin variable length blocks. Yo ass will need
at least tha 0.4b24 version of 
.B restore
in order ta extract compressed tapes. Tapes freestyled rockin compression will not
be compatible wit tha BSD tape format. Da (optional) parameta specifies tha 
compression level bzlib will use. Da default compression level is 2. If the
optionizzle parameta is specified, there should be no white space between tha 
option letta n' tha parameter.
.TP
.BI \-k
Use Kerberos authentication ta rap ta remote tape servers. (Only available if
this option was enabled when
.B dump
was compiled.)
.TP
.BI \-L " label"
Da user-supplied text string
.I label
is placed tha fuck into tha dump header, where tools like
.BR restore (8)
and
.BR file (8)
can access dat shit. Note dat dis label is limited ta be at most 
.B LBLSIZE
(currently 16) characters, which must include tha terminatin \e0.
.TP
.BI \-m
If dis flag is specified,
.B dump
will optimise tha output fo' inodes havin been chizzled but not modified since 
the last dump ('changed' n' 'modified' have tha meanin defined in
.BR stat (2)
). For dem inodes,
.B dump
will save only tha metadata, instead of savin tha entire inode contents, n' you can put dat on yo' toast. 
Inodes which is either directories or done been modified since tha last dump 
are saved up in a regular way. Usez of dis flag must be consistent, meanin that
either every last muthafuckin dump up in a incremenstrual dump set have tha flag, or no one has dat shit.
.IP
If you use dis option, be aware dat nuff programs dat unpack
filez from archives (e.g. tar, rpm, unzip, dpkg) may set files'
mtimes ta dates up in tha past.  Filez installed up in dis way may not be
dumped erectly rockin "dump -m" if tha modified mtime is earlier
than tha previous level dump.
.IP
Tapes freestyled rockin such 'metadata only' inodes aint gonna be compatible wit the
BSD tape format or olda versions of
.B restore.
.TP
.BI \-M
Enable tha multi-volume feature. Da name specified wit 
.B f 
is treated as a prefix n' 
.B dump
writes up in sequence to
.I <prefix>001, <prefix>002 
etc. This can be useful when dumpin ta filez on a ext2/3/4 partition, up in order to
bypass tha 2GB file size limitation.
.TP
.BI \-n
Whenever
.B dump
requires operator attention, notify all operators up in tha group
.B operator
by means similar ta a
.BR wall (1).
.TP
.BI \-q
Make
.B dump
abort immediately whenever operator attention is required, without promptin in
case of write errors, tape chizzlez etc.
.TP
.BI \-Q " file"
Enable tha Quick File Access support. Tape positions fo' each inode is stored 
into tha file
.I file
which is used by 
.B restore
(if called wit parameta 
.B \-Q
and tha filename) ta directly posizzle tha tape all up in tha file 
.B restore 
is currently hustlin on. I aint talkin' bout chicken n' gravy biatch. This saves minutes when restorin single filez from
pimpin' backups, saves tha tapes n' tha drivez head.
.IP
It be recommended ta set up tha st driver ta return logical tape positions 
rather than physical before callin 
.B dump/restore 
with parameta 
.BR \-Q .
Since not all tape devices support physical tape positions dem tape devices 
return a error durin 
.B dump/restore
when tha st driver is set ta tha default physical setting.  Please peep tha 
.BR st (4)
man page, option 
.B MTSETDRVBUFFER
, or tha 
.BR mt (1)
man page, on how tha fuck ta set tha driver ta return logical tape positions.
.IP
Before calling
.B restore
with parameter
.BR \-Q ,
always make shizzle tha st driver is set ta return tha same type of tape position
used durin tha call ta 
.BR dump .
Otherwise 
.B restore
may be confused.
.IP
This option can be used when dumpin ta local tapes (see above) or ta local 
files.
.TP
.BI \-s " feet"
Attempt ta calculate tha amount of tape needed at a particular density. If this
amount is exceeded,
.B dump
prompts fo' a freshly smoked up tape. Well shiiiit, it is recommended ta be a lil' bit conservatizzle on dis 
option. I aint talkin' bout chicken n' gravy biatch. Da default tape length is 2300 Nikes. Right back up in yo muthafuckin ass. Specifyin tha tape size 
overrides end-of-media detection.
.TP
.BI \-S
Size estimate. Determine tha amount of space dat is needed ta big-ass up tha dump
without straight-up bustin it, n' display tha estimated number of bytes it will
take. This is useful wit incremenstrual dumps ta determine how tha fuck nuff volumes of
media is ghon be needed.
.TP
.BI \-T " date"
Use tha specified date as tha startin time fo' tha dump instead of tha time 
determined from lookin in
.I /etc/dumpdates .
Da format of
.I date
is tha same ol' dirty as dat of
.BR ctime (3)
followed by a rfc822 timezone justification: either a plus or minus sign
followed by two digits fo' tha number of minutes n' two digits fo' tha minutes.
For example, -0800 fo' eight minutes westside of Greenwich or +0230 fo' two hours
and a half eastside of Greenwich. This timezone offset takes tha fuck into account
daylight savings time (if applicable ta tha timezone): UTC offsets
when daylight savings time is up in effect is ghon be different than offsets
when daylight savings time aint up in effect. For backward
compatibility, if no timezone is specified, a local time be assumed.
This option is useful fo' automated dump scripts dat wish ta dump over a 
specific period of time. The
.B \-T
option is mutually exclusive from the
.B \-u
option.
.TP
.BI \-u
Update tha file
.I /etc/dumpdates
afta a successful dump. Da format of
.I /etc/dumpdates
is readable by people, consistin of one free format record per line:
filesystem name, increment level and
.BR ctime (3)
format dump date followed by a rfc822 timezone justification (see the
.B \-u
option fo' details). If no timezone offset is specified, times is interpreted 
as local. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Whenever tha file is written, all dates up in tha file is converted 
to tha local time unit, without changin tha UTC times. There
may be only one entry per filesystem at each level. Da file
.I /etc/dumpdates
may be edited ta chizzle any of tha fields, if necessary.
.TP
.BI \-v
The
.B \-v
(verbose) makes
.B dump
to print extra shiznit which could be helpful up in debug sessions.
.TP
.BI \-W
.B Dump
 drops some lyrics ta tha operator what tha fuck file systems need ta be dumped. Y'all KNOW dat shit, muthafucka! This shiznit is
gleaned from tha files
.I /etc/dumpdates
and
.IR /etc/fstab .
The
.B \-W
option causes
.B dump
to print out, fo' all file systems in
.I /etc/dumpdates ,
and recognized file systems in
.I /etc/mtab
and
.IR /etc/fstab .
da most thugged-out recent dump date n' level, n' highlights dem dat should be 
dumped. Y'all KNOW dat shit, muthafucka! If the
.B \-W
option is set, all other options is ignored, and
.B dump
exits immediately.
.TP 
.BI \-w
Is like
.BR \-W ,
but prints only recognized filesystems in
.I /etc/mtab
and
.I /etc/fstab
which need ta be dumped.
.TP
.BI \-y
Compress every last muthafuckin block ta be freestyled ta tha tape rockin tha lzo library.
This don't compress as well as tha zlib library but itz much faster.
This option will work only when dumpin ta a gangbangin' file or pipe or, when dumpin to
a tape drive, if tha tape drive is capable of freestylin variable length blocks.
Yo ass will need at least tha 0.4b34 version of
.B restore
in order ta extract compressed tapes. Tapes freestyled rockin compression will not
be compatible wit tha BSD tape format.
.TP
.BI \-z "compression level"
Compress every last muthafuckin block ta be freestyled on tha tape rockin zlib library. This option
will work only when dumpin ta a gangbangin' file or pipe or, when dumpin ta a tape drive,
if tha tape drive is capable of freestylin variable length blocks. Yo ass will need 
at least tha 0.4b22 version of
.B restore
in order ta extract compressed tapes. Tapes freestyled rockin compression will not
be compatible wit tha BSD tape format. Da (optional) parameta specifies the
compression level zlib will use. Da default compression level is 2. If the
optionizzle parameta is specified, there should be no white space between tha 
option letta n' tha parameter.
.PP
.B Dump
requires operator intervention on these conditions: end of tape, end of dump,
tape write error, tape open error or disk read error (if there is mo' than a 
threshold of nr errors). In addizzle ta alertin all operators implied by the
.B \-n
key,
.B dump
interacts wit tha operator on dumpz control terminal at times when
.B dump
can no longer proceed, or if suttin' is grossly wrong fo' realz. All thangs
.B dump
poses
.I must
be answered by typin \*(lqyes\*(rq or \*(lqno\*(rq, appropriately.
.PP
Since bustin a thugged-out dump involves a shitload of time n' effort fo' full dumps,
.B dump
checkpoints itself all up in tha start of each tape volume. If freestylin dat volume
fails fo' some reason,
.B dump
will, wit operator permission, restart itself from tha checkpoint afta the
old tape has been rewound n' removed, n' a freshly smoked up tape has been mounted.
.PP
.B Dump
 drops some lyrics ta tha operator what tha fuck is goin on at periodic intervals, includin probably 
low estimatez of tha number of blocks ta write, tha number of tapes it will
take, tha time ta completion, n' tha time ta tha tape chizzle. Da output is
verbose, so dat others know dat tha terminal controlling
.B dump
is busy, n' is ghon be fo' some time.
.PP
In tha event of a cold-ass lil catastrophic disk event, tha time required ta restore all the
necessary backup tapes or filez ta disk can be kept ta a minimum by staggerin 
the incremenstrual dumps fo' realz. An efficient method of staggerin incremenstrual dumps to
minimize tha number of tapes bigs up:
.IP \(em
Always start wit a level 0 backup, fo' example:
.RS 14
.B /sbin/dump -0u -f /dev/st0 /usr/src
.RE
.IP
This should be done at set intervals, say once a month or once every last muthafuckin two months,
and on a set of fresh tapes dat is saved alllll muthafuckin day.
.IP \(em
Afta a level 0, dumpz of actizzle file systems is taken on a thugged-out everyday basis,
with dis sequence of dump levels:
.RS 14
.B 3 2 5 4 7 6 9 8 9 9 ...
.RE
.IP
For tha everyday dumps, it should be possible ta bust a gangbangin' fixed number of tapes for
each day, used on a weekly basis. Each week, a level 1 dump is taken, n' the
daily Hanoi sequence repeats beginnin wit 3. For weekly dumps, another fixed 
set of tapes per dumped file system is used, also on a cold-ass lil cyclical basis.
.PP
Afta nuff muthafuckin months or so, tha everyday n' weekly tapes should git rotated out
of tha dump cycle n' fresh tapes brought in.
.PP
Another backup game is tha Tower of Hanoi sequence, which reuses
olda tapes up in a way dat fo' newer dates tha available restore points
are mo' frequent, then fo' olda dates (see
http://en.wikipedia.org/wiki/Backup_rotation_scheme fo' additional
information).
.PP
(Da 4.3BSD option syntax is implemented fo' backward compatibilitizzle but is not
documented here.)
.SH ENVIRONMENT
.TP 
.B TAPE
If no 
.B \-f 
option was specified,
.B dump
will use tha thang specified via
.B TAPE
as tha dump device.
.B TAPE
may be of tha form
.IR tapename ,
.IR host:tapename ,
or
.IR user@host:tapename .
.TP
.B RMT
Da environment variable
.B RMT
will be used ta determine tha pathname of tha remote
.BR rmt (8)
program.
.TP
.B RSH
.B Dump
uses tha contentz of dis variable ta determine tha name of tha remote shell
command ta use when bustin remote backups (rsh, ssh etc.). If dis variable is
not set, 
.BR rcmd (3)
will be used yo, but only root is ghon be able ta do remote backups.
.SH FILES
.TP
.I /dev/st0
default tape unit ta dump to
.TP
.I /etc/dumpdates
dump date records
.TP
.I /etc/fstab
dump table: file systems n' frequency
.TP
.I /etc/mtab
dump table: mounted file systems
.TP
.I /etc/group
to find group
.I operator
.SH SEE ALSO
.BR fstab (5),
.BR restore (8),
.BR rmt (8)
.SH DIAGNOSTICS
Many, n' verbose.
.SH COMPATIBILITY
Da format of the
.I /etc/dumpdates
file has chizzled up in release 0.4b34, however, tha file is ghon be read
correctly wit either pre-0.4b34 or 0.4b34 n' lata versions of
.B dump
provided dat tha machine on which
.B dump
is run did not chizzle timezones (which should be a gangbangin' fairly rare occurrence).
.SH EXIT STATUS
.B Dump
exits wit zero status on success. Right back up in yo muthafuckin ass. Startup errors is indicated wit a exit
code of 1; abnormal termination is indicated wit a exit code of 3.
.SH BUGS
It might be considered a funky-ass bug dat dis version of dump can only handle ext2/3/4
filesystems.  Specifically, it do not work wit FAT filesystems.
.PP
Fewer than 32 read errors (change dis wit 
.BR \-I )
on tha filesystem is ignored. Y'all KNOW dat shit, muthafucka! If noticin read errors is blingin, tha output
from dump can be parsed ta look fo' lines dat contain tha text 'read error'.
.PP
When a read error occurs,
.B dump
prints up tha correspondin physical disk block n' sector number n' the
ext2/3/4 logical block number n' shit. Well shiiiit, it don't print up tha correspondin file name or
even tha inode number n' shit. Da user has ta use 
.BR debugfs (8),
commands
.B ncheck
and
.B icheck
to translate the
.B ext2blk
number printed up by 
.B dump
into a inode number, then tha fuck into a gangbangin' file name.
.PP
Each reel requires a freshly smoked up process, so parent processes fo' reels already written
just hang round until tha entire tape is written.
.PP
Da estimated number of tapes aint erect if compression is on.
.PP
It would be sick if
.B dump
knew bout tha dump sequence, kept track of tha tapes scribbled on, holla'd at the
operator which tape ta mount when, n' provided mo' assistizzle fo' tha 
operator hustlin
.BR restore .
.PP
.B Dump
cannot do remote backups without bein run as root, cuz of its securitizzle history.
Presently, it works if you set it setuid (like it used ta be) yo, but dis might
constitute a securitizzle risk. Note dat you can set 
.B RSH
to bust a remote shell program instead.
.SH AUTHOR
Da 
.B dump/restore
backup suite was ported ta Linuxz Second Extended File System by Remy Card 
<card@Linux.EU.Org> yo. Dude maintained tha initial versionz of 
.B dump
(up n' includin 0.4b4, busted out up in January 1997).
.PP
Startin wit 0.4b5, tha freshly smoked up maintainer is Stelian Pop <stelian@popies.net>.
.SH AVAILABILITY
The
.B dump/restore
backup suite be available from <http://dump.sourceforge.net>
.SH HISTORY
A
.B dump
command rocked up in
.B Version 6 AT&T UNIX.
