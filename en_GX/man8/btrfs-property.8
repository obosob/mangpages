'\" t
.\"     Title: btrfs-property
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/20/2014
.\"    Manual: Btrfs Manual
.\"    Source: Btrfs v3.17
.\"  Language: Gangsta
.\"
.TH "BTRFS\-PROPERTY" "8" "10/20/2014" "Btrfs v3\&.17" "Btrfs Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btrfs-property \- get/set/list propertizzles fo' given btrfs object\&.
.SH "SYNOPSIS"
.sp
\fBbtrfs property\fR \fI<subcommand>\fR \fI<args>\fR
.SH "DESCRIPTION"
.sp
\fBbtrfs property\fR is used ta get/set/list property, like lable or compression state, fo' given btrfs object\&.
.sp
\fBbtrfs property\fR serves up a unified n' user\-friendly method ta tune different btrfs propertizzles instead of rockin tha traditionizzle method like \fBchattr\fR(1) or \fBlsattr\fR(1)\&.
.SH "SUBCOMMAND"
.PP
\fBget\fR [\-t \fI<type>\fR] \fI<object>\fR [\fI<name>\fR]
.RS 4
Gets a property from a funky-ass btrfs object\&.
.sp
If no name is specified, all propertizzles fo' tha given object is printed\& fo' realz. A filesystem object can be a tha filesystem itself, a subvolume, a inode or a thugged-out device\&.
.sp
The
\fI\-t \*(Aq<type>\fR\*(Aq option can be used ta explicitly specify what tha fuck type of object you meant\&. This is only needed when a property could be set fo' mo' then one object type\&.
.sp
Possible types are
\fIs[ubvol]\fR,
\fIf[ilesystem]\fR,
\fIi[node]\fR
and
\fId[evice]\fR\&.
.sp
The
\fI<object>\fR
can be path of btrfs device, btrfs mount point, or any directories/filez inside btrfs\&.
.RE
.PP
\fBset\fR [\-t \fI<type>\fR] \fI<object>\fR \fI<name>\fR \fI<value>\fR
.RS 4
Sets a property on a funky-ass btrfs object\&.
.sp
See description of
\fBget\fR
subcommand fo' a thugged-out description of objects n' object types\&.
.RE
.PP
\fBlist\fR [\-t \fI<type>\fR] \fI<object>\fR
.RS 4
Lists available propertizzles wit they descriptions fo' tha given object\&.
.sp
Please peep tha help of
\fBbtrfs property get\fR
for a thugged-out description of objects n' object types\&.
.RE
.SH "EXIT STATUS"
.sp
\fBbtrfs property\fR returns a zero exit status if it succeeds\&. Non zero is returned up in case of failure\&.
.SH "AVAILABILITY"
.sp
\fBbtrfs\fR is part of btrfs\-progs\&. Please refer ta tha btrfs wiki \m[blue]\fBhttp://btrfs\&.wiki\&.kernel\&.org\fR\m[] fo' further details\&.
.SH "SEE ALSO"
.sp
\fBmkfs\&.btrfs\fR(8), \fBlsattr\fR(1), \fBchattr\fR(1)
