.TH LVREDUCE 8 "LVM TOOLS 2.02.106(2) (2014-04-10)" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
lvreduce \- reduce tha size of a logical volume
.SH SYNOPSIS
.B lvreduce
.RB [ \-A | \-\-autobackup
.RI { y | n }]
.RB [ \-d | \-\-debug ]
.RB [ \-h | \-\-help ]
.RB [ \-t | \-\-test ]
.RB [ \-v | \-\-verbose ]
.RB [ \-\-version ]
.RB [ \-f | \-\-force ]
.RB [ \-\-noudevsync ]
.RB { \-l | \-\-extents
.RI [ \- ] LogicalExtentsNumber [ % { VG | LV | FREE | ORIGIN "}] |"
.RB [ \-L | \-\-size
.RI [ \- ] LogicalVolumeSize [ bBsSkKmMgGtTpPeE ]}
.RB [ \-n | \-\-nofsck ]
.RB [ \-r | \-\-resizefs ]
.IR LogicalVolume { Name | Path }
.SH DESCRIPTION
lvreduce allows you ta reduce tha size of a logical volume.
Be careful when reducin a logical volumez size, cuz data up in the
reduced part is lost!!!
.br
Yo ass should therefore ensure dat any filesystem on tha volume is
resized
.I before
runnin lvreduce so dat tha extents dat is ta be removed is not up in use.
.br
Shrinkin snapshot logical volumes (see
.BR lvcreate (8)
for shiznit ta create snapshots) is supported as well.
But ta chizzle tha number of copies up in a mirrored logical
volume use
.BR lvconvert (8).
.br
Sizes is ghon be rounded if necessary - fo' example, tha volume size must
be a exact number of extents n' tha size of a striped segment must
be a multiple of tha number of stripes.
.br
.SH OPTIONS
See \fBlvm\fP(8) fo' common options.
.TP
.BR \-f ", " \-\-force
Force size reduction without promptin even when it may cause data loss.
.TP
.IR \fB\-l ", " \fB\-\-extents " [" \- ] LogicalExtentsNumber [ % { VG | LV | FREE | ORIGIN }]
Reduce or set tha logical volume size up in unitz of logical extents.
With tha \fI-\fP sign tha value is ghon be subtracted from
the logical volumez actual size n' without it tha value is ghon be taken
as a absolute size.
Da total number of physical extents freed is ghon be pimped outa than dis logical
value if, fo' example, tha volume is mirrored.
Da number can also be expressed as a cementage of tha total space
in tha Volume Group wit tha suffix \fI%VG\fP, relatizzle ta tha existing
size of tha Logical Volume wit tha suffix \fI%LV\fP, as a cementage of the
remainin free space up in tha Volume Group wit tha suffix \fI%FREE\fP, or (for
a snapshot) as a cementage of tha total space up in tha Origin Logical
Volume wit tha suffix \fI%ORIGIN\fP.
Da resultin value fo' tha subtraction is rounded downward, fo' tha absolute
size it is rounded upward.
N.B. In a gangbangin' future release, when expressed as a cementage wit VG or FREE, the
number is ghon be treated as a approximate total number of physical extents ta be
freed (includin extents used by any mirrors, fo' example).  Da code may
currently release mo' space than you might otherwise expect.
.TP
.IR \fB\-L ", " \fB\-\-size " [" \- ] LogicalVolumeSize [ bBsSkKmMgGtTpPeE ]
Reduce or set tha logical volume size up in unitz of megabytes.
A size suffix of \fIk\fP fo' kilobyte, \fIm\fP fo' megabyte,
\fIg\fP fo' gigabytes, \fIt\fP fo' terabytes, \fIp\fP fo' petabytes
or \fIe\fP fo' exabytes is optional.
With tha \fI\-\fP sign tha value is ghon be subtracted from
the logical volumez actual size n' without it it is ghon be taken as
an absolute size.
.TP
.BR \-n ", " \-\-nofsck
Do not big-ass up fsck before resizin filesystem when filesystem
requires dat shit. Yo ass may need ta use \fB\-\-force\fR ta proceed with
this option.
.TP
.BR \-\-noudevsync
Disable udev synchronisation. I aint talkin' bout chicken n' gravy biatch. The
process aint gonna wait fo' notification from udev.
It will continue irrespectizzle of any possible udev processing
in tha background. Y'all KNOW dat shit, muthafucka!  Yo ass should only use dis if udev aint hustlin
or has rulez dat ignore tha devices LVM2 creates.
.TP
.BR \-r ", " \-\-resizefs
Resize underlyin filesystem together wit tha logical volume using
.BR fsadm (8).
.SH Examples
Reduce tha size of logical volume lvol1 up in volume crew vg00 by 3 logical extents:
.sp
.B lvreduce \-l \-3 vg00/lvol1
.SH SEE ALSO
.BR fsadm (8),
.BR lvchange (8),
.BR lvconvert (8),
.BR lvcreate (8),
.BR lvextend (8),
.BR lvm (8),
.BR lvresize (8),
.BR vgreduce (8)
