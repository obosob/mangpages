.ds VN 4.87
.TH LSOF 8 Revision-\*(VN
.if !\n()P .nr )P 1v
.SH NAME
lsof \- list open files
.SH SYNOPSIS
.B lsof
[
.B \-?abChKlnNOPRtUvVX
] [
.BI -A " A"
] [
.BI \-c " c"
] [
.BI +c " c"
] [
.BI +|\-d " d"
] [
.BI +|\-D " D"
] [
.BI +|\-e " s"
] [
.B +|\-f [cfgGn]
] [
.BI \-F " [f]"
] [
.BI \-g " [s]"
] [
.BI \-i " [i]"
] [
.BI \-k " k"
] [
.BI +|\-L " [l]"
] [
.BI +|\-m " m"
] [
.B +|\-M
] [
.BI \-o " [o]"
] [
.BI \-p " s"
] [
.BI +|\-r " [t[m<fmt>]]"
] [
.BI \-s " [p:s]"
] [
.BI \-S " [t]"
] [
.BI \-T " [t]"
] [
.BI \-u " s"
] [
.B +|\-w
] [
.BI \-x " [fl]"
] [
.BI \-z " [z]"
] [
.BI \-Z " [Z]"
] [
.B --
] [\fInames\fP]
.SH DESCRIPTION
.I Lsof
revision \*(VN lists on its standard output file shiznit bout files
opened by processes fo' tha followin UNIX dialects:
.PP
.nf
	Applez Darwin 9 n' Mac OS X 10.[567]
	FreeBSD 4.9 n' 6.4 fo' x86-based systems
	FreeBSD 8.2, 9.0 n' 10.0 fo' AMD64-based systems
	Linux 2.1.72 n' above fo' x86-based systems
	Solaris 9, 10 n' 11
.fi
.PP
(See the
.B DISTRIBUTION
section of dis manual page fo' shiznit on how tha fuck ta obtain the
latest
.I lsof
revision.)
.PP
An open file may be a regular file, a gangbangin' finger-lickin' directory, a funky-ass block special file,
a characta special file, a executin text reference, a library,
a stream or a network file (Internizzle socket, NFS file or UNIX domain socket.)
A specific file or all tha filez up in a gangbangin' file system may be selected by path.
.PP
Instead of a gangbangin' formatted display,
.I lsof
will produce output dat can be parsed by other programs.
See the
.BR \-F ,
option description, n' the
.B "OUTPUT FOR OTHER PROGRAMS"
section fo' mo' shiznit.
.PP
In addizzle ta producin a single output list,
.I lsof
will run up in repeat mode.
In repeat mode it will produce output, delay, then repeat tha output
operation until stopped wit a interrupt or quit signal.
See the
.BI +|\-r " [t[m<fmt>]]"
option description fo' mo' shiznit.
.SH OPTIONS
In tha absence of any options,
.I lsof
lists all open filez belongin ta all actizzle processes.
.PP
If any list request option is specified, other list requests must be
specifically axed \- e.g., if
.B \-U
is specified fo' tha listin of UNIX socket files, NFS filez won't be
listed unless
.B \-N
is also specified;
or if a user list is specified wit the
.B \-u
option, UNIX domain socket files, belongin ta playas not up in tha list,
won't be listed unless the
.B \-U
option be also specified.
.PP
Normally list options dat is specifically stated is ORed \- i.e.,
specifyin the
.B \-i
option without a address n' tha \fB\-u\fPfoo option produces a
listin of all network filez OR filez belongin ta processes owned
by user ``foo''.
Da exceptions are:
.TP \w'1)\ 'u
1)
the `^' (negated) login name or user ID (UID), specified wit the
.B \-u
option;
.TP \w'1)\ 'u
2)
the `^' (negated) process ID (PID), specified wit the
.B \-p
option;
.TP \w'1)\ 'u
3)
the `^' (negated) process crew ID (PGID), specified wit the
.B \-g
option;
.TP \w'1)\ 'u
4)
the `^' (negated) command, specified wit the
.B \-c
option;
.TP \w'1)\ 'u
5)
the (`^') negated TCP or UDP protocol state names, specified wit the
.BI \-s " [p:s]"
option.
.PP
Since they represent exclusions, they is applied without ORin or ANDing
and take effect before any other selection criteria is applied.
.PP
The
.B \-a
option may be used ta AND tha selections.
For example, specifying
.BR \-a ,
.BR \-U ,
and \fB\-u\fPfoo produces a listin of only UNIX socket filez that
belong ta processes owned by user ``foo''.
.PP
Caution: the
.B \-a
option causes all list selection options ta be ANDed; it can't
be used ta cause ANDin of selected pairz of selection options
by placin it between them, even though its placement there is
acceptable.
Wherever
.B \-a
is placed, it causes tha ANDin of all selection options.
.PP
Itemz of tha same selection set \- command names, file descriptors,
network addresses, process identifiers, user identifiers, unit names,
securitizzle contexts \- is joined up in a single ORed set n' applied
before tha result participates up in ANDing.
Thus, fo' example, specifyin \fB\-i\fP@aaa.bbb, \fB\-i\fP@ccc.ddd,
.BR \-a ,
and \fB\-u\fPfff,ggg will select tha listin of filez dat belong to
either login ``fff'' OR ``ggg'' AND have network connections ta either
host aaa.bbb OR ccc.ddd.
.PP
Options may be grouped together followin a single prefix -- e.g.,
the option set ``\fB\-a \-b \-C\fP'' may be stated as
.BR \-abC .
But fuck dat shiznit yo, tha word on tha street is dat since joints is optionizzle followin 
.BR +|\-f ,
.BR \-F ,
.BR \-g ,
.BR \-i ,
.BR +|\-L ,
.BR \-o ,
.BR +|\-r ,
.BR \-s ,
.BR \-S ,
.BR \-T ,
.B \-x
and
.BR \-z .
when you have no joints fo' dem be careful dat the
followin characta aint ambiguous.
For example,
.B \-Fn
might represent the
.B \-F
and
.B \-n
options, or it might represent the
.B n
field identifier characta followin the
.B \-F
option.
When ambiguitizzle is possible, start a freshly smoked up option wit a `-'
characta \- e.g., ``\fB\-F \-n\fP''.
If tha next option be a gangbangin' file name, follow tha possibly ambiguous
option wit ``--'' \- e.g., ``\fB\-F -- \fIname\fR''.
.PP
Either tha `+' or tha `\-' prefix may be applied ta a crew of options.
Options dat don't take on separate meanings fo' each
prefix \- e.g., \fB\-i\fP \- may be grouped under either prefix.
Thus, fo' example, ``+M -i'' may be stated as ``+Mi'' n' tha group
means tha same ol' dirty as tha separate options.
Be careful of prefix groupin when one or mo' options up in tha group
does take on separate meanings under different prefixes \-
e.g., \fB+|\-M\fP; ``-iM'' aint tha same request as ``\-i +M''.
When up in doubt, use separate options wit appropriate prefixes.
.TP \w'names'u+4
.B \-? \-h
These two equivalent options select a usage (help) output list.
.I Lsof
displays a gangbangin' finger-lickin' dirty-ass shortened form of dis output when it detects a error
in tha options supplied ta it, afta it has displayed lyrics
explainin each error.
(Escape tha `?' characta as yo' shell requires.)
.TP \w'names'u+4
.B \-a
causes list selection options ta be ANDed, as busted lyrics bout above.
.TP \w'names'u+4
.BI \-A " A"
is available on systems configured fo' AFS whose AFS
kernel code is implemented via dynamic modules.
It allows the
.I lsof
user ta specify
.I A
as a alternate name list file where tha kernel addressez of tha dynamic
modulez might be found.
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit bout dynamic modules, their
symbols, n' how tha fuck they affect
.IR lsof .
.TP \w'names'u+4
.B \-b
causes
.I lsof
to avoid kernel functions dat might block \-
.IR lstat (2),
.IR readlink (2),
and
.IR stat (2).
.IP
See the
.B "BLOCKS AND TIMEOUTS"
and
.B "AVOIDING KERNEL BLOCKS"
sections fo' shiznit on rockin dis option.
.TP \w'names'u+4
.BI \-c " c"
selects tha listin of filez fo' processes executin the
command dat begins wit tha charactas of
.IR c .
Multiple commandz may be specified, rockin multiple
.B \-c
options.
They is joined up in a single ORed set before participatin in
AND option selection.
.IP
If
.I c
begins wit a `^', then tha followin charactas specify a cold-ass lil command
name whose processes is ta be ignored (excluded.)
.IP
If
.I c
begins n' endz wit a slash ('/'), tha charactas between tha slashes
are interpreted as a regular expression.
Shell meta\-charactas up in tha regular expression must be quoted ta prevent 
their interpretation by tha shell.
Da closin slash may be followed by these modifiers:
.IP
.nf
	b	the regular expression be a funky-ass basic one.
.br
	i	ignore tha case of letters.
.br
	x	the regular expression be a extended one
.br
		(default).
.fi
.IP
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit on basic n' extended regular
expressions.
.IP
Da simple command justification is tested first.
If dat test fails, tha command regular expression be applied.
If tha simple command test succeeds, tha command regular expression
test aint made.
This may result up in ``no command found fo' regex:'' lyrics
when lsof's
.B \-V
option is specified.
.TP \w'names'u+4
.BI +c " w"
defines tha maximum number of initial charactaz of tha name,
supplied by tha UNIX dialect, of tha UNIX command associated wit a process
to be printed up in tha COMMAND column.
(The
.I lsof
default is nine.)
.IP
Note dat nuff UNIX dialects do not supply all command name characters
to
.I lsof
in tha filez n' structures from which
.I lsof
obtains command name.
Often dialects limit tha number of charactas supplied up in dem sources.
For example, Linux 2.4.27 n' Solaris 9 both limit command name length to
16 characters.
.IP
If
.I w
is zero ('0'), all command charactas supplied to
.I lsof
by tha UNIX dialect is ghon be printed.
.IP
If
.I w
is less than tha length of tha column title, ``COMMAND'', it will
be raised ta dat length.
.TP \w'names'u+4
.B \-C
disablez tha reportin of any path name
components from tha kernelz name cache.
See the
.B "KERNEL NAME CACHE"
section fo' mo' shiznit.
.TP \w'names'u+4
.BI +d " s"
causes
.I lsof
to search fo' all open instancez of directory
.I s
and tha filez n' directories it gotz nuff at its top level.
.B +d
does NOT descend tha directory tree, rooted at
.IR s .
The
.BI +D " D"
option may be used ta request a gangbangin' full\-descent directory tree search,
rooted at directory
.IR D .
.IP
Processin of the
.B +d
option do not follow symbolic links within
.I s
unless the
.B \-x
or
.B \-x " l"
option be also specified.
Nor do it
search fo' open filez on file system mount points on subdirectories of
.I s
unless the
.B \-x
or
.B \-x " f"
option be also specified.
.IP
Note: tha authoritizzle of tha user of dis option limits it ta searchin for
filez dat tha user has permission ta examine wit tha system
.IR stat (2)
function.
.TP \w'names'u+4
.BI \-d " s"
specifies a list of file descriptors (FDs) ta exclude from
or include up in tha output listing.
Da file descriptors is specified up in tha comma\-separated set
.I s
\&\- e.g., ``cwd,1,3'', ``^6,^2''.
(There should be no spaces up in tha set.)
.IP
Da list be a exclusion list if all entriez of tha set begin wit `^'.
It be a inclusion list if no entry begins wit `^'.
Mixed lists is not permitted.
.IP
A file descriptor number range may be up in tha set as long as
neither member is empty, both thugz is numbers, n' tha ending
member is larger than tha startin one \- e.g., ``0-7'' or ``3-10''.
Ranges may be specified fo' exclusion if they have tha `^' prefix \-
e.g., ``^0-7'' excludes all file descriptors 0 all up in 7.
.IP
Multiple file descriptor numbers is joined up in a single ORed set before
participatin up in AND option selection.
.IP
When there be exclusion n' inclusion thugz up in tha set,
.I lsof
reports dem as errors n' exits wit a non\-zero return code.
.IP
See tha description of File Descriptor (FD) output joints up in the
.B OUTPUT
section fo' mo' shiznit on file descriptor names.
.TP \w'names'u+4
.BI +D " D"
causes
.I lsof
to search fo' all open instancez of directory
.I D
and all tha filez n' directories it gotz nuff ta its complete depth.
.IP
Processin of the
.B +D
option do not follow symbolic links within
.I D
unless the
.B \-x
or
.B \-x " l"
option be also specified.
Nor do it
search fo' open filez on file system mount points on subdirectories of
.I D
unless the
.B \-x
or
.B \-x " f"
option be also specified.
.IP
Note: tha authoritizzle of tha user of dis option limits it ta searchin for
filez dat tha user has permission ta examine wit tha system
.IR stat (2)
function.
.IP
Further note:
.I lsof
may process dis option slowly n' require a big-ass amount of dynamic memory
to do dat shit.
This is cuz it must descend tha entire directory tree, rooted at
.IR D ,
calling
.IR stat (2)
for each file n' directory, buildin a list of all tha filez it finds, and
searchin dat list fo' a match wit every last muthafuckin open file.
When directory
.I D
is large, these steps can take a long-ass time, so use dis option prudently.
.TP \w'names'u+4
.BI \-D " D"
directs
.I lsof's
use of tha thang cache file.
Da use of dis option is sometimes restricted.
See the
.B "DEVICE CACHE FILE"
section n' tha sections dat follow it fo' mo' shiznit on this
option.
.IP
.B -D
must be followed by a gangbangin' function letter; tha function letta may optionally
be followed by a path name.
.I Lsof
recognizes these function letters:
.IP
.nf
	\fB?\fP \- report thang cache file paths
	\fBb\fP \- build tha thang cache file
	\fBi\fP \- ignore tha thang cache file
	\fBr\fP \- read tha thang cache file
	\fBu\fP \- read n' update tha thang cache file
.fi
.IP
The
.BR b ,
.BR r ,
and
.B u
functions, accompanied by a path name, is sometimes restricted.
When these functions is restricted, they aint gonna step tha fuck up in
the description of the
.B \-D
option dat accompanies
.B \-h
or
.B \-?
option output.
See the
.B "DEVICE CACHE FILE"
section n' tha sections dat follow it fo' mo' shiznit on these
functions n' when they restricted.
.IP
The
.B ?
function reports tha read\-only n' write paths dat lsof can
use fo' tha thang cache file,
the namez of any environment variablez whose joints
.I lsof
will examine when formin tha thang cache file path,
and tha format fo' tha underground thang cache file path.
(Escape tha `?' characta as yo' shell requires.)
.IP
When available, the
.BR b ,
.BR r ,
and
.B u
functions may be followed by tha thang cache filez path.
Da standard default is
.I .lsof_hostname
in tha home directory of tha real user ID dat executes
.IR lsof ,
but dis could done been chizzled when
.I lsof
was configured n' compiled.
(Da output of the
.B \-h
and
.B \-?
options show tha current default prefix \- e.g., ``.lsof''.)
Da suffix,
.IR hostname ,
is tha straight-up original gangsta component of tha hostz name returned by
.IR gethostname (2) .
.IP
When available, the
.B b
function directs
.I lsof
to build a freshly smoked up thang cache file all up in tha default or specified path.
.IP
The
.B i
function directs
.I lsof
to ignore tha default thang cache file n' obtain its shiznit
about devices via direct calls ta tha kernel.
.IP
The
.B r
function directs
.I lsof
to read tha thang cache all up in tha default or specified path yo, but
prevents it from bustin a freshly smoked up thang cache file when none
exists or tha existin one is improperly structured.
The
.B r
function, when specified without a path name, prevents
.I lsof
from uppimpin a incorrect or outdated thang cache file,
or bustin a freshly smoked up one up in its place.
The
.B r
function be always available when it is specified without a
path name argument; it may be restricted by tha permissionz of the
.I lsof
process.
.IP
When available, the
.B u
function directs
.I lsof
to read tha thang cache file all up in tha default or specified path,
if possible, n' ta rebuild it, if necessary.
This is tha default thang cache file function when no
.B \-D
option has been specified.
.TP \w'names'u+4
.BI +|\-e " s"
exempts tha file system whose path name is
.I s
from bein subjected ta kernel function calls dat might block.
The
.B +e
option exempts
.IR stat (2),
.IR lstat (2)
and most
.IR readlink (2)
kernel function calls.
The
.B \-e
option exempts only
.IR stat(2)
and
.IR lstat (2)
kernel function calls.
Multiple file systems may be specified wit separate
.B +|\-e
specifications n' each may have
.IR readlink (2)
calls exempted or not.
.IP
This option is currently implemented only fo' Linux.
.IP
.B CAUTION:
this option can easily be mis\-applied ta other than
the file system of interest, cuz it uses path name rather
than tha mo' reliable thang n' inode numbers.
(Device n' inode numbers is acquired via tha potentially blocking
.IR stat (2)
kernel call n' is thus not available yo, but peep the
.BI +|\-m " m"
option as a possible alternatizzle way ta supply thang numbers.)
\fBUse dis option wit pimped out care n' straight-up specify tha path name of the
file system ta be exempted.\fP
.IP
When open filez on exempted file systems is reported, it may not be
possible ta obtain all they shiznit.
Therefore, some shiznit columns is ghon be blank, tha charactas ``UNKN''
preface tha joints up in tha TYPE column, n' tha applicable exemption option
is added up in parentheses ta tha end of tha NAME column.
(Some thang number shiznit might be made available via the
.BI +|\-m " m"
option.)
.TP \w'names'u+4
.B +|\-f [cfgGn]
.B f
by itself clarifies how tha fuck path name arguments is ta be interpreted.
When followed by
.BR c ,
.BR f ,
.BR g ,
.BR G ,
or
.B n
in any combination it specifies
that tha listin of kernel file structure shiznit is ta be enabled
(`+') or inhibited (`\-').
.IP
Normally a path name argument is taken ta be a gangbangin' file system name if
it matches a mounted\-on directory name reported by
.IR mount (8),
or if it represents a funky-ass block device, named up in the
.I mount
output n' associated wit a mounted directory name.
When
.B +f
is specified, all path name arguments is ghon be taken ta be file
system names, and
.I lsof
will diss if any is not.
This can be useful, fo' example, when tha file system name
(mounted\-on device) aint a funky-ass block device.
This happens fo' some CD-ROM file systems.
.IP
When
.B \-f
is specified by itself, all path name arguments is ghon be taken ta be
simple files.
Thus, fo' example, tha ``\fB\-f\fP\ -- /'' arguments direct lsof ta search
for open filez wit a `/' path name, not all open filez up in tha `/'
(root) file system.
.IP
Be careful ta make sure
.B +f
and
.B \-f
are properly terminated n' aren't followed by a cold-ass lil characta (e.g., of
the file or file system name) dat might be taken as a parameter.
For example, use ``--'' after
.B +f
and
.B \-f
as up in these examples.
.IP
.nf
	$ lsof +f -- /file/system/name
	$ lsof -f -- /file/name
.fi
.IP
Da listin of shiznit from kernel file structures, axed wit the
.B +f [cfgGn]
option form, is normally
inhibited, n' aint available up in whole or part fo' some dialects \- e.g.,
/proc\-based Linux kernels below 2.6.22.
When tha prefix to
.B f
is a plus sign (`+'), these charactas request file structure shiznit:
.IP
.nf
	\fBc\fR	file structure use count (not Linux)
	\fBf\fR	file structure address (not Linux)
	\fBg\fR	file flag abbreviations (Linux 2.6.22 n' up)
	\fBG\fR	file flags up in hexadecimal (Linux 2.6.22 n' up)
	\fBn\fR	file structure node address (not Linux)
.fi
.IP
When tha prefix is minus (`\-') tha same charactas disable the
listin of tha indicated joints.
.IP
File structure addresses, use counts, flags, n' node addresses may be
used ta detect mo' readily identical filez inherited by child
processes n' identical filez up in use by different processes.
.I Lsof
column output can be sorted by output columns holdin tha joints
and listed ta identify identical file use, or
.I lsof
field output can be parsed by a AWK or Perl post\-filta script,
or by a C program.
.TP \w'names'u+4
.BI \-F " f"
specifies a cold-ass lil characta list,
.IR f ,
that selects tha fieldz ta be output fo' processin by another program,
and tha characta dat terminates each output field.
Each field ta be output is specified wit a single characta in
.IR f .
Da field terminator defaults ta NL yo, but may be chizzled ta NUL (000).
See the
.B "OUTPUT FOR OTHER PROGRAMS"
section fo' a thugged-out description of tha field identification charactas and
the field output process.
.IP
When tha field selection characta list is empty, all standard fieldz are
selected (except tha raw thang field, securitizzle context n' unit field for
compatibilitizzle reasons)
and tha NL field terminator is used.
.IP
When tha field selection characta list gotz nuff only a zero (`0'),
all fieldz is selected (except tha raw thang field fo' compatibility
reasons) n' tha NUL terminator characta is used.
.IP
Other combinationz of fieldz n' they associated field terminator
characta must be set wit explicit entries in
.IR f ,
as busted lyrics bout up in the
.B "OUTPUT FOR OTHER PROGRAMS"
section.
.IP
When a gangbangin' field selection characta identifies a item
.I lsof
does not normally list \- e.g., PPID, selected with
.BR \-R " \-"
specification of tha field characta \- e.g., ``\fB\-FR\fP'' \-
also selects tha listin of tha item.
.IP
When tha field selection characta list gotz nuff tha single
characta `?',
.I lsof
will display a help list of tha field identification characters.
(Escape tha `?' characta as yo' shell requires.)
.TP \w'names'u+4
.BI \-g " [s]"
excludes or selects tha listin of filez fo' tha processes
whose optionizzle process crew IDentification (PGID) numbers is up in the
comma\-separated set
.I s
\&\- e.g., ``123'' or ``123,^456''.
(There should be no spaces up in tha set.)
.IP
PGID numbers dat begin wit `^' (negation) represent exclusions.
.IP
Multiple PGID numbers is joined up in a single ORed set before participating
in AND option selection.
But fuck dat shiznit yo, tha word on tha street is dat PGID exclusions is applied without ORin or ANDing
and take effect before other selection criteria is applied.
.IP
The
.B \-g
option also enablez tha output display of PGID numbers.
When specified without a PGID set thatz all it do.
.TP \w'names'u+4
.BI \-i " [i]"
selects tha listin of filez any of whose Internizzle address
matches tha address specified up in \fIi\fP.
If no address is specified, dis option selects tha listin of all
Internizzle n' x.25 (HP\-UX) network files.
.IP
If
.BI \-i 4
or
.BI \-i 6
is specified wit no followin address, only filez of tha indicated
IP version, IPv4 or IPv6, is displayed.
(An IPv6 justification may be used only if tha dialects supports IPv6,
as indicated by ``[46]'' n' ``IPv[46]'' in
.I lsof's
.B \-h
or
.B \-?
output.)
Sequentially specifying
.BR \-i 4,
followed by
.BR \-i 6
is tha same ol' dirty as specifying
.BR \-i ,
and vice-versa.
Specifying
.BR \-i 4,
or
.BR \-i 6
after
.B \-i
is tha same ol' dirty as specifying
.BR \-i 4
or
.BR \-i 6
by itself.
.IP
Multiple addresses (up ta a limit of 100) may be specified wit multiple
.B \-i
options.
(A port number or steez name range is counted as one address.)
They is joined up in a single ORed set before participatin in
AND option selection.
.IP
An Internizzle address is specified up in tha form (Items up in square
brackets is optional.):
.IP
[\fI46\fP][\fIprotocol\fP][@\fIhostname\fP\||\|\fIhostaddr\fP][:\fIservice\fP\||\|\fIport\fP]
.IP
where:
.nf
.br
	\fI46\fP specifies tha IP version, IPv4 or IPv6
.br
		that applies ta tha followin address.
.br
		'6' may be be specified only if tha UNIX
.br
		dialect supports IPv6.  If neither '4' nor
.br
		'6' is specified, tha followin address
.br
		applies ta all IP versions.
.br
	\fIprotocol\fP be a protocol name \- \fBTCP\fP, \fBUDP\fP
.br		or \fBUDPLITE\fP.
.br
	\fIhostname\fP be a Internizzle host name.  Unless a
.br
		specific IP version is specified, open
.br
		network filez associated wit host names
.br
		of all versions is ghon be selected.
.br
	\fIhostaddr\fP be a numeric Internizzle IPv4 address in
.br
		dot form; or a IPv6 numeric address in
.br
		colon form, enclosed up in brackets, if the
.br
		UNIX dialect supports IPv6.  When a IP
.br
		version is selected, only its numeric
.br
		addresses may be specified.
.br
	\fIservice\fP be a \fI/etc/skillz\fP name \- e.g., \fBsmtp\fP \-
		or a list of em.
.br
	\fIport\fP be a port number, or a list of em.
.fi
.IP
IPv6 options may be used only if tha UNIX dialect supports IPv6.
To peep if tha dialect supports IPv6, run
.I lsof
and specify the
.B \-h
or
.B \-?
(help) option.
If tha displayed description of the
.B \-i
option gotz nuff ``[46]'' n' ``IPv[46]'', IPv6 is supported.
.IP
IPv4 host names n' addresses may not be specified if network file selection
is limited ta IPv6 with
.BR \-i " 6."
IPv6 host names n' addresses may not be specified if network file selection
is limited ta IPv4 with
.BR \-i " 4."
When a open IPv4 network filez address is mapped up in a IPv6 address,
the open filez type is ghon be IPv6, not IPv4, n' its display will be
selected by '6', not '4'.
.IP
At least one address component \-
.BR 4,
.BR 6,
.IR protocol ,
.IR hostname ,
.IR hostaddr ,
or
.I service
\&\- must be supplied.
Da `@' character, leadin tha host justification, be always required;
as is tha `:', leadin tha port justification.
Specify either
.I hostname
or
.IR hostaddr .
Specify either
.I service
name list or
.I port
number list.
If a
.I service
name list is specified, the
.I protocol
may also need ta be specified if tha TCP, UDP n' UDPLITE port numbers for
the steez name is different.
Use any case \- lower or upper \- for
.IR protocol .
.IP
.I Service
names and
.I port
numbers may be combined up in a list whose entries is separated by commas
and whose numeric range entries is separated by minus signs.
There may be no embedded spaces, n' all steez names must belong to
the specified
.IR protocol .
Since steez names may contain embedded minus signs, tha startin entry
of a range can't be a steez name; it can be a port number, however.
.IP
Here is some sample addresses:
.nf

.br
	-i6 \- IPv6 only
.br
	TCP:25 \- TCP n' port 25
.br
	@1.2.3.4 \- Internizzle IPv4 host address 1.2.3.4
.br
	@[3ffe:1ebc::1]:1234 \- Internizzle IPv6 host address
		3ffe:1ebc::1, port 1234
.br
	UDP:who \- UDP whoz ass steez port
.br
	TCP@lsof.itap:513 \- TCP, port 513 n' host name lsof.itap
.br
	tcp@foo:1-10,smtp,99 \- TCP, ports 1 all up in 10,
		service name \fIsmtp\fP, port 99, host name foo
.br
	tcp@bar:1-smtp \- TCP, ports 1 all up in \fIsmtp\fP, host bar
.br
	:time \- either TCP, UDP or UDPLITE time steez port
.fi
.TP \w'names'u+4
.B \-K
selects tha listin of tasks (threads) of processes, on dialects
where task (thread) reportin is supported.
(If help output \- i.e., tha output of the
.B \-h
or
.B \-?
options \- shows dis option, then task (thread) reportin is
supported by tha dialect.)
.IP
When
.B \-K
and
.B \-a
are both specified on Linux, n' tha taskz of a main process are
selected by other options, tha main process will also be listed
as though it was a task yo, but without a task ID.
(See tha description of tha TID column up in the
.B OUTPUT
section.)
.IP
Where tha FreeBSD version supports threads, all threadz will be
listed wit they IDs.
.IP
In general threadz n' tasks inherit tha filez of tha calla yo, but
may close some n' open others, so
.I lsof
always reports all tha open filez of threadz n' tasks.
.TP \w'names'u+4
.BI \-k " k"
specifies a kernel name list file,
.IR k ,
in place of /vmunix, /mach, etc.
.B \-k
is not available under AIX on tha IBM RISC/System 6000.
.TP \w'names'u+4
.B \-l
inhibits tha conversion of user ID numbers ta login names.
It be also useful when login name lookup is hustlin improperly or slowly.
.TP \w'names'u+4
.BI +|\-L " [l]"
enablez (`+') or disablez (`-') tha listin of file link
counts, where they is available \- e.g., they aren't available
for sockets, or most FIFOs n' pipes.
.IP
When
.B +L
is specified without a gangbangin' followin number, all link counts is ghon be listed.
When
.B \-L
is specified (the default), no link counts is ghon be listed.
.IP
When
.B +L
is followed by a number, only filez havin a link count less than
that number is ghon be listed.
(No number may follow
.BR \-L .)
A justification of tha form ``\fB+L1\fP'' will select open filez that
have been unlinked.
A justification of tha form ``\fB+aL1\ \fI<file_system>\fR'' will select
unlinked open filez on tha specified file system.
.IP
For other link count comparisons, use field output (\fB\-F\fP)
and a post\-processin script or program.
.TP \w'names'u+4
.BI +|\-m " m"
specifies a alternate kernel memory file or activates
mount table supplement processing.
.IP
Da option form
.BI \-m " m"
specifies a kernel memory file,
.IR m ,
in place of
.I /dev/kmem
or
.I /dev/mem
\&\- e.g., a cold-ass lil crash dump file.
.IP
Da option form
.B +m
requests dat a mount supplement file be freestyled ta tha standard output
file.
All other options is silently ignored.
.IP
There is ghon be a line up in tha mount supplement file fo' each mounted file
system, containin tha mounted file system directory, followed by a single
space, followed by tha thang number up in hexadecimal "0x" format \- e.g.,
.IP
.nf
	/ 0x801
.fi
.IP
.I Lsof
can use tha mount supplement file ta git thang numbers fo' file systems
when it can't git dem via
.IR stat (2)
or
.IR lstat (2).
.IP
Da option form
.BI +m " m"
identifies
.I m
as a mount supplement file.
.IP
Note: the
.B +m
and
.BI +m " m"
options is not available fo' all supported dialects.
Peep tha output of
.I lsof's
.B \-h
or
.B \-?
options ta peep if the
.B +m
and
.BI +m " m"
options is available.
.TP \w'names'u+4
.B +|\-M
Enablez (\fB+\fP) or disablez (\fB-\fP) the
reportin of portmapper registrations fo' local TCP, UDP n' UDPLITE ports,
where port mappin is supported.
(See tha last paragraph of dis option description fo' shiznit about
where portmapper registration reportin is suported.)
.IP
Da default reportin mode is set by the
.I lsof
builder wit tha HASPMAPENABLED #define up in tha dialectz machine.h
header file;
.I lsof
is distributed wit tha HASPMAPENABLED #define deactivated, so
portmapper reportin is disabled by default n' must be requested
with
.BR \+M .
Specifying
.I lsof's
.B \-h
or
.B \-?
option will report tha default mode.
Disablin portmapper registration when it be already disabled or
enablin it when already enabled be acceptable.
When portmapper registration reportin is enabled,
.I lsof
displays tha portmapper registration (if any) fo' local TCP, UDP or
UDPLITE ports
in square brackets immediately followin tha port numbers or service
names \- e.g., ``:1234[name]'' or ``:name[100083]''.
Da registration shiznit may be a name or number, depending
on what tha fuck tha registerin program supplied ta tha portmapper when
it registered tha port.
.IP
When portmapper registration reportin is enabled,
.I lsof
may run a lil mo' slowly or even become blocked when access ta the
portmapper becomes congested or stopped.
Reverse tha reportin mode ta determine if portmapper registration
reportin is slowin or blocking
.IR lsof .
.IP
For purposez of portmapper registration reporting
.I lsof
considaz a TCP, UDP or UDPLITE port local if: it is found up in tha local part
of its containin kernel structure;
or if it is located up in tha foreign part of its containin kernel
structure n' tha local n' foreign Internizzle addresses is tha same;
or if it is located up in tha foreign part of its containin kernel
structure n' tha foreign Internizzle address is INADDR_LOOPBACK (127.0.0.1).
This rule may make
.I lsof
ignore some foreign ports on machines wit multiple intercourses
when tha foreign Internizzle address is on a gangbangin' finger-lickin' different intercourse
from tha local one.
.IP
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for further rap of portmapper registration
reportin issues.
.IP
Portmapper registration reportin is supported only on dialects that
have RPC header files.
(Some Linux distributions wit GlibC 2.14 aint gots em.)
When portmapper registration reportin is supported, the
.B \-h
or
.B \-?
help output will show the
.B +|\-M
option.
.TP \w'names'u+4
.B \-n
inhibits tha conversion of network numbers ta 
host names fo' network files.
Inhibitin conversion may make
.I lsof
run faster.
It be also useful when host name lookup aint hustlin properly.
.TP \w'names'u+4
.B \-N
selects tha listin of NFS files.
.TP \w'names'u+4
.BI \-o
directs
.I lsof
to display file offset at all times.
It causes tha SIZE/OFF output column title ta be chizzled ta OFFSET.
Note: on some UNIX dialects
.I lsof
can't obtain accurate or consistent file offset shiznit from its
kernel data sources, sometimes just fo' particular kindz of files
(e.g., socket files.)
Consult the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit.
.IP
The
.B \-o
and
.B \-s
options is mutually exclusive; they can't both be specified.
When neither is specified,
.I lsof
displays whatever value \- size or offset \- be appropriate and
available fo' tha type of tha file.
.TP \w'names'u+4
.BI \-o " o"
defines tha number of decimal digits (\fIo\fP) ta be
printed afta tha ``0t'' fo' a gangbangin' file offset before tha form is switched
to ``0x...''.
An
.I o
value of zero (unlimited) directs
.I lsof
to use tha ``0t'' form fo' all offset output.
.IP
This option do NOT direct
.I lsof
to display offset at all times; specify
.B \-o
(without a trailin number) ta do dis shit.
.BI \-o " o"
only specifies tha number of digits afta ``0t'' in
either mixed size n' offset or offset\-only output.
Thus, fo' example, ta direct
.I lsof
to display offset at all times wit a thugged-out decimal digit count of 10, use:
.IP
.nf
	-o -o 10
or
	-oo10
.fi
.IP
Da default number of digits allowed afta ``0t'' is normally 8,
but may done been chizzled by tha lsof builder.
Consult tha description of the
.BI \-o " o"
option up in tha output of the
.B \-h
or
.B \-?
option ta determine tha default dat is up in effect.
.TP \w'names'u+4
.B \-O
directs
.I lsof
to bypass tha game it uses ta avoid bein blocked by some
kernel operations \- i.e., bustin dem up in forked lil pimp processes.
See the
.B "BLOCKS AND TIMEOUTS"
and
.B "AVOIDING KERNEL BLOCKS"
sections fo' mo' shiznit on kernel operations dat may block
.IR lsof .
.IP
While use of dis option will reduce
.I lsof
startup overhead, it may also cause
.I lsof
to hang when tha kernel don't respond ta a gangbangin' function.
Use dis option cautiously.
.TP \w'names'u+4
.BI \-p " s"
excludes or selects tha listin of filez fo' tha processes
whose optionizzle process IDentification (PID) numbers is up in the
comma\-separated set
.I s
\&\- e.g., ``123'' or ``123,^456''.
(There should be no spaces up in tha set.)
.IP
PID numbers dat begin wit `^' (negation) represent exclusions.
.IP
Multiple process ID numbers is joined up in a single ORed set before
participatin up in AND option selection.
But fuck dat shiznit yo, tha word on tha street is dat PID exclusions is applied without ORin or ANDing
and take effect before other selection criteria is applied.
.TP \w'names'u+4
.B \-P
inhibits tha conversion of port numbers ta port
names fo' network files.
Inhibitin tha conversion may make
.I lsof
run a lil faster.
It be also useful when port name lookup aint hustlin properly.
.TP \w'names'u+4
.BI +|\-r " [t[m<fmt>]]"
puts
.I lsof
in repeat mode.
There
.I lsof
lists open filez as selected by other options, delays
.I t
secondz (default fifteen), then repeats tha listing, delaying
and listin repetitively until stopped by a cold-ass lil condizzle defined by
the prefix ta tha option.
.IP
If tha prefix be a `\-', repeat mode is endless.
.I Lsof
must be terminated wit a interrupt or quit signal.
.IP
If tha prefix is `+', repeat mode will end tha straight-up original gangsta cycle no open files
are listed \- n' of course when
.I lsof
is stopped wit a interrupt or quit signal.
When repeat mode endz cuz no filez is listed, tha process exit code
will be zero if any open filez was eva listed; one, if none was ever
listed.
.IP
.I Lsof
marks tha end of each listing:
if field output is up in progress (the
.BR \-F ,
option has been specified), tha default marker is `m'; otherwise the
default marker is ``========''.
Da marker is followed by a NL character.
.IP
Da optionizzle "m<fmt>" argument specifies a gangbangin' format fo' tha marker line.
Da <fmt> charactas followin `m' is interpreted as a gangbangin' format
specification ta the
.IR strftime (3)
function, when both it n' the
.IR localtime (3)
function is available up in tha dialectz C library.
Consult the
.IR strftime (3)
documentation fo' what tha fuck may step tha fuck up in its format justification.
Note dat when field output be axed wit the
.B \-F
option, <fmt> cannot contain tha NL format, ``%n''.
Note also dat when <fmt> gotz nuff spaces or other charactas that
affect tha shellz interpretation of arguments, <fmt> must be
quoted appropriately.
.IP
Repeat mode reduces
.I lsof
startup overhead, so it is mo' efficient ta use dis mode
than ta call
.I lsof
repetitively from a gangbangin' finger-lickin' dirty-ass shell script, fo' example.
.IP
To use repeat mode most efficiently, accompany
.B +|\-r
with justification of other
.I lsof
selection options, so tha amount of kernel memory access
.I lsof
does is ghon be kept ta a minimum.
Options dat filta all up in tha process level \- e.g.,
.BR \-c ,
.BR \-g ,
.BR \-p ,
.B \-u
\&\- is da most thugged-out efficient selectors.
.IP
Repeat mode is useful when coupled wit field output (see the
.BR \-F ,
option description) n' a supervising
.I awk
or
.I Perl
script, or a C program.
.TP \w'names'u+4
.B \-R
directs lsof ta list tha Parent Process IDentification
number up in tha PPID column.
.TP \w'names'u+4
.BI \-s " [p:s]"
.B s
alone directs
.I lsof
to display file size at all times.
It causes tha SIZE/OFF output column title ta be chizzled ta SIZE.
If tha file aint gots a size, not a god damn thang is displayed.
.IP
Da optional
.BI \-s " p:s"
form be available only fo' selected dialects, n' only when the
.B \-h
or
.B \-?
help output lists dat shit.
.IP
When tha optionizzle form be available, the
.B s
may be followed by a protocol name (\fIp\fR), either TCP or UDP,
a colon (`:') n' a cold-ass lil comma\-separated protocol state name list,
the option causes open TCP n' UDP filez ta be excluded if their
state name(s) is up in tha list (\fIs\fP) preceded by a `^'; or
included if they name(s) is not preceded by a `^'.
.IP
When a inclusion list is defined, only network filez wit state
names up in tha list is ghon be present up in the
.I lsof
output.
Thus, specifyin one state name means dat only network files
with dat lone state name is ghon be listed.
.IP
Case is unimportant up in tha protocol or state names yo, but there may
be no spaces n' tha colon (`:') separatin tha protocol
name (\fIp\fP) n' tha state name list (\fIs\fP) is required.
.IP
If only TCP n' UDP filez is ta be listed, as controlled by
the specified exclusions n' inclusions, the
.B \-i
option must be specified, like a muthafucka.
If only a single protocolz filez is ta be listed, add its name
as a argument ta the
.B \-i
option.
.IP
For example, ta list only network filez wit TCP state LISTEN, use:
.IP
.nf
	\-iTCP \-sTCP:LISTEN
.fi
.IP
Or, fo' example, ta list network filez wit all UDP states except
Idle, use:
.IP
.nf
	\-iUDP -sUDP:Idle
.fi
.IP
State names vary wit UNIX dialects, so it aint possible to
provide a cold-ass lil complete list.  Some common TCP state names are:
CLOSED, IDLE, BOUND, LISTEN, ESTABLISHED, SYN_SENT, SYN_RCDV,
ESTABLISHED, CLOSE_WAIT, FIN_WAIT1, CLOSING, LAST_ACK, FIN_WAIT_2,
and TIME_WAIT.
Two common UDP state names is Unbound n' Idle.
.IP
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit on how tha fuck ta use protocol state exclusion and
inclusion, includin examples.
.IP
The
.B \-o
(without a gangbangin' followin decimal digit count) and
.B \-s
option (without a gangbangin' followin protocol n' state name list)
are mutually exclusive; they can't both be specified.
When neither is specified,
.I lsof
displays whatever value \- size or offset \- be appropriate and
available fo' tha type of file.
.IP
Since some typez of filez aint gots legit sizes \- sockets, FIFOs,
pipes, etc. \- lsof displays fo' they sizes tha content amounts in
their associated kernel buffers, if possible.
.TP \w'names'u+4
.BI \-S " [t]"
specifies a optionizzle time-out secondz value fo' kernel functions \-
.IR lstat (2),
.IR readlink (2),
and
.IR stat (2)
\- dat might otherwise deadlock.
Da minimum for
.I t
is two;
the default, fifteen; when no value is specified, tha default is used.
.IP
See the
.B "BLOCKS AND TIMEOUTS"
section fo' mo' shiznit.
.TP \w'names'u+4
.BI \-T " [t]"
controls tha reportin of some TCP/TPI shiznit, also
reported by
.IR netstat (1),
followin tha network addresses.
In aiiight output tha shiznit appears up in parentheses, each item
except TCP or TPI state name identified by a keyword, followed by `=',
separated from others by a single space:
.IP
.nf
	<TCP or TPI state name>
	QR=<read queue length>
	QS=<send queue length>
	SO=<socket options n' joints>
	SS=<socket states>
	TF=<TCP flags n' joints>
	WR=<window read length>
	WW=<window write length>
.fi
.IP
Not all joints is reported fo' all UNIX dialects.
Items joints (when available) is reported afta tha item name n' '='.
.IP
When tha field output mode is up in effect (See
.BR "OUTPUT FOR OTHER PROGRAMS" .)
each item appears as a gangbangin' field wit a `T' leadin character.
.IP
.B \-T
with no followin key charactas disablez TCP/TPI shiznit reporting.
.IP
.B \-T
with followin charactas selects tha reportin of specific TCP/TPI
information:
.IP
.nf
	\fBf\fP	selects reportin of socket options,
		states n' joints, n' TCP flags and
		values.
	\fBq\fP	selects queue length reporting.
	\fBs\fP	selects connection state reporting.
	\fBw\fP	selects window size reporting.
.fi
.IP
Not all selections is enabled fo' some UNIX dialects.
State may be selected fo' all dialects n' is reported by default.
The
.B \-h
or
.B \-?
help output fo' the
.B \-T
option will show what tha fuck selections may be used wit tha UNIX dialect.
.IP
When
.B \-T
is used ta select shiznit \- i.e., it is followed by one or more
selection charactas \- tha displayin of state is disabled by default,
and it must be explicitly selected again n' again n' again up in tha charactas following
.BR \-T .
(In effect, then, tha default is equivalent to
.BR -Ts .)
For example, if queue lengths n' state is desired, use
.BR \-Tqs .
.IP
Socket options, socket states, some socket joints, TCP flags and
one TCP value may be reported (when available up in tha UNIX dialect)
in tha form of tha names dat commonly step tha fuck up afta SO_, so_, SS_,
TCP_  n' TF_ up in tha dialectz header filez \-
most often <sys/socket.h>, <sys/socketvar.h> n' <netinet/tcp_var.h>.
Consult dem header filez fo' tha meanin of tha flags, options,
states n' joints.
.IP
``SO='' precedes socket options n' joints; ``SS='', socket states;
and ``TF='', TCP flags n' joints.
.IP
If a gangbangin' flag or option has a value, tha value will follow a '=' and
the name -- e.g., ``SO=LINGER=5'', ``SO=QLIM=5'', ``TF=MSS=512''.
Da followin seven joints may be reported:
.IP
.nf
	Name
	Reported	Description (Common Symbol)

	KEEPALIVE	keep kickin it time (SO_KEEPALIVE)
	LINGER	linger time (SO_LINGER)
	MSS		maximum segment size (TCP_MAXSEG)
	PQLEN	partial listen queue connections
	QLEN		established listen queue connections
	QLIM		established listen queue limit
	RCVBUF	receive buffer length (SO_RCVBUF)
	SNDBUF	send buffer length (SO_SNDBUF)
.fi
.IP
Details on what tha fuck socket options n' joints, socket states, n' TCP flags
and joints may be displayed fo' particular UNIX dialects may be found in
the answer ta tha ``Why don't lsof report socket options, socket states,
and TCP flags n' joints fo' mah dialect?'' n' ``Why don't lsof report
the partial listen queue connection count fo' mah dialect?''
questions up in the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
.TP \w'names'u+4
.B \-t 
specifies that
.I lsof
should produce terse output wit process identifiers only n' no header \-
e.g., so dat tha output may be piped to
.IR bust a cap up in (1).
.B \-t
selects the
.B \-w
option.
.TP \w'names'u+4
.BI \-u " s"
selects tha listin of filez fo' tha user whose login names
or user ID numbers is up in tha comma\-separated set
.I s
\&\- e.g., ``abe'',
or ``548,root''.
(There should be no spaces up in tha set.)
.IP
Multiple login names or user ID numbers is joined up in a single ORed set
before participatin up in AND option selection.
.IP
If a login name or user ID is preceded by a `^', it becomes a negation \-
i.e., filez of processes owned by tha login name or user ID will never
be listed.
A negated login name or user ID selection is neither ANDed nor ORed
with other selections; it be applied before all other selections and
straight-up excludes tha listin of tha filez of tha process.
For example, ta direct
.I lsof
to exclude tha listin of filez belongin ta root processes,
specify ``\-u^root'' or ``\-u^0''.
.TP \w'names'u+4
.B \-U
selects tha listin of UNIX domain socket files.
.TP \w'names'u+4
.B \-v
selects tha listin of
.I lsof
version shiznit, including: revision number;
when the
.I lsof
binary was constructed;
who constructed tha binary n' where;
the name of tha compila used ta construct the
.I lsof binary;
the version number of tha compila when readily available;
the compila n' loader flags used ta construct the
.I lsof
binary;
and system shiznit, typically tha output of
.IR uname 's
.B \-a
option.
.TP \w'names'u+4
.B \-V
directs
.I lsof
to indicate tha shit dat shiznit was axed ta list n' failed ta find \- command
names, file names, Internizzle addresses or files, login names, NFS files,
PIDs, PGIDs, n' UIDs.
.IP
When other options is ANDed ta search options, or compile\-time
options restrict tha listin of some files,
.I lsof
may not report dat it failed ta find a search item when a ANDed
option or compile\-time option prevents tha listin of tha open file
containin tha located search item.
.IP
For example, ``lsof -V -iTCP@foobar -a -d 999'' may not report a
failure ta locate open filez at ``TCP@foobar'' n' may not list
any, if none gotz a gangbangin' file descriptor number of 999.
A similar thang arises when HASSECURITY n' HASNOSOCKSECURITY are
defined at compile time n' they prevent tha listin of open files.
.TP \w'names'u+4
.B +|\-w
Enablez (\fB+\fP) or disablez (\fB-\fP) tha suppression of warnin lyrics.
.IP
The
.I lsof
builder may chizzle ta have warnin lyrics disabled or enabled by
default.
Da default warnin message state is indicated up in tha output of the
.B \-h
or
.B \-?
option.
Disablin warnin lyrics when they is already disabled or enabling
them when already enabled be acceptable.
.IP
The
.B \-t
option selects the
.B \-w
option.
.TP \w'names'u+4
.BI \-x " [fl]"
may accompany the
.B +d
and
.B +D
options ta direct they processin ta cross over symbolic
links and|or file system mount points encountered when
scannin tha directory (\fB+d\fP) or directory tree (\fB+D\fP).
.IP
If
.B -x
is specified by itself without a gangbangin' followin parameter, cross\-over
processin of both symbolic links n' file system mount points is
enabled.
Note dat when
.B \-x
is specified without a parameter, tha next argument must begin wit '-'
or '+'.
.IP
Da optionizzle 'f' parameta enablez file system mount point cross\-over
processing; 'l', symbolic link cross\-over processing.
.IP
The
.B \-x
option may not be supplied without also supplyin a
.B +d
or
.B +D
option.
.TP \w'names'u+4
.B \-X
This be a gangbangin' finger-lickin' dialect\-specific option.
.HP \w'names'u+4
\ \ \ \ AIX:
.br
This IBM AIX RISC/System 6000 option requests tha reporting
of executed text file n' shared library references.
.IP
.B WARNING:
because dis option uses tha kernel readx() function, its use on
a busy AIX system might cause a application process ta hang so
completely dat it can neither be capped nor stopped.
I aint NEVER peeped dis happen or had a report of its happening,
but I be thinkin there be a remote possibilitizzle it could happen.
.IP
By default use of readx() is disabled.
On AIX 5L n' above
.I lsof
may need setuid\-root permission ta big-ass up tha actions this
option requests.
.IP
The
.I lsof
builder may specify dat the
.B \-X
option be restricted ta processes whose real UID is root.
If dat has been done, the
.B \-X
option aint gonna step tha fuck up in the
.B \-h
or
.B \-?
help output unless tha real UID of the
.I lsof
process is root.
Da default
.I lsof
distribution allows any UID ta specify
.BR \-X,
so by default it will step tha fuck up in tha help output.
.IP
When AIX readx() use
is disabled,
.I lsof
may not be able ta report shiznit fo' all text n' loader file
references yo, but it may also avoid exacerbatin a AIX
kernel directory search kernel error, known as tha Stale Segment
ID bug.
.IP
Da readx() function, used by
.I lsof
or any other program ta access some sectionz of kernel virtual
memory, can trigger tha Stale Segment ID bug.
It can cause tha kernelz dir_search() function ta believe erroneously
that part of a in\-memory copy of a gangbangin' file system directory has been
zeroed.
Another application process, distinct from
.IR lsof ,
askin tha kernel ta search tha directory \- e.g., by using
.IR open "(2) \-"
can cause dir_search() ta loop forever, thus hangin tha application process.
.IP
Consult the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
and the
.I 00README
file of the
.I lsof
distribution fo' a mo' complete description of tha Stale Segment ID bug,
its APAR, n' methodz fo' definin readx() use when compiling
.IR lsof .
.HP \w'names'u+4
\ \ \ \ Linux:
.br
This Linux option requests that
.I lsof
skip tha reportin of shiznit on all open TCP, UDP n' UDPLITE IPv4
and IPv6 files.
.IP
This Linux option is most useful when tha system has a mad
pimpin' number of open TCP, UDP n' UDPLITE files, tha processin of whose
information up in the
.I /proc/net/tcp*
and
.I /proc/net/udp*
filez would take
.I lsof
a long time, n' whose reportin aint of interest.
.IP
Use dis option wit care n' only when yo ass is shizzle dat the
information you want
.I lsof
to display aint associated wit open TCP, UDP or UDPLITE socket files.
.HP \w'names'u+4
\ \ \ \ Solaris 10 n' above:
.br
This Solaris 10 n' above option requests tha reportin of cached
paths fo' filez dat done been deleted \- i.e., removed with
.IR rm (1)
or
.IR unlink (2).
.IP
Da cached path is followed by tha strang ``\ (deleted)'' ta indicate
that tha path by which tha file was opened has been deleted.
.IP
Because intervenin chizzlez made ta tha path \- i.e., renames with
.IR mv (1)
or
.IR rename (2)
\- is not recorded up in tha cached path, what
.I lsof
reports is only tha path by which tha file was opened, not its
possibly different final path.
.TP \w'names'u+4
.BI \-z " [z]"
specifies how tha fuck Solaris 10 n' higher unit shiznit is ta be handled.
.IP
Without a gangbangin' followin argument \- e.g., NO
.IR z " \-"
the option specifies dat unit names is ta be listed up in tha ZONE
output column.
.IP
The
.B \-z
option may be followed by a unit name,
.BI z .
That causes lsof ta list only open filez fo' processes up in dat unit.
Multiple
.BI \-z " z"
option n' argument pairs may be specified ta form a list of named units.
Any open file of any process up in any of tha units is ghon be listed, subject
to other conditions specified by other options n' arguments.
.TP \w'names'u+4
.BI \-Z " [Z]"
specifies how tha fuck SELinux securitizzle contexts is ta be handled.
It n' 'Z' field output characta support is inhibited
when SELinux is disabled up in tha hustlin Linux kernel.
See
.B "OUTPUT FOR OTHER PROGRAMS"
for mo' shiznit on tha 'Z' field output character.
.IP
Without a gangbangin' followin argument \- e.g., NO
.IR Z " \-"
the option specifies dat securitizzle contexts is ta be listed up in the
SECURITY\-CONTEXT output column.
.IP
The
.B \-Z
option may be followed by a wildcard securitizzle context name,
.BI Z .
That causes lsof ta list only open filez fo' processes up in dat security
context.
Multiple
.BI \-Z " Z"
option n' argument pairs may be specified ta form a list of security
contexts.
Any open file of any process up in any of tha securitizzle contexts is ghon be listed,
subject ta other conditions specified by other options n' arguments.
Note that
.I Z
can be A:B:C or *:B:C or A:B:* or *:*:C ta match against tha A:B:C context.
.TP \w'names'u+4
.B --
Da double minus sign option be a marker dat signals tha end of
the keyed options.
It may be used, fo' example, when tha straight-up original gangsta file name begins with
a minus sign.
It may also be used when tha absence of a value fo' tha last keyed
option must be signified by tha presence of a minus sign up in tha following
option n' before tha start of tha file names.
.TP \w'names'u+4
.I names
These is path namez of specific filez ta list.
Symbolic links is resolved before use.
Da first name may be separated from tha precedin options with
the ``--'' option.
.IP
If a
.I name 
is tha mounted\-on directory of a gangbangin' file system or tha thang of the
file system,
.I lsof
will list all tha filez open on tha file system.
To be considered a gangbangin' file system, the
.I name
must match a mounted\-on directory name in
.IR mount (8)
output, or match tha name of a funky-ass block thang associated wit a mounted\-on
directory name.
The
.B +|\-f
option may be used ta force
.I lsof
to consider a
.I name
a file system identifier (\fB+f\fP) or a simple file (\fB\-f\fP).
.IP
If
.I name
is a path ta a gangbangin' finger-lickin' directory dat aint tha mounted\-on directory name of
a file system, it is treated just as a regular file is treated \- i.e.,
its listin is restricted ta processes dat have it open as a gangbangin' file or
as a process\-specific directory, like fuckin tha root or current working
directory.
To request that
.I lsof
look fo' open filez inside a gangbangin' finger-lickin' directory name, use the
.BI +d " s"
and
.BI +D " D"
options.
.IP
If a
.I name
is tha base name of a cold-ass lil crew of multiplexed filez \- e. g, AIX's
.IR /dev/pt[cs] " \-"
.I lsof
will list all tha associated multiplexed filez on tha thang that
are open \- e.g.,
.IR /dev/pt[cs]/1 ,
.IR /dev/pt[cs]/2 ,
etc.
.IP
If a
.I name
is a UNIX domain socket name,
.I lsof
will probably search fo' it by tha charactaz of tha name ridin' solo \- exactly as
it is specified n' is recorded up in tha kernel socket structure.
(See tha next paragraph fo' a exception ta dat rule fo' Linux.)
Specifyin a relatizzle path \- e.g.,
.I ./file
\&\- up in place of the
filez absolute path \- e.g.,
.I /tmp/file
\&\- won't work cuz
.I lsof
must match tha charactas you specify wit what tha fuck it findz up in the
kernel UNIX domain socket structures.
.IP
If a
.I name
is a Linux UNIX domain socket name, up in one case
.I lsof
is able ta search fo' it by its thang n' inode number, allowing
.I name
to be a relatizzle path.
Da case requires dat tha absolute path -- i.e., one beginnin wit a
slash ('/') be used by tha process dat pimped tha socket, n' hence be
stored up in the
.I /proc/net/unix
file; n' it requires that
.I lsof
be able ta obtain tha thang n' node numberz of both tha absolute path in
.I /proc/net/unix
and
.I name
via successful
.IR stat (2)
system calls.
When dem conditions is met,
.I lsof
will be able ta search fo' tha UNIX domain socket when some path ta it is
is specified in
.IR name .
Thus, fo' example, if tha path is
.IR /dev/log ,
and an
.I lsof
search is initiated when tha hustlin directory is
.IR /dev ,
then
.I name
could be
.IR ./log .
.IP
If a
.I name
is none of tha above,
.I lsof
will list any open filez whose thang n' inode match dat of the
specified path
.IR name .
.IP
If you have also specified the
.B \-b
option,
the only
.I names
you may safely specify is file systems fo' which yo' mount table
supplies alternate thang numbers.
See the
.B "AVOIDING KERNEL BLOCKS"
and
.B "ALTERNATE DEVICE NUMBERS"
sections fo' mo' shiznit.
.IP
Multiple file names is joined up in a single ORed set before
participatin up in AND option selection.
.SH AFS
.I Lsof
supports tha recognizzle of AFS filez fo' these dialects (and AFS
versions):
.PP
.nf
	AIX 4.1.4 (AFS 3.4a)
	HP\-UX 9.0.5 (AFS 3.4a)
	Linux 1.2.13 (AFS 3.3)
	Solaris 2.[56] (AFS 3.4a)
.fi
.PP
It may recognize AFS filez on other versionz of these dialects,
but has not been tested there.
Dependin on how tha fuck AFS is implemented,
.I lsof
may recognize AFS filez up in other dialects, or may have difficulties
recognizin AFS filez up in tha supported dialects.
.PP
.I Lsof
may have shiznit identifyin all aspectz of AFS filez in
supported dialects when AFS kernel support is implemented via
dynamic modulez whose addresses do not step tha fuck up in tha kernel's
variable name list.
In dat case,
.I lsof
may gotta guess all up in tha identitizzle of AFS files, n' might not be able to
obtain volume shiznit from tha kernel dat is needed fo' calculating
AFS volume node numbers.
When
.I lsof
can't compute volume node numbers, it reports blank up in tha NODE column.
.PP
The
.BI \-A " A"
option be available up in some dialect implementations of
.I lsof
for specifyin tha name list file where dynamic module kernel
addresses may be found.
When dis option be available, it is ghon be listed up in the
.I lsof
help output, presented up in response ta the
.B \-h
or
.B \-?
.PP
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit bout dynamic modules, their
symbols, n' how tha fuck they affect
.I lsof
options.
.PP
Because AFS path lookups don't seem ta participate up in the
kernelz name cache operations,
.I lsof
can't identify path name components fo' AFS files.
.SH SECURITY
.I Lsof
has three features dat may cause securitizzle concerns.
First, its default compilation mode allows mah playas ta list all
open filez wit dat shit.
Second, by default it creates a user\-readable n' user\-writable device
cache file up in tha home directory of tha real user ID dat executes
.IR lsof .
(Da list\-all\-open\-filez n' thang cache features may be disabled when
.I lsof
is compiled.)
Third, its
.B \-k
and
.B \-m
options name alternate kernel name list or memory files.
.PP
Restrictin tha listin of all open filez is controlled by the
compile\-time HASSECURITY n' HASNOSOCKSECURITY options.
When HASSECURITY is defined,
.I lsof
will allow only tha root user ta list all open files.
Da non\-root user may list only open filez of processes wit tha same user
IDentification number as tha real user ID number of the
.I lsof
process (the one dat its user logged on with).
.PP
But fuck dat shiznit yo, tha word on tha street is dat if HASSECURITY n' HASNOSOCKSECURITY is both defined,
mah playas may list open socket files, provided they is selected
with the
.B \-i
option.
.PP
When HASSECURITY aint defined, mah playas may list all open files.
.PP
Help output, presented up in response ta the
.B \-h
or
.B \-?
option, gives tha statuz of tha HASSECURITY n' HASNOSOCKSECURITY definitions.
.PP
See the
.B Security
section of the
.I 00README
file of the
.I lsof
distribution fo' shiznit on building
.I lsof
with tha HASSECURITY n' HASNOSOCKSECURITY options enabled.
.PP
Creation n' use of a user\-readable n' user\-writable device
cache file is controlled by tha compile\-time HASDCACHE option.
See the
.B "DEVICE CACHE FILE"
section n' tha sections dat follow it fo' details on how tha fuck its path
is formed.
For securitizzle considerations it is blingin ta note dat up in tha default
.I lsof
distribution, if tha real user ID under which
.I lsof
is executed is root, tha thang cache file is ghon be freestyled up in root's
home directory \- e.g.,
.I /
or
.IR /root .
When HASDCACHE aint defined,
.I lsof
does not write or attempt ta read a thang cache file.
.PP
When HASDCACHE is defined, the
.I lsof
help output, presented up in response ta the
.BR \-h ,
.BR \-D? ,
or
.B \-?
options, will provide thang cache file handlin shiznit.
When HASDCACHE aint defined, the
.B \-h
or
.B \-?
output gonna git no
.B \-D
option description.
.PP
Before you decizzle ta disable tha thang cache file feature \- enabling
it improves tha performizzle of
.I lsof
by reducin tha startup overhead of examinin all tha nodes in
.I /dev
(or
.IR /devices )
\&\- read tha rap of it up in the
.I 00DCACHE
file of the
.I lsof
distribution n' the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
.PP
WHEN IN DOUBT, YOU CAN TEMPORARILY DISABLE THE USE OF THE DEVICE CACHE FILE
WITH THE
.B \-Di
OPTION.
.PP
When
.I lsof
user declares alternate kernel name list or memory filez wit the
.B \-k
and
.B \-m
options,
.I lsof
checks tha userz authoritizzle ta read dem with
.IR access (2).
This is intended ta prevent whatever special power
.I lsof's
modes might confer on it from lettin it read filez not normally
accessible via tha authoritizzle of tha real user ID.
.SH OUTPUT
This section raps bout tha shiznit
.I lsof
lists fo' each open file.
See the
.B "OUTPUT FOR OTHER PROGRAMS"
section fo' additionizzle shiznit on output dat can be processed
by another program.
.PP
.I Lsof
only outputs printable (declared so by
.IR isprint (3))
8 bit characters.
Non\-printable charactas is printed up in one of three forms:
the C ``\\[bfrnt]'' form;
the control characta `^' form (e.g., ``^@'');
or hexadecimal leadin ``\\x'' form (e.g., ``\\xab'').
Space is non\-printable up in tha COMMAND column (``\\x20'')
and printable elsewhere.
.PP
For some dialects \- if HASSETLOCALE is defined up in tha dialect's
machine.h header file \-
.I lsof
will print tha extended 8 bit charactaz of a language locale.
The
.I lsof
process must be supplied a language locale environment variable
(e.g., LANG) whose value represents a known language locale
in which tha extended charactas is considered printable by
.IR isprint (3).
Otherwise
.I lsof
considaz tha extended charactas non\-printable n' prints dem according
to its rulez fo' non\-printable characters, stated above.
Consult yo' dialect's
.IR setlocale (3)
man page fo' tha namez of other environment variablez dat may
be used up in place of LANG \- e.g., LC_ALL, LC_CTYPE, etc.
.PP
.I Lsof's
language locale support fo' a gangbangin' finger-lickin' dialect also covers wide charactas \- e.g.,
UTF-8 \- when HASSETLOCALE n' HASWIDECHAR is defined up in tha dialect's
machine.h header file, n' when a suitable language locale has been defined
in tha appropriate environment variable fo' the
.I lsof
process.
Wide charactas is printable under dem conditions if
.IR iswprint (3)
reports dem ta be.
If HASSETLOCALE, HASWIDECHAR n' a suitable language locale aren't defined,
or if
.IR iswprint (3)
reports wide charactas dat aren't printable,
.I lsof
considaz tha wide charactas non\-printable n' prints each of their
8 bits accordin ta its rulez fo' non\-printable characters, stated above.
.PP
Consult tha lyrics ta tha "Language locale support" thangs up in the
lsof FAQUIZZY (Da \fBFAQ\fP section gives its location.) fo' mo' shiznit.
.PP
.I Lsof
dynamically sizes tha output columns each time it runs, guaranteeing
that each column be a minimum size.
It also guarantees dat each column is separated from its predecessor
by at least one space.
.TP \w'COMMAND'u+4
COMMAND
gotz nuff tha straight-up original gangsta nine charactaz of tha name of tha UNIX command
associated wit tha process.
If a non\-zero
.I w
value is specified ta the
.BI +c " w"
option, tha column gotz nuff tha first
.I w
charactaz of tha name of tha UNIX command associated wit tha process
up ta tha limit of charactas supplied to
.I lsof
by tha UNIX dialect.
(See tha description of the
.BI +c " w"
command or the
.I lsof
FAQ fo' mo' shiznit.
Da \fBFAQ\fP section gives its location.)
.IP
If
.I w
is less than tha length of tha column title, ``COMMAND'', it will
be raised ta dat length.
.IP
If a zero
.I w
value is specified ta the
.BI +c " w"
option, tha column gotz nuff all tha charactaz of tha name of tha UNIX command
associated wit tha process.
.IP
All command name charactas maintained by tha kernel up in its structures
are displayed up in field output when tha command name descriptor (`c')
is specified.
See the
.B "OUTPUT FOR OTHER COMMANDS"
section fo' shiznit on selectin field output n' tha associated
command name descriptor.
.TP
PID
is tha Process IDentification number of tha process.
.TP
TID
is tha task (thread) IDentification number, if task (thread)
reportin is supported by tha dialect n' a task (thread) is
bein listed.
(If help output \- i.e., tha output of the
.B \-h
or
.B \-?
options \- shows dis option, then task (thread) reportin is
supported by tha dialect.)
.IP
A blank TID column up in Linux indicates a process \- i.e., a non\-task.
.TP
ZONE
is tha Solaris 10 n' higher unit name.
This column must be selected wit the
.B \-z
option.
.TP
SECURITY\-CONTEXT
is tha SELinux securitizzle context.
This column must be selected wit the
.B -Z
option.
Note dat the
.B -Z
option is inhibited when SELinux is disabled up in tha hustlin Linux
kernel.
.TP
PPID
is tha Parent Process IDentification number of tha process.
It be only displayed when the
.B \-R
option has been specified.
.TP
PGID
is tha process crew IDentification number associated with
the process.
It be only displayed when the
.B \-g
option has been specified.
.TP
USER
is tha user ID number or login name of tha user ta whom
the process belongs, probably tha same as reported by
.IR ps (1).
But fuck dat shiznit yo, tha word on tha street is dat on Linux USER is tha user ID number or login dat owns
the directory up in /proc where
.I lsof
findz shiznit bout tha process.
Usually dat is tha same ol' dirty value reported by
.IR ps (1),
but may differ when tha process has chizzled its effectizzle user ID.
(See the
.B \-l
option description fo' shiznit on when a user ID number or
login name is displayed.)
.TP
FD
is tha File Descriptor number of tha file or:
.IP
.nf
	\fBcwd\fP	current hustlin directory;
.br
	\fBL\fInn\fR	library references (AIX);
.br
	\fBerr\fR	FD shiznit error (see NAME column);
.br
	\fBjld\fR	jail directory (FreeBSD);
.br
	\fBltx\fP	shared library text (code n' data);
.br
	\fBMxx\fP	hex memory\-mapped type number xx.
.br
	\fBm86\fP	DOS Merge mapped file;
.br
	\fBmem\fP	memory\-mapped file;
.br
	\fBmmap\fP	memory\-mapped device;
.br
	\fBpd\fP	parent directory;
.br
	\fBrtd\fP	root directory;
.br
	\fBtr\fR	kernel trace file (OpenBSD);
.br
	\fBtxt\fP	program text (code n' data);
.br
	\fBv86\fP	VP/ix mapped file;
.fi
.IP
FD is followed by one of these characters, describin tha mode under which
the file is open:
.IP
	\fBr\fP fo' read access;
.br
	\fBw\fP fo' write access;
.br
	\fBu\fP fo' read n' write access;
.br
	space if mode unknown n' no lock
.br
		characta bigs up;
.br
	`\-' if mode unknown n' lock
.br
		characta bigs up.
.IP
Da mode characta is followed by one of these lock characters, describing
the type of lock applied ta tha file:
.IP
	\fBN\fP fo' a Solaris NFS lock of unknown type;
.br
	\fBr\fP fo' read lock on part of tha file;
.br
	\fBR\fP fo' a read lock on tha entire file;
.br
	\fBw\fP fo' a write lock on part of tha file;
.br
	\fBW\fP fo' a write lock on tha entire file;
.br
	\fBu\fP fo' a read n' write lock of any length;
.br
	\fBU\fP fo' a lock of unknown type;
.br
	\fBx\fP fo' a SCO OpenServer Xenix lock on part
	of tha file;
.br
	\fBX\fP fo' a SCO OpenServer Xenix lock on the
	entire file;
.br
	space if there is no lock.
.IP
See the
.B LOCKS
section fo' mo' shiznit on tha lock shiznit character.
.IP
Da FD column contents constitutes a single field fo' parsin in
post\-processin scripts.
.TP
TYPE
is tha type of tha node associated wit tha file \- e.g., GDIR, GREG,
VDIR, VREG, etc.
.IP
or ``IPv4'' fo' a IPv4 socket;
.IP
or ``IPv6'' fo' a open IPv6 network file \- even if its address is
IPv4, mapped up in a IPv6 address;
.IP
or ``ax25'' fo' a Linux AX.25 socket;
.IP
or ``inet'' fo' a Internizzle domain socket;
.IP
or ``lla'' fo' a HP\-UX link level access file;
.IP
or ``rte'' fo' a AF_ROUTE socket;
.IP
or ``sock'' fo' a socket of unknown domain;
.IP
or ``unix'' fo' a UNIX domain socket;
.IP
or ``x.25'' fo' a HP\-UX x.25 socket;
.IP
or ``BLK'' fo' a funky-ass block special file;
.IP
or ``CHR'' fo' a cold-ass lil characta special file;
.IP
or ``DEL'' fo' a Linux map file dat has been deleted;
.IP
or ``DIR'' fo' a gangbangin' finger-lickin' directory;
.IP
or ``DOOR'' fo' a VDOOR file;
.IP
or ``FIFO'' fo' a FIFO special file;
.IP
or ``KQUEUE'' fo' a BSD steez kernel event queue file;
.IP
or ``LINK'' fo' a symbolic link file;
.IP
or ``MPB'' fo' a multiplexed block file;
.IP
or ``MPC'' fo' a multiplexed characta file;
.IP
or ``NOFD'' fo' a Linux /proc/<PID>/fd directory dat can't be opened \--
the directory path appears up in tha NAME column, followed by a error
message;
.IP
or ``PAS'' fo' a
.I /proc/as
file;
.IP
or ``PAXV'' fo' a
.I /proc/auxv
file;
.IP
or ``PCRE'' fo' a
.I /proc/cred
file;
.IP
or ``PCTL'' fo' a
.I /proc
control file;
.IP
or ``PCUR'' fo' tha current
.I /proc
process;
.IP
or ``PCWD'' fo' a
.I /proc
current hustlin directory;
.IP
or ``PDIR'' fo' a
.I /proc
directory;
.IP
or ``PETY'' fo' a
.I /proc
executable type (\fIetype\fP);
.IP
or ``PFD'' fo' a
.I /proc
file descriptor;
.IP
or ``PFDR'' fo' a
.I /proc
file descriptor directory;
.IP
or ``PFIL'' fo' a executable
.I /proc
file;
.IP
or ``PFPR'' fo' a
.I /proc
FP regista set;
.IP
or ``PGD'' fo' a
.I /proc/pagedata
file;
.IP
or ``PGID'' fo' a
.I /proc
group notifier file;
.IP
or ``PIPE'' fo' pipes;
.IP
or ``PLC'' fo' a
.I /proc/lwpctl
file;
.IP
or ``PLDR'' fo' a
.I /proc/lpw
directory;
.IP
or ``PLDT'' fo' a
.I /proc/ldt
file;
.IP
or ``PLPI'' fo' a
.I /proc/lpsinfo
file;
.IP
or ``PLST'' fo' a
.I /proc/lstatus
file;
.IP
or ``PLU'' fo' a
.I /proc/lusage
file;
.IP
or ``PLWG'' fo' a
.I /proc/gwindows
file;
.IP
or ``PLWI'' fo' a
.I /proc/lwpsinfo
file;
.IP
or ``PLWS'' fo' a
.I /proc/lwpstatus
file;
.IP
or ``PLWU'' fo' a
.I /proc/lwpusage
file;
.IP
or ``PLWX'' fo' a
.I /proc/xregs
file'
.IP
or ``PMAP'' fo' a
.I /proc
map file (\fImap\fP);
.IP
or ``PMEM'' fo' a
.I /proc
memory image file;
.IP
or ``PNTF'' fo' a
.I /proc
process notifier file;
.IP
or ``POBJ'' fo' a
.I /proc/object
file;
.IP
or ``PODR'' fo' a
.I /proc/object
directory;
.IP
or ``POLP'' fo' a oldschool format
.I /proc
light weight process file;
.IP
or ``POPF'' fo' a oldschool format
.I /proc
PID file;
.IP
or ``POPG'' fo' a oldschool format
.I /proc
page data file;
.IP
or ``PORT'' fo' a SYSV named pipe;
.IP
or ``PREG'' fo' a
.I /proc
regista file;
.IP
or ``PRMP'' fo' a
.I /proc/rmap
file;
.IP
or ``PRTD'' fo' a
.I /proc
root directory;
.IP
or ``PSGA'' fo' a
.I /proc/sigact
file;
.IP
or ``PSIN'' fo' a
.I /proc/psinfo
file;
.IP
or ``PSTA'' fo' a
.I /proc
status file;
.IP
or ``PSXSEM'' fo' a POSIX semaphore file;
.IP
or ``PSXSHM'' fo' a POSIX shared memory file;
.IP
or ``PUSG'' fo' a
.I /proc/usage
file;
.IP
or ``PW'' fo' a
.I /proc/watch
file;
.IP
or ``PXMP'' fo' a
.I /proc/xmap
file;
.IP
or ``REG'' fo' a regular file;
.IP
or ``SMT'' fo' a gangbangin' finger-lickin' dirty-ass shared memory transhiznit file;
.IP
or ``STSO'' fo' a stream socket;
.IP
or ``UNNM'' fo' a unnamed type file;
.IP
or ``XNAM'' fo' a OpenServer Xenix special file of unknown type;
.IP
or ``XSEM'' fo' a OpenServer Xenix semaphore file;
.IP
or ``XSD'' fo' a OpenServer Xenix shared data file;
.IP
or tha four type number octets if tha correspondin name aint known.
.TP
FILE\-ADDR
gotz nuff tha kernel file structure address when
.B f
has been specified to
.BR +f ;
.TP
FCT
gotz nuff tha file reference count from tha kernel file structure when
.B c
has been specified to
.BR +f ;
.TP
FILE\-FLAG
when
.B g
or
.B G
has been specified to
.BR +f ,
this field gotz nuff tha contentz of tha f_flag[s] gangmember of tha kernel
file structure n' tha kernelz per\-process open file flags (if available);
\&`G' causes dem ta be displayed up in hexadecimal;
\&`g', as short\-hand names;
two lists may be displayed wit entries separated by commas, the
lists separated by a semicolon (`;');
the first list may contain short\-hand names fo' f_flag[s] joints from
the followin table:
.IP
.nf
	AIO		asynchronous I/O (e.g., FAIO)
	AP		append
	ASYN		asynchronous I/O (e.g., FASYNC)
	BAS		block, test, n' set up in use
	BKIU		block if up in use
	BL		use block offsets
	BSK		block seek
	CA		copy avoid
	CIO		concurrent I/O
	CLON		clone
	CLRD		CL read
	CR		create
	DF		defer
	DFI		defer IND
	DFLU		data flush
	DIR		direct
	DLY		delay
	DOCL		do clone
	DSYN		data\-only integrity
	DTY		must be a gangbangin' finger-lickin' directory
	EVO		event only
	EX		open fo' exec
	EXCL		exclusive open
	FSYN		synchronous writes
	GCDF		defer durin unp_gc() (AIX)
	GCMK		mark durin unp_gc() (AIX)
	GTTY		accessed via /dev/tty
	HUP		HUP up in progress
	KERN		kernel
	KIOC		kernel\-issued ioctl
	LCK		has lock
	LG		pimpin' file
	MBLK		stream message block
	MK		mark
	MNT		mount
	MSYN		multiplex synchronization
	NATM		don't update atime
	NB		non\-blockin I/O
	NBDR		no BDRM check
	NBIO		SYSV non\-blockin I/O
	NBF		n\-bufferin up in effect
	NC		no cache
	ND		no delay
	NDSY		no data synchronization
	NET		network
	NFLK		don't follow links
	NMFS		NM file system
	NOTO		disable background stop
	NSH		no share
	NTTY		no controllin TTY
	OLRM		OLR mirror
	PAIO		POSIX asynchronous I/O
	PP		POSIX pipe
	R		read
	RC		file n' record lockin cache
	REV		revoked
	RSH		shared read
	RSYN		read synchronization
	RW		read n' write access
	SL		shared lock
	SNAP		cooked snapshot
	SOCK		socket
	SQSH		Sequent shared set on open
	SQSV		Sequent SVM set on open
	SQR		Sequent set repair on open
	SQS1		Sequent full shared open
	SQS2		Sequent partial shared open
	STPI		stop I/O
	SWR		synchronous read
	SYN		file integritizzle while writing
	TCPM		avoid TCP collision
	TR		truncate
	W		write
	WKUP		parallel I/O synchronization
	WTG		parallel I/O synchronization
	VH		vhangup pending
	VTXT		virtual text
	XL		exclusive lock
.fi
.IP
this list of names was derived from F* #definez up in dialect header files
<fcntl.h>, <linux</fs.h>, <sys/fcntl.c>, <sys/fcntlcom.h>, n' <sys/file.h>;
see tha lsof.h header file fo' a list showin tha correspondence
between tha above short\-hand names n' tha header file definitions;
.IP
the second list (afta tha semicolon) may contain short\-hand names
for kernel per\-process open file flags from dis table:
.IP
.nf
	ALLC		allocated
	BR		the file has been read
	BHUP		activitizzle stopped by SIGHUP
	BW		the file has been written
	CLSG		closing
	CX		close\-on-exec (see fcntl(F_SETFD))
	LCK		lock was applied
	MP		memory\-mapped
	OPIP		open pendin \- up in progress
	RSVW		reserved wait
	SHMT		UF_FSHMAT set (AIX)
	USE		in use (multi\-threaded)
.fi
.TP
NODE\-ID
(or INODE\-ADDR fo' some dialects)
gotz nuff a unique identifier fo' tha file node (usually tha kernel
vnode or inode address yo, but also occasionally a cold-ass lil concatenation of
device n' node number) when
.B n
has been specified to
.BR +f ;
.TP
DEVICE
gotz nuff tha thang numbers, separated by commas, fo' a cold-ass lil characta special,
block special, regular, directory or NFS file;
.IP
or ``memory'' fo' a memory file system node under Tru64 UNIX;
.IP
or tha address of tha private data area of a Solaris socket
stream;
.IP
or a kernel reference address dat identifies tha file
(Da kernel reference address may be used fo' FIFO's, fo' example.);
.IP
or
the base address or thang name of a Linux AX.25 socket device.
.IP
Usually only tha lower thirty two bitz of Tru64 UNIX kernel addresses
are displayed.
.TP
SIZE, SIZE/OFF, or OFFSET
is tha size of tha file or tha file offset up in bytes.
A value is displayed up in dis column only if it be available.
.I Lsof
displays whatever value \- size or offset \- be appropriate fo' tha type
of tha file n' tha version of
.IR lsof .
.IP
On some UNIX dialects
.I lsof
can't obtain accurate or consistent file offset shiznit from its
kernel data sources, sometimes just fo' particular kindz of files
(e.g., socket files.)
In other cases, filez aint gots legit sizes \- e.g., sockets, FIFOs,
pipes \- so
.I lsof
displays fo' they sizes tha content amounts it findz up in they kernel
buffer descriptors (e.g., socket buffer size counts or TCP/IP window
sizes.)
Consult the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit.
.IP
Da file size is displayed up in decimal;
the offset is normally displayed up in decimal wit a leadin ``0t'' if
it gotz nuff 8 digits or less; up in hexadecimal wit a leadin ``0x'' if
it is longer than 8 digits.
(Consult the
.BI \-o " o"
option description fo' shiznit on when 8 might default to
some other value.)
.IP
Thus tha leadin ``0t'' n' ``0x'' identify a offset when tha column
may contain both a size n' a offset (i.e., its title is SIZE/OFF).
.IP
If the
.B \-o
option is specified,
.I lsof
always displays tha file offset (or not a god damn thang if no offset be available)
and labels tha column OFFSET.
Da offset always begins wit ``0t'' or ``0x'' as busted lyrics bout above.
.IP
The
.I lsof
user can control tha switch from ``0t'' ta ``0x'' wit the
.BI \-o " o"
option.
Consult its description fo' mo' shiznit.
.IP
If the
.B \-s
option is specified,
.I lsof
always displays tha file size (or not a god damn thang if no size be available)
and labels tha column SIZE.
The
.B \-o
and
.B \-s
options is mutually exclusive; they can't both be specified.
.IP
For filez dat aint gots a gangbangin' fixed size \- e.g., don't reside
on a gangbangin' finger-lickin' disk thang \-
.I lsof
will display appropriate shiznit bout tha current size or
posizzle of tha file if it be available up in tha kernel structures
that define tha file.
.TP
NLINK
gotz nuff tha file link count when
.B +L
has been specified;
.TP
NODE
is tha node number of a local file;
.IP
or tha inode number of a NFS file up in tha server host;
.IP
or tha Internizzle protocol type \- e. g, ``TCP'';
.IP
or ``STR'' fo' a stream;
.IP
or ``CCITT'' fo' a HP\-UX x.25 socket;
.IP
or tha IRQ or inode number of a Linux AX.25 socket device.
.TP
NAME
is tha name of tha mount point n' file system on which tha file resides;
.IP
or tha name of a gangbangin' file specified up in the
.I names
option (afta any symbolic links done been resolved);
.IP
or tha name of a cold-ass lil characta special or block special device;
.IP
or tha local n' remote Internizzle addressez of a network file;
the local host name or IP number is followed by a cold-ass lil colon (':'), the
port, ``->'', n' tha two\-part remote address;
IP addresses may be reported as numbers or names, dependin on the
.BR +|\-M ,
.BR \-n ,
and
.B \-P
options;
colon\-separated IPv6 numbers is enclosed up in square brackets;
IPv4 INADDR_ANY n' IPv6 IN6_IS_ADDR_UNSPECIFIED addresses, and
zero port numbers is represented by a asterisk ('*');
a UDP destination address may be followed by tha amount of time
elapsed since tha last packet was busted ta tha destination;
TCP, UDP n' UDPLITE remote addresses may be followed by TCP/TPI
information up in parentheses \- state (e.g., ``(ESTABLISHED)'', ``(Unbound)''),
queue sizes, n' window sizes (not all dialects) \- up in a gangbangin' fashion
similar ta what
.IR netstat (1)
reports;
see the
.B \-T
option description or tha description of tha TCP/TPI field in
.B "OUTPUT FOR OTHER PROGRAMS"
for mo' shiznit on state, queue size, n' window size;
.IP
or tha address or name of a UNIX domain socket, possibly including
a stream clone thang name, a gangbangin' file system objectz path name, local
and foreign kernel addresses, socket pair shiznit, n' a funky-ass bound
vnode address;
.IP
or tha local n' remote mount point namez of a NFS file;
.IP
or ``STR'', followed by tha stream name;
.IP
or a stream characta thang name, followed by ``->'' n' tha stream name
or a list of stream module names, separated by ``->'';
.IP
or ``STR:'' followed by tha SCO OpenServer stream thang n' module
names, separated by ``->'';
.IP
or system directory name, `` -- '', n' as nuff componentz of tha path
name as
.I lsof
can find up in tha kernelz name cache fo' selected dialects
(See the
.B "KERNEL NAME CACHE"
section fo' mo' shiznit.);
.IP
or ``PIPE->'', followed by a Solaris kernel pipe destination address;
.IP
or ``COMMON:'', followed by tha vnode thang shiznit structure's
device name, fo' a Solaris common vnode;
.IP
or tha address crew, followed by a slash (`/'), followed by fourteen
comma\-separated bytez of a non\-Internizzle raw socket address;
.IP
or tha HP\-UX x.25 local address, followed by tha virtual connection
number (if any), followed by tha remote address (if any);
.IP
or ``(dead)'' fo' disassociated Tru64 UNIX filez \- typically terminal files
that done been flagged wit tha TIOCNOTTY ioctl n' closed by daemons;
.IP
or ``rd=<offset>'' n' ``wr=<offset>'' fo' tha jointz of the
read n' write offsetz of a FIFO;
.IP
or ``clone \fIn\fP:/dev/event'' fo' SCO OpenServer file clonez of the
.I /dev/event
device, where
.I n
is tha minor thang number of tha file;
.IP
or ``(socketpair: n)'' fo' a Solaris 2.6, 8, 9  or 10
UNIX domain socket, pimped by the
.IR socketpair (3N)
network function;
.IP
or ``no PCB'' fo' socket filez dat aint gots a protocol block
associated wit them, optionally followed by ``, CANTSENDMORE'' if
sendin on tha socket has been disabled, or ``, CANTRCVMORE'' if
receivin on tha socket has been disabled (e.g., by the
.IR shutdown (2)
function);
.IP
or tha local n' remote addressez of a Linux IPX socket file
in tha form <net>:[<node>:]<port>, followed up in parentheses
by tha transmit n' receive queue sizes, n' tha connection state;
.IP
or ``dgram'' or ``stream'' fo' tha type UnixWare 7.1.1 n' above in\-kernel
UNIX domain sockets, followed by a cold-ass lil colon (':') n' tha local path name
when available, followed by ``->'' n' tha remote path name or kernel
socket address up in hexadecimal when available;
.IP
or tha association value, association index, endpoint value, local address,
local port, remote address n' remote port fo' Linux SCTP sockets;
.IP
or ``protocol: '' followed by tha Linux socketz protocol attribute.
.PP
For dialects dat support a ``namefs'' file system, allowin one
file ta be attached ta another with
.IR fattach (3C),
.I lsof
will add ``(FA:<address1><direction><address2>)'' ta tha NAME column.
<address1> n' <address2> is hexadecimal vnode addresses.
<direction> is ghon be ``<-'' if <address2> has been fattach'ed to
this vnode whose address is <address1>;
and ``->'' if <address1>, tha vnode address of dis vnode, has been
fattach'ed ta <address2>.
<address1> may be omitted if it already appears up in tha DEVICE column.
.PP
.I
Lsof
may add two parenthetical notes ta tha NAME column fo' open Solaris 10 files:
\&``(?)'' if
.I lsof
considaz tha path name of questionable accuracy;
and ``(deleted)'' if the
.B \-X
option has been specified and
.I lsof
detects tha open filez path name has been deleted.
Consult the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit on these NAME column additions.
.SH LOCKS
.I Lsof
can't adequately report tha wide variety of UNIX dialect file locks
in a single character.
What it reports up in a single characta be a cold-ass lil compromise between the
information it findz up in tha kernel n' tha limitationz of tha reporting
format.
.PP
Mo'over, when a process holdz nuff muthafuckin byte level locks on a gangbangin' file,
.I lsof
only reports tha statuz of tha straight-up original gangsta lock it encounters.
If it aint nuthin but a funky-ass byte level lock, then tha lock characta is ghon be reported
in lower case \- i.e., `r', `w', or `x' \- rather than tha upper case
equivalent reported fo' a gangbangin' full file lock.
.PP
Generally
.I lsof
can only report on locks held by local processes on local files.
When a local process sets a lock on a remotely mounted (e.g., NFS)
file, tha remote server host probably recordz tha lock state.
One exception is Solaris \- at some patch levelz of 2.3, n' up in all
versions above 2.4, tha Solaris kernel recordz shiznit on remote
locks up in local structures.
.PP
.I Lsof
has shiznit reportin locks fo' some UNIX dialects.
Consult the
.B BUGS
section of dis manual page or the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for mo' shiznit.
.SH "OUTPUT FOR OTHER PROGRAMS"
When the
.B \-F
option is specified,
.I lsof
produces output dat is suitable fo' processin by another program \- e.g, an
.I awk
or
.I Perl
script, or a C program.
.PP
Each unit of shiznit is output up in a gangbangin' field dat is identified
with a leadin characta n' terminated by a NL (012) (or a NUL
(000) if tha 0 (zero) field identifier characta is specified.)
Da data of tha field bigs up immediately afta tha field identification
characta n' extendz ta tha field terminator.
.PP
It be possible ta be thinkin of field output as process n' file sets.
A process set begins wit a gangbangin' field whose identifier is `p' (for
process IDentifier (PID)).
It extendz ta tha beginnin of tha next PID field or tha beginning
of tha straight-up original gangsta file set of tha process, whichever comes first.
Included up in tha process set is fieldz dat identify tha command,
the process crew IDentification (PGID) number, tha task (thread)
ID (TID), n' tha user ID (UID) number or login name.
.PP
A file set begins wit a gangbangin' field whose identifier is `f' (for
file descriptor).
It be followed by lines dat describe tha filez access mode,
lock state, type, device, size, offset, inode, protocol, name
and stream module names.
It extendz ta tha beginnin of tha next file or process set,
whichever comes first.
.PP
When tha NUL (000) field terminator has been selected wit the
0 (zero) field identifier character,
.I lsof
endz each process n' file set wit a NL (012) character.
.PP
.I Lsof
always produces one field, tha PID (`p') field.
All other fieldz may be declared optionally up in tha field identifier
characta list dat bigs up the
.B \-F
option.
When a gangbangin' field selection characta identifies a item
.I lsof
does not normally list \- e.g., PPID, selected with
.BR \-R " \-"
specification of tha field characta \- e.g., ``\fB\-FR\fP'' \-
also selects tha listin of tha item.
.PP
It be entirely possible ta select a set of fieldz dat cannot
easily be parsed \- e.g., if tha field descriptor field is not
selected, it may be hard as fuck ta identify file sets.
To help you avoid dis difficulty,
.I lsof
supports the
.B \-F
option; it selects tha output of all fieldz wit NL terminators
(the
.B \-F0
option pair selects tha output of all fieldz wit NUL terminators).
For compatibilitizzle reasons neither
.B \-F
nor
.B \-F0
select tha raw thang field.
.PP
These is tha fieldz that
.I lsof
will produce.
Da single characta listed first is tha field identifier.
.PP
.nf
	a	file access mode
	c	process command name (all charactas from proc or
		user structure)
	C	file structure share count
	d	filez thang characta code 
	D	filez major/minor thang number (0x<hexadecimal>)
	f	file descriptor
	F	file structure address (0x<hexadecimal>)
	G	file flaGs (0x<hexadecimal>; names if \fB+fg\fP bigs up)
	g	process crew ID
	i	filez inode number
	K	tasK ID
	k	link count
	l	filez lock status
	L	process login name
	m	marker between repeated output
	n	file name, comment, Internizzle address
	N	node identifier (ox<hexadecimal>
	o	filez offset (decimal)
	p	process ID (always selected)
	P	protocol name
	r	raw thang number (0x<hexadecimal>)
	R	parent process ID
	s	filez size (decimal)
	S	filez stream identification
	t	filez type
	T	TCP/TPI shiznit, identified by prefixes (the
		`=' is part of tha prefix):
		    QR=<read queue size>
		    QS=<send queue size>
		    SO=<socket options n' joints> (not all dialects)
		    SS=<socket states> (not all dialects)
		    ST=<connection state>
		    TF=<TCP flags n' joints> (not all dialects)
		    WR=<window read size>  (not all dialects)
		    WW=<window write size>  (not all dialects)
		(TCP/TPI shiznit aint reported fo' all supported
		  UNIX dialects, n' you can put dat on yo' toast. Da \fB\-h\fP or \fB\-?\fP help output fo' the
		  \fB\-T\fP option will show what tha fuck TCP/TPI reportin can be
		  requested.)
	u	process user ID
	z	Solaris 10 n' higher unit name
	Z	SELinux securitizzle context (inhibited when SELinux is disabled)
	0	use NUL field terminator characta up in place of NL
	1\-9	dialect\-specific field identifiers (Da output
		of \fB\-F?\fP identifies tha shiznit ta be found
		in dialect\-specific fields.)
.fi
.PP
Yo ass can git on\-line help shiznit on these charactas n' their
descriptions by specifyin the
.B \-F?
option pair.
(Escape tha `?' characta as yo' shell requires.)
Additionizzle shiznit on field content can be found up in the
.B OUTPUT
section.
.PP
As a example, ``\fB\-F pcfn\fP'' will select tha process ID (`p'),
command name (`c'), file descriptor (`f') n' file name (`n')
fieldz wit a NL field terminator character; ``\fB\-F pcfn0\fP''
selects tha same ol' dirty output wit a NUL (000) field terminator character.
.PP
.I Lsof
doesn't produce all fieldz fo' every last muthafuckin process or file set, only
those dat is available.
Some fieldz is mutually exclusive: file thang charactas and
file major/minor thang numbers; file inode number n' protocol
name; file name n' stream identification; file size n' offset.
One or tha other gangmember of these mutually exclusive sets will appear
in field output yo, but not both.
.PP
Normally
.I lsof
endz each field wit a NL (012) character.
The
0 (zero) field identifier characta may be specified ta chizzle the
field terminator character
to a NUL (000).
A NUL terminator may be easier ta process with
.I xargs (1),
for example, or wit programs whose quotin mechanizzlez may not
easily cope wit tha range of charactas up in tha field output.
When tha NUL field terminator is up in use,
.I lsof
endz each process n' file set wit a NL (012).
.PP
Three aidz ta producin programs dat can process
.I lsof
field output is included up in the
.I lsof
distribution.
Da first be a C header file,
.IR lsof_fields.h ,
that gotz nuff symbols fo' tha field identification characters, indexes for
storin dem up in a table, n' explanation strings dat may be compiled into
programs.
.I Lsof
uses dis header file.
.PP
Da second aid be a set of sample scripts dat process field output,
written in
.IR awk ,
.I Perl
4, and
.I Perl
5.
They're located up in the
.I scripts
subdirectory of the
.I lsof
distribution.
.PP
Da third aid is tha C library used fo' the
.I lsof
test suite.
Da test suite is freestyled up in C n' uses field output ta validate
the erect operation of
.IR lsof .
Da library can be found up in the
.I tests/LTlib.c
file of the
.I lsof
distribution.
Da library uses tha straight-up original gangsta aid, the
.I lsof_fields.h
header file.
.SH "BLOCKS AND TIMEOUTS"
.I Lsof
can be blocked by some kernel functions dat it uses \-
.IR lstat (2),
.IR readlink (2),
and
.IR stat (2).
These functions is stalled up in tha kernel, fo' example, when the
hosts where mounted NFS file systems reside become inaccessible.
.PP
.I Lsof
attempts ta break these blocks wit timers n' lil pimp processes,
but tha steez is not wholly reliable.
When
.I lsof
does manage ta break a funky-ass block, it will report tha break wit a error
message.
Da lyrics may be suppressed wit the
.B \-t
and
.B \-w
options.
.PP
Da default timeout value may be displayed wit the
.B \-h
or
.B \-?
option, n' it may be chizzled wit the
.BI \-S " [t]"
option.
Da minimum for
.I t
is two secondz yo, but you should avoid lil' small-ass joints, since slow system
responsivenizz can cause short timeouts ta expire unexpectedly and
like stop
.I lsof
before it can produce any output.
.PP
When
.I lsof
has ta break a funky-ass block durin its access of mounted file system
information, it normally continues, although wit less shiznit
available ta display bout open files.
.PP
.I Lsof
can also be pimped up ta avoid tha protection of timers n' lil pimp processes
when rockin tha kernel functions dat might block by specifyin the
.B \-O
option.
While dis will allow
.I lsof
to start up wit less overhead, it exposes
.I lsof
completely ta tha kernel thangs dat might block dat shit.
Use dis option cautiously.
.SH "AVOIDING KERNEL BLOCKS"
.PP
Yo ass can use the
.B \-b
option ta tell
.I lsof
to avoid rockin kernel functions dat would block.
Some cautions apply.
.PP
First, rockin dis option probably requires dat yo' system supply
alternate thang numbers up in place of tha thang numbers that
.I lsof
would normally obtain wit the
.IR lstat (2)
and
.IR stat (2)
kernel functions.
See the
.B "ALTERNATE DEVICE NUMBERS"
section fo' mo' shiznit on alternate thang numbers.
.PP
Second, you can't specify
.I names
for
.I lsof
to locate unless they file system names.
This is cuz
.I lsof
needz ta know tha thang n' inode numberz of filez listed with
.I names
in the
.I lsof
options, n' the
.B \-b
option prevents
.I lsof
from obtainin em.
Mo'over, since
.I lsof
only has thang numbers fo' tha file systems dat have alternates,
its mobilitizzle ta locate filez on file systems dependz straight-up on the
availabilitizzle n' accuracy of tha alternates.
If no alternates is available, or if they incorrect,
.I lsof
won't be able ta locate filez on tha named file systems.
.PP
Third, if tha namez of yo' file system directories that
.I lsof
obtains from yo' systemz mount table is symbolic links,
.I lsof
won't be able ta resolve tha links.
This is cuz the
.B \-b
option causes
.I lsof
to avoid tha kernel
.IR readlink (2)
function it uses ta resolve symbolic links.
.PP
Finally, rockin the
.B \-b
option causes
.I lsof
to issue warnin lyrics when it need ta use tha kernel functions
that the
.B \-b
option directs it ta avoid.
Yo ass can suppress these lyrics by specifyin the
.B \-w
option yo, but if you do, you won't peep tha alternate thang numbers
reported up in tha warnin lyrics.
.SH "ALTERNATE DEVICE NUMBERS"
.PP
On some dialects, when
.I lsof
has ta break a funky-ass block cuz it can't git shiznit bout a
mounted file system via the
.IR lstat (2)
and
.IR stat (2)
kernel functions, or cuz you specified the
.B \-b
option,
.I lsof
can obtain a shitload of tha shiznit it needz \- tha thang number and
possibly tha file system type \- from tha system mount table.
When dat is possible,
.I lsof
will report tha thang number it obtained.
(Yo ass can suppress tha report by specifyin the
.B \-w
option.)
.PP
Yo ass can assist dis process if yo' mount table is supported wit an
.I /etc/mtab
or
.I /etc/mnttab
file dat gotz nuff a options field by addin a ``dev=xxxx'' field for
mount points dat aint gots one up in they options strings.
Note: you must be able ta edit tha file \- i.e., some mount tables
like recent Solaris /etc/mnttab or Linux /proc/mounts is read\-only
and can't be modified.
.PP
Yo ass may also be able ta supply thang numbers rockin the
.B +m
and
.BI +m " m"
options, provided they is supported by yo' dialect.
Peep tha output of
.I lsof's
.B \-h
or
.B \-?
options ta peep if the
.B +m
and
.BI +m " m"
options is available.
.PP
Da ``xxxx'' portion of tha field is tha hexadecimal value
of tha file systemz thang number.
(Consult the
.I st_dev
field of tha output of the
.IR lstat (2)
and
.IR stat (2)
functions fo' tha appropriate joints fo' yo' file systems.)
Herez a example from a Sun Solaris 2.6
.I /etc/mnttab
for a gangbangin' file system remotely mounted via NFS:
.PP
.nf
	nfs  ignore,noquota,dev=2a40001
.fi
.PP
Therez a advantage ta havin ``dev=xxxx'' entries up in yo' mount
table file, especially fo' file systems dat is mounted from remote
NFS servers.
When a remote server crashes n' you wanna identify its playas by hustlin
.I lsof
on one of its clients,
.I lsof
probably won't be able ta git output from the
.IR lstat (2)
and
.IR stat (2)
functions fo' tha file system.
If it can obtain tha file systemz thang number from tha mount table,
it is ghon be able ta display tha filez open on tha crashed NFS server.
.PP
Some dialects dat do not use a ASCII
.I /etc/mtab
or
.I /etc/mnttab
file fo' tha mount table may still provide a alternatizzle thang number
in they internal mount tables.
This includes AIX, Applez Darwin, FreeBSD, NetBSD, OpenBSD, n' Tru64 UNIX.
.I Lsof
knows how tha fuck ta obtain tha alternatizzle thang number fo' these dialects
and uses it when its attempt to
.IR lstat (2)
or
.IR stat (2)
the file system is blocked.
.PP
If you not shizzle yo' dialect supplies alternate thang numbers
for file systems from its mount table, use this
.I lsof
incantation ta peep if it reports any alternate thang numbers:
.PP
.IP
lsof -b
.PP
Look fo' standard error file warnin lyrics that
begin ``assumin "dev=xxxx" from ...''.
.SH "KERNEL NAME CACHE"
.PP
.I Lsof
is able ta examine tha kernelz name cache or use other kernel
facilitizzles (e.g., tha ADVFS 4.x tag_to_path() function under
Tru64 UNIX) on some dialects fo' most file system types,
excludin AFS, n' extract recently used path name components from dat shit.
(AFS file system path lookups don't use tha kernelz name cache; some
Solaris VxFS file system operations apparently don't use it, either.)
.PP
.I Lsof
reports tha complete paths it findz up in tha NAME column.
If
.I lsof
can't report all components up in a path, it reports up in tha NAME column
the file system name, followed by a space, two `-' characters, another
space, n' tha name components it has located, separated by
the `/' character.
.PP
When
.I lsof
is run up in repeat mode \- i.e., wit the
.B \-r
option specified \- tha extent ta which it can report path name
components fo' tha same file may vary from cycle ta cycle.
Thatz cuz other hustlin processes can cause tha kernel to
remove entries from its name cache n' replace dem wit others.
.PP
.I Lsof's
use of tha kernel name cache ta identify tha pathz of files
can lead it ta report incorrect components under some circumstances.
This can happen when tha kernel name cache uses thang n' node
number as a key (e.g., SCO OpenServer) n' a key on a rapidly
changin file system is reused.
If tha UNIX dialectz kernel don't purge tha name cache entry for
a file when it is unlinked,
.I lsof
may find a reference ta tha wack entry up in tha cache.
The
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
has mo' shiznit on dis thang.
.PP
.I Lsof
can report path name components fo' these dialects:
.PP
.nf
	FreeBSD
	HP\-UX
	Linux
	NetBSD
	NEXTSTEP
	OpenBSD
	OPENSTEP
	SCO OpenServer
	SCO|Caldera UnixWare
	Solaris
	Tru64 UNIX
.fi
.PP
.I Lsof
can't report path name components fo' these dialects:
.PP
.nf
	AIX
.fi
.PP
If you wanna know why
.I lsof
can't report path name components fo' some dialects, peep the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
.SH "DEVICE CACHE FILE"
.PP
Examinin all thugz of the
.I /dev
(or
.IR /devices )
node tree with
.IR stat (2)
functions can be time consuming.
Whatz more, tha shiznit that
.I lsof
needz \- thang number, inode number, n' path \- rarely chizzles.
.PP
Consequently,
.I lsof
normally maintains a ASCII text file of cached
.I /dev
(or
.IR /devices )
information (exception: tha /proc\-based Linux
.I lsof
where it aint needed.)
Da local system administrator whoz ass builds
.I lsof
can control tha way tha thang cache file path is formed, selecting
from these options:
.PP
.nf
	Path from tha \fB\-D\fP option;
	Path from a environment variable;
	System\-wide path;
	Personal path (the default);
	Personal path, modified by a environment variable.
.fi
.PP
Consult tha output of the
.BR \-h ,
.B \-D? ,
or
.B \-?
help options fo' tha current state of thang cache support.
Da help output lists tha default read\-mode thang cache file path that
is up in effect fo' tha current invocation of
.IR lsof .
The
.B \-D?
option output lists tha read\-only n' write thang cache file paths,
the namez of any applicable environment variables, n' tha personal
device cache path format.
.PP
.I Lsof
can detect dat tha current thang cache file has been accidentally
or maliciously modified by integritizzle checks, includin tha computation
and verification of a sixteen bit Cyclic Redundancy Peep (CRC) sum on
the filez contents.
When
.I lsof
senses suttin' wack wit tha file, it thangs a warnin n' attempts
to remove tha current cache file n' create a freshly smoked up copy yo, but only to
a path dat tha process can legitimately write.
.PP
Da path from which a
.I lsof
process may attempt ta read a thang cache file may not be tha same
as tha path ta which it can legitimately write.
Thus when
.I lsof
senses dat it need ta update tha thang cache file, it may
choose a gangbangin' finger-lickin' different path fo' freestylin it from tha path from which
it read a incorrect or outdated version.
.PP
If available, the
.B \-Dr
option will inhibit tha freestylin of a freshly smoked up thang cache file.
(It aint nuthin but always available when specified without a path name argument.)
.PP
When a freshly smoked up thang be added ta tha system, tha thang cache file may
need ta be recreated.
Since
.I lsof
compares tha mtime of tha thang cache file wit tha mtime n' ctime
of the
.I /dev
(or
.IR /devices )
directory, it probably detects dat a freshly smoked up thang has been added;
in dat case
.I lsof
issues a warnin message n' attempts ta rebuild tha thang cache file.
.PP
Whenever
.I lsof
writes a thang cache file, it sets its ballershizzle ta tha real UID
of tha executin process, n' its permission modes ta 0600, this
restrictin its readin n' freestylin ta tha filez baller.
.SH "LSOF PERMISSIONS THAT AFFECT DEVICE CACHE FILE ACCESS"
.PP
Two permissionz of the
.I lsof
executable affect its mobilitizzle ta access thang cache files.
Da permissions is set by tha local system administrator when
.I lsof
is installed.
.PP
Da first n' rarer permission is setuid\-root.
It comes tha fuck into effect when
.I lsof
is executed; its effectizzle UID is then
root, while its real (i.e., dat of tha logged\-on user) UID is not.
The
.I lsof
distribution recommendz dat versions fo' these dialects run setuid\-root.
.PP
.nf
	HP-UX 11.11 n' 11.23
	Linux
.fi
.PP
Da second n' mo' common permission is setgid.
It comes tha fuck into effect when tha effectizzle crew IDentification number (GID)
of the
.I lsof
process is set ta one dat can access kernel memory devices \-
e.g., ``kmem'', ``sys'', or ``system''.
.PP
An
.I lsof
process dat has setgid permission probably surrendaz tha permission
afta it has accessed tha kernel memory devices.
When it do that,
.I lsof
can allow mo' liberal thang cache path formations.
The
.I lsof
distribution recommendz dat versions fo' these dialects run setgid
and be allowed ta surrender setgid permission.
.PP
.nf
	AIX 5.[12] n' 5.3-ML1
	Applez Darwin 7.x Juice Macintosh systems
	FreeBSD 4.x, 4.1x, 5.x n' [6789].x fo' x86-based systems
	FreeBSD 5.x n' [6789].x fo' Alpha, AMD64 n' Sparc64-based
	    systems
	HP\-UX 11.00 
	NetBSD 1.[456], 2.x n' 3.x fo' Alpha, x86, n' SPARC-based
	    systems
	NEXTSTEP 3.[13] fo' NEXTSTEP architectures
	OpenBSD 2.[89] n' 3.[0\-9] fo' x86-based systems
	OPENSTEP 4.x
	SCO OpenServer Release 5.0.6 fo' x86-based systems
	SCO|Caldera UnixWare 7.1.4 fo' x86-based systems
	Solaris 2.6, 8, 9 n' 10
	Tru64 UNIX 5.1
.fi
.PP
(Note:
.I lsof
for AIX 5L n' above needz setuid\-root permission if its
.B \-X
option is used.)
.PP
.I Lsof
for these dialects do not support a thang cache, so tha permissions
given ta tha executable don't apply ta tha thang cache file.
.PP
.nf
	Linux
.fi
.SH "DEVICE CACHE FILE PATH FROM THE \-D OPTION"
.PP
The
.B \-D
option serves up limited means fo' specifyin tha thang cache file path.
Its
.B ?
function will report tha read\-only n' write thang cache file paths that
.I lsof
will use.
.PP
When the
.B \-D
.BR b ,
.BR r ,
and
.B u
functions is available, you can use dem ta request dat tha cache file be
built up in a specific location (\fBb\fR[\fIpath\fR]);
read but not rebuilt (\fBr\fR[\fIpath\fR]);
or read n' rebuilt (\fBu\fR[\fIpath\fR]).
The
.BR b ,
.BR r ,
and
.B u
functions is restricted under some conditions.
They is restricted when the
.I lsof
process is setuid\-root.
Da path specified wit the
.B r
function be always read\-only, even
when it be available.
.PP
The
.BR b ,
.BR r ,
and
.B u
functions is also restricted when the
.I lsof
process runs setgid and
.I lsof
doesn't surrender tha setgid permission.
(See the
.B "LSOF PERMISSIONS THAT AFFECT DEVICE CACHE FILE ACCESS"
section fo' a list of implementations dat normally don't surrender
their setgid permission.)
.PP
A further
.B \-D
function,
.B i
(for ignore), be always available.
.PP
When available, the
.B b
function tells
.I lsof
to read thang shiznit from tha kernel wit the
.IR stat (2)
function n' build a thang cache file all up in tha indicated path.
.PP
When available, the
.B r
function tells
.I lsof
to read tha thang cache file yo, but not update dat shit.
When a path argument accompanies
.BR \-Dr ,
it names tha thang cache file path.
The
.B r
function be always available when it is specified without a
path name argument.
If
.I lsof
is not hustlin setuid\-root n' surrendaz its setgid permission,
a path name argument may accompany the
.B r
function.
.PP
When available, the
.B u
function tells
.I lsof
to attempt ta read n' use tha thang cache file.
If it can't read tha file, or if it findz tha contentz of the
file incorrect or outdated, it will read shiznit from tha kernel,
and attempt ta write a updated version of tha thang cache file,
but only ta a path it considaz legitimate fo' the
.I lsof
process effectizzle n' real UIDs.
.SH "DEVICE CACHE PATH FROM AN ENVIRONMENT VARIABLE"
.PP
.I Lsof's
second chizzle fo' tha thang cache file is tha contentz of the
LSOFDEVCACHE environment variable.
It avoidz dis chizzle if the
.I lsof
process is setuid\-root, or tha real UID of tha process is root.
.PP
A further restriction applies ta a thang cache file path taken from
the LSOFDEVCACHE environment variable:
.I lsof
will not write a thang cache file ta tha path if the
.I lsof
process don't surrender its setgid permission.
(See the
.B "LSOF PERMISSIONS THAT AFFECT DEVICE CACHE FILE ACCESS"
section fo' shiznit on implementations dat don't surrender
their setgid permission.)
.PP
Da local system administrator can disable tha use of tha LSOFDEVCACHE
environment variable or chizzle its name when building
.IR lsof .
Consult tha output of
.B \-D?
for tha environment variablez name.
.SH "SYSTEM-WIDE DEVICE CACHE PATH"
.PP
Da local system administrator may chizzle ta git a system\-wide
device cache file when building
.IR lsof .
That file will generally be constructed by a special system administration
procedure when tha system is booted or when tha contents of
.I /dev
or
.IR /devices )
changes.
If defined, it is
.I lsof's
third thang cache file path chizzle.
.PP
Yo ass can tell dat a system\-wide thang cache file is up in effect
for yo' local installation by examinin the
.I lsof
help option output \- i.e., tha output from the
.B \-h
or
.B \-?
option.
.PP
.I Lsof
will never write ta tha system\-wide thang cache file path by
default.
It must be explicitly named wit a
.B \-D
function up in a root\-owned procedure.
Once tha file has been written, tha procedure must chizzle its permission
modes ta 0644 (baller\-read n' baller\-write, group\-read, n' other\-read).
.SH "PERSONAL DEVICE CACHE PATH (DEFAULT)"
.PP
Da default thang cache file path of the
.I lsof
distribution is one recorded up in tha home directory of tha real UID
that executes
.IR lsof .
Added ta tha home directory be a second path component of tha form
.IR .lsof_hostname .
.PP
This is
.I lsof's
fourth thang cache file path chizzle, n' is
usually tha default.
If a system\-wide thang cache file path was defined when
.I lsof
was built,
this fourth chizzle is ghon be applied when
.I lsof
can't find tha system\-wide thang cache file.
This is the
.B only
time
.I lsof
uses two paths when readin tha thang cache file.
.PP
The
.I hostname
part of tha second component is tha base
name of tha executin host, as returned by
.IR gethostname (2).
Da base name is defined ta be tha charactas precedin tha straight-up original gangsta `.'
in the
.IR gethostname (2)
output, or all the
.IR gethostname (2)
output if it gotz nuff no `.'.
.PP
Da thang cache file belongs ta tha user ID n' is readable and
writable by tha user ID ridin' solo \- i.e., its modes is 0600.
Each distinct real user ID on a given host dat executes
.I lsof
has a gangbangin' finger-lickin' distinct thang cache file.
The
.I hostname
part of tha path distinguishes thang cache filez up in a NFS\-mounted
home directory tha fuck into which thang cache filez is freestyled from
several different hosts.
.PP
Da underground thang cache file path formed by dis method represents
a thang cache file that
.I lsof
will attempt ta read, n' will attempt ta write should it not
exist or should its contents be incorrect or outdated.
.PP
The
.B \-Dr
option without a path name argument will inhibit tha freestylin of a new
device cache file.
.PP
The
.B \-D?
option will list tha format justification fo' constructin the
personal thang cache file.
Da conversions used up in tha format justification is busted lyrics bout up in the
.I 00DCACHE
file of the
.I lsof
distribution.
.SH "MODIFIED PERSONAL DEVICE CACHE PATH"
.PP
If dis option is defined by tha local system administrator when
.I lsof
is built, tha LSOFPERSDCPATH environment variable contents may
be used ta add a cold-ass lil component of tha underground thang cache file path.
.PP
Da LSOFPERSDCPATH variable contents is banged up in tha path at the
place marked by tha local system administrator wit tha ``%p''
conversion up in tha HASPERSDC format justification of tha dialect's
.I machine.h 
header file.
(It aint nuthin but placed right afta tha home directory up in tha default
.I lsof
distribution.)
.PP
Thus, fo' example, if LSOFPERSDCPATH gotz nuff ``LSOF'', tha home
directory is ``/Homes/abe'', tha host name is ``lsof.itap.purdue.edu'',
and tha HASPERSDC format is tha default (``%h/%p.lsof_%L''), the
modified underground thang cache file path is:
.PP
.nf
	/Homes/abe/LSOF/.lsof_vic
.fi
.PP
Da LSOFPERSDCPATH environment variable is ignored when the
.I lsof
process is setuid\-root or when tha real UID of tha process is root.
.PP
.I Lsof
will not write ta a modified underground thang cache file path if the
.I lsof
process don't surrender setgid permission.
(See the
.B "LSOF PERMISSIONS THAT AFFECT DEVICE CACHE FILE ACCESS"
section fo' a list of implementations dat normally don't surrender
their setgid permission.)
.PP
If, fo' example, you wanna create a sub\-directory of personal
device cache file paths by rockin tha LSOFPERSDCPATH environment
variable ta name it, and
.I lsof
doesn't surrender its setgid permission, yo big-ass booty is ghon gotta allow
.I lsof
to create thang cache filez all up in tha standard underground path and
move dem ta yo' subdirectory wit shell commands.
.PP
Da local system administrator may: disable dis option when
.I lsof
is built; chizzle tha name of tha environment variable from
LSOFPERSDCPATH ta suttin' else; chizzle tha HASPERSDC
format ta include tha underground path component up in another place;
or exclude tha underground path component entirely.
Consult tha output of the
.B \-D?
option fo' tha environment variablez name n' tha HASPERSDC
format justification.
.SH DIAGNOSTICS
Errors is identified wit lyrics on tha standard error file.
.PP
.I Lsof
returns a one (1) if any error was detected, includin tha failure to
locate command names, file names, Internizzle addresses or files, login
names, NFS files, PIDs, PGIDs, or UIDs dat shiznit was axed ta list.
If the
.B \-V
option is specified,
.I lsof
will indicate tha search shit it failed ta list.
.PP
It returns a zero (0) if no errors was detected n' if dat shiznit was able to
list some shiznit bout all tha specified search arguments.
.PP
.PP
When
.I lsof
cannot open access to
.I /dev
(or
.IR /devices )
or one of its subdirectories, or git shiznit on a gangbangin' file up in dem with
.IR stat (2),
it thangs a warnin message n' continues.
That
.I lsof
will issue warnin lyrics bout inaccessible filez in
.I /dev
(or
.IR /devices )
is indicated up in its help output \- axed wit the
.B \-h
or
>B \-?
options \-  wit tha message:
.PP
.nf
	Inaccessible /dev warnings is enabled.
.fi
.PP
Da warnin message may be suppressed wit the
.B \-w
option.
It may also done been suppressed by tha system administrator when
.I lsof
was compiled by tha settin of tha WARNDEVACCESS definition.
In dis case, tha output from tha help options will include tha message:
.PP
.nf
	Inaccessible /dev warnings is disabled.
.fi
.PP
Inaccessible thang warnin lyrics probably disappear after
.I lsof
has pimped a hustlin thang cache file.
.SH EXAMPLES
For a mo' extensive set of examples, documented mo' fully, peep the
.I 00QUICKSTART
file of the
.I lsof
distribution.
.PP
To list all open files, use:
.IP
lsof
.PP
To list all open Internet, x.25 (HP\-UX), n' UNIX domain files, use:
.IP
lsof -i -U
.PP
To list all open IPv4 network filez up in use by tha process whose PID is
1234, use:
.IP
lsof -i 4 -a -p 1234
.PP
Presumin tha UNIX dialect supports IPv6, ta list only open IPv6
network files, use:
.IP
lsof -i 6
.PP
To list all filez rockin any protocol on ports 513, 514, or 515 of host
wonderland.cc.purdue.edu, use:
.IP
lsof -i @wonderland.cc.purdue.edu:513-515
.PP
To list all filez rockin any protocol on any port of mace.cc.purdue.edu
(cc.purdue.edu is tha default domain), use:
.IP
lsof -i @mace
.PP
To list all open filez fo' login name ``abe'', or user ID 1234, or
process 456, or process 123, or process 789, use:
.IP
lsof -p 456,123,789 -u 1234,abe
.PP
To list all open filez on thang /dev/hd4, use:
.IP
lsof /dev/hd4
.PP
To find tha process dat has /u/abe/foo open, use:
.IP
lsof /u/abe/foo
.PP
To bust a SIGHUP ta tha processes dat have /u/abe/bar open, use:
.IP
kill -HUP `lsof -t /u/abe/bar`
.PP
To find any open file, includin a open UNIX domain socket file,
with tha name
.IR /dev/log ,
use:
.IP
lsof /dev/log
.PP
To find processes wit open filez on tha NFS file system named
.I /nfs/mount/point
whose server is inaccessible, n' presumin yo' mount table supplies
the thang number for
.IR /nfs/mount/point ,
use:
.IP
lsof -b /nfs/mount/point
.PP
To do tha precedin search wit warnin lyrics suppressed, use:
.IP
lsof -bw /nfs/mount/point
.PP
To ignore tha thang cache file, use:
.IP
lsof -Di
.PP
To obtain PID n' command name field output fo' each process, file
descriptor, file thang number, n' file inode number fo' each file
of each process, use:
.IP
lsof -FpcfDi
.PP
To list tha filez at descriptors 1 n' 3 of every last muthafuckin process hustlin the
.I lsof
command fo' login ID ``abe'' every last muthafuckin 10 seconds, use:
.IP
lsof -c lsof -a -d 1 -d 3 -u abe -r10
.PP
To list tha current hustlin directory of processes hustlin a cold-ass lil command that
is exactly four charactas long n' has a 'o' or 'O' up in characta three,
use dis regular expression form of the
.BI \-c " c"
option:
.IP
lsof -c /^..o.$/i -a -d cwd
.PP
To find a IP version 4 socket file by its associated numeric dot\-form
address, use:
.IP
lsof -i@128.210.15.17
.PP
To find a IP version 6 socket file (when tha UNIX dialect supports
IPv6) by its associated numeric colon\-form address, use:
.IP
lsof -i@[0:1:2:3:4:5:6:7]
.PP
To find a IP version 6 socket file (when tha UNIX dialect supports
IPv6) by a associated numeric colon\-form address dat has a run of
zeroes up in it \- e.g., tha loop\-back address \- use:
.IP
lsof -i@[::1]
.PP
To obtain a repeat mode marker line dat gotz nuff tha current time, use:
.IP
lsof -rm====%T====
.PP
To add spaces ta tha previous marker line, use:
.IP
lsof -r "m==== %T ===="
.SH BUGS
Since
.I lsof
readz kernel memory up in its search fo' open files, rapid chizzlez up in kernel
memory may produce unpredictable thangs up in dis biatch.
.PP
When a gangbangin' file has multiple record locks, tha lock status character
(followin tha file descriptor) is derived from a test of tha first
lock structure, not from any combination of tha individual record
locks dat might be busted lyrics bout by multiple lock structures.
.PP
.I Lsof
can't search fo' filez wit restrictizzle access permissions by
.I name
unless it is installed wit root set\-UID permission.
Otherwise it is limited ta searchin fo' filez ta which its user
or its set-GID crew (if any) has access permission.
.PP
Da display of tha destination address of a raw socket (e.g., for
.IR pin )
dependz on tha UNIX operatin system.
Some dialects store tha destination address up in tha raw socketz protocol
control block, some do not.
.PP
.I Lsof
can't always represent Solaris thang numbers up in tha same way that
.IR ls (1)
does.
For example, tha major n' minor thang numbers dat the
.IR lstat (2)
and
.IR stat (2)
functions report fo' tha directory on which CD-ROM filez is mounted
(typically 
.IR /cdrom )
are not tha same as tha ones dat it reports fo' tha thang on which
CD-ROM filez is mounted (typically
.IR /dev/sr0 ).
(\fILsof\fP reports tha directory numbers.)
.PP
Da support for
.I /proc
file systems be available only fo' BSD n' Tru64 UNIX dialects, Linux, and
dialects derived from SYSV R4 \- e.g., FreeBSD, NetBSD, OpenBSD, Solaris,
UnixWare.
.PP
Some
.I /proc
file shit \- thang number, inode number, n' file size \-
are unavailable up in some dialects.
Searchin fo' filez up in a
.I /proc
file system may require dat tha full path name be specified.
.PP
No text (\fBtxt\fP) file descriptors is displayed fo' Linux
processes.
All entries fo' filez other than tha current hustlin directory,
the root directory, n' numerical file descriptors is labeled
.B mem
descriptors.
.PP
.I Lsof
can't search fo' Tru64 UNIX named pipes by name, cuz they kernel
implementation of lstat(2) returns a improper thang number fo' a
named pipe.
.PP
.I Lsof
can't report straight-up or erectly on HP\-UX 9.01, 10.20, n' 11.00 locks
because of insufficient access ta kernel data or errors up in the
kernel data.
See the
.I lsof
FAQ (Da \fBFAQ\fP section gives its location.)
for details.
.PP
Da AIX SMT file type be a gangbangin' fabrication.
It aint nuthin but made up fo' file structures whose type (15) aint defined up in tha AIX
.I /usr/include/sys/file.h
header file.
One way ta create such file structures is ta run X clients wit tha DISPLAY
variable set ta ``:0.0''.
.PP
The
.BI +|\-f [cfgGn]
option aint supported under /proc\-based Linux
.IR lsof ,
because it don't read kernel structures from kernel memory.
.SH ENVIRONMENT
.I Lsof
may access these environment variables.
.TP \w'LSOFPERSDCPATH'u+4
LANG
defines a language locale.
See
.IR setlocale (3)
for tha namez of other variablez dat can be used up in place
of LANG \- e.g., LC_ALL, LC_TYPE, etc.
.TP
LSOFDEVCACHE
defines tha path ta a thang cache file.
See the
.B "DEVICE CACHE PATH FROM AN ENVIRONMENT VARIABLE"
section fo' mo' shiznit.
.TP
LSOFPERSDCPATH
defines tha middle component of a modified underground thang cache
file path.
See the
.B "MODIFIED PERSONAL DEVICE CACHE PATH"
section fo' mo' shiznit.
.SH FAQUIZZY
Frequently-axed thangs n' they lyrics (an FAQUIZZY) are
available up in the
.I 00FAQ
file of the
.I lsof
distribution.
.PP
That file be also available via anonymous ftp from
.I lsof.itap.purdue.edu
at
.IR pub/tools/unix/lsof FAQUIZZY .
Da URL is:
.IP
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ
.SH FILES
.TP \w'.lsof_hostname'u+4
.I /dev/kmem
kernel virtual memory device
.TP
.I /dev/mem
physical memory device
.TP
.I /dev/swap
system pagin device
.TP
.I .lsof_hostname
.I lsof's
device cache file
(Da suffix,
.IR hostname ,
is tha straight-up original gangsta component of tha hostz name returned by
.IR gethostname (2) .)
.SH AUTHORS
.I Lsof
was freestyled by Victor A fo' realz. Abell <abe@purdue.edu> of Purdue University.
Many others have contributed to
.IR lsof .
They're listed up in the
.I 00CREDITS
file of the
.I lsof
distribution.
.SH DISTRIBUTION
Da sickest fuckin distribution of
.I lsof
is available via anonymous ftp from tha host
.IR lsof.itap.purdue.edu .
You'll find the
.I lsof
distribution up in the
.I pub/tools/unix/lsof
directory.
.PP
Yo ass can also use dis URL:
.IP
ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof
.PP
.I Lsof
is also mirrored elsewhere.
When you access
.I lsof.itap.purdue.edu
and chizzle ta its
.I pub/tools/unix/lsof
directory, you gonna be given a list of some mirror cribs.
The
.I pub/tools/unix/lsof
directory also gotz nuff a mo' complete list up in its
.I mirrors
file.
Use mirrors wit caution \- not all mirrors always have tha sickest fuckin
.I lsof
revision.
.PP
Some pre\-compiled
.I Lsof
executablez is available on
.IR lsof.itap.purdue.edu ,
but they use is discouraged \- itz betta dat you build
your own from tha sources.
If you feel you must bust a pre\-compiled executable, please
read tha cautions dat step tha fuck up in tha README filez of the
.I pub/tools/unix/lsof/binaries
subdirectories n' up in tha 00* filez of tha distribution.
.PP
Mo' shiznit on the
.I lsof
distribution can be found up in its
.I README.lsof_<version>
file.
If you intend ta git the
.I lsof
distribution n' build it, please read
.I README.lsof_<version>
and tha other 00* filez of tha distribution before bustin  thangs
to tha lyricist.
.SH SEE ALSO
.PP
Not all tha followin manual pages may exist up in every last muthafuckin UNIX
dialect ta which
.I lsof
has been ported.
.PP
access(2),
awk(1),
crash(1),
fattach(3C),
ff(1),
fstat(8),
fuser(1),
gethostname(2),
isprint(3),
kill(1),
localtime(3),
lstat(2),
modload(8),
mount(8),
netstat(1),
ofiles(8L),
perl(1),
ps(1),
readlink(2),
setlocale(3),
stat(2),
strftime(3),
time(2),
uname(1).
