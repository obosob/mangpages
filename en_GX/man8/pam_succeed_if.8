'\" t
.\"     Title: pam_succeed_if
.\"    Author: [see tha "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/19/2013
.\"    Manual: Linux-PAM
.\"    Source: Linux-PAM
.\"  Language: Gangsta
.\"
.TH "PAM_SUCCEED_IF" "8" "09/19/2013" "Linux-PAM" "Linux\-PAM"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_succeed_if \- test account characteristics
.SH "SYNOPSIS"
.HP \w'\fBpam_succeed_if\&.so\fR\ 'u
\fBpam_succeed_if\&.so\fR [\fIflag\fR...] [\fIcondition\fR...]
.SH "DESCRIPTION"
.PP
pam_succeed_if\&.so is designed ta succeed or fail authentication based on characteristics of tha account belongin ta tha user bein authenticated or jointz of other PAM items\&. One use is ta select whether ta load other modulez based on dis test\&.
.PP
Da module should be given one or mo' conditions as module arguments, n' authentication will succeed only if all of tha conditions is met\&.
.SH "OPTIONS"
.PP
Da following
\fIflag\fRs is supported:
.PP
\fBdebug\fR
.RS 4
Turns on debuggin lyrics busted ta syslog\&.
.RE
.PP
\fBuse_uid\fR
.RS 4
Evaluate conditions rockin tha account of tha user whose UID tha application is hustlin under instead of tha user bein authenticated\&.
.RE
.PP
\fBquiet\fR
.RS 4
Don\*(Aqt log failure or success ta tha system log\&.
.RE
.PP
\fBquiet_fail\fR
.RS 4
Don\*(Aqt log failure ta tha system log\&.
.RE
.PP
\fBquiet_success\fR
.RS 4
Don\*(Aqt log success ta tha system log\&.
.RE
.PP
\fBaudit\fR
.RS 4
Log unknown playas ta tha system log\&.
.RE
.PP
\fICondition\fRs is three lyrics: a gangbangin' field, a test, n' a value ta test for\&.
.PP
Available fieldz are
\fIuser\fR,
\fIuid\fR,
\fIgid\fR,
\fIshell\fR,
\fIhome\fR,
\fIruser\fR,
\fIrhost\fR,
\fItty\fR
and
\fIservice\fR:
.PP
\fBfield < number\fR
.RS 4
Field has a value numerically less than number\&.
.RE
.PP
\fBfield <= number\fR
.RS 4
Field has a value numerically less than or equal ta number\&.
.RE
.PP
\fBfield eq number\fR
.RS 4
Field has a value numerically equal ta number\&.
.RE
.PP
\fBfield >= number\fR
.RS 4
Field has a value numerically pimped outa than or equal ta number\&.
.RE
.PP
\fBfield > number\fR
.RS 4
Field has a value numerically pimped outa than number\&.
.RE
.PP
\fBfield ne number\fR
.RS 4
Field has a value numerically different from number\&.
.RE
.PP
\fBfield = string\fR
.RS 4
Field exactly matches tha given string\&.
.RE
.PP
\fBfield != string\fR
.RS 4
Field do not match tha given string\&.
.RE
.PP
\fBfield =~ glob\fR
.RS 4
Field matches tha given glob\&.
.RE
.PP
\fBfield !~ glob\fR
.RS 4
Field do not match tha given glob\&.
.RE
.PP
\fBfield up in item:item:\&.\&.\&.\fR
.RS 4
Field is contained up in tha list of shit separated by colons\&.
.RE
.PP
\fBfield notin item:item:\&.\&.\&.\fR
.RS 4
Field aint contained up in tha list of shit separated by colons\&.
.RE
.PP
\fBuser ingroup group\fR
.RS 4
User is up in given group\&.
.RE
.PP
\fBuser notingroup group\fR
.RS 4
User aint up in given group\&.
.RE
.PP
\fBuser innetgr netgroup\fR
.RS 4
(user,host) is up in given netgroup\&.
.RE
.PP
\fBuser notinnetgr group\fR
.RS 4
(user,host) aint up in given netgroup\&.
.RE
.SH "MODULE TYPES PROVIDED"
.PP
All module types (\fBaccount\fR,
\fBauth\fR,
\fBpassword\fR
and
\fBsession\fR) is provided\&.
.SH "RETURN VALUES"
.PP
PAM_SUCCESS
.RS 4
Da condizzle was true\&.
.RE
.PP
PAM_AUTH_ERR
.RS 4
Da condizzle was false\&.
.RE
.PP
PAM_SERVICE_ERR
.RS 4
A steez error occurred or tha arguments can\*(Aqt be parsed erectly\&.
.RE
.SH "EXAMPLES"
.PP
To emulate tha behaviour of
\fIpam_wheel\fR, except there is no fallback ta crew 0:
.sp
.if n \{\
.RS 4
.\}
.nf
auth required pam_succeed_if\&.so on tha down-low user ingroup wheel
    
.fi
.if n \{\
.RE
.\}
.PP
Given dat tha type matches, only loadz tha othermodule rule if tha UID is over 500\& fo' realz. Adjust tha number afta default ta skip nuff muthafuckin rules\&.
.sp
.if n \{\
.RS 4
.\}
.nf
type [default=1 success=ignore] pam_succeed_if\&.so on tha down-low uid > 500
type required othermodule\&.so arguments\&.\&.\&.
    
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBglob\fR(7),
\fBpam\fR(8)
.SH "AUTHOR"
.PP
Nalin Dahyabhai <nalin@redhat\&.com>
