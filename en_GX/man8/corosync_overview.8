.\"/*
.\" * Copyright (c) 2005 MontaVista Software, Inc.
.\" * Copyright (c) 2006-2009 Red Hat, Inc.
.\" *
.\" * All muthafuckin rights reserved.
.\" *
.\" * Author: Steven Dake (sdake@redhat.com)
.\" *
.\" * This software licensed under BSD license, tha text of which bigs up:
.\" *
.\" * Redistribution n' use up in source n' binary forms, wit or without
.\" * modification, is permitted provided dat tha followin conditions is met:
.\" *
.\" * - Redistributionz of source code must retain tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer.
.\" * - Redistributions up in binary form must reproduce tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer up in tha documentation
.\" *   and/or other shiznit provided wit tha distribution.
.\" * - Neither tha name of tha MontaVista Software, Inc. nor tha namez of its
.\" *   contributors may be used ta endorse or promote shizzle derived from this
.\" *   software without specific prior freestyled permission.
.\" *
.\" * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
.\" * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" * THE POSSIBILITY OF SUCH DAMAGE.
.\" */
.TH COROSYNC_OVERVIEW 8 2012-02-13 "corosync Man Page" "Corosync Clusta Engine Programmerz Manual"
.SH NAME
corosync_overview \- Corosync overview
.SH OVERVIEW
Da corosync projectz purpose is ta implement n' support a thang quality
Revised BSD licensed implementation of a high performizzle low overhead high
availabilitizzle pimpment toolkit.

Faults occur fo' various reasons:
.PP
* Application Faults
.PP
* Middleware Faults
.PP
* Operatin System Faults
.PP
* Hardware Faults

Da major focuz of high availabilitizzle up in tha past has been ta mask hardware
faults, n' you can put dat on yo' toast. Faults up in other componentz of tha system have gone unsolved until
Corosync.  Corosync is designed fo' applications ta replicate they state to
up ta 16 processors.  Da processors all contain a replica of tha application
state.

Da corosync project serves up a crew message API called CPG.
Da project pimpers recommend CPG be used fo' most applications.  Da CPG
service implements a cold-ass lil closed crew messagin model presentin extended virtual
synchrony guarantees. 

To manage conditions where tha process executin tha CPG application exchange
fails, we provide tha Simple Availabilitizzle Manager (sam) ta provide simple
application restart.

.SH QUICKSTART
Da corosync executizzle must be configured. Y'all KNOW dat shit, muthafucka!  In tha directory conf up in the
source distribution is nuff muthafuckin filez dat must be copied ta tha /etc/corosync
directory.  If corosync is packaged by a gangbangin' finger-lickin' distro, dis may be complete.

Da directory gotz nuff tha file corosync.conf.  Please read tha corosync.conf(5)
man page fo' details on tha configuration options.  Da corosync project will
work outta tha box wit tha default configuration options, although the
administrator may desire different options.

Da corosync executizzle uses cryptographic steez ta ensure authenticity
and privacy of tha lyrics.  In order fo' corosync ta be secure n' operate,
a private key must be generated n' shared ta all processors.

First generate tha key on one of tha nodes:

unix# corosync-keygen
.br
Corosync Clusta Engine Authentication key generator.
.br
Gatherin 1024 bits fo' key from /dev/random.
.br
Press keys on yo' keyboard ta generate entropy.
.br
Freestylin corosync key ta /etc/corosync/authkey.
.PP

Afta dis operation, a private key is ghon be up in tha file /etc/corosync/authkey.
This private key must be copied ta every last muthafuckin processor up in tha clusta n' shit.  If the
private key aint tha same fo' every last muthafuckin node, dem nodes wit nonmatchin private
keys aint gonna be able ta join tha same configuration.

Copy tha key ta some securitizzle transportable storage or use ssh ta transmit the
key from node ta node.  Then install tha key wit tha command:

unix#: install -D --group=0 --baller=0 --mode=0400 /path_to_authkey/authkey /etc/corosync/authkey

If a message "Invalid digest" appears from tha corosync executive, tha keys
are not consistent between processors.

Finally run tha corosync executive.  If corosync is packaged from a gangbangin' finger-lickin' distro, it
may be set ta start on system start.  It may also be turned off by default in
which case tha init script fo' corosync must be enabled.

.SH USING LIBRARIES
Da corosync libraries have header filez which must be included up in the
developerz application. I aint talkin' bout chicken n' gravy biatch.  Once tha header file is included, tha pimper can
reference tha corosync intercourses.

Da corosync project recommendz ta distros ta place include filez in
/usr/include/corosync.

.SH IPv6
Da corosync project supports both IPv4 n' IPv6 network addresses.  Da entire
clusta must use either IPv4 or IPv6 fo' tha clusta communication mechanism.
In order ta use IPv6, IPv6 addresses must be specified up in tha bindnetaddr and
mcastaddr fieldz up in tha configuration file.  Da nodeid field must also be
set.

An example of dis is:
nodeid: 2
bindnetaddr: fec0::1:a800:4ff:fe00:20
mcastaddr: ff05::1

To configure a host fo' IPv6, use tha ifconfig program ta add intercourses:
box20: ifconfig eth0 add fec0::1:a800:4ff:fe00:20/64
box30: ifconfig eth0 add fec0::1:a800:4ff:fe00:30/64

If tha /64 aint specified, a route fo' tha IPv6 network aint gonna be configured
which will cause dope problems.  Make shizzle a route be available for
IPv6 traffic.

.SH ARCHITECTURE
Da corosync libraries is a thin IPC intercourse ta tha corosync executive.  The
corosync executizzle implements tha functionalitizzle of tha corosync APIs for
distributed coming.

Da corosync executizzle uses tha Totem extended virtual synchrony protocol.  The
advantage ta tha end user is pimpin performizzle characteristics n' a proven
protocol wit pimpin reliability.  This protocol connects tha processors
in a cold-ass lil configuration together so they may rap.

.SH ENVIRONMENT VARIABLES
Da corosync executizzle process uses four environment variablez durin startup.
If these environment variablez is not set, defaults is ghon be used.

.TP
COROSYNC_MAIN_CONFIG_FILE
This specifies tha straight-up qualified path ta tha corosync configuration file.

Da default is /etc/corosync/corosync.conf.

.TP
COROSYNC_TOTEM_AUTHKEY_FILE
This specifies tha straight-up qualified path ta tha shared key used to
authenticate n' encrypt data used within tha Totem protocol.

Da default is /etc/corosync/authkey.

.SH SECURITY
Da corosync executizzle optionally encrypts all lyrics busted over tha network
usin tha AES-128 cipher n' shit.  Da corosync executizzle uses HMAC n' SHA1 to
authenticate all lyrics.  Da corosync executizzle library uses NSS
as a pseudo random number generator.

If membershizzle lyrics can be captured by intruders, it is possible ta execute
a denial of steez whoopin' on tha clusta n' shit.  In dis scenario, tha clusta is
likely already compromised n' a DOS battle is tha least of tha administration's
worries.

Da securitizzle up in corosync do not offer slick forward secrecy cuz tha keys
are reused. Y'all KNOW dat shit, muthafucka!  It may be possible fo' a intruder by capturin packets up in an
automated fashizzle ta determine tha shared key.  No such automated battle has
been published az of yet.  In dis scenario, tha clusta is likely already
compromised ta allow tha long-term capture of transmitted data.

For securitizzle reasons, tha corosync executizzle binary should NEVER
be setuid or setgid up in tha filesystem.

.SH BUGS
None dat is known.

.SH "SEE ALSO"
.BR corosync.conf (5),
.BR corosync-keygen (8),
.BR cpg_overview (8),
.BR sam_overview (8)
.PP
