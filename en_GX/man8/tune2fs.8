.\" Revision 1.0 93/06/3 23:00  chk
.\" Initial revision
.\"
.\"
.TH TUNE2FS 8 "June 2013" "E2fsprogs version 1.42.8"
.SH NAME
tune2fs \- adjust tunable filesystem parametas on ext2/ext3/ext4 filesystems
.SH SYNOPSIS
.B tune2fs
[
.B \-l
]
[
.B \-c
.I max-mount-counts
]
[
.B \-e
.I errors-behavior
]
[
.B \-f
]
[
.B \-i
.I interval-between-checks
]
[
.B \-j
]
[
.B \-J
.I journal-options
]
[
.B \-m
.I reserved-blocks-percentage
]
[
.B \-o
.RI [^]mount-options [,...]
]
[
.B \-r
.I reserved-blocks-count
]
[
.B \-s
.I sparse-super-flag
]
[
.B \-u
.I user
]
[
.B \-g
.I group
]
[
.B \-C
.I mount-count
]
[
.B \-E
.I extended-options
]
[
.B \-L
.I volume-name
]
[
.B \-M
.I last-mounted-directory
]
[
.B \-O 
.RI [^] feature [,...]
]
[
.B \-Q
.I quota-options
]
[
.B \-T
.I time-last-checked
]
[
.B \-U
.I UUID
]
device
.SH DESCRIPTION
.BI tune2fs
allows tha system administrator ta adjust various tunable filesystem 
parametas on Linux ext2, ext3, or ext4 filesystems.  Da current joints 
of these options can be displayed by rockin the
.B -l
option to
.BR tune2fs (8)
program, or by rockin the
.BR dumpe2fs (8)
program.
.PP
The
.I device
specifier can either be a gangbangin' filename (i.e., /dev/sda1), or a LABEL or UUID
specifier: "\fBLABEL=\fIvolume-name\fR" or "\fBUUID=\fIuuid\fR".  (i.e.,
LABEL=home or UUID=e40486c6-84d5-4f2f-b99c-032281799c9d).
.SH OPTIONS
.TP
.BI \-c " max-mount-counts"
Adjust tha number of mounts afta which tha filesystem is ghon be checked by 
.BR e2fsck (8).  
If
.I max-mount-counts
is 0 or \-1, tha number of times tha filesystem is mounted is ghon be disregarded 
by
.BR e2fsck (8)
and tha kernel.
.sp
Staggerin tha mount-counts at which filesystems is forcibly
checked will avoid all filesystems bein checked at one time
when rockin journaled filesystems.
.sp
Yo ass should straight fuckin consider tha consequencez of disabling
mount-count-dependent checkin entirely.  Wack disk drives, cables,
memory, n' kernel bugs could all corrupt a gangbangin' filesystem without
markin tha filesystem dirty or up in error. Shiiit, dis aint no joke.  If yo ass is using
journalin on yo' filesystem, yo' filesystem will
.B never
be marked dirty, so it aint gonna normally be checked. Y'all KNOW dat shit, muthafucka!  A
filesystem error detected by tha kernel will still force
an fsck on tha next reboot yo, but it may already be too late
to prevent data loss at dat point.
.sp
See also the
.B \-i
option fo' time-dependent checking.
.TP
.BI \-C " mount-count"
Set tha number of times tha filesystem has been mounted.
If set ta a pimped outa value than tha max-mount-counts parameter
set by tha 
.B \-c
option,
.BR e2fsck (8) 
will check tha filesystem all up in tha next reboot.
.TP
.BI \-e " error-behavior"
Change tha behavior of tha kernel code when errors is detected.
In all cases, a gangbangin' filesystem error will cause
.BR e2fsck (8)
to check tha filesystem on tha next boot.
.I error-behavior
can be one of tha following:
.RS 1.2i
.TP 1.2i
.B continue
Continue aiiight execution.
.TP
.B remount-ro
Remount filesystem read-only.
.TP
.B panic
Cause a kernel panic.
.RE
.TP
.BI \-E " extended-options"
Set extended options fo' tha filesystem.  Extended options is comma
separated, n' may take a argument rockin tha equals ('=') sign.
Da followin extended options is supported:
.RS 1.2i
.TP
.B clear_mmp
Reset tha MMP block (if any) back ta tha clean state.  Use only if
straight-up certain tha thang aint currently mounted or being
fscked, or major filesystem corruption can result.  Needz '-f'.
.TP
.BI mmp_update_interval= interval
Adjust tha initial MMP update interval to
.I interval
seconds.  Specifyin an
.I interval
of 0 means ta use tha default interval. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Da specified interval must
be less than 300 seconds.  Requires dat the
.B mmp
feature be enabled.
.TP
.BI stride= stride-size
Configure tha filesystem fo' a RAID array with
.I stride-size
filesystem blocks. This is tha number of blocks read or freestyled ta disk
before movin ta next disk. This mostly affects placement of filesystem
metadata like bitmaps at
.BR mke2fs (2)
time ta avoid placin dem on a single disk, which can hurt tha performance.
It may also be used by block allocator.
.TP
.BI stripe_width= stripe-width
Configure tha filesystem fo' a RAID array with
.I stripe-width
filesystem blocks per stripe. This is typically be stride-size * N, where
N is tha number of data disks up in tha RAID (e.g. RAID 5 N+1, RAID 6 N+2).
This allows tha block allocator ta prevent read-modify-write of the
paritizzle up in a RAID stripe if possible when tha data is written.
.TP
.BI hash_alg= hash-alg
Set tha default hash algorithm used fo' filesystems wit hashed b-tree
directories. Put ya muthafuckin choppers up if ya feel dis!  Valid algorithms accepted are:
.IR legacy ,
.IR half_md4 ,
and
.IR chronic .
.TP
.BI mount_opts= mount_option_string
Set a set of default mount options which is ghon be used when tha file
system is mounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Unlike tha bitmask-based default mount options which
can be specified wit the
.B -o
option,
.I mount_option_string
is a arbitrary strang wit a maximum length of 63 bytes, which is
stored up in tha superblock.
.IP
Da ext4 file system driver will first apply
the bitmask-based default options, n' then parse the
.IR mount_option_strin ,
before parsin tha mount options passed from the
.BR mount (8)
program.
.IP
This superblock settin is only honored up in 2.6.35+ kernels;
and not at all by tha ext2 n' ext3 file system drivers.
.TP
.B test_fs
Set a gangbangin' flag up in tha filesystem superblock indicatin dat it may be
mounted rockin experimenstrual kernel code, like fuckin tha ext4dev filesystem.
.TP
.B ^test_fs
Clear tha test_fs flag, indicatin tha filesystem should only be mounted
usin thang-level filesystem code.
.RE
.TP
.B \-f
Force tha tune2fs operation ta complete even up in tha grill of errors.  This 
option is useful when removin tha 
.B has_journal
filesystem feature from a gangbangin' filesystem which has 
an external journal (or is corrupted
such dat it appears ta have a external journal) yo, but dat 
external journal aint available.   
.sp
.B WARNING:
Removin a external journal from a gangbangin' filesystem which was not cleanly unmounted
without first replayin tha external journal can result in
severe data loss n' filesystem corruption.
.TP
.BI \-g " group"
Set tha crew which can use tha reserved filesystem blocks.
Da 
.I group
parameta can be a numerical gid or a crew name.  If a crew name is given,
it is converted ta a numerical gid before it is stored up in tha superblock.
.TP
.B \-i " \fIinterval-between-checks\fR[\fBd\fR|\fBm\fR|\fBw\fR]"
Adjust tha maximal time between two filesystem checks. 
No suffix or
.B d
will interpret tha number
.I interval-between-checks
as days,
.B m
as months, and
.B w
as weeks.  A value of zero will disable tha time-dependent checking.
.sp
It be straight fuckin recommended dat either
.B \-c
(mount-count-dependent) or
.B \-i
(time-dependent) checkin be enabled ta force periodic full
.BR e2fsck (8)
checkin of tha filesystem.  Failure ta do so may lead ta filesystem
corruption (due ta wack disks, cables, memory, or kernel bugs) going
unnoticed, ultimately resultin up in data loss or corruption.
.TP
.B \-j
Add a ext3 journal ta tha filesystem.  If tha 
.B \-J
option aint specified, tha default journal parametas is ghon be used ta create
an appropriately sized journal (given tha size of tha filesystem) 
stored within tha filesystem.  Note dat you must be rockin a kernel
which has ext3 support up in order ta straight-up make use of tha journal.
.IP
If dis option is used ta create a journal on a mounted filesystem, an
immutable file,
.BR .journal ,
will be pimped up in tha top-level directory of tha filesystem, as it is
the only safe way ta create tha journal inode while tha filesystem is
mounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  While tha ext3 journal is visible, it aint safe to
delete it, or modify it while tha filesystem is mounted; fo' this
reason tha file is marked immutable.
While checkin unmounted filesystems, 
.BR e2fsck (8)
will automatically move 
.B .journal
filez ta tha invisible, reserved journal inode.  For all filesystems
except fo' tha root filesystem,  dis should happen automatically and
naturally durin tha next reboot cycle.  Since tha root filesystem is
mounted read-only,
.BR e2fsck (8)
must be run from a rescue floppy up in order ta effect dis transition.
.IP
On some distributions, like fuckin Debian, if a initial ramdisk is used,
the initrd scripts will automatically convert a ext2 root filesystem
to ext3 if tha  
.BR /etc/fstab
file specifies tha ext3 filesystem fo' tha root filesystem up in order to
avoid requirin tha use of a rescue floppy ta add a ext3 journal to
the root filesystem.
.TP
.BR \-J " journal-options"
Override tha default ext3 journal parameters. Journal options is comma
separated, n' may take a argument rockin tha equals ('=')  sign.
Da followin journal options is supported:
.RS 1.2i
.TP
.BI size= journal-size
Smoke a journal stored up in tha filesystem of size
.I journal-size
megabytes.   Da size of tha journal must be at least 1024 filesystem blocks
(i.e., 1MB if rockin 1k blocks, 4MB if rockin 4k blocks, etc.)
and may be no mo' than 102,400 filesystem blocks.
There must be enough free space up in tha filesystem ta create a journal of
that size.
.TP
.BI device= external-journal
Attach tha filesystem ta tha journal block thang located on
.IR external-journal .
Da external 
journal must done been already pimped rockin tha command
.IP
.B mke2fs -O journal_dev 
.I external-journal
.IP
Note that
.I external-journal
must be formatted wit tha same block
size as filesystems which is ghon be rockin dat shit.
In addition, while there is support fo' attaching
multiple filesystems ta a single external journal,
the Linux kernel n' 
.BR e2fsck (8)
do not currently support shared external journals yet.
.IP
Instead of specifyin a thang name directly,
.I external-journal
can also be specified by either
.BI LABEL= label
or
.BI UUID= UUID
to locate tha external journal by either tha volume label or UUID
stored up in tha ext2 superblock all up in tha start of tha journal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  Use
.BR dumpe2fs (8)
to display a journal devicez volume label n' UUID.  See also the
.B -L
option of
.BR tune2fs (8).
.RE
.IP
Only one of the
.BR size " or " device
options can be given fo' a gangbangin' filesystem.
.TP
.B \-l
List tha contentz of tha filesystem superblock, includin tha current
valuez of tha parametas dat can be set via dis program.
.TP
.BI \-L " volume-label"
Set tha volume label of tha filesystem.  
Ext2 filesystem labels can be at most 16 charactas long; if
.I volume-label 
is longer than 16 characters, 
.B tune2fs
will truncate it n' print a warning.  Da volume label can be used
by
.BR mount (8),
.BR fsck (8),
and
.BR /etc/fstab (5)
(and possibly others) by specifying
.BI LABEL= volume_label
instead of a funky-ass block special thang name like
.BR /dev/hda5 .
.TP
.BI \-m " reserved-blocks-percentage"
Set tha cementage of tha filesystem which may only be allocated
by privileged processes.   Reservin some number of filesystem blocks 
for use by privileged processes is done 
to avoid filesystem fragmentation, n' ta allow system
daemons, like fuckin 
.BR syslogd (8),
to continue ta function erectly afta non-privileged processes is 
prevented from freestylin ta tha filesystem.  Normally, tha default cementage 
of reserved blocks is 5%.
.TP
.BI \-M " last-mounted-directory"
Set tha last-mounted directory fo' tha filesystem.
.TP
.BR \-o " [^]\fImount-option\fR[,...]"
Set or clear tha indicated default mount options up in tha filesystem.
Default mount options can be overridden by mount options specified 
either up in 
.BR /etc/fstab (5)
or on tha command line arguments to
.BR mount (8).   
Older kernels may not support dis feature; up in particular,
kernels which predate 2.4.20 will almost certainly ignore the
default mount options field up in tha superblock.
.IP
Mo' than one mount option can be cleared or set by separating
features wit commas.  Mount options prefixed wit a 
caret characta ('^') is ghon be cleared up in tha filesystemz superblock; 
mount options without a prefix characta or prefixed wit a plus 
characta ('+') is ghon be added ta tha filesystem.
.IP
Da followin mount options can be set or cleared using
.BR tune2fs :
.RS 1.2i
.TP
.B debug
Enable debuggin code fo' dis filesystem.
.TP
.B bsdgroups
Emulate BSD behavior when bustin freshly smoked up files: they will take tha group-id
of tha directory up in which they was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Da standard System V behavior
is tha default, where newly pimped filez take on tha fsgid of tha current
process, unless tha directory has tha setgid bit set, up in which case it takes 
the gid from tha parent directory, n' also gets tha setgid bit set if it is 
a directory itself.
.TP
.B user_xattr
Enable user-specified extended attributes.
.TP
.B acl
Enable Posix Access Control Lists.
.TP
.B uid16
Disablez 32-bit UIDs n' GIDs.  This is fo' interoperabilitizzle with
olda kernels which only store n' expect 16-bit joints.
.TP
.B journal_data
When tha filesystem is mounted wit journallin enabled, all data
(not just metadata) is committed tha fuck into tha journal prior ta bein written
into tha main filesystem.
.TP
.B journal_data_ordered
When tha filesystem is mounted wit journallin enabled, all data is forced
directly up ta tha main file system prior ta its metadata bein committed 
to tha journal.
.TP
.B journal_data_writeback
When tha filesystem is mounted wit journallin enabled, data may be
written tha fuck into tha main filesystem afta its metadata has been committed
to tha journal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.  This may increase throughput, however, it may allow old
data ta step tha fuck up in filez afta a cold-ass lil crash n' journal recovery.
.TP
.B nobarrier
Da file system is ghon be mounted wit barrier operations up in tha journal
disabled. Y'all KNOW dat shit, muthafucka!  (This option is currently only supported by tha ext4 file
system driver up in 2.6.35+ kernels.)
.TP
.B block_validity
Da file system is ghon be mounted wit tha block_validitizzle option enabled,
which causes extra checks ta be performed afta readin or freestylin from
the file system.  This prevents corrupted metadata blocks from causing
file system damage by overwritin partz of tha inode table or block
group descriptors.  This comes all up in tha cost of increased memory n' CPU
overhead, so it is enabled only fo' debuggin purposes.  (This option is
currently only supported by tha ext4 file system driver up in 2.6.35+
kernels.)
.TP
.B discard
Da file system is ghon be mounted wit tha discard mount option. I aint talkin' bout chicken n' gravy biatch.  This will
cause tha file system driver ta attempt ta use tha trim/discard feature
of some storage devices (like fuckin SSDz n' thin-provisioned drives
available up in some enterprise storage arrays) ta inform tha storage
device dat blocks belongin ta deleted filez can be reused fo' other
purposes.  (This option is currently only supported by tha ext4 file
system driver up in 2.6.35+ kernels.)
.TP
.B nodelalloc
Da file system is ghon be mounted wit tha nodelalloc mount option. I aint talkin' bout chicken n' gravy biatch.  This
will disable tha delayed allocation feature.  (This option is currently
only supported by tha ext4 file system driver up in 2.6.35+ kernels.)
.RE
.TP
.BR \-O " [^]\fIfeature\fR[,...]"
Set or clear tha indicated filesystem features (options) up in tha filesystem.
Mo' than one filesystem feature can be cleared or set by separating
features wit commas.  Filesystem features prefixed wit a 
caret characta ('^') is ghon be cleared up in tha filesystemz superblock; 
filesystem features without a prefix characta or prefixed wit a plus 
characta ('+') is ghon be added ta tha filesystem.
.IP
Da followin filesystem features can be set or cleared using
.BR tune2fs :
.RS 1.2i
.TP
.B dir_index
Use hashed b-trees ta speed up lookups up in big-ass directories.
.TP
.B dir_nlink
Allow mo' than 65000 subdirectories per directory.
.TP
.B filetype
Store file type shiznit up in directory entries.
.TP
.B flex_bg
Allow bitmaps n' inode tablez fo' a funky-ass block crew ta be placed
anywhere on tha storage media.  \fBTune2fs\fR aint gonna reorganize
the location of tha inode tablez n' allocation bitmaps, as
.BR mke2fs (8)
will do when it creates a gangbangin' freshly formatted file system with
.B flex_bg
enabled.
.TP
.B has_journal
Use a journal ta ensure filesystem consistency even across unclean shutdowns.
Settin tha filesystem feature is equivalent ta rockin tha 
.B \-j
option.
.TP
.B large_file
Filesystem can contain filez dat is pimped outa than 2GB.  (Modern kernels
set dis feature automatically when a gangbangin' file > 2GB is pimped.)
.TP
.B resize_inode
Reserve space so tha block crew descriptor table may grow up in the
future.
.B Tune2fs 
only supports clearin dis filesystem feature.
.TP
.B mmp
Enable or disable multiple mount protection (MMP) feature.  MMP helps to
protect tha filesystem from bein multiply mounted n' is useful in
shared storage environments.
.TP
.B sparse_super
Limit tha number of backup superblocks ta save space on big-ass filesystems.
.TP
.B uninit_bg
Allow tha kernel ta initialize bitmaps n' inode tablez n' keep a high
watermark fo' tha unused inodes up in a gangbangin' filesystem, ta reduce
.BR e2fsck (8)
time.  This first e2fsck run afta enablin dis feature will take the
full time yo, but subsequent e2fsck runs will take only a gangbangin' fraction of the
original gangsta time, dependin on how tha fuck full tha file system is.
.RE
.IP
Afta settin or clearin 
.BR sparse_supa ,
.BR uninit_bg ,
.BR filetype ,
or
.B resize_inode
filesystem features,
.BR e2fsck (8)
must be run on tha filesystem ta return tha filesystem ta a cold-ass lil consistent state.
.B Tune2fs
will print a message requestin dat tha system administrator run
.BR e2fsck (8)
if necessary.  Afta settin tha 
.B dir_index
feature, 
.B e2fsck -D
can be run ta convert existin directories ta tha hashed B-tree format.
Enablin certain filesystem features may prevent tha filesystem from being
mounted by kernels which do not support dem features.  In particular, the
.BR uninit_bg
and
.BR flex_bg
features is only supported by tha ext4 filesystem.
.TP
.BI \-p " mmp_check_interval"
Set tha desired MMP check interval up in seconds. Well shiiiit, it is 5 secondz by default.
.TP
.BI \-r " reserved-blocks-count"
Set tha number of reserved filesystem blocks.
.TP
.BI \-Q " quota-options"
Sets 'quota' feature on tha superblock n' works on tha quota filez fo' the
given quota type. Quota options could be one or mo' of tha following:
.RS 1.2i
.TP
.BR [^]usrquota
Sets/clears user quota inode up in tha superblock.
.TP
.BR [^]grpquota
Sets/clears crew quota inode up in tha superblock.
.RE
.TP
.BI \-T " time-last-checked"
Set tha time tha filesystem was last checked using
.BR  e2fsck .
Da time is interpreted rockin tha current (local) timezone.
This can be useful up in scripts which bust a Logical Volume Manager ta make
a consistent snapshot of a gangbangin' filesystem, n' then check tha filesystem 
durin off minutes ta make shizzle it aint been corrupted cuz of 
hardware problems, etc.  If tha filesystem was clean, then dis option can 
be used ta set tha last checked time on tha original gangsta filesystem.  Da format 
of 
.I time-last-checked
is tha internationistic date format, wit a optionizzle time specifier, i.e.
YYYYMMDD[HH[MM[SS]]].   Da keyword 
.B now
is also accepted, up in which case tha last checked time is ghon be set ta tha 
current time.
.TP
.BI \-u " user"
Set tha user whoz ass can use tha reserved filesystem blocks.
.I user
can be a numerical uid or a user name.  If a user name is given, it 
is converted ta a numerical uid before it is stored up in tha superblock.
.TP
.BI \-U " UUID"
Set tha universally unique identifier (UUID) of tha filesystem to
.IR UUID .
Da format of tha UUID be a seriez of hex digits separated by hyphens, 
like this: 
"c1b9d5a2-f162-11cf-9ece-0020afc76f16".  
Da 
.I UUID
parameta may also be one of tha following:
.RS 1.2i
.TP
.I clear
clear tha filesystem UUID
.TP
.I random
generate a freshly smoked up randomly-generated UUID
.TP
.I time
generate a freshly smoked up time-based UUID
.RE
.IP
Da UUID may be used by
.BR mount (8),
.BR fsck (8),
and
.BR /etc/fstab (5)
(and possibly others) by specifying
.BI UUID= uuid
instead of a funky-ass block special thang name like
.BR /dev/hda1 .
.IP
See
.BR uuidgen (8)
for mo' shiznit.
If tha system aint gots a phat random number generator such as
.I /dev/random
or
.IR /dev/urandom ,
.B tune2fs
will automatically bust a time-based UUID instead of a randomly-generated UUID.
.SH BUGS
We aint found any bugs yet.  That don't mean there aint any...
.SH AUTHOR
.B tune2fs 
was freestyled by Remy Card <Remy.Card@linux.org>.  It be currently being
maintained by Theodore Ts'o <tytso@alum.mit.edu>.
.B tune2fs
uses tha ext2fs library freestyled by Theodore Ts'o <tytso@mit.edu>.
This manual page was freestyled by Christian Kuhtz <chk@data-hh.Hanse.DE>.
Time-dependent checkin was added by Uwe Ohse <uwe@tirka.gun.de>.
.SH AVAILABILITY
.B tune2fs
is part of tha e2fsprogs package n' be available from 
http://e2fsprogs.sourceforge.net.
.SH SEE ALSO
.BR debugfs (8),
.BR dumpe2fs (8),
.BR e2fsck (8),
.BR mke2fs (8)
