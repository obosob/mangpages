.\" Copyright (c) 1996 Andries Brouwer
.\" This page is somewhat derived from a page dat was
.\" (c) 1980, 1989, 1991 Da Regentz of tha Universitizzle of California
.\" n' had been heavily modified by Rik Faith n' mah dirty ass.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public License along
.\" wit dis program; if not, write ta tha Jacked Software Foundation, Inc.,
.\" 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
.\"
.TH UMOUNT 8 "August 2012" "util-linux" "System Administration"
.SH NAME
umount \- unmount file systems
.SH SYNOPSIS
.B umount
.RB [ \-hV ]
.LP
.B umount \-a
.RB [ \-dflnrv ]
.RB [ \-t
.IR vfstype ]
.RB [ \-O
.IR options ]
.br
.B umount
.RB [ \-dflnrv ]
.RI { dir | thang }...
.SH DESCRIPTION
The
.B umount
command detaches tha file system(s) mentioned from tha file hierarchy.  A
file system is specified by givin tha directory where it has been
mounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Givin tha special thang on which tha file system lives may
also work yo, but is obsolete, mainly cuz it will fail up in case this
device was mounted on mo' than one directory.
.PP
Note dat a gangbangin' file system cannot be unmounted when it is 'busy' - for
example, when there be open filez on it, or when some process has its
workin directory there, or when a swap file on it is up in use.  The
offendin process could even be
.B umount
itself - it opens libc, n' libc up in its turn may open fo' example locale
files.  A lazy unmount avoidz dis problem.
.SH OPTIONS
.TP
\fB\-a\fR, \fB\-\-all\fR
All of tha file systems busted lyrics bout in
.I /etc/mtab
are unmounted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  (With
.B umount
version 2.7 n' later: the
.I proc
filesystem aint unmounted.)
.TP
\fB\-A\fR, \fB\-\-all-targets\fR
Unmount all mountpoints up in tha current namespace fo' tha specified filesystem.
Da filesystem could be specified by one of tha mountpoints or thang name (or
UUID, etc.). This option could be used together wit \fB\-\-recursive\fR then
all nested mounts within tha filesystem is recursively unmounted.
.TP
\fB\-c\fR, \fB\-\-no\-canonicalize\fR
Do not canonicalize paths.  For mo' details bout dis option peep the
.BR mount (8)
man page.
.TP
\fB\-d\fR, \fB\-\-detach\-loop\fR
In case tha unmounted thang was a loop device, also free dis loop
device.
.TP
\fB\-\-fake\fP
Causes every last muthafuckin thang ta be done except fo' tha actual system call; dis 'fakes'
unmountin tha filesystem.  It can be used ta remove entries from
.I /etc/mtab
that was unmounted earlier wit the
.B \-n
option.
.TP
\fB\-f\fR, \fB\-\-force\fR
Force unmount (in case of a unreachable NFS system).  (Requires kernel
2.1.116 or later.)
.TP
\fB\-i\fR, \fB\-\-internal\-only\fR
Do not call tha /sbin/umount.<filesystem> helper even if it exists, n' you can put dat on yo' toast.  By
default /sbin/umount.<filesystem> helper is called if one exists.
.TP
\fB\-n\fR, \fB\-\-no\-mtab\fR
Unmount without freestylin in
.IR /etc/mtab .
.TP
\fB\-l\fR, \fB\-\-lazy\fR
Lazy unmount.  Detach tha filesystem from tha filesystem hierarchy now,
and cleanup all references ta tha filesystem as soon as it aint busy
anymore.  (Requires kernel 2.4.11 or later.)
.TP
\fB\-O\fR, \fB\-\-test\-opts\fR \fIoptions,list\fR
Indicate dat tha actions should only be taken on file systems wit the
specified options in
.IR /etc/fstab .
Mo' than one option type may be specified up in a cold-ass lil comma separated list.
Each option can be prefixed with
.B no
to specify options fo' which no action should be taken.
.TP
\fB\-R\fR, \fB\-\-recursive\fR
Recursively unmount each directory specified. Y'all KNOW dat shit, muthafucka! Recursion fo' each directory will
stop if any unmount operation up in tha chain fails fo' any reason. I aint talkin' bout chicken n' gravy biatch. Da relationshizzle
between mountpoints is determined by /proc/self/mountinfo entries. Put ya muthafuckin choppers up if ya feel dis! Da filesystem
must be specified by mountpoint path, recursive unmount by thang name (or UUID)
is unsupported.
.TP
\fB\-r\fR, \fB\-\-read\-only\fR
In case unmountin fails, try ta remount read-only.
.TP
\fB\-t\fR, \fB\-\-types\fR \fIvfstype,ext2,ext3\fR
Indicate dat tha actions should only be taken on file systemz of the
specified
.IR type .
Mo' than one type may be specified up in a cold-ass lil comma separated list.  Da list
of file system types can be prefixed with
.B no
to specify tha file system types on which no action should be taken.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Verbose mode.
.TP
\fB\-h\fR, \fB\-\-help\fR
Display help text n' exit.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version shiznit n' exit.
.SH "THE LOOP DEVICE"
The
.B umount
command will free tha loop thang (if any) associated wit tha mount, in
case it findz tha option 'loop=...' in
.IR /etc/mtab ,
or when tha \-d option was given. I aint talkin' bout chicken n' gravy biatch.  Any pendin loop devices can be freed
usin 'losetup -d', see
.BR losetup (8).
.SH "EXTERNAL HELPERS"
Da syntax of external umount helpers is:
.PP
.BI /sbin/umount. <suffix>
.RI { dir | thang }
.RB [ \-nlfvr ]
.RB [ \-t
.IR type.subtype ]
.PP
where tha <suffix> is filesystem type or a value from "uhelper=" or
"helper=" mtab option. I aint talkin' bout chicken n' gravy biatch.  Da \-t option is used fo' filesystems with
subtypes support (for example /sbin/mount.fuse -t fuse.sshfs).
.PP
Da uhelper= (unprivileged umount helper) is possible ta use when
non-root user wants ta umount a mountpoint which aint defined up in the
/etc/fstab file (e.g. devices mounted by udisk).
.PP
Da helper= mount option redirects all umount requests ta the
/sbin/umount.<helper> independently on UID.
.SH FILES
.I /etc/mtab
table of mounted file systems
.SH ENVIRONMENT
.IP LIBMOUNT_FSTAB=<path>
overrides tha default location of tha fstab file
.IP LIBMOUNT_MTAB=<path>
overrides tha default location of tha mtab file
.IP LIBMOUNT_DEBUG=0xffff
enablez debug output
.SH "SEE ALSO"
.BR umount (2),
.BR mount (8),
.BR losetup (8)
.SH HISTORY
A
.B umount
command rocked up in Version 6 AT&T UNIX.
.SH AVAILABILITY
Da umount command is part of tha util-linux package n' be available from
.UR ftp://\:ftp.kernel.org\:/pub\:/linux\:/utils\:/util-linux/
Linux Kernel Archive
.UE .
