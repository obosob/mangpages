.\" Escape single quotes up in literal strings from groffz Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.de FN
\fI\|\\$1\|\fP
..
.TH PAM_PWQUALITY 8 "10 Nov 2011" "Red Hat, Inc."
.SH NAME
pam_pwqualitizzle \- PAM module ta big-ass up password qualitizzle checking
.SH SYNOPSIS
\fBpam_pwquality\&.so\fR [\fI\&.\&.\&.\fR]
.SH DESCRIPTION
.PP
This module can be plugged tha fuck into the
\fIpassword\fR
stack of a given steez ta provide some plug\-in strength\-checking
for passwords\&. Da code was originally based on pam_cracklib module
and tha module is backwardz compatible wit its options\&.
.PP
Da action of dis module is ta prompt tha user fo' a password n' check
its strength against a system doggtionary n' a set of rulez fo' identifying
poor chizzles\&.
.PP
Da first action is ta prompt fo' a single password, check its strength
and then, if it is considered strong, prompt fo' tha password a second time
(to verify dat dat shiznit was typed erectly on tha straight-up original gangsta occasion)\& fo' realz. All being
well, tha password is passed on ta subsequent modulez ta be installed as the
new authentication token\&.
.PP
Da strength checks works up in tha followin manner: at first the
\fBCracklib\fR
routine is called ta check if tha password is part of a gangbangin' finger-lickin' dictionary; if this
is not tha case a additionizzle set of strength checks is done\&. These checks
are:
.PP
Palindrome
.RS 4
Is tha freshly smoked up password a palindrome?
.RE
.PP
Case Chizzle Only
.RS 4
Is tha freshly smoked up password tha the oldschool one wit only a cold-ass lil chizzle of case?
.RE
.PP
Similar
.RS 4
Is tha freshly smoked up password too much like tha oldschool one? This is primarily controlled
by one argument,
\fBdifok\fR
which be a fuckin shitload of characta chizzlez (inserts, removals, or replacements)
between tha oldschool n' freshly smoked up password dat is enough ta accept tha new
password\&. This defaults ta 5 chizzles\&.
.RE
.PP
Simple
.RS 4
Is tha freshly smoked up password too small? This is controlled by 6 arguments
\fBminlen\fR,
\fBmaxclassrepeat\fR,
\fBdcredit\fR,
\fBucredit\fR,
\fBlcredit\fR, and
\fBocredit\fR\&. Right back up in yo muthafuckin ass. See tha section on tha arguments fo' tha detailz of how
these work n' there defaults\&.
.RE
.PP
Rotated
.RS 4
Is tha freshly smoked up password a rotated version of tha oldschool password?
.RE
.PP
Same consecutizzle characters
.RS 4
Optionizzle check fo' same consecutizzle characters\&.
.RE
.PP
Too long monotonic characta sequence
.RS 4
Optionizzle check fo' too long monotonic characta sequence\&.
.RE
.PP
Gotz Nuff user name
.RS 4
Optionizzle check whether tha password gotz nuff tha user\*(Aqs name up in some form\&.
.RE
.PP
These checks is configurable either by use of tha module arguments
or by modifyin tha \fB/etc/security/pwquality.conf\fR configuration file.
.PD
.SH OPTIONS
.PP
\fBdebug\fR
.RS 4
This option make tha module write shiznit to
\fBsyslog\fR(3)
indicatin tha behavior of tha module (this option do not write password
information ta tha log file)\&.
.RE
.PP
\fBauthtok_type=\fR\fB\fIXXX\fR\fR
.RS 4
Da default action is fo' tha module ta use tha followin prompts when
requestin passwords: "New UNIX password: " and
"Retype UNIX password: "\&. Da example word
\fIUNIX\fR
can be replaced wit dis option, by default it is empty\&.
.RE
.PP
\fBretry=\fR\fB\fIN\fR\fR
.RS 4
Prompt user at most
\fIN\fR
times before returnin wit error\&. Da default is
\fI1\fR\&.
.RE
.PP
\fBdifok=\fR\fB\fIN\fR\fR
.RS 4
This argument will chizzle tha default of
\fI5\fR
for tha number of chizzlez up in tha freshly smoked up password from tha oldschool password\&.
.RE
.PP
\fBminlen=\fR\fB\fIN\fR\fR
.RS 4
Da minimum aaight size fo' tha freshly smoked up password (plus one if credits is not
disabled which is tha default)\&. In addizzle ta tha number of charactas in
the freshly smoked up password, credit (of +1 up in length) is given fo' each different kind
of characta (\fIother\fR,
\fIupper\fR,
\fIlower\fR
and
\fIdigit\fR)\&. Da default fo' dis parameta is
\fI9\fR
\&. Note dat there be a pair of length limits also in
\fICracklib\fR,
which is used fo' doggtionary checking, a "way too short" limit of 4 which
is hard coded up in n' a funky-ass build time defined limit (6) dat is ghon be checked
without reference ta \fBminlen\fR\&.
.RE
.PP
\fBdcredit=\fR\fB\fIN\fR\fR
.RS 4
(N >= 0) This is tha maximum credit fo' havin digits up in tha freshly smoked up password\&.
If you have less than or
\fIN\fR
digits, each digit will count +1 towardz meetin tha current
\fBminlen\fR
value\&. Da default for
\fBdcredit\fR
is 1 which is tha recommended value for
\fBminlen\fR
less than 10\&.
.sp
(N < 0) This is tha minimum number of digits dat must be kicked it wit fo' a new
password\&.
.RE
.PP
\fBucredit=\fR\fB\fIN\fR\fR
.RS 4
(N >= 0) This is tha maximum credit fo' havin upper case lettas up in the
new password\&. If you have less than or
\fIN\fR
upper case lettas each letta will count +1 towardz meetin tha current
\fBminlen\fR
value\&. Da default for
\fBucredit\fR
is
\fI1\fR
which is tha recommended value for
\fBminlen\fR
less than 10\&.
.sp
(N < 0) This is tha minimum number of upper case lettas dat must be met
for a freshly smoked up password\&.
.RE
.PP
\fBlcredit=\fR\fB\fIN\fR\fR
.RS 4
(N >= 0) This is tha maximum credit fo' havin lower case lettas up in the
new password\&. If you have less than or
\fIN\fR
lower case letters, each letta will count +1 towardz meetin tha current
\fBminlen\fR
value\&. Da default for
\fBlcredit\fR
is 1 which is tha recommended value for
\fBminlen\fR
less than 10\&.
.sp
(N < 0) This is tha minimum number of lower case lettas dat must be met
for a freshly smoked up password\&.
.RE
.PP
\fBocredit=\fR\fB\fIN\fR\fR
.RS 4
(N >= 0) This is tha maximum credit fo' havin other charactas up in tha new
password\&. If you have less than or
\fIN\fR
other characters, each characta will count +1 towardz meetin tha current
\fBminlen\fR
value\&. Da default for
\fBocredit\fR
is 1 which is tha recommended value for
\fBminlen\fR
less than 10\&.
.sp
(N < 0) This is tha minimum number of other charactas dat must be kicked it wit for
a freshly smoked up password\&.
.RE
.PP
\fBminclass=\fR\fB\fIN\fR\fR
.RS 4
Da minimum number of required classez of charactas fo' tha freshly smoked up password\&.
Da default number is zero\&. Da four classes is digits, upper n' lower
lettas n' other characters\&. Da difference ta the
\fBcredit\fR
check is dat a specific class if of charactas aint required\&. Instead
\fIN\fR
out of four of tha classes is required\&.
.RE
.PP
\fBmaxrepeat=\fR\fB\fIN\fR\fR
.RS 4
Reject passwordz which contain mo' than N same consecutizzle characters\&.
Da default is 0 which means dat dis check is disabled\&.
.RE
.PP
\fBmaxsequence=\fR\fB\fIN\fR\fR
.RS 4
Reject passwordz which contain monotonic characta sequences longer than N\&.
Da default is 0 which means dat dis check is disabled\&.
Examplez of such sequence is \*(Aq12345\*(Aq or \*(Aqfedcb\*(Aq\&. Note that
most such passwordz aint gonna pass tha simplicitizzle check unless tha sequence
is only a minor part of tha password\&.
.RE
.PP
\fBmaxclassrepeat=\fR\fB\fIN\fR\fR
.RS 4
Reject passwordz which contain mo' than N consecutizzle charactaz of the
same class\&.
Da default is 0 which means dat dis check is disabled\&.
.RE
.PP
\fBgecoscheck=\fR\fB\fIN\fR\fR
.RS 4
If nonzero, check whether tha individual lyrics longer than 3 characters
from the
\fBpasswd GECOS\fR
field of tha user is contained up in tha freshly smoked up password\&.
Da default is 0 which means dat dis check is disabled\&.
.RE
.PP
\fBbadwords=\fR\fB\fI<list of lyrics>\fR\fR
.RS 4
Da lyrics mo' than 3 charactas long from dis space separated list are
individually searched fo' n' forbidden up in tha freshly smoked up password\&.
By default tha list is empty which means dat dis check is disabled\&.
.RE
.PP
\fBenforce_for_root\fR
.RS 4
Da module will return error on failed check even if tha user changin the
password is root\&. This option is off by default which means dat just
the message bout tha failed check is printed but root can chizzle
the password anyway\&. Note dat root aint axed fo' a oldschool password
so tha checks dat compare tha oldschool n' freshly smoked up password is not performed\&.
.RE
.PP
\fBlocal_users_only\fR
.RS 4
Da module aint gonna test tha password qualitizzle fo' playas dat is not present
in tha \fI/etc/passwd\fR file\&. Da module still asks fo' tha password so
the followin modulez up in tha stack can use tha \fBuse_authtok\fR option\&.
This option is off by default\&.
.RE
.PP
\fBuse_authtok\fR
.RS 4
This argument is used to
\fIforce\fR
the module ta not prompt tha user fo' a freshly smoked up password but use tha one
provided by tha previously stacked
\fIpassword\fR
module\&.
.RE
.PP
\fBdictpath=\fR\fB\fI/path/to/dict\fR\fR
.RS 4
Path ta tha cracklib dictionaries\&.
.RE

.PD
.SH "MODULE TYPES PROVIDED"
.PP
Only the
\fBpassword\fR
module type is provided\&.

.PD
.SH "RETURN VALUES"
.PP
.PP
PAM_SUCCESS
.RS 4
Da freshly smoked up password passes all checks\&.
.RE
.PP
PAM_AUTHTOK_ERR
.RS 4
No freshly smoked up password was entered, tha username could not be determined or the
new password fails tha strength checks\&.
.RE
.PP
PAM_AUTHTOK_RECOVERY_ERR
.RS 4
Da oldschool password was not supplied by a previous stacked module or gots not
axed from tha user\&. Da first error can happen if
\fBuse_authtok\fR
is specified\&.
.RE
.PP
PAM_SERVICE_ERR
.RS 4
A internal error occurred\&.
.RE
.SH "EXAMPLES"
.PP
For a example of tha use of dis module, we show how tha fuck it may be stacked wit tha password component of
\fBpam_unix\fR(8)
.sp
.if n \{\
.RS 4
.\}
.nf
#
# These lines stack two password type modules\&. In dis example the
# user is given 3 opportunitizzles ta enta a phat password\&. The
# "use_authtok" argument ensures dat tha pam_unix module do not
# prompt fo' a password yo, but instead uses tha one provided by
# pam_pwquality\&.
#
passwd  password required       pam_pwquality\&.so retry=3
passwd  password required       pam_unix\&.so use_authtok

.fi
.if n \{\
.RE
.\}
.PP
Another example (in the
/etc/pam\&.d/passwd
format) is fo' tha case dat you wanna use md5 password encryption:
.sp
.if n \{\
.RS 4
.\}
.nf
#%PAM\-1\&.0
#
# These lines allow a md5 systems ta support passwordz of at least 14
# bytes wit extra credit of 2 fo' digits n' 2 fo' others tha new
# password must have at least three bytes dat is not present up in the
# oldschool password
#
password  required pam_pwquality\&.so \e
               difok=3 minlen=15 dcredit= 2 ocredit=2
password  required pam_unix\&.so use_authtok nullok md5

.fi
.if n \{\
.RE
.\}
.PP
And here be another example up in case you don\'t wanna use credits:
.sp
.if n \{\
.RS 4
.\}
.nf
#%PAM\-1\&.0
#
# These lines require tha user ta select a password wit a minimum
# length of 8 n' wit at least 1 digit number, 1 upper case letter,
# n' 1 other character
#
password  required pam_pwquality\&.so \e
               dcredit=\-1 ucredit=\-1 ocredit=\-1 lcredit=0 minlen=8
password  required pam_unix\&.so use_authtok nullok md5
.fi
.if n \{\
.RE
.\}
.sp
.PD
.SH "SEE ALSO"
pwscore(1), pwquality.conf(5), pam_pwquality(8),
pam.conf(5), PAM(8)

.SH AUTHORS
.nf
Tomas Mraz <tmraz@redhat\&.com>
Original Gangsta lyricist of pam_cracklib module Cristian Gafton <gafton@redhat\&.com>
.fi
