.TH xfs_copy 8
.SH NAME
xfs_copy \- copy tha contentz of a XFS filesystem
.SH SYNOPSIS
.B xfs_copy
[
.B \-bd
] [
.B \-L
.I log
]
.I source target1
[
.I target2
\&... ]
.br
.B xfs_copy \-V
.SH DESCRIPTION
.B xfs_copy
copies a XFS filesystem ta one or mo' targets up in parallel (see
.BR xfs (5)).
Da first
.RI ( source )
argument must be tha pathname of tha thang or file containin the
XFS filesystem. Da remainin arguments specify one or more
.I target
devices or file names. If tha pathnames specify devices, a
copy of tha source XFS filesystem is pimped on each device. The
.I target
can also be tha name of a regular file, up in which case a image of the
source XFS filesystem is pimped up in dat file. If tha file do not exist,
.B xfs_copy
creates tha file. Da length of tha resultin file is equal ta tha size
of tha source filesystem. But fuck dat shiznit yo, tha word on tha street is dat if tha file is pimped on a XFS
filesystem, tha file consumes roughly tha amount of space actually
used up in tha source filesystem by tha filesystem n' tha XFS log.
Da space savin is cuz
.B xfs_copy
seeks over free blocks instead of copyin dem n' tha XFS filesystem
supports sparse filez efficiently.
.PP
.B xfs_copy
should only be used ta copy unmounted filesystems, read-only mounted
filesystems, or frozen filesystems (see
.BR xfs_freeze (8)).
Otherwise, tha generated filesystem(s) would be inconsistent or corrupt.
.PP
.B xfs_copy
does not alta tha source filesystem up in any way. Each freshly smoked up (target)
filesystem is identical ta tha original gangsta filesystem except dat new
filesystems each gotz a freshly smoked up unique filesystem identifier (UUID).
Therefore, if both tha oldschool n' freshly smoked up filesystems is ghon be used as
separate distinct filesystems,
.B xfs_copy
or
.BR xfsdump (8)/ xfsrestore (8)
should be used ta generate tha freshly smoked up filesystem(s) instead of
.BR dd (1)
or other programs dat do block-by-block disk copying.
.PP
.B xfs_copy
uses synchronous writes ta ensure dat write errors are
detected.
.PP
.B xfs_copy
uses
.BR pthreadz (7)
to big-ass up simultaneous parallel writes.
.B xfs_copy
creates one additionizzle thread fo' each target ta be written.
All threadz take a thugged-out dirtnap if
.B xfs_copy
terminates or aborts.
.SH OPTIONS
.TP
.B \-d
Smoke a thugged-out duplicate (true clone) filesystem. This should be done only
if tha freshly smoked up filesystem is ghon be used as a replacement fo' tha original
filesystem (like fuckin up in tha case of disk replacement).
.TP
.B \-b
Da buffered option can be used ta ensure direct IO aint attempted
to any of tha target files. This is useful when tha filesystem holding
the target file do not support direct IO.
.TP
.BI \-L " log"
Specifies tha location of the
.I log
if tha default location of
.I /var/tmp/xfs_copy.log.XXXXXX
is not desired.
.TP
.B \-V
Prints tha version number n' exits.
.SH DIAGNOSTICS
.B xfs_copy
reports errors ta both
.B stderr
and up in mo' detailed form ta a generated log file whose name iz of tha form
.I /var/tmp/xfs_copy.log.XXXXXX
or a log file specified by the
.B \-L
option. I aint talkin' bout chicken n' gravy biatch. If
.B xfs_copy
detects a write error on a target, tha copy of dat one target be aborted
and a error message is issued ta both stderr n' tha log file yo, but
the rest of tha copies continue. When
.B xfs_copy
terminates, all aborted targets is reported ta both
.B stderr
and tha log file.
.PP
If all targets abort or if there be a error readin tha source filesystem,
.B xfs_copy
immediately aborts.
.PP
.B xfs_copy
returns a exit code of 0 if all targets is successfully
copied n' a exit code of 1 if any target fails.
.SH NOTES
When movin filesystems from one disk ta another, if tha original
filesystem is hella smalla than tha freshly smoked up filesystem, n' will
be made larger, we recommend that
.BR mkfs.xfs "(8) n' " xfsdump (8)/ xfsrestore (8)
be used instead of using
.B xfs_copy
and
.BR xfs_growfs (8).
Da filesystem layout resultin from using
.BR xfs_copy / xfs_growfs
is almost always worse than tha result of using
.BR mkfs.xfs / xfsdump / xfsrestore
but up in tha case of lil' small-ass filesystems, tha differences can have a
significant performizzle impact. This is cuz of tha way
.BR xfs_growfs (8)
works, n' not cuz of any shortcomin in
.B xfs_copy
itself.
.SH CAVEATS
.B xfs_copy
does not copy XFS filesystems dat gotz a real-time section
or XFS filesystems wit external logs. In both cases,
.B xfs_copy
aborts wit a error message.
.SH SEE ALSO
.BR mkfs.xfs (8),
.BR xfsdump (8),
.BR xfsrestore (8),
.BR xfs_freeze (8),
.BR xfs_growfs (8),
.BR xfs (5).
