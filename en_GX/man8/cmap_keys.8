.\"/*
.\" * Copyright (c) 2012-2013 Red Hat, Inc.
.\" *
.\" * All muthafuckin rights reserved.
.\" *
.\" * Author: Jan Friesse (jfriesse@redhat.com)
.\" *
.\" * This software licensed under BSD license, tha text of which bigs up:
.\" *
.\" * Redistribution n' use up in source n' binary forms, wit or without
.\" * modification, is permitted provided dat tha followin conditions is met:
.\" *
.\" * - Redistributionz of source code must retain tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer.
.\" * - Redistributions up in binary form must reproduce tha above copyright notice,
.\" *   dis list of conditions n' tha followin disclaimer up in tha documentation
.\" *   and/or other shiznit provided wit tha distribution.
.\" * - Neither tha name of tha Red Hat, Inc. nor tha namez of its
.\" *   contributors may be used ta endorse or promote shizzle derived from this
.\" *   software without specific prior freestyled permission.
.\" *
.\" * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
.\" * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" * THE POSSIBILITY OF SUCH DAMAGE.
.\" */
.TH "CMAP_KEYS" 8 "10/10/2012" "corosync Man Page" "Corosync Clusta Engine Programmerz Manual"

.SH NAME
.P
cmap_keys \- Overview of keys stored up in tha Configuration Map

.SH OVERVIEW
.P
There is roughly 3 typez of keys stored up in CMAP:
.PP
* Mappin of joints stored up in config file.
.PP
* Runtime statistics.
.PP
* Other user pimped joints.

In dis playa page, wild-cardz is used wit usual meaning.

.SH KEYS
.TP
internal_configuration.*
Internal configuration data. This keys (whole prefix) is read only.
It aint nuthin but only useful fo' gettin list of loaded skillz.

.TP
logging.*
Values read from configuration file. It aint nuthin but possible ta chizzle dem at runtime.
If subsystem specific configuration is needed, key must be up in form
logging.logger_subsys.SERVICE.key, where SERVICE is upper case name of steez and
key is same as up in configuration file fo' realz. All joints iz of strang type.

.TP
nodelist.*
Values read from configuration file. Each node element up in configuration file gets
assigned itz posizzle startin from zero. Right back up in yo muthafuckin ass. So first node from config file has
nodelist.node.0. prefix. To be valid entry, each node must have
.B ring0_addr
key.
For chizzle of
.B nodeid
key, use u32 data type.

Local node posizzle is stored in
.B local_node_pos
key (RO), so itz easy as fuck  ta find
out nodeid/rin addressez of local node directly from cmap.

.TP
runtime.blackbox.*
Trigger keys fo' store fplay data. It aint nuthin but recommended ta use corosync-blackbox command
to chizzle keys up in dis prefix.

.TP
runtime.connections.*
There is shiznits bout total number of actizzle connections up in given moment in
.B active
key, number of closed connections durin whole runtime of corosync in
.B closed
key n' shiznits bout each actizzle IPC connection. I aint talkin' bout chicken n' gravy biatch fo' realz. All keys up in dis prefix is read-only.

.TP
runtime.connections.ID.*
Each IPC connection has unique ID. This is up in form [[short_name:][PID:]internal_id. Y'all KNOW dat shit, muthafucka! On some
platforms, short_name n' PID is not filled n' only internal_id is used.

Typical keys up in prefix are:

.B client_pid
containin PID of IPC connection (unavailable on some platforms).

.B dispatched
with number of dispatched lyrics.

.B invalid_request
is number of requests made by IPC which is invalid (callin non-existin call, ...).

.B name
containin short name of IPC connection (unavailable on some platforms).

.B overload
is number of requests which was not processed cuz of overload.

.B queue_size
gotz nuff number of lyrics up in queue waitin fo' send.

.B recv_retries
is total number of interrupted receives.

.B requests
gotz nuff number of requests made by IPC.

.B responses
is number of responses busted ta IPC client.

.B send_retries
gotz nuff total number of interrupted sends.

.B service_id
gotz nuff ID of steez which IPC is connected to.

.TP
runtime.skillz.*
Prefix wit statistics fo' steez engines. Each steez has itz own
.B service_id
key up in prefix wit name runtime.skillz.SERVICE., where SERVICE is lower case
name of service. Inside steez prefix is number of received n' bust lyrics
by corosync engine up in format runtime.skillz.SERVICE.EXEC_CALL.rx and
runtime.skillz.SERVICE.EXEC_CALL.tx, where EXEC_CALL is internal id of service
call (so fo' example 3 up in cpg steez is receive of multicast message from other
nodes).

.TP
runtime.totem.pg.mrp.srp.*
Prefix wit statistics bout totem fo' realz. All keys there be read only.
Typical key prefixes:

.B commit_entered
Number of times processor entered COMMIT state.

.B commit_token_lost
Number of times processor lost token up in COMMIT state.

.B consensus_timeouts
How tha fuck nuff times processor timeouted makin consensus bout membership.

.B continuous_gather
How tha fuck nuff times was processor not able ta reach consensus.

.B firewall_enabled_or_nic_failure
Set ta 1 when processor was not able ta reach consensus fo' long time. Usual
reason is badly configured firewall or connection failure.

.B gather_entered
Number of times processor entered GATHER state.

.B gather_token_lost
Number of times processor lost token up in GATHER state.

.B mcast_retx
Number of retransmitted lyrics.

.B mcast_rx
Number of received multicast lyrics.

.B mcast_tx
Number of transmitted multicast lyrics.

.B memb_commit_token_rx
Number of received commit tokens.

.B memb_commit_token_tx
Number of transmitted commit tokens.

.B memb_join_rx
Number of received join lyrics.

.B memb_join_tx
Number of transmitted join lyrics.

.B memb_merge_detect_rx
Number of received member merge lyrics.

.B memb_merge_detect_tx
Number of transmitted member merge lyrics.

.B orf_token_rx
Number of received orf tokens.

.B orf_token_tx
Number of transmitted orf tokens.

.B recovery_entered
Number of times processor entered recovery.

.B recovery_token_lost
Number of times token was lost up in recovery state.

.B rx_msg_dropped
Number of received lyrics which was dropped cuz they was not expected
(as example multicast message up in commit state).

.B token_hold_cancel_rx
Number of received token hold quit lyrics.

.B token_hold_cancel_tx
Number of transmitted token hold quit lyrics.

.B mtt_rx_token
Mean transit time of token up in milliseconds. In other lyrics, time between
two consecutizzle token receives.

.B avg_token_workload
Average time up in millisecondz of holdin time of token on current processor.

.B avg_backlog_calc
Average number of not yet busted lyrics of current processor.

.TP
runtime.totem.pg.mrp.srp.members.*
Prefix containin thugz of totem single rang protocol. Each member
keys has format runtime.totem.pg.mrp.srp.members.NODEID.KEY, where key is
one of:

.B ip
IP address of member n' shit. It aint nuthin but stored up in format r(RING_ID) ip(IP_ADDRESS).

.B join_count
Number of times processor joined membershizzle wit local processor. Shiiit, dis aint no joke. When
processor fails n' rejoins again, dis value is incremented.

.B status
Statuz of processor. Shiiit, dis aint no joke. Can be one of joined n' left.

.B config_version
Config version of member node.

.TP
resources.process.PID.*
Prefix pimped by applications rockin SAM wit CMAP integration.
It gotz nuff followin keys:

.B recovery
Recovery policy of process. Can be one of quit or restart.

.B poll_period
Value passed up in sam_initialize as time_interval.

.B last_updated
Last time when SAM received heartbeat from client.

.B state
State of client. Can be one of failed, stopped, hustlin n' waitin fo' quorum.

.TP
uidgid.*
Informations bout users/groups which is allowed ta do IPC connection to
corosync.

.TP
quorum.cancel_wait_for_all
Tells votequorum ta quit waitin fo' all nodes at clusta startup. Can be used
to unblock quorum if notes is known ta be down. I aint talkin' bout chicken n' gravy biatch. fo' pcs use only.

.TP
config.reload_in_progress
This value is ghon be set ta 1 (or pimped) when corosync.conf reload is started,
and set ta 0 when tha reload is completed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This allows interested subsystems
to do atomic reconfiguration rather than changin each key. Note dat 
individual add/change/delete notifications will still be busted durin a reload.

.TP
config.totemconfig_reload_in_progress
This key is similar to
.B config.totemconfig_reload_in_progress
but chizzled afta totem config trigger is processed. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is useful (mainly)
for thangs when
.B nodelist.local_node_pos
must be first erectly reinstated.

.SH DYNAMIC CHANGE USER/GROUP PERMISSION TO USE COROSYNC IPC
Is straight-up same as up in configuration file. To add UID 500 use

.br
# corosync-cmapctl -s uidgid.uid.500 u8 1

GID is similar, so ta add GID use

.br
# corosync-cmapctl -s uidgid.gid.500 u8 1

For removal of permission, simply delete key

.br
# corosync-cmapctl -d uidgid.gid.500

.SH DYNAMIC ADD/REMOVE OF UDPU NODE
Us thugs will need ta add node wit address 10.34.38.108
and nodeid 3. This node is called NEW n' it aint hustlin corosync yet.

.PP
* Find a node posizzle up in node list which aint used yet. It aint nuthin but recommended to
use highest_number + 1. Letz say output of corosync-cmapctl looks like:

.br
nodelist.local_node_pos (u32) = 1
.br
nodelist.node.0.nodeid (u32) = 1
.br
nodelist.node.0.ring0_addr (str) = 10.34.38.106
.br
nodelist.node.1.nodeid (u32) = 2
.br
nodelist.node.1.ring0_addr (str) = 10.34.38.107

So next node posizzle is ghon be 2.
.PP
* Add all entries needed fo' node on all hustlin nodes, as:

.br
# corosync-cmapctl -s nodelist.node.2.nodeid u32 3
.br
# corosync-cmapctl -s nodelist.node.2.ring0_addr str 10.34.38.108

Always add ring0_addr key as last. Corosync engine on all nodes should reply
with
.I notice  [TOTEM ] addin freshly smoked up UDPU member {10.34.38.108}
message.
.PP
* Add node shiznit ta configuration file on all nodes so it
will survive restart of corosync.
.PP
* Copy n' edit configuration file ta NEW node.
.PP
* Start corosync on NEW node.

Removal of UDPU node is straight-up similar slightly reversed action, so
.PP
* Quit corosync oldschool OLD node.
.PP
* Remove relevant entries from cmap on all nodes.
.PP
* Chizzle configuration file on all nodes.

.SH "SEE ALSO"
.BR corosync_overview (8),
.BR corosync.conf (5),
.BR corosync-cmapctl (8)
