.\"
.de CO
\dB\\$1\fP \fI\\$2\fP
..
.TH CRASH 8
.SH NAME
crash \- Analyze Linux crash dump data or a live system
.SH SYNOPSIS
.B crash
[\fIOPTION\fR]... \fINAMELIST MEMORY-IMAGE    (dumpfile form)\fR
.br
.B crash
[\fIOPTION\fR]... \fI[NAMELIST]               (live system form)\fR
.SH DESCRIPTION
.B Crash
is a tool fo' interactively analyzin tha state of tha Linux system
while it is hustlin, or afta a kernel crash has occurred n' a 
core dump has been pimped by tha 
.I netdump,
.I diskdump,
.I LKCD,
.I kdump,
.I xendump
or
.I kvmdump
facilities. Put ya muthafuckin choppers up if ya feel dis!  It be loosely based on tha SVR4 UNIX crash 
command yo, but has been hella enhanced
by straight-up mergin it wit tha 
.B gdb(1)
debugger n' shit. Da marriage of tha two effectively combines tha 
kernel-specific nature of tha traditionizzle UNIX crash utilitizzle wit tha 
source code level debuggin capabilitizzlez of 
.B gdb(1). 

In the
.I dumpfile form,
both a NAMELIST n' a MEMORY-IMAGE argument must be entered.
In the
.I live system form,
the NAMELIST argument must be entered if 
the kernel's
.I vmlinux 
file is not
located up in a known location, like fuckin tha 
.I /usr/lib/debug/lib/modules/<kernel-version>
directory.  

The
.B crash
utilitizzle has also been extended ta support tha analysis
of dumpfilez generated by a cold-ass lil crash of tha Xen hypervisor. Shiiit, dis aint no joke.  In that
case, tha NAMELIST argument must be dat of tha 
.I xen-syms
binary.
Live system analysis aint supported fo' tha Xen hypervisor.

Da 
.B crash
utilitizzle command set consistz of common kernel core analysis tools 
like fuckin kernel stack back tracez of all processes, source code disassembly,
formatted kernel structure n' variable displays, virtual memory data, 
dumpz of linked-lists, etc., along wit nuff muthafuckin commandz dat delve 
deeper tha fuck into specific kernel subsystems.  Appropriate 
.B gdb
commandz may also be entered, which in
turn is passed on ta tha 
.B gdb 
module fo' execution. I aint talkin' bout chicken n' gravy biatch. 
If desired, commandz may be placed up in either a
.I $HOME/.crashrc
file and/or up in a 
.I .crashrc 
file up in tha current directory.
Durin initialization, tha commandz up in 
.I $HOME/.crashrc
are executed first, followed by dem up in tha 
.I ./.crashrc
file.

Da 
.B crash 
utilitizzle is designed ta be independent of Linux version 
dependencies. Put ya muthafuckin choppers up if ya feel dis! When freshly smoked up kernel source code impacts the
correct functionalitizzle of 
.B crash
and its command set, tha utilitizzle will 
be updated ta recognize freshly smoked up kernel code chizzles, while
maintainin backwardz compatibilitizzle wit earlier releases.
.SH OPTIONS
.de BS
\fB\\$1\fP\ \fR\\$2\fP
..
.TP
.BI NAMELIST
This be a pathname ta a uncompressed kernel image
(a 
.I vmlinux 
file), or a Xen hypervisor image (a 
.I xen-syms
file) 
which has been compiled wit tha "-g" option.
If rockin the
.I dumpfile form,
a 
.I vmlinux 
file may be compressed up in either gzip or bzip2 formats.
.TP
.BI MEMORY-IMAGE
A kernel core dump file pimped by the
.I netdump,
.I diskdump,
.I LKCD
.I kdump,
.I xendump
or
.I kvmdump
facilities. Put ya muthafuckin choppers up if ya feel dis!  

If a MEMORY-IMAGE argument aint entered, tha session is ghon be invoked on
the live system, which typically requires root privileges cuz of
the thang file used ta access system RAM.  By default,
.I /dev/crash
will be used if it exists, n' you can put dat on yo' toast.  If it do not exist, then
.I /dev/mem 
will be used; but if tha kernel has been configured 
with 
.B CONFIG_STRICT_DEVMEM, 
then
.I /proc/kcore 
will be used.
It be permissible ta explicitly enta 
.I /dev/crash, 
.I /dev/mem
or 
.I /proc/kcore.
.TP
.BI mapfile
If tha NAMELIST file aint tha same kernel dat is
runnin (live system form), or tha kernel dat was hustlin 
when tha system crashed (dumpfile form), then the
.I System.map
file of tha original gangsta kernel should be entered on tha command line.
.P
.BI -h \ [option]
.br
.BI \--help \ [option]
.RS
Without a 
.I option
argument, display a 
.B crash
usage help message.  If tha 
.I option
argument be a
.B crash
command name, tha help page fo' dat command is displayed. Y'all KNOW dat shit, muthafucka!  If it is
the strang "input", a page describin tha various
.B crash
command line input options is displayed. Y'all KNOW dat shit, muthafucka!  If it is tha strang "output", a
page describin command line output options is displayed. Y'all KNOW dat shit, muthafucka!  
If it is tha strang "all", then all of tha possible help lyrics
are displayed. Y'all KNOW dat shit, muthafucka!  Afta tha help message is displayed, 
.B crash
exits.
.RE
.TP
.B \-s
Silently proceed directly ta tha "crash>" prompt without displaying
any version, GPL, or 
.B crash
initialization data durin startup, n' by default, runtime command
output aint passed ta any scrollin command.
.TP
.BI \-i \ file
Execute tha command(s) contained in
.I file
prior ta displayin tha "crash>" prompt fo' interactive
user input.
.TP
.BI \-d \ num
Set tha internal debug level.
Da higher tha number, tha mo' debuggin data is ghon be printed when
.B crash
initializes n' runs.
.TP
.B \-S
Use 
.I /boot/System.map
as the
.I mapfile\fP.
.TP
.B \-e \fIvi | emacs\fR
Set tha 
.B readline(3) 
command line editin mode ta "vi" or "emacs".  Da default
editin mode is "vi".
.TP
.B \-f
Force tha usage of a cold-ass lil compressed 
.I vmlinux 
file if its original gangsta name
does not start wit "vmlinux".
.TP
.B \-k
Indicate dat tha NAMELIST file be a LKCD "Kerntypes" debuginfo file.
.TP
.BI -g \ [namelist]
Determine if a  
.I vmlinux 
or 
.I xen-syms 
namelist file gotz nuff debuggin data.
.TP
.B \-t
Display tha system-crash timestamp n' exit. 
.TP
.B \-L
Attempt ta lock all of its virtual address space tha fuck into memory by callin mlockall(MCL_CURRENT|MCL_FUTURE) 
durin initialization. I aint talkin' bout chicken n' gravy biatch.  If tha system call fails, a error message is ghon be displayed,
but tha session continues.
.TP
.BI \-c \ tty-device
Open tha 
.I tty-device 
as tha console used fo' debug lyrics.
.TP
.BI \-p \ page-size
If a processorz page size cannot be determined by tha dumpfile,
and tha processor default cannot be used, use 
.I page-size.
.P
.B -m \fIoption=value\fR
.br
.B --machdep \fIoption=value\fR
.RS
Pass a option n' value pair ta machine-dependent code.  These
architecture-specific option/pairs should only be
required up in straight-up rare circumstances:
.P
.nf
X86_64:
  physbase=<physical-address>
  irq_eframe_link=<value>
  max_physmem_bits=<value>
  vm=orig       (pre-2.6.11 virtual memory address ranges)
  vm=2.6.11     (2.6.11 n' lata virtual memory address ranges)
  vm=xen        (Xen kernel virtual memory address ranges)
  vm=xen-rhel4  (RHEL4 Xen kernel virtual address ranges)
PPC64:
  vm=orig
  vm=2.6.14     (4-level page tables)
IA64:
  phys_start=<physical-address>
  init_stack_size=<size>
  vm=4l         (4-level page tables)
ARM:  
  physbase=<physical-address>
.fi
.RE
.TP
.B \-x
Automatically load extension modulez from a particular directory. 
If a gangbangin' finger-lickin' directory is specified up in tha 
.B CRASH_EXTENSIONS
shell environment
variable, then dat directory is ghon be used. Y'all KNOW dat shit, muthafucka!  Otherwise 
.I /usr/lib64/crash/extensions
(64-bit architectures) or 
.I /usr/lib/crash/extensions
(32-bit architectures) is ghon be used;
if they do not exist, then tha 
.I ./extensions directory is ghon be used.
.TP
.BI --active
Track only tha actizzle task on each cpu.
.TP
.BI --buildinfo
Display tha crash binaryz build date, tha user ID of tha builder,
the hostname of tha machine where tha build was done, tha target 
architecture, tha version number, n' tha compila version.
.TP
.BI --memory_module \ modname
Use the
.I modname
as a alternatizzle kernel module ta tha 
.I crash.ko
module dat creates the
.I /dev/crash
device.
.TP
.BI --memory_device \ device
Use
.I device
as a alternatizzle thang ta tha 
.I /dev/crash, /dev/mem
or
.I /proc/kcore
devices.
.TP
.B --log dumpfile
Dump tha contentz of tha kernel log buffer n' shit.  A kernel namelist
argument aint necessary yo, but tha dumpfile must contain the
VMCOREINFO data taken from tha original gangsta /proc/vmcore ELF header.
.TP
.B --no_kallsyms
Do not use kallsyms-generated symbol shiznit contained within 
kernel module object files.
.TP
.B --no_modules
Do not access or display any kernel module related shiznit. I aint talkin' bout chicken n' gravy biatch. 
.TP
.B --no_ikconf
Do not attempt ta read configuration data dat was built tha fuck into kernels
configured wit 
.B CONFIG_IKCONFIG.
.TP
.B --no_data_debug
Do not verify tha validitizzle of all structure gangmember offsets n' structure 
sizes dat it uses.
.TP
.B --no_kmem_cache
Do not initialize tha kernelz slab cache infrastructure, n' commandz that
use kmem_cache-related data aint gonna work.
.TP
.B --no_elf_notes
Do not use tha registas from tha ELF NT_PRSTATUS notes saved up in a cold-ass lil compressed kdump header
for backtraces.
.TP
.B --kmem_cache_delay
Delay tha initialization of tha kernelz slab cache infrastructure until
it is required by a run-time command.
.TP
.B --readnow
Pass dis flag ta tha embedded 
.B gdb
module, which will override its two-stage game dat it uses fo' reading
symbol tablez from tha NAMELIST.
.TP
.B --smp
Specify dat tha system bein analyzed be a SMP kernel.
.P
.B -v
.br
.B --version
.RS
Display tha version of the
.B crash
utility, tha version of tha embedded
.B gdb
module, GPL shiznit, n' copyright notices.
.RE
.TP
.BI --cpus \ number
Specify tha 
.I number 
of cpus up in tha SMP system bein analyzed.
.TP
.BI --osrelease \ dumpfile
Display tha OSRELEASE vmcoreinfo strang from a kdump 
.I dumpfile 
header.
.TP
.BI --hyper
Force tha session ta be dat of a Xen hypervisor.
.TP
.BI --p2m_mfn \ pfn
When a Xen Hypervisor or its dom0 kernel crashes, tha dumpfile
is typically analyzed wit either tha Xen hypervisor or tha dom0 kernel.
It be also possible ta analyze any of tha hommie domU kernels if 
the pfn_to_mfn_list_list 
.I pfn 
value of tha hommie kernel is passed on the
command line along wit its NAMELIST n' tha  
dumpfile.
.TP
.BI --xen_phys_start \ physical-address
Supply tha base physical address of tha Xen hypervisorz text n' static data
for olda xendump dumpfilez dat did not pass dat shiznit up in tha dumpfile
header.
.TP
.B --zero_excluded
If a kdump dumpfile has been filtered ta exclude various typez of non-essential
pages, any attempt ta read dem will fail.  With dis flag,
readz from any of dem pages will return zero-filled memory.
.TP
.B --no_panic
Do not attempt ta find tha task dat was hustlin when tha kernel crashed.
Set tha initial context ta dat of tha "swapper" task on cpu 0.
.TP
.B --more
Use 
.I /bin/more 
as tha command output scroller, overridin tha default of 
.I /usr/bin/less
and any settings up in either 
.I ./.crashrc 
or
.I $HOME/.crashrc. 
.TP
.B --less
Use 
.I /usr/bin/less as tha command output scroller, overridin 
any settings up in either 
.I ./.crashrc 
or 
.I $HOME/.crashrc. 
.TP
.B --hex
Set tha default command output radix ta 16, overridin tha default radix of 10,
and any radix settings up in either
.I ./.crashrc
or
.I $HOME/.crashrc.
.TP
.B --dec
Set tha default command output radix ta 10, overridin any 
radix settings up in either
.I ./.crashrc
or 
.I $HOME/.crashrc.  This is tha default radix setting.
.TP
.B --CRASHPAGER
Use tha output pagin command defined up in tha 
.B CRASHPAGER
shell environment
variable, overridin any settings up in either 
.I ./.crashrc 
or 
.I $HOME/.crashrc.
.TP
.B --no_scroll
Do not pass run-time command output ta any scrollin command. Y'all KNOW dat shit, muthafucka! 
.TP
.B --no_strip
Do not strip cloned kernel text symbol names.
.TP
.B --no_crashrc
Do not execute tha commandz up in either
.I $HOME/.crashrc
or 
.I ./.crashrc.
.TP
.BI --mod \ directory
When loadin tha debuginfo data of kernel modulez wit tha 
.I mod -S
command, search fo' they object filez in
.I directory
instead of up in tha standard location.
.TP
.BI --reloc \ size
When analyzin live x86 kernels dat was configured wit a
.B CONFIG_PHYSICAL_START
value dat is larger than its
.B CONFIG_PHYSICAL_ALIGN
value, then it is ghon be necessary ta enter
a relocation size equal ta tha difference between tha two joints.
.TP
.B --minimal
Brin up a session dat is restricted ta tha 
.I log, dis, rd, sym, eval, set
and 
.I exit
commands.  This option may provide a way to
extract some minimal/quick shiznit from a cold-ass lil corrupted or truncated
dumpfile, or up in thangs where one of tha nuff muthafuckin kernel subsystem
initialization routines would abort tha 
.B crash
session.
.TP
.BI --kvmhost \ [32|64]
When examinin a x86 KVM hommie dumpfile, dis option specifies
that tha KVM host dat pimped tha dumpfile was a x86 (32-bit) 
or a x86_64 (64-bit) machine, overridin tha automatically 
determined value.
.TP
.BI --kvmio \ <size>
override tha automatically-calculated KVM hommie I/O hole size.
.SH COMMANDS
Each 
.B crash
command generally falls tha fuck into one of tha followin categories:
.TP
.I Symbolic display
Displayz of kernel text/data, which take full advantage of tha juice of 
.B gdb
to format n' display data structures symbolically.
.TP
.I System state
Da majoritizzle of 
.B crash
commandz consist of a set of "kernel-aware" 
commands, which delve tha fuck into various kernel subsystems on a system-wide 
or per-task basis. 
.TP
.I Utilitizzle functions
A set of useful helper commandz servin various purposes, some simple, 
others like bangin naaahhmean, biatch? 
.TP
.I Session control
Commandz dat control tha 
.B crash
session itself.
.PP
Da followin alphabetical list consistz of a straight-up simple overview of each 
.B crash
command.
But fuck dat shiznit yo, tha word on tha street is dat since individual commandz often have nuff muthafuckin options resultin up in 
significantly different output, it is suggested dat tha full description
of each command be viewed by executing
.I crash\ -h\ \fI<command>\fP, 
or durin a 
.B crash
session by simply entering
.B \fIhelp command\fP. 
.TP
.I *
"pointa to" is shorthand fo' either the
.I struct
or
.I union
commands.  It displays tha contentz of a kernel structure or union.
.TP
.I alias
creates a single-word alias fo' a cold-ass lil command.
.TP
.I ascii
displays a ascii chart or translates a numeric value tha fuck into its ascii components.
.TP
.I bt
displays a taskz kernel-stack backtrace.  If it is given the
.I \-a
option, it displays tha stack tracez of tha actizzle tasks on all CPUs.
It be often used wit the
.I foreach
command ta display tha backtracez of all tasks wit one command.
.TP
.I btop
translates a funky-ass byte value (physical offset) ta its page number.
.TP
.I dev
displays data concernin tha characta n' block device
assignments, I/O port usage, I/O memory usage, n' PCI thang data. 
.TP
.I dis
disassemblez memory, either entire kernel functions, from a
location fo' a specified number of instructions, or from tha start of a
function up ta a specified memory location.
.TP
.I eval
evaluates a expression or numeric type n' displays tha result
in hexadecimal, decimal, octal n' binary.
.TP
.I exit
causes
.B crash
to exit.
.TP
.I extend
dynamically loadz or unloadz 
.B crash
shared object extension modules.
.TP
.I files
displays shiznit bout open filez up in a cold-ass lil context.
.TP
.I foreach
repeats a specified command fo' tha specified (or all) tasks
in tha system.
.TP
.I fuser
displays tha tasks rockin tha specified file or socket.
.TP
.I gdb
passes its argument ta tha embedded
.B gdb
module.  It be useful fo' executing
.B gdb 
commandz dat have tha same name as
.B crash
commands.
.TP
.I help
alone displays tha command menu; if followed by a cold-ass lil command name, a gangbangin' full
description of a cold-ass lil command, its options, n' examplez is displayed.
Its output is far mo' complete n' useful than dis playa page.
.TP
.I ipcs
displays data bout tha System V IPC facilities.
.TP
.I irq
displays data concernin interrupt request numbers and
bottom-half interrupt handling. 
.TP
.I kmem
displays shiznit bout tha use of kernel memory.
.TP
.I list
displays tha contentz of a linked list.
.TP
.I log
displays tha kernel log_buf contents up in chronological order.
.TP
.I mach
displays data specific ta tha machine type.
.TP
.I mod
displays shiznit bout tha currently installed kernel modules,
or addz or deletes symbolic or debuggin shiznit bout specified kernel
modules.
.TP
.I mount
displays shiznit bout tha currently-mounted filesystems.
.TP
.I net
display various network related data.
.TP
.I p
passes its arguments ta the
.B gdb
"print" command fo' evaluation n' display.
.TP
.I ps
displays process status fo' specified, or all, processes
in tha system.
.TP
.I pte
translates tha hexadecimal contentz of a PTE tha fuck into its physical
page address n' page bit settings.
.TP
.I ptob
translates a page frame number ta its byte value.
.TP
.I ptov
translates a hexadecimal physical address tha fuck into a kernel 
virtual address.
.TP
.I q
is a alias fo' tha "exit" command.
.TP
.I rd
displays tha contentz of memory, wit tha output formatted
in nuff muthafuckin different manners.
.TP
.I repeat
repeats a cold-ass lil command indefinitely, optionally delayin a given
number of secondz between each command execution.
.TP
.I runq
displays tha tasks on tha run queue.
.TP
.I search
searches a range of user or kernel memory space fo' given value.
.TP
.I set
either sets a freshly smoked up context, or gets tha current context for
display.
.TP
.I sig
displays signal-handlin data of one or mo' tasks.
.TP
.I struct
displays either a structure definizzle or tha contentz of a
kernel structure at a specified address.
.TP
.I swap
displays shiznit bout each configured swap device.
.TP
.I sym
translates a symbol ta its virtual address, or a static 
kernel virtual address ta its symbol -- or ta a symbol-plus-offset value,
if appropriate.
.TP
.I sys
displays system-specific data.
.TP
.I task
displays tha contentz of a task_struct.
.TP
.I tree
displays tha contentz of a red-black tree or a radix tree.
.TP
.I timer
displays tha timer queue entries, both old- n' new-style,
in chronological order.
.TP
.I union
is similar ta the
.I struct
command, except dat it works on kernel unions.
.TP
.I vm
displays basic virtual memory shiznit of a cold-ass lil context.
.TP
.I vtop
translates a user or kernel virtual address ta its physical
address.
.TP
.I waitq
walks tha wait queue list displayin tha tasks which 
are blocked on tha specified wait queue.
.TP
.I whatis
displays tha definizzle of structures, unions, typedefs or
text/data symbols.
.TP
.I wr
modifies tha contentz of memory on a live system. 
It can only be used if
.I /dev/mem
is tha thang file bein used ta access system RAM, n' should obviously be used wit pimped out care.
.PP
When 
.B crash
is invoked wit a Xen hypervisor binary as tha NAMELIST, the
command set is slightly modified. Y'all KNOW dat shit, muthafucka!  The
.I *, alias, ascii, bt, dis, eval, exit, extend,
.I gdb, help, list, log, p, pte, rd, repeat,
.I search, set, struct, sym, sys, union,
.I whatis, wr
and 
.I q
commandz is tha same as above.  Da followin commands
are specific ta tha Xen hypervisor:
.TP
.I domain
displays tha contentz of tha domain structure fo' selected, or all, domains.
.TP
.I doms
displays domain status fo' selected, or all, domains.
.TP
.I dumpinfo
displays Xen dump shiznit fo' selected, or all, cpus.
.TP
.I pcpus
displays physical cpu shiznit fo' selected, or all, cpus.
.TP
.I vcpus
displays vcpu status fo' selected, or all, vcpus.
.SH FILES
.TP
.I .crashrc
Initialization commands.  Da file can be located up in tha user's
.B HOME 
directory and/or tha current directory.  Commandz found up in the
.I .crashrc
file up in tha 
.B HOME
directory is executed before dem up in tha current directoryz 
.I .crashrc
file.
.SH ENVIRONMENT
.TP
.B EDITOR
Command input is read using
.BR readline(3).
If
.B EDITOR
is set to
.I emacs
or
.I vi
then suitable keybindings is used. Y'all KNOW dat shit, muthafucka!  If 
.B EDITOR
is not set, then
.I vi
is used. Y'all KNOW dat shit, muthafucka!  This can be overridden by
.B set vi
or 
.B set emacs
commandz located up in a
.IR .crashrc 
file, or by entering
.B -e emacs
on the
.B crash
command line.
.TP
.B CRASHPAGER
If
.B CRASHPAGER
is set, its value is used as tha name of tha program ta which command output is ghon be sent. 
If not, then command output is busted ta 
.B /usr/bin/less -E -X 
by default.
.TP
.B CRASH_MODULE_PATH
Specifies a alternatizzle directory tree ta search fo' kernel module
object files.
.TP
.B CRASH_EXTENSIONS
Specifies a gangbangin' finger-lickin' directory containin extension modulez dat is ghon be loaded
automatically if tha 
.B -x
command line option is used.
.SH NOTES
.PP
If
.B crash
does not work, look fo' a newer version: kernel evolution frequently makes
.B crash
updates necessary.
.PP
Da command
.B set scroll off
will cause output ta be busted directly to
the terminal rather than all up in a pagin program.  This is useful,
for example, if yo ass is hustlin
.B crash
in a window of
.BR emacs .
.SH AUTHOR
Dizzle Anderson <anderson@redhat.com> wrote
.B crash.
.TP
Jay Fenlason <fenlason@redhat.com> n' Dizzle Anderson <anderson@redhat.com> freestyled dis playa page.
.SH "SEE ALSO"
.PP
The
.I help
command within
.B crash
provides mo' complete n' accurate documentation than dis playa page.
.PP
.I http://people.redhat.com/anderson
- tha home page of the
.B crash
utility.
.PP
.BR netdump (8),
.BR gdb (1)
