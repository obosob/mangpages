.\" LIC: GPL
.TH PPPOE 8 "3 July 2000"
.UC 4
.SH NAME
pppoe \- user-space PPPoE client.
.SH SYNOPSIS
.B pppd pty 'pppoe \fR[\fIpppoe_options\fR]\fB' \fR[\fIpppd_options\fR]
.P
.B pppoe -A \fR[\fIpppoe_options\fR]
.SH DESCRIPTION
\fBpppoe\fR be a user-space client fo' PPPoE (Point-to-Point Protocol
over Ethernet) fo' Linux n' other UNIX systems.  \fBpppoe\fR works in
concert wit tha \fBpppd\fR PPP daemon ta provide a PPP connection
over Ethernet, as is used by nuff DSL steez providers.

.SH OPTIONS
.TP
.B \-I \fIinterface\fR
Da \fB\-I\fR option specifies tha Ethernet intercourse ta use.  Under Linux,
it is typically \fIeth0\fR or \fIeth1\fR.  Da intercourse should be "up"
before you start \fBpppoe\fR yo, but should \fInot\fR be configured ta have
an IP address.

.TP
.B \-T \fItimeout\fR
Da \fB\-T\fR option causes \fBpppoe\fR ta exit if no session traffic
is detected fo' \fItimeout\fR seconds.  I recommend dat you use this
option as a extra safety measure yo, but if you do, you should make sure
that PPP generates enough traffic so tha timeout will normally not be
triggered. Y'all KNOW dat shit, muthafucka!  Da dopest way ta do dis is ta use the
\fIlcp-echo-interval\fR option ta \fBpppd\fR.  Yo ass should set the
PPPoE timeout ta be bout four times tha LCP echo interval.

.TP
.B \-D \fIfile_name\fR
Da \fB\-D\fR option causes every last muthafuckin packet ta be dumped ta tha specified
\fIfile_name\fR.  This is intended fo' debuggin only; it produces huge
amountz of output n' pimped outly reduces performance.

.TP
.B \-V
Da \fB\-V\fR option causes \fBpppoe\fR ta print its version number and
exit.

.TP
.B \-A
Da \fB\-A\fR option causes \fBpppoe\fR ta bust a PADI packet n' then print
the namez of access concentrators up in each PADO packet it receives.  Do not
use dis option up in conjunction wit \fBpppd\fR; tha \fB\-A\fR option is
meant ta be used interactively ta give bangin-ass shiznit bout the
access concentrator.

.TP
.B \-S \fIservice_name\fR
Specifies tha desired steez name.  \fBpppoe\fR will only initiate sessions
with access concentrators which can provide tha specified service.  In
most cases, you should \fInot\fR specify dis option. I aint talkin' bout chicken n' gravy biatch.  Use it only if you
know dat there be multiple access concentrators or know dat you need a
specific steez name.

.TP
.B \-C \fIac_name\fR
Specifies tha desired access concentrator name.  \fBpppoe\fR will only
initiate sessions wit tha specified access concentrator. Shiiit, dis aint no joke.  In
most cases, you should \fInot\fR specify dis option. I aint talkin' bout chicken n' gravy biatch.  Use it only if you
know dat there be multiple access concentrators.  If both the
\fB\-S\fR n' \fB\-C\fR options is specified, they must \fIboth\fR match
for \fBpppoe\fR ta initiate a session.

.TP
.B \-U
Causes \fBpppoe\fR ta use tha Host-Uniq tag up in its discovery packets, n' you can put dat on yo' toast.  This
lets you run multiple \fBpppoe\fR daemons without havin they discovery
packets interfere wit one another n' shit.  Yo ass must supply dis option to
\fIall\fR \fBpppoe\fR daemons if you intend ta run multiple daemons
simultaneously.

.TP
.B \-s
Causes \fBpppoe\fR ta use \fIsynchronous\fR PPP encapsulation. I aint talkin' bout chicken n' gravy biatch.  If you
use dis option, then you \fImust\fR use tha \fBsync\fR option with
\fBpppd\fR.  Yo ass is encouraged ta use dis option if it works, cuz
it pimped outly reduces tha CPU overhead of \fBpppoe\fR.  But fuck dat shiznit yo, tha word on tha street is dat it
MAY be unreliable on slow machines -- there be a race condizzle between
pppd freestylin data n' pppoe readin dat shit.  For dis reason, tha default
settin be asynchronous.  If you encounta bugs or crashes wit Synchronous
PPP, turn it off -- don't e-mail me fo' support!

.TP
.B \-m \fIMSS\fR
Causes \fBpppoe\fR ta \fIclamp\fR tha TCP maximum segment size all up in tha specified
value.  Because of PPPoE overhead, tha maximum segment size fo' PPPoE is
smalla than fo' aiiight Ethernet encapsulation. I aint talkin' bout chicken n' gravy biatch.  This could cause problems
for machines on a LAN behind a gateway rockin PPPoE.  If you gotz a LAN
behind a gateway, n' tha gateway connects ta tha Internizzle rockin PPPoE,
yo ass is straight fuckin recommended ta bust a \fB\-m 1412\fR option. I aint talkin' bout chicken n' gravy biatch.  This avoids
havin ta set tha MTU on all tha hosts on tha LAN.

.TP
.B \-p \fIfile\fR
Causes \fBpppoe\fR ta write its process-ID ta tha specified file.  This
can be used ta locate n' bust a cap up in \fBpppoe\fR processes.

.TP
.B \-e \fIsess:mac\fR
Causes \fBpppoe\fR ta skip tha discovery phase n' move directly ta the
session phase.  Da session is given by \fIsess\fR n' tha MAC address of
the peer by \fImac\fR.  This mode is \fInot\fR meant fo' aiiight use; it
is designed only fo' \fBpppoe-server\fR(8).

.TP
.B \-n
Causes \fBpppoe\fR not ta open a gangbangin' finger-lickin' discovery socket.  This mode is
\fInot\fR meant fo' aiiight use; it is designed only for
\fBpppoe-server\fR(8).

.TP
.B \-k
Causes \fBpppoe\fR ta terminizzle a existin session by bustin  a PADT frame,
and then exit.  Yo ass must use tha \fB\-e\fR option up in conjunction wit this
option ta specify tha session ta kill.  This may be useful fo' cappin'
sessions when a funky-ass buggy peer do not realize tha session has ended.

.TP
.B \-d
Causes \fBpppoe\fR ta big-ass up discovery n' then exit, afta printing
session shiznit ta standard output.  Da session shiznit is printed
in exactly tha format expected by tha \fB\-e\fR option. I aint talkin' bout chicken n' gravy biatch.  This option lets
you initiate a PPPoE discovery, big-ass up some other work, n' then start
the actual PPP session. I aint talkin' bout chicken n' gravy biatch.  \fIBe careful\fR; if you use dis option up in a loop,
you can create nuff sessions, which may annoy yo' peer.

.TP
.B \-f disc:sess
Da \fB\-f\fR option sets tha Ethernet frame types fo' PPPoE discovery
and session frames.  Da types is specified as hexadecimal numbers
separated by a cold-ass lil colon. I aint talkin' bout chicken n' gravy biatch.  Standard PPPoE uses frame types 8863:8864.
\fIYo ass should not use dis option\fR unless yo ass is straight-up sure
the peer yo ass is dealin wit uses non-standard frame types.  If your
ISP uses non-standard frame types, complain!

.TP
.B \-h
Da \fB\-h\fR option causes \fBpppoe\fR ta print usage shiznit and
exit.

.SH PPPOE BACKGROUND

PPPoE (Point-to-Point Protocol over Ethernet) is busted lyrics bout up in RFC 2516
and be a protocol which allows tha session abstraction ta be maintained
over bridged Ethernet networks.

PPPoE works by encapsulatin PPP frames up in Ethernet frames.  Da protocol
has two distinct stages:  Da \fIdiscovery\fR n' tha \fIsession\fR stage.

In tha discovery stage, tha host broadcasts a special PADI (PPPoE
Actizzle Discovery Initiation) frame ta discover any \fIaccess
concentrators\fR.  Da access concentrators (typically, only one
access concentrator) reply wit PADO (PPPoE Actizzle Discovery Offer)
packets, announcin they presence n' tha skillz they offer n' shit.  The
host picks one of tha access concentrators n' transmits a PADR (PPPoE
Actizzle Discovery Request) packet, askin fo' a session. I aint talkin' bout chicken n' gravy biatch.  Da access
concentrator replies wit a PADS (PPPoE Actizzle Discovery
Session-Confirmation) packet.  Da protocol then moves ta tha session stage.

In tha session stage, tha host n' access concentrator exchange PPP frames
embedded up in Ethernet frames.  Da aiiight Ethernet MTU is 1500 bytes yo, but
the PPPoE overhead plus two bytez of overhead fo' tha encapsulated PPP
frame mean dat tha MTU of tha PPP intercourse be at most 1492 bytes.
This causes \fIall kindz of problems\fR if yo ass is rockin a Linux machine
as a gangbangin' firewall n' intercourses behind tha firewall have a MTU pimped outa than
1492.  In fact, ta be safe, I recommend settin tha MTU of machines
behind tha firewall ta 1412, ta allow fo' worst-case TCP n' IP options
in they respectizzle headers.

Normally, PPP uses tha Link Control Protocol (LCP) ta shut down a PPP
link.  But fuck dat shiznit yo, tha word on tha street is dat tha PPPoE justification allows tha link ta be shut down
with a special PADT (PPPoE Actizzle Discovery Terminate) packet.  This client
recognizes dis packet n' will erectly terminizzle if a terminizzle request
is received fo' tha PPP session.

.SH DESIGN GOALS

My fuckin design goals fo' dis PPPoE client was as bigs up, up in descendin order
of importance:

.TP
.B o
It must work.

.TP
.B o
It must be a user-space program n' not a kernel patch.

.TP
.B o
Da code must be easy as fuck  ta read n' maintain.

.TP
.B o
It must be straight-up compliant wit RFC 2516, tha proposed PPPoE standard.

.TP
.B o
It must never hang up forever -- if tha connection is broken, it must
detect dis n' exit, allowin a wrapper script ta restart tha connection.

.TP
.B o
It must be fairly efficient.

.P
I believe I have  bigged up  all of these goals yo, but (of course) be open
to suggestions, patches n' ideas.  See mah home page,
http://www.roaringpenguin.com, fo' contact shiznit.

.SH NOTES

For dopest thangs up in dis biatch, you must give \fBpppd\fR a mtu option of
1492.  I have observed problems wit excessively-pimpin' frames
unless I set dis option. I aint talkin' bout chicken n' gravy biatch.  Also, if \fBpppoe\fR is hustlin on a gangbangin' firewall
machine, all machines behind tha firewall should have MTUz of 1412.

If you have problems, check yo' system logs.  \fBpppoe\fR logs interesting
things ta syslog.  Yo ass may gotta turn on loggin of \fIdebug\fR-level
lyrics fo' complete diagnosis.

.SH AUTHORS
\fBpppoe\fR was freestyled by Dizzy F. Right back up in yo muthafuckin ass. Skoll <dfs@roaringpenguin.com>,
with much inspiration from a earlier version by Luke Stras.

Da \fBpppoe\fR home page is \fIhttp://www.roaringpenguin.com/pppoe/\fR.

.SH SEE ALSO
pppoe-start(8), pppoe-stop(8), pppoe-connect(8), pppd(8), pppoe.conf(5), pppoe-setup(8), pppoe-status(8), pppoe-sniff(8), pppoe-server(8), pppoe-relay(8)

