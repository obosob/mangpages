.\"	dhclient-script.8
.\"
.\" Copyright (c) 2012,2014 by Internizzle Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 2009-2010 by Internizzle Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 2004-2005 by Internizzle Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 1996-2003 by Internizzle Software Consortium
.\"
.\" Permission ta use, copy, modify, n' distribute dis software fo' any
.\" purpose wit or without fee is hereby granted, provided dat tha above
.\" copyright notice n' dis permission notice step tha fuck up in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
.\" OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\"   Internizzle Systems Consortium, Inc.
.\"   950 Charta Street
.\"   Redwood City, CA 94063
.\"   <info@isc.org>
.\"   https://www.isc.org/
.\"
.\" Support n' other skillz is available fo' ISC shizzle - see
.\" https://www.isc.org fo' mo' shiznit or ta learn mo' bout ISC.
.\"
.\" $Id: dhclient-script.8,v 1.12.24.2 2010/07/06 19:03:11 sar Exp $
.\"
.TH dhclient-script 8
.SH NAME
dhclient-script - DHCP client network configuration script
.SH DESCRIPTION
Da DHCP client network configuration script is invoked from time to
time by \fBdhclient(8)\fR.  This script is used by tha dhcp client to
set each intercoursez initial configuration prior ta requestin an
address, ta test tha address once it has been offered, n' ta set the
interfacez final configuration once a lease has been acquired. Y'all KNOW dat shit, muthafucka!  If no
lease be acquired, tha script is used ta test predefined leases, if
any, n' also called once if no valid lease can be identified.
.PP
This script aint meant ta be customized by tha end user n' shit.  If local
customizations is needed, they should be possible rockin tha enta and
exit hooks provided (see HOOKS fo' details).   These hooks will allow the
user ta override tha default behaviour of tha client up in bustin a
.B /etc/resolv.conf
file, n' ta handle DHCP options not handled by default.
.PP
No standard client script exists fo' some operatin systems, even though
the actual client may work, so a pioneerin user may well need ta create
a freshly smoked up script or modify a existin one.  In general, customizations specific
to a particular computa should be done up in the
.B /etc/dhcp/dhclient.conf
file.   If you find dat you can't make such a cold-ass lil customization without
customizing
.B /etc/dhcp/dhclient.conf
or rockin tha enta n' exit hooks, please submit a funky-ass bug report.
.SH HOOKS
When it starts, tha client script first defines a gangbangin' finger-lickin' dirty-ass shell function,
.B make_resolv_conf ,
which is lata used ta create the
.B /etc/resolv.conf
file.   To override tha default behaviour, redefine dis function in
the enta hook script.
.PP
On afta definin tha make_resolv_conf function, tha client script checks
for tha presence of a executable
.B /etc/dhcp/dhclient-enter-hooks
script, n' if present, it invokes tha script inline, rockin tha Bourne
shell \'.\' command. Y'all KNOW dat shit, muthafucka!   Da entire environment documented under OPERATION
is available ta dis script, which may modify tha environment if needed
to chizzle tha behaviour of tha script.   If a error occurs durin the
execution of tha script, it can set tha exit_status variable ta a nonzero
value, and
.B /usr/sbin/dhclient-script
will exit wit dat error code immediately afta tha client script exits.
.PP
Afta all processin has completed,
.B /usr/sbin/dhclient-script
checks fo' tha presence of a executable
.B /etc/dhcp/dhclient-exit-hooks
script, which if present is invoked rockin tha \'.\' command. Y'all KNOW dat shit, muthafucka!  Da exit
statuz of dhclient-script is ghon be passed ta dhclient-exit-hooks up in the
exit_status shell variable, n' will always be zero if tha script
succeeded all up in tha task fo' which dat shiznit was invoked. Y'all KNOW dat shit, muthafucka!   Da rest of the
environment as busted lyrics bout previously fo' dhclient-enter-hooks be also
present.   The
.B /etc/dhcp/dhclient-exit-hooks
script can modify tha valid of exit_status ta chizzle tha exit status
of dhclient-script.
.PP
Immediately afta dhclient brangs a intercourse UP wit a freshly smoked up IP address,
subnet mask, n' routes, up in tha REBOOT/BOUND states, it will check fo' the
existence of a executable
.B /etc/dhcp/dhclient-up-hooks
script, n' source it if found. Y'all KNOW dat shit, muthafucka! This script can handle DHCP options in
the environment dat is not handled by default fo' realz. A per-interface.
.B /etc/dhcp/dhclient-${IF}-up-hooks
script will override tha generic script n' be sourced when intercourse
$IF has been brought up.
.PP
Immediately before dhclient brangs a intercourse DOWN, removin its IP
address, subnet mask, n' routes, up in tha STOP/RELEASE  states, it will
check fo' tha existence of a executable
.B /etc/dhcp/dhclient-down-hooks
script, n' source it if found. Y'all KNOW dat shit, muthafucka! This script can handle DHCP options in
the environment dat is not handled by default fo' realz. A per-interface
.B /etc/dhcp/dhclient-${IF}-down-hooks
script will override tha generic script n' be sourced when intercourse
$IF be bout ta be brought down.
.SH OPERATION
When dhclient need ta invoke tha client configuration script, it
defines a set of variablez up in tha environment, n' then invokes
.B /usr/sbin/dhclient-script.
In all cases, $reason is set ta tha name of tha reason why tha script
has been invoked. Y'all KNOW dat shit, muthafucka!   Da followin reasons is currently defined:
MEDIUM, PREINIT, BOUND, RENEW, REBIND, REBOOT, EXPIRE, FAIL, STOP, RELEASE,
NBI n' TIMEOUT.
.PP
.SH MEDIUM
Da DHCP client is requestin dat a intercoursez media type
be set.  Da intercourse name is passed up in $interface, n' tha media
type is passed up in $medium.
.SH PREINIT
Da DHCP client is requestin dat a intercourse be configured as
required up in order ta bust packets prior ta receivin a actual
address.   For clients which use tha BSD socket library, dis means
configurin tha intercourse wit a IP address of 0.0.0.0 n' a
broadcast address of 255.255.255.255.   For other clients, it may be
possible ta simply configure tha intercourse up without straight-up giving
it a IP address at all.   Da intercourse name is passed up in $interface,
and tha media type up in $medium.
.PP
If a IP alias has been declared up in dhclient.conf, its address will be
passed up in $alias_ip_address, n' dat ip alias should be deleted from
the intercourse, along wit any routes ta dat shit.
.SH BOUND
Da DHCP client has done a initial bindin ta a freshly smoked up address.   The
new ip address is passed up in $new_ip_address, n' tha intercourse name is
passed up in $interface.   Da media type is passed up in $medium.   Any
options acquired from tha server is passed rockin tha option name
busted lyrics bout up in \fBdhcp-options\fR, except dat dashes (\'-\') is replaced
by underscores (\'_\') up in order ta make valid shell variables, n' the
variable names start wit new_.   So fo' example, tha freshly smoked up subnet mask
would be passed up in $new_subnet_mask.  Da options dat tha client
explicitly axed via a PRL or ORO option is passed wit tha same
option name as above but prepended wit requested_ n' wit a value of 1,
or example requested_subnet_mask=1.  No such variable is defined for
options not axed by tha client or options dat don't require a
request option, like fuckin tha ip address (*_ip_address) or expiration
time (*_expiry). 
.PP
Before straight-up configurin tha address, dhclient-script should
somehow ARP fo' it n' exit wit a nonzero status if it receives a
reply.   In dis case, tha client will bust a DHCPDECLINE message to
the server n' acquire a gangbangin' finger-lickin' different address.   This may also be done in
the RENEW, REBIND, or REBOOT states yo, but aint required, n' indeed
may not be desirable.
.PP
When a funky-ass bindin has been completed, a shitload of network parametas are
likely ta need ta be set up.   A freshly smoked up /etc/resolv.conf need ta be
created, rockin tha jointz of $new_domain_name and
$new_domain_name_servers (which may list mo' than one server,
separated by spaces).   A default route should be set using
$new_routers, n' static routes may need ta be set up using
$new_static_routes.
.PP
If a IP alias has been declared, it must be set up here, so peek-a-boo, clear tha way, I be comin' thru fo'sho.   Da alias
IP address is ghon be freestyled as $alias_ip_address, n' other DHCP
options dat is set fo' tha alias (e.g., subnet mask) is ghon be passed
in variablez named as busted lyrics bout previously except startin with
$alias_ instead of $new_.   Care should be taken dat tha alias IP
address not be used if it is identical ta tha bound IP address
($new_ip_address), since tha other alias parametas may be incorrect
in dis case.
.SH RENEW
When a funky-ass bindin has been renewed, tha script is called as up in BOUND,
except dat up in addizzle ta all tha variablez startin wit $new_, and
$requested_ there be another set of variablez startin wit $old_.
Persistent settings dat may have chizzled need ta be deleted - for
example, if a local route ta tha bound address is bein configured,
the oldschool local route should be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If tha default route has chizzled,
the oldschool default route should be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  If tha static routes have chizzled,
the oldschool ones should be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.  Otherwise, processin can be done as with
BOUND.
.SH REBIND
Da DHCP client has rebound ta a freshly smoked up DHCP server n' shit.  This can be handled
as wit RENEW, except dat if tha IP address has chizzled, tha ARP
table should be cleared.
.SH REBOOT
Da DHCP client has successfully reacquired its oldschool address afta a
reboot.   This can be processed as wit BOUND.
.SH EXPIRE
Da DHCP client has failed ta renew its lease or acquire a freshly smoked up one,
and tha lease has expired. Y'all KNOW dat shit, muthafucka!   Da IP address must be relinquished, and
all related parametas should be deleted, as up in RENEW n' REBIND.
.SH FAIL
Da DHCP client has been unable ta contact any DHCP servers, n' any
leases dat done been tested aint proved ta be valid. Y'all KNOW dat shit, muthafucka!   The
parametas from tha last lease tested should be deconfigured. Y'all KNOW dat shit, muthafucka!   This
can be handled up in tha same way as EXPIRE.
.SH STOP
Da dhclient has been informed ta shut down gracefully, the
dhclient-script should unconfigure or shutdown tha intercourse as
appropriate.
.SH RELEASE
Da dhclient has been executed rockin tha -r flag, indicatin dat the
administrator wishes it ta release its lease(s).  dhclient-script should
unconfigure or shutdown tha intercourse.
.SH NBI
No-Broadcast-Interfaces...dhclient was unable ta find any intercourses
upon which it believed it should commence DHCP.  What dhclient-script
should do up in dis thang is entirely up ta tha implementor.
.SH TIMEOUT
Da DHCP client has been unable ta contact any DHCP servers.
But fuck dat shiznit yo, tha word on tha street is dat a oldschool lease has been identified, n' its parametas have
been passed up in as wit BOUND.   Da client configuration script should
test these parametas and, if it has reason ta believe they is valid,
should exit wit a value of zero.   If not, it should exit wit a
nonzero value.
.PP
Da usual way ta test a lease is ta set up tha network as wit REBIND
(since dis may be called ta test mo' than one lease) n' then ping
the first routa defined up in $routers.  If a response is received, the
lease must be valid fo' tha network ta which tha intercourse is
currently connected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time.   It would be mo' complete ta try ta pin all of
the routas listed up in $new_routers, as well as dem listed in
$new_static_routes yo, but current scripts do not do all dis bullshit.
.SH FILES
Each operatin system should generally have its own script file,
although tha script filez fo' similar operatin systems may be similar
or even identical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack.   Da script filez included up in Internet
Systems Consortium DHCP distribution step tha fuck up in tha distribution tree
under client/scripts, n' bear tha namez of tha operatin systems on
which they is intended ta work.
.SH BUGS
If mo' than one intercourse is bein used, there be a no obvious way to
avoid clashes between server-supplied configuration parametas - for
example, tha stock dhclient-script rewrites /etc/resolv.conf.   If
more than one intercourse is bein configured, /etc/resolv.conf will be
repeatedly initialized ta tha joints provided by one server, n' then
the other n' shit.   Assumin tha shiznit provided by both servers is
valid, dis shouldn't cause any real problems yo, but it could be
confusing.
.PP
Normally, if dhclient was compiled wit libcap-ng support,
dhclient drops most capabilitizzles immediately upon startup.
While mo' secure, dis pimped outly restricts tha additionizzle actions that
hooks up in dhclient-script can take. For example, any daemons that
dhclient-script starts or restarts will inherit tha restricted
capabilitizzles as well, which may interfere wit they erect operation.
Thus, the
.BI \-nc
option can be used ta prevent dhclient from droppin capabilities.
.SH SEE ALSO
dhclient(8), dhcpd(8), dhcrelay(8), dhclient.conf(5) and
dhclient.leases(5).
.SH AUTHOR
.B dhclient-script(8)
To learn mo' bout Internizzle Systems Consortium,
see
.B https://www.isc.org.
