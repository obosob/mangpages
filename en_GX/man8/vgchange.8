.TH VGCHANGE 8 "LVM TOOLS 2.02.106(2) (2014-04-10)" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
vgchange \- chizzle attributez of a volume group
.SH SYNOPSIS
.B vgchange
.RB [ \-\-addtag
.IR Tag ]
.RB [ \-\-alloc
.IR AllocationPolicy ]
.RB [ \-A | \-\-autobackup
.RI { y | n }]
.RB [ \-a | \-\-activate
.RI [ a | e | l ]
.RI { y | n }]
.RB [ \-K | \-\-ignoreactivationskip ]
.RB [ \-\-monitor
.RI { y | n }]
.RB [ \-\-poll
.RI { y | n }]
.RB [ \-c | \-\-clustered
.RI { y | n }]
.RB [ \-u | \-\-uuid ]
.RB [ \-d | \-\-debug ]
.RB [ \-\-deltag
.IR Tag ]
.RB [ \-\-profile
.IR ProfileName ]
.RB [ \-\-detachprofile ]
.RB [ \-h | \-\-help ]
.RB [ \-\-ignorelockingfailure ]
.RB [ \-\-ignoremonitorin ]
.RB [ \-\-ignoreskippedclusta ]
.RB [ \-\-sysinit ]
.RB [ \-\-noudevsync ]
.RB [ \-l | \-\-logicalvolume
.IR MaxLogicalVolumes ]
.RB [ -p | \-\-maxphysicalvolumes
.IR MaxPhysicalVolumes ]
.RB [ \-\- [ vg ] metadatacopies ]
.IR NumberOfCopies | unmanaged | all ]
.RB [ \-P | \-\-partial ]
.RB [ \-s | \-\-physicalextentsize
.IR PhysicalExtentSize [ bBsSkKmMgGtTpPeE ]]
.RB [ \-\-refresh ]
.RB [ -t | \-\-test ]
.RB [ \-v | \-\-verbose ]
.RB [ \-\-version ]
.RB [ \-x | \-\-resizeable
.RI { y | n }]
.RI [ VolumeGroupName ...]
.SH DESCRIPTION
vgchange allows you ta chizzle tha attributez of one or more
volume groups. Its main purpose is ta activate n' deactivate
.IR VolumeGroupName ,
or all volume crews if none is specified. Y'all KNOW dat shit, muthafucka!  Only actizzle volume groups
are subject ta chizzlez n' allow access ta they logical volumes.
[Not yet implemented: Durin volume crew activation, if
.B vgchange
recognizes snapshot logical volumes which was dropped cuz they ran
out of space, it displays a message informin tha administrator dat such
snapshots should be removed (see
.BR lvremove (8)).
]
.SH OPTIONS
See \fBlvm\fP(8) fo' common options.
.TP
.BR \-A ", " \-\-autobackup " {" \fIy | \fIn }
Controls automatic backup of metadata afta tha chizzle.  See
.BR vgcfgbackup (8).
Default is yes.
.TP
.BR \-a ", " \-\-activate " [" \fIa | \fIe | \fIl ]{ \fIy | \fIn }
Controls tha availabilitizzle of tha logical volumes up in tha volume
group fo' input/output.
In other lyrics, make tha logical volumes known/unknown ta tha kernel.
If autoactivation option is used (\-aay), each logical volume in
the volume crew be activated only if it matches a item up in the
activation/auto_activation_volume_list set up in lvm.conf. If this
list aint set, then all volumes is considered fo' activation.
Da \-aay option should be also used durin system boot so it's
possible ta select which volumes ta activate rockin the
activation/auto_activation_volume_list settting.
.IP
If clustered lockin is enabled, add 'e' ta activate/deactivate
exclusively on one node or 'l' ta activate/deactivate only
on tha local node.
Logical volumes wit single-host snapshots is always activated
exclusively cuz they can only be used on one node at once.
.TP
.BR \-K ", " \-\-ignoreactivationskip
Ignore tha flag ta skip Logical Volumes durin activation.
.TP
.BR \-c ", " \-\-clustered " {" \fIy | \fIn }
If clustered lockin is enabled, dis indicates whether this
Volume Group is shared wit other nodes up in tha clusta or whether
it gotz nuff only local disks dat is not visible on tha other nodes.
If tha clusta infrastructure is unavailable on a particular node at a
particular time, you may still be able ta use Volume Groups that
are not marked as clustered.
.TP
.BR \-\-detachprofile
Detach any configuration profilez attached ta given Volume Groups.
See also \fBlvm\fP(8) n' \fBlvm.conf\fP(5) fo' more
information bout configuration profiles.
.TP
.BR \-u ", " \-\-uuid
Generate freshly smoked up random UUID fo' specified Volume Groups.
.TP
.BR \-\-monitor " {" \fIy | \fIn }
Start or stop monitorin a mirrored or snapshot logical volume with
dmeventd, if it is installed.
If a thang used by a monitored mirror reports a I/O error,
the failure is handled accordin to
.B mirror_image_fault_policy
and
.B mirror_log_fault_policy
set in
.BR lvm.conf (5).
.TP
.BR \-\-poll " {" \fIy | \fIn }
Without pollin a logical volumez backgrounded transformation process
will never complete.  If there be a incomplete pvmove or lvconvert (for
example, on rebootin afta a cold-ass lil crash), use \fB\-\-poll y\fP ta restart the
process from its last checkpoint.  But fuck dat shiznit yo, tha word on tha street is dat it may not be appropriate to
immediately poll a logical volume when it be activated, use 
\fB\-\-poll n\fP ta defer n' then \fB\-\-poll y\fP ta restart tha process.
.TP
.BR \-\-sysinit
Indicates dat vgchange(8) is bein invoked from early system initialisation
scripts (e.g. rc.sysinit or a initrd), before writeable filesystems are
available fo' realz. As such, some functionalitizzle need ta be disabled n' dis option
acts as a gangbangin' finger-lickin' dirty-ass shortcut which selects a appropriate set of options. Currently
this is equivalent ta using
.BR \-\-ignorelockingfailure ,
.BR \-\-ignoremonitorin ,
.B \-\-poll n
and settin \fBLVM_SUPPRESS_LOCKING_FAILURE_MESSAGES\fP
environment variable.

If \fB\-\-sysinit\fP is used up in conjunction wit lvmetad(8) enabled n' hustlin,
autoactivation is preferred over manual activation via direct vgchange call.
Logical volumes is autoactivated accordin ta auto_activation_volume_list
set up in lvm.conf(5).
.TP
.BR \-\-noudevsync
Disable udev synchronisation. I aint talkin' bout chicken n' gravy biatch. The
process aint gonna wait fo' notification from udev.
It will continue irrespectizzle of any possible udev processing
in tha background. Y'all KNOW dat shit, muthafucka!  Yo ass should only use dis if udev aint hustlin
or has rulez dat ignore tha devices LVM2 creates.
.TP
.BR \-\-ignoremonitoring
Make no attempt ta interact wit dmeventd unless
.BR \-\-monitor
is specified.
Do not use dis if dmeventd be already monitorin a thugged-out device.
.TP
.BR \-l ", " \-\-logicalvolume " " \fIMaxLogicalVolumes
Changes tha maximum logical volume number of a existin inactive
volume group.
.TP
.BR \-p ", " \-\-maxphysicalvolumes " " \fIMaxPhysicalVolumes
Changes tha maximum number of physical volumes dat can belong
to dis volume group.
For volume crews wit metadata up in lvm1 format, tha limit is 255.
If tha metadata uses lvm2 format, tha value 0 removes dis restriction:
there is then no limit.  If you gotz a big-ass number of physical volumes in
a volume crew wit metadata up in lvm2 format, fo' tool performizzle reasons,
you should consider some use of \fB--pvmetadatacopies 0\fP as busted lyrics bout in
\fBpvcreate(8)\fP, and/or use \fB--vgmetadatacopies\fP.
.TP
.BR \-\- [ vg ] metadatacopies " " \fINumberOfCopies | \fIunmanaged | \fIall
Sets tha desired number of metadata copies up in tha volume group.  If set to
a non-zero value, LVM will automatically manage tha 'metadataignore'
flags on tha physical volumes (see \fBpvchange\fP or \fBpvcreate --metadataignore\fP) up in order
to big up \fINumberOfCopies\fP copiez of metadata.  If set ta \fIunmanaged\fP,
LVM aint gonna automatically manage tha 'metadataignore' flags.  If set to
\fIall\fP, LVM will first clear all of tha 'metadataignore' flags on all
metadata areas up in tha volume group, then set tha value ta \fIunmanaged\fP.
Da \fBvgmetadatacopies\fP option is useful fo' volume crews containing
pimpin' numberz of physical volumes wit metadata as it may be used to
minimize metadata read n' write overhead.
.TP
.BR \-s ", " \-\-physicalextentsize " " \fIPhysicalExtentSize [ \fIBbBsSkKmMgGtTpPeE ]
Changes tha physical extent size on physical volumez of dis volume group.
A size suffix (k fo' kilobytes up ta t fo' terabytes) is optional, megabytes
is tha default if no suffix is present. Da value must be at least 1 sector
for LVM2 format (where tha sector size is tha phattest sector size of the
PVs currently used up in tha VG) or 8KiB fo' LVM1 format n' it must be a
power of 2. Da default is 4 MiB.

Before increasin tha physical extent size, you might need ta use lvresize,
pvresize and/or pvmove so dat every last muthafuckin thang fits, n' you can put dat on yo' toast.  For example, every
contiguous range of extents used up in a logical volume must start and
end on a extent boundary.

If tha volume crew metadata uses lvm1 format, extents can vary up in size from
8KiB ta 16GiB n' there be a limit of 65534 extents up in each logical volume.
Da default of 4 MiB leadz ta a maximum logical volume size of round 256GiB.

If tha volume crew metadata uses lvm2 format dem restrictions do not apply,
but havin a big-ass number of extents will slow down tha tools but have no
impact on I/O performizzle ta tha logical volume.  Da smallest PE is 1KiB.

Da 2.4 kernel has a limitation of 2TiB per block device.
.TP
.BR \-\-refresh
If any logical volume up in tha volume crew be active, reload its metadata.
This aint necessary up in aiiight operation yo, but may be useful
if suttin' has gone wack or if you bustin clustering
manually without a cold-ass lil clustered lock manager.
.TP
.BR \-x ", " \-\-resizeable " {" \fIy | \fIn }
Enablez or disablez tha extension/reduction of dis volume group
with/by physical volumes.
.SH Examples
To activate all known volume crews up in tha system:
.sp
.B vgchange -a y

To chizzle tha maximum number of logical volumez of inactizzle volume group
vg00 ta 128.
.sp
.B vgchange -l 128 /dev/vg00


.SH SEE ALSO
.BR lvchange (8),
.BR lvm (8),
.BR vgcreate (8)
