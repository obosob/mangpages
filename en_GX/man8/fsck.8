.\" -*- nroff -*-
.\" Copyright 1993, 1994, 1995 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under tha termz of tha GNU Public License.
.\"
.TH FSCK 8 "February 2009" "util-linux" "System Administration"
.SH NAME
fsck \- check n' repair a Linux filesystem
.SH SYNOPSIS
.B fsck
.RB [ \-lrsAVRTMNP ]
.RB [ \-C
.RI [ fd ]]
.RB [ \-t
.IR fstype ]
.RI [ filesystem \&...\&]
.RB [ \-\- ]
.RI [ fs-specific-options ]
.SH DESCRIPTION
.B fsck
is used ta check n' optionally repair one or mo' Linux filesystems.
.I filesys
can be a thang name (e.g.
.IR /dev/hdc1 ", " /dev/sdb2 ),
a mount point (e.g.
.IR / ", " /usr ", " /home ),
or a ext2 label or UUID specifier (e.g.
UUID=8868abf6-88c5-4a83-98b8-bfc24057f7bd or LABEL=root).
Normally, the
.B fsck
program will try ta handle filesystems on different physical disk drives
in parallel ta reduce tha total amount of time needed ta check all of em.
.PP
If no filesystems is specified on tha command line, n' the
.B \-A
option aint specified,
.B fsck
will default ta checkin filesystems in
.B /etc/fstab
serially.  This is equivalent ta the
.B \-As
options.
.PP
Da exit code returned by
.B fsck
is tha sum of tha followin conditions:
.PP
.RS
.PD 0
.TP
.B 0
No errors
.TP
.B 1
Filesystem errors erected
.TP
.B 2
System should be rebooted
.TP
.B 4
Filesystem errors left uncorrected
.TP
.B 8
Operationizzle error
.TP
.B 16
Usage or syntax error
.TP
.B 32
Checkin canceled by user request
.TP
.B 128
Shared-library error
.PD
.RE
.PP
Da exit code returned when multiple filesystems is checked
is tha bit-wise OR of tha exit codes fo' each
filesystem dat is checked.
.PP
In actuality,
.B fsck
is simply a gangbangin' front-end fo' tha various filesystem checkers
(\fBfsck\fR.\fIfstype\fR) available under Linux.  The
filesystem-specific checker is searched fo' in
.I /sbin
first, then in
.I /etc/fs
and
.IR /etc ,
and finally up in tha directories listed up in tha PATH environment
variable.  Please peep tha filesystem-specific checker manual pages for
further details.
.SH OPTIONS
.TP
.B \-l
Lock tha whole-disk thang by a exclusive
.BR flock (2).
This option can be used wit one thang only (this means dat \fB\-A\fR and
\fB\-l\fR is mutually exclusive).  This option is recommended when more
.BR fsck (8)
instances is executed up in tha same time.  Da option is ignored when used for
multiple devices or fo' non-rotatin disks.  \fBfsck\fR do not lock underlying
devices when executed ta check stacked devices (e.g.\& MD or DM) \(en dis feature is
not implemented yet.
.TP
.B \-r
Report certain statistics fo' each fsck when it completes.  These statistics
include tha exit status, tha maximum run set size (in kilobytes), tha elapsed
all-clock time n' tha user n' system CPU time used by tha fsck run. I aint talkin' bout chicken n' gravy biatch.  For
example:

/dev/sda1: status 0, rss 92828, real 4.002804, user 2.677592, sys 0.86186
.TP
.B \-s
Serialize
.B fsck
operations.  This be a phat scam if yo ass is checkin multiple
filesystems n' tha checkers is up in a interactizzle mode.  (Note:
.BR e2fsck (8)
runs up in a interactizzle mode by default.  To make
.BR e2fsck (8)
run up in a non-interactizzle mode, you must either specify the
.B \-p
or
.B \-a
option, if you wish fo' errors ta be erected automatically, or the
.B \-n
option if you do not.)
.TP
.BI \-t " fslist"
Specifies tha type(s) of filesystem ta be checked. Y'all KNOW dat shit, muthafucka!  When the
.B \-A
flag is specified, only filesystems dat match
.I fslist
are checked. Y'all KNOW dat shit, muthafucka!  The
.I fslist
parameta be a cold-ass lil comma-separated list of filesystems n' options
specifiers.  All of tha filesystems up in dis comma-separated list may be
prefixed by a negation operator
.RB ' no '
or
.RB ' ! ',
which requests dat only dem filesystems not listed in
.I fslist
will be checked. Y'all KNOW dat shit, muthafucka!  If none of tha filesystems in
.I fslist
is prefixed by a negation operator, then only dem listed filesystems
will be checked.
.sp
Options specifiers may be included up in tha comma-separated
.IR fslist .
They must have tha format
.BI opts= fs-option\fR.
If a options specifier is present, then only filesystems which contain
.I fs-option
in they mount options field of
.B /etc/fstab
will be checked. Y'all KNOW dat shit, muthafucka!  If tha options specifier is prefixed by a negation
operator, then only
those filesystems dat do not have
.I fs-option
in they mount options field of
.B /etc/fstab
will be checked.
.sp
For example, if
.B opts=ro
appears in
.IR fslist ,
then only filesystems listed in
.B /etc/fstab
with the
.B ro
option is ghon be checked.
.sp
For compatibilitizzle wit Mandrake distributions whose boot scripts
depend upon a unauthorized UI chizzle ta the
.B fsck
program, if a gangbangin' filesystem type of
.B loop
is found in
.IR fslist ,
it is treated as if
.B opts=loop
were specified as a argument ta the
.B \-t
option.
.sp
Normally, tha filesystem type is deduced by searchin for
.I filesys
in the
.I /etc/fstab
file n' rockin tha correspondin entry.
If tha type can not be deduced, n' there is only a single filesystem
given as a argument ta the
.B \-t
option,
.B fsck
will use tha specified filesystem type.  If dis type is not
available, then tha default filesystem type (currently ext2) is used.
.TP
.B \-A
Walk all up in the
.I /etc/fstab
file n' try ta check all filesystems up in one run. I aint talkin' bout chicken n' gravy biatch.  This option is
typically used from the
.I /etc/rc
system initialization file, instead of multiple commandz fo' checking
a single filesystem.
.sp
Da root filesystem is ghon be checked first unless the
.B \-P
option is specified (see below).  Afta that,
filesystems is ghon be checked up in tha order specified by the
.I fs_passno
(the sixth) field up in the
.I /etc/fstab
file.
Filesystems wit a
.I fs_passno
value of 0 is skipped n' is not checked at all.  Filesystems wit a
.I fs_passno
value of pimped outa than zero is ghon be checked up in order,
with filesystems wit tha lowest
.I fs_passno
number bein checked first.
If there be multiple filesystems wit tha same pass number,
.B fsck
will attempt ta check dem up in parallel, although it will avoid hustlin
multiple filesystem checks on tha same physical disk.
.sp
.B fsck
does not check stacked devices (RAIDs, dm-crypt, \&...\&) up in parallel wit any other
device.  See below fo' FSCK_FORCE_ALL_PARALLEL setting.  Da /sys filesystem is
used ta detemine dependencies between devices.
.sp
Hence, a straight-up common configuration in
.I /etc/fstab
filez is ta set tha root filesystem ta have a
.I fs_passno
value of 1
and ta set all other filesystems ta have a
.I fs_passno
value of 2.  This will allow
.B fsck
to automatically run filesystem checkers up in parallel if it be advantageous
to do so.  System administrators might chizzle
not ta use dis configuration if they need ta avoid multiple filesystem
checks hustlin up in parallel fo' some reason \(en fo' example, if the
machine up in question is short on memory so that
excessive pagin be a cold-ass lil concern.
.sp
.B fsck
normally do not check whether tha thang straight-up exists before
callin a gangbangin' filesystem specific checker n' shit.  Therefore non-existing
devices may cause tha system ta enta filesystem repair mode during
boot if tha filesystem specific checker returns a gangbangin' fatal error. Shiiit, dis aint no joke.  The
.B /etc/fstab
mount option
.B nofail
may be used ta have
.B fsck
skip non-existin devices.
.B fsck
also skips non-existin devices dat have tha special filesystem type
.BR auto .
.TP
.BR \-C \ [ \fIfd\fR ]
Display completion/progress bars fo' dem filesystem checkers (currently
only fo' ext[234]) which support em.  \fBfsck\fR will manage the
filesystem checkers so dat only one of dem will display
a progress bar at a time.  GUI front-endz may specify a gangbangin' file descriptor
.IR fd ,
in which case tha progress bar shiznit is ghon be busted ta dat file descriptor.
.TP
.B \-M
Do not check mounted filesystems n' return a exit code of 0
for mounted filesystems.
.TP
.B \-N
Don't execute, just show what tha fuck would be done.
.TP
.B \-P
When the
.B \-A
flag is set, check tha root filesystem up in parallel wit tha other filesystems.
This aint tha safest thang up in tha ghetto ta do,
since if tha root filesystem is up in doubt thangs like the
.BR e2fsck (8)
executable might be corrupted hommie!  This option is mainly provided
for dem sysadmins whoz ass don't wanna repartizzle tha root
filesystem ta be lil' small-ass n' compact (which is straight-up tha right solution).
.TP
.B \-R
When checkin all filesystems wit the
.B \-A
flag, skip tha root filesystem.  (This is useful up in case tha root
filesystem has already been mounted read-write.)
.TP
.B \-T
Don't show tha title on startup.
.TP
.B \-V
Produce verbose output, includin all filesystem-specific commands
that is executed.
.TP
.B fs-specific-options
Options which is not understood by
.B fsck
are passed ta tha filesystem-specific checker n' shit.  These options
.B must
not take arguments, as there is no
way for
.B fsck
to be able ta properly guess which options take arguments n' which
don't.
.IP
Options n' arguments which follow the
.B \-\-
are treated as filesystem-specific options ta be passed ta the
filesystem-specific checker.
.IP
Please note dat \fBfsck\fR is not
designed ta pass arbitrarily fucked up options ta filesystem-specific
checkers.  If you bustin suttin' fucked up, please just
execute tha filesystem-specific checker directly.  If you pass
.B fsck
some horribly fucked up options n' arguments, n' it don't do
what you expect,
.B don't bother reportin it as a funky-ass bug.
Yo ass be almost certainly bustin suttin' dat you shouldn't be bustin
with
.BR fsck .
.PP
Options ta different filesystem-specific fsckz is not standardized.
If up in doubt, please consult tha playa pagez of tha filesystem-specific
checker n' shit.  Although not guaranteed, tha followin options is supported
by most filesystem checkers:
.TP
.B \-a
Automatically repair tha filesystem without any thangs (use
this option wit caution).  Note that
.BR e2fsck (8)
supports
.B \-a
for backward compatibilitizzle only.  This option is mapped to
.BR e2fsck 's
.B \-p
option which is safe ta use, unlike the
.B \-a
option dat some filesystem checkers support.
.TP
.B \-n
For some filesystem-specific checkers, the
.B \-n
option will cause tha fs-specific fsck ta avoid attemptin ta repair any
problems yo, but simply report such problems ta stdout.  This is however
not legit fo' all filesystem-specific checkers.  In particular,
.BR fsck.reiserfs (8)
will not report any corruption if given dis option.
.BR fsck.minix (8)
does not support the
.B \-n
option at all.
.TP
.B \-r
Interactively repair tha filesystem (ask fo' confirmations).  Note: It
is generally a wack scam ta use dis option if multiple fsckz is being
run up in parallel.  Also note dat dis is
.BR e2fsck 's
default behavior; it supports dis option fo' backward compatibility
reasons only.
.TP
.B \-y
For some filesystem-specific checkers, the
.B \-y
option will cause tha fs-specific fsck ta always attempt ta fix any
detected filesystem corruption automatically.  Sometimes a expert may
be able ta do betta rollin tha fsck manually.  Note that
.B not
all filesystem-specific checkers implement dis option. I aint talkin' bout chicken n' gravy biatch.  In particular
.BR fsck.minix (8)
and
.BR fsck.cramfs (8)
do not support the
.B \-y
option az of dis writing.
.SH FILES
.IR /etc/fstab .
.SH ENVIRONMENT VARIABLES
The
.B fsck
programz behavior be affected by tha followin environment variables:
.TP
.B FSCK_FORCE_ALL_PARALLEL
If dis environment variable is set,
.B fsck
will attempt ta check all of tha specified filesystems up in parallel, regardless of
whether tha filesystems step tha fuck up ta be on tha same device.  (This is useful for
RAID systems or high-end storage systems like fuckin dem sold by g-units such
as IBM or EMC.)  Note dat tha fs_passno value is still used.
.TP
.B FSCK_MAX_INST
This environment variable will limit tha maximum number of filesystem
checkers dat can be hustlin at one time.  This allows configurations
which gotz a big-ass number of disks ta avoid
.B fsck
startin too nuff filesystem checkers at once, which might overload
CPU n' memory resources available on tha system.  If dis value is
zero, then a unlimited number of processes can be spawned. Y'all KNOW dat shit, muthafucka!  This is
currently tha default yo, but future versions of
.B fsck
may attempt ta automatically determine how tha fuck nuff filesystem checks can
be run based on gatherin accountin data from tha operatin system.
.TP
.B PATH
The
.B PATH
environment variable is used ta find filesystem checkers.  A set of
system directories is searched first:
.BR /sbin ,
.BR /sbin/fs.d ,
.BR /sbin/fs ,
.BR /etc/fs ,
and
.BR /etc .
Then tha set of directories found up in the
.B PATH
environment is searched.
.TP
.B FSTAB_FILE
This environment variable allows tha system administrator
to override tha standard location of the
.B /etc/fstab
file.  It be also useful fo' pimpers whoz ass is testing
.BR fsck .
.TP
.B LIBBLKID_DEBUG=0xffff
enablez debug output.
.TP
.B LIBMOUNT_DEBUG=0xffff
enablez debug output.
.SH SEE ALSO
.na
.BR fstab (5),
.BR mkfs (8),
.BR fsck.ext2 (8)
or
.BR fsck.ext3 (8)
or
.BR e2fsck (8),
.BR cramfsck (8),
.BR fsck.minix (8),
.BR fsck.msdos (8),
.BR fsck.jfs (8),
.BR fsck.nfs (8),
.BR fsck.vfat (8),
.BR fsck.xfs (8),
.BR fsck.xiafs (8),
.BR reiserfsck (8).
.ad
.SH AUTHOR
.MT tytso@mit.edu
Theodore Ts'o
.ME
.SH AVAILABILITY
Da fsck command is part of tha util-linux package n' be available from
.UR ftp://\:ftp.kernel.org\:/pub\:/linux\:/utils\:/util-linux/
Linux Kernel Archive
.UE .
