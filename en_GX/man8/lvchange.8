.TH LVCHANGE 8 "LVM TOOLS 2.02.106(2) (2014-04-10)" "Sistina Software UK" \" -*- nroff -*-
.SH NAME
lvchange \- chizzle attributez of a logical volume
.SH SYNOPSIS
.B lvchange
.RB [ \-\-addtag
.IR Tag ]
.RB [ \-A | \-\-autobackup
.RI { y | n }]
.RB [ \-a | \-\-activate
.RI [ a | e | l ]{ y | n }]
.RB [ \-k | \-\-setactivationskip { y | n } ]
.RB [ \-K | \-\-ignoreactivationskip ]
.RB [ \-\-alloc
.IR AllocationPolicy ]
.RB [ \-C | \-\-contiguous
.RI { y | n }]
.RB [ \-d | \-\-debug ]
.RB [ \-\-deltag
.IR Tag ]
.RB [ \-\-profile
.IR ProfileName ]
.RB [ \-\-detachprofile ]
.RB [ \-\-discards
.RI { ignore | nopassdown | passdown }]
.RB [ \-\-resync ]
.RB [ \-h | \-? | \-\-help ]
.RB [ \-\-ignorelockingfailure ]
.RB [ \-\-ignoremonitorin ]
.RB [ \-\-ignoreskippedclusta ]
.RB [ \-\-monitor
.RI { y | n }]
.RB [ \-\-poll
.RI { y | n }]
.RB [ \-\-[raid]maxrecoveryrate
.IR Rate ]
.RB [ \-\-[raid]minrecoveryrate
.IR Rate ]
.RB [ \-\-[raid]syncaction
.RI { check | repair }]
.RB [ \-\-[raid]writebehind
.IR IOCount ]
.RB [ \-\-[raid]writemostly
.IR PhysicalVolume [ : { t | n | y }]]
.RB [ \-\-sysinit ]
.RB [ \-\-noudevsync ]
.RB [ \-M | \-\-persistent
.RI { y | n }]
.RB [ \-\-minor
.IR minor ]
.RB [ \-P | \-\-partial ]
.RB [ \-p | \-\-permission
.RI { r | rw }]
.RB [ \-r | \-\-readahead
.RI { ReadAheadSectors | auto | none }]
.RB [ \-\-refresh ]
.RB [ \-t | \-\-test ]
.RB [ \-v | \-\-verbose ]
.RB [ \-Z | \-\-zero
.RI { y | n }]
.I LogicalVolumePath
.RI [ LogicalVolumePath ...]
.SH DESCRIPTION
lvchange allows you ta chizzle tha attributez of a logical volume
includin makin dem known ta tha kernel locked n loaded fo' use.
.SH OPTIONS
See \fBlvm\fP(8) fo' common options.
.TP
.BR \-a ", " \-\-activate " [" \fIa | \fIe | \fIl ]{ \fIy | \fIn }
Controls tha availabilitizzle of tha logical volumes fo' use.
Communicates wit tha kernel device-mapper driver via
libdevmapper ta activate (\-ay) or deactivate (\-an) the
logical volumes. If autoactivation option is used (\-aay),
the logical volume be activated only if it matches a item in
the activation/auto_activation_volume_list set up in lvm.conf.
If dis list aint set, then all volumes is considered for
activation. I aint talkin' bout chicken n' gravy biatch. Da \-aay option should be also used durin system
boot so itz possible ta select which volumes ta activate using
the activation/auto_activation_volume_list setting.
.IP
If clustered lockin is enabled, -aey will activate exclusively
on one node n' -aly will activate only on tha local node.
To deactivate only on tha local node use -aln.
Logical volumes wit single-host snapshots is always activated
exclusively cuz they can only be used on one node at once.
.TP
.BR \-k ", " \-\-setactivationskip " {" \fIy | \fIn }
Controls  whether Logical Volumes is persistently flagged ta be
skipped durin activation. I aint talkin' bout chicken n' gravy biatch. By default, thin snapshot volumes are
flagged fo' activation skip.  To activate such volumes,
an extra \fB\-K/\-\-ignoreactivationskip\fP option must be used.
Da flag aint applied durin deactivation. I aint talkin' bout chicken n' gravy biatch. To peep whether
the flag be attached, use \fBlvs\fP command where tha state
of tha flag is reported within \fBlv_attr\fP bits.
.TP
.BR \-K ", " \-\-ignoreactivationskip
Ignore tha flag ta skip Logical Volumes durin activation.
.TP
.BR \-C ", " \-\-contiguous " {" \fIy | \fIn }
Tries ta set or reset tha contiguous allocation policy for
logical volumes. It aint nuthin but only possible ta chizzle a non-contiguous
logical volumez allocation policy ta contiguous, if all of the
allocated physical extents is already contiguous.
.TP
.BR \-\-detachprofile
Detach any configuration profilez attached ta given Logical Volumes.
See also \fBlvm\fP(8) n' \fBlvm.conf\fP(5) fo' more
information bout configuration profiles.
.TP
.BR \-\-discardz " {" \fIignore | \fInopassdown | \fIpassdown }
Set dis ta \fIignore\fP ta ignore any discardz received by a
thin pool Logical Volume.  Set ta \fInopassdown\fP ta process such
discardz within tha thin pool itself n' allow tha no-longer-needed
extents ta be overwritten by freshly smoked up data.  Set ta \fIpassdown\fP (the
default) ta process dem both within tha thin pool itself n' ta 
pass dem down tha underlyin device.
.TP
.B \-\-resync
Forces tha complete resynchronization of a mirror. Shiiit, dis aint no joke.  In normal
circumstances you should not need dis option cuz synchronization
happens automatically.  Data is read from tha primary mirror device
and copied ta tha others, so dis can take a cold-ass lil considerable amount of
time - n' durin dis time yo ass is without a cold-ass lil complete redundant copy
of yo' data.
.TP
.B \-\-minor \fIminor
Set tha minor number.
.TP
.BR \-\-monitor " {" \fIy | \fIn }
Start or stop monitorin a mirrored or snapshot logical volume with
dmeventd, if it is installed.
If a thang used by a monitored mirror reports a I/O error,
the failure is handled accordin to
\fBmirror_image_fault_policy\fP n' \fBmirror_log_fault_policy\fP
set up in \fBlvm.conf\fP.
.TP
.BR \-\-poll " {" \fIy | \fIn }
Without pollin a logical volumez backgrounded transformation process
will never complete.  If there be a incomplete pvmove or lvconvert (for
example, on rebootin afta a cold-ass lil crash), use \fB\-\-poll y\fP ta restart the
process from its last checkpoint.  But fuck dat shiznit yo, tha word on tha street is dat it may not be appropriate to
immediately poll a logical volume when it be activated, use
\fB\-\-poll n\fP ta defer n' then \fB\-\-poll y\fP ta restart tha process.
.TP
.IR \fB\-\-[raid]maxrecoveryrate " " \fIRate [ bBsSkKmMgG ]
Sets tha maximum recovery rate fo' a RAID logical volume.  \fIRate\fP
is specified as a amount per second fo' each thang up in tha array.
If no suffix is given, then kiB/sec/device be assumed. Y'all KNOW dat shit, muthafucka!  Settin the
recovery rate ta 0 means it is ghon be unbounded.
.TP
.IR \fB\-\-[raid]minrecoveryrate " " \fIRate [ bBsSkKmMgG ]
Sets tha minimum recovery rate fo' a RAID logical volume.  \fIRate\fP
is specified as a amount per second fo' each thang up in tha array.
If no suffix is given, then kiB/sec/device be assumed. Y'all KNOW dat shit, muthafucka!  Settin the
recovery rate ta 0 means it is ghon be unbounded.
.TP
.BR \-\-[raid]syncaction " {" \fIcheck | \fIrepair }
This argument is used ta initiate various RAID synchronization operations.
Da \fIcheck\fP n' \fIrepair\fP options provide a way ta check the
integritizzle of a RAID logical volume (often referred ta as "scrubbing").
These options cause tha RAID logical volume to
read all of tha data n' paritizzle blocks up in tha array n' check fo' any
discrepancies (e.g. mismatches between mirrors or incorrect paritizzle joints).
If \fIcheck\fP is used, tha discrepancies is ghon be counted but not repaired.
If \fIrepair\fP is used, tha discrepancies is ghon be erected as they are
encountered. Y'all KNOW dat shit, muthafucka!  Da 'lvs' command can be used ta show tha number of
discrepancies found or repaired.
.TP
.BR \-\-[raid]writebehind " " \fIIOCount
Specify tha maximum number of outstandin writes dat is allowed to
devices up in a RAID1 logical volume dat is marked as \fIwrite-mostly\fP.
Once dis value is exceeded, writes become synchronous (i.e. all writes
to tha constituent devices must complete before tha array signals the
write has completed).  Settin tha value ta zero clears tha preference
and allows tha system ta chizzle tha value arbitrarily.
.TP
.IR \fB\-\-[raid]writemostly " " PhysicalVolume [ : { t | y | n }]
Mark a thang up in a RAID1 logical volume as \fIwrite-mostly\fP.  All reads
to these drives is ghon be avoided unless straight-up necessary.  This keeps
the number of I/Os ta tha drive ta a minimum.  Da default behavior is to
set tha write-mostly attribute fo' tha specified physical volume up in the
logical volume.  It be possible ta also remove tha write-mostly flag by
appendin a ":n" ta tha physical volume or ta toggle tha value by specifying
":t".  Da \fI--writemostly\fP argument can be specified mo' than one time
in a single command; makin it possible ta toggle tha write-mostly attributes
for all tha physical volumes up in a logical volume at once.
.TP
.B \-\-sysinit
Indicates dat \fBlvchange\fP(8) is bein invoked from early system
initialisation scripts (e.g. rc.sysinit or a initrd),
before writeable filesystems is available fo' realz. As such,
some functionalitizzle need ta be disabled n' dis option
acts as a gangbangin' finger-lickin' dirty-ass shortcut which selects a appropriate set of options. Currently
this is equivalent ta rockin  \fB\-\-ignorelockingfailure\fP,
\fB\-\-ignoremonitoring\fP, \fB\-\-poll n\fP n' setting
\fBLVM_SUPPRESS_LOCKING_FAILURE_MESSAGES\fP
environment variable.

If \fB\-\-sysinit\fP is used up in conjunction wit lvmetad(8) enabled n' hustlin,
autoactivation is preferred over manual activation via direct lvchange call.
Logical volumes is autoactivated accordin ta auto_activation_volume_list
set up in lvm.conf(5).
.TP
.B \-\-noudevsync
Disable udev synchronisation. I aint talkin' bout chicken n' gravy biatch. The
process aint gonna wait fo' notification from udev.
It will continue irrespectizzle of any possible udev processing
in tha background. Y'all KNOW dat shit, muthafucka!  Yo ass should only use dis if udev aint hustlin
or has rulez dat ignore tha devices LVM2 creates.
.TP
.B \-\-ignoremonitoring
Make no attempt ta interact wit dmeventd unless \fB\-\-monitor\fP
is specified.
Do not use dis if dmeventd be already monitorin a thugged-out device.
.TP
.BR \-M ", " \-\-persistent " {" \fIy | \fIn }
Set ta y ta make tha minor number specified persistent.
.TP
.BR \-p ", " \-\-permission " {" \fIr | \fIrw }
Change access permission ta read-only or read/write.
.TP
.BR \-r ", " \-\-readahead " {" \fIReadAheadSectors | \fIauto | \fInone }
Set read ahead sector count of dis logical volume.
For volume crews wit metadata up in lvm1 format, dis must
be a value between 2 n' 120 sectors.
Da default value is "auto" which allows tha kernel ta chizzle
a suitable value automatically.
"None" is equivalent ta specifyin zero.
.TP
.B \-\-refresh
If tha logical volume be active, reload its metadata.
This aint necessary up in aiiight operation yo, but may be useful
if suttin' has gone wack or if you bustin clustering
manually without a cold-ass lil clustered lock manager.
.TP
.BR \-Z ", " \-\-zero " {" \fIy | \fIn }
Set zeroin mode fo' thin pool. Note: already provisioned blocks from pool
in non-zero mode is not cleared up in unwritten parts when settin zero to
\fIy\fP.
.SH Examples
Changes tha permission on volume lvol1 up in volume crew vg00 ta be read-only:
.sp
.B lvchange -pr vg00/lvol1
.SH SEE ALSO
.BR lvm (8),
.BR lvcreate (8),
.BR vgchange (8)
