.\" XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.\" DO NOT EDIT! Generated from XML source.
.\" XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "HTCACHECLEAN" 8 "2010-11-20" "Apache HTTP Server" "htcacheclean"

.SH NAME
htcacheclean \- Clean up tha disk cache

.SH "SYNOPSIS"
 
.PP
\fBhtcacheclean\fR [ -\fBD\fR ] [ -\fBv\fR ] [ -\fBt\fR ] [ -\fBr\fR ] [ -\fBn\fR ] [ -\fBR\fR\fIround\fR ] -\fBp\fR\fIpath\fR [-\fBl\fR\fIlimit\fR| -\fBL\fR\fIlimit\fR]
 
.PP
\fBhtcacheclean\fR [ -\fBn\fR ] [ -\fBt\fR ] [ -\fBi\fR ] [ -\fBP\fR\fIpidfile\fR ] [ -\fBR\fR\fIround\fR ] -\fBd\fR\fIinterval\fR -\fBp\fR\fIpath\fR [-\fBl\fR\fIlimit\fR| -\fBL\fR\fIlimit\fR]
 
.PP
\fBhtcacheclean\fR [ -\fBv\fR ] [ -\fBR\fR\fIround\fR ] -\fBp\fR\fIpath\fR [ -\fBa\fR ] [ -\fBA\fR ]
 
.PP
\fBhtcacheclean\fR [ -\fBD\fR ] [ -\fBv\fR ] [ -\fBt\fR ] [ -\fBR\fR\fIround\fR ] -\fBp\fR\fIpath\fR \fIurl\fR
 

.SH "SUMMARY"
 
.PP
htcacheclean is used ta keep tha size of mod_cache_diskz storage within a given size limit, or limit on inodes up in use\&. This tool can run either manually or up in daemon mode\&. When hustlin up in daemon mode, it chills up in tha background n' checks tha cache directory at regular intervals fo' cached content ta be removed\&. Yo ass can stop tha daemon cleanly by bustin  it a TERM or INT signal\&. When run manually, a once off check of tha cache directory is made fo' cached content ta be removed\&. If one or mo' URLs is specified, each URL is ghon be deleted from tha cache, if present\&.
 

.SH "OPTIONS"
 
 
.TP
-d\fIinterval\fR
Daemonize n' repeat cache cleanin every last muthafuckin \fIinterval\fR minutes\&. This option is mutually exclusive wit tha -D, -v n' -r options\&. To shutdown tha daemon cleanly, just bust it a SIGTERM or SIGINT\&.  
.TP
-D
Do a thugged-out dry run n' don't delete anything\&. This option is mutually exclusive wit tha -d option\&. When bustin a thugged-out dry run n' deletin directories wit -t, tha inodes reported deleted up in tha stats cannot take tha fuck into account tha directories deleted, n' is ghon be marked as a estimate\&.  
.TP
-v
Be verbose n' print statistics\&. This option is mutually exclusive wit tha -d option\&.  
.TP
-r
Clean thoroughly\&. This assumes dat tha Apache wizzy server aint hustlin (otherwise you may git garbage up in tha cache)\&. This option is mutually exclusive wit tha -d option n' implies tha -t option\&.  
.TP
-n
Be sick\&. This causes slower processin up in favour of other processes\&. htcacheclean will chill from time ta time so dat (a) tha disk IO is ghon be delayed n' (b) tha kernel can schedule other processes up in tha meantime\&.  
.TP
-t
Delete all empty directories\&. By default only cache filez is removed, however wit some configurations tha big-ass number of directories pimped may require attention\&. If yo' configuration requires a straight-up big-ass number of directories, ta tha point dat inode or file allocation table exhaustion may become a issue, use of dis option be advised\&.  
.TP
-p\fIpath\fR
Specify \fIpath\fR as tha root directory of tha disk cache\&. This should be tha same value as specified wit tha CacheRoot directive\&.  
.TP
-P\fIpidfile\fR
Specify \fIpidfile\fR as tha name of tha file ta write tha process ID ta when daemonized\&.  
.TP
-R\fIround\fR
Specify \fIround\fR as tha amount ta round sizes up to, ta compensate fo' disk block sizes\&. Right back up in yo muthafuckin ass. Set ta tha block size of tha cache partition\&.  
.TP
-l\fIlimit\fR
Specify \fIlimit\fR as tha total disk cache size limit\&. Da value is expressed up in bytes by default (or attachin B ta tha number)\& fo' realz. Attach K fo' Kbytes or M fo' MBytes\&.  
.TP
-L\fIlimit\fR
Specify \fIlimit\fR as tha total disk cache inode limit\&.  
.TP
-i
Be intelligent n' run only when there was a modification of tha disk cache\&. This option is only possible together wit tha -d option\&.  
.TP
-a
List tha URLs currently stored up in tha cache\&. Variantz of tha same URL is ghon be listed once fo' each variant\&.  
.TP
-A
List tha URLs currently stored up in tha cache, along wit they attributes up in tha followin order: url, header size, body size, status, entitizzle version, date, expiry, request time, response time, body present, head request\&.  
 
.SH "DELETING A SPECIFIC URL"
 
.PP
If htcacheclean is passed one or mo' URLs, each URL is ghon be deleted from tha cache\&. If multiple variantz of a URL exists, all variants would be deleted\&.
 
.PP
When a reverse proxied URL is ta be deleted, tha effectizzle URL is constructed from tha \fBHost\fR header, tha \fBport\fR, tha \fBpath\fR n' tha \fBquery\fR\&. Note tha '?' up in tha URL must always be specified explicitly, whether a query strang is present or not\&. For example, a attempt ta delete tha path \fB/\fR from tha server \fBlocalhost\fR, tha URL ta delete would be \fBhttp://localhost:80/?\fR\&.
 
.SH "LISTING URLS IN THE CACHE"
 
.PP
By passin tha -a or -A options ta htcacheclean, tha URLs within tha cache is ghon be listed as they is found, one URL per line\&. Da -A option dumps tha full cache entry afta tha URL, wit fieldz up in tha followin order:
 
 
.TP
url
Da URL of tha entry\&. 
.TP
header size
Da size of tha header up in bytes\&. 
.TP
body size
Da size of tha body up in bytes\&. 
.TP
status
Statuz of tha cached response\&. 
.TP
entitizzle version
Da number of times dis entry has been revalidated without bein deleted\&. 
.TP
date
Date of tha response\&. 
.TP
expiry
Expiry date of tha response\&. 
.TP
request time
Time of tha start of tha request\&. 
.TP
response time
Time of tha end of tha request\&. 
.TP
body present
If 0, no body is stored wit dis request, 1 otherwise\&. 
.TP
head request
If 1, tha entry gotz nuff a cold-ass lil cached HEAD request wit no body, 0 otherwise\&. 
 
.SH "EXIT STATUS"
 
.PP
htcacheclean returns a zero status ("true") if all operations was successful, 1 otherwise\&. If a URL is specified, n' tha URL was cached n' successfully removed, 0 is returned, 2 otherwise\&. If a error occurred durin URL removal, 1 is returned\&.
 
