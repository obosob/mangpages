.\"
.\" Copyright (c) 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997
.\"	Da Regentz of tha Universitizzle of California.  All muthafuckin rights reserved.
.\" All muthafuckin rights reserved.
.\"
.\" Redistribution n' use up in source n' binary forms, wit or without
.\" modification, is permitted provided that: (1) source code distributions
.\" retain tha above copyright notice n' dis paragraph up in its entirety, (2)
.\" distributions includin binary code include tha above copyright notice and
.\" dis paragraph up in its entirety up in tha documentation or other shit
.\" provided wit tha distribution, n' (3) all advertisin shiznit mentioning
.\" features or use of dis software display tha followin acknowledgement:
.\" ``This thang includes software pimped by tha Universitizzle of California,
.\" Lawrence Berkeley Laboratory n' its contributors.'' Neither tha name of
.\" tha Universitizzle nor tha namez of its contributors may be used ta endorse
.\" or promote shizzle derived from dis software without specific prior
.\" freestyled permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.TH PCAP-TSTAMP 7 "22 August 2010"
.SH NAME
pcap-tstamp \- packet time stamps up in libpcap
.SH DESCRIPTION
When capturin traffic, each packet is given a time stamp representing,
for incomin packets, tha arrival time of tha packet and, fo' outgoing
packets, tha transmission time of tha packet.  This time be an
approximation of tha arrival or transmission time.  If it is supplied by
the operatin system hustlin on tha host on which tha capture is being
done, there be nuff muthafuckin reasons why it might not precisely represent the
arrival or transmission time:
.IP
if tha time stamp be applied ta tha packet when tha networkin stack
receives tha packet, tha networkin stack might not peep tha packet until
an interrupt is served up fo' tha packet or a timer event causes the
networkin thang driver ta poll fo' packets, n' tha time stamp might
not be applied until tha packet has had some processin done by other
code up in tha networkin stack, so there might be a thugged-out dope delay
between tha time when tha last bit of tha packet is received by the
capture thang n' when tha networkin stack time-stamps tha packet;
.IP
the timer used ta generate tha time stamps might have low resolution,
for example, it might be a timer updated once per host operatin system
timer tick, wit tha host operatin system timer tickin once every last muthafuckin few
milliseconds;
.IP
a high-resolution timer might bust a cold-ass lil counta dat runs at a rate
dependent on tha processor clock speed, n' dat clock speed might be
adjusted upwardz or downwardz over time n' tha timer might not be able
to compensate fo' all dem adjustments;
.IP
the host operatin systemz clock might be adjusted over time ta match a
time standard ta which tha host is bein synchronized, which might be
done by temporarily slowin down or speedin up tha clock or by makin a
single adjustment;
.IP
different CPU cores on a multi-core or multi-processor system might be
runnin at different speeds, or might not have time countas all
synchronized, so packets time-stamped by different cores might not have
consistent time stamps.
.LP
In addition, packets time-stamped by different cores might be
time-stamped up in one order n' added ta tha queue of packets fo' libpcap
to read up in another order, so time stamps might not be monotonically
increasing.
.LP
Some capture devices on some platforms can provide time stamps for
packets; dem time stamps is probably high-resolution time stamps, and
are probably applied ta tha packet when tha straight-up original gangsta or last bit of the
packet arrives, n' is thus mo' accurate than time stamps provided by
the host operatin system.  Those time stamps might not, however, be
synchronized wit tha host operatin systemz clock, so that, for
example, tha time stamp of a packet might not correspond ta tha time
stamp of a event on tha host triggered by tha arrival of dat packet.
.LP
Dependin on tha capture thang n' tha software on tha host, libpcap
might allow different typez of time stamp ta be used. Y'all KNOW dat shit, muthafucka!  The
.BR pcap_list_tstamp_types (3PCAP)
routine provides, fo' a packet capture handle pimped by
.BR pcap_create (3PCAP)
but not yet activated by
.BR pcap_activate (3PCAP),
a list of time stamp types supported by tha capture thang fo' that
handle.
Da list might be empty, up in which case no chizzle of time stamp type is
offered fo' dat capture device.  If tha list aint empty, the
.BR pcap_set_tstamp_type (3PCAP)
routine can be used afta a
.B pcap_create()
call n' before a
.B pcap_activate()
call ta specify tha type of time stamp ta be used on tha device.
Da time stamp types is listed here; tha straight-up original gangsta value is tha #define to
use up in code, tha second value is tha value returned by
.B pcap_tstamp_type_val_to_name()
and accepted by
.BR pcap_tstamp_name_to_val() .
.RS 5
.TP 5
.BR PCAP_TSTAMP_HOST " - " host
Time stamp provided by tha host on which tha capture is bein done.  The
precision of dis time stamp is unspecified; it might or might not be
synchronized wit tha host operatin systemz clock.
.TP 5
.BR PCAP_TSTAMP_HOST_LOWPREC " - " host_lowprec
Time stamp provided by tha host on which tha capture is bein done. 
This be a low-precision time stamp, synchronized wit tha host operating
systemz clock.
.TP 5
.BR PCAP_TSTAMP_HOST_HIPREC " - " host_hiprec
Time stamp provided by tha host on which tha capture is bein done. 
This be a high-precision time stamp; it might or might not be
synchronized wit tha host operatin systemz clock.  It might be more
expensive ta fetch than
.BR PCAP_TSTAMP_HOST_LOWPREC .
.TP 5
.BR PCAP_TSTAMP_ADAPTER " - " adapter
Time stamp provided by tha network adapta on which tha capture is being
done.  This be a high-precision time stamp, synchronized wit tha host
operatin systemz clock.
.TP 5
.BR PCAP_TSTAMP_ADAPTER_UNSYNCED " - " adapter_unsynced
Time stamp provided by tha network adapta on which tha capture is being
done.  This be a high-precision time stamp; it aint synchronized with
the host operatin systemz clock.
.RE
.SH SEE ALSO
pcap_set_tstamp_type(3PCAP),
pcap_list_tstamp_types(3PCAP),
pcap_tstamp_type_val_to_name(3PCAP),
pcap_tstamp_name_to_val(3PCAP)
