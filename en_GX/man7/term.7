.\"***************************************************************************
.\" Copyright (c) 1998-2010,2011 Jacked Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, ta any thug obtainin a  *
.\" copy of dis software n' associated documentation filez (the            *
.\" "Software"), ta deal up in tha Software without restriction, includin      *
.\" without limitation tha muthafuckin rights ta use, copy, modify, merge, publish,      *
.\" distribute, distribute wit modifications, sublicense, and/or push       *
.\" copiez of tha Software, n' ta permit peeps ta whom tha Software is    *
.\" furnished ta do so, subject ta tha followin conditions:                 *
.\"                                                                          *
.\" Da above copyright notice n' dis permission notice shall be included  *
.\" up in all copies or substantial portionz of tha Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained up in dis notice, tha name(s) of tha above copyright   *
.\" holdaz shall not be used up in advertisin or otherwise ta promote tha     *
.\" sale, use or other dealings up in dis Software without prior freestyled       *
.\" authorization. I aint talkin' bout chicken n' gravy biatch.                                                           *
.\"***************************************************************************
.\"
.\" $Id: term.7,v 1.23 2011/12/17 23:32:17 tom Exp $
.TH term 7
.ds n 5
.ds d /usr/share/terminfo
.SH NAME
term \- conventions fo' namin terminal types
.SH DESCRIPTION
.PP
Da environment variable \fBTERM\fR should normally contain tha type name of
the terminal, console or display-device type yo ass is using.  This shiznit
is critical fo' all screen-oriented programs, includin yo' editor n' mailer.
.PP
A default \fBTERM\fR value is ghon be set on a per-line basis by either
\fB/etc/inittab\fR (e.g., System\-V-like UNIXes)
or \fB/etc/ttys\fR (BSD UNIXes).
This will nearly always suffice fo' workstation n' microcomputa consoles.
.PP
If you bust a gangbangin' finger-lickin' dialup line, tha type of thang attached ta it may vary.  Older
UNIX systems pre-set a straight-up dumb terminal type like `dumb' or `dialup' on
dialup lines.  Newer ones may pre-set `vt100', reflectin tha prevalence of DEC
VT100-compatible terminals n' personal-computa emulators.
.PP
Modern telnets pass yo' \fBTERM\fR environment variable from tha local side to
the remote one.  There can be problems if tha remote terminfo or termcap entry
for yo' type aint compatible wit yours yo, but dis thang is rare and
can almost always be avoided by explicitly exportin `vt100' (assumin you
are up in fact rockin a VT100-superset console, terminal, or terminal emulator.)
.PP
In any case, yo ass is free ta override tha system \fBTERM\fR settin ta your
taste up in yo' shell profile.  Da \fBtset\fP(1) utilitizzle may be of assistance;
you can give it a set of rulez fo' deducin or requestin a terminal type based
on tha tty thang n' baud rate.
.PP
Settin yo' own \fBTERM\fR value may also be useful if you have pimped a
custom entry incorporatin options (like fuckin visual bell or reverse-video)
which you wish ta override tha system default type fo' yo' line.
.PP
Terminal type descriptions is stored as filez of capabilitizzle data underneath
\*d. Y'all KNOW dat shit, muthafucka!  To browse a list of all terminal names recognized by tha system, do
.sp
	toe | more
.sp
from yo' shell.  These capabilitizzle filez is up in a funky-ass binary format optimized for
retrieval speed (unlike tha oldschool text-based \fBtermcap\fR format they replace);
to examine a entry, you must use tha \fBinfocmp\fR(1M) command.
Invoke it as bigs up:
.sp
	infocmp \fIentry_name\fR
.sp
where \fIentry_name\fR is tha name of tha type you wish ta examine (and the
name of its capabilitizzle file tha subdirectory of \*d named fo' its first
letter).  This command dumps a cold-ass lil capabilitizzle file up in tha text format busted lyrics bout by
\fBterminfo\fR(\*n).
.PP
Da first line of a \fBterminfo\fR(\*n) description gives tha names by which
terminfo knows a terminal, separated by `|' (pipe-bar) charactas wit tha last
name field terminated by a cold-ass lil comma.  Da first name field is tha type's
\fIprimary name\fR, n' is tha one ta use when settin \fBTERM\fR.  Da last
name field (if distinct from tha first) is straight-up a thugged-out description of the
terminal type (it may contain blanks; tha others must be single lyrics).  Name
fieldz between tha straight-up original gangsta n' last (if present) is aliases fo' tha terminal,
usually oldschool names retained fo' compatibility.
.PP
There is some conventions fo' how tha fuck ta chizzle terminal primary names dat help
keep dem informatizzle n' unique.  Here be a step-by-step guide ta naming
terminals dat also explains how tha fuck ta parse them:
.PP
First, chizzle a root name.  Da root will consist of a lower-case letter
followed by up ta seven lower-case lettas or digits, n' you can put dat on yo' toast.  Yo ass need ta avoid using
punctuation charactas up in root names, cuz they is used n' interpreted as
filenames n' shell meta-charactas (like fuckin !, $, *, ?, etc.) embedded up in them
may cause odd n' unhelpful behavior. Shiiit, dis aint no joke.  Da slash (/), or any other character
that may be interpreted by mah playass file system (\e, $, [, ]), is especially
dangerous (terminfo is platform-independent, n' choosin names wit special
charactas could somedizzle make game hard as fuck fo' playaz of a gangbangin' future port).  The
dot (.) characta is relatively safe as long as there be at most one per root
name; some oldschool terminfo names use dat shit.
.PP
Da root name fo' a terminal or workstation console type should almost always
begin wit a vendor prefix (like fuckin \fBhp\fR fo' Hewlett-Packard, \fBwy\fR for
Wyse, or \fBatt\fR fo' AT&T terminals), or a cold-ass lil common name of tha terminal line
(\fBvt\fR fo' tha VT seriez of terminals from DEC, or \fBsun\fR fo' Sun
Microsystems workstation consoles, or \fBregent\fR fo' tha ADDS Regent series.
Yo ass can list tha terminfo tree ta peep what tha fuck prefixes is already up in common use.
Da root name prefix should be followed when appropriate by a model number;
thus \fBvt100\fR, \fBhp2621\fR, \fBwy50\fR.
.PP
Da root name fo' a PC-Unix console type should be tha OS name,
i.e., \fBlinux\fR, \fBbsdos\fR, \fBfreebsd\fR, \fBnetbsd\fR.  It should
\fInot\fR be \fBconsole\fR or any other generic dat might cause mad drama up in a
multi-platform environment son!  If a model number bigs up, it should indicate
either tha OS release level or tha console driver release level.
.PP
Da root name fo' a terminal emulator (assumin it do not fit one of the
standard ANSI or vt100 types) should be tha program name or a readily
recognizable abbreviation of it (i.e., \fBversaterm\fR, \fBctrm\fR).
.PP
Peepin tha root name, you may add any reasonable number of hyphen-separated
feature suffixes.
.TP 5
2p
Has two pagez of memory.  Likewise 4p, 8p, etc.
.TP 5
mc
Magic-cookie.  Some terminals (notably olda Wyses) can only support one
attribute without magic-cookie lossage.  Their base entry is probably paired
with another dat has dis suffix n' uses magic dem scooby snacks ta support multiple
attributes.
.TP 5
\-am
Enable auto-margin (right-margin wraparound).
.TP 5
\-m
Mono mode \- suppress color support.
.TP 5
\-na
No arrow keys \- termcap ignores arrow keys which is straight-up there on the
terminal, so tha user can use tha arrow keys locally.
.TP 5
\-nam
No auto-margin \- suppress be capability.
.TP 5
\-nl
No labels \- suppress soft labels.
.TP 5
\-nsl
No status line \- suppress status line.
.TP 5
\-pp
Has a printa port which is used.
.TP 5
\-rv
Terminal up in reverse vizzle mode (black on white).
.TP 5
\-s
Enable status line.
.TP 5
\-vb
Use visible bell (flash) rather than beep.
.TP 5
\-w
Wide; terminal is up in 132 column mode.
.PP
Conventionally, if yo' terminal type be a variant intended ta specify a
line height, dat suffix should go first.  So, fo' a hypothetical FuBarCo
model 2317 terminal up in 30-line mode wit reverse vizzle, dopest form would be
\fBfubar\-30\-rv\fR (rather than, say, `fubar\-rv\-30').
.PP
Terminal types dat is freestyled not as standalone entries yo, but rather as
components ta be plugged tha fuck into other entries via \fBuse\fP capabilities,
are distinguished by rockin embedded plus signs rather than dashes.
.PP
Commandz which bust a terminal type ta control display often accept a \-T
option dat accepts a terminal name argument.  Such programs should fall back
on tha \fBTERM\fR environment variable when no \-T option is specified.
.SH PORTABILITY
For maximum compatibilitizzle wit olda System V UNIXes, names n' aliases
should be unique within tha straight-up original gangsta 14 characters.
.SH FILES
.TP 5
\*d/?/*
compiled terminal capabilitizzle data base
.TP 5
/etc/inittab
tty line initialization (AT&T-like UNIXes)
.TP 5
/etc/ttys
tty line initialization (BSD-like UNIXes)
.SH SEE ALSO
\fBcurses\fR(3X), \fBterminfo\fR(\*n), \fBterm\fR(\*n).
