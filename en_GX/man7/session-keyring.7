.\"
.\" Copyright (C) 2014 Red Hat, Inc fo' realz. All Rights Reserved.
.\" Written by Dizzy Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public Licence
.\" as published by tha Jacked Software Foundation; either version
.\" 2 of tha Licence, or (at yo' option) any lata version.
.\"
.TH "SESSION KEYRING" 7 "19 Feb 2014" Linux "Kernel key pimpment"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH NAME
session keyrin \- Session shared process keyring
.SH DESCRIPTION
The
.B session keyring
is a keyrin used ta anchor keys on behalf of a process.  It be typically
created by tha \fBpam_keyinit\fP module when a user logs up in n' a link will be
added dat refers ta tha \fBuser keyring\fP.
.P
A special serial number value, \fBKEY_SPEC_SESSION_KEYRING\fP, is defined that
can be used up in lieu of tha callin processs session keyringz actual serial
number.
.P
From tha keyctl utility, '\fB@s\fP' can be used instead of a numeric key ID in
much tha same way.
.P
A processs session keyrin is inherited across clone(), fork() n' vfork() and
is retained across execve() - even when tha target executable is setuid or
setgid. Y'all KNOW dat shit, muthafucka!  Da session keyrin is ghon be destroyed when tha last process that
refers ta it exits.
.P
If a process aint gots a session keyrin when it be accessed, then, under
certain circumstances, tha \fBuser session keyring\fR is ghon be attached as the
session keyrin n' under others a freshly smoked up session keyrin is ghon be pimped.
.SH SPECIAL OPERATIONS
Da keyutils library serves up a fuckin shitload of special operations fo' manipulating
session keyrings:
.IP \fBkeyctl_join_session_keyring\fP()
This operation allows tha calla ta chizzle they session keyring.  Da caller
can join a existin keyrin by name, create a freshly smoked up keyrin of tha name given or
ask tha kernel ta create a freshly smoked up session keyrin wit tha name "_ses".
.IP \fBkeyctl_session_to_parent\fP()
This operation allows tha calla ta set tha parent processs session keyrin to
the same as they own. I aint talkin' bout chicken n' gravy biatch.  For dis ta succeed, tha parent process must have
identical securitizzle attributes n' must be single threaded.
.P
These operations is also exposed all up in tha keyctl utilitizzle as:
.P
.RS
\fBkeyctl\fP session
.br
\fBkeyctl\fP session - [<prog> <arg1> <arg2> ...]
.br
\fBkeyctl\fP session <name> [<prog> <arg1> <arg2> ...]
.RE
.P
and:
.P
.RS
\fBkeyctl\fP new_session
.RE
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SEE ALSO
.BR keyctl (1),
.br
.BR keyctl (3),
.br
.BR keyctl_join_session_keyrin (3),
.br
.BR keyctl_session_to_parent (3),
.br
.BR pam_keyinit (8),
.br
.BR keyrings (7),
.br
.BR thread-keyrin (7),
.br
.BR process-keyrin (7),
.br
.BR user-keyrin (7),
.br
.BR user-session-keyrin (7)
.br
.BR persistent-keyrin (7)
