'\" t
.\"     Title: gitcredentials
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: Git Manual
.\"    Source: Git 1.9.3
.\"  Language: Gangsta
.\"
.TH "GITCREDENTIALS" "7" "10/25/2014" "Git 1\&.9\&.3" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portabilitizzle stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text ta left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gitcredentials \- providin usernames n' passwordz ta Git
.SH "SYNOPSIS"
.sp
.nf
git config credential\&.https://example\&.com\&.username myusername
git config credential\&.helper "$helper $options"
.fi
.sp
.SH "DESCRIPTION"
.sp
Git will sometimes need credentials from tha user up in order ta big-ass up operations; fo' example, it may need ta ask fo' a username n' password up in order ta access a remote repository over HTTP\&. This manual raps bout tha mechanizzlez Git uses ta request these credentials, as well as some features ta avoid inputtin these credentials repeatedly\&.
.SH "REQUESTING CREDENTIALS"
.sp
Without any credential helpers defined, Git will try tha followin strategies ta ask tha user fo' usernames n' passwords:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If the
GIT_ASKPASS
environment variable is set, tha program specified by tha variable is invoked\& fo' realz. A suitable prompt is provided ta tha program on tha command line, n' tha user\(cqs input is read from its standard output\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Otherwise, if the
core\&.askpass
configuration variable is set, its value is used as above\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Otherwise, if the
SSH_ASKPASS
environment variable is set, its value is used as above\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Otherwise, tha user is prompted on tha terminal\&.
.RE
.SH "AVOIDING REPETITION"
.sp
It can be cumbersome ta input tha same credentials over n' over\&. Git serves up two methodz ta reduce dis annoyance:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Static configuration of usernames fo' a given authentication context\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Credential helpers ta cache or store passwords, or ta interact wit a system password wallet or keychain\&.
.RE
.sp
Da first is simple n' appropriate if you aint gots secure storage available fo' a password\&. Well shiiiit, it is generally configured by addin dis ta yo' config:
.sp
.if n \{\
.RS 4
.\}
.nf
[credential "https://example\&.com"]
        username = me
.fi
.if n \{\
.RE
.\}
.sp
.sp
Credential helpers, on tha other hand, is external programs from which Git can request both usernames n' passwords; they typically intercourse wit secure storage provided by tha OS or other programs\&.
.sp
To bust a helper, you must first select one ta use\&. Git currently includes tha followin helpers:
.PP
cache
.RS 4
Cache credentials up in memory fo' a gangbangin' finger-lickin' dirty-ass short period of time\&. Right back up in yo muthafuckin ass. See
\fBgit-credential-cache\fR(1)
for details\&.
.RE
.PP
store
.RS 4
Store credentials indefinitely on disk\&. Right back up in yo muthafuckin ass. See
\fBgit-credential-store\fR(1)
for details\&.
.RE
.sp
Yo ass may also have third\-party helpers installed; search fo' credential\-* up in tha output of git help \-a, n' consult tha documentation of individual helpers\&. Once you have selected a helper, you can tell Git ta use it by puttin its name tha fuck into tha credential\&.helper variable\&.
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Find a helper\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ git help \-a | grep credential\-
credential\-foo
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Read its description\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ git help credential\-foo
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Tell Git ta use it\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ git config \-\-global credential\&.helper foo
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
If there be multiple instancez of tha credential\&.helper configuration variable, each helper is ghon be tried up in turn, n' may provide a username, password, or nothing\&. Once Git has acquired both a username n' a password, no mo' helpers is ghon be tried\&.
.SH "CREDENTIAL CONTEXTS"
.sp
Git considaz each credential ta git a cold-ass lil context defined by a URL\&. This context is used ta look up context\-specific configuration, n' is passed ta any helpers, which may use it as a index tha fuck into secure storage\&.
.sp
For instance, imagine we is accessin https://example\&.com/foo\&.git\&. When Git looks tha fuck into a cold-ass lil config file ta peep if a section matches dis context, it will consider tha two a match if tha context be a more\-specific subset of tha pattern up in tha config file\&. For example, if you have dis up in yo' config file:
.sp
.if n \{\
.RS 4
.\}
.nf
[credential "https://example\&.com"]
        username = foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
then we will match: both protocols is tha same, both hosts is tha same, n' tha "pattern" URL do not care bout tha path component at all\&. But fuck dat shiznit yo, tha word on tha street is dat dis context would not match:
.sp
.if n \{\
.RS 4
.\}
.nf
[credential "https://kernel\&.org"]
        username = foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
because tha hostnames differ\&. Nor would it match foo\&.example\&.com; Git compares hostnames exactly, without thankin bout whether two hosts is part of tha same domain\&. Likewise, a cold-ass lil config entry fo' http://example\&.com would not match: Git compares tha protocols exactly\&.
.SH "CONFIGURATION OPTIONS"
.sp
Options fo' a cold-ass lil credential context can be configured either up in credential\&.* (which applies ta all credentials), or credential\&.<url>\&.*, where <url> matches tha context as busted lyrics bout above\&.
.sp
Da followin options is available up in either location:
.PP
helper
.RS 4
Da name of a external credential helper, n' any associated options\&. If tha helper name aint a absolute path, then tha string
git credential\-
is prepended\&. Da resultin strang is executed by tha shell (so, fo' example, settin dis to
foo \-\-option=bar
will execute
git credential\-foo \-\-option=bar
via tha shell\&. Right back up in yo muthafuckin ass. See tha manual of specific helpers fo' examplez of they use\&.
.RE
.PP
username
.RS 4
A default username, if one aint provided up in tha URL\&.
.RE
.PP
useHttpPath
.RS 4
By default, Git do not consider tha "path" component of a http URL ta be worth matchin via external helpers\&. This means dat a cold-ass lil credential stored for
https://example\&.com/foo\&.git
will also be used for
https://example\&.com/bar\&.git\&. If you do wanna distinguish these cases, set dis option to
true\&.
.RE
.SH "CUSTOM HELPERS"
.sp
Yo ass can write yo' own custom helpers ta intercourse wit any system up in which you keep credentials\&. Right back up in yo muthafuckin ass. See tha documentation fo' Git\(cqs \m[blue]\fBcredentials API\fR\m[]\&\s-2\u[1]\d\s+2 fo' details\&.
.SH "GIT"
.sp
Part of tha \fBgit\fR(1) suite
.SH "NOTES"
.IP " 1." 4
credentials API
.RS 4
\%file:///usr/share/doc/git/technical/api-credentials.html
.RE
