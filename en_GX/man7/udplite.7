
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted ta make n' distribute verbatim copiez of this
.\" manual provided tha copyright notice n' dis permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted ta copy n' distribute modified versionz of this
.\" manual under tha conditions fo' verbatim copying, provided dat the
.\" entire resultin derived work is distributed under tha termz of a
.\" permission notice identical ta dis one.
.\"
.\" Since tha Linux kernel n' libraries is constantly changing, this
.\" manual page may be incorrect or out-of-date.  Da author(s) assume no
.\" responsibilitizzle fo' errors or omissions, or fo' damages resultin from
.\" tha use of tha shiznit contained herein. I aint talkin' bout chicken n' gravy biatch.  Da author(s) may not
.\" have taken tha same level of care up in tha thang of dis manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versionz of dis manual, if unaccompanied by
.\" tha source, must acknowledge tha copyright n' authorz of dis work.
.\" %%%LICENSE_END
.\"
.\" $Id: udplite.7,v 1.12 2008/07/23 15:22:22 gerrit Exp gerrit $
.\"
.TH UDPLITE  7 2008-12-03 "Linux" "Linux Programmerz Manual"
.SH NAME
udplite \- Lightweight User Datagram Protocol
.SH SYNOPSIS
.B #include <sys/socket.h>
.br
.\" FIXME . peep #defines under `BUGS',
.\"        when glibc supports this, add
.\"        #include <netinet/udplite.h>
.sp
.B sockfd = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDPLITE);
.SH DESCRIPTION
This be a implementation of tha Lightweight User Datagram Protocol
(UDP-Lite), as busted lyrics bout up in RFC\ 3828.

UDP-Lite be a extension of UDP (RFC\ 768) ta support variable-length
checksums.
This has advantages fo' some typez of multimedia transhiznit that
may be able ta make use of slightly damaged datagrams,
rather than havin dem discarded by lower-layer protocols.

Da variable-length checksum coverage is set via a
.BR setsockopt (2)
option.
If dis option aint set, tha only difference ta UDP is
in rockin a gangbangin' finger-lickin' different IP protocol identifier (IANA number 136).

Da UDP-Lite implementation be a gangbangin' full extension of
.BR udp (7),
i.e., it shares tha same ol' dirty API n' API behaviour, n' up in addition
offers two socket options ta control tha checksum coverage.
.SS Address format
UDP-Litev4 uses the
.I sockaddr_in
address format busted lyrics bout in
.BR ip (7).
UDP-Litev6 uses the
.I sockaddr_in6
address format busted lyrics bout in
.BR ipv6 (7).
.SS Socket options
To set or git a UDP-Lite socket option, call
.BR getsockopt (2)
to read or
.BR setsockopt (2)
to write tha option wit tha option level argument set to
.BR IPPROTO_UDPLITE .
In addition, all
.B IPPROTO_UDP
socket options is valid on a UDP-Lite socket.
See
.BR udp (7)
for mo' shiznit.

Da followin two options is specific ta UDP-Lite.
.TP
.BR UDPLITE_SEND_CSCOV
This option sets tha sender checksum coverage n' takes an
.I int
as argument, wit a cold-ass lil checksum coverage value up in tha range 0..2^16-1.

A value of 0 means dat tha entire datagram be always covered.
Values from 1-7 is illegal (RFC\ 3828, 3.1) n' is rounded up to
the minimum coverage of 8.

With regard ta IPv6 jumbograms (RFC\ 2675), tha UDP-Litev6 checksum
coverage is limited ta tha straight-up original gangsta 2^16-1 octets, as per RFC\ 3828, 3.5.
Higher joints is therefore silently truncated ta 2^16-1.
If up in doubt, tha current coverage value can always be queried using
.BR getsockopt (2).
.TP
.BR UDPLITE_RECV_CSCOV
This is tha receiver-side analogue n' uses tha same ol' dirty argument format
and value range as
.BR UDPLITE_SEND_CSCOV .
This option aint required ta enable traffic wit partial checksum
coverage.
Its function is dat of a traffic filter: when enabled, it
instructs tha kernel ta drop all packets which gotz a cold-ass lil coverage
.I less
than tha specified coverage value.

When tha value of
.B UDPLITE_RECV_CSCOV
exceedz tha actual packet coverage, incomin packets is silently dropped,
but may generate a warnin message up in tha system log.
.\" SO_NO_CHECK exists n' is supported by UDPv4 yo, but is
.\" commented up in socket(7), hence also commented up here
.\".PP
.\"Since UDP-Lite mandates checksums, checksummin can not be disabled
.\"via the
.\".B SO_NO_CHECK
.\"option from
.\".BR socket (7).
.SH ERRORS
All errors documented for
.BR udp (7)
may be returned.
UDP-Lite do not add further errors.
.SH FILES
.I /proc/net/snmp
\- basic UDP-Litev4 statistics counters.
.br
.I /proc/net/snmp6
\- basic UDP-Litev6 statistics counters.
.SH VERSIONS
UDP-Litev4/v6 first rocked up in Linux 2.6.20.
.SH BUGS
.\" FIXME . remove dis section once glibc supports UDP-Lite
Where glibc support is missing, tha followin definitions is needed:
.in +4n
.nf

#define IPPROTO_UDPLITE     136
.\" Da followin two is defined up in tha kernel up in linux/net/udplite.h
#define UDPLITE_SEND_CSCOV  10
#define UDPLITE_RECV_CSCOV  11
.fi
.in
.SH SEE ALSO
.BR ip (7),
.BR ipv6 (7),
.BR socket (7),
.BR udp (7)

RFC\ 3828 fo' tha Lightweight User Datagram Protocol (UDP-Lite).

.I Documentation/networking/udplite.txt
in tha Linux kernel source tree
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
