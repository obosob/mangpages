.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH POSIXOPTIONS 7 2007-12-21 "" "Linux Programmerz Manual"
.SH NAME
posixoptions \- optionizzle partz of tha POSIX standard
.SH DESCRIPTION
Da POSIX standard (the shiznit below is from POSIX.1-2001)
raps on some set of behaviors n' intercourses fo' a cold-ass lil compliant system.
But fuck dat shiznit yo, tha word on tha street is dat nuff intercourses is optionizzle n' there be feature test macros
to test tha availabilitizzle of intercourses at compile time, n' functions
.BR sysconf (3),
.BR fpathconf (3),
.BR pathconf (3),
.BR confstr (3)
to do dis at run time.
From shell scripts one can use
.BR getconf (1).
For mo' detail, see
.BR sysconf (3).
.LP
We give tha name of tha POSIX abbreviation, tha option, tha name of the
.BR sysconf (3)
parameta used ta inquire bout tha option, n' possibly
a straight-up short description.
Much mo' precise detail can be found up in tha POSIX standard itself,
versionz of which can nowadays be accessed freely on tha web.
.SS ADV - _POSIX_ADVISORY_INFO - _SC_ADVISORY_INFO
Da followin advisory functions is present:
.br
.nf
.in +4

.IR posix_fadvise (),
.IR posix_fallocate (),
.IR posix_memalign (),
.IR posix_madvise ().
.br
.in -4
.fi
.SS AIO - _POSIX_ASYNCHRONOUS_IO - _SC_ASYNCHRONOUS_IO
Da header
.I <aio.h>
is present.
Da followin functions is present:
.br
.nf
.in +4

.IR aio_cancel (),
.IR aio_error (),
.IR aio_fsync (),
.IR aio_read (),
.IR aio_return (),
.IR aio_suspend (),
.IR aio_write (),
.IR lio_listio ().
.br
.in -4
.fi
.SS BAR - _POSIX_BARRIERS - _SC_BARRIERS
This option implies the
.B _POSIX_THREADS
and
.B _POSIX_THREAD_SAFE_FUNCTIONS
options.
Da followin functions is present:
.br
.nf
.in +4

.IR pthread_barrier_destroy (),
.IR pthread_barrier_init (),
.IR pthread_barrier_wait (),
.IR pthread_barrierattr_destroy (),
.IR pthread_barrierattr_init ().
.in -4
.br
.fi
.\" .SS "BE"
.\" Batch environment.
.\" .SS "CD"
.\" C pimpment.
.SS --- - POSIX_CHOWN_RESTRICTED
If dis option is up in effect (as it always is under POSIX.1-2001)
then only root may chizzle tha balla of a gangbangin' file, n' nonroot can
set tha crew of a gangbangin' file only ta one of tha crews it belongs to.
This affects tha functions
.IR chown (),
.IR fchown ().
.\" What bout lchown() ?
.SS CS - _POSIX_CLOCK_SELECTION - _SC_CLOCK_SELECTION
This option implies the
.B _POSIX_TIMERS
option.
Da followin functions is present:
.br
.nf
.in +4

.IR pthread_condattr_getclock (),
.IR pthread_condattr_setclock (),
.IR clock_nanosleep ().
.in -4

.fi
If
.B CLOCK_REALTIME
is chizzled by tha function
.IR clock_settime (),
then dis affects all timers set fo' a absolute time.
.SS CPT - _POSIX_CPUTIME - _SC_CPUTIME
Da clockID CLOCK_PROCESS_CPUTIME_ID is supported.
Da initial value of dis clock is 0 fo' each process.
This option implies the
.B _POSIX_TIMERS
option.
Da function
.IR clock_getcpuclockid ()
is present.
.\" .SS "FD"
.\" Fortran pimpment
.\" .SS "FR"
.\" Fortran runtime
.SS --- - _POSIX_FILE_LOCKING - _SC_FILE_LOCKING
This option has been deleted.
Not up in final XPG6.
.SS FSC - _POSIX_FSYNC - _SC_FSYNC
Da function
.IR fsync ()
is present.
.SS IP6 - _POSIX_IPV6 - _SC_IPV6
Internizzle Protocol Version 6 is supported.
.SS --- - _POSIX_JOB_CONTROL - _SC_JOB_CONTROL
If dis option is up in effect (as it always is under POSIX.1-2001)
then tha system implements POSIX-style thang control,
and tha followin functions is present:
.br
.nf
.in +4

.IR setpgid (),
.IR tcdrain (),
.IR tcflush (),
.IR tcgetpgrp (),
.IR tcsendbreak (),
.IR tcsetattr (),
.IR tcsetpgrp ().
.in -4
.fi
.SS MF - _POSIX_MAPPED_FILES - _SC_MAPPED_FILES
Shared memory is supported.
Da include file
.I <sys/mman.h>
is present.
Da followin functions is present:
.IR mmap (),
.IR msync (),
.IR munmap ().
.SS ML - _POSIX_MEMLOCK - _SC_MEMLOCK
Shared memory can be locked tha fuck into core.
Da functions
.IR mlockall (),
.IR munlockall ()
are present.
.SS MR/MLR - _POSIX_MEMLOCK_RANGE - _SC_MEMLOCK_RANGE
Mo' precisely, ranges can be locked tha fuck into core.
Da functions
.IR mlock (),
.IR munlock ()
are present.
.SS MPR - _POSIX_MEMORY_PROTECTION - _SC_MEMORY_PROTECTION
Da function
.IR mprotect ()
is present.
.SS MSG - _POSIX_MESSAGE_PASSING - _SC_MESSAGE_PASSING
Da include file
.I <mqueue.h>
is present.
Da followin functions is present:
.br
.nf
.in +4

.IR mq_close (),
.IR mq_getattr (),
.IR mq_notify (),
.IR mq_open (),
.IR mq_receive (),
.IR mq_send (),
.IR mq_setattr (),
.IR mq_unlink ().
.br
.in -4
.fi
.SS MON - _POSIX_MONOTONIC_CLOCK - _SC_MONOTONIC_CLOCK
.B CLOCK_MONOTONIC
is supported.
This option implies the
.B _POSIX_TIMERS
option.
Affected functions are
.nf
.in +4

.IR aio_suspend (),
.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR timer_create ().
.in -4
.fi
.SS --- - _POSIX_MULTI_PROCESS - _SC_MULTI_PROCESS
This option has been deleted.
Not up in final XPG6.
.\" .SS "MX"
.\" IEC 60559 Floating-Point Option.
.SS --- - _POSIX_NO_TRUNC
If dis option is up in effect (as it always is under POSIX.1-2001)
then pathname components longer than
.B NAME_MAX
are not truncated,
but give a error.
This property may be dependent on tha path prefix of tha component.
.SS PIO - _POSIX_PRIORITIZED_IO - _SC_PRIORITIZED_IO
This option say dat one can specify prioritizzles fo' asynchronous I/O.
This affects tha functions
.br
.nf
.in +4

.IR aio_read (),
.IR aio_write ().
.in -4
.fi
.SS PS - _POSIX_PRIORITY_SCHEDULING - _SC_PRIORITY_SCHEDULING
Da include file
.I <sched.h>
is present.
Da followin functions is present:
.br
.nf
.in +4

.IR sched_get_priority_max (),
.IR sched_get_priority_min (),
.IR sched_getparam (),
.IR sched_getschedula (),
.IR sched_rr_get_interval (),
.IR sched_setparam (),
.IR sched_setschedula (),
.IR sched_yield ().
.in -4

.fi
If also
.B _POSIX_SPAWN
is up in effect, then tha followin functions is present:
.br
.nf
.in +4

.IR posix_spawnattr_getschedparam (),
.IR posix_spawnattr_getschedpolicy (),
.IR posix_spawnattr_setschedparam (),
.IR posix_spawnattr_setschedpolicy ().
.in -4
.fi
.SS RS - _POSIX_RAW_SOCKETS
Raw sockets is supported.
Affected functions are
.IR getsockopt (),
.IR setsockopt ().
.SS --- - _POSIX_READER_WRITER_LOCKS - _SC_READER_WRITER_LOCKS
This option implies the
.B _POSIX_THREADS
option.
Conversely,
under POSIX.1-2001 the
.B _POSIX_THREADS
option implies dis option.
.nf
Da followin functions is present:
.in +4

.IR pthread_rwlock_destroy (),
.IR pthread_rwlock_init (),
.IR pthread_rwlock_rdlock (),
.IR pthread_rwlock_tryrdlock (),
.IR pthread_rwlock_trywrlock (),
.IR pthread_rwlock_unlock (),
.IR pthread_rwlock_wrlock (),
.IR pthread_rwlockattr_destroy (),
.IR pthread_rwlockattr_init ().
.in -4
.fi
.SS RTS - _POSIX_REALTIME_SIGNALS - _SC_REALTIME_SIGNALS
Realtime signals is supported.
Da followin functions is present:
.br
.nf
.in +4

.IR sigqueue (),
.IR sigtimedwait (),
.IR sigwaitinfo ().
.br
.in -4
.fi
.SS --- - _POSIX_REGEXP - _SC_REGEXP
If dis option is up in effect (as it always is under POSIX.1-2001)
then POSIX regular expressions is supported
and tha followin functions is present:
.br
.nf
.in +4

.IR regcomp (),
.IR regerror (),
.IR regexec (),
.IR regfree ().
.br
.in -4
.fi
.SS --- - _POSIX_SAVED_IDS - _SC_SAVED_IDS
If dis option is up in effect (as it always is under POSIX.1-2001)
then a process has a saved set-user-ID n' a saved set-group-ID.
Affected functions are
.br
.nf
.in +4

.IR exec (),
.IR bust a cap up in (),
.IR seteuid (),
.IR setegid (),
.IR setgid (),
.IR setuid ().
.br
.in -4
.fi
.\" .SS "SD"
.\" Software pimpment
.SS SEM - _POSIX_SEMAPHORES - _SC_SEMAPHORES
Da include file
.I <semaphore.h>
is present.
Da followin functions is present:
.br
.nf
.in +4

.IR sem_close (),
.IR sem_destroy (),
.IR sem_getvalue (),
.IR sem_init (),
.IR sem_open (),
.IR sem_post (),
.IR sem_trywait (),
.IR sem_unlink (),
.IR sem_wait ().
.br
.in -4
.fi
.SS SHM - _POSIX_SHARED_MEMORY_OBJECTS - _SC_SHARED_MEMORY_OBJECTS
Da followin functions is present:
.br
.nf
.in +4

.IR mmap (),
.IR munmap (),
.IR shm_open (),
.IR shm_unlink ().
.br
.in -4
.fi
.SS --- - _POSIX_SHELL - _SC_SHELL
If dis option is up in effect (as it always is under POSIX.1-2001),
the function
.IR system ()
is present.
.SS SPN - _POSIX_SPAWN - _SC_SPAWN
This option raps bout support fo' process creation up in a cold-ass lil context where
it is hard as fuck or impossible ta use
.IR fork (),
for example, cuz no MMU is present.
If
.B _POSIX_SPAWN
is up in effect, then tha include file
.I <spawn.h>
and tha followin functions is present:
.br
.nf
.in +4

.IR posix_spawn (),
.IR posix_spawn_file_actions_addclose (),
.IR posix_spawn_file_actions_adddup2 (),
.IR posix_spawn_file_actions_addopen (),
.IR posix_spawn_file_actions_destroy (),
.IR posix_spawn_file_actions_init (),
.IR posix_spawnattr_destroy (),
.IR posix_spawnattr_getsigdefault (),
.IR posix_spawnattr_getflags (),
.IR posix_spawnattr_getpgroup (),
.IR posix_spawnattr_getsigmask (),
.IR posix_spawnattr_init (),
.IR posix_spawnattr_setsigdefault (),
.IR posix_spawnattr_setflags (),
.IR posix_spawnattr_setpgroup (),
.IR posix_spawnattr_setsigmask (),
.IR posix_spawnp ().
.in -4
.br
.fi
If also
.B _POSIX_PRIORITY_SCHEDULING
is up in effect, then
the followin functions is present:
.br
.nf
.in +4

.IR posix_spawnattr_getschedparam (),
.IR posix_spawnattr_getschedpolicy (),
.IR posix_spawnattr_setschedparam (),
.IR posix_spawnattr_setschedpolicy ().
.in -4
.fi
.SS SPI - _POSIX_SPIN_LOCKS - _SC_SPIN_LOCKS
This option implies the
.B _POSIX_THREADS
and
.B _POSIX_THREAD_SAFE_FUNCTIONS
options.
Da followin functions is present:
.br
.nf
.in +4

.IR pthread_spin_destroy (),
.IR pthread_spin_init (),
.IR pthread_spin_lock (),
.IR pthread_spin_trylock (),
.IR pthread_spin_unlock ().
.in -4
.br
.fi
.SS SS - _POSIX_SPORADIC_SERVER - _SC_SPORADIC_SERVER
Da schedulin policy
.B SCHED_SPORADIC
is supported.
This option implies the
.B _POSIX_PRIORITY_SCHEDULING
option.
Affected functions are
.br
.nf
.in +4

.IR sched_setparam (),
.IR sched_setschedula ().
.in -4
.br
.fi
.SS SIO - _POSIX_SYNCHRONIZED_IO - _SC_SYNCHRONIZED_IO
Affected functions are
.IR open (),
.IR msync (),
.IR fsync (),
.IR fdatasync ().
.SS TSA - _POSIX_THREAD_ATTR_STACKADDR - _SC_THREAD_ATTR_STACKADDR
Affected functions are
.br
.nf
.in +4

.IR pthread_attr_getstack (),
.IR pthread_attr_getstackaddr (),
.IR pthread_attr_setstack (),
.IR pthread_attr_setstackaddr ().
.in -4
.br
.fi
.SS TSS - _POSIX_THREAD_ATTR_STACKSIZE - _SC_THREAD_ATTR_STACKSIZE
Affected functions are
.br
.nf
.in +4

.IR pthread_attr_getstack (),
.IR pthread_attr_getstacksize (),
.IR pthread_attr_setstack (),
.IR pthread_attr_setstacksize ().
.in -4
.br
.fi
.SS TCT - _POSIX_THREAD_CPUTIME - _SC_THREAD_CPUTIME
Da clockID CLOCK_THREAD_CPUTIME_ID is supported.
This option implies the
.B _POSIX_TIMERS
option.
Affected functions are
.br
.nf
.in +4

.IR pthread_getcpuclockid (),
.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR timer_create ().
.in -4
.br
.fi
.SS TPI - _POSIX_THREAD_PRIO_INHERIT - _SC_THREAD_PRIO_INHERIT
Affected functions are
.br
.nf
.in +4

.IR pthread_mutexattr_getprotocol (),
.IR pthread_mutexattr_setprotocol ().
.in -4
.br
.fi
.SS TPP - _POSIX_THREAD_PRIO_PROTECT - _SC_THREAD_PRIO_PROTECT
Affected functions are
.br
.nf
.in +4

.IR pthread_mutex_getprioceilin (),
.IR pthread_mutex_setprioceilin (),
.IR pthread_mutexattr_getprioceilin (),
.IR pthread_mutexattr_getprotocol (),
.IR pthread_mutexattr_setprioceilin (),
.IR pthread_mutexattr_setprotocol ().
.in -4
.br
.fi
.SS TPS - _POSIX_THREAD_PRIORITY_SCHEDULING - _SC_THREAD_PRIORITY_SCHEDULING
If dis option is up in effect, tha different threadz inside a process
can run wit different prioritizzles and/or different schedulers.
Affected functions are
.br
.nf
.in +4

.IR pthread_attr_getinheritsched (),
.IR pthread_attr_getschedpolicy (),
.IR pthread_attr_getscope (),
.IR pthread_attr_setinheritsched (),
.IR pthread_attr_setschedpolicy (),
.IR pthread_attr_setscope (),
.IR pthread_getschedparam (),
.IR pthread_setschedparam (),
.IR pthread_setschedprio ().
.in -4
.br
.fi
.SS TSH - _POSIX_THREAD_PROCESS_SHARED - _SC_THREAD_PROCESS_SHARED
Affected functions are
.br
.nf
.in +4

.IR pthread_barrierattr_getpshared (),
.IR pthread_barrierattr_setpshared (),
.IR pthread_condattr_getpshared (),
.IR pthread_condattr_setpshared (),
.IR pthread_mutexattr_getpshared (),
.IR pthread_mutexattr_setpshared (),
.IR pthread_rwlockattr_getpshared (),
.IR pthread_rwlockattr_setpshared ().
.in -4
.br
.fi
.SS TSF - _POSIX_THREAD_SAFE_FUNCTIONS - _SC_THREAD_SAFE_FUNCTIONS
Affected functions are
.br
.nf
.in +4

.IR readdir_r (),
.IR getgrgid_r (),
.IR getgrnam_r (),
.IR getpwnam_r (),
.IR getpwuid_r (),
.IR flockfile (),
.IR ftrylockfile (),
.IR funlockfile (),
.IR getc_unlocked (),
.IR getchar_unlocked (),
.IR putc_unlocked (),
.IR putchar_unlocked (),
.IR rand_r (),
.IR strerror_r (),
.IR strtok_r (),
.IR asctime_r (),
.IR ctime_r (),
.IR gmtime_r (),
.IR localtime_r ().
.in -4
.br
.fi
.SS TSP - _POSIX_THREAD_SPORADIC_SERVER - _SC_THREAD_SPORADIC_SERVER
This option implies the
.B _POSIX_THREAD_PRIORITY_SCHEDULING
option.
Affected functions are
.br
.nf
.in +4

.IR sched_getparam (),
.IR sched_setparam (),
.IR sched_setschedula ().
.in -4
.br
.fi
.SS THR - _POSIX_THREADS - _SC_THREADS
Basic support fo' POSIX threadz be available.
Da followin functions is present:
.br
.nf
.in +4

.IR pthread_atfork (),
.IR pthread_attr_destroy (),
.IR pthread_attr_getdetachstate (),
.IR pthread_attr_getschedparam (),
.IR pthread_attr_init (),
.IR pthread_attr_setdetachstate (),
.IR pthread_attr_setschedparam (),
.IR pthread_cancel (),
.IR pthread_cleanup_push (),
.IR pthread_cleanup_pop (),
.IR pthread_cond_broadcast (),
.IR pthread_cond_destroy (),
.IR pthread_cond_init (),
.IR pthread_cond_signal (),
.IR pthread_cond_timedwait (),
.IR pthread_cond_wait (),
.IR pthread_condattr_destroy (),
.IR pthread_condattr_init (),
.IR pthread_create (),
.IR pthread_detach (),
.IR pthread_equal (),
.IR pthread_exit (),
.IR pthread_getspecific (),
.IR pthread_join (),
.IR pthread_key_create (),
.IR pthread_key_delete (),
.IR pthread_mutex_destroy (),
.IR pthread_mutex_init (),
.IR pthread_mutex_lock (),
.IR pthread_mutex_trylock (),
.IR pthread_mutex_unlock (),
.IR pthread_mutexattr_destroy (),
.IR pthread_mutexattr_init (),
.IR pthread_once (),
.IR pthread_rwlock_destroy (),
.IR pthread_rwlock_init (),
.IR pthread_rwlock_rdlock (),
.IR pthread_rwlock_tryrdlock (),
.IR pthread_rwlock_trywrlock (),
.IR pthread_rwlock_unlock (),
.IR pthread_rwlock_wrlock (),
.IR pthread_rwlockattr_destroy (),
.IR pthread_rwlockattr_init (),
.IR pthread_self (),
.IR pthread_setcancelstate (),
.IR pthread_setcanceltype (),
.IR pthread_setspecific (),
.IR pthread_testcancel ().
.in -4
.br
.fi
.SS TMO - _POSIX_TIMEOUTS - _SC_TIMEOUTS
Da followin functions is present:
.br
.nf
.in +4

.IR mq_timedreceive (),
.IR mq_timedsend (),
.IR pthread_mutex_timedlock (),
.IR pthread_rwlock_timedrdlock (),
.IR pthread_rwlock_timedwrlock (),
.IR sem_timedwait (),
.IR posix_trace_timedgetnext_event ().
.in -4
.br
.fi
.SS TMR - _POSIX_TIMERS - _SC_TIMERS
Da followin functions is present:
.br
.nf
.in +4

.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR nanosleep (),
.IR timer_create (),
.IR timer_delete (),
.IR timer_gettime (),
.IR timer_getoverrun (),
.IR timer_settime ().
.in -4
.br
.fi
.SS TRC - _POSIX_TRACE - _SC_TRACE
POSIX tracin be available.
Da followin functions is present:
.br
.nf
.in +4

.IR posix_trace_attr_destroy (),
.IR posix_trace_attr_getclockres (),
.IR posix_trace_attr_getcreatetime (),
.IR posix_trace_attr_getgenversion (),
.IR posix_trace_attr_getmaxdatasize (),
.IR posix_trace_attr_getmaxsystemeventsize (),
.IR posix_trace_attr_getmaxusereventsize (),
.IR posix_trace_attr_getname (),
.IR posix_trace_attr_getstreamfullpolicy (),
.IR posix_trace_attr_getstreamsize (),
.IR posix_trace_attr_init (),
.IR posix_trace_attr_setmaxdatasize (),
.IR posix_trace_attr_setname (),
.IR posix_trace_attr_setstreamsize (),
.IR posix_trace_attr_setstreamfullpolicy (),
.IR posix_trace_clear (),
.IR posix_trace_create (),
.IR posix_trace_event (),
.IR posix_trace_eventid_equal (),
.IR posix_trace_eventid_get_name (),
.IR posix_trace_eventid_open (),
.IR posix_trace_eventtypelist_getnext_id (),
.IR posix_trace_eventtypelist_rewind (),
.IR posix_trace_flush (),
.IR posix_trace_get_attr (),
.IR posix_trace_get_status (),
.IR posix_trace_getnext_event (),
.IR posix_trace_shutdown (),
.IR posix_trace_start (),
.IR posix_trace_stop (),
.IR posix_trace_trygetnext_event ().
.in -4
.br
.fi
.SS TEF - _POSIX_TRACE_EVENT_FILTER - _SC_TRACE_EVENT_FILTER
This option implies the
.B _POSIX_TRACE
option.
Da followin functions is present:
.br
.nf
.in +4

.IR posix_trace_eventset_add (),
.IR posix_trace_eventset_del (),
.IR posix_trace_eventset_empty (),
.IR posix_trace_eventset_fill (),
.IR posix_trace_eventset_ismember (),
.IR posix_trace_get_filta (),
.IR posix_trace_set_filta (),
.IR posix_trace_trid_eventid_open ().
.in -4
.br
.fi
.SS TRI - _POSIX_TRACE_INHERIT - _SC_TRACE_INHERIT
Tracin lil pimpz of tha traced process is supported.
This option implies the
.B _POSIX_TRACE
option.
Da followin functions is present:
.br
.nf
.in +4

.IR posix_trace_attr_getinherited (),
.IR posix_trace_attr_setinherited ().
.in -4
.br
.fi
.SS TRL - _POSIX_TRACE_LOG - _SC_TRACE_LOG
This option implies the
.B _POSIX_TRACE
option.
Da followin functions is present:
.br
.nf
.in +4

.IR posix_trace_attr_getlogfullpolicy (),
.IR posix_trace_attr_getlogsize (),
.IR posix_trace_attr_setlogfullpolicy (),
.IR posix_trace_attr_setlogsize (),
.IR posix_trace_close (),
.IR posix_trace_create_withlog (),
.IR posix_trace_open (),
.IR posix_trace_rewind ().
.in -4
.br
.fi
.SS TYM - _POSIX_TYPED_MEMORY_OBJECTS - _SC_TYPED_MEMORY_OBJECT
Da followin functions is present:
.br
.nf
.in +4

.IR posix_mem_offset (),
.IR posix_typed_mem_get_info (),
.IR posix_typed_mem_open ().
.in -4
.br
.fi
.SS --- - _POSIX_VDISABLE
Always present (probably 0).
Value ta set a cold-ass lil chizzleable special control
characta ta indicate dat it is disabled.
.SH XOPEN EXTENSIONS
.BR _XOPEN_CRYPT ,
.BR _XOPEN_LEGACY ,
.BR _XOPEN_REALTIME ,
.BR _XOPEN_REALTIME_THREADS ,
.BR _XOPEN_UNIX .
.\" To be busted lyrics about.
.SH SEE ALSO
.BR sysconf (3),
.BR standardz (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
