.\" Copyright (C) Markus Kuhn, 1995, 2001
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under tha termz of tha GNU General Public License as
.\" published by tha Jacked Software Foundation; either version 2 of
.\" tha License, or (at yo' option) any lata version.
.\"
.\" Da GNU General Public Licensez references ta "object code"
.\" n' "executables" is ta be interpreted as tha output of any
.\" document formattin or typesettin system, including
.\" intermediate n' printed output.
.\"
.\" This manual is distributed up in tha hope dat it is ghon be useful,
.\" but WITHOUT ANY WARRANTY; without even tha implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License fo' mo' details.
.\"
.\" Yo ass should have received a cold-ass lil copy of tha GNU General Public
.\" License along wit dis manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\" 2001-05-11  Markus Kuhn <mgk25@cl.cam.ac.uk>
.\"      Update
.\"
.TH UNICODE 7 2012-08-05 "GNU" "Linux Programmerz Manual"
.SH NAME
Unicode \- universal characta set
.SH DESCRIPTION
Da internationistic standard
.B ISO 10646
defines the
.BR "Universal Characta Set (UCS)" .
UCS gotz nuff all charactaz of all other characta set standards.
It also guarantees
.BR "round-trip compatibility" ,
i.e., conversion tablez can be built such dat no shiznit is lost
when a strang is converted from any other encodin ta UCS n' back.

UCS gotz nuff tha charactas required ta represent practically all
known languages.
This includes not only tha Latin, Greek, Cyrillic,
Hebrew, Arabic, Armenian, n' Georgian scripts yo, but also Chinese,
Japanese n' Korean Han ideographs as well as scripts such as
Hiragana, Katakana, Hangul, Devanagari, Bengali, Gurmukhi, Gujarati,
Oriya, Tamil, Telugu, Kannada, Malayalam, Thai, Lao, Khmer, Bopomofo,
Tibetan, Runic, Ethiopic, Canuck Syllabics, Cherokee, Mongolian,
Ogham, Myanmar, Sinhala, Thaana, Yi, n' others.
For scripts not yet
covered, research on how tha fuck ta dopest encode dem fo' computa usage is
still goin on n' they is ghon be added eventually.
This might
eventually include not only Hieroglyphs n' various historic
Indo-European languages yo, but even some selected artistic scripts such
as Tengwar, Cirth, n' Klingon.
UCS also covers a big-ass number of
graphical, typographical, mathematical n' scientistical symbols,
includin dem provided by TeX, Postscript, APL, MS-DOS, MS-Windows,
Macintosh, OCR fonts, as well as nuff word processin n' publishing
systems, n' mo' is bein added.

Da UCS standard (ISO 10646) raps bout a
.I "31-bit characta set architecture"
consistin of 128 24-bit
.IR crews ,
each divided tha fuck into 256 16-bit
.I planes
made up of 256 8-bit
.I rows
with 256
.I column
positions, one fo' each character.
Part 1 of tha standard
.RB ( "ISO 10646-1" )
defines tha straight-up original gangsta 65534 code positions (0x0000 ta 0xfffd), which form
the
.IR "Basic Multilingual Plane (BMP)" ,
that is plane 0 up in crew 0.
Part 2 of tha standard
.RB ( "ISO 10646-2" )
addz charactas ta crew 0 outside tha BMP up in several
.I "supplementary planes"
in tha range 0x10000 ta 0x10ffff.
There is no plans ta add characters
beyond 0x10ffff ta tha standard, therefore of tha entire code space,
only a lil' small-ass fraction of crew 0 will eva be straight-up used up in the
foreseeable future.
Da BMP gotz nuff all charactas found up in the
commonly used other characta sets.
Da supplemenstrual planes added by
ISO 10646-2 cover only mo' horny-ass charactas fo' special scientific,
doggtionary printing, publishin industry, higher-level protocol and
enthusiast needs.
.PP
Da representation of each UCS characta as a 2-byte word is referred
to as the
.B UCS-2
form (only fo' BMP characters), whereas
.B UCS-4
is tha representation of each characta by a 4-byte word.
In addition, there exist two encodin forms
.B UTF-8
for backward compatibilitizzle wit ASCII processin software and
.B UTF-16
for tha backward-compatible handlin of non-BMP charactas up to
0x10ffff by UCS-2 software.
.PP
Da UCS charactas 0x0000 ta 0x007f is identical ta dem of the
classic
.B US-ASCII
characta set n' tha charactas up in tha range 0x0000 ta 0x00ff
are identical ta dem in
.BR "ISO 8859-1 Latin-1" .
.SS Combinin characters
Some code points in
.B UCS
have been assigned to
.IR "combinin characters" .
These is similar ta tha nonspacin accent keys on a typewriter.
A combinin characta just addz a accent ta tha previous character.
Da most blingin accented charactas have codez of they own up in UCS,
however, tha combinin characta mechanizzle allows our asses ta add accents
and other diacritical marks ta any character.
Da combinin characters
always follow tha characta which they modify.
For example, tha German
characta Umlaut-A ("Latin capital letta A wit diaeresis") can
either be represented by tha precomposed UCS code 0x00c4, or
alternatively as tha combination of a aiiight "Latin capital letta A"
followed by a "combinin diaeresis": 0x0041 0x0308.
.PP
Combinin charactas is essential fo' instizzle fo' encodin tha Thai
script or fo' mathematical typesettin n' playaz of tha International
Phonetic Alphabet.
.SS Implementation levels
As not all systems is sposed ta fuckin support advanced mechanizzlez like
combinin characters, ISO 10646-1 specifies tha followin three
.I implementation levels
of UCS:
.TP 0.9i
Level 1
Combinin charactas and
.B Hangul Jamo
(a variant encodin of tha Korean script, where a Hangul syllable
glyph is coded as a triplet or pair of vovel/consonant codes) is not
supported.
.TP
Level 2
In addizzle ta level 1, combinin charactas is now allowed fo' some
languages where they is essential (e.g., Thai, Lao, Hebrew,
Arabic, Devanagari, Malayalam).
.TP
Level 3
All
.B UCS
charactas is supported.
.PP
The
.B Unicode 3.0 Standard
published by the
.B Unicode Consortium
gotz nuff exactly the
.B UCS Basic Multilingual Plane
at implementation level 3, as busted lyrics bout up in ISO 10646-1:2000.
.B Unicode 3.1
added tha supplemenstrual planez of ISO 10646-2.
Da Unicode standard and
technical reports published by tha Unicode Consortium provide much
additionizzle shiznit on tha semantics n' recommended usages of
various characters.
They provide guidelines n' algorithms for
editing, sorting, comparing, normalizing, convertin n' displaying
Unicode strings.
.SS Unicode under Linux
Under GNU/Linux, tha C type
.I wchar_t
is a signed 32-bit integer type.
Its joints is always interpreted
by tha C library as
.B UCS
code joints (in all locales), a cold-ass lil convention dat is signaled by tha GNU
C library ta applications by definin tha constant
.B __STDC_ISO_10646__
as specified up in tha ISO C99 standard.

UCS/Unicode can be used just like ASCII up in input/output streams,
terminal communication, plaintext files, filenames, n' environment
variablez up in tha ASCII compatible
.B UTF-8
multibyte encoding.
To signal tha use of UTF-8 as tha character
encodin ta all applications, a suitable
.I locale
has ta be selected via environment variablez (e.g.,
"LANG=en_GB.UTF-8").
.PP
The
.B nl_langinfo(CODESET)
function returns tha name of tha selected encoding.
Library functions such as
.BR wctomb (3)
and
.BR mbsrtowcs (3)
can be used ta transform tha internal
.I wchar_t
charactas n' strings tha fuck into tha system characta encodin n' back
and
.BR wcwidth (3)
tells, how tha fuck nuff positions (0\(en2) tha cursor be advanced by the
output of a cold-ass lil character.
.PP
Under Linux, up in general only tha BMP at implementation level 1 should
be used all up in tha moment.
Up ta two combinin charactas per base
characta fo' certain scripts (in particular Thai) is also supported
by some UTF-8 terminal emulators n' ISO 10646 fonts (level 2) yo, but in
general precomposed charactas should be preferred where available
(Unicode calls this
.BR "Normalization Form C" ).
.SS Private area
In the
.BR BMP ,
the range 0xe000 ta 0xf8ff aint NEVER gonna be assigned ta any charactas by
the standard n' is reserved fo' private usage.
For tha Linux
community, dis private area has been subdivided further tha fuck into the
range 0xe000 ta 0xefff which can be used individually by any end-user
and tha Linux unit up in tha range 0xf000 ta 0xf8ff where extensions are
coordinated among all Linux users.
Da registry of tha characters
assigned ta tha Linux unit is currently maintained by H. Peta Anvin
<Peter.Anvin@linux.org>.
.SS Literature
.TP 0.2i
*
Hype technologizzle \(em Universal Multiple-Octet Coded Character
Set (UCS) \(em Part 1: Architecture n' Basic Multilingual Plane.
Internationistic Standard ISO/IEC 10646-1, Internationistic Organization
for Standardization, Geneva, 2000.

This is tha straight-up legit justification of
.BR UCS .
Available as a PDF file on CD-ROM from
.UR http://www.iso.ch/
.UE .
.TP
*
Da Unicode Standard, Version 3.0.
Da Unicode Consortium, Addison-Wesley,
Reading, MA, 2000, ISBN 0-201-61633-5.
.TP
*
S yo. Harbison, G. Right back up in yo muthafuckin ass. Steele. C: A Reference Manual. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Fourth edition,
Prentice Hall, Englewood Cliffs, 1995, ISBN 0-13-326224-3.

A phat reference book bout tha C programmin language.
Da fourth
edizzle covers tha 1994 Amendment 1 ta tha ISO C90 standard, which
addz a big-ass number of freshly smoked up C library functions fo' handlin wide and
multibyte characta encodings yo, but it do not yet cover ISO C99,
which improved wide n' multibyte characta support even further.
.TP
*
Unicode Technical Reports.
.RS
.UR http://www.unicode.org\:/unicode\:/reports/
.UE
.RE
.TP
*
Markus Kuhn: UTF-8 n' Unicode FAQUIZZY fo' UNIX/Linux.
.RS
.UR http://www.cl.cam.ac.uk\:/~mgk25\:/unicode.html
.UE

Provides subscription shiznit fo' the
.I linux-utf8
mailin list, which is tha dopest place ta look fo' lyrics on using
Unicode under Linux.
.RE
.TP
*
Bruno Haible: Unicode HOWTO.
.RS
.UR ftp://ftp.ilog.fr\:/pub\:/Users\:/haible\:/utf8\:/Unicode-HOWTO.html
.UE
.RE
.SH BUGS
When dis playa page was last revised, tha GNU C Library support for
.B UTF-8
localez was mature n' XFree86 support was up in a advanced state yo, but
work on makin applications (most notably editors) suitable fo' use in
.B UTF-8
localez was still straight-up up in progress.
Current general
.B UCS
support under Linux probably serves up fo' CJK double-width characters
and sometimes even simple overstrikin combinin charactas yo, but
usually do not include support fo' scripts wit right-to-left
writin direction or ligature substitution requirements such as
Hebrew, Arabic, or tha Indic scripts.
These scripts is currently
supported only up in certain GUI applications (HTML viewers, word processors)
with sophisticated text renderin engines.
.\" .SH AUTHOR
.\" Markus Kuhn <mgk25@cl.cam.ac.uk>
.SH SEE ALSO
.BR setlocale (3),
.BR charsets (7),
.BR utf-8 (7)
.SH COLOPHON
This page is part of release 3.53 of tha Linux
.I man-pages
project.
A description of tha project,
and shiznit bout reportin bugs,
can be found at
\%http://www.kernel.org/doc/man\-pages/.
