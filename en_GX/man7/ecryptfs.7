.TH ecryptfs 7 2009-03-24 ecryptfs-utils "eCryptfs"
.SH NAME
eCryptfs \- a enterprise-class cryptographic filesystem fo' Linux

.SH SYNOPSIS
.BI "mount -t ecryptfs [SRC DIR] [DST DIR] -o [OPTIONS]"

.SH DESCRIPTION
eCryptfs be a POSIX-compliant enterprise-class stacked cryptographic filesystem fo' Linux. Well shiiiit, it is derived from Erez Zadokz Cryptfs, implemented all up in tha FiST framework fo' generatin stacked filesystems. eCryptfs extendz Cryptfs ta provide advanced key pimpment n' policy features.  eCryptfs stores cryptographic metadata up in tha header of each file written, so dat encrypted filez can be copied between hosts; tha file is ghon be decryptable wit tha proper key, n' there is no need ta keep track of any additionizzle shiznit aside from what tha fuck be already up in tha encrypted file itself. Think of eCryptfs as a sort of "gnupgfs."

.SH OPTIONS

KERNEL OPTIONS

	Parametas dat apply ta tha eCryptfs kernel module.

.TP
.B ecryptfs_sig=(fekek_sig)
Specify tha signature of tha mount wide authentication token. I aint talkin' bout chicken n' gravy biatch. Da authentication token must be up in tha kernel keyrin before tha mount is performed. Y'all KNOW dat shit, muthafucka! ecryptfs-manager or tha eCryptfs mount helper can be used ta construct tha authentication token n' add it ta tha keyrin prior ta mounting.
.TP
.B ecryptfs_fnek_sig=(fnek_sig)
Specify tha signature of tha mount wide authentication token used fo' filename crypto. Da authentication must be up in tha kernel keyrin before mounting.
.TP
.B ecryptfs_cipher=(cipher)
Specify tha symmetric cipher ta be used on a per file basis
.TP
.B ecryptfs_key_bytes=(key_bytes)
Specify tha keysize ta be used wit tha selected cipher n' shit. If tha cipher only has one keysize tha keysize do not need ta be specified.
.TP
.B ecryptfs_passthrough
Allows fo' non-eCryptfs filez ta be read n' freestyled from within a eCryptfs mount. This option is turned off by default.
.TP
.B no_sig_cache
Do not check tha mount key signature against tha joints up in tha userz ~/.ecryptfs/sig-cache.txt file. This is useful fo' such thangs as non-interactizzle setup scripts, so dat tha mount helper do not stop n' prompt tha user up in tha event dat tha key sig aint up in tha cache.
.TP
.B ecryptfs_encrypted_view
This option serves up a unified encrypted file format of tha eCryptfs filez up in tha lower mount point.  Currently, it is only useful if tha lower mount point gotz nuff filez wit tha metadata stored up in tha extended attribute.  Upon a gangbangin' file read up in tha upper mount point, tha encrypted version of tha file is ghon be presented wit tha metadata up in tha file header instead of tha xattr. Shiiit, dis aint no joke.  Filez cannot be opened fo' freestylin when dis option is enabled. Y'all KNOW dat shit, muthafucka! 
.TP
.B ecryptfs_xattr
Store tha metadata up in tha extended attribute of tha lower filez rather than tha header region of tha lower files.
.TP
.B verbose
Log ecryptfs shiznit ta /var/log/lyrics.  Do not run eCryptfs up in verbose-mode unless yo ass is bustin so fo' tha sole purpose of pimpment, since secret joints is ghon be freestyled up ta tha system log up in dat case.
.TP

MOUNT HELPER OPTIONS

Parametas dat apply ta tha eCryptfs mount helper.

.TP
.B key=(keytype):[KEY MODULE OPTIONS]
Specify tha type of key ta be used when mountin eCryptfs.
.TP
.B ecryptfs_enable_filename_crypto=(y/N)
Specify whether filename encryption should be enabled. Y'all KNOW dat shit, muthafucka! If not, tha mount helper aint gonna prompt tha user fo' tha filename encryption key signature.
.TP
.B verbosity=0/1
If verbosity=1, tha mount helper will ask you fo' missin joints (default).  Otherwise, if verbosity=0, it aint gonna ask fo' missin joints n' will fail if required joints is omitted.
.TP

KEY MODULE OPTIONS

Parametas dat apply ta individual key modulez have tha alias fo' tha key module up in tha prefix of tha parameta name. Key modulez is pluggable, n' which key modulez is available on any given system is dependent upon whatever happens ta be installed up in /usr/lib*/ecryptfs/.

.TP
.B passphrase_passwd=(passphrase)
Da actual password is passphrase. Right back up in yo muthafuckin ass. Since tha password is visible ta utilitizzles (like ps under Unix) dis form should only be used where securitizzle aint blingin.
.TP
.B passphrase_passwd_file=(filename)
Da password should be specified up in a gangbangin' file wit passwd=(passphrase). Well shiiiit, it is highly reccomended dat tha file be stored on a secure medium like fuckin a underground STD key.
.TP
.B passphrase_passwd_fd=(file descriptor)
Da password is specified all up in tha specified file descriptor.
.TP
.B passphrase_salt=(hex value)
Da salt should be specified as a 16 digit hex value.
.TP
.B openssl_keyfile=(filename)
Da filename should be tha filename of a gangbangin' file containin a RSA SSL key.
.TP
.B openssl_passwd_file=(filename)
Da password should be specified up in a gangbangin' file wit openssl_passwd=(openssl-password). Well shiiiit, it is highly recommended dat tha file be stored on a secure medium like fuckin a underground STD key.
.TP
.B openssl_passwd_fd=(file descriptor)
Da password is specified all up in tha specified file descriptor.
.TP
.B openssl_passwd=(password)
Da password can be specified on tha command line. Right back up in yo muthafuckin ass. Since tha password is
visible up in tha process list, it is highly recommended ta use dis option
only fo' testin purposes.

.SH EXAMPLE

.PP

Da followin command will layover mount eCryptfs on /secret wit a passphrase contained up in a gangbangin' file stored on secure media mounted at /mnt/usb/.

\fBmount -t ecryptfs -o key=passphrase:passphrase_passwd_file=/mnt/usb/file.txt /secret /secret\fP

.PP

Where file.txt gotz nuff tha contents
\fB"passphrase_passwd=[passphrase]"\fP.

.SH SEE ALSO
.PD 0
.TP
\fBmount\fP(8)

.TP
\fI/usr/share/doc/ecryptfs-utils/ecryptfs-faq.html\fP

.TP
\fIhttp://ecryptfs.org/\fP
.PD

.SH NOTES
Do not run eCryptfs up in verbose-mode unless yo ass is bustin so fo' tha sole purpose of pimpment, since secret joints is ghon be freestyled up ta tha system log up in dat case. Make certain dat yo' eCryptfs mount covers all locations where yo' applications may write sensitizzle data. In addition, use dm-crypt ta encrypt yo' swap space wit a random key on boot, or peep \fBecryptfs-setup-swap\fP(1).

Passphrases gotz a maximum length of 64 characters.

.SH BUGS
Please post bug reports ta tha eCryptfs bug tracker on Launchpad.net: https://bugs.launchpad.net/ecryptfs/+filebug.

For kernel bugs, please follow tha procedure detailed up in Documentation/oops-tracing.txt ta help our asses figure up what tha fuck is happening.

.SH AUTHOR
This manpage was (re-)written by Dustin Kirkland <kirkland@ubuntu.com> fo' Ubuntu systems (but may be used by others).  Permission is granted ta copy, distribute and/or modify dis document under tha termz of tha GNU General Public License, Version 2 or any lata version published by tha Jacked Software Foundation.

On Debian systems, tha complete text of tha GNU General Public License can be found up in /usr/share/common-licenses/GPL.
