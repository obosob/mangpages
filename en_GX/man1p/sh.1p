.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SH" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sh 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sh \- shell, tha standard command language interpreter
.SH SYNOPSIS
.LP
\fBsh\fP \fB[\fP\fB-abCefhimnuvx\fP\fB][\fP\fB-o\fP \fIoption\fP\fB][\fP\fB+abCefhimnuvx\fP\fB][\fP\fB+o\fP
\fIoption\fP\fB]
.br
\fP \fB\ \ \ \ \ \ \fP \fB[\fP\fIcommand_file\fP \fB[\fP\fIargument\fP\fB...\fP\fB]]\fP\fB
.br
.sp
sh -c\fP\fB[\fP\fB-abCefhimnuvx\fP\fB][\fP\fB-o\fP \fIoption\fP\fB][\fP\fB+abCefhimnuvx\fP\fB][\fP\fB+o\fP
\fIoption\fP\fB]\fP\fIcommand_string
.br
\fP \fB\ \ \ \ \ \ \fP \fI\fP\fB[\fP\fIcommand_name\fP
\fB[\fP\fIargument\fP\fB...\fP\fB]]\fP\fB
.br
.sp
sh -s\fP\fB[\fP\fB-abCefhimnuvx\fP\fB][\fP\fB-o\fP \fIoption\fP\fB][\fP\fB+abCefhimnuvx\fP\fB][\fP\fB+o\fP
\fIoption\fP\fB][\fP\fIargument\fP\fB]\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsh\fP utilitizzle be a cold-ass lil command language interpreta dat shall
execute commandz read from a cold-ass lil command line string, the
standard input, or a specified file. Da application shall ensure
that tha commandz ta be executed is expressed up in tha language
busted lyrics bout up in \fIShell Command Language\fP .
.LP
Pathname expansion shall not fail cuz of tha size of a gangbangin' file.
.LP
Shell input n' output redirections have a implementation-defined
offset maximum dat is established up in tha open file
description.
.SH OPTIONS
.LP
Da \fIsh\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines,
with a extension fo' support of a leading
plus sign ( \fB'+'\fP ) as noted below.
.LP
Da \fB-a\fP, \fB-b\fP, \fB-C\fP, \fB-e\fP, \fB-f\fP, \fB-m\fP, \fB-n\fP,
\fB-o\fP \fIoption\fP, \fB-u\fP, \fB-v\fP,
and \fB-x\fP options is busted lyrics bout as part of tha \fIset\fP utility
in \fISpecial Built-In Utilities\fP . Da option lettas derived from
the \fIset\fP special built-in shall also be accepted wit a leading
plus sign ( \fB'+'\fP )
instead of a leadin hyphen (meanin tha reverse case of tha option
as busted lyrics bout up in dis volume of
IEEE\ Std\ 1003.1-2001).
.LP
Da followin additionizzle options shall be supported:
.TP 7
\fB-c\fP
Read commandz from tha \fIcommand_string\fP operand. Y'all KNOW dat shit, muthafucka! Set tha value
of special parameta 0 (see \fISpecial Parameters\fP ) from tha value
of tha \fIcommand_name\fP operand n' tha positional
parametas ($1, $2, n' so on) up in sequence from tha remainin \fIargument\fP
operands. No commandz shall be read from tha standard
input.
.TP 7
\fB-i\fP
Specify dat tha shell is \fIinteractive\fP; peep below fo' realz. An implementation
may treat specifyin tha \fB-i\fP option as an
error if tha real user ID of tha callin process do not equal the
effectizzle user ID or if tha real crew ID do not equal the
effectizzle crew ID.
.TP 7
\fB-s\fP
Read commandz from tha standard input.
.sp
.LP
If there be no operandz n' tha \fB-c\fP option aint specified,
the \fB-s\fP option shall be assumed.
.LP
If tha \fB-i\fP option is present, or if there be no operandz and
the shellz standard input n' standard error is attached
to a terminal, tha shell is considered ta be \fIinteractive\fP.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fB-\fP
A single hyphen shall be treated as tha straight-up original gangsta operand n' then ignored.
If both \fB'-'\fP n' \fB"--"\fP is given as
arguments, or if other operandz precede tha single hyphen, tha thangs up in dis biatch
are undefined.
.TP 7
\fIargument\fP
Da positionizzle parametas ($1, $2, n' so on) shall be set ta \fIarguments\fP,
if any.
.TP 7
\fIcommand_file\fP
Da pathname of a gangbangin' file containin commands. If tha pathname gotz nuff
one or mo' slash characters, tha implementation attempts
to read dat file; tha file need not be executable. If tha pathname
does not contain a slash character: 
.RS
.IP " *" 3
Da implementation shall attempt ta read dat file from tha current
workin directory; tha file need not be executable.
.LP
.IP " *" 3
If tha file aint up in tha current hustlin directory, tha implementation
may big-ass up a search fo' a executable file rockin the
value of \fIPATH\fP,  as busted lyrics bout up in \fICommand Search n' Execution\fP
\&.
.LP
.RE
.LP
Special parameta 0 (see \fISpecial Parameters\fP ) shall be set to
the value of
\fIcommand_file\fP. If \fIsh\fP is called rockin a synopsis form that
omits \fIcommand_file\fP, special parameta 0 shall be set
to tha value of tha straight-up original gangsta argument passed ta \fIsh\fP from its parent
(for example, \fIargv\fP[0] fo' a C program), which is
normally a pathname used ta execute tha \fIsh\fP utility.
.TP 7
\fIcommand_name\fP
.sp
A strang assigned ta special parameta 0 when executin tha commands
in \fIcommand_string\fP. If \fIcommand_name\fP is not
specified, special parameta 0 shall be set ta tha value of tha first
argument passed ta \fIsh\fP from its parent (for example,
\fIargv\fP[0] fo' a C program), which is normally a pathname used
to execute tha \fIsh\fP utility.
.TP 7
\fIcommand_string\fP
.sp
A strang dat shall be interpreted by tha shell as one or mo' commands,
as if tha strang was tha argument ta tha \fIsystem\fP() function
defined up in tha System Interfaces volume of IEEE\ Std\ 1003.1-2001.
If tha \fIcommand_string\fP operand be a empty string, \fIsh\fP shall
exit wit a zero exit status.
.sp
.SH STDIN
.LP
Da standard input shall be used only if one of tha followin is true:
.IP " *" 3
Da \fB-s\fP option is specified.
.LP
.IP " *" 3
Da \fB-c\fP option aint specified n' no operandz is specified.
.LP
.IP " *" 3
Da script executes one or mo' commandz dat require input from standard
input (like fuckin a \fIread\fP command dat do not redirect its input).
.LP
.LP
See tha INPUT FILES section.
.LP
When tha shell is rockin standard input n' it invokes a cold-ass lil command that
also uses standard input, tha shell shall ensure dat the
standard input file pointa points directly afta tha command it has
read when tha command begins execution. I aint talkin' bout chicken n' gravy biatch. Well shiiiit, it shall not read
ahead up in such a manner dat any charactas intended ta be read by
the invoked command is consumed by tha shell (whether
interpreted by tha shell or not) or dat charactas dat is not read
by tha invoked command is not peeped by tha shell. When the
command expectin ta read standard input is started asynchronously
by a interactizzle shell, it is unspecified whether characters
are read by tha command or interpreted by tha shell.
.LP
If tha standard input ta \fIsh\fP be a FIFO or terminal thang and
is set ta non-blockin reads, then \fIsh\fP shall enable
blockin readz on standard input. This shall remain up in effect when
the command completes.
.SH INPUT FILES
.LP
Da input file shall be a text file, except dat line lengths shall
be unlimited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha input file is empty or consists solely
of blank lines or comments, or both, \fIsh\fP shall exit wit a zero
exit status.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIsh\fP:
.TP 7
\fIENV\fP
This variable, when n' only when a interactizzle shell is invoked,
shall be subjected ta parameta expansion (see \fIParameta Expansion\fP
) by tha shell, n' tha resultin value shall be used as a pathname
of a gangbangin' file containin shell commandz ta execute up in tha current environment.
Da file need not be executable. If tha expanded value
of \fIENV\fP aint a absolute pathname, tha thangs up in dis biatch is unspecified.
\fIENV\fP shall be ignored if tha real n' effectizzle user
IDs or real n' effectizzle crew IDz of tha process is different.
.TP 7
\fIFCEDIT\fP
This variable, when expanded by tha shell, shall determine tha default
value fo' tha \fB-e\fP \fIeditor\fP option's
\fIeditor\fP option-argument. If \fIFCEDIT\fP is null or unset, \fIed\fP
shall be used as the
editor. Shiiit, dis aint no joke. This volume of IEEE\ Std\ 1003.1-2001 specifies tha effects
of dis variable only fo' systems supportin tha User
Portabilitizzle Utilitizzles option.
.TP 7
\fIHISTFILE\fP
Determine a pathname namin a cold-ass lil command history file. If tha \fIHISTFILE\fP
variable aint set, tha shell may attempt ta access
or create a gangbangin' file \fB.sh_history\fP up in tha directory referred ta by
the \fIHOME\fP environment variable. If tha shell cannot
obtain both read n' write access to, or create, tha history file,
it shall use a unspecified mechanizzle dat allows tha history to
operate properly. (References ta history "file" up in dis section shall
be understood ta mean dis unspecified mechanizzle up in such
cases.) An implementation may chizzle ta access dis variable only
when initializin tha history file; dis initialization shall
occur when \fIfc\fP or \fIsh\fP first attempt ta retrieve entries
from, or add entries to, the
file, as tha result of commandz issued by tha user, tha file named
by tha \fIENV\fP variable, or implementation-defined system
start-up files. Implementations may chizzle ta disable tha history
list mechanizzle fo' playas wit appropriate privileges whoz ass do not
set \fIHISTFILE ;\fP tha specific circumstances under which dis occurs
are implementation-defined. Y'all KNOW dat shit, muthafucka! If mo' than one instizzle of
the shell is rockin tha same history file, it is unspecified how tha fuck thugged-out shit
to tha history file from dem shells interact fo' realz. As entries
are deleted from tha history file, they shall be deleted crazy oldschool first.
It be unspecified when history file entries is physically
removed from tha history file. This volume of IEEE\ Std\ 1003.1-2001
specifies tha effectz of dis variable only for
systems supportin tha User Portabilitizzle Utilitizzles option.
.TP 7
\fIHISTSIZE\fP
Determine a thugged-out decimal number representin tha limit ta tha number of
previous commandz dat is accessible. If dis variable is
unset, a unspecified default pimped outa than or equal ta 128 shall be
used. Y'all KNOW dat shit, muthafucka! Da maximum number of commandz up in tha history list is
unspecified yo, but shall be at least 128 fo' realz. An implementation may chizzle
to access dis variable only when initializin tha history
file, as busted lyrics bout under \fIHISTFILE\fP.  Therefore, it is unspecified
whether chizzlez made ta \fIHISTSIZE\fP afta tha history
file has been initialized is effective.
.TP 7
\fIHOME\fP
Determine tha pathname of tha userz home directory. Da contents
of \fIHOME\fP is used up in tilde expansion as busted lyrics bout up in \fITilde
Expansion\fP . This volume of IEEE\ Std\ 1003.1-2001 specifies the
effectz of dis variable only fo' systems supportin tha User Portability
Utilitizzles option.
.TP 7
\fIIFS\fP
(Input Field Separators.) A strang treated as a list of characters
that shall be used fo' field splittin n' ta split lines
into lyrics wit tha \fIread\fP command. Y'all KNOW dat shit, muthafucka! See \fIField
Splitting\fP . If \fIIFS\fP aint set, tha shell shall behave as
if tha value of \fIIFS\fP was <space>, <tab>,
and <newline>. Implementations may ignore tha value of \fIIFS\fP in
the environment all up in tha time \fIsh\fP is invoked,
treatin \fIIFS\fP as if it was not set.
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha behavior of range expressions, equivalence classes,
and multi-characta collatin elements within pattern
matching.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files), which
charactas is defined as lettas (characta class
\fBalpha\fP), n' tha behavior of characta classes within pattern
matching.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fIMAIL\fP
Determine a pathname of tha userz mailbox file fo' purposez of incoming
mail notification. I aint talkin' bout chicken n' gravy biatch. If dis variable is set, tha shell
shall inform tha user if tha file named by tha variable is pimped
or if its modification time has chizzled. Y'all KNOW dat shit, muthafucka! Informin tha user
shall be accomplished by freestylin a strang of unspecified format to
standard error prior ta tha freestylin of tha next primary prompt
string. Right back up in yo muthafuckin ass. Such check shall be performed only afta tha completion of
the interval defined by tha \fIMAILCHECK\fP variable afta the
last such check. Da user shall be informed only if \fIMAIL\fP is
set n' \fIMAILPATH\fP aint set. This volume of
IEEE\ Std\ 1003.1-2001 specifies tha effectz of dis variable only
for systems supportin tha User Portabilitizzle Utilities
option.
.TP 7
\fIMAILCHECK\fP
.sp
Establish a thugged-out decimal integer value dat specifies how tha fuck often (in seconds)
the shell shall check fo' tha arrival of mail up in tha files
specified by tha \fIMAILPATH\fP or \fIMAIL\fP variables. Da default
value shall be 600 seconds. If set ta zero, tha shell shall
check before issuin each primary prompt. This volume of IEEE\ Std\ 1003.1-2001
specifies tha effectz of dis variable only
for systems supportin tha User Portabilitizzle Utilitizzles option.
.TP 7
\fIMAILPATH\fP
Provide a list of pathnames n' optionizzle lyrics separated by colons.
If dis variable is set, tha shell shall inform tha user
if any of tha filez named by tha variable is pimped or if any of
their modification times chizzle. (See tha precedin entry for
\fIMAIL\fP fo' descriptionz of mail arrival n' user informing.) Each
pathname can be followed by \fB'%'\fP n' a strang that
shall be subjected ta parameta expansion n' freestyled ta standard
error when tha modification time chizzles. If a \fB'%'\fP
characta up in tha pathname is preceded by a funky-ass backslash, it shall be
treated as a literal \fB'%'\fP up in tha pathname. Da default
message is unspecified. Y'all KNOW dat shit, muthafucka! 
.LP
Da \fIMAILPATH\fP environment variable takes precedence over the
\fIMAIL\fP variable. This volume of
IEEE\ Std\ 1003.1-2001 specifies tha effectz of dis variable only
for systems supportin tha User Portabilitizzle Utilities
option.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fIPATH\fP
Establish a strang formatted as busted lyrics bout up in tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, Chapta 8, Environment Variables,
used ta effect command interpretation; peep \fICommand Search n' Execution\fP
\&.
.TP 7
\fIPWD\fP
This variable shall represent a absolute pathname of tha current
workin directory fo' realz. Assignments ta dis variable may be
ignored unless tha value be a absolute pathname of tha current working
directory n' there be no filename componentz of dot or
dot-dot.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
See tha STDERR section.
.SH STDERR
.LP
Except as otherwise stated (by tha descriptionz of any invoked utilities
or up in interactizzle mode), standard error shall be used
only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
See \fIShell Command Language\fP . Da followin additionizzle capabilities
are supported on
systems supportin tha User Portabilitizzle Utilitizzles option.
.SS Command History List
.LP
When tha \fIsh\fP utilitizzle is bein used interactively, it shall maintain
a list of commandz previously entered from the
terminal up in tha file named by tha \fIHISTFILE\fP environment variable.
Da type, size, n' internal format of dis file are
unspecified. Y'all KNOW dat shit, muthafucka! Multiple \fIsh\fP processes can share access ta tha file
for a user, if file access permissions allow this; peep the
description of tha \fIHISTFILE\fP environment variable.
.SS Command Line Editing
.LP
When \fIsh\fP is bein used interactively from a terminal, tha current
command n' tha command history (see \fIfc\fP ) can be edited using
\fIvi\fP-mode command line editing. This mode
uses commands, busted lyrics bout below, similar ta a subset of dem busted lyrics about
in tha \fIvi\fP utility.
Implementations may offer other command line editin modes corresponding
to other editin utilities.
.LP
Da command \fIset\fP \fB-o\fP \fIvi\fP
shall enable \fIvi\fP-mode editin n' place \fIsh\fP tha fuck into \fIvi\fP
insert mode (see Command Line Editin (vi-mode) ). This
command also shall disable any other editin mode dat tha implementation
may provide. Da command \fIset\fP \fB+o\fP \fIvi\fP disablez \fIvi\fP-mode
editing.
.LP
Certain block-mode terminals may be unable ta support shell command
line editing. If a terminal is unable ta provide either edit
mode, it need not be possible ta \fIset\fP \fB-o\fP \fIvi\fP when
usin tha shell on dis terminal.
.LP
In tha followin sections, tha charactas \fIerase\fP, \fIinterrupt\fP,
\fIkill\fP, n' \fIend-of-file\fP is dem set by
the \fIstty\fP utility.
.SS Command Line Editin (vi-mode)
.LP
In \fIvi\fP editin mode, there shall be a gangbangin' finger-lickin' distinguished line, the
edit line fo' realz. All the
editin operations which modify a line affect tha edit line. Da edit
line be always tha newest line up in tha command history
buffer.
.LP
With \fIvi\fP-mode enabled, \fIsh\fP can be switched between insert
mode n' command
mode.
.LP
When up in bang mode, a entered characta shall be banged tha fuck into the
command line, except as noted up in vi Line Editin Insert Mode . Upon
enterin \fIsh\fP n' afta termination of tha previous command,
\fIsh\fP shall be up in bang mode.
.LP
Typin a escape characta shall switch \fIsh\fP tha fuck into command mode
(see vi Line Editin Command
Mode ). In command mode, a entered characta shall either invoke
a defined operation, be used as part of a multi-character
operation, or be treated as a error fo' realz. A characta dat aint recognized
as part of a editin command shall terminizzle any specific
editin command n' shall alert tha terminal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Typin tha \fIinterrupt\fP
characta up in command mode shall cause \fIsh\fP to
terminizzle command line editin on tha current command line, reissue
the prompt on tha next line of tha terminal, n' reset the
command history (see \fIfc\fP ) so dat da most thugged-out recently executed
command is tha previous command (that is,
the command dat was bein edited when dat shiznit was interrupted aint reentered
into tha history).
.LP
In tha followin sections, tha phrase "move tha cursor ta tha beginning
of tha word" shall mean "move tha cursor ta tha first
characta of tha current word" n' tha phrase "move tha cursor to
the end of tha word" shall mean "move tha cursor ta tha last
characta of tha current word". Da phrase "beginnin of tha command
line" indicates tha point between tha end of tha prompt
strin issued by tha shell (or tha beginnin of tha terminal line,
if there is no prompt string) n' tha straight-up original gangsta characta of the
command text.
.SS vi Line Editin Insert Mode
.LP
While up in bang mode, any characta typed shall be banged up in the
current command line, unless it is from tha following
set.
.TP 7
<newline>
Execute tha current command line. If tha current command line is not
empty, dis line shall be entered tha fuck into tha command history
(see \fIfc\fP ).
.TP 7
\fIerase\fP
Delete tha characta previous ta tha current cursor posizzle n' move
the current cursor posizzle back one character n' shit. In insert
mode, charactas shall be erased from both tha screen n' tha buffer
when backspacing.
.TP 7
\fIinterrupt\fP
Terminizzle command line editin wit tha same effects as busted lyrics about
for interruptin command mode; peep Command Line Editin (vi-mode)
\&.
.TP 7
\fIkill\fP
Clear all tha charactas from tha input line.
.TP 7
<control>-V
Insert tha next characta input, even if tha characta is otherwise
a special bang mode character.
.TP 7
<control>-W
Delete tha charactas from tha one precedin tha cursor ta tha preceding
word boundary. Da word boundary up in dis case is the
closer ta tha cursor of either tha beginnin of tha line or a cold-ass lil character
that is up in neither tha \fBblank\fP nor \fBpunct\fP
characta classification of tha current locale.
.TP 7
\fIend-of-file\fP
Interpreted as tha end of input up in \fIsh\fP. This interpretation shall
occur only all up in tha beginnin of a input line. If
\fIend-of-file\fP is entered other than all up in tha beginnin of tha line,
the thangs up in dis biatch is unspecified.
.TP 7
<ESC>
Place \fIsh\fP tha fuck into command mode.
.sp
.SS vi Line Editin Command Mode
.LP
In command mode fo' tha command line editin feature, decimal digits
not beginnin wit 0 dat precede a cold-ass lil command letta shall be
remembered. Y'all KNOW dat shit, muthafucka! Some commandz use these decimal digits as a cold-ass lil count number
that affects tha operation.
.LP
Da term \fImotion command\fP represents one of tha commands:
.sp
.RS
.nf

\fB<space>  0  b  F  l  W  ^  $  ;  E  f  T  w  |  ,  B  e  h  t
\fP
.fi
.RE
.LP
If tha current line aint tha edit line, any command dat modifies
the current line shall cause tha content of tha current line
to replace tha content of tha edit line, n' tha current line shall
become tha edit line. This replacement cannot be undone (see
the \fBu\fP n' \fBU\fP commandz below). Da modification requested
shall then be performed ta tha edit line. When tha current
line is tha edit line, tha modification shall be done directly to
the edit line.
.LP
Any command dat is preceded by \fIcount\fP shall take a cold-ass lil count (the
numeric value of any precedin decimal digits). Unless
otherwise noted, dis count shall cause tha specified operation to
repeat by tha number of times specified by tha count fo' realz. Also
unless otherwise noted, a \fIcount\fP dat is outta range is considered
an error condizzle n' shall alert tha terminal yo, but
neither tha cursor position, nor tha command line, shall chizzle.
.LP
Da terms \fIword\fP n' \fIbigword\fP is used as defined up in the
\fIvi\fP description.
Da term \fIsave buffer\fP correspondz ta tha term \fIunnamed buffer\fP
in \fIvi\fP.
.LP
Da followin commandz shall be recognized up in command mode:
.TP 7
<newline>
Execute tha current command line. If tha current command line is not
empty, dis line shall be entered tha fuck into tha command history
(see \fIfc\fP ).
.TP 7
<control>-L
Redraw tha current command line. Posizzle tha cursor all up in tha same location
on tha redrawn line.
.TP 7
\fB#\fP
Insert tha characta \fB'#'\fP all up in tha beginnin of tha current command
line n' treat tha resultin edit line as a cold-ass lil comment.
This line shall be entered tha fuck into tha command history; peep \fIfc\fP
\&.
.TP 7
\fB=\fP
Display tha possible shell word expansions (see \fIWord Expansions\fP
) of tha bigword
at tha current command line position. I aint talkin' bout chicken n' gravy biatch.  
.TP 7
\fBNote:\fP
.RS
This do not modify tha content of tha current line, n' therefore
does not cause tha current line ta become tha edit
line.
.RE
.sp
.LP
These expansions shall be displayed on subsequent terminal lines.
If tha bigword gotz nuff none of tha charactas \fB'?'\fP,
\fB'*'\fP, or \fB'['\fP, a asterisk ( \fB'*'\fP ) shall be implicitly
assumed all up in tha end yo, but it ain't no stoppin cause I be still poppin'. If any directories are
matched, these expansions shall gotz a \fB'/'\fP characta appended.
Afta tha expansion, tha line shall be redrawn, tha cursor
repositioned all up in tha current cursor position, n' \fIsh\fP shall be
placed up in command mode.
.TP 7
\fB\\\fP
Perform pathname expansion (see \fIPathname Expansion\fP ) on the
current bigword,
up ta tha phattest set of charactas dat can be matched uniquely.
If tha bigword gotz nuff none of tha charactas \fB'?'\fP,
\fB'*'\fP, or \fB'['\fP, a asterisk ( \fB'*'\fP ) shall be implicitly
assumed all up in tha end yo, but it ain't no stoppin cause I be still poppin'. This maximal expansion then
shall replace tha original gangsta bigword up in tha command line, n' tha cursor
shall be placed afta dis expansion. I aint talkin' bout chicken n' gravy biatch. If tha resulting
bigword straight-up n' uniquely matches a gangbangin' finger-lickin' directory, a \fB'/'\fP character
shall be banged directly afta tha bigword. Y'all KNOW dat shit, muthafucka! If some
other file is straight-up matched, a single <space> shall be inserted
afta tha bigword. Y'all KNOW dat shit, muthafucka! Afta dis operation, \fIsh\fP shall
be placed up in bang mode.
.TP 7
\fB*\fP
Perform pathname expansion on tha current bigword n' bang all expansions
into tha command ta replace tha current bigword,
with each expansion separated by a single <space>. If all up in tha end of
the line, tha current cursor posizzle shall be moved to
the first column posizzle followin tha expansions n' \fIsh\fP shall
be placed up in bang mode. Otherwise, tha current cursor
posizzle shall be tha last column posizzle of tha straight-up original gangsta character
afta tha expansions n' \fIsh\fP shall be placed up in insert
mode. If tha current bigword gotz nuff none of tha charactas \fB'?'\fP,
\fB'*'\fP, or \fB'['\fP, before tha operation,
an asterisk shall be implicitly assumed all up in tha end.
.TP 7
\fB@\fP\fIletter\fP
Insert tha value of tha alias named \fI_letter\fP. Da symbol \fIletter\fP
represents a single alphabetic characta from the
portable characta set; implementations may support additionizzle characters
as a extension. I aint talkin' bout chicken n' gravy biatch. If tha alias \fI_letter\fP gotz nuff
other editin commands, these commandz shall be performed as part
of tha insertion. I aint talkin' bout chicken n' gravy biatch. If no alias \fI_letter\fP is enabled, this
command shall have no effect.
.TP 7
\fB[\fP\fIcount\fP\fB]~\fP
Convert, if tha current characta be a lowercase letter, ta tha equivalent
uppercase letta n' \fIvice versa\fP, as
prescribed by tha current locale. Da current cursor posizzle then
shall be advanced by one character n' shit. If tha cursor was positioned
on tha last characta of tha line, tha case conversion shall occur,
but tha cursor shall not advance. If tha \fB'~'\fP
command is preceded by a \fIcount\fP, dat number of charactas shall
be converted, n' tha cursor shall be advanced ta the
characta posizzle afta tha last characta converted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha \fIcount\fP
is larger than tha number of charactas afta the
cursor, dis shall not be considered a error; tha cursor shall advance
to tha last characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB].\fP
Repeat da most thugged-out recent non-motion command, even if dat shiznit was executed
on a earlier command line. If tha previous command was
preceded by a \fIcount\fP, n' no count is given on tha \fB'.'\fP
command, tha count from tha previous command shall be
included as part of tha repeated command. Y'all KNOW dat shit, muthafucka! If tha \fB'.'\fP command
is preceded by a \fIcount\fP, dis shall override any
\fIcount\fP argument ta tha previous command. Y'all KNOW dat shit, muthafucka! Da \fIcount\fP specified
in tha \fB'.'\fP command shall become tha count for
subsequent \fB'.'\fP commandz issued without a cold-ass lil count.
.TP 7
\fB[\fP\fInumber\fP\fB]v\fP
Invoke tha \fIvi\fP editor ta edit tha current command line up in a temporary
file. When the
editor exits, tha commandz up in tha temporary file shall be executed
and placed up in tha command history. If a \fInumber\fP is
included, it specifies tha command number up in tha command history to
be edited, rather than tha current command line.
.TP 7
\fB[\fP\fIcount\fP\fB]l\fP\ \ \ (ell)
.TP 7
\fB[\fP\fIcount\fP\fB]\fP<space>
.sp
Move tha current cursor posizzle ta tha next characta position. I aint talkin' bout chicken n' gravy biatch. If
the cursor was positioned on tha last characta of tha line,
the terminal shall be alerted n' tha cursor shall not be advanced.
If tha \fIcount\fP is larger than tha number of characters
afta tha cursor, dis shall not be considered a error; tha cursor
shall advizzle ta tha last characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]h\fP
Move tha current cursor posizzle ta tha \fIcount\fPth (default 1)
previous characta position. I aint talkin' bout chicken n' gravy biatch. If tha cursor was positioned on
the first characta of tha line, tha terminal shall be alerted and
the cursor shall not be moved. Y'all KNOW dat shit, muthafucka! If tha count is larger than the
number of charactas before tha cursor, dis shall not be considered
an error; tha cursor shall move ta tha straight-up original gangsta characta on the
line.
.TP 7
\fB[\fP\fIcount\fP\fB]w\fP
Move ta tha start of tha next word. Y'all KNOW dat shit, muthafucka! If tha cursor was positioned on
the last characta of tha line, tha terminal shall be
alerted n' tha cursor shall not be advanced. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is
larger than tha number of lyrics afta tha cursor, dis shall
not be considered a error; tha cursor shall advizzle ta tha last character
on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]W\fP
Move ta tha start of tha next bigword. Y'all KNOW dat shit, muthafucka! If tha cursor was positioned
on tha last characta of tha line, tha terminal shall be
alerted n' tha cursor shall not be advanced. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is
larger than tha number of bigwordz afta tha cursor, this
shall not be considered a error; tha cursor shall advizzle ta the
last characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]e\fP
Move ta tha end of tha current word. Y'all KNOW dat shit, muthafucka! If all up in tha end of a word, move
to tha end of tha next word. Y'all KNOW dat shit, muthafucka! If tha cursor was positioned on
the last characta of tha line, tha terminal shall be alerted and
the cursor shall not be advanced. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is larger
than tha number of lyrics afta tha cursor, dis shall not be considered
an error; tha cursor shall advizzle ta tha last characta on
the line.
.TP 7
\fB[\fP\fIcount\fP\fB]E\fP
Move ta tha end of tha current bigword. Y'all KNOW dat shit, muthafucka! If all up in tha end of a funky-ass bigword,
move ta tha end of tha next bigword. Y'all KNOW dat shit, muthafucka! If tha cursor was
positioned on tha last characta of tha line, tha terminal shall be
alerted n' tha cursor shall not be advanced. Y'all KNOW dat shit, muthafucka! If the
\fIcount\fP is larger than tha number of bigwordz afta tha cursor,
this shall not be considered a error; tha cursor shall
advizzle ta tha last characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]b\fP
Move ta tha beginnin of tha current word. Y'all KNOW dat shit, muthafucka! If all up in tha beginnin of
a word, move ta tha beginnin of tha previous word. Y'all KNOW dat shit, muthafucka! If the
cursor was positioned on tha straight-up original gangsta characta of tha line, tha terminal
shall be alerted n' tha cursor shall not be moved. Y'all KNOW dat shit, muthafucka! If the
\fIcount\fP is larger than tha number of lyrics precedin tha cursor,
this shall not be considered a error; tha cursor shall
return ta tha straight-up original gangsta characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]B\fP
Move ta tha beginnin of tha current bigword. Y'all KNOW dat shit, muthafucka! If all up in tha beginning
of a funky-ass bigword, move ta tha beginnin of tha previous bigword.
If tha cursor was positioned on tha straight-up original gangsta characta of tha line, the
terminal shall be alerted n' tha cursor shall not be moved.
If tha \fIcount\fP is larger than tha number of bigwordz preceding
the cursor, dis shall not be considered a error; tha cursor
shall return ta tha straight-up original gangsta characta on tha line.
.TP 7
\fB^\fP
Move tha current cursor posizzle ta tha straight-up original gangsta characta on tha input
line dat aint a <blank>.
.TP 7
\fB$\fP
Move ta tha last characta posizzle on tha current command line.
.TP 7
\fB0\fP
(Zero.) Move ta tha straight-up original gangsta characta posizzle on tha current command
line.
.TP 7
\fB[\fP\fIcount\fP\fB]|\fP
Move ta tha \fIcount\fPth characta posizzle on tha current command
line. If no number is specified, move ta tha first
position. I aint talkin' bout chicken n' gravy biatch. Da first characta posizzle shall be numbered 1. If the
count is larger than tha number of charactas on tha line, this
shall not be considered a error; tha cursor shall be placed on the
last characta on tha line.
.TP 7
\fB[\fP\fIcount\fP\fB]f\fP\fIc\fP
Move ta tha straight-up original gangsta occurrence of tha characta \fB'c'\fP dat occurs
afta tha current cursor position. I aint talkin' bout chicken n' gravy biatch. If tha cursor was
positioned on tha last characta of tha line, tha terminal shall be
alerted n' tha cursor shall not be advanced. Y'all KNOW dat shit, muthafucka! If tha character
\fB'c'\fP do not occur up in tha line afta tha current cursor position,
the terminal shall be alerted n' tha cursor shall not
be moved.
.TP 7
\fB[\fP\fIcount\fP\fB]F\fP\fIc\fP
Move ta tha straight-up original gangsta occurrence of tha characta \fB'c'\fP dat occurs
before tha current cursor position. I aint talkin' bout chicken n' gravy biatch. If tha cursor was
positioned on tha straight-up original gangsta characta of tha line, tha terminal shall
be alerted n' tha cursor shall not be moved. Y'all KNOW dat shit, muthafucka! If tha character
\fB'c'\fP do not occur up in tha line before tha current cursor position,
the terminal shall be alerted n' tha cursor shall not
be moved.
.TP 7
\fB[\fP\fIcount\fP\fB]t\fP\fIc\fP
Move ta tha characta before tha straight-up original gangsta occurrence of tha character
\fB'c'\fP dat occurs afta tha current cursor position.
If tha cursor was positioned on tha last characta of tha line, the
terminal shall be alerted n' tha cursor shall not be advanced.
If tha characta \fB'c'\fP do not occur up in tha line afta tha current
cursor position, tha terminal shall be alerted n' the
cursor shall not be moved.
.TP 7
\fB[\fP\fIcount\fP\fB]T\fP\fIc\fP
Move ta tha characta afta tha straight-up original gangsta occurrence of tha character
\fB'c'\fP dat occurs before tha current cursor position.
If tha cursor was positioned on tha straight-up original gangsta characta of tha line, the
terminal shall be alerted n' tha cursor shall not be moved.
If tha characta \fB'c'\fP do not occur up in tha line before tha current
cursor position, tha terminal shall be alerted n' the
cursor shall not be moved.
.TP 7
\fB[\fP\fIcount\fP\fB];\fP
Repeat da most thugged-out recent \fBf\fP, \fBF\fP, \fBt\fP, or \fBT\fP command.
Any number argument on dat previous command shall be
ignored. Y'all KNOW dat shit, muthafucka! Errors is dem busted lyrics bout fo' tha repeated command.
.TP 7
\fB[\fP\fIcount\fP\fB],\fP
Repeat da most thugged-out recent \fBf\fP, \fBF\fP, \fBt\fP, or \fBT\fP command.
Any number argument on dat previous command shall be
ignored. Y'all KNOW dat shit, muthafucka! But fuck dat shiznit yo, tha word on tha street is dat reverse tha direction of dat command.
.TP 7
\fBa\fP
Enta bang mode afta tha current cursor position. I aint talkin' bout chicken n' gravy biatch. Charactas that
are entered shall be banged before tha next
character.
.TP 7
\fBA\fP
Enta bang mode afta tha end of tha current command line.
.TP 7
\fBi\fP
Enta bang mode all up in tha current cursor position. I aint talkin' bout chicken n' gravy biatch. Charactas that
are entered shall be banged before tha current
character.
.TP 7
\fBI\fP
Enta bang mode all up in tha beginnin of tha current command line.
.TP 7
\fBR\fP
Enta bang mode, replacin charactas from tha command line beginning
at tha current cursor position.
.TP 7
\fB[\fP\fIcount\fP\fB]c\fP\fImotion\fP
.sp
Delete tha charactas between tha current cursor posizzle n' the
cursor posizzle dat would result from tha specified motion
command. Y'all KNOW dat shit, muthafucka! Then enta bang mode before tha straight-up original gangsta characta following
any deleted characters. If \fIcount\fP is specified, it shall
be applied ta tha motion command. Y'all KNOW dat shit, muthafucka! A \fIcount\fP shall be ignored for
the followin motion commands: 
.sp
.RS
.nf

\fB0    ^    $    c
\fP
.fi
.RE
.LP
If tha motion command is tha characta \fB'c'\fP, tha current command
line shall be cleared n' bang mode shall be
entered. Y'all KNOW dat shit, muthafucka! If tha motion command would move tha current cursor position
toward tha beginnin of tha command line, tha characta under
the current cursor posizzle shall not be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha motion command
would move tha current cursor posizzle toward tha end of
the command line, tha characta under tha current cursor position
shall be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha \fIcount\fP is larger than tha number
of charactas between tha current cursor posizzle n' tha end of the
command line toward which tha motion command would move the
cursor, dis shall not be considered a error; all of tha remaining
charactas up in tha aforementioned range shall be deleted and
insert mode shall be entered. Y'all KNOW dat shit, muthafucka! If tha motion command is invalid, the
terminal shall be alerted, tha cursor shall not be moved, and
no text shall be deleted.
.TP 7
\fBC\fP
Delete from tha current characta ta tha end of tha line n' enter
insert mode all up in tha freshly smoked up end-of-line.
.TP 7
\fBS\fP
Clear tha entire edit line n' enta bang mode.
.TP 7
\fB[\fP\fIcount\fP\fB]r\fP\fIc\fP
Replace tha current characta wit tha characta \fB'c'\fP . With
a number \fIcount\fP, replace tha current n' the
followin \fIcount\fP-1 charactas fo' realz. Afta dis command, tha current
cursor posizzle shall be on tha last characta dat was
changed. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is larger than tha number of characters
afta tha cursor, dis shall not be considered a error; all
of tha remainin charactas shall be chizzled.
.TP 7
\fB[\fP\fIcount\fP\fB]_\fP
Append a <space> afta tha current characta posizzle n' then append
the last bigword up in tha previous input line after
the <space>. Then enta bang mode afta tha last characta just
appended. Y'all KNOW dat shit, muthafucka! With a number \fIcount\fP, append the
\fIcount\fPth bigword up in tha previous line.
.TP 7
\fB[\fP\fIcount\fP\fB]x\fP
Delete tha characta all up in tha current cursor posizzle n' place the
deleted charactas up in tha save buffer n' shit. If tha cursor was
positioned on tha last characta of tha line, tha characta shall
be deleted n' tha cursor posizzle shall be moved ta tha previous
characta (the freshly smoked up last character). If tha \fIcount\fP is larger than
the number of charactas afta tha cursor, dis shall not be
considered a error; all tha charactas from tha cursor ta tha end
of tha line shall be deleted.
.TP 7
\fB[\fP\fIcount\fP\fB]X\fP
Delete tha characta before tha current cursor posizzle n' place
the deleted charactas up in tha save buffer n' shit. Da character
under tha current cursor posizzle shall not chizzle. If tha cursor
was positioned on tha straight-up original gangsta characta of tha line, tha terminal
shall be alerted, n' tha \fBX\fP command shall have no effect. If
the line contained a single character, tha \fBX\fP command
shall have no effect. If tha line contained no characters, tha terminal
shall be alerted n' tha cursor shall not be moved. Y'all KNOW dat shit, muthafucka! If the
\fIcount\fP is larger than tha number of charactas before tha cursor,
this shall not be considered a error; all tha characters
from before tha cursor ta tha beginnin of tha line shall be deleted.
.TP 7
\fB[\fP\fIcount\fP\fB]d\fP\fImotion\fP
.sp
Delete tha charactas between tha current cursor posizzle n' the
characta posizzle dat would result from tha motion command. Y'all KNOW dat shit, muthafucka! A
number \fIcount\fP repeats tha motion command \fIcount\fP times. If
the motion command would move toward tha beginnin of the
command line, tha characta under tha current cursor posizzle shall
not be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If tha motion command is \fBd\fP, tha entire
current command line shall be cleared. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is larger
than tha number of charactas between tha current cursor
posizzle n' tha end of tha command line toward which tha motion command
would move tha cursor, dis shall not be considered an
error; all of tha remainin charactas up in tha aforementioned range
shall be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da deleted charactas shall be placed up in the
save buffer.
.TP 7
\fBD\fP
Delete all charactas from tha current cursor posizzle ta tha end
of tha line. Da deleted charactas shall be placed up in the
save buffer.
.TP 7
\fB[\fP\fIcount\fP\fB]y\fP\fImotion\fP
.sp
Yank (that is, copy) tha charactas from tha current cursor position
to tha posizzle resultin from tha motion command tha fuck into the
save buffer n' shiznit fo' realz. A number \fIcount\fP shall be applied ta tha motion command.
If tha motion command would move toward tha beginnin of
the command line, tha characta under tha current cursor position
shall not be included up in tha set of yanked characters. If the
motion command is \fBy\fP, tha entire current command line shall be
yanked tha fuck into tha save buffer n' shit. Da current cursor posizzle shall
be unchanged. Y'all KNOW dat shit, muthafucka! If tha \fIcount\fP is larger than tha number of characters
between tha current cursor posizzle n' tha end of the
command line toward which tha motion command would move tha cursor,
this shall not be considered a error; all of tha remaining
charactas up in tha aforementioned range shall be yanked.
.TP 7
\fBY\fP
Yank tha charactas from tha current cursor posizzle ta tha end of
the line tha fuck into tha save buffer n' shit. Da current character
posizzle shall be unchanged.
.TP 7
\fB[\fP\fIcount\fP\fB]p\fP
Put a cold-ass lil copy of tha current contentz of tha save buffer afta tha current
cursor position. I aint talkin' bout chicken n' gravy biatch. Da current cursor posizzle shall be
advanced ta tha last characta put from tha save buffer n' shiznit fo' realz. A \fIcount\fP
shall indicate how tha fuck nuff copiez of tha save buffer shall be
put.
.TP 7
\fB[\fP\fIcount\fP\fB]P\fP
Put a cold-ass lil copy of tha current contentz of tha save buffer before tha current
cursor position. I aint talkin' bout chicken n' gravy biatch. Da current cursor posizzle shall be
moved ta tha last characta put from tha save buffer n' shiznit fo' realz. A \fIcount\fP
shall indicate how tha fuck nuff copiez of tha save buffer shall be
put.
.TP 7
\fBu\fP
Undo tha last command dat chizzled tha edit line. This operation shall
not undo tha copy of any command line ta tha edit
line.
.TP 7
\fBU\fP
Undo all chizzlez made ta tha edit line. This operation shall not undo
the copy of any command line ta tha edit line.
.TP 7
\fB[\fP\fIcount\fP\fB]k\fP
.TP 7
\fB[\fP\fIcount\fP\fB]-\fP
Set tha current command line ta be tha \fIcount\fPth previous command
line up in tha shell command history. If \fIcount\fP is
not specified, it shall default ta 1. Da cursor shall be positioned
on tha straight-up original gangsta characta of tha freshly smoked up command. Y'all KNOW dat shit, muthafucka! If a \fBk\fP or
\fB-\fP command would retreat past tha maximum number of commands
in effect fo' dis shell (affected by tha \fIHISTSIZE\fP
environment variable), tha terminal shall be alerted, n' tha command
shall have no effect.
.TP 7
\fB[\fP\fIcount\fP\fB]j\fP
.TP 7
\fB[\fP\fIcount\fP\fB]+\fP
Set tha current command line ta be tha \fIcount\fPth next command
line up in tha shell command history. If \fIcount\fP is not
specified, it shall default ta 1. Da cursor shall be positioned on
the first characta of tha freshly smoked up command. Y'all KNOW dat shit, muthafucka! If a \fBj\fP or
\fB+\fP command advances past tha edit line, tha current command line
shall be restored ta tha edit line n' tha terminal shall be
alerted.
.TP 7
\fB[\fP\fInumber\fP\fB]G\fP
Set tha current command line ta be tha crazy oldschool command line stored
in tha shell command history. With a number \fInumber\fP,
set tha current command line ta be tha command line \fInumber\fP in
the history. If command line \fInumber\fP do not exist, the
terminal shall be alerted n' tha command line shall not be chizzled.
.TP 7
\fB/\fP\fIpattern\fP<newline>
.sp
Move backwardz all up in tha command history, searchin fo' tha specified
pattern, beginnin wit tha previous command line. Patterns
use tha pattern matchin notation busted lyrics bout up in \fIPattern Matching
Notation\fP, except
that tha \fB'^'\fP characta shall have special meanin when it appears
as tha straight-up original gangsta characta of \fIpattern\fP. In dis case,
the \fB'^'\fP is discarded n' tha charactas afta tha \fB'^'\fP
shall be matched only all up in tha beginnin of a line. Commands
in tha command history shall be treated as strings, not as filenames.
If tha pattern aint found, tha current command line shall
be unchanged n' tha terminal be alerted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If it is found up in a previous
line, tha current command line shall be set ta dat line and
the cursor shall be set ta tha straight-up original gangsta characta of tha freshly smoked up command
line. 
.LP
If \fIpattern\fP is empty, tha last non-empty pattern provided to
\fB/\fP or \fB?\fP shall be used. Y'all KNOW dat shit, muthafucka! If there is no previous
non-empty pattern, tha terminal shall be alerted n' tha current command
line shall remain unchanged.
.TP 7
\fB?\fP\fIpattern\fP<newline>
.sp
Move forwardz all up in tha command history, searchin fo' tha specified
pattern, beginnin wit tha next command line. Patterns use
the pattern matchin notation busted lyrics bout up in \fIPattern Matchin Notation\fP,
except that
the \fB'^'\fP characta shall have special meanin when it appears
as tha straight-up original gangsta characta of \fIpattern\fP. In dis case, the
\fB'^'\fP is discarded n' tha charactas afta tha \fB'^'\fP shall
be matched only all up in tha beginnin of a line. Commandz in
the command history shall be treated as strings, not as filenames.
If tha pattern aint found, tha current command line shall be
unchanged n' tha terminal alerted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If it is found up in a gangbangin' following
line, tha current command line shall be set ta dat line n' the
cursor shall be set ta tha fist characta of tha freshly smoked up command line.
.LP
If \fIpattern\fP is empty, tha last non-empty pattern provided to
\fB/\fP or \fB?\fP shall be used. Y'all KNOW dat shit, muthafucka! If there is no previous
non-empty pattern, tha terminal shall be alerted n' tha current command
line shall remain unchanged.
.TP 7
\fBn\fP
Repeat da most thugged-out recent \fB/\fP or \fB?\fP command. Y'all KNOW dat shit, muthafucka! If there is no
previous \fB/\fP or \fB?\fP, tha terminal shall be
alerted n' tha current command line shall remain unchanged.
.TP 7
\fBN\fP
Repeat da most thugged-out recent \fB/\fP or \fB?\fP command, reversin tha direction
of tha search. If there is no previous \fB/\fP or
\fB?\fP, tha terminal shall be alerted n' tha current command line
shall remain unchanged.
.sp
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ \ \ \ 0
Da script ta be executed consisted solely of zero or mo' blank lines
or comments, or both.
.TP 7
1-125
A non-interactizzle shell detected a syntax, redirection, or variable
assignment error.
.TP 7
\ \ 127
A specified \fIcommand_file\fP could not be found by a non-interactive
shell.
.sp
.LP
Otherwise, tha shell shall return tha exit statuz of tha last command
it invoked or attempted ta invoke (see also tha \fIexit\fP utility
in \fISpecial Built-In
Utilities\fP ).
.SH CONSEQUENCES OF ERRORS
.LP
See \fIConsequencez of Shell Errors\fP .
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Standard input n' standard error is tha filez dat determine whether
a shell is interactizzle when \fB-i\fP aint specified.
For example:
.sp
.RS
.nf

\fBsh > file
\fP
.fi
.RE
.LP
and:
.sp
.RS
.nf

\fBsh 2> file
\fP
.fi
.RE
.LP
create interactizzle n' non-interactizzle shells, respectively fo' realz. Although
both accept terminal input, tha thangs up in dis biatch of error
conditions is different, as busted lyrics bout up in \fIConsequencez of Shell
Errors\fP ; up in the
second example a redirection error encountered by a special built-in
utilitizzle aborts tha shell.
.LP
A conformin application must protect its first operand, if it starts
with a plus sign, by precedin it wit tha \fB"--"\fP
argument dat denotes tha end of tha options.
.LP
Applications should note dat tha standard \fIPATH\fP ta tha shell
cannot be assumed ta be either \fB/bin/sh\fP or
\fB/usr/bin/sh\fP, n' should be determined by invigoration of the
\fIPATH\fP returned by \fIgetconf\fP \fIPATH\fP,  ensurin dat the
returned pathname be a absolute pathname n' not a
shell built-in.
.LP
For example, ta determine tha location of tha standard \fIsh\fP utility:
.sp
.RS
.nf

\fBcommand -v sh
\fP
.fi
.RE
.LP
On some implementations dis might return:
.sp
.RS
.nf

\fB/usr/xpg4/bin/sh
\fP
.fi
.RE
.LP
Furthermore, on systems dat support executable scripts (the \fB"#!"\fP
construct), it is recommended dat applications using
executable scripts install dem rockin \fIgetconf\fP \fB-v\fP ta determine
the shell
pathname n' update tha \fB"#!"\fP script appropriately as it is being
installed (for example, wit \fIsed\fP). For example:
.sp
.RS
.nf

\fB#
# Installation time script ta install erect POSIX shell pathname
#
# Git list of paths ta check
#
Sifs=$IFS
IFS=:
set $(getconf PATH)
IFS=$Sifs
#
# Peep each path fo' 'sh'
#
for i up in $@
do
    if [ -f ${i}/sh ];
    then
        Pshell=${i}/sh
    fi
done
#
# This is tha list of scripts ta update. They should be of the
# form '${name}.source' n' is ghon be transformed ta '${name}'.
# Each script should begin:
#
# !INSTALLSHELLPATH -p
#
scripts="a b c"
#
# Transform each script
#
for i up in ${scripts}
do
    sed -e "s|INSTALLSHELLPATH|${Pshell}|" < ${i}.source > ${i}
done
\fP
.fi
.RE
.SH EXAMPLES
.IP " 1." 4
Execute a gangbangin' finger-lickin' dirty-ass shell command from a string:
.sp
.RS
.nf

\fBsh -c "cat myfile"
\fP
.fi
.RE
.LP
.IP " 2." 4
Execute a gangbangin' finger-lickin' dirty-ass shell script from a gangbangin' file up in tha current directory:
.sp
.RS
.nf

\fBsh my_shell_cmds
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
Da \fIsh\fP utilitizzle n' tha \fIset\fP special built-in utilitizzle share
a common
set of options.
.LP
Da KornShell ignores tha contentz of \fIIFS\fP upon entry ta the
script fo' realz. A conformin application cannot rely on importing
\fIIFS\fP.  One justification fo' this, beyond securitizzle considerations,
is ta assist possible future shell compilaz fo' realz. Allowing
\fIIFS\fP ta be imported from tha environment prevents nuff optimizations
that might otherwise be performed via dataflow analysis
of tha script itself.
.LP
Da text up in tha STDIN section bout non-blockin readz concerns an
instizzle of \fIsh\fP dat has been invoked, probably by a
C-language program, wit standard input dat has been opened using
the O_NONBLOCK flag; peep \fIopen\fP() up in tha System Interfaces volume
of IEEE\ Std\ 1003.1-2001. If tha shell did not
reset dis flag, it would immediately terminizzle cuz no input data
would be available yet n' dat would be considered tha same
as end-of-file.
.LP
Da options associated wit a \fIrestricted shell\fP (command name
\fIrsh\fP n' tha \fB-r\fP option) was excluded cuz
the standard pimpers considered dat tha implied level of security
could not be  bigged up  n' they did not wanna raise false
expectations.
.LP
On systems dat support set-user-ID scripts, a oldschool trapdoor
has been ta link a script ta tha name \fB-i\fP. When it is
called by a sequence such as:
.sp
.RS
.nf

\fBsh -
\fP
.fi
.RE
.LP
or by:
.sp
.RS
.nf

\fB#! usr/bin/sh -
\fP
.fi
.RE
.LP
the oldschool systems have assumed dat no option lettas follow.
Thus, dis volume of IEEE\ Std\ 1003.1-2001 allows
the single hyphen ta mark tha end of tha options, up in addizzle ta the
use of tha regular \fB"--"\fP argument, cuz it was
considered dat tha olda practice was so pervasive fo' realz. An alternative
approach is taken by tha KornShell, where real n' effective
user/group IDs must match fo' a interactizzle shell; dis behavior
is specifically allowed by dis volume of
IEEE\ Std\ 1003.1-2001. 
.TP 7
\fBNote:\fP
There is other problems wit set-user-ID scripts dat tha two approaches
busted lyrics bout here do not resolve.
.sp
.LP
Da initialization process fo' tha history file can be dependent on
the system start-up files, up in dat they may contain commands
that effectively preempt tha userz settingz of \fIHISTFILE\fP and
\fIHISTSIZE\fP.  For example, function definizzle commandz are
recorded up in tha history file, unless tha \fIset\fP \fB-o\fP \fInolog\fP
option is
set. If tha system administrator includes function definitions in
some system start-up file called before tha \fIENV\fP file, the
history file is initialized before tha user gets a cold-ass lil chizzle ta influence
its characteristics. In some oldschool shells, tha history
file is initialized just afta tha \fIENV\fP file has been processed.
Therefore, it is implementation-defined whether chizzlez made
to \fIHISTFILE\fP afta tha history file has been initialized are
effective.
.LP
Da default lyrics fo' tha various \fIMAIL -related\fP lyrics
are unspecified cuz they vary across implementations.
Typical lyrics are:
.sp
.RS
.nf

\fB"you have mail\\n"
\fP
.fi
.RE
.LP
or:
.sp
.RS
.nf

\fB"you have freshly smoked up mail\\n"
\fP
.fi
.RE
.LP
It be blingin dat tha descriptionz of command line editin refer
to tha same shell as dat up in IEEE\ Std\ 1003.1-2001
so dat interactizzle playas can also be application programmers without
havin ta deal wit programmatic differences up in they two
environments, n' you can put dat on yo' toast. Well shiiiit, it be also essential dat tha utilitizzle name \fIsh\fP
be specified cuz dis explicit utilitizzle name is too firmly
rooted up in oldschool practice of application programs fo' it ta chizzle.
.LP
Consideration was given ta manpimpin a gangbangin' finger-lickin' diagnostic message when attempting
to set \fIvi\fP-mode on terminals dat do not support command line
editing. But fuck dat shiznit yo, tha word on tha street is dat it aint historical
practice fo' tha shell ta be cognizant of all terminal types n' thus
be able ta detect inappropriate terminals up in all cases.
Implementations is encouraged ta supply diagnostics up in dis case
whenever possible, rather than leavin tha user up in a state where
editin commandz work incorrectly.
.LP
In early proposals, tha KornShell-derived \fIemacs\fP mode of command
line editin was included, even though tha \fIemacs\fP
editor itself was not. Da hood of \fIemacs\fP proponents was
adamant dat tha full \fIemacs\fP editor not be standardized
because they was concerned dat a attempt ta standardize dis hella
powerful environment would encourage vendors ta shizzle strictly
conformin versions lackin tha extensibilitizzle required by tha hood.
Da lyricist of tha original gangsta \fIemacs\fP program also
expressed his fuckin lil' desire ta omit tha program. Furthermore, there were
a number of oldschool systems dat did not include \fIemacs\fP,
or included it without supportin it yo, but there was straight-up few that
did not include n' support \fIvi\fP. Da shell \fIemacs\fP command
line editin mode was finally omitted cuz it became
apparent dat tha KornShell version n' tha editor bein distributed
with tha GNU system had diverged up in some respects, n' you can put dat on yo' toast. Da author
of \fIemacs\fP axed dat tha POSIX \fIemacs\fP mode either be
deleted or gotz a thugged-out dope number of unspecified
conditions fo' realz. Although tha KornShell lyricist agreed ta consider chizzles
to brang tha shell tha fuck into alignment, tha standard pimpers
decided ta defer justification at dat time fo' realz. At tha time, dat shiznit was assumed
that convergence on a aaight definizzle would occur
for a subsequent draft yo, but dat has not happened, n' there appears
to be no impetus ta do so. In any case, implementations are
free ta offer additionizzle command line editin modes based on tha exact
modelz of editors they playas is most laid back with.
.LP
Early proposals had tha followin list entry up in vi Line Editin Insert
Mode :
.TP 7
\fB\\\fP
If followed by tha \fIerase\fP or \fIkill\fP character, dat character
shall be banged tha fuck into tha input line. Otherwise, the
backslash itself shall be banged tha fuck into tha input line.
.sp
.LP
But fuck dat shiznit yo, tha word on tha street is dat dis aint straight-up a gangbangin' feature of \fIsh\fP command line editing
insert mode yo, but one of some oldschool terminal line
drivers. Right back up in yo muthafuckin ass. Some conformin implementations continue ta do dis when
the \fIstty\fP
\fBiexten\fP flag is set.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIShell Command Language\fP, \fIcd\fP, \fIecho\fP, \fIexit\fP(),
\fIfc\fP, \fIpwd\fP, \fIread\fP(), \fIset\fP, \fIstty\fP, \fItest\fP,
\fIumask\fP(), \fIvi\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIdup\fP(), \fIexec\fP, \fIexit\fP(), \fIfork\fP(), \fIopen\fP(),
\fIpipe\fP(), \fIsignal\fP(), \fIsystem\fP(), \fIulimit\fP(), \fIumask\fP(),
\fIwait\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
