.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "TRAP" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" trap 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
trap \- trap signals
.SH SYNOPSIS
.LP
\fBtrap\fP \fB[\fP\fIaction condition\fP \fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
If \fIaction\fP is \fB'-'\fP, tha shell shall reset each \fIcondition\fP
to tha default value. If \fIaction\fP is null (
\fB""\fP ), tha shell shall ignore each specified \fIcondition\fP
if it arises. Otherwise, tha argument \fIaction\fP shall be
read n' executed by tha shell when one of tha correspondin conditions
arises. Da action of \fItrap\fP shall override a previous
action (either default action or one explicitly set). Da value of
\fB"$?"\fP afta tha \fItrap\fP action completes shall be
the value it had before \fItrap\fP was invoked.
.LP
Da condizzle can be EXIT, 0 (equivalent ta EXIT), or a signal specified
usin a symbolic name, without tha SIG prefix, as
listed up in tha tablez of signal names up in tha \fI<signal.h>\fP header
defined up in the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Chapta 13, Headers;
for example, HUP, INT, QUIT, TERM. Implementations may permit names
with tha SIG prefix or ignore case up in signal names as an
extension. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Settin a trap fo' SIGKILL or SIGSTOP produces undefined
results.
.LP
Da environment up in which tha shell executes a \fItrap\fP on EXIT shall
be identical ta tha environment immediately afta the
last command executed before tha \fItrap\fP on EXIT was taken.
.LP
Each time \fItrap\fP is invoked, tha \fIaction\fP argument shall be
processed up in a manner equivalent to:
.sp
.RS
.nf

\fBeval\fP \fIaction\fP
.fi
.RE
.LP
Signals dat was ignored on entry ta a non-interactizzle shell cannot
be trapped or reset, although no error need be reported
when attemptin ta do so fo' realz. An interactizzle shell may reset or catch
signals ignored on entry. Traps shall remain up in place fo' a given
shell until explicitly chizzled wit another \fItrap\fP command.
.LP
When a subshell is entered, traps dat is not bein ignored is set
to tha default actions. This do not imply dat the
\fItrap\fP command cannot be used within tha subshell ta set freshly smoked up traps.
.LP
Da \fItrap\fP command wit no arguments shall write ta standard output
a list of commandz associated wit each condition. I aint talkin' bout chicken n' gravy biatch. The
format shall be:
.sp
.RS
.nf

\fB"trap -- %s %s ...\\n", <\fP\fIaction\fP\fB>, <\fP\fIcondition\fP\fB> ...
\fP
.fi
.RE
.LP
Da shell shall format tha output, includin tha proper use of quoting,
so dat it is suitable fo' reinput ta tha shell as
commandz dat big up tha same trappin thangs up in dis biatch. For example:
.sp
.RS
.nf

\fBsave_traps=$(trap)
\&...
eval "$save_traps"
\fP
.fi
.RE
.LP
XSI-conformant systems also allow numeric signal numbers fo' tha conditions
correspondin ta tha followin signal names: 
.TS C
center; l l.
\fBSignal Number\fP	\fBSignal Name\fP
1	SIGHUP
2	SIGINT
3	SIGQUIT
6	SIGABRT
9	SIGKILL
14	SIGALRM
15	SIGTERM
.TE
.LP
Da \fItrap\fP special built-in shall conform ta tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
See tha DESCRIPTION.
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
None.
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
See tha DESCRIPTION.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
If tha trap name  or number  is invalid, a non-zero
exit status shall be returned; otherwise, zero shall be returned.
For both interactizzle n' non-interactizzle shells, invalid signal
names  or numbers  shall not be considered a syntax error n' do
not cause tha shell ta abort.
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.LP
Write up a list of all traps n' actions:
.sp
.RS
.nf

\fBtrap
\fP
.fi
.RE
.LP
Set a trap so tha \fIlogout\fP utilitizzle up in tha directory referred to
by tha \fIHOME\fP
environment variable executes when tha shell terminates:
.sp
.RS
.nf

\fBtrap '$HOME/logout' EXIT
\fP
.fi
.RE
.LP
or:
.sp
.RS
.nf

\fBtrap '$HOME/logout' 0
\fP
.fi
.RE
.LP
Unset traps on INT, QUIT, TERM, n' EXIT:
.sp
.RS
.nf

\fBtrap - INT QUIT TERM EXIT
\fP
.fi
.RE
.SH RATIONALE
.LP
Implementations may permit lowercase signal names as a extension.
Implementations may also accept tha names wit tha SIG
prefix; no known oldschool shell do so. Da \fItrap\fP n' \fIkill\fP
utilitizzles up in this
volume of IEEE\ Std\ 1003.1-2001 is now consistent up in they omission
of tha SIG prefix fo' signal names. Right back up in yo muthafuckin ass. Some \fIkill\fP implementations
do not allow tha prefix, n' \fIkill\fP \fB-l\fP lists tha signals
without prefixes.
.LP
Trappin SIGKILL or SIGSTOP is syntactically accepted by some historical
implementations yo, but it has no effect. Portable POSIX
applications cannot attempt ta trap these signals.
.LP
Da output format aint oldschool practice. Right back up in yo muthafuckin ass. Since tha output of
historical \fItrap\fP commandz aint portable (because
numeric signal joints is not portable) n' had ta chizzle ta become
so, a opportunitizzle was taken ta format tha output up in a way that
a shell script could use ta save n' then lata reuse a trap if it
wanted.
.LP
Da KornShell uses a \fBERR\fP trap dat is triggered whenever \fIset\fP
\fB-e\fP would
cause a exit. This be allowable as a extension yo, but was not mandated,
as other shells aint used dat shit.
.LP
Da text bout tha environment fo' tha EXIT trap invalidates tha behavior
of some oldschool versionz of interactizzle shells
which, fo' example, close tha standard input before executin a trap
on 0. For example, up in some oldschool interactizzle shell
sessions tha followin trap on 0 would always print \fB"--"\fP :
.sp
.RS
.nf

\fBtrap 'read foo; echo "-$foo-"' 0
\fP
.fi
.RE
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fISpecial Built-In Utilities\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
