.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ID" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" id 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
id \- return user identity
.SH SYNOPSIS
.LP
\fBid\fP \fB[\fP\fIuser\fP\fB]\fP\fB
.br
.sp
id -G\fP\fB[\fP\fB-n\fP\fB] [\fP\fIuser\fP\fB]\fP\fB
.br
.sp
id -g\fP\fB[\fP\fB-nr\fP\fB] [\fP\fIuser\fP\fB]\fP\fB
.br
.sp
id -u\fP\fB[\fP\fB-nr\fP\fB] [\fP\fIuser\fP\fB]\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
If no \fIuser\fP operand is provided, tha \fIid\fP utilitizzle shall write
the user n' crew IDs n' tha correspondin user and
group namez of tha invokin process ta standard output. If tha effective
and real IDs do not match, both shall be written. I aint talkin' bout chicken n' gravy biatch. If
multiple crews is supported by tha underlyin system (see tha description
of {NGROUPS_MAX} up in tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001), tha supplementary crew affiliationz of the
invokin process shall also be written.
.LP
If a \fIuser\fP operand is provided n' tha process has tha appropriate
privileges, tha user n' crew IDz of tha selected user
shall be written. I aint talkin' bout chicken n' gravy biatch. In dis case, effectizzle IDs shall be assumed to
be identical ta real IDs. If tha selected user has mo' than one
allowable crew membershizzle listed up in tha crew database, these shall
be freestyled up in tha same manner as tha supplementary groups
busted lyrics bout up in tha precedin paragraph.
.SH OPTIONS
.LP
Da \fIid\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-G\fP
Output all different crew IDs (effective, real, n' supplementary)
only, rockin tha format \fB"%u\\n"\fP . If there is more
than one distinct crew affiliation, output each such affiliation,
usin tha format \fB"\ %u"\fP, before the
<newline> is output.
.TP 7
\fB-g\fP
Output only tha effectizzle crew ID, rockin tha format \fB"%u\\n"\fP
\&.
.TP 7
\fB-n\fP
Output tha name up in tha format \fB"%s"\fP instead of tha numeric ID
usin tha format \fB"%u"\fP .
.TP 7
\fB-r\fP
Output tha real ID instead of tha effectizzle ID.
.TP 7
\fB-u\fP
Output only tha effectizzle user ID, rockin tha format \fB"%u\\n"\fP
\&.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIuser\fP
Da login name fo' which shiznit is ta be written.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIid\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da followin formats shall be used when tha \fILC_MESSAGES\fP locale
category specifies tha POSIX locale. In other locales,
the strings \fIuid\fP, \fIgid\fP, \fIeuid\fP, \fIegid\fP, n' \fIgroups\fP
may be replaced wit mo' appropriate strings
correspondin ta tha locale.
.sp
.RS
.nf

\fB"uid=%u(%s) gid=%u(%s)\\n", <\fP\fIreal user ID\fP\fB>, <\fP\fIuser-name\fP\fB>,
    <\fP\fIreal crew ID\fP\fB>, <\fP\fIgroup-name\fP\fB>
\fP
.fi
.RE
.LP
If tha effectizzle n' real user IDs do not match, tha followin shall
be banged immediately before tha \fB'\\n'\fP character
in tha previous format:
.sp
.RS
.nf

\fB" euid=%u(%s)"
\fP
.fi
.RE
.LP
with tha followin arguments added all up in tha end of tha argument list:
.sp
.RS
.nf

\fB<\fP\fIeffectizzle user ID\fP\fB>, <\fP\fIeffectizzle user-name\fP\fB>
\fP
.fi
.RE
.LP
If tha effectizzle n' real crew IDs do not match, tha followin shall
be banged directly before tha \fB'\\n'\fP characta in
the format strang (and afta any addizzle resultin from tha effective
and real user IDs not matching):
.sp
.RS
.nf

\fB" egid=%u(%s)"
\fP
.fi
.RE
.LP
with tha followin arguments added all up in tha end of tha argument list:
.sp
.RS
.nf

\fB<\fP\fIeffectizzle group-ID\fP\fB>, <\fP\fIeffectizzle crew name\fP\fB>
\fP
.fi
.RE
.LP
If tha process has supplementary crew affiliations or tha selected
user be allowed ta belong ta multiple groups, tha first
shall be added directly before tha <newline> up in tha format string:
.sp
.RS
.nf

\fB" groups=%u(%s)"
\fP
.fi
.RE
.LP
with tha followin arguments added all up in tha end of tha argument list:
.sp
.RS
.nf

\fB<\fP\fIsupplementary crew ID\fP\fB>, <\fP\fIsupplementary crew name\fP\fB>
\fP
.fi
.RE
.LP
and tha necessary number of tha followin added afta dat fo' any
remainin supplementary crew IDs:
.sp
.RS
.nf

\fB",%u(%s)"
\fP
.fi
.RE
.LP
and tha necessary number of tha followin arguments added all up in tha end
of tha argument list:
.sp
.RS
.nf

\fB<\fP\fIsupplementary crew ID\fP\fB>, <\fP\fIsupplementary crew name\fP\fB>
\fP
.fi
.RE
.LP
If any of tha user ID, crew ID, effectizzle user ID, effectizzle group
ID, or supplementary/multiple crew IDs cannot be mapped by
the system tha fuck into printable user or crew names, tha correspondin \fB"(%s)"\fP
and \fIname\fP argument shall be omitted from the
correspondin format string.
.LP
When any of tha options is specified, tha output format shall be
as busted lyrics bout up in tha OPTIONS section.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Output produced by tha \fB-G\fP option n' by tha default case could
potentially produce straight-up long lines on systems that
support big-ass numberz of supplementary groups. (On systems wit user
and crew IDs dat is 32-bit integers n' wit crew names
with a maximum of 8 bytes per name, 93 supplementary crews plus distinct
effectizzle n' real crew n' user IDs could theoretically
overflow tha 2048-byte {LINE_MAX} text file line limit on tha default
output case. Well shiiiit, it would take bout 186 supplementary crews to
overflow tha 2048-byte barrier rockin \fIid\fP \fB-G\fP). This is not
sposed ta fuckin be a problem up in practice yo, but up in cases where it
is a cold-ass lil concern, applications should consider rockin \fIfold\fP \fB-s\fP
before postprocessing
the output of \fIid\fP.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da functionalitizzle provided by tha 4 BSD \fIgroups\fP utilitizzle can be
simulated using:
.sp
.RS
.nf

\fBid -Gn [ user ]
\fP
.fi
.RE
.LP
Da 4 BSD command \fIgroups\fP was considered yo, but dat shiznit was not included
because it did not provide tha functionalitizzle of the
\fIid\fP utilitizzle of tha SVID fo' realz. Also, dat shiznit was thought dat it would be
easier ta modify \fIid\fP ta provide tha additional
functionalitizzle necessary ta systems wit multiple crews than ta invent
another command.
.LP
Da options \fB-u\fP, \fB-g\fP, \fB-n\fP, n' \fB-r\fP was added
to ease tha use of \fIid\fP wit shell commands
substitution. I aint talkin' bout chicken n' gravy biatch. Without these options it is necessary ta use some preprocessor
like fuckin \fIsed\fP
to select tha desired piece of shiznit. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Since output like fuckin that
produced by:
.sp
.RS
.nf

\fBid -u -n
\fP
.fi
.RE
.LP
is frequently wanted, it seemed desirable ta add tha options.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfold\fP, \fIlogname\fP, \fIwho\fP, tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001, \fIgetgid\fP(), \fIgetgroups\fP(),
\fIgetuid\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
