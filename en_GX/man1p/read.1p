.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "READ" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" read 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
read \- read a line from standard input
.SH SYNOPSIS
.LP
\fBread\fP \fB[\fP\fB-r\fP\fB]\fP \fIvar\fP\fB...\fP
.SH DESCRIPTION
.LP
Da \fIread\fP utilitizzle shall read a single line from standard input.
.LP
By default, unless tha \fB-r\fP option is specified, backslash ( \fB'\\'\fP
) shall act as a escape character, as busted lyrics about
in \fIEscape Characta (Backslash)\fP . If standard input be a terminal
device n' the
invokin shell is interactive, \fIread\fP shall prompt fo' a cold-ass lil continuation
line when:
.IP " *" 3
Da shell readz a input line endin wit a funky-ass backslash, unless the
\fB-r\fP option is specified.
.LP
.IP " *" 3
A here-document aint terminated afta a <newline> is entered.
.LP
.LP
Da line shall be split tha fuck into fieldz as up in tha shell (see \fIField
Splitting\fP );
the first field shall be assigned ta tha straight-up original gangsta variable \fIvar\fP,
the second field ta tha second variable \fIvar\fP, n' so on.
If there be fewer \fIvar\fP operandz specified than there be fields,
the leftover fieldz n' they intervenin separators shall
be assigned ta tha last \fIvar\fP. If there be fewer fieldz than
\fIvar\fPs, tha remainin \fIvar\fPs shall be set ta empty
strings.
.LP
Da settin of variablez specified by tha \fIvar\fP operandz shall
affect tha current shell execution environment; peep \fIShell Execution
Environment\fP . If it is called up in a subshell or separate utility
execution
environment, like fuckin one of tha following:
.sp
.RS
.nf

\fB(read foo)
nohup read ...
find . -exec read ... \\;
\fP
.fi
.RE
.LP
it shall not affect tha shell variablez up in tha callerz environment.
.SH OPTIONS
.LP
Da \fIread\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin option is supported:
.TP 7
\fB-r\fP
Do not treat a funky-ass backslash characta up in any special way. Consider each
backslash ta be part of tha input line.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIvar\fP
Da name of a existin or nonexistin shell variable.
.sp
.SH STDIN
.LP
Da standard input shall be a text file.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIread\fP:
.TP 7
\fIIFS\fP
Determine tha internal field separators used ta delimit fields; see
\fIShell
Variables\fP .
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fIPS2\fP
Provide tha prompt strang dat a interactizzle shell shall write to
standard error when a line endin wit a funky-ass backslash is read
and tha \fB-r\fP option was not specified, or if a here-document is
not terminated afta a <newline> is entered.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used fo' diagnostic lyrics n' prompts
for continued input.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
End-of-file was detected or a error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fB-r\fP option is included ta enable \fIread\fP ta subsume the
purpose of tha \fIline\fP utility, which aint included
in IEEE\ Std\ 1003.1-2001.
.LP
Da thangs up in dis biatch is undefined if a end-of-file is detected following
a backslash all up in tha end of a line when \fB-r\fP is not
specified.
.SH EXAMPLES
.LP
Da followin command:
.sp
.RS
.nf

\fBwhile read -r xx yy
do
    printf "%s %s\\n" "$yy" "$xx"
done <\fP \fIinput_file\fP
.fi
.RE
.LP
prints a gangbangin' file wit tha straight-up original gangsta field of each line moved ta tha end of
the line.
.SH RATIONALE
.LP
Da \fIread\fP utilitizzle historically has been a gangbangin' finger-lickin' dirty-ass shell built-in. I aint talkin' bout chicken n' gravy biatch. It
was separated off tha fuck into its own utilitizzle ta take advantage of
the richer description of functionalitizzle introduced by dis volume
of IEEE\ Std\ 1003.1-2001.
.LP
Since \fIread\fP affects tha current shell execution environment,
it is generally provided as a gangbangin' finger-lickin' dirty-ass shell regular built-in. I aint talkin' bout chicken n' gravy biatch. If it
is called up in a subshell or separate utilitizzle execution environment,
like fuckin one of tha following:
.sp
.RS
.nf

\fB(read foo)
nohup read ...
find . -exec read ... \\;
\fP
.fi
.RE
.LP
it do not affect tha shell variablez up in tha environment of tha caller.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIShell Command Language\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
