.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PS" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ps 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ps \- report process status
.SH SYNOPSIS
.LP
\fBps\fP \fB[\fP\fB-aA\fP\fB][\fP\fB-defl\fP\fB][\fP\fB-G\fP
\fIgrouplist\fP\fB][\fP\fB-o\fP \fIformat\fP\fB]\fP\fB...\fP\fB[\fP\fB-p\fP
\fIproclist\fP\fB][\fP\fB-t\fP
\fItermlist\fP\fB]
.br
.sp
[\fP\fB-U\fP \fIuserlist\fP\fB][\fP\fB-g\fP \fIgrouplist\fP\fB][\fP\fB-n\fP
\fInamelist\fP\fB][\fP\fB-u\fP
\fIuserlist\fP\fB]\fP\fB\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIps\fP utilitizzle shall write shiznit bout processes, subject
to havin tha appropriate privileges ta obtain
information bout dem processes.
.LP
By default, \fIps\fP shall select all processes wit tha same effective
user ID as tha current user n' tha same controlling
terminal as tha invoker.
.SH OPTIONS
.LP
Da \fIps\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-a\fP
Write shiznit fo' all processes associated wit terminals. Implementations
may omit session leadaz from dis list.
.TP 7
\fB-A\fP
Write shiznit fo' all processes.
.TP 7
\fB-d\fP
Write shiznit fo' all processes, except session leaders. 
.TP 7
\fB-e\fP
Write shiznit fo' all processes.  (Equivalent to
\fB-A\fP.)
.TP 7
\fB-f\fP
Generate a \fBfull\fP listing. (See tha STDOUT section fo' tha contents
of a \fBfull\fP listing.) 
.TP 7
\fB-g\ \fP \fIgrouplist\fP
Write shiznit fo' processes whose session leadaz is given in
\fIgrouplist\fP. Da application shall ensure dat the
\fIgrouplist\fP be a single argument up in tha form of a <blank> or comma-separated
list. 
.TP 7
\fB-G\ \fP \fIgrouplist\fP
Write shiznit fo' processes whose real crew ID numbers is given
in \fIgrouplist\fP. Da application shall ensure that
the \fIgrouplist\fP be a single argument up in tha form of a <blank>
or comma-separated list.
.TP 7
\fB-l\fP
Generate a \fBlong\fP listing. (See STDOUT fo' tha contentz of a \fBlong\fP
listing.) 
.TP 7
\fB-n\ \fP \fInamelist\fP
Specify tha name of a alternatizzle system \fInamelist\fP file up in place
of tha default. Da name of tha default file n' tha format
of a \fInamelist\fP file is unspecified. Y'all KNOW dat shit, muthafucka! 
.TP 7
\fB-o\ \fP \fIformat\fP
Write shiznit accordin ta tha format justification given up in \fIformat\fP.
This is straight-up busted lyrics bout up in tha STDOUT section.
Multiple \fB-o\fP options can be specified; tha format justification
shall be interpreted as tha <space>-separated
concatenation of all tha \fIformat\fP option-arguments.
.TP 7
\fB-p\ \fP \fIproclist\fP
Write shiznit fo' processes whose process ID numbers is given
in \fIproclist\fP. Da application shall ensure dat the
\fIproclist\fP be a single argument up in tha form of a <blank> or comma-separated
list.
.TP 7
\fB-t\ \fP \fItermlist\fP
Write shiznit fo' processes associated wit terminals given in
\fItermlist\fP. Da application shall ensure dat the
\fItermlist\fP be a single argument up in tha form of a <blank> or comma-separated
list. Terminal identifiers shall be given in
an implementation-defined format.  On XSI-conformant systems, they
shall be given up in one of two forms: tha devicez filename
(for example, \fBtty04\fP) or, if tha devicez filename starts with
\fBtty\fP, just tha identifier followin tha characters
\fBtty\fP (for example, \fB"04"\fP ). 
.TP 7
\fB-u\ \fP \fIuserlist\fP
Write shiznit fo' processes whose user ID numbers or login names
are given up in \fIuserlist\fP. Da application shall ensure
that tha \fIuserlist\fP be a single argument up in tha form of a <blank>
or comma-separated list. In tha listing, tha numerical
user ID shall be freestyled unless tha \fB-f\fP option is used, up in which
case tha login name shall be written. I aint talkin' bout chicken n' gravy biatch. 
.TP 7
\fB-U\ \fP \fIuserlist\fP
Write shiznit fo' processes whose real user ID numbers or login
names is given up in \fIuserlist\fP. Da application shall
ensure dat tha \fIuserlist\fP be a single argument up in tha form of
a <blank> or comma-separated list.
.sp
.LP
With tha exception of \fB-o\fP \fIformat\fP, all of tha options shown
are used ta select processes. If any is specified, the
default list shall be ignored n' \fIps\fP shall select tha processes
represented by tha inclusive OR of all the
selection-criteria options.
.SH OPERANDS
.LP
None.
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIps\fP:
.TP 7
\fICOLUMNS\fP
Override tha system-selected horizontal display line size, used to
determine tha number of text columns ta display. Right back up in yo muthafuckin ass. See the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Chapta 8, Environment
Variablez fo' valid joints n' thangs up in dis biatch when it is unset or null.
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fILC_TIME\fP
Determine tha format n' contentz of tha date n' time strings displayed.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fITZ\fP
Determine tha timezone used ta calculate date n' time strings displayed.
If \fITZ\fP is unset or null, a unspecified default
timezone shall be used.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
When tha \fB-o\fP option aint specified, tha standard output format
is unspecified.
.LP
On XSI-conformant systems, tha output format shall be as bigs up.
Da column headings n' descriptionz of tha columns up in a
\fIps\fP listin is given below. Da precise meaningz of these fields
are implementation-defined. Y'all KNOW dat shit, muthafucka! Da lettas \fB'f'\fP and
\fB'l'\fP (below) indicate tha option ( \fBfull\fP or \fBlong\fP)
that shall cause tha correspondin headin ta appear;
\fBall\fP means dat tha headin always appears. Note dat these two
options determine only what tha fuck shiznit is provided fo' a
process; they do not determine which processes is listed.
.TS C
center; l l lw(40).
\fBF\fP	(l)	T{
.na
Flags (octal n' additive) associated wit tha process.
.ad
T}
\fBS\fP	(l)	T{
.na
Da state of tha process.
.ad
T}
\fBUID\fP	(f,l)	T{
.na
Da user ID number of tha process baller; tha login name is printed under tha \fB-f\fP option.
.ad
T}
\fBPID\fP	(all)	T{
.na
Da process ID of tha process; it is possible ta bust a cap up in a process if dis datum is known.
.ad
T}
\fBPPID\fP	(f,l)	T{
.na
Da process ID of tha parent process.
.ad
T}
\fBC\fP	(f,l)	T{
.na
Processor utilization fo' scheduling.
.ad
T}
\fBPRI\fP	(l)	T{
.na
Da prioritizzle of tha process; higher numbers mean lower priority.
.ad
T}
\fBNI\fP	(l)	T{
.na
Sick value; used up in prioritizzle computation.
.ad
T}
\fBADDR\fP	(l)	T{
.na
Da address of tha process.
.ad
T}
\fBSZ\fP	(l)	T{
.na
Da size up in blockz of tha core image of tha process.
.ad
T}
\fBWCHAN\fP	(l)	T{
.na
Da event fo' which tha process is waitin or chillin; if blank, tha process is hustlin.
.ad
T}
\fBSTIME\fP	(f)	T{
.na
Startin time of tha process.
.ad
T}
\fBTTY\fP	(all)	T{
.na
Da controllin terminal fo' tha process.
.ad
T}
\fBTIME\fP	(all)	T{
.na
Da cumulatizzle execution time fo' tha process.
.ad
T}
\fBCMD\fP	(all)	T{
.na
Da command name; tha full command name n' its arguments is freestyled under tha \fB-f\fP option.
.ad
T}
.TE
.LP
A process dat has exited n' has a parent yo, but has not yet been waited
for by tha parent, shall be marked \fBdefunct\fP.
.LP
Under tha option \fB-f\fP, \fIps\fP tries ta determine tha command
name n' arguments given when tha process was pimped by
examinin memory or tha swap area. Failin this, tha command name,
as it would step tha fuck up without tha option \fB-f\fP, is freestyled in
square brackets, n' you can put dat on yo' toast. 
.LP
Da \fB-o\fP option allows tha output format ta be specified under
user control.
.LP
Da application shall ensure dat tha format justification be a list
of names presented as a single argument, <blank> or
comma-separated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Each variable has a thugged-out default header n' shit. Da default header
can be overridden by appendin a equals sign n' tha new
text of tha header n' shit. Da rest of tha charactas up in tha argument shall
be used as tha header text. Da fieldz specified shall be
written up in tha order specified on tha command line, n' should be
arranged up in columns up in tha output. Da field widths shall be
selected by tha system ta be at least as wide as tha header text (default
or overridden value). If tha header text is null, such as
\fB-o\fP \fIuser\fP=, tha field width shall be at least as wide as
the default header text. If all header text fieldz is null,
no header line shall be written.
.LP
Da followin names is recognized up in tha POSIX locale:
.TP 7
\fBruser\fP
Da real user ID of tha process. This shall be tha textual user ID,
if it can be obtained n' tha field width permits, or a
decimal representation otherwise.
.TP 7
\fBuser\fP
Da effectizzle user ID of tha process. This shall be tha textual user
ID, if it can be obtained n' tha field width permits, or
a decimal representation otherwise.
.TP 7
\fBrgroup\fP
Da real crew ID of tha process. This shall be tha textual group
ID, if it can be obtained n' tha field width permits, or a
decimal representation otherwise.
.TP 7
\fBgroup\fP
Da effectizzle crew ID of tha process. This shall be tha textual group
ID, if it can be obtained n' tha field width permits,
or a thugged-out decimal representation otherwise.
.TP 7
\fBpid\fP
Da decimal value of tha process ID.
.TP 7
\fBppid\fP
Da decimal value of tha parent process ID.
.TP 7
\fBpgid\fP
Da decimal value of tha process crew ID.
.TP 7
\fBpcpu\fP
Da ratio of CPU time used recently ta CPU time available up in tha same
period, expressed as a cementage. Da meanin of
"recently" up in dis context is unspecified. Y'all KNOW dat shit, muthafucka! Da CPU time available
is determined up in a unspecified manner.
.TP 7
\fBvsz\fP
Da size of tha process up in (virtual) memory up in 1024 byte units as
a decimal integer.
.TP 7
\fBnice\fP
Da decimal value of tha sick value of tha process; peep \fInice\fP()
\&.
.TP 7
\fBetime\fP
In tha POSIX locale, tha elapsed time since tha process was started,
in tha form: 
.sp
.RS
.nf

\fB[[\fP\fIdd\fP\fB-\fP\fB]\fP\fIhh\fP\fB:\fP\fB]\fP\fImm\fP\fB:\fP\fIss\fP
.fi
.RE
.LP
where \fIdd\fP shall represent tha number of days, \fIhh\fP tha number
of hours, \fImm\fP tha number of minutes, and
\fIss\fP tha number of seconds. Da \fIdd\fP field shall be a thugged-out decimal
integer n' shit. Da \fIhh\fP, \fImm\fP, n' \fIss\fP fields
shall be two-digit decimal integers padded on tha left wit zeros.
.TP 7
\fBtime\fP
In tha POSIX locale, tha cumulatizzle CPU time of tha process up in the
form: 
.sp
.RS
.nf

\fB[\fP\fIdd\fP\fB-\fP\fB]\fP\fIhh\fP\fB:\fP\fImm\fP\fB:\fP\fIss\fP
.fi
.RE
.LP
Da \fIdd\fP, \fIhh\fP, \fImm\fP, n' \fIss\fP fieldz shall be as
busted lyrics bout up in tha \fBetime\fP specifier.
.TP 7
\fBtty\fP
Da name of tha controllin terminal of tha process (if any) up in the
same format used by tha \fIwho\fP utility.
.TP 7
\fBcomm\fP
Da name of tha command bein executed ( \fIargv\fP[0] value) as a
string.
.TP 7
\fBargs\fP
Da command wit all its arguments as a string. Da implementation
may truncate dis value ta tha field width; it is
implementation-defined whether any further truncation occurs. Well shiiiit, it is
unspecified whether tha strang represented be a version of the
argument list as dat shiznit was passed ta tha command when it started, or
is a version of tha arguments as they may done been modified by
the application. I aint talkin' bout chicken n' gravy biatch fo' realz. Applications cannot depend on bein able ta modify
their argument list n' havin dat modification be reflected
in tha output of \fIps\fP.
.sp
.LP
Any field need not be meaningful up in all implementations. In such a
case a hyphen ( \fB'-'\fP ) should be output up in place of
the field value.
.LP
Only \fBcomm\fP n' \fBargs\fP shall be allowed ta contain <blank>s;
all others shall not fo' realz. Any implementation-defined
variablez shall be specified up in tha system documentation along with
the default header n' indicatin whether tha field may contain
<blank>s.
.LP
Da followin table specifies tha default header ta be used up in the
POSIX locale correspondin ta each format specifier.
.br
.sp
.ce 1
\fBTable: Variable Names n' Default Headaz up in \fIps\fP\fP
.TS C
center; l1 l1 l1 l.
\fBFormat Specifier\fP	\fBDefault Header\fP	\fBFormat Specifier\fP	\fBDefault Header\fP
\fBargs\fP	\fBCOMMAND\fP	\fBppid\fP	\fBPPID\fP
\fBcomm\fP	\fBCOMMAND\fP	\fBrgroup\fP	\fBRGROUP\fP
\fBetime\fP	\fBELAPSED\fP	\fBruser\fP	\fBRUSER\fP
\fBgroup\fP	\fBGROUP\fP	\fBtime\fP	\fBTIME\fP
\fBnice\fP	\fBNI\fP	\fBtty\fP	\fBTT\fP
\fBpcpu\fP	\fB%CPU\fP	\fBuser\fP	\fBUSER\fP
\fBpgid\fP	\fBPGID\fP	\fBvsz\fP	\fBVSZ\fP
\fBpid\fP	\fBPID\fP	\fB\ \fP	\fB\ \fP
.TE
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Things can chizzle while \fIps\fP is hustlin; tha snapshot it gives
is only legit fo' a instant, n' might not be accurate by
the time it is displayed.
.LP
Da \fBargs\fP format specifier be allowed ta produce a truncated
version of tha command arguments, n' you can put dat on yo' toast. In some implementations,
this shiznit is no longer available when tha \fIps\fP utility
is executed.
.LP
If tha field width is too narrow ta display a textual ID, tha system
may bust a numeric version. I aint talkin' bout chicken n' gravy biatch. Normally, tha system would be
sposed ta fuckin chizzle big-ass enough field widths yo, but if a big-ass number
of fieldz was selected ta write, it might squeeze fieldz to
their minimum sizes ta fit on one line. One way ta ensure adequate
width fo' tha textual IDs is ta override tha default header for
a field ta make it larger than most or all user or crew names.
.LP
There is no special quotin mechanizzle fo' header text. Da header
text is tha rest of tha argument. If multiple header chizzles
are needed, multiple \fB-o\fP options can be used, such as:
.sp
.RS
.nf

\fBps -o "user=User Name" -o pid=Process\\ ID
\fP
.fi
.RE
.LP
On some implementations, especially multi-level secure systems, \fIps\fP
may be severely restricted n' produce shiznit
only bout lil pimp processes owned by tha user.
.SH EXAMPLES
.LP
Da command:
.sp
.RS
.nf

\fBps -o user,pid,ppid=MOM -o args
\fP
.fi
.RE
.LP
writes at least tha followin up in tha POSIX locale:
.sp
.RS
.nf

\fB USER   PID   MOM   COMMAND
helene    34    12   ps -o uid,pid,ppid=MOM -o args
\fP
.fi
.RE
.LP
Da contentz of tha \fBCOMMAND\fP field need not be tha same up in all
implementations, cuz of possible truncation.
.SH RATIONALE
.LP
There is straight-up lil commonalitizzle between BSD n' System V implementations
of \fIps\fP. Many options conflict or have subtly
different usages. Da standard pimpers attempted ta select a set
of options fo' tha base standard dat was useful on a wide
range of systems n' selected options dat either can be implemented
on both BSD n' System V-based systems without breakin the
current implementations or where tha options is sufficiently similar
that any chizzlez would not be unduly problematic fo' playas or
implementors.
.LP
It be recognized dat on some implementations, especially multi-level
secure systems, \fIps\fP may be nearly useless. The
default output has therefore been chosen such dat it do not break
historical implementations n' also is likely ta provide at
least some useful shiznit on most systems.
.LP
Da major chizzle is tha addizzle of tha format justification capability.
Da motivation fo' dis invention is ta provide a
mechanizzle fo' playas ta access a wider range of system shiznit,
if tha system permits it, up in a portable manner n' shit. Da fields
chosen ta step tha fuck up in dis volume of IEEE\ Std\ 1003.1-2001 was arrived
at afta thankin bout what tha fuck concepts was likely ta be
both reasonably useful ta tha "average" user n' had a reasonable
chizzle of bein implemented on a wide range of systems fo' realz. Again
it is recognized dat not all systems is able ta provide all the
information and, conversely, some may wish ta provide mo' n' mo' n' mo'. Well shiiiit, it is
hoped dat tha approach adopted is ghon be sufficiently flexible and
extensible ta accommodate most systems. Implementations may be
sposed ta fuckin introduce freshly smoked up format specifiers.
.LP
Da default output should consist of a gangbangin' finger-lickin' dirty-ass short listin containin the
process ID, terminal name, cumulatizzle execution time, and
command name of each process.
.LP
Da preference of tha standard pimpers would done been ta make
the format justification a operand of tha \fIps\fP command.
Unfortunately, BSD usage precluded all dis bullshit.
.LP
At one time a gangbangin' format was included ta display tha environment array
of tha process. This was deleted cuz there is no portable
way ta display dat shit.
.LP
Da \fB-A\fP option is equivalent ta tha BSD \fB-g\fP n' tha SVID
\fB-e\fP. Because tha two systems differed, a mnemonic
compromise was selected.
.LP
Da \fB-a\fP option is busted lyrics bout wit some optionizzle behavior cuz
the SVID omits session leadaz yo, but BSD do not.
.LP
In a early proposal, format specifiers rocked up fo' prioritizzle and
start time. Da forma was not defined adequately up in this
volume of IEEE\ Std\ 1003.1-2001 n' was removed up in deference ta the
defined sick value; tha latta cuz elapsed time
was considered ta be mo' useful.
.LP
In a freshly smoked up BSD version of \fIps\fP, a \fB-O\fP option can be used to
write all of tha default shiznit, followed by
additionizzle format specifiers. This was not adopted cuz tha default
output is implementation-defined. Y'all KNOW dat shit, muthafucka! Nevertheless, dis be a
useful option dat should be reserved fo' dat purpose. In tha \fB-o\fP
option fo' tha POSIX Shell n' Utilitizzles \fIps\fP, the
format is tha concatenation of each \fB-o\fP. Therefore, tha user
can have a alias or function dat defines tha beginnin of
their desired format n' add mo' fieldz ta tha end of tha output
in certain cases where dat would be useful.
.LP
Da format of tha terminal name is unspecified yo, but tha descriptions
of \fIps\fP, \fItalk\fP, \fIwho\fP, n' \fIwrite\fP require dat they
all use tha same format.
.LP
Da \fBpcpu\fP field indicates dat tha CPU time available is determined
in a unspecified manner n' shit. This is cuz it is
hard as fuck ta express a algorithm dat is useful across all possible
machine architectures. Oldschool counterparts ta dis value
have attempted ta show cementage of use up in tha recent past, such
as tha precedin minute. Frequently, these joints fo' all
processes did not add up ta 100%. Implementations is encouraged to
provide data up in dis field ta playas dat will help them
identify processes currently affectin tha performizzle of tha system.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIkill\fP(), \fInice\fP(), \fIrenice\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
