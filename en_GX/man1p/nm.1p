.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "NM" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" nm 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
nm \- write tha name list of a object file (\fBDEVELOPMENT\fP)
.SH SYNOPSIS
.LP
\fBnm\fP \fB[\fP\fB-APv\fP\fB][\fP\fB-efox\fP\fB][\fP \fB-g| -u\fP\fB][\fP\fB-t\fP
\fIformat\fP\fB]\fP \fIfile\fP\fB... \fP
.SH DESCRIPTION
.LP
This utilitizzle shall be provided on systems dat support both tha User
Portabilitizzle Utilitizzles option n' tha Software Development
Utilitizzles option. I aint talkin' bout chicken n' gravy biatch. On other systems it is optional. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Certain options
are only available on XSI-conformant systems.
.LP
Da \fInm\fP utilitizzle shall display symbolic shiznit appearing
in tha object file, executable file, or object-file library
named by \fIfile\fP. If no symbolic shiznit be available fo' a
valid input file, tha \fInm\fP utilitizzle shall report dat fact,
but not consider it a error condition.
.LP
Da default base used when numeric joints is freestyled is unspecified.
\ On XSI-conformant systems, it shall be decimal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. 
.SH OPTIONS
.LP
Da \fInm\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-A\fP
Write tha full pathname or library name of a object on each line.
.TP 7
\fB-e\fP
Write only external (global) n' static symbol shiznit. I aint talkin' bout chicken n' gravy biatch. 
.TP 7
\fB-f\fP
Produce full output. Write redundant symbols ( \fB.text\fP, \fB.data\fP,
and \fB.bss\fP), normally suppressed. Y'all KNOW dat shit, muthafucka! 
.TP 7
\fB-g\fP
Write only external (global) symbol shiznit.
.TP 7
\fB-o\fP
Write numeric joints up in octal (equivalent ta \fB-t\ o\fP). 
.TP 7
\fB-P\fP
Write shiznit up in a portable output format, as specified up in the
STDOUT section.
.TP 7
\fB-t\ \fP \fIformat\fP
Write each numeric value up in tha specified format. Da format shall
be dependent on tha single characta used as the
\fIformat\fP option-argument: 
.TP 7
\fBd\fP
.RS
Da offset is freestyled up in decimal  (default). 
.RE
.TP 7
\fBo\fP
.RS
Da offset is freestyled up in octal.
.RE
.TP 7
\fBx\fP
.RS
Da offset is freestyled up in hexadecimal.
.RE
.sp
.TP 7
\fB-u\fP
Write only undefined symbols.
.TP 7
\fB-v\fP
Sort output by value instead of alphabetically.
.TP 7
\fB-x\fP
Write numeric joints up in hexadecimal (equivalent ta \fB-t\ x\fP). 
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a object file, executable file, or object-file library.
.sp
.SH STDIN
.LP
See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input file shall be a object file, a object-file library whose
format is tha same ol' dirty as dem produced by tha \fIar\fP utilitizzle fo' link
editing, or a executable file. Da \fInm\fP utilitizzle may accept additional
implementation-defined object library formats fo' tha input file.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fInm\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' characta collation shiznit fo' tha symbol-name
and symbol-value collation sequences.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
If symbolic shiznit is present up in tha input files, then fo' each
file or fo' each gangmember of a archive, tha \fInm\fP
utilitizzle shall write tha followin shiznit ta standard output.
By default, tha format is unspecified yo, but tha output shall be
sorted alphabetically by symbol name:
.IP " *" 3
Library or object name, if \fB-A\fP is specified
.LP
.IP " *" 3
Symbol name
.LP
.IP " *" 3
Symbol type, which shall either be one of tha followin single characters
or a implementation-defined type represented by a
single character:
.TP 7
\fBA\fP
.RS
Global absolute symbol.
.RE
.TP 7
\fBa\fP
.RS
Local absolute symbol.
.RE
.TP 7
\fBB\fP
.RS
Global "bss" (that is, uninitialized data space) symbol.
.RE
.TP 7
\fBb\fP
.RS
Local bss symbol.
.RE
.TP 7
\fBD\fP
.RS
Global data symbol.
.RE
.TP 7
\fBd\fP
.RS
Local data symbol.
.RE
.TP 7
\fBT\fP
.RS
Global text symbol.
.RE
.TP 7
\fBt\fP
.RS
Local text symbol.
.RE
.TP 7
\fBU\fP
.RS
Undefined symbol.
.RE
.sp
.LP
.IP " *" 3
Value of tha symbol
.LP
.IP " *" 3
Da size associated wit tha symbol, if applicable
.LP
.LP
This shiznit may be supplemented by additionizzle shiznit specific
to tha implementation.
.LP
If tha \fB-P\fP option is specified, tha previous shiznit shall
be displayed rockin tha followin portable format. Da three
versions differ dependin on whether \fB-t\ d\fP, \fB-t\ o\fP, or
\fB-t\ x\fP was specified, respectively:
.sp
.RS
.nf

\fB"%s%s %s %d %d\\n", <\fP\fIlibrary/object name\fP\fB>, <\fP\fIname\fP\fB>, <\fP\fItype\fP\fB>,
    <\fP\fIvalue\fP\fB>, <\fP\fIsize\fP\fB>
.sp

"%s%s %s %o %o\\n", <\fP\fIlibrary/object name\fP\fB>, <\fP\fIname\fP\fB>, <\fP\fItype\fP\fB>,
    <\fP\fIvalue\fP\fB>, <\fP\fIsize\fP\fB>
.sp

"%s%s %s %x %x\\n", <\fP\fIlibrary/object name\fP\fB>, <\fP\fIname\fP\fB>, <\fP\fItype\fP\fB>,
    <\fP\fIvalue\fP\fB>, <\fP\fIsize\fP\fB>
\fP
.fi
.RE
where <\fIlibrary/object\ name\fP> shall be formatted as bigs up:
.IP " *" 3
If \fB-A\fP aint specified, <\fIlibrary/object\ name\fP> shall be
an empty string.
.LP
.IP " *" 3
If \fB-A\fP is specified n' tha correspondin \fIfile\fP operand
does not name a library:
.sp
.RS
.nf

\fB"%s: ", <\fP\fIfile\fP\fB>
\fP
.fi
.RE
.LP
.IP " *" 3
If \fB-A\fP is specified n' tha correspondin \fIfile\fP operand
names a library. In dis case,
<\fIobject\ file\fP> shall name tha object file up in tha library containing
the symbol bein busted lyrics about:
.sp
.RS
.nf

\fB"%s[%s]: ", <\fP\fIfile\fP\fB>, <\fP\fIobject file\fP\fB>
\fP
.fi
.RE
.LP
.LP
If \fB-A\fP aint specified, then if mo' than one \fIfile\fP operand
is specified or if only one \fIfile\fP operand is
specified n' it names a library, \fInm\fP shall write a line identifying
the object containin tha followin symbols before the
lines containin dem symbols, up in tha form:
.IP " *" 3
If tha correspondin \fIfile\fP operand do not name a library:
.sp
.RS
.nf

\fB"%s:\\n", <\fP\fIfile\fP\fB>
\fP
.fi
.RE
.LP
.IP " *" 3
If tha correspondin \fIfile\fP operand names a library; up in dis case,
<\fIobject\ file\fP> shall be tha name of the
file up in tha library containin tha followin symbols:
.sp
.RS
.nf

\fB"%s[%s]:\\n", <\fP\fIfile\fP\fB>, <\fP\fIobject file\fP\fB>
\fP
.fi
.RE
.LP
.LP
If \fB-P\fP is specified yo, but \fB-t\fP is not, tha format shall be
as if \fB-t\ x\fP had been specified.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Mechanizzlez fo' dynamic linkin make dis utilitizzle less meaningful when
applied ta a executable file cuz a thugged-out dynamically linked
executable may omit a shitload of library routines dat would be found
in a statically linked executable.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Oldschool implementationz of \fInm\fP have used different bases for
numeric output n' supplied different default types of
symbols dat was reported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \fB-t\fP \fIformat\fP option, similar
to dat used up in \fIod\fP n' \fIstrings\fP, can be used ta specify
the numeric
base; \fB-g\fP n' \fB-u\fP can be used ta restrict tha amount of
output or tha typez of symbols included up in tha output.
.LP
Da compromise of rockin \fB-t\fP \fIformat\fP \fIversus\fP rockin \fB-d\fP,
\fB-o\fP, n' other similar options was
necessary cuz of differences up in tha meanin of \fB-o\fP between
implementations. Da \fB-o\fP option from BSD has been
provided here as \fB-A\fP ta avoid mad drama wit tha \fB-o\fP from
System V (which has been provided here as \fB-t\fP n' as
\fB-o\fP on XSI-conformant systems).
.LP
Da option list was hella reduced from dat provided by historical
implementations.
.LP
Da \fInm\fP description be a subset of both tha System V n' BSD
\fInm\fP utilitizzles wit no specified default output.
.LP
Dat shiznit was recognized dat mechanizzlez fo' dynamic linkin make dis utility
less meaningful when applied ta a executable file
(because a thugged-out dynamically linked executable file may omit a shitload of library
routines dat would be found up in a statically linked
executable file) yo, but tha value of \fInm\fP durin software pimpment
was judged ta outweigh other limitations.
.LP
Da default output format of \fInm\fP aint specified cuz of
differences up in oldschool implementations. Da \fB-P\fP
option was added ta allow some type of portable output format fo' realz. After
a comparison of tha different formats used up in SunOS, BSD,
SVR3, n' SVR4, dat shiznit was decided ta create one dat did not match the
current format of any of these four systems. Da format devised
is easy as fuck  ta parse by humans, easy as fuck  ta parse up in shell scripts, n' do
not need ta vary dependin on locale (because no Gangsta
descriptions is included) fo' realz. All of tha systems currently have the
information available ta use dis format.
.LP
Da format given up in \fInm\fP STDOUT uses spaces between tha fields,
which may be any number of <blank>s required ta align
the columns. Da single-characta types was selected ta match historical
practice, n' tha requirement dat implementation
additions also be single charactas made parsin tha shiznit easier
for shell scripts.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIar\fP, \fIc99\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
