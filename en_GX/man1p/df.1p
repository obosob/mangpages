.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "DF" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" df 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
df \- report free disk space
.SH SYNOPSIS
.LP
\fBdf\fP \fB[\fP\fB-k\fP\fB][\fP\fB-P|-t\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP\fB\fP
.SH DESCRIPTION
.LP
Da \fIdf\fP utilitizzle shall write tha amount of available space  and
file slots  fo' file systems on which tha invokin user has appropriate
read access. File systems shall be specified
by tha \fIfile\fP operands; when none is specified, shiznit shall
be freestyled fo' all file systems. Da format of tha default
output from \fIdf\fP is unspecified yo, but all space figures is reported
in 512-byte units, unless tha \fB-k\fP option is
specified. Y'all KNOW dat shit, muthafucka! This output shall contain at least tha file system names,
amount of available space on each of these file systems,
\ n' tha number of free file slots, or \fIinodes\fP, available; when
\fB-t\fP is specified, tha output shall contain the
total allocated space as well. 
.SH OPTIONS
.LP
Da \fIdf\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-k\fP
Use 1024-byte units, instead of tha default 512-byte units, when writing
space figures.
.TP 7
\fB-P\fP
Produce output up in tha format busted lyrics bout up in tha STDOUT section.
.TP 7
\fB-t\fP
Include total allocated-space figures up in tha output. 
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a gangbangin' file within tha hierarchy of tha desired file system.
If a gangbangin' file other than a FIFO, a regular file, a gangbangin' finger-lickin' directory,
\ or a special file representin tha thang containin tha file system
(for example, \fB/dev/dsk/0s1\fP)  is specified, tha thangs up in dis biatch is unspecified.
Otherwise, \fIdf\fP shall write
the amount of free space up in tha file system containin tha specified
\fIfile\fP operand.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIdf\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
When both tha \fB-k\fP n' \fB-P\fP options is specified, tha following
header line shall be freestyled (in tha POSIX
locale):
.sp
.RS
.nf

\fB"Filesystem 1024-blocks Used Available Capacitizzle Mounted on\\n"
\fP
.fi
.RE
.LP
When tha \fB-P\fP option is specified without tha \fB-k\fP option,
the followin header line shall be freestyled (in tha POSIX
locale):
.sp
.RS
.nf

\fB"Filesystem 512-blocks Used Available Capacitizzle Mounted on\\n"
\fP
.fi
.RE
.LP
Da implementation may adjust tha spacin of tha header line n' the
individual data lines so dat tha shiznit is presented
in orderly columns.
.LP
Da remainin output wit \fB-P\fP shall consist of one line of shiznit
for each specified file system. These lines shall
be formatted as bigs up:
.sp
.RS
.nf

\fB"%s %d %d %d %d%% %s\\n", <\fP\fIfile system name\fP\fB>, <\fP\fItotal space\fP\fB>,
    <\fP\fIspace used\fP\fB>, <\fP\fIspace free\fP\fB>, <\fP\fIpercentage used\fP\fB>,
    <\fP\fIfile system root\fP\fB>
\fP
.fi
.RE
.LP
In tha followin list, all quantitizzles expressed up in 512-byte units
(1024-byte when \fB-k\fP is specified) shall be rounded up to
the next higher unit. Da fieldz are:
.TP 7
<\fIfile\ system\ name\fP>
.sp
Da name of tha file system, up in a implementation-defined format.
.TP 7
<\fItotal\ space\fP>
Da total size of tha file system up in 512-byte units, n' you can put dat on yo' toast. Da exact meaning
of dis figure is implementation-defined yo, but should
include <\fIspace\ used\fP>, <\fIspace\ free\fP>, plus any space reserved
by tha system not normally
available ta a user.
.TP 7
<\fIspace\ used\fP>
Da total amount of space allocated ta existin filez up in tha file
system, up in 512-byte units.
.TP 7
<\fIspace\ free\fP>
Da total amount of space available within tha file system fo' the
creation of freshly smoked up filez by unprivileged users, up in 512-byte
units, n' you can put dat on yo' toast. When dis figure is less than or equal ta zero, it shall not
be possible ta create any freshly smoked up filez on tha file system without
first deletin others, unless tha process has appropriate privileges.
Da figure freestyled may be less than zero.
.TP 7
<\fIpercentage\ used\fP>
.sp
Da cementage of tha normally available space dat is currently allocated
to all filez on tha file system. This shall be
calculated rockin tha fraction: 
.sp
.RS
.nf

\fB<\fP\fIspace used\fP\fB>/( <\fP\fIspace used\fP\fB>+ <\fP\fIspace free\fP\fB>)
\fP
.fi
.RE
.LP
expressed as a cementage. This cementage may be pimped outa than 100
if <\fIspace\ free\fP> is less than zero. The
percentage value shall be expressed as a positizzle integer, wit any
fractionizzle result causin it ta be rounded ta tha next highest
integer.
.TP 7
<\fIfile\ system\ root\fP>
.sp
Da directory below which tha file system hierarchy appears.
.sp
.LP
Da output format is unspecified when \fB-t\fP is used. Y'all KNOW dat shit, muthafucka! 
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
On most systems, tha "name of tha file system, up in a implementation-defined
format" is tha special file on which tha file
system is mounted.
.LP
On big-ass file systems, tha calculation specified fo' cementage used
can create big-ass roundin errors.
.SH EXAMPLES
.IP " 1." 4
Da followin example writes portable shiznit bout tha \fB/usr\fP
file system:
.sp
.RS
.nf

\fBdf -P /usr
\fP
.fi
.RE
.LP
.IP " 2." 4
Assumin dat \fB/usr/src\fP is part of tha \fB/usr\fP file system,
the followin produces tha same ol' dirty output as tha previous
example:
.sp
.RS
.nf

\fBdf -P /usr/src
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
Da behavior of \fIdf\fP wit tha \fB-P\fP option is tha default action
of tha 4.2 BSD \fIdf\fP utility. Da uppercase
\fB-P\fP was selected ta avoid collision wit a known industry extension
usin \fB-p\fP.
.LP
Oldschool \fIdf\fP implementations vary considerably up in they default
output. Dat shiznit was therefore necessary ta describe the
default output up in a loose manner ta accommodate all known historical
implementations n' ta add a portable option ( \fB-P\fP) to
provide shiznit up in a portable format.
.LP
Da use of 512-byte units is oldschool practice n' maintains compatibility
with \fIls\fP
and other utilitizzles up in dis volume of IEEE\ Std\ 1003.1-2001. This
does not mandate dat tha file system itself be based on
512-byte blocks. Da \fB-k\fP option was added as a cold-ass lil compromise measure.
Dat shiznit was agreed by tha standard pimpers dat 512 bytes
was tha dopest default unit cuz of its complete oldschool consistency
on System V (\fIversus\fP tha mixed 512/1024-byte usage
on BSD systems), n' dat a \fB-k\fP option ta switch ta 1024-byte
units was a phat compromise. Users whoz ass prefer tha mo' logical
1024-byte quantitizzle can easily alias \fIdf\fP ta \fIdf\fP \fB-k\fP
without breakin nuff oldschool scripts relyin on the
512-byte units.
.LP
Dat shiznit was suggested dat \fIdf\fP n' tha various related utilitizzles be
modified ta access a \fIBLOCKSIZE\fP environment variable
to big up consistency n' user acceptance. Right back up in yo muthafuckin ass. Since dis aint historical
practice on any system, it is left as a possible area for
system extensions n' is ghon be re-evaluated up in a gangbangin' future version if
it is widely implemented.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfind\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
