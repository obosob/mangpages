.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ECHO" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" echo 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
echo \- write arguments ta standard output
.SH SYNOPSIS
.LP
\fBecho\fP \fB[\fP\fIstring\fP \fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fIecho\fP utilitizzle writes its arguments ta standard output, followed
by a <newline>. If there be no arguments, only
the <newline> is written.
.SH OPTIONS
.LP
Da \fIecho\fP utilitizzle shall not recognize tha \fB"--"\fP argument
in tha manner specified by Guideline 10 of tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Section 12.2, Utility
Syntax
Guidelines; \fB"--"\fP shall be recognized as a strang operand.
.LP
Implementations shall not support any options.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIstring\fP
A strang ta be freestyled ta standard output. If tha straight-up original gangsta operand is
\fB-n\fP, or if any of tha operandz contain a funky-ass backslash (
\fB'\\'\fP ) character, tha thangs up in dis biatch is implementation-defined. Y'all KNOW dat shit, muthafucka! 
.LP
On XSI-conformant systems, if tha straight-up original gangsta operand is \fB-n\fP, it shall
be treated as a string, not a option. I aint talkin' bout chicken n' gravy biatch. Da following
characta sequences shall be recognized on XSI-conformant systems
within any of tha arguments:
.TP 7
\fB\\a\fP
.RS
Write a <alert>.
.RE
.TP 7
\fB\\b\fP
.RS
Write a <backspace>.
.RE
.TP 7
\fB\\c\fP
.RS
Suppress tha <newline> dat otherwise bigs up tha final argument in
the output fo' realz. All charactas followin the
\fB'\\c'\fP up in tha arguments shall be ignored.
.RE
.TP 7
\fB\\f\fP
.RS
Write a <form-feed>.
.RE
.TP 7
\fB\\n\fP
.RS
Write a <newline>.
.RE
.TP 7
\fB\\r\fP
.RS
Write a <carriage-return>.
.RE
.TP 7
\fB\\t\fP
.RS
Write a <tab>.
.RE
.TP 7
\fB\\v\fP
.RS
Write a <vertical-tab>.
.RE
.TP 7
\fB\\\\\fP
.RS
Write a funky-ass backslash character.
.RE
.TP 7
\fB\\0\fP\fInum\fP
.RS
Write a 8-bit value dat is tha zero, one, two, or three-digit octal
number \fInum\fP.
.RE
.sp
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIecho\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as opposed
to multi-byte charactas up in arguments). 
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da \fIecho\fP utilitizzle arguments shall be separated by single <space>s
and a <newline> shall follow tha last
argument.  Output transformations shall occur based on tha escape
sequences up in tha input. Right back up in yo muthafuckin ass. See tha OPERANDS section. I aint talkin' bout chicken n' gravy biatch. 
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
It aint possible ta use \fIecho\fP portably across all POSIX systems
unless both \fB-n\fP (as tha straight-up original gangsta argument) n' escape
sequences is omitted.
.LP
Da \fIprintf\fP utilitizzle can be used portably ta emulate any of the
traditional
behaviorz of tha \fIecho\fP utilitizzle as bigs up (assumin dat \fIIFS\fP
has its standard value or is unset):
.IP " *" 3
Da phat System V \fIecho\fP n' tha requirements on XSI implementations
in dis volume of IEEE\ Std\ 1003.1-2001
are equivalent to:
.sp
.RS
.nf

\fBprintf "%b\\n" "$*"
\fP
.fi
.RE
.LP
.IP " *" 3
Da BSD \fIecho\fP is equivalent to:
.sp
.RS
.nf

\fBif [ "X$1" = "X-n" ]
then
    shift
    printf "%s" "$*"
else
    printf "%s\\n" "$*"
fi
\fP
.fi
.RE
.LP
.LP
New applications is encouraged ta use \fIprintf\fP instead of \fIecho\fP.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da \fIecho\fP utilitizzle has not been made obsolescent cuz of its
extremely widespread use up in oldschool applications.
Conformin applications dat wish ta do promptin without <newline>s
or dat could possibly be expectin ta echo a \fB-n\fP,
should use tha \fIprintf\fP utilitizzle derived from tha Ninth Edition
system.
.LP
As specified, \fIecho\fP writes its arguments up in tha simplest of ways.
Da two different oldschool versionz of \fIecho\fP
vary up in fatally incompatible ways.
.LP
Da BSD \fIecho\fP checks tha straight-up original gangsta argument fo' tha strang \fB-n\fP
which causes it ta suppress tha <newline> that
would otherwise follow tha final argument up in tha output.
.LP
Da System V \fIecho\fP do not support any options yo, but allows escape
sequences within its operands, as busted lyrics bout fo' XSI
implementations up in tha OPERANDS section.
.LP
Da \fIecho\fP utilitizzle do not support Utilitizzle Syntax Guideline 10
because oldschool applications depend on \fIecho\fP to
echo \fIall\fP of its arguments, except fo' tha \fB-n\fP option in
the BSD version.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIprintf\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
