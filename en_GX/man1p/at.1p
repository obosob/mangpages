.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "AT" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" at 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
at \- execute commandz at a lata time
.SH SYNOPSIS
.LP
\fBat\fP \fB[\fP\fB-m\fP\fB][\fP\fB-f\fP \fIfile\fP\fB][\fP\fB-q\fP
\fIqueuename\fP\fB]\fP \fB-t\fP \fItime_arg\fP\fB
.br
.sp
at\fP \fB[\fP\fB-m\fP\fB][\fP\fB-f\fP \fIfile\fP\fB][\fP\fB-q\fP \fIqueuename\fP\fB]\fP
\fItimespec\fP
\fB\&...
.br
.sp
at -r\fP \fIat_job_id\fP \fB...
.br
.sp
at -l -q\fP \fIqueuename\fP\fB
.br
.sp
at -l\fP \fB[\fP\fIat_job_id\fP \fB...\fP\fB]\fP\fB\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIat\fP utilitizzle shall read commandz from standard input n' group
them together as a \fIat-job\fP, ta be executed at a
lata time.
.LP
Da at-job shall be executed up in a separate invocation of tha shell,
runnin up in a separate process crew wit no controlling
terminal, except dat tha environment variables, current hustlin directory,
file creation mask, n' other implementation-defined
execution-time attributes up in effect when tha \fIat\fP utilitizzle is executed
shall be retained n' used when tha at-job is
executed.
.LP
When tha at-job is submitted, tha \fIat_job_id\fP n' scheduled time
shall be freestyled ta standard error. Shiiit, dis aint no joke. Da \fIat_job_id\fP
is a identifier dat shall be a strang consistin solely of alphanumeric
charactas n' tha period character n' shit. Da \fIat_job_id\fP
shall be assigned by tha system when tha thang is scheduled such that
it uniquely identifies a particular thang.
.LP
User notification n' tha processin of tha thangz standard output
and standard error is busted lyrics bout under tha \fB-m\fP
option.
.LP
Users shall be permitted ta use \fIat\fP if they name appears in
the file \fB/usr/lib/cron/at.allow\fP. If dat file do not
exist, tha file \fB/usr/lib/cron/at.deny\fP shall be checked ta determine
whether tha user shall be denied access ta \fIat\fP. If
neither file exists, only a process wit tha appropriate privileges
shall be allowed ta submit a thang. If only \fBat.deny\fP exists
and is empty, global usage shall be permitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \fBat.allow\fP
and \fBat.deny\fP filez shall consist of one user name per
line. 
.SH OPTIONS
.LP
Da \fIat\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-f\ \fP \fIfile\fP
Specify tha pathname of a gangbangin' file ta be used as tha source of tha at-job,
instead of standard input.
.TP 7
\fB-l\fP
(Da letta ell.) Report all thangs scheduled fo' tha invokin user
if no \fIat_job_id\fP operandz is specified. Y'all KNOW dat shit, muthafucka! If
\fIat_job_id\fPs is specified, report only shiznit fo' these
jobs. Da output shall be freestyled ta standard output.
.TP 7
\fB-m\fP
Send mail ta tha invokin user afta tha at-job has run, announcing
its completion. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Standard output n' standard error produced
by tha at-job shall be mailed ta tha user as well, unless redirected
elsewhere, so peek-a-boo, clear tha way, I be comin' thru fo'sho. Mail shall be busted even if tha thang produces no
output. 
.LP
If \fB-m\fP aint used, tha thangz standard output n' standard error
shall be provided ta tha user by meanz of mail, unless
they is repimped up elsewhere; if there is no such output ta provide,
the implementation need not notify tha user of tha thang's
completion.
.TP 7
\fB-q\ \fP \fIqueuename\fP
.sp
Specify up in which queue ta schedule a thang fo' submission. I aint talkin' bout chicken n' gravy biatch. When used
with tha \fB-l\fP option, limit tha search ta dat particular
queue. By default, at-jobs shall be scheduled up in queue \fIa\fP. In
contrast, queue \fIb\fP shall be reserved fo' batch thangs; see
\fIbatch\fP. Da meaningz of all other \fIqueuename\fPs is implementation-defined.
If
\fB-q\fP is specified along wit either of tha \fB-t\fP \fItime_arg\fP
or \fItimespec\fP arguments, tha thangs up in dis biatch are
unspecified.
.TP 7
\fB-r\fP
Remove tha thangs wit tha specified \fIat_job_id\fP operandz dat were
previously scheduled by tha \fIat\fP utility.
.TP 7
\fB-t\ \fP \fItime_arg\fP
Submit tha thang ta be run all up in tha time specified by tha \fItime\fP option-argument,
which tha application shall ensure has the
format as specified by tha \fItouch\fP \fB-t\fP \fItime\fP utility.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIat_job_id\fP
Da name reported by a previous invocation of tha \fIat\fP utility
at tha time tha thang was scheduled.
.TP 7
\fItimespec\fP
Submit tha thang ta be run all up in tha date n' time specified. Y'all KNOW dat shit, muthafucka! All of the
\fItimespec\fP operandz is interpreted as if they were
separated by <space>s n' concatenated, n' shall be parsed as busted lyrics about
in tha grammar all up in tha end of dis section. I aint talkin' bout chicken n' gravy biatch. Da date
and time shall be interpreted as bein up in tha timezone of tha user
(as determined by tha \fITZ\fP variable), unless a timezone
name appears as part of \fItime\fP, below. 
.LP
In tha POSIX locale, tha followin raps bout tha three partz of the
time justification strin fo' realz. All of tha joints from the
\fILC_TIME\fP categories up in tha POSIX locale shall be recognized in
a case-insensitizzle manner.
.TP 7
\fItime\fP
.RS
Da time can be specified as one, two, or four digits, n' you can put dat on yo' toast. One-digit and
two-digit numbers shall be taken ta be hours; four-digit
numbers ta be minutes n' minutes. Da time can alternatively be specified
as two numbers separated by a cold-ass lil colon, meaning
\fIhour\fP:\fIminute\fP fo' realz. An AM/PM indication (one of tha joints from
the \fBam_pm\fP keywordz up in tha \fILC_TIME\fP locale
category) can follow tha time; otherwise, a 24-hour clock time shall
be understood. Y'all KNOW dat shit, muthafucka! I be fly as a gangbangin' falcon, soarin all up in tha sky dawwwwg! A timezone name can also follow ta further
qualify tha time. Da aaight timezone names is implementation-defined,
except dat they shall be case-insensitizzle n' the
strin \fButc\fP is supported ta indicate tha time is up in Coordinated
Universal Time. In tha POSIX locale, tha \fItime\fP field
can also be one of tha followin tokens: 
.TP 7
\fBmidnight\fP
.RS
Indicates tha time 12:00 be (00:00).
.RE
.TP 7
\fBnoon\fP
.RS
Indicates tha time 12:00 pm.
.RE
.TP 7
\fBnow\fP
.RS
Indicates tha current dizzle n' time. Invokin \fIat\fP <\fBnow\fP>
shall submit a at-job fo' potentially immediate
execution (that is, subject only ta unspecified schedulin delays).
.RE
.sp
.RE
.TP 7
\fIdate\fP
.RS
An optionizzle \fIdate\fP can be specified as either a month name (one
of tha joints from tha \fBmon\fP or \fBabmon\fP keywords
in tha \fILC_TIME\fP locale category) followed by a thugged-out dizzle number (and
possibly year number preceded by a cold-ass lil comma), or a thugged-out dizzle of the
week (one of tha joints from tha \fBday\fP or \fBabday\fP keywords
in tha \fILC_TIME\fP locale category). In tha POSIX locale,
two special minutes shall be recognized: 
.TP 7
\fBtodizzle\fP
.RS
Indicates tha current day.
.RE
.TP 7
\fBtomorrow\fP
.RS
Indicates tha dizzle followin tha current day.
.RE
.sp
.LP
If no \fIdate\fP is given, \fBtodizzle\fP shall be assumed if tha given
time is pimped outa than tha current time, and
\fBtomorrow\fP shall be assumed if it is less. If tha given month
is less than tha current month (and no year is given), next year
shall be assumed.
.RE
.TP 7
\fIincrement\fP
.RS
Da optionizzle \fIincrement\fP shall be a number preceded by a plus
sign ( \fB'+'\fP ) n' suffixed by one of tha following:
\fBminutes\fP, \fBhours\fP, \fBdays\fP, \fBweeks\fP, \fBmonths\fP,
or \fByears\fP. (Da singular forms shall also be
accepted.) Da keyword \fBnext\fP shall be equivalent ta a increment
number of +1. For example, tha followin is equivalent
commands: 
.sp
.RS
.nf

\fBat 2pm + 1 week
at 2pm next week
\fP
.fi
.RE
.RE
.sp
.sp
.LP
Da followin grammar raps bout tha precise format of \fItimespec\fP
in tha POSIX locale. Da general conventions fo' this
style of grammar is busted lyrics bout up in \fIGrammar Conventions\fP . This
formal syntax shall
take precedence over tha precedin text syntax description. I aint talkin' bout chicken n' gravy biatch. Da longest
possible token or delimita shall be recognized at a given
point. When used up in a \fItimespec\fP, white space shall also delimit
tokens.
.sp
.RS
.nf

\fB%token hr24clock_hr_min
%token hr24clock_hour
/*
  An hr24clock_hr_min be a one, two, or four-digit number n' shiznit fo' realz. A one-digit
  or two-digit number constitutes a hr24clock_hour fo' realz. An hr24clock_hour
  may be any of tha single digits [0,9], or may be double digits, ranging
  from [00,23]. If a hr24clock_hr_min be a gangbangin' four-digit number, the
  first two digits shall be a valid hr24clock_hour, while tha last two
  represent tha number of minutes, from [00,59].
*/
.sp

%token wallclock_hr_min
%token wallclock_hour
/*
  A wallclock_hr_min be a one, two-digit, or four-digit number.
  A one-digit or two-digit number constitutes a wallclock_hour.
  A wallclock_hour may be any of tha single digits [1,9], or may
  be double digits, rangin from [01,12]. If a wallclock_hr_min
  be a gangbangin' four-digit number, tha straight-up original gangsta two digits shall be a valid
  wallclock_hour, while tha last two represent tha number of
  minutes, from [00,59].
*/
.sp

%token minute
/*
  A minute be a one or two-digit number whose value can be [0,9]
  or [00,59].
*/
.sp

%token day_number
/*
  A day_number be a number up in tha range appropriate fo' tha particular
  month n' year specified by month_name n' year_number, respectively.
  If no year_number is given, tha current year be assumed if tha given
  date n' time is lata dis year. Shiiit, dis aint no joke. If no year_number is given and
  tha date n' time have already occurred dis year n' tha month is
  not tha current month, next year is tha assumed year.
*/
.sp

%token year_number
/*
  A year_number be a gangbangin' four-digit number representin tha year A.D., in
  which tha at_job is ta be run.
*/
.sp

%token inc_number
/*
  Da inc_number is tha number of times tha succeedin increment
  period is ta be added ta tha specified date n' time.
*/
.sp

%token timezone_name
/*
  Da name of a optionizzle timezone suffix ta tha time field, up in an
  implementation-defined format.
*/
.sp

%token month_name
/*
  One of tha joints from tha mon or abmon keywordz up in tha LC_TIME
  locale category.
*/
.sp

%token day_of_week
/*
  One of tha joints from tha dizzle or abdizzle keywordz up in tha LC_TIME
  locale category.
*/
.sp

%token am_pm
/*
  One of tha joints from tha am_pm keyword up in tha LC_TIME locale
  category.
*/
.sp

%start timespec
%%
timespec    : time
            | time date
            | time increment
            | time date increment
            | nowspec
            ;
.sp

nowspec     : "now"
            | "now" increment
            ;
.sp

time        : hr24clock_hr_min
            | hr24clock_hr_min timezone_name
            | hr24clock_hour ":" minute
            | hr24clock_hour ":" minute timezone_name
            | wallclock_hr_min am_pm
            | wallclock_hr_min am_pm timezone_name
            | wallclock_hour ":" minute am_pm
            | wallclock_hour ":" minute am_pm timezone_name
            | "noon"
            | "midnight"
            ;
.sp

date        : month_name day_number
            | month_name day_number "," year_number
            | day_of_week
            | "todizzle"
            | "tomorrow"
            ;
.sp

increment   : "+" inc_number inc_period
            | "next" inc_period
            ;
.sp

inc_period  : "minute" | "minutes"
            | "hour" | "hours"
            | "day" | "days"
            | "week" | "weeks"
            | "month" | "months"
            | "year" | "years"
            ;
\fP
.fi
.RE
.SH STDIN
.LP
Da standard input shall be a text file consistin of commandz acceptable
to tha shell command language busted lyrics bout up in \fIShell Command Language\fP
\&. Da standard input shall only be used if no \fB-f\fP \fIfile\fP
option is specified.
.SH INPUT FILES
.LP
See tha STDIN section.
.LP
Da text filez \fB/usr/lib/cron/at.allow\fP n' \fB/usr/lib/cron/at.deny\fP
shall contain zero or mo' user names, one per line,
of playas whoz ass are, respectively, authorized or denied access ta the
\fIat\fP n' \fIbatch\fP
utilities. Put ya muthafuckin choppers up if ya feel dis! 
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIat\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fILC_TIME\fP
Determine tha format n' contents fo' date n' time strings written
and accepted by \fIat\fP.
.TP 7
\fISHELL\fP
Determine a name of a cold-ass lil command interpreta ta be used ta invoke the
at-job. If tha variable is unset or null, \fIsh\fP shall be used.
If it is set ta a value other than a name fo' \fIsh\fP, tha implementation
shall do one of tha following: use dat shell; use \fIsh\fP; use the
login shell from tha user database; or any of tha precedin accompanied
by a warning
diagnostic bout which was chosen.
.TP 7
\fITZ\fP
Determine tha timezone. Da thang shall be submitted fo' execution at
the time specified by \fItimespec\fP or \fB-t\fP
\fItime\fP relatizzle ta tha timezone specified by tha \fITZ\fP variable.
If \fItimespec\fP specifies a timezone, it shall
override \fITZ\fP.  If \fItimespec\fP do not specify a timezone
and \fITZ\fP is unset or null, a unspecified default timezone
shall be used.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
When standard input be a terminal, promptz of unspecified format for
each line of tha user input busted lyrics bout up in tha STDIN section
may be freestyled ta standard output.
.LP
In tha POSIX locale, tha followin shall be freestyled ta tha standard
output fo' each thang when thangs is listed up in response ta the
\fB-l\fP option:
.sp
.RS
.nf

\fB"%s\\t%s\\n",\fP \fIat_job_id\fP\fB, <\fP\fIdate\fP\fB>
\fP
.fi
.RE
.LP
where \fIdate\fP shall be equivalent up in format ta tha output of:
.sp
.RS
.nf

\fBdate +"%a %b %e %T %Y"
\fP
.fi
.RE
.LP
Da date n' time freestyled shall be adjusted so dat they step tha fuck up in
the timezone of tha user (as determined by tha \fITZ\fP
variable).
.SH STDERR
.LP
In tha POSIX locale, tha followin shall be freestyled ta standard error
when a thang has been successfully submitted:
.sp
.RS
.nf

\fB"job %s at %s\\n",\fP \fIat_job_id\fP\fB, <\fP\fIdate\fP\fB>
\fP
.fi
.RE
.LP
where \fIdate\fP has tha same ol' dirty format as dat busted lyrics bout up in tha STDOUT
section. I aint talkin' bout chicken n' gravy biatch. Neither this, nor warnin lyrics concernin the
selection of tha command interpreter, shall be considered a gangbangin' finger-lickin' diagnostic
that chizzlez tha exit status.
.LP
Diagnostic lyrics, if any, shall be freestyled ta standard error.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Da \fIat\fP utilitizzle successfully submitted, removed, or listed a
job or thangs.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Da thang shall not be scheduled, removed, or listed.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da format of tha \fIat\fP command line shown here is guaranteed only
for tha POSIX locale. Other cultures may be supported
with substantially different intercourses, although implementations
are encouraged ta provide comparable levelz of functionality.
.LP
Since tha commandz run up in a separate shell invocation, hustlin in
a separate process crew wit no controllin terminal, open
file descriptors, traps, n' prioritizzle inherited from tha invoking
environment is lost.
.LP
Some implementations do not allow substitution of different shells
usin \fISHELL\fP.  System V systems, fo' example, have used
the login shell value fo' tha user up in \fB/etc/passwd\fP. To select
reliably another command interpreter, tha user must include it
as part of tha script, such as:
.sp
.RS
.nf

\fB$\fP \fBat 1800
myshell myscript
EOT
\fP\fBjob ... at ...
$\fP
.fi
.RE
.SH EXAMPLES
.IP " 1." 4
This sequence can be used at a terminal:
.sp
.RS
.nf

\fBat -m 0730 tomorrow
sort < file >outfile
EOT
\fP
.fi
.RE
.LP
.IP " 2." 4
This sequence, which demonstrates redirectin standard error ta a
pipe, is useful up in a cold-ass lil command procedure (the sequence of output
redirection justifications is significant):
.sp
.RS
.nf

\fBat now + 1 minute <<!
diff file1 file2 2>&1 >outfile | mailx mygroup
!
\fP
.fi
.RE
.LP
.IP " 3." 4
To gotz a thang reschedule itself, \fIat\fP can be invoked from within
the at-job. For example, dis everyday processin script
named \fBmy.daily\fP runs every last muthafuckin dizzle (although \fIcrontab\fP be a more
appropriate vehicle
for such work):
.sp
.RS
.nf

\fB# my.daily runs every last muthafuckin day
\fP\fIdaily processing\fP\fBat now tomorrow < my.daily
\fP
.fi
.RE
.LP
.IP " 4." 4
Da spacin of tha three portionz of tha POSIX locale \fItimespec\fP
is like flexible as long as there be no ambiguities.
Examplez of various times n' operand presentation include:
.sp
.RS
.nf

\fBat 0815am Jan 24
at 8 :15amjan24
at now "+ 1day"
at 5 pm FRIday
at '17
    utc+
    30minutes'
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
Da \fIat\fP utilitizzle readz from standard input tha commandz ta be
executed at a lata time. Well shiiiit, it may be useful ta redirect
standard output n' standard error within tha specified commands.
.LP
Da \fB-t\fP \fItime\fP option was added as a freshly smoked up capabilitizzle ta support
an internationalized way of specifyin a time for
execution of tha submitted thang.
.LP
Early proposals added a "jobname" concept as a way of givin submitted
jobs names dat is meaningful ta tha user submitting
them. Da historical, system-specified \fIat_job_id\fP gives no indication
of what tha fuck tha thang is. Upon further reflection, it was
decided dat tha benefit of dis was not worth tha chizzle up in historical
interface. Da \fIat\fP functionalitizzle is useful up in simple
environments yo, but up in big-ass or complex thangs, tha functionality
provided by tha Batch Skillz option is mo' suitable.
.LP
Da \fB-q\fP option historically has been a undocumented option,
used mainly by tha \fIbatch\fP utility.
.LP
Da System V \fB-m\fP option was added ta provide a method fo' informing
users dat a at-job had completed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Otherwise, users
are only informed when output ta standard error or standard output
are not redirected.
.LP
Da behavior of \fIat\fP <\fBnow\fP> was chizzled up in a early proposal
from bein unspecified ta submittin a thang for
potentially immediate execution. I aint talkin' bout chicken n' gravy biatch. Oldschool BSD \fIat\fP implementations
support all dis bullshit. Oldschool System V implementations give an
error up in dat case yo, but a cold-ass lil chizzle ta tha System V versions should have
no backwards-compatibilitizzle ramifications.
.LP
On BSD-based systems, a \fB-u\fP \fIuser\fP option has allowed them
with appropriate privileges ta access tha work of other
users. Right back up in yo muthafuckin ass. Since dis is primarily a system administration feature and
is not universally implemented, it has been omitted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. Similarly,
a justification fo' tha output format fo' a user wit appropriate
privileges viewin tha queuez of other playas has been
omitted.
.LP
Da \fB-f\fP \fIfile\fP option from System V is used instead of the
BSD method of rockin tha last operand as tha pathname. The
BSD method be ambiguous-does:
.sp
.RS
.nf

\fBat 1200 friday
\fP
.fi
.RE
.LP
mean tha same thang if there be a gangbangin' file named \fBfriday\fP up in tha current
directory?
.LP
Da \fIat_job_id\fP is composed of a limited characta set up in historical
practice, n' it is mandated here ta invalidate
systems dat might try rockin charactas dat require shell quoting
or dat could not be easily parsed by shell scripts.
.LP
Da \fIat\fP utilitizzle varies between System V n' BSD systems up in the
way timezones is used. Y'all KNOW dat shit, muthafucka! On System V systems, tha \fITZ\fP
variable affects tha at-job submission times n' tha times displayed
for tha user n' shit. On BSD systems, \fITZ\fP aint taken into
account. Da BSD behavior is easily  bigged up  wit tha current justification.
If tha user wishes ta have tha timezone default to
that of tha system, they merely need ta issue tha \fIat\fP command
immediately followin a unsettin or null assignment ta \fITZ
\&.\fP For example:
.sp
.RS
.nf

\fBTZ= at noon ...
\fP
.fi
.RE
.LP
gives tha desired BSD result.
.LP
While tha \fIyacc\fP-like grammar specified up in tha OPERANDS section
is lexically
unambiguous wit respect ta tha digit strings, a lexical analyzer
would probably be freestyled ta look fo' n' return digit strings in
those cases. Da parser could then check whether tha digit string
returned be a valid \fIday_number\fP, \fIyear_number\fP, n' so
on, based on tha context.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIbatch\fP, \fIcrontab\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
