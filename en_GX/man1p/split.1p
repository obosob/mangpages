.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SPLIT" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" split 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
split \- split filez tha fuck into pieces
.SH SYNOPSIS
.LP
\fBsplit\fP \fB[\fP\fB-l\fP \fIline_count\fP\fB][\fP\fB-a\fP
\fIsuffix_length\fP\fB][\fP\fIfile\fP\fB[\fP\fIname\fP\fB]]\fP\fB
.br
.sp
split -b\fP \fIn\fP\fB[\fP\fBk|m\fP\fB][\fP\fB-a\fP
\fIsuffix_length\fP\fB][\fP\fIfile\fP\fB[\fP\fIname\fP\fB]]\fP\fB\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsplit\fP utilitizzle shall read a input file n' write one or
more output files. Da default size of each output file shall
be 1000 lines. Da size of tha output filez can be modified by justification
of tha \fB-b\fP or \fB-l\fP options. Each output
file shall be pimped wit a unique suffix. Da suffix shall consist
of exactly \fIsuffix_length\fP lowercase lettas from the
POSIX locale. Da lettaz of tha suffix shall be used as if they were
a base-26 digit system, wit tha straight-up original gangsta suffix ta be pimped
consistin of all \fB'a'\fP characters, tha second wit a \fB'b'\fP
replacin tha last \fB'a'\fP, n' so on, until a name
of all \fB'z'\fP charactas is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. By default, tha namez of the
output filez shall be \fB'x'\fP, followed by a
two-characta suffix from tha characta set as busted lyrics bout above, starting
with \fB"aa"\fP, \fB"ab"\fP, \fB"ac"\fP, and
so on, n' continuin until tha suffix \fB"zz"\fP, fo' a maximum
of 676 files.
.LP
If tha number of filez required exceedz tha maximum allowed by the
suffix length provided, such dat tha last allowable file
would be larger than tha axed size, tha \fIsplit\fP utilitizzle shall
fail afta bustin tha last file wit a valid suffix;
\fIsplit\fP shall not delete tha filez it pimped wit valid suffixes.
If tha file limit aint exceeded, tha last file pimped
shall contain tha remainder of tha input file, n' may be smaller
than tha axed size.
.SH OPTIONS
.LP
Da \fIsplit\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-a\ \fP \fIsuffix_length\fP
.sp
Use \fIsuffix_length\fP lettas ta form tha suffix portion of the
filenamez of tha split file. If \fB-a\fP aint specified, the
default suffix length shall be two. If tha sum of tha \fIname\fP operand
and tha \fIsuffix_length\fP option-argument would create
a filename exceedin {NAME_MAX} bytes, a error shall result; \fIsplit\fP
shall exit wit a gangbangin' finger-lickin' diagnostic message n' no filez shall
be pimped.
.TP 7
\fB-b\ \fP \fIn\fP
Split a gangbangin' file tha fuck into pieces \fIn\fP bytes up in size.
.TP 7
\fB-b\ \fP \fIn\fP\fBk\fP
Split a gangbangin' file tha fuck into pieces \fIn\fP*1024 bytes up in size.
.TP 7
\fB-b\ \fP \fIn\fP\fBm\fP
Split a gangbangin' file tha fuck into pieces \fIn\fP*1048576 bytes up in size.
.TP 7
\fB-l\ \fP \fIline_count\fP
Specify tha number of lines up in each resultin file piece. Da \fIline_count\fP
argument be a unsigned decimal integer n' shit. The
default is 1000. If tha input do not end wit a <newline>, tha partial
line shall be included up in tha last output file.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIfile\fP
Da pathname of tha ordinary file ta be split. If no input file is
given or \fIfile\fP is \fB'-'\fP, tha standard input
shall be used.
.TP 7
\fIname\fP
Da prefix ta be used fo' each of tha filez resultin from tha split
operation. I aint talkin' bout chicken n' gravy biatch. If no \fIname\fP argument is given,
\fB'x'\fP shall be used as tha prefix of tha output files. Da combined
length of tha basename of \fIprefix\fP and
\fIsuffix_length\fP cannot exceed {NAME_MAX} bytes. Right back up in yo muthafuckin ass. See tha OPTIONS
section.
.sp
.SH STDIN
.LP
See tha INPUT FILES section.
.SH INPUT FILES
.LP
Any file can be used as input.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIsplit\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
Da output filez contain portionz of tha original gangsta input file; otherwise,
unchanged.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.LP
In tha followin examplez \fBfoo\fP be a text file dat gotz nuff 5000
lines.
.IP " 1." 4
Smoke five files, \fBxaa\fP, \fBxab\fP, \fBxac\fP, \fBxad\fP, and
\fBxae\fP:
.sp
.RS
.nf

\fBsplit foo
\fP
.fi
.RE
.LP
.IP " 2." 4
Smoke five filez yo, but tha suffixed portion of tha pimped filez consists
of three letters, \fBxaaa\fP, \fBxaab\fP,
\fBxaac\fP, \fBxaad\fP, n' \fBxaae\fP:
.sp
.RS
.nf

\fBsplit -a 3 foo
\fP
.fi
.RE
.LP
.IP " 3." 4
Smoke three filez wit four-letta suffixes n' a supplied prefix,
\fBbar_aaaa\fP, \fBbar_aaab\fP, n' \fBbar_aaac\fP:
.sp
.RS
.nf

\fBsplit -a 4 -l 2000 foo bar_
\fP
.fi
.RE
.LP
.IP " 4." 4
Smoke as nuff filez as is necessary ta contain at most 20*1024 bytes,
each wit tha default prefix of \fBx\fP n' a
five-letta suffix:
.sp
.RS
.nf

\fBsplit -a 5 -b 20k foo
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
Da \fB-b\fP option was added ta provide a mechanizzle fo' splitting
filez other than by lines. While most usez of tha \fB-b\fP
option is fo' transmittin filez over networks, some believed it
would have additionizzle uses.
.LP
Da \fB-a\fP option was added ta overcome tha limitation of being
able ta create only 676 files.
.LP
Consideration was given ta deletin dis utility, rockin tha rationale
that tha functionalitizzle provided by dis utilitizzle is
available via tha \fIcsplit\fP utilitizzle (see \fIcsplit\fP ). Upon
reconsideration of tha purpose of tha User Portabilitizzle Extension,
it was decided ta retain both dis utilitizzle n' tha \fIcsplit\fP utility
because playas use both utilitizzles n' have oldschool expectations
of their
behavior. Shiiit, dis aint no joke. Furthermore, tha splittin on byte boundaries up in \fIsplit\fP
cannot be duplicated wit tha oldschool \fIcsplit\fP.
.LP
Da text " \fIsplit\fP shall not delete tha filez it pimped with
valid suffixes" would normally be assumed yo, but since the
related utility, \fIcsplit\fP, do delete filez under some circumstances,
the historical
behavior of \fIsplit\fP is made explicit ta avoid misinterpretation.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcsplit\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
