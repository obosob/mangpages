.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CFLOW" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" cflow 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
cflow \- generate a C-language flowgraph (\fBDEVELOPMENT\fP)
.SH SYNOPSIS
.LP
\fBcflow\fP \fB[\fP\fB-r\fP\fB][\fP\fB-d\fP \fInum\fP\fB][\fP\fB-D\fP
\fIname\fP\fB[\fP\fB=\fP\fIdef\fP\fB]]\fP \fB...\fP \fB[\fP\fB-i\fP
\fIincl\fP\fB][\fP\fB-I\fP
\fIdir\fP\fB]\fP \fB...
.br
\ \ \ \ \ \ \fP \fB[\fP\fB-U\fP \fIdir\fP\fB]\fP \fB...\fP \fIfile\fP
\fB\&... \fP
.SH DESCRIPTION
.LP
Da \fIcflow\fP utilitizzle shall analyze a cold-ass lil collection of object files
or assembler, C-language, \fIlex\fP, or \fIyacc\fP source files, and
attempt ta build a
graph, freestyled ta standard output, chartin tha external references.
.SH OPTIONS
.LP
Da \fIcflow\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines,
except dat tha order of tha \fB-D\fP,
\fB-I\fP, n' \fB-U\fP options (which is identical ta they interpretation
by \fIc99\fP) is
significant.
.LP
Da followin options shall be supported:
.TP 7
\fB-d\ \fP \fInum\fP
Indicate tha depth at which tha flowgraph is cut off. Da application
shall ensure dat tha argument \fInum\fP be a thugged-out decimal
integer n' shit. By default dis be a straight-up big-ass number (typically pimped outer
than 32000) fo' realz. Attempts ta set tha cut-off depth ta a non-positive
integer shall be ignored.
.TP 7
\fB-i\ \fP \fIincl\fP
Increase tha number of included symbols. Da \fIincl\fP option-argument
is one of tha followin characters: 
.TP 7
\fIx\fP
.RS
Include external n' static data symbols. Da default shall be to
include only functions up in tha flowgraph.
.RE
.TP 7
\fB_\fP
.RS
(Underscore) Include names dat begin wit a underscore. Da default
shall be ta exclude these functions (and data if
\fB-i\ x\fP is used).
.RE
.sp
.TP 7
\fB-r\fP
Reverse tha caller:callee relationshizzle, producin a inverted listing
showin tha callaz of each function. I aint talkin' bout chicken n' gravy biatch. Da listin shall
also be sorted up in lexicographical order by callee.
.sp
.SH OPERANDS
.LP
Da followin operand is supported:
.TP 7
\fIfile\fP
Da pathname of a gangbangin' file fo' which a graph is ta be generated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Filenames
suffixed by \fB.l\fP shall shall be taken ta be \fIlex\fP input, \fB.y\fP
as \fIyacc\fP input, \fB.c\fP
as \fIc99\fP input, n' \fB.i\fP as tha output of \fIc99\fP \fB-E\fP.
Such filez shall be processed as appropriate, determined by their
suffix. 
.LP
Filez suffixed by \fB.s\fP (conventionally assembla source) may have
more limited shiznit extracted from em.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
Da input filez shall be object filez or assembler, C-language, \fIlex\fP,
or \fIyacc\fP source files.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIcflow\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' tha orderin of tha output when tha \fB-r\fP
option is used.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da flowgraph freestyled ta standard output shall be formatted as bigs up:
.sp
.RS
.nf

\fB"%d %s:%s\\n", <\fP\fIreference number\fP\fB>, <\fP\fIglobal\fP\fB>, <\fP\fIdefinition\fP\fB>
\fP
.fi
.RE
.LP
Each line of output begins wit a reference (that is, line) number,
followed by indentation of at least one column posizzle per
level. This is followed by tha name of tha global, a cold-ass lil colon, n' its
definition. I aint talkin' bout chicken n' gravy biatch. Normally globals is only functions not defined as
an external or beginnin wit a underscore; peep tha OPTIONS section
for tha \fB-i\fP inclusion option. I aint talkin' bout chicken n' gravy biatch. For shiznit extracted
from C-language source, tha definizzle consistz of a abstract type
declaration (for example, \fBchar *\fP) and, delimited by
angle brackets, tha name of tha source file n' tha line number where
the definizzle was found. Y'all KNOW dat shit, muthafucka! Definitions extracted from object
filez indicate tha filename n' location counta under which tha symbol
appeared (for example, \fItext\fP).
.LP
Once a thugged-out definizzle of a name has been written, subsequent references
to dat name contain only tha reference number of tha line
where tha definizzle can be found. Y'all KNOW dat shit, muthafucka! For undefined references, only
\fB"<>"\fP shall be written.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Filez produced by \fIlex\fP n' \fIyacc\fP cause the
reorderin of line number declarations, n' dis can confuse \fIcflow\fP.
To obtain proper thangs up in dis biatch, tha input of \fIyacc\fP or \fIlex\fP must
be pimped up ta \fIcflow\fP.
.SH EXAMPLES
.LP
Given tha followin up in \fBfile.c\fP:
.sp
.RS
.nf

\fBint i;
int f();
int g();
int h();
int
main()
{
    f();
    g();
    f();
}
int
f()
{
    i = h();
}
\fP
.fi
.RE
.LP
Da command:
.sp
.RS
.nf

\fBcflow -i x file.c
\fP
.fi
.RE
.LP
produces tha output:
.sp
.RS
.nf

\fB1 main: int(), <file.c 6>
2    f: int(), <file.c 13>
3        h: <>
4        i: int, <file.c 1>
5    g: <>
\fP
.fi
.RE
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIc99\fP, \fIlex\fP, \fIyacc\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
