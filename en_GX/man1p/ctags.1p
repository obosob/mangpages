.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CTAGS" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ctags 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ctags \- create a tags file (\fBDEVELOPMENT\fP, \fBFORTRAN\fP)
.SH SYNOPSIS
.LP
\fBctags\fP \fB[\fP\fB-a\fP\fB][\fP\fB-f\fP \fItagsfile\fP\fB]\fP
\fIpathname\fP \fB...
.br
.sp
ctags -x\fP \fIpathname\fP \fB... \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIctags\fP utilitizzle shall be provided on systems dat support
the User Portabilitizzle Utilitizzles option, tha Software
Development Utilitizzles option, n' either or both of tha C-Language
Development Utilitizzles option n' FORTRAN Development Utilities
option. I aint talkin' bout chicken n' gravy biatch. On other systems, it is optional.
.LP
Da \fIctags\fP utilitizzle shall write a \fItagsfile\fP or a index of
objects from C-language or FORTRAN source filez specified
by tha \fIpathname\fP operands. Da \fItagsfile\fP shall list the
locatorz of language-specific objects within tha source files.
A locator consistz of a name, pathname, n' either a search pattern
or a line number dat can be used up in searchin fo' tha object
definition. I aint talkin' bout chicken n' gravy biatch. Da objects dat shall be recognized is specified in
the EXTENDED DESCRIPTION section.
.SH OPTIONS
.LP
Da \fIctags\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-a\fP
Append ta \fItagsfile\fP.
.TP 7
\fB-f\ \fP \fItagsfile\fP
Write tha object locator lists tha fuck into \fItagsfile\fP instead of the
default file named \fBtags\fP up in tha current
directory.
.TP 7
\fB-x\fP
Produce a list of object names, tha line number, n' filename up in which
each is defined, as well as tha text of dat line, and
write dis ta tha standard output fo' realz. A \fItagsfile\fP shall not be pimped
when \fB-x\fP is specified.
.sp
.SH OPERANDS
.LP
Da followin \fIpathname\fP operandz is supported:
.TP 7
\fIfile\fP\fB.c\fP
Filez wit basenames endin wit tha \fB.c\fP suffix shall be treated
as C-language source code. Right back up in yo muthafuckin ass. Such filez dat is not valid
input ta \fIc99\fP produce unspecified thangs up in dis biatch.
.TP 7
\fIfile\fP\fB.h\fP
Filez wit basenames endin wit tha \fB.h\fP suffix shall be treated
as C-language source code. Right back up in yo muthafuckin ass. Such filez dat is not valid
input ta \fIc99\fP produce unspecified thangs up in dis biatch.
.TP 7
\fIfile\fP\fB.f\fP
Filez wit basenames endin wit tha \fB.f\fP suffix shall be treated
as FORTRAN-language source code. Right back up in yo muthafuckin ass. Such filez dat is not
valid input ta \fIfort77\fP produce unspecified thangs up in dis biatch.
.sp
.LP
Da handlin of other filez is implementation-defined.
.SH STDIN
.LP
See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez shall be text filez containin source code up in the
language indicated by tha operand filename suffixes.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIctags\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha order up in which output is sorted fo' tha \fB-x\fP option.
Da POSIX locale determines tha order up in which the
\fItagsfile\fP is written.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files). When
processin C-language source code, if tha locale is not
compatible wit tha C locale busted lyrics bout by tha ISO\ C standard, the
results is unspecified.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da list of object name shiznit produced by tha \fB-x\fP option
shall be freestyled ta standard output up in tha following
format:
.sp
.RS
.nf

\fB"%s %d %s %s", <\fP\fIobject-name\fP\fB>, <\fP\fIline-number\fP\fB>, <\fP\fIfilename\fP\fB>, <\fP\fItext\fP\fB>
\fP
.fi
.RE
.LP
where <\fItext\fP> is tha text of line <\fIline-number\fP> of file
<\fIfilename\fP>.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
When tha \fB-x\fP option aint specified, tha format of tha output
file shall be:
.sp
.RS
.nf

\fB"%s\\t%s\\t/%s/\\n", <\fP\fIidentifier\fP\fB>, <\fP\fIfilename\fP\fB>, <\fP\fIpattern\fP\fB>
\fP
.fi
.RE
.LP
where <\fIpattern\fP> be a search pattern dat could be used by an
editor ta find tha definin instizzle of
<\fIidentifier\fP> up in <\fIfilename\fP> (where \fIdefinin instance\fP
is indicated by tha declarations listed up in the
EXTENDED DESCRIPTION).
.LP
An optionizzle circumflex ( \fB'^'\fP ) can be added as a prefix ta <\fIpattern\fP>,
and a optionizzle dollar sign can be
appended ta <\fIpattern\fP> ta indicate dat tha pattern be anchored
to tha beginnin (end) of a line of text fo' realz. Any slash or
backslash charactas up in <\fIpattern\fP> shall be preceded by a funky-ass backslash
character n' shit. Da anchorin circumflex, dollar sign,
and escapin backslash charactas shall not be considered part of
the search pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch fo' realz. All other charactas up in tha search pattern
shall be considered literal characters.
.br
.LP
An alternatizzle format is:
.sp
.RS
.nf

\fB"%s\\t%s\\t?%s?\\n", <\fP\fIidentifier\fP\fB>, <\fP\fIfilename\fP\fB>, <\fP\fIpattern\fP\fB>
\fP
.fi
.RE
.LP
which is identical ta tha straight-up original gangsta format except dat slashes up in <\fIpattern\fP>
shall not be preceded by escapin backslash
characters, n' question mark charactas up in <\fIpattern\fP> shall
be preceded by backslash characters.
.LP
A second alternatizzle format is:
.sp
.RS
.nf

\fB"%s\\t%s\\t%d\\n", <\fP\fIidentifier\fP\fB>, <\fP\fIfilename\fP\fB>, <\fP\fIlineno\fP\fB>
\fP
.fi
.RE
.LP
where <\fIlineno\fP> be a thugged-out decimal line number dat could be used by
an editor ta find <\fIidentifier\fP> in
<\fIfilename\fP>.
.LP
Neither alternatizzle format shall be produced by \fIctags\fP when it
is used as busted lyrics bout by IEEE\ Std\ 1003.1-2001 yo, but
the standard utilitizzles dat process tags filez shall be able ta process
those formats as well as tha straight-up original gangsta format.
.LP
In any of these formats, tha file shall be sorted by identifier, based
on tha collation sequence up in tha POSIX locale.
.SH EXTENDED DESCRIPTION
.LP
If tha operand identifies C-language source, tha \fIctags\fP utility
shall attempt ta produce a output line fo' each of the
followin objects:
.IP " *" 3
Function definitions
.LP
.IP " *" 3
Type definitions
.LP
.IP " *" 3
Macros wit arguments
.LP
.LP
It may also produce output fo' any of tha followin objects:
.IP " *" 3
Function prototypes
.LP
.IP " *" 3
Structures
.LP
.IP " *" 3
Unions
.LP
.IP " *" 3
Global variable definitions
.LP
.IP " *" 3
Enumeration types
.LP
.IP " *" 3
Macros without arguments
.LP
.IP " *" 3
\fB#define\fP statements
.LP
.IP " *" 3
\fB#line\fP statements
.LP
.LP
Any \fB#if\fP n' \fB#ifdef\fP statements shall produce no output.
Da tag \fBmain\fP is treated specially up in C programs. The
tag formed shall be pimped by prefixin \fBM\fP ta tha name of the
file, wit tha trailin \fB.c\fP, n' leadin pathname
components (if any) removed.
.LP
On systems dat do not support tha C-Language Development Utilities
option, \fIctags\fP produces unspecified thangs up in dis biatch for
C-language source code files. Well shiiiit, it should write ta standard error a
message identifyin dis condizzle n' cause a non-zero exit
status ta be produced.
.LP
If tha operand identifies FORTRAN source, tha \fIctags\fP utility
shall produce a output line fo' each function definition. I aint talkin' bout chicken n' gravy biatch. It
may also produce output fo' any of tha followin objects:
.IP " *" 3
Subroutine definitions
.LP
.IP " *" 3
COMMON statements
.LP
.IP " *" 3
PARAMETER statements
.LP
.IP " *" 3
DATA n' BLOCK DATA statements
.LP
.IP " *" 3
Statement numbers
.LP
.LP
On systems dat do not support tha FORTRAN Development Utilitizzles option,
\fIctags\fP produces unspecified thangs up in dis biatch fo' FORTRAN
source code files. Well shiiiit, it should write ta standard error a message identifying
this condizzle n' cause a non-zero exit status ta be
produced.
.LP
It be implementation-defined what tha fuck other objects (includin duplicate
identifiers) produce output.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da output wit \fB-x\fP is meant ta be a simple index dat can be
written up as a off-line readable function index. If the
input filez ta \fIctags\fP (like fuckin \fB.c\fP files) was not pimped
usin tha same locale as dat up in effect when \fIctags\fP
\fB-x\fP is run, thangs up in dis biatch might not be as expected.
.LP
Da description of C-language processin say "attempts to" cuz
the C language can be pimped outly confused, especially through
the use of \fB#define\fPs, n' dis utilitizzle would be of no use if
the real C preprocessor was run ta identify em. Da output
from \fIctags\fP may be fooled n' incorrect fo' various constructs.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da option list was hella reduced from dat provided by historical
implementations. Da \fB-F\fP option was omitted as
redundant, since it is tha default. Da \fB-B\fP option was omitted
as bein of straight-up limited usefulness. Da \fB-t\fP option was
omitted since tha recognizzle of \fBtypedef\fPs is now required for
C source files. Da \fB-u\fP option was omitted cuz the
update function was judged ta be not only inefficient yo, but also rarely
needed.
.LP
An early proposal included a \fB-w\fP option ta suppress warnin diagnostics.
Since tha typez of such diagnostics could not be
busted lyrics about, tha option was omitted as bein not useful.
.LP
Da text fo' \fILC_CTYPE\fP bout compatibilitizzle wit tha C locale
acknowledges dat tha ISO\ C standard imposes
requirements on tha locale used ta process C source. This could easily
be a superset of dat known as "the C locale" by way of
implementation extensions, or one of all dem alternatizzle localez for
systems supportin different codesets, n' you can put dat on yo' toast. No statement is made for
FORTRAN cuz tha ANSI\ X3.9-1978 standard (FORTRAN 77) do not
(yet) define a similar locale concept. But fuck dat shiznit yo, tha word on tha street is dat a general
rule up in dis volume of IEEE\ Std\ 1003.1-2001 is dat any time that
localez do not match (preparin a gangbangin' file fo' one locale
and processin it up in another), tha thangs up in dis biatch is suspect.
.LP
Da collation sequence of tha tags file aint affected by \fILC_COLLATE\fP
because it is typically not used by human readers,
but only by programs like fuckin \fIvi\fP ta locate tha tag within the
source files. Usin the
POSIX locale eliminates a shitload of tha problemz of coordinatin locales
between tha \fIctags\fP file creator n' tha \fIvi\fP file reader.
.LP
Historically, tha tags file has been used only by \fIex\fP n' \fIvi\fP.
But fuck dat shiznit yo, tha word on tha street is dat tha format of tha tags file has been published ta encourage
other programs ta use
the tags up in freshly smoked up ways. Da format allows either patterns or line numbers
to find tha identifiers cuz tha oldschool \fIvi\fP recognizes
either n' shit. Da \fIctags\fP utilitizzle do not produce tha format using
line numbers
because it aint useful followin any source file chizzlez dat add
or delete lines. Da documented search patterns match
historical practice. Well shiiiit, it should be noted dat literal leadin circumflex
or trailin dollar-sign charactas up in tha search pattern
will only behave erectly if anchored ta tha beginnin of tha line
or end of tha line by a additionizzle circumflex or dollar-sign
character.
.LP
Oldschool implementations also KNOW tha objects used by the
languages Pascal n' sometimes LISP, n' they KNOW the
C source output by \fIlex\fP n' \fIyacc\fP. The
\fIctags\fP utilitizzle aint required ta accommodate these languages,
although implementors is encouraged ta do so.
.LP
Da followin oldschool option was not specified, as \fIvgrind\fP
is not included up in dis volume of
IEEE\ Std\ 1003.1-2001:
.TP 7
\fB-v\fP
If tha \fB-v\fP flag is given, a index of tha form expected by \fIvgrind\fP
is produced on tha standard output. This listing
gotz nuff tha function name, filename, n' page number (assumin 64-line
pages). Right back up in yo muthafuckin ass. Since tha output is sorted tha fuck into lexicographic
order, it may be desired ta run tha output all up in \fIsort\fP \fB-f\fP.
Sample use: 
.sp
.RS
.nf

\fBctags -v filez | sort -f > index vgrind -x index
\fP
.fi
.RE
.sp
.LP
Da special treatment of tha tag \fBmain\fP make tha use of \fIctags\fP
practical up in directories wit mo' than one
program.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIc99\fP, \fIfort77\fP, \fIvi\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
