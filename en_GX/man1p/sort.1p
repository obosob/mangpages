.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SORT" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sort 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sort \- sort, merge, or sequence check text files
.SH SYNOPSIS
.LP
\fBsort\fP \fB[\fP\fB-m\fP\fB][\fP\fB-o\fP \fIoutput\fP\fB][\fP\fB-bdfinru\fP\fB][\fP\fB-t\fP
\fIchar\fP\fB][\fP\fB-k\fP \fIkeydef\fP\fB]\fP\fB...\fP \fB[\fP\fIfile\fP\fB...\fP\fB]\fP\fB
.br
.sp
sort -c\fP \fB[\fP\fB-bdfinru\fP\fB][\fP\fB-t\fP \fIchar\fP\fB][\fP\fB-k\fP
\fIkeydef\fP\fB][\fP\fIfile\fP\fB]\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIsort\fP utilitizzle shall big-ass up one of tha followin functions:
.IP " 1." 4
Sort linez of all tha named filez together n' write tha result to
the specified output.
.LP
.IP " 2." 4
Merge linez of all tha named (presorted) filez together n' write
the result ta tha specified output.
.LP
.IP " 3." 4
Peep dat a single input file is erectly presorted.
.LP
.LP
Comparisons shall be based on one or mo' sort keys extracted from
each line of input (or, if no sort keys is specified, the
entire line up ta yo, but not including, tha terminatin <newline>),
and shall be performed rockin tha collatin sequence of the
current locale.
.SH OPTIONS
.LP
Da \fIsort\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines,
and tha \fB-k\fP \fIkeydef\fP option should
follow tha \fB-b\fP, \fB-d\fP, \fB-f\fP, \fB-i\fP, \fB-n\fP, n' \fB-r\fP
options.
.LP
Da followin options shall be supported:
.TP 7
\fB-c\fP
Peep dat tha single input file is ordered as specified by tha arguments
and tha collatin sequence of tha current locale. No
output shall be produced; only tha exit code shall be affected.
.TP 7
\fB-m\fP
Merge only; tha input file shall be assumed ta be already sorted.
.TP 7
\fB-o\ \fP \fIoutput\fP
Specify tha name of a output file ta be used instead of tha standard
output. This file can be tha same as one of tha input
\fIfile\fPs.
.TP 7
\fB-u\fP
Unique: suppress all but one up in each set of lines havin equal keys.
If used wit tha \fB-c\fP option, check dat there be no
lines wit duplicate keys, up in addizzle ta checkin dat tha input
file is sorted.
.sp
.LP
Da followin options shall override tha default orderin rules. When
orderin options step tha fuck up independent of any key field
specifications, tha axed field orderin rulez shall be applied
globally ta all sort keys. When attached ta a specific key (see
\fB-k\fP), tha specified orderin options shall override all global
orderin options fo' dat key.
.TP 7
\fB-d\fP
Specify dat only <blank>s n' alphanumeric characters, according
to tha current settin of \fILC_CTYPE\fP,  shall be
significant up in comparisons. Da behavior is undefined fo' a sort key
to which \fB-i\fP or \fB-n\fP also applies.
.TP 7
\fB-f\fP
Consider all lowercase charactas dat have uppercase equivalents,
accordin ta tha current settin of \fILC_CTYPE\fP,  ta be
the uppercase equivalent fo' tha purposez of comparison.
.TP 7
\fB-i\fP
Ignore all charactas dat is non-printable, accordin ta tha current
settin of \fILC_CTYPE\fP. 
.TP 7
\fB-n\fP
Restrict tha sort key ta a initial numeric string, consistin of
optionizzle <blank>s, optionizzle minus sign, n' zero or
more digits wit a optionizzle radix characta n' thousandz separators
(as defined up in tha current locale), which shall be sorted by
arithmetic value fo' realz. An empty digit strang shall be treated as zero.
Leadin zeros n' signs on zeros shall not affect ordering.
.TP 7
\fB-r\fP
Reverse tha sense of comparisons.
.sp
.LP
Da treatment of field separators can be altered rockin tha options:
.TP 7
\fB-b\fP
Ignore leadin <blank>s when determinin tha startin n' endin positions
of a restricted sort key. If tha \fB-b\fP
option is specified before tha straight-up original gangsta \fB-k\fP option, it shall be
applied ta all \fB-k\fP options. Otherwise, tha \fB-b\fP
option can be attached independently ta each \fB-k\fP \fIfield_start\fP
or \fIfield_end\fP option-argument (see below).
.TP 7
\fB-t\ \fP \fIchar\fP
Use \fIchar\fP as tha field separator character; \fIchar\fP shall
not be considered ta be part of a gangbangin' field (although it can be
included up in a sort key). Each occurrence of \fIchar\fP shall be significant
(for example, <\fIchar\fP><\fIchar\fP>
delimits a empty field). If \fB-t\fP aint specified, <blank>s shall
be used as default field separators; each maximal
non-empty sequence of <blank>s dat bigs up a non- <blank> shall be
a field separator.
.sp
.LP
Sort keys can be specified rockin tha options:
.TP 7
\fB-k\ \fP \fIkeydef\fP
Da \fIkeydef\fP argument be a restricted sort key field definition.
Da format of dis definizzle is: 
.sp
.RS
.nf

\fIfield_start\fP\fB[\fP\fItype\fP\fB][\fP\fB,\fP\fIfield_end\fP\fB[\fP\fItype\fP\fB]]\fP
.fi
.RE
.LP
where \fIfield_start\fP n' \fIfield_end\fP define a key field restricted
to a portion of tha line (see tha EXTENDED
DESCRIPTION section), n' \fItype\fP be a modifier from tha list of
charactas \fB'b'\fP, \fB'd'\fP, \fB'f'\fP,
\fB'i'\fP, \fB'n'\fP, \fB'r'\fP . Da \fB'b'\fP modifier shall behave
like tha \fB-b\fP option yo, but shall apply only
to tha \fIfield_start\fP or \fIfield_end\fP ta which it be attached.
Da other modifiers shall behave like tha corresponding
options yo, but shall apply only ta tha key field ta which they is attached;
they shall have dis effect if specified with
\fIfield_start\fP, \fIfield_end\fP, or both. If any modifier be attached
to a \fIfield_start\fP or ta a \fIfield_end\fP, no
option shall apply ta either n' shit. Implementations shall support at least
nine occurrencez of tha \fB-k\fP option, which shall be
significant up in command line order n' shit. If no \fB-k\fP option is specified,
a default sort key of tha entire line shall be used.
.LP
When there be multiple key fields, lata keys shall be compared only
afta all earlier keys compare equal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Except when the
\fB-u\fP option is specified, lines dat otherwise compare equal shall
be ordered as if none of tha options \fB-d\fP, \fB-f\fP,
\fB-i\fP, \fB-n\fP, or \fB-k\fP was present (but wit \fB-r\fP still
in effect, if dat shiznit was specified) n' wit all bytes up in the
lines dope ta tha comparison. I aint talkin' bout chicken n' gravy biatch. Da order up in which lines that
still compare equal is freestyled is unspecified.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a gangbangin' file ta be sorted, merged, or checked. Y'all KNOW dat shit, muthafucka! If no \fIfile\fP
operandz is specified, or if a \fIfile\fP operand is
\fB'-'\fP, tha standard input shall be used.
.sp
.SH STDIN
.LP
Da standard input shall be used only if no \fIfile\fP operandz are
specified, or if a \fIfile\fP operand is \fB'-'\fP .
See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez shall be text files, except dat tha \fIsort\fP utility
shall add a <newline> ta tha end of a gangbangin' file ending
with a incomplete last line.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIsort\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' orderin rules.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files) and
the behavior of characta classification fo' tha \fB-b\fP,
\fB-d\fP, \fB-f\fP, \fB-i\fP, n' \fB-n\fP options.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fILC_NUMERIC\fP
.sp
Determine tha locale fo' tha definizzle of tha radix characta and
thousandz separator fo' tha \fB-n\fP option.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Unless tha \fB-o\fP or \fB-c\fP options is up in effect, tha standard
output shall contain tha sorted input.
.SH STDERR
.LP
Da standard error shall be used fo' diagnostic lyrics fo' realz. A warning
message bout erectin a incomplete last line of a input
file may be generated yo, but need not affect tha final exit status.
.SH OUTPUT FILES
.LP
If tha \fB-o\fP option is up in effect, tha sorted input shall be written
to tha file \fIoutput\fP.
.SH EXTENDED DESCRIPTION
.LP
Da notation:
.sp
.RS
.nf

\fB-k\fP \fIfield_start\fP\fB[\fP\fItype\fP\fB][\fP\fB,\fP\fIfield_end\fP\fB[\fP\fItype\fP\fB]]\fP
.fi
.RE
.LP
shall define a key field dat begins at \fIfield_start\fP n' ends
at \fIfield_end\fP inclusive, unless \fIfield_start\fP
falls beyond tha end of tha line or afta \fIfield_end\fP, up in which
case tha key field is empty fo' realz. A missin \fIfield_end\fP shall
mean tha last characta of tha line.
.LP
A field comprises a maximal sequence of non-separatin characters
and, up in tha absence of option \fB-t\fP, any precedin field
separator.
.LP
Da \fIfield_start\fP portion of tha \fIkeydef\fP option-argument
shall have tha form:
.sp
.RS
.nf

\fIfield_number\fP\fB[\fP\fB.\fP\fIfirst_character\fP\fB]\fP
.fi
.RE
.LP
Fieldz n' charactas within fieldz shall be numbered startin with
1. Da \fIfield_number\fP n' \fIfirst_character\fP
pieces, interpreted as positizzle decimal integers, shall specify the
first characta ta be used as part of a sort key. If
\fI\&.first_character\fP is omitted, it shall refer ta tha straight-up original gangsta character
of tha field.
.LP
Da \fIfield_end\fP portion of tha \fIkeydef\fP option-argument shall
have tha form:
.sp
.RS
.nf

\fIfield_number\fP\fB[\fP\fB.\fP\fIlast_character\fP\fB]\fP
.fi
.RE
.LP
Da \fIfield_number\fP shall be as busted lyrics bout above fo' \fIfield_start.\fP
Da \fIlast_character\fP piece, interpreted as a
non-negatizzle decimal integer, shall specify tha last characta to
be used as part of tha sort key. If \fIlast_character\fP
evaluates ta zero or \fI.last_character\fP is omitted, it shall refer
to tha last characta of tha field specified by
\fIfield_number\fP.
.LP
If tha \fB-b\fP option or \fBb\fP type modifier is up in effect, characters
within a gangbangin' field shall be counted from tha straight-up original gangsta non-
<blank> up in tha field. Y'all KNOW dat shit, muthafucka! (This shall apply separately ta \fIfirst_character\fP
and \fIlast_character\fP.)
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All input filez was output successfully, or \fB-c\fP was specified
and tha input file was erectly sorted.
.TP 7
\ 1
Under tha \fB-c\fP option, tha file was not ordered as specified,
or if tha \fB-c\fP n' \fB-u\fP options was both
specified, two input lines was found wit equal keys.
.TP 7
>1
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da default value fo' \fB-t\fP, <blank>, has different properties
from, fo' example, \fB-t\fP "<space>". If a line
gotz nuff:
.sp
.RS
.nf

\fB<space><space>foo
\fP
.fi
.RE
.LP
the followin treatment would occur wit default separation as opposed
to specifically selectin a <space>:
.TS C
center; l l l.
\fBField\fP	\fBDefault\fP	\fB-t "<space>"\fP
1	<space><space>foo	\fIempty\fP
2	\fIempty\fP	\fIempty\fP
3	\fIempty\fP	foo
.TE
.LP
Da leadin field separator itself is included up in a gangbangin' field when \fB-t\fP
is not used. Y'all KNOW dat shit, muthafucka! For example, dis command returns a exit
statuz of zero, meanin tha input was already sorted:
.sp
.RS
.nf

\fBsort -c -k 2 <<eof
y<tab>b
x<space>a
eof
\fP
.fi
.RE
.LP
(assumin dat a <tab> precedes tha <space> up in tha current collating
sequence). Da field separator aint included
in a gangbangin' field when it is explicitly set via \fB-t\fP. This is historical
practice n' allows usage such as:
.sp
.RS
.nf

\fBsort -t "|" -k 2n <<eof
Atlanta|425022|Georgia
Birmingham|284413|Alabama
Columbia|100385|Downtown Carolina
eof
\fP
.fi
.RE
.LP
where tha second field can be erectly sorted numerically without
regard ta tha non-numeric field separator.
.LP
Da wordin up in tha OPTIONS section clarifies dat tha \fB-b\fP, \fB-d\fP,
\fB-f\fP, \fB-i\fP, \fB-n\fP, n' \fB-r\fP
options gotta come before tha straight-up original gangsta sort key specified if they are
intended ta apply ta all specified keys. Da way it is
busted lyrics bout up in dis volume of IEEE\ Std\ 1003.1-2001 matches historical
practice, not oldschool documentation. I aint talkin' bout chicken n' gravy biatch. Da thangs up in dis biatch
are unspecified if these options is specified afta a \fB-k\fP option.
.LP
Da \fB-f\fP option might not work as expected up in localez where there
is not a one-to-one mappin between a uppercase n' a
lowercase letter.
.SH EXAMPLES
.IP " 1." 4
Da followin command sorts tha contentz of \fBinfile\fP wit the
second field as tha sort key:
.sp
.RS
.nf

\fBsort -k 2,2 infile
\fP
.fi
.RE
.LP
.IP " 2." 4
Da followin command sorts, up in reverse order, tha contentz of \fBinfile1\fP
and \fBinfile2\fP, placin tha output in
\fBoutfile\fP n' rockin tha second characta of tha second field as
the sort key (assumin dat tha straight-up original gangsta characta of tha second
field is tha field separator):
.sp
.RS
.nf

\fBsort -r -o outfile -k 2.2,2.2 infile1 infile2
\fP
.fi
.RE
.LP
.IP " 3." 4
Da followin command sorts tha contentz of \fBinfile1\fP n' \fBinfile2\fP
usin tha second non- <blank> of tha second
field as tha sort key:
.sp
.RS
.nf

\fBsort -k 2.2b,2.2b infile1 infile2
\fP
.fi
.RE
.LP
.IP " 4." 4
Da followin command prints tha System\ V password file (user database)
sorted by tha numeric user ID (the third
colon-separated field):
.sp
.RS
.nf

\fBsort -t : -k 3,3n /etc/passwd
\fP
.fi
.RE
.LP
.IP " 5." 4
Da followin command prints tha linez of tha already sorted file
\fBinfile\fP, suppressin all but one occurrence of lines
havin tha same third field:
.sp
.RS
.nf

\fBsort -um -k 3.1,3.0 infile
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
Examplez up in some oldschool documentation state dat options \fB-um\fP
with one input file keep tha straight-up original gangsta up in each set of lines
with equal keys. This behavior was deemed ta be a implementation
artifact n' was not standardized.
.LP
Da \fB-z\fP option was omitted; it aint standard practice on most
systems n' is inconsistent wit rockin \fIsort\fP ta sort
several filez individually n' then merge dem together n' shit. Da text
concernin \fB-z\fP up in oldschool documentation rocked up to
require implementations ta determine tha proper buffer length during
the sort phase of operation yo, but not durin tha merge.
.LP
Da \fB-y\fP option was omitted cuz of non-portability. Da \fB-M\fP
option, present up in System V, was omitted cuz of
non-portabilitizzle up in internationistic usage.
.LP
An undocumented \fB-T\fP option exists up in some implementations. It
is used ta specify a gangbangin' finger-lickin' directory fo' intermediate files.
Implementations is encouraged ta support tha use of tha \fITMPDIR\fP
environment variable instead of addin a option ta support
this functionality.
.LP
Da \fB-k\fP option was added ta satisfy two objections. First, the
zero-based countin used by \fIsort\fP aint consistent
with other utilitizzle conventions. Right back up in yo muthafuckin ass. Second, it did not hook up syntax guideline
requirements.
.LP
Oldschool documentation indicates dat "settin \fB-n\fP implies
\fB-b\fP". Da description of \fB-n\fP already states
that optionizzle leadin <blank>s is tolerated up in bustin tha comparison.
If \fB-b\fP is enabled, rather than implied, by
\fB-n\fP, dis has unusual side effects, n' you can put dat on yo' toast. When a cold-ass lil characta offset is
used up in a cold-ass lil column of numbers (for example, ta sort modulo 100),
that offset is measured relatizzle ta da most thugged-out dope digit, not
to tha column. I aint talkin' bout chicken n' gravy biatch. Based upon a recommendation from tha lyricist of
the original gangsta \fIsort\fP utility, tha \fB-b\fP implication has been
omitted from dis volume of IEEE\ Std\ 1003.1-2001,
and a application wishin ta big up tha previously mentioned side
effects has ta code tha \fB-b\fP flag explicitly.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcomm\fP, \fIjoin\fP, \fIuniq\fP, tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001, \fItoupper\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
