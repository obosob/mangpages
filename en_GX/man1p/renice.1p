.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "RENICE" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" renice 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
renice \- set sick jointz of hustlin processes
.SH SYNOPSIS
.LP
\fBrenice -n\fP \fIincrement\fP \fB[\fP\fB-g | -p | -u\fP\fB]\fP \fIID\fP
\fB\&... \fP
.SH DESCRIPTION
.LP
Da \fIrenice\fP utilitizzle shall request dat tha sick joints (see the
Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 3.239, Sick Value) of one or mo' hustlin processes be chizzled.
By
default, tha applicable processes is specified by they process IDs.
When a process crew is specified (see \fB-g\fP), the
request shall apply ta all processes up in tha process group.
.LP
Da sick value shall be bounded up in a implementation-defined manner.
If tha axed \fIincrement\fP would raise or lower the
nice value of tha executed utilitizzle beyond implementation-defined limits,
then tha limit whose value was exceeded shall be used.
.LP
When a user is \fIrenice\fPd, tha request applies ta all processes
whose saved set-user-ID matches tha user ID correspondin to
the user.
.LP
Regardless of which options is supplied or any other factor, \fIrenice\fP
shall not alta tha sick jointz of any process
unless tha user requestin such a cold-ass lil chizzle has appropriate privileges
to do so fo' tha specified process. If tha user lacks
appropriate privileges ta big-ass up tha axed action, tha utility
shall return a error status.
.LP
Da saved set-user-ID of tha userz process shall be checked instead
of its effectizzle user ID when \fIrenice\fP attempts to
determine tha user ID of tha process up in order ta determine whether
the user has appropriate privileges.
.SH OPTIONS
.LP
Da \fIrenice\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-g\fP
Interpret all operandz as unsigned decimal integer process crew IDs.
.TP 7
\fB-n\ \fP \fIincrement\fP
Specify how tha fuck tha sick value of tha specified process or processes is
to be adjusted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \fIincrement\fP option-argument be a
positizzle or wack decimal integer dat shall be used ta modify
the sick value of tha specified process or processes. 
.LP
Positizzle \fIincrement\fP joints shall cause a lower sick value. Negative
\fIincrement\fP joints may require appropriate
privileges n' shall cause a higher sick value.
.TP 7
\fB-p\fP
Interpret all operandz as unsigned decimal integer process IDs. The
\fB-p\fP option is tha default if no options are
specified.
.TP 7
\fB-u\fP
Interpret all operandz as users. If a user exists wit a user name
equal ta tha operand, then tha user ID of dat user is used
in further processing. Otherwise, if tha operand represents a unsigned
decimal integer, it shall be used as tha numeric user ID of
the user.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIID\fP
A process ID, process crew ID, or user name/user ID, dependin on
the option selected.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIrenice\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.IP " 1." 4
Adjust tha sick value so dat process IDs 987 n' 32 would have a
lower sick value:
.sp
.RS
.nf

\fBrenice -n 5 -p 987 32
\fP
.fi
.RE
.LP
.IP " 2." 4
Adjust tha sick value so dat crew IDs 324 n' 76 would gotz a higher
nice value, if tha user has tha appropriate privileges to
do so:
.sp
.RS
.nf

\fBrenice -n -4 -g 324 76
\fP
.fi
.RE
.LP
.IP " 3." 4
Adjust tha sick value so dat numeric user ID 8 n' user \fBsas\fP
would gotz a lower sick value:
.sp
.RS
.nf

\fBrenice -n 4 -u 8 sas
\fP
.fi
.RE
.LP
.LP
Useful sick value increments on oldschool systems include 19 or 20
(the affected processes run only when not a god damn thang else up in the
system attempts ta run) n' any wack number (to make processes
run faster).
.SH RATIONALE
.LP
Da \fIgid\fP, \fIpid\fP, n' \fIuser\fP justifications do not fit
either tha definizzle of operand or option-argument.
But fuck dat shiznit yo, tha word on tha street is dat fo' clarity, they done been included up in tha OPTIONS section,
rather than tha OPERANDS section.
.LP
Da definizzle of sick value aint intended ta suggest dat all processes
in a system have prioritizzles dat is comparable.
Schedulin policy extensions like fuckin tha realtime prioritizzles up in the
System Interfaces volume of IEEE\ Std\ 1003.1-2001 make
the notion of a single underlyin prioritizzle fo' all schedulin policies
problematic. Right back up in yo muthafuckin ass. Some implementations may implement tha \fInice\fP-related
features ta affect all processes on tha system, others ta affect just
the general
time-sharin activitizzles implied by dis volume of IEEE\ Std\ 1003.1-2001,
and others may have no effect at all. Because of
the use of "implementation-defined" up in \fInice\fP n' \fIrenice\fP,
a wide range of
implementation strategies is possible.
.LP
Originally, dis utilitizzle was freestyled up in tha oldschool manner, using
the term "nice value". This was always a point of concern
with playas cuz dat shiznit was never intuitively obvious what tha fuck dis meant.
With a newer version of \fIrenice\fP, which used tha term
"system schedulin priority", dat shiznit was hoped dat novice playas could
betta KNOW what tha fuck dis utilitizzle was meant ta do fo' realz. Also, it
would be easier ta document what tha fuck tha utilitizzle was meant ta do. Unfortunately,
the addizzle of tha POSIX realtime scheduling
capabilitizzles introduced tha conceptz of process n' thread scheduling
prioritizzles dat was straight-up unaffected by tha \fInice\fP/ \fIrenice\fP
utilitizzles or tha \fInice\fP()/ \fIsetpriority\fP() functions. Continuing
to use tha term "system schedulin priority''
would have incorrectly suggested dat these utilitizzles n' functions
were indeed affectin these realtime priorities. Put ya muthafuckin choppers up if ya feel dis! Dat shiznit was decided
to revert ta tha oldschool term "nice value" ta reference dis unrelated
process attribute.
.LP
Although dis utilitizzle has use by system administrators (and up in fact
appears up in tha system administration portion of tha BSD
documentation), tha standard pimpers considered dat dat shiznit was hella
useful fo' individual end playas ta control they own
processes.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fInice\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
