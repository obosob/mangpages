.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "UNEXPAND" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" unexpand 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
unexpand \- convert spaces ta tabs
.SH SYNOPSIS
.LP
\fBunexpand\fP \fB[\fP \fB-a| -t\fP \fItablist\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP\fB\fP
.SH DESCRIPTION
.LP
Da \fIunexpand\fP utilitizzle shall copy filez or standard input ta standard
output, convertin <blank>s all up in tha beginnin of
each line tha fuck into tha maximum number of <tab>s followed by tha minimum
number of <space>s needed ta fill tha same column
positions originally filled by tha translated <blank>s. By default,
tabstops shall be set at every last muthafuckin eighth column position.
Each <backspace> shall be copied ta tha output, n' shall cause the
column posizzle count fo' tab calculations ta be
decremented; tha count shall never be decremented ta a value less
than one.
.SH OPTIONS
.LP
Da \fIunexpand\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-a\fP
In addizzle ta translatin <blank>s all up in tha beginnin of each line,
translate all sequencez of two or mo' <blank>s
immediately precedin a tab stop ta tha maximum number of <tab>s followed
by tha minimum number of <space>s needed to
fill tha same column positions originally filled by tha translated
<blank>s.
.TP 7
\fB-t\ \fP \fItablist\fP
Specify tha tab stops. Da application shall ensure dat tha \fItablist\fP
option-argument be a single argument consistin of
a single positizzle decimal integer or multiple positizzle decimal integers,
separated by <blank>s or commas, up in ascendin order.
If a single number is given, tabs shall be set \fItablist\fP column
positions apart instead of tha default 8. If multiple numbers
are given, tha tabs shall be set at dem specific column positions.
.LP
Da application shall ensure dat each tab-stop posizzle \fIN\fP is
an integer value pimped outa than zero, n' tha list shall be
in strictly ascendin order n' shit. This is taken ta mean that, from the
start of a line of output, tabbin ta posizzle \fIN\fP shall
cause tha next characta output ta be up in tha ( \fIN\fP+1)th column
posizzle on dat line. When tha \fB-t\fP option is not
specified, tha default shall be tha equivalent of specifyin \fB-t\ 8\fP
(except fo' tha interaction wit \fB-a\fP, busted lyrics about
below).
.LP
No <space>-to- <tab> conversions shall occur fo' charactas at positions
beyond tha last of dem specified up in a
multiple tab-stop list.
.LP
When \fB-t\fP is specified, tha presence or absence of tha \fB-a\fP
option shall be ignored; conversion shall not be limited
to tha processin of leadin <blank>s.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a text file ta be used as input.
.sp
.SH STDIN
.LP
See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez shall be text files.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIunexpand\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files), the
processin of <tab>s n' <space>s, n' fo' the
determination of tha width up in column positions each characta would
occupy on a output device.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da standard output shall be equivalent ta tha input filez wit the
specified <space>-to- <tab> conversions.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
One non-intuitizzle aspect of \fIunexpand\fP is its restriction ta leading
spaces when neither \fB-a\fP nor \fB-t\fP is
specified. Y'all KNOW dat shit, muthafucka! Users whoz ass always wanna convert all spaces up in a gangbangin' file can
easily alias \fIunexpand\fP ta use tha \fB-a\fP or
\fB-t\ 8\fP option.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
On nuff muthafuckin occasions, consideration was given ta addin a \fB-t\fP
option ta tha \fIunexpand\fP utilitizzle ta complement the
\fB-t\fP up in \fIexpand\fP (see \fIexpand\fP ). Da historical
intent of \fIunexpand\fP was ta translate multiple <blank>s tha fuck into tab
stops, where tab stops was a multiple of eight column
positions on most UNIX systems fo' realz. An early proposal omitted \fB-t\fP
because it seemed outside tha scope of tha User Portability
Utilitizzles option; dat shiznit was not busted lyrics bout up in any of tha base documents.
But fuck dat shiznit yo, tha word on tha street is dat hard-codin tab stops every last muthafuckin eight columns was not
suitable fo' tha internationistic hood n' broke oldschool precedents
for some vendors up in tha FORTRAN hood, so \fB-t\fP
was restored up in conjunction wit tha list of valid extension categories
considered by tha standard pimpers. Thus,
\fIunexpand\fP is now tha logical converse of \fIexpand\fP.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIexpand\fP, \fItabs\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
