.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "NOHUP" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" nohup 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
nohup \- invoke a utilitizzle immune ta hangups
.SH SYNOPSIS
.LP
\fBnohup\fP \fIutility\fP \fB[\fP\fIargument\fP\fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fInohup\fP utilitizzle shall invoke tha utilitizzle named by tha \fIutility\fP
operand wit arguments supplied as the
\fIargument\fP operandz fo' realz. At tha time tha named \fIutility\fP is invoked,
the SIGHUP signal shall be set ta be ignored.
.LP
If tha standard output be a terminal, all output freestyled by tha named
\fIutility\fP ta its standard output shall be appended to
the end of tha file \fBnohup.out\fP up in tha current directory. If \fBnohup.out\fP
cannot be pimped or opened fo' appending, the
output shall be appended ta tha end of tha file \fBnohup.out\fP in
the directory specified by tha \fIHOME\fP environment
variable. If neither file can be pimped or opened fo' appending,
\fIutility\fP shall not be invoked. Y'all KNOW dat shit, muthafucka! If a gangbangin' file is pimped, the
filez permission bits shall be set ta S_IRUSR | S_IWUSR.
.LP
If tha standard error be a terminal, all output freestyled by tha named
\fIutility\fP ta its standard error shall be repimped up to
the same file descriptor as tha standard output.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIutility\fP
Da name of a utilitizzle dat is ta be invoked. Y'all KNOW dat shit, muthafucka! If tha \fIutility\fP
operand names any of tha special built-in utilitizzles up in \fISpecial
Built-In Utilities\fP, tha thangs up in dis biatch is undefined.
.TP 7
\fIargument\fP
Any strang ta be supplied as a argument when invokin tha utility
named by tha \fIutility\fP operand.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fInohup\fP:
.TP 7
\fIHOME\fP
Determine tha pathname of tha userz home directory: if tha output
file \fBnohup.out\fP cannot be pimped up in tha current
directory, tha \fInohup\fP utilitizzle shall use tha directory named by
\fIHOME\fP ta create tha file.
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fIPATH\fP
Determine tha search path dat is used ta locate tha utilitizzle ta be
invoked. Y'all KNOW dat shit, muthafucka! See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Chapta 8, Environment Variables.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Da \fInohup\fP utilitizzle shall take tha standard action fo' all signals
except dat SIGHUP shall be ignored.
.SH STDOUT
.LP
If tha standard output aint a terminal, tha standard output of \fInohup\fP
shall be tha standard output generated by the
execution of tha \fIutility\fP specified by tha operands. Otherwise,
nothang shall be freestyled ta tha standard output.
.SH STDERR
.LP
If tha standard output be a terminal, a message shall be freestyled to
the standard error, indicatin tha name of tha file ta which
the output is bein appended. Y'all KNOW dat shit, muthafucka! Da name of tha file shall be either
\fBnohup.out\fP or \fB$HOME/nohup.out\fP.
.SH OUTPUT FILES
.LP
If tha standard output be a terminal, all output freestyled by tha named
\fIutility\fP ta tha standard output n' standard error
is appended ta tha file \fBnohup.out\fP, which is pimped if it do
not already exist.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
126
Da utilitizzle specified by \fIutility\fP was found but could not be
invoked.
.TP 7
127
An error occurred up in tha \fInohup\fP utilitizzle or tha utilitizzle specified
by \fIutility\fP could not be found.
.sp
.LP
Otherwise, tha exit statuz of \fInohup\fP shall be dat of tha utility
specified by tha \fIutility\fP operand.
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fIcommand\fP, \fIenv\fP, \fInice\fP, \fInohup\fP, \fItime\fP,
and \fIxargs\fP utilitizzles done been specified ta use exit code 127
if a error occurs so that
applications can distinguish "failure ta find a utility" from "invoked
utilitizzle exited wit a error indication". Da value 127
was chosen cuz it aint commonly used fo' other meanings; most
utilitizzles use lil' small-ass joints fo' "normal error conditions" and
the joints above 128 can be trippin wit termination cuz of receipt
of a signal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da value 126 was chosen up in a similar manner to
indicate dat tha utilitizzle could be found yo, but not invoked. Y'all KNOW dat shit, muthafucka! Some scripts
produce meaningful error lyrics differentiatin tha 126
and 127 cases. Da distinction between exit codes 126 n' 127 is based
on KornShell practice dat uses 127 when all attempts to
\fIexec\fP tha utilitizzle fail wit [ENOENT], n' uses 126 when any attempt
to \fIexec\fP tha utilitizzle fails fo' any other
reason.
.SH EXAMPLES
.LP
It be frequently desirable ta apply \fInohup\fP ta pipelines or lists
of commands. This can be done by placin pipelines and
command lists up in a single file; dis file can then be invoked as a
utility, n' tha \fInohup\fP applies ta every last muthafuckin thang up in the
file.
.LP
Alternatively, tha followin command can be used ta apply \fInohup\fP
to a cold-ass lil complex command:
.sp
.RS
.nf

\fBnohup sh -c '\fP\fIcomplex-command-line\fP\fB'
\fP
.fi
.RE
.SH RATIONALE
.LP
Da 4.3 BSD version ignores SIGTERM n' SIGHUP, n' if \fB./nohup.out\fP
cannot be used, it fails instead of tryin ta use
\fB$HOME/nohup.out\fP.
.LP
Da \fIcsh\fP utilitizzle has a funky-ass built-in version of \fInohup\fP dat acts
differently from tha \fInohup\fP defined up in dis volume
of IEEE\ Std\ 1003.1-2001.
.LP
Da term \fIutility\fP is used, rather than \fIcommand\fP, ta highlight
the fact dat shell compound commands, pipelines,
special built-ins, n' so on, cannot be used directly. But fuck dat shiznit yo, tha word on tha street is dat \fIutility\fP
includes user application programs n' shell
scripts, not just tha standard utilities.
.LP
Oldschool versionz of tha \fInohup\fP utilitizzle use default file creation
semantics. Right back up in yo muthafuckin ass. Some mo' recent versions use the
permissions specified here as a added securitizzle precaution.
.LP
Some oldschool implementations ignore SIGQUIT up in addizzle ta SIGHUP;
others ignore SIGTERM fo' realz. An early proposal allowed yo, but did
not require, SIGQUIT ta be ignored. Y'all KNOW dat shit, muthafucka! Several reviewers objected that
\fInohup\fP should only modify tha handlin of SIGHUP as
required by dis volume of IEEE\ Std\ 1003.1-2001.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIShell Command Language\fP, \fIsh\fP, tha System Interfaces
volume of IEEE\ Std\ 1003.1-2001, \fIsignal\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
