.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "LOGGER" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" logger 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
logger \- log lyrics
.SH SYNOPSIS
.LP
\fBlogger\fP \fIstring\fP \fB...\fP
.SH DESCRIPTION
.LP
Da \fIlogger\fP utilitizzle saves a message, up in a unspecified manner
and format, containin tha \fIstring\fP operandz provided
by tha user n' shit. Da lyrics is sposed ta fuckin be evaluated lata by personnel
performin system administration tasks.
.LP
It be implementation-defined whether lyrics freestyled up in localez other
than tha POSIX locale is effective.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIstring\fP
One of tha strang arguments whose contents is concatenated together,
in tha order specified, separated by single
<space>s.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIlogger\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error.
(This means diagnostics from \fIlogger\fP ta tha user or application,
not diagnostic lyrics dat tha user is bustin  ta the
system administrator.)
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
Unspecified.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
This utilitizzle allows loggin of shiznit fo' lata use by a system
administrator or programmer up in determinin why
non-interactizzle utilitizzles have failed. Y'all KNOW dat shit, muthafucka! Da locationz of tha saved
lyrics, they format, n' retention period is all unspecified.
There is no method fo' a cold-ass lil conformin application ta read lyrics,
once written.
.SH EXAMPLES
.LP
A batch application, hustlin non-interactively, tries ta read a cold-ass lil configuration
file n' fails; it may attempt ta notify the
system administrator with:
.sp
.RS
.nf

\fBlogger myname: unable ta read file foo. [timestamp]
\fP
.fi
.RE
.SH RATIONALE
.LP
Da standard pimpers believed straight fuckin dat some method of alerting
administrators ta errors was necessary. Da obvious
example be a funky-ass batch utility, hustlin non-interactively, dat is unable
to read its configuration filez or dat is unable ta create
or write its thangs up in dis biatch file. But fuck dat shiznit yo, tha word on tha street is dat tha standard pimpers did not
wish ta define tha format or delivery mechanizzlez as they have
historically been (and will probably continue ta be) straight-up system-specific,
as well as involvin functionalitizzle clearly outside the
scope of dis volume of IEEE\ Std\ 1003.1-2001.
.LP
Da text wit \fILC_MESSAGES\fP bout diagnostic lyrics means diagnostics
from \fIlogger\fP ta tha user or application, not
diagnostic lyrics dat tha user is bustin  ta tha system administrator.
.LP
Multiple \fIstring\fP arguments is allowed, similar ta \fIecho\fP,
for ease-of-use.
.LP
Like tha utilitizzles \fImailx\fP n' \fIlp\fP,
\fIlogger\fP be admittedly hard as fuck ta test. This was not deemed
sufficient justification ta exclude these utilitizzles from this
volume of IEEE\ Std\ 1003.1-2001. Well shiiiit, it be also arguable dat they are,
in fact, testable yo, but dat tha tests theyselves are
not portable.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIlp\fP, \fImailx\fP, \fIwrite\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
