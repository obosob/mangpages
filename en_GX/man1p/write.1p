.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "WRITE" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" write 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
write \- write ta another user
.SH SYNOPSIS
.LP
\fBwrite\fP \fIuser_name\fP \fB[\fP\fIterminal\fP\fB]\fP\fB\fP
.SH DESCRIPTION
.LP
Da \fIwrite\fP utilitizzle shall read lines from tha userz standard
input n' write dem ta tha terminal of another user n' shit. When
first invoked, it shall write tha message:
.sp
.RS
.nf

\fBMessage from\fP \fIsender-login-id\fP \fB(\fP\fIsending-terminal\fP\fB)\fP \fB[\fP\fIdate\fP\fB]\fP\fB...
\fP
.fi
.RE
.LP
to \fIuser_name\fP. When it has successfully completed tha connection,
the senderz terminal shall be alerted twice ta indicate
that what tha fuck tha sender is typin is bein freestyled ta tha recipient's
terminal.
.LP
If tha recipient wants ta reply, dis can be accomplished by typing:
.sp
.RS
.nf

\fBwrite\fP \fIsender-login-id\fP \fB[\fP\fIsending-terminal\fP\fB]\fP
.fi
.RE
.LP
upon receipt of tha initial message. Whenever a line of input as delimited
by a NL, EOF, or EOL special characta (see tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Chapta 11, General
Terminal
Interface) be accumulated while up in canonical input mode, tha accumulated
data shall be freestyled on tha other userz terminal.
Charactas shall be processed as bigs up:
.IP " *" 3
Typin <alert> shall write tha alert characta ta tha recipient's
terminal.
.LP
.IP " *" 3
Typin tha erase n' bust a cap up in charactas shall affect tha senderz terminal
in tha manner busted lyrics bout by tha \fBtermios\fP intercourse
in tha Base Definitions volume of IEEE\ Std\ 1003.1-2001, Chapter
11, General
Terminal Interface.
.LP
.IP " *" 3
Typin tha interrupt or end-of-file charactas shall cause \fIwrite\fP
to write a appropriate message ( \fB"EOT\\n"\fP in
the POSIX locale) ta tha recipientz terminal n' exit.
.LP
.IP " *" 3
Typin charactas from \fILC_CTYPE\fP classifications \fBprint\fP
or \fBspace\fP shall cause dem charactas ta be busted to
the recipientz terminal.
.LP
.IP " *" 3
When n' only when tha \fIstty\fP \fBiexten\fP local mode is enabled,
the existence and
processin of additionizzle special control charactas n' multi-byte
or single-byte functions is implementation-defined.
.LP
.IP " *" 3
Typin other non-printable charactas shall cause implementation-defined
sequencez of printable charactas ta be freestyled ta the
recipientz terminal.
.LP
.LP
To write ta a user whoz ass is logged up in mo' than once, tha \fIterminal\fP
argument can be used ta indicate which terminal ta write
to; otherwise, tha recipientz terminal is selected up in a implementation-defined
manner n' a shiznital message is freestyled to
the senderz standard output, indicatin which terminal was chosen.
.LP
Permission ta be a recipient of a \fIwrite\fP message can be denied
or granted by use of tha \fImesg\fP utility. But fuck dat shiznit yo, tha word on tha street is dat a userz privilege
may further constrain tha domain of accessibilitizzle of
other users' terminals. Da \fIwrite\fP utilitizzle shall fail when the
user lacks tha appropriate privileges ta big-ass up tha requested
action.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIuser_name\fP
Login name of tha thug ta whom tha message shall be written. I aint talkin' bout chicken n' gravy biatch. The
application shall ensure dat dis operand iz of tha form
returned by tha \fIwho\fP utility.
.TP 7
\fIterminal\fP
Terminal identification up in tha same format provided by tha \fIwho\fP
utility.
.sp
.SH STDIN
.LP
Lines ta be copied ta tha recipientz terminal is read from standard
input.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIwrite\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files). If
the recipientz locale do not use a \fILC_CTYPE\fP
equivalent ta tha sender's, tha thangs up in dis biatch is undefined.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
If a interrupt signal is received, \fIwrite\fP shall write a appropriate
message on tha recipientz terminal n' exit wit a
statuz of zero. Well shiiiit, it shall take tha standard action fo' all other signals.
.SH STDOUT
.LP
An shiznital message shall be freestyled ta standard output if a
recipient is logged up in mo' than once.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
Da recipientz terminal is used fo' output.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
Da addressed user aint logged on or tha addressed user denies permission.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fItalk\fP utilitizzle is considered by some playas ta be a mo' usable
utilitizzle on
full-screen terminals.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da \fIwrite\fP utilitizzle was included up in dis volume of IEEE\ Std\ 1003.1-2001
since it can be implemented on all
terminal types. Da standard pimpers considered tha \fItalk\fP
utility, which cannot be
implemented on certain terminals, ta be a "better" communications
interface. Both of these programs is up in widespread use on
historical implementations. Therefore, tha standard pimpers decided
that both utilitizzles should be specified.
.LP
Da format of tha terminal name is unspecified yo, but tha descriptions
of \fIps\fP, \fItalk\fP, \fIwho\fP, n' \fIwrite\fP require dat they
all
use or accept tha same format.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImesg\fP, \fItalk\fP, \fIwho\fP, tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Chapta 11, General
Terminal
Interface
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
