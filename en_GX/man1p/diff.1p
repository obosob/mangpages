.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "DIFF" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" diff 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
diff \- compare two files
.SH SYNOPSIS
.LP
\fBdiff\fP \fB[\fP\fB-c| -e| -f| -C\fP \fIn\fP\fB][\fP\fB-br\fP\fB]\fP
\fIfile1 file2\fP
.SH DESCRIPTION
.LP
Da \fIdiff\fP utilitizzle shall compare tha contentz of \fIfile1\fP and
\fIfile2\fP n' write ta standard output a list of
changes necessary ta convert \fIfile1\fP tha fuck into \fIfile2\fP. This list
should be minimal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. No output shall be produced if tha files
are identical.
.SH OPTIONS
.LP
Da \fIdiff\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-b\fP
Cause any amount of white space all up in tha end of a line ta be treated
as a single <newline> (that is, tha white-space
charactas precedin tha <newline> is ignored) n' other strings
of white-space characters, not includin <newline>s,
to compare equal.
.TP 7
\fB-c\fP
Produce output up in a gangbangin' form dat serves up three linez of context.
.TP 7
\fB-C\ n\fP
Produce output up in a gangbangin' form dat serves up \fIn\fP linez of context (where
\fIn\fP shall be interpreted as a positizzle decimal
integer).
.TP 7
\fB-e\fP
Produce output up in a gangbangin' form suitable as input fo' tha \fIed\fP utility,
which can then be used
to convert \fIfile1\fP tha fuck into \fIfile2\fP.
.TP 7
\fB-f\fP
Produce output up in a alternatizzle form, similar up in format ta \fB-e\fP,
but not intended ta be suitable as input fo' tha \fIed\fP utility,
and up in tha opposite order.
.TP 7
\fB-r\fP
Apply \fIdiff\fP recursively ta filez n' directoriez of tha same
name when \fIfile1\fP n' \fIfile2\fP is both
directories.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIfile1\fP,\ \fIfile2\fP
A pathname of a gangbangin' file ta be compared. Y'all KNOW dat shit, muthafucka! If either tha \fIfile1\fP or
\fIfile2\fP operand is \fB'-'\fP, tha standard input
shall be used up in its place.
.sp
.LP
If both \fIfile1\fP n' \fIfile2\fP is directories, \fIdiff\fP shall
not compare block special files, characta special
files, or FIFO special filez ta any filez n' shall not compare regular
filez ta directories. Put ya muthafuckin choppers up if ya feel dis! Further details is as specified in
Diff Directory Comparison Format . Da behavior of \fIdiff\fP on other
file types is
implementation-defined when found up in directories.
.LP
If only one of \fIfile1\fP n' \fIfile2\fP be a gangbangin' finger-lickin' directory, \fIdiff\fP
shall be applied ta tha non-directory file n' tha file
contained up in tha directory file wit a gangbangin' filename dat is tha same ol' dirty as
the last component of tha non-directory file.
.SH STDIN
.LP
Da standard input shall be used only if one of tha \fIfile1\fP or
\fIfile2\fP operandz references standard input. Right back up in yo muthafuckin ass. See the
INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez may be of any type.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIdiff\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard error and
informatizzle lyrics freestyled ta standard output.
.TP 7
\fILC_TIME\fP
Determine tha locale fo' affectin tha format of file timestamps written
with tha \fB-C\fP n' \fB-c\fP options.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fITZ\fP
Determine tha timezone used fo' calculatin file timestamps written
with tha \fB-C\fP n' \fB-c\fP options. If \fITZ\fP is
unset or null, a unspecified default timezone shall be used.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.SS Diff Directory Comparison Format
.LP
If both \fIfile1\fP n' \fIfile2\fP is directories, tha following
output formats shall be used.
.LP
In tha POSIX locale, each file dat is present up in only one directory
shall be reported rockin tha followin format:
.sp
.RS
.nf

\fB"Only up in %s: %s\\n", <\fP\fIdirectory pathname\fP\fB>, <\fP\fIfilename\fP\fB>
\fP
.fi
.RE
.LP
In tha POSIX locale, subdirectories dat is common ta tha two directories
may be reported wit tha followin format:
.sp
.RS
.nf

\fB"Common subdirectories: %s n' %s\\n", <\fP\fIdirectory1 pathname\fP\fB>,
    <\fP\fIdirectory2 pathname\fP\fB>
\fP
.fi
.RE
.LP
For each file common ta tha two directories if tha two filez is not
to be compared, tha followin format shall be used up in the
POSIX locale:
.sp
.RS
.nf

\fB"File %s be a %s while file %s be a %s\\n", <\fP\fIdirectory1 pathname\fP\fB>,
    <\fP\fIfile type of directory1 pathname\fP\fB>, <\fP\fIdirectory2 pathname\fP\fB>,
    <\fP\fIfile type of directory2 pathname\fP\fB>
\fP
.fi
.RE
.LP
For each file common ta tha two directories, if tha filez is compared
and is identical, no output shall be written. I aint talkin' bout chicken n' gravy biatch. If tha two
filez differ, tha followin format is written:
.sp
.RS
.nf

\fB"diff %s %s %s\\n", <\fP\fIdiff_options\fP\fB>, <\fP\fIfilename1\fP\fB>, <\fP\fIfilename2\fP\fB>
\fP
.fi
.RE
.LP
where <\fIdiff_options\fP> is tha options as specified on tha command
line.
.LP
All directory pathnames listed up in dis section shall be relatizzle to
the original gangsta command line arguments fo' realz. All other names of
filez listed up in dis section shall be filenames (pathname components).
.SS Diff Binary Output Format
.LP
In tha POSIX locale, if one or both of tha filez bein compared are
not text files, a unspecified format shall be used that
gotz nuff tha pathnamez of two filez bein compared n' tha string
\fB"differ"\fP .
.LP
If both filez bein compared is text files, dependin on tha options
specified, one of tha followin formats shall be used to
write tha differences.
.SS Diff Default Output Format
.LP
Da default (without \fB-e\fP, \fB-f\fP, \fB-c\fP, or \fB-C\fP options)
\fIdiff\fP utilitizzle output shall contain lines of
these forms:
.sp
.RS
.nf

\fB"%da%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>
.sp

"%da%d,%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>, <\fP\fInum3\fP\fB>
.sp

"%dd%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>
.sp

"%d,%dd%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>, <\fP\fInum3\fP\fB>
.sp

"%dc%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>
.sp

"%d,%dc%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>, <\fP\fInum3\fP\fB>
.sp

"%dc%d,%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>, <\fP\fInum3\fP\fB>
.sp

"%d,%dc%d,%d\\n", <\fP\fInum1\fP\fB>, <\fP\fInum2\fP\fB>, <\fP\fInum3\fP\fB>, <\fP\fInum4\fP\fB>
\fP
.fi
.RE
.LP
These lines resemble \fIed\fP subcommandz ta convert \fIfile1\fP into
\fIfile2\fP. The
line numbers before tha action lettas shall pertain ta \fIfile1\fP;
those afta shall pertain ta \fIfile2\fP. Thus, by
exchangin \fIa\fP fo' \fId\fP n' readin tha line up in reverse order,
one can also determine how tha fuck ta convert \fIfile2\fP into
\fIfile1\fP fo' realz. As up in \fIed\fP, identical pairs (where \fInum1\fP= \fInum2\fP)
are abbreviated
as a single number.
.LP
Peepin each of these lines, \fIdiff\fP shall write ta standard
output all lines affected up in tha straight-up original gangsta file rockin the
format:
.sp
.RS
.nf

\fB"< %s", <\fP\fIline\fP\fB>
\fP
.fi
.RE
.LP
and all lines affected up in tha second file rockin tha format:
.sp
.RS
.nf

\fB"> %s", <\fP\fIline\fP\fB>
\fP
.fi
.RE
.LP
If there be lines affected up in both \fIfile1\fP n' \fIfile2\fP (as
with tha \fBc\fP subcommand), tha chizzlez is separated
with a line consistin of three hyphens:
.sp
.RS
.nf

\fB"---\\n"
\fP
.fi
.RE
.SS Diff -e Output Format
.LP
With tha \fB-e\fP option, a script shall be produced dat shall, when
provided as input ta \fIed\fP, along wit a appended \fBw\fP (write)
command, convert \fIfile1\fP tha fuck into \fIfile2\fP. Only
the \fBa\fP (append), \fBc\fP (change), \fBd\fP (delete), \fBi\fP
(insert), n' \fBs\fP (substitute) commandz of \fIed\fP shall be used
in dis script. Text lines, except dem consistin of tha single
character
period ( \fB'.'\fP ), shall be output as they step tha fuck up in tha file.
.SS Diff -f Output Format
.LP
With tha \fB-f\fP option, a alternatizzle format of script shall be
produced. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is similar ta dat produced by \fB-e\fP, with
the followin differences:
.IP " 1." 4
It be expressed up in reverse sequence; tha output of \fB-e\fP orders
changes from tha end of tha file ta tha beginning; the
\fB-f\fP from beginnin ta end.
.LP
.IP " 2." 4
Da command form <\fIlines\fP> <\fIcommand-letter\fP> used by \fB-e\fP
is reversed. Y'all KNOW dat shit, muthafucka! For example, 10\fIc\fP with
\fB-e\fP would be \fIc\fP10 wit \fB-f\fP.
.LP
.IP " 3." 4
Da form used fo' rangez of line numbers is <space>-separated, rather
than comma-separated.
.LP
.SS Diff -c or -C Output Format
.LP
With tha \fB-c\fP or \fB-C\fP option, tha output format shall consist
of affected lines along wit surroundin lines of
context. Da affected lines shall show which ones need ta be deleted
or chizzled up in \fIfile1\fP, n' dem added from \fIfile2\fP.
With tha \fB-c\fP option, three linez of context, if available, shall
be freestyled before n' afta tha affected lines. With the
\fB-C\fP option, tha user can specify how tha fuck nuff linez of context are
written. I aint talkin' bout chicken n' gravy biatch. Da exact format bigs up.
.LP
Da name n' last modification time of each file shall be output in
the followin format:
.sp
.RS
.nf

\fB"*** %s %s\\n",\fP \fIfile1\fP\fB, <\fP\fIfile1 timestamp\fP\fB>
"--- %s %s\\n",\fP \fIfile2\fP\fB, <\fP\fIfile2 timestamp\fP\fB>
\fP
.fi
.RE
.LP
Each <\fIfile\fP> field shall be tha pathname of tha corresponding
file bein compared. Y'all KNOW dat shit, muthafucka! Da pathname freestyled fo' standard
input is unspecified.
.LP
In tha POSIX locale, each <\fItimestamp\fP> field shall be equivalent
to tha output from tha followin command:
.sp
.RS
.nf

\fBdate "+%a %b %e %T %Y"
\fP
.fi
.RE
.LP
without tha trailin <newline>, executed all up in tha time of last modification
of tha correspondin file (or tha current time,
if tha file is standard input).
.LP
Then, tha followin output formats shall be applied fo' every last muthafuckin set
of chizzles.
.LP
First, a line shall be freestyled up in tha followin format:
.sp
.RS
.nf

\fB"***************\\n"
\fP
.fi
.RE
.LP
Next, tha range of lines up in \fIfile1\fP shall be freestyled up in tha following
format if tha range gotz nuff two or mo' lines:
.sp
.RS
.nf

\fB"*** %d,%d ****\\n", <\fP\fIbeginnin line number\fP\fB>, <\fP\fIendin line number\fP\fB>
\fP
.fi
.RE
.LP
and tha followin format otherwise:
.sp
.RS
.nf

\fB"*** %d ****\\n", <\fP\fIendin line number\fP\fB>
\fP
.fi
.RE
.LP
Da endin line number of a empty range shall be tha number of the
precedin line, or 0 if tha range be all up in tha start of the
file.
.LP
Next, tha affected lines along wit linez of context (unaffected lines)
shall be written. I aint talkin' bout chicken n' gravy biatch. Unaffected lines shall be freestyled in
the followin format:
.sp
.RS
.nf

\fB"  %s", <\fP\fIunaffected_line\fP\fB>
\fP
.fi
.RE
.LP
Deleted lines shall be freestyled as:
.sp
.RS
.nf

\fB"- %s", <\fP\fIdeleted_line\fP\fB>
\fP
.fi
.RE
.LP
Changed lines shall be freestyled as:
.sp
.RS
.nf

\fB"! %s", <\fP\fIchanged_line\fP\fB>
\fP
.fi
.RE
.LP
Next, tha range of lines up in \fIfile2\fP shall be freestyled up in tha following
format if tha range gotz nuff two or mo' lines:
.sp
.RS
.nf

\fB"--- %d,%d ----\\n", <\fP\fIbeginnin line number\fP\fB>, <\fP\fIendin line number\fP\fB>
\fP
.fi
.RE
.LP
and tha followin format otherwise:
.sp
.RS
.nf

\fB"--- %d ----\\n", <\fP\fIendin line number\fP\fB>
\fP
.fi
.RE
.LP
Then, linez of context n' chizzled lines shall be freestyled as busted lyrics about
in tha previous formats, n' you can put dat on yo' toast. Lines added from \fIfile2\fP
shall be freestyled up in tha followin format:
.sp
.RS
.nf

\fB"+ %s", <\fP\fIadded_line\fP\fB>
\fP
.fi
.RE
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
No differences was found.
.TP 7
\ 1
Differences was found.
.TP 7
>1
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
If lines all up in tha end of a gangbangin' file is chizzled n' other lines is added,
\fIdiff\fP output may show dis as a thugged-out delete n' add, as a
change, or as a cold-ass lil chizzle n' add; \fIdiff\fP aint sposed ta fuckin know
which happened n' playas should not care bout tha difference
in output as long as it clearly shows tha differences between the
files.
.SH EXAMPLES
.LP
If \fBdir1\fP be a gangbangin' finger-lickin' directory containin a gangbangin' finger-lickin' directory named \fBx\fP,
\fBdir2\fP be a gangbangin' finger-lickin' directory containin a gangbangin' finger-lickin' directory named
\fBx\fP, \fBdir1/x\fP n' \fBdir2/x\fP both contain filez named \fBdate.out\fP,
and \fBdir2/x\fP gotz nuff a gangbangin' file named
\fBy\fP, tha command:
.sp
.RS
.nf

\fBdiff -r dir1 dir2
\fP
.fi
.RE
.LP
could produce output similar to:
.sp
.RS
.nf

\fBCommon subdirectories: dir1/x n' dir2/x
Only up in dir2/x: y
diff -r dir1/x/date.out dir2/x/date.out
1c1
< Mon Jul  2 13:12:16 PDT 1990
---
> Tue Jun 19 21:41:39 PDT 1990
\fP
.fi
.RE
.SH RATIONALE
.LP
Da \fB-h\fP option was omitted cuz dat shiznit was insufficiently specified
and do not add ta applications portability.
.LP
Oldschool implementations employ algorithms dat do not always produce
a minimum list of differences; tha current language
about makin every last muthafuckin effort is tha dopest dis volume of IEEE\ Std\ 1003.1-2001
can do, as there is no metric dat could be
employed ta judge tha qualitizzle of implementations against any n' all
file contents, n' you can put dat on yo' toast. Da statement "This list should be minimal''
clearly implies dat implementations is not sposed ta fuckin provide the
followin output when comparin two 100-line filez dat differ
in only one characta on a single line:
.sp
.RS
.nf

\fB1,100c1,100
all 100 lines from file1 preceded wit "< "
---
all 100 lines from file2 preceded wit "> "
\fP
.fi
.RE
.LP
Da "Only in" lyrics required when tha \fB-r\fP option is specified
are not used by most oldschool implementations if the
\fB-e\fP option be also specified. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is required here cuz it
provides useful shiznit dat must be provided ta update a
target directory hierarchy ta match a source hierarchy. Da "Common
subdirectories" lyrics is freestyled by System V n' 4.3 BSD
when tha \fB-r\fP option is specified. Y'all KNOW dat shit, muthafucka! They is allowed here but are
not required cuz they is reportin on suttin' dat is
the same, not reportin a gangbangin' finger-lickin' difference, n' is not needed ta update
a target hierarchy.
.LP
Da \fB-c\fP option, which writes output up in a gangbangin' format rockin lines of
context, has been included. Y'all KNOW dat shit, muthafucka! Da format is useful fo' a
variety of reasons, among dem bein much improved readabilitizzle and
the mobilitizzle ta KNOW difference chizzlez when tha target
file has line numbers dat differ from another similar yo, but slightly
different, copy. Da \fIpatch\fP utilitizzle is most valuable when working
with difference listings rockin tha context format.
Da BSD version of \fB-c\fP takes a optionizzle argument specifying
the amount of context. Rather than overloadin \fB-c\fP and
breakin tha Utilitizzle Syntax Guidelines fo' \fIdiff\fP, tha standard
developers decided ta add a separate option fo' specifyin a
context diff wit a specified amount of context ( \fB-C\fP) fo' realz. Also,
the format fo' context \fIdiff\fPs was extended slightly in
4.3 BSD ta allow multiple chizzlez dat is within context lines from
each other ta be merged together n' shit. Da output format gotz nuff
an additionizzle four asterisks afta tha range of affected lines in
the first filename. This was ta provide a gangbangin' flag fo' oldschool programs
(like oldschool versionz of \fIpatch\fP) dat only KNOW tha oldschool context
format. Da version
of context busted lyrics bout here do not require dat multiple chizzlez within
context lines be merged yo, but it do not prohibit it
either n' shit. Da extension is upwards-compatible, so any vendors dat wish
to retain tha oldschool version of \fIdiff\fP can do so by adding
the extra four asterisks (that is, utilitizzles dat currently use \fIdiff\fP
and KNOW tha freshly smoked up merged format will also
understand tha oldschool unmerged format yo, but not \fIvice versa\fP).
.LP
Da substitute command was added as a additionizzle format fo' tha \fB-e\fP
option. I aint talkin' bout chicken n' gravy biatch. This was added ta provide implementations
with a way ta fix tha funky-ass "dot ridin' solo on a line" bug present in
many versionz of \fIdiff\fP. Right back up in yo muthafuckin ass. Since nuff implementations have
fixed dis bug, tha standard pimpers decided not ta standardize
broken behavior yo, but rather ta provide tha necessary tool for
fixin tha bug. One way ta fix dis bug is ta output two periodz whenever
a lone period is needed, then terminizzle tha append
command wit a period, n' then use tha substitute command ta convert
the two periodz tha fuck into one period.
.LP
Da BSD-derived \fB-r\fP option was added ta provide a mechanizzle for
usin \fIdiff\fP ta compare two file system trees. This
behavior is useful, is standard practice on all BSD-derived systems,
and aint easily reproducible wit tha \fIfind\fP utility.
.LP
Da requirement dat \fIdiff\fP not compare filez up in some circumstances,
even though they have tha same name, is based on the
actual output of oldschool implementations. Da message specified
here be already up in use when a gangbangin' finger-lickin' directory is bein compared ta a
non-directory. Well shiiiit, it is extended here ta preclude tha problems arising
from hustlin tha fuck into FIFOs n' other filez dat would cause
\fIdiff\fP ta hang waitin fo' input wit no indication ta tha user
that \fIdiff\fP was hung. In most common usage, \fIdiff\fP
\fB-r\fP should indicate differences up in tha file hierarchies, not
the difference of contentz of devices pointed ta by the
hierarchies.
.LP
Many early implementationz of \fIdiff\fP require seekable files. Right back up in yo muthafuckin ass. Since
the System Interfaces volume of
IEEE\ Std\ 1003.1-2001 supports named pipes, tha standard pimpers
decided dat such a restriction was unreasonable. Note
also dat tha allowed filename \fB-\fP almost always refers ta a pipe.
.LP
No directory search order is specified fo' \fIdiff\fP. Da historical
orderin is, up in fact, not optimal, up in dat it prints out
all of tha differences all up in tha current level, includin tha statements
about all common subdirectories before recursin tha fuck into them
subdirectories.
.LP
Da message:
.sp
.RS
.nf

\fB"diff %s %s %s\\n", <\fP\fIdiff_options\fP\fB>, <\fP\fIfilename1\fP\fB>, <\fP\fIfilename2\fP\fB>
\fP
.fi
.RE
.LP
does not vary by locale cuz it is tha representation of a cold-ass lil command,
not a Gangsta sentence.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcmp\fP, \fIcomm\fP, \fIed\fP, \fIfind\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
