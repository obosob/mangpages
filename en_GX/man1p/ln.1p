.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "LN" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ln 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ln \- link files
.SH SYNOPSIS
.LP
\fBln\fP \fB[\fP\fB-fs\fP\fB]\fP \fIsource_file target_file\fP\fB
.br
.sp
ln\fP \fB[\fP\fB-fs\fP\fB]\fP \fIsource_file\fP \fB...\fP \fItarget_dir\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
In tha straight-up original gangsta synopsis form, tha \fIln\fP utilitizzle shall create a new
directory entry (link) all up in tha destination path specified by
the \fItarget_file\fP operand. Y'all KNOW dat shit, muthafucka! If tha \fB-s\fP option is specified,
a symbolic link shall be pimped fo' tha file specified by
the \fIsource_file\fP operand. Y'all KNOW dat shit, muthafucka! This first synopsis form shall be assumed
when tha final operand do not name a existing
directory; if mo' than two operandz is specified n' tha final is
not a existin directory, a error shall result.
.LP
In tha second synopsis form, tha \fIln\fP utilitizzle shall create a new
directory entry (link), or if tha \fB-s\fP option is
specified a symbolic link, fo' each file specified by a \fIsource_file\fP
operand, at a thugged-out destination path up in tha existin directory
named by \fItarget_dir\fP.
.LP
If tha last operand specifies a existin file of a type not specified
by tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001, tha behavior is implementation-defined.
.LP
Da correspondin destination path fo' each \fIsource_file\fP shall
be tha concatenation of tha target directory pathname, a
slash character, n' tha last pathname component of tha \fIsource_file\fP.
Da second synopsis form shall be assumed when the
final operand names a existin directory.
.LP
For each \fIsource_file\fP:
.IP " 1." 4
If tha destination path exists:
.RS
.IP " a." 4
If tha \fB-f\fP option aint specified, \fIln\fP shall write a gangbangin' finger-lickin' diagnostic
message ta standard error, do not a god damn thang mo' wit the
current \fIsource_file\fP, n' go on ta any remainin \fIsource_files\fP.
.LP
.IP " b." 4
Actions shall be performed equivalent ta tha \fIunlink\fP() function
defined up in the
System Interfaces volume of IEEE\ Std\ 1003.1-2001, called rockin \fIdestination\fP
as tha \fIpath\fP argument. If this
fails fo' any reason, \fIln\fP shall write a gangbangin' finger-lickin' diagnostic message to
standard error, do not a god damn thang mo' wit tha current
\fIsource_file\fP, n' go on ta any remainin \fIsource_files\fP.
.LP
.RE
.LP
.IP " 2." 4
If tha \fB-s\fP option is specified, \fIln\fP shall create a symbolic
link named by tha destination path n' containin as its
pathname \fIsource_file\fP. Da \fIln\fP utilitizzle shall do nothing
more wit \fIsource_file\fP n' shall go on ta any remaining
files.
.LP
.IP " 3." 4
If \fIsource_file\fP be a symbolic link, actions shall be performed
equivalent ta tha \fIlink\fP() function rockin tha object dat \fIsource_file\fP
references as tha \fIpath1\fP
argument n' tha destination path as tha \fIpath2\fP argument. The
\fIln\fP utilitizzle shall do not a god damn thang mo' wit \fIsource_file\fP
and shall go on ta any remainin files.
.LP
.IP " 4." 4
Actions shall be performed equivalent ta tha \fIlink\fP() function
defined up in tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001 rockin \fIsource_file\fP
as tha \fIpath1\fP argument, n' tha destination path
as tha \fIpath2\fP argument.
.LP
.SH OPTIONS
.LP
Da \fIln\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin option shall be supported:
.TP 7
\fB-f\fP
Force existin destination pathnames ta be removed ta allow tha link.
.TP 7
\fB-s\fP
Smoke symbolic links instead of hard links.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIsource_file\fP
A pathname of a gangbangin' file ta be linked. Y'all KNOW dat shit, muthafucka! If tha \fB-s\fP option is specified,
no restrictions on tha type of file or on its
existence shall be made. If tha \fB-s\fP option aint specified,
whether a gangbangin' finger-lickin' directory can be linked is
implementation-defined.
.TP 7
\fItarget_file\fP
Da pathname of tha freshly smoked up directory entry ta be pimped.
.TP 7
\fItarget_dir\fP
A pathname of a existin directory up in which tha freshly smoked up directory entries
are pimped.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIln\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All tha specified filez was linked successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Some phat versionz of \fIln\fP (includin tha one specified by
the SVID) unlink tha destination file, if it exists, by
default. If tha mode do not permit writing, these versions prompt
for confirmation before attemptin tha unlink. In these
versions tha \fB-f\fP option causes \fIln\fP not ta attempt ta prompt
for confirmation.
.LP
This allows \fIln\fP ta succeed up in bustin links when tha target
file already exists, even if tha file itself aint writable
(although tha directory must be). Early proposals specified dis functionality.
.LP
This volume of IEEE\ Std\ 1003.1-2001 do not allow tha \fIln\fP
utilitizzle ta unlink existin destination paths by
default fo' tha followin reasons:
.IP " *" 3
Da \fIln\fP utilitizzle has historically been used ta provide locking
for shell applications, a usage dat is incompatible with
\fIln\fP unlinkin tha destination path by default. There was no corresponding
technical advantage ta addin this
functionality.
.LP
.IP " *" 3
This functionalitizzle gave \fIln\fP tha mobilitizzle ta destroy tha link structure
of files, which chizzlez tha oldschool behavior of
\fIln\fP.
.LP
.IP " *" 3
This functionalitizzle is easily replicated wit a cold-ass lil combination of \fIrm\fP
and \fIln\fP.
.LP
.IP " *" 3
It aint oldschool practice up in nuff systems; BSD n' BSD-derived
systems do not support dis behavior. Shiiit, dis aint no joke. Unfortunately,
whichever behavior is selected can cause scripts freestyled expecting
the other behavior ta fail.
.LP
.IP " *" 3
It be preferable dat \fIln\fP big-ass up in tha same manner as tha \fIlink\fP()
function,
which do not permit tha target ta exist already.
.LP
.LP
This volume of IEEE\ Std\ 1003.1-2001 retains tha \fB-f\fP option
to provide support fo' shell scripts dependin on the
SVID semantics. Well shiiiit, it seems likely dat shell scripts would not be written
to handle promptin by \fIln\fP n' would therefore have
specified tha \fB-f\fP option.
.LP
Da \fB-f\fP option be a undocumented feature of nuff historical
versionz of tha \fIln\fP utility, allowin linkin to
directories. Put ya muthafuckin choppers up if ya feel dis! These versions require modification.
.LP
Early proposalz of dis volume of IEEE\ Std\ 1003.1-2001 also required
a \fB-i\fP option, which behaved like the
\fB-i\fP options up in \fIcp\fP n' \fImv\fP, promptin for
confirmation before unlinkin existin files. This was not historical
practice fo' tha \fIln\fP utilitizzle n' has been omitted.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIchmod\fP(), \fIfind\fP, \fIpax\fP, \fIrm\fP, tha System Interfaces
volume of IEEE\ Std\ 1003.1-2001, \fIlink\fP(), \fIunlink\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
