.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ULIMIT" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" ulimit 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
ulimit \- set or report file size limit
.SH SYNOPSIS
.LP
\fBulimit\fP \fB[\fP\fB-f\fP\fB][\fP\fIblocks\fP\fB]\fP\fB\fP
.SH DESCRIPTION
.LP
Da \fIulimit\fP utilitizzle shall set or report tha file-size writing
limit imposed on filez freestyled by tha shell n' its child
processes (filez of any size may be read). Only a process wit appropriate
privileges can increase tha limit.
.SH OPTIONS
.LP
Da \fIulimit\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin option shall be supported:
.TP 7
\fB-f\fP
Set (or report, if no \fIblocks\fP operand is present), tha file size
limit up in blocks. Da \fB-f\fP option shall also be the
default case.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIblocks\fP
Da number of 512-byte blocks ta use as tha freshly smoked up file size limit.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIulimit\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da standard output shall be used when no \fIblocks\fP operand is
present. If tha current number of blocks is limited, the
number of blocks up in tha current limit shall be freestyled up in tha following
format:
.sp
.RS
.nf

\fB"%d\\n", <\fP\fInumber of 512-byte blocks\fP\fB>
\fP
.fi
.RE
.LP
If there is no current limit on tha number of blocks, up in tha POSIX
locale tha followin format shall be used:
.sp
.RS
.nf

\fB"unlimited\\n"
\fP
.fi
.RE
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
A request fo' a higher limit was rejected or a error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Since \fIulimit\fP affects tha current shell execution environment,
it be always provided as a gangbangin' finger-lickin' dirty-ass shell regular built-in. I aint talkin' bout chicken n' gravy biatch. If it is
called up in a separate utilitizzle execution environment, like fuckin one of
the following:
.sp
.RS
.nf

\fBnohup ulimit -f 10000
env ulimit 10000
\fP
.fi
.RE
.LP
it do not affect tha file size limit of tha callerz environment.
.LP
Once a limit has been decreased by a process, it cannot be increased
(unless appropriate privileges is involved), even back to
the original gangsta system limit.
.SH EXAMPLES
.LP
Set tha file size limit ta 51200 bytes:
.sp
.RS
.nf

\fBulimit -f 100
\fP
.fi
.RE
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
Da System Interfaces volume of IEEE\ Std\ 1003.1-2001, \fIulimit\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
