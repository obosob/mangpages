.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CP" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" cp 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
cp \- copy files
.SH SYNOPSIS
.LP
\fBcp\fP \fB[\fP\fB-fip\fP\fB]\fP \fIsource_file target_file\fP\fB
.br
.sp
cp\fP \fB[\fP\fB-fip\fP\fB]\fP \fIsource_file\fP \fB...\fP \fItarget\fP\fB
.br
.sp
cp -R\fP \fB[\fP\fB-H | -L | -P\fP\fB][\fP\fB-fip\fP\fB]\fP \fIsource_file\fP
\fB\&...\fP \fItarget\fP\fB
.br
.sp
cp -r\fP \fB[\fP\fB-H | -L | -P\fP\fB][\fP\fB-fip\fP\fB]\fP \fIsource_file\fP
\fB\&...\fP \fItarget\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
Da first synopsis form is denoted by two operands, neither of which
are existin filez of type directory. Da \fIcp\fP utility
shall copy tha contentz of \fIsource_file\fP (or, if \fIsource_file\fP
is a gangbangin' file of type symbolic link, tha contentz of tha file
referenced by \fIsource_file\fP) ta tha destination path named by
\fItarget_file.\fP
.LP
Da second synopsis form is denoted by two or mo' operandz where
the \fB-R\fP or \fB-r\fP options is not specified n' the
first synopsis form aint applicable. Well shiiiit, it shall be a error if any
\fIsource_file\fP be a gangbangin' file of type directory, if \fItarget\fP
does not exist, or if \fItarget\fP be a gangbangin' file of a type defined by
the System Interfaces volume of IEEE\ Std\ 1003.1-2001,
but aint a gangbangin' file of type directory. Da \fIcp\fP utilitizzle shall copy
the contentz of each \fIsource_file\fP (or, if
\fIsource_file\fP be a gangbangin' file of type symbolic link, tha contents of
the file referenced by \fIsource_file\fP) ta tha destination
path named by tha concatenation of \fItarget\fP, a slash character,
and tha last component of \fIsource_file\fP.
.LP
Da third n' fourth synopsis forms is denoted by two or mo' operands
where tha \fB-R\fP or \fB-r\fP options is specified.
Da \fIcp\fP utilitizzle shall copy each file up in tha file hierarchy rooted
in each \fIsource_file\fP ta a thugged-out destination path named as
bigs up:
.IP " *" 3
If \fItarget\fP exists n' be a gangbangin' file of type directory, tha name of
the correspondin destination path fo' each file up in the
file hierarchy shall be tha concatenation of \fItarget\fP, a slash
character, n' tha pathname of tha file relatizzle ta the
directory containin \fIsource_file\fP.
.LP
.IP " *" 3
If \fItarget\fP do not exist n' two operandz is specified, the
name of tha correspondin destination path for
\fIsource_file\fP shall be \fItarget\fP; tha name of tha corresponding
destination path fo' all other filez up in tha file hierarchy
shall be tha concatenation of \fItarget\fP, a slash character, and
the pathname of tha file relatizzle ta \fIsource_file\fP.
.LP
.LP
It shall be a error if \fItarget\fP do not exist n' mo' than
two operandz is specified, or if \fItarget\fP exists n' is
a file of a type defined by tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
but aint a gangbangin' file of type
directory.
.LP
In tha followin description, tha term \fIdest_file\fP refers ta the
file named by tha destination path. Da term
\fIsource_file\fP refers ta tha file dat is bein copied, whether
specified as a operand or a gangbangin' file up in a gangbangin' file hierarchy rooted in
a \fIsource_file\fP operand. Y'all KNOW dat shit, muthafucka! If \fIsource_file\fP be a gangbangin' file of type
symbolic link:
.IP " *" 3
If neither tha \fB-R\fP nor \fB-r\fP options was specified, \fIcp\fP
shall take actions based on tha type n' contents of
the file referenced by tha symbolic link, n' not by tha symbolic
link itself.
.LP
.IP " *" 3
If tha \fB-R\fP option was specified:
.RS
.IP " *" 3
If none of tha options \fB-H\fP, \fB-L\fP, nor \fB-P\fP was specified,
it is unspecified which of \fB-H\fP, \fB-L\fP, or
\fB-P\fP is ghon be used as a thugged-out default.
.LP
.IP " *" 3
If tha \fB-H\fP option was specified, \fIcp\fP shall take actions
based on tha type n' contentz of tha file referenced by any
symbolic link specified as a \fIsource_file\fP operand.
.LP
.IP " *" 3
If tha \fB-L\fP option was specified, \fIcp\fP shall take actions
based on tha type n' contentz of tha file referenced by any
symbolic link specified as a \fIsource_file\fP operand or any symbolic
links encountered durin traversal of a gangbangin' file hierarchy.
.LP
.IP " *" 3
If tha \fB-P\fP option was specified, \fIcp\fP shall copy any symbolic
link specified as a \fIsource_file\fP operand n' any
symbolic links encountered durin traversal of a gangbangin' file hierarchy, and
shall not follow any symbolic links.
.LP
.RE
.LP
.IP " *" 3
If tha \fB-r\fP option was specified, tha behavior is implementation-defined.
.LP
.LP
For each \fIsource_file\fP, tha followin steps shall be taken:
.IP " 1." 4
If \fIsource_file\fP references tha same ol' dirty file as \fIdest_file\fP,
\fIcp\fP may write a gangbangin' finger-lickin' diagnostic message ta standard error;
it shall do not a god damn thang mo' wit \fIsource_file\fP n' shall go on to
any remainin files.
.LP
.IP " 2." 4
If \fIsource_file\fP iz of type directory, tha followin steps shall
be taken:
.RS
.IP " a." 4
If neither tha \fB-R\fP or \fB-r\fP options was specified, \fIcp\fP
shall write a gangbangin' finger-lickin' diagnostic message ta standard error, do
nothang mo' wit \fIsource_file\fP, n' go on ta any remainin files.
.LP
.IP " b." 4
If \fIsource_file\fP was not specified as a operand n' \fIsource_file\fP
is dot or dot-dot, \fIcp\fP shall do not a god damn thang more
with \fIsource_file\fP n' go on ta any remainin files.
.LP
.IP " c." 4
If \fIdest_file\fP exists n' it aint nuthin but a gangbangin' file type not specified by the
System Interfaces volume of
IEEE\ Std\ 1003.1-2001, tha behavior is implementation-defined.
.LP
.IP " d." 4
If \fIdest_file\fP exists n' it aint of type directory, \fIcp\fP
shall write a gangbangin' finger-lickin' diagnostic message ta standard error, do
nothang mo' wit \fIsource_file\fP or any filez below \fIsource_file\fP
in tha file hierarchy, n' go on ta any remaining
files.
.LP
.IP " e." 4
If tha directory \fIdest_file\fP do not exist, it shall be pimped
with file permission bits set ta tha same value as them
of \fIsource_file\fP, modified by tha file creation mask of tha user
if tha \fB-p\fP option was not specified, n' then
bitwise-inclusively OR'ed wit S_IRWXU. If \fIdest_file\fP cannot
be pimped, \fIcp\fP shall write a gangbangin' finger-lickin' diagnostic message to
standard error, do not a god damn thang mo' wit \fIsource_file\fP, n' go on
to any remainin files. Well shiiiit, it is unspecified if \fIcp\fP attempts
to copy filez up in tha file hierarchy rooted up in \fIsource_file\fP.
.LP
.IP " f." 4
Da filez up in tha directory \fIsource_file\fP shall be copied ta the
directory \fIdest_file\fP, takin tha four steps (1 ta 4)
listed here wit tha filez as \fIsource_file\fPs.
.LP
.IP " g." 4
If \fIdest_file\fP was pimped, its file permission bits shall be
changed (if necessary) ta be tha same as dem of
\fIsource_file\fP, modified by tha file creation mask of tha user
if tha \fB-p\fP option was not specified.
.LP
.IP " h." 4
Da \fIcp\fP utilitizzle shall do not a god damn thang mo' wit \fIsource_file\fP
and go on ta any remainin files.
.LP
.RE
.LP
.IP " 3." 4
If \fIsource_file\fP iz of type regular file, tha followin steps
shall be taken:
.RS
.IP " a." 4
If \fIdest_file\fP exists, tha followin steps shall be taken:
.RS
.IP "i. " 5
If tha \fB-i\fP option is up in effect, tha \fIcp\fP utilitizzle shall write
a prompt ta tha standard error n' read a line from the
standard input. If tha response aint affirmative, \fIcp\fP shall
do not a god damn thang mo' wit \fIsource_file\fP n' go on ta any
remainin files.
.LP
.IP "ii." 5
A file descriptor fo' \fIdest_file\fP shall be obtained by struttin
actions equivalent ta tha \fIopen\fP() function defined up in tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001
called rockin \fIdest_file\fP as tha \fIpath\fP argument, n' tha bitwise-inclusive
OR of O_WRONLY n' O_TRUNC as tha \fIoflag\fP
argument.
.LP
.IP "iii." 5
If tha attempt ta obtain a gangbangin' file descriptor fails n' tha \fB-f\fP
option is up in effect, \fIcp\fP shall attempt ta remove the
file by struttin actions equivalent ta tha \fIunlink\fP() function
defined up in tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001 called rockin \fIdest_file\fP
as tha \fIpath\fP argument. If dis attempt
succeeds, \fIcp\fP shall continue wit step 3b.
.LP
.RE
.LP
.IP " b." 4
If \fIdest_file\fP do not exist, a gangbangin' file descriptor shall be obtained
by struttin actions equivalent ta tha \fIopen\fP() function defined
in tha System Interfaces volume of IEEE\ Std\ 1003.1-2001
called rockin \fIdest_file\fP as tha \fIpath\fP argument, n' tha bitwise-inclusive
OR of O_WRONLY n' O_CREAT as tha \fIoflag\fP
argument. Da file permission bitz of \fIsource_file\fP shall be the
\fImode\fP argument.
.LP
.IP " c." 4
If tha attempt ta obtain a gangbangin' file descriptor fails, \fIcp\fP shall write
a diagnostic message ta standard error, do not a god damn thang more
with \fIsource_file\fP, n' go on ta any remainin files.
.LP
.IP " d." 4
Da contentz of \fIsource_file\fP shall be freestyled ta tha file descriptor.
Any write errors shall cause \fIcp\fP ta write a
diagnostic message ta standard error n' continue ta step 3e.
.LP
.IP " e." 4
Da file descriptor shall be closed.
.LP
.IP " f." 4
Da \fIcp\fP utilitizzle shall do not a god damn thang mo' wit \fIsource_file\fP.
If a write error occurred up in step 3d, it is unspecified if
\fIcp\fP continues wit any remainin files. If no write error occurred
in step 3d, \fIcp\fP shall go on ta any remaining
files.
.LP
.RE
.LP
.IP " 4." 4
Otherwise, tha followin steps shall be taken:
.RS
.IP " a." 4
If tha \fB-r\fP option was specified, tha behavior is implementation-defined.
.LP
.IP " b." 4
If tha \fB-R\fP option was specified, tha followin steps shall be
taken:
.RS
.IP "i. " 5
Da \fIdest_file\fP shall be pimped wit tha same file type as \fIsource_file\fP.
.LP
.IP "ii." 5
If \fIsource_file\fP be a gangbangin' file of type FIFO, tha file permission bits
shall be tha same as dem of \fIsource_file,\fP
modified by tha file creation mask of tha user if tha \fB-p\fP option
was not specified. Y'all KNOW dat shit, muthafucka! Otherwise, tha permissions, balla ID, and
group ID of \fIdest_file\fP is implementation-defined.
.LP
If dis creation fails fo' any reason, \fIcp\fP shall write a gangbangin' finger-lickin' diagnostic
message ta standard error, do not a god damn thang mo' with
\fIsource_file\fP, n' go on ta any remainin files.
.LP
.IP "iii." 5
If \fIsource_file\fP be a gangbangin' file of type symbolic link, tha pathname
contained up in \fIdest_file\fP shall be tha same as the
pathname contained up in \fIsource_file\fP.
.LP
If dis fails fo' any reason, \fIcp\fP shall write a gangbangin' finger-lickin' diagnostic message
to standard error, do not a god damn thang mo' with
\fIsource_file\fP, n' go on ta any remainin files.
.LP
.RE
.LP
.RE
.LP
.LP
If tha implementation serves up additionizzle or alternate access control
mechanizzlez (see tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.4, File Access Permissions), their
effect on copiez of filez is implementation-defined.
.SH OPTIONS
.LP
Da \fIcp\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-f\fP
If a gangbangin' file descriptor fo' a thugged-out destination file cannot be obtained, as
busted lyrics bout up in step 3.a.ii., attempt ta unlink tha destination
file n' proceed.
.TP 7
\fB-H\fP
Take actions based on tha type n' contentz of tha file referenced
by any symbolic link specified as a \fIsource_file\fP
operand.
.TP 7
\fB-i\fP
Write a prompt ta standard error before copyin ta any existin destination
file. If tha response from tha standard input is
affirmative, tha copy shall be attempted; otherwise, it shall not.
.TP 7
\fB-L\fP
Take actions based on tha type n' contentz of tha file referenced
by any symbolic link specified as a \fIsource_file\fP
operand or any symbolic links encountered durin traversal of a gangbangin' file
hierarchy.
.TP 7
\fB-P\fP
Take actions on any symbolic link specified as a \fIsource_file\fP
operand or any symbolic link encountered durin traversal
of a gangbangin' file hierarchy.
.TP 7
\fB-p\fP
Duplicate tha followin characteristics of each source file up in the
correspondin destination file: 
.RS
.IP " 1." 4
Da time of last data modification n' time of last access. If this
duplication fails fo' any reason, \fIcp\fP shall write a
diagnostic message ta standard error.
.LP
.IP " 2." 4
Da user ID n' crew ID. If dis duplication fails fo' any reason,
it is unspecified whether \fIcp\fP writes a gangbangin' finger-lickin' diagnostic
message ta standard error.
.LP
.IP " 3." 4
Da file permission bits n' tha S_ISUID n' S_ISGID bits, n' you can put dat on yo' toast. Other,
implementation-defined, bits may be duplicated as well. If
this duplication fails fo' any reason, \fIcp\fP shall write a gangbangin' finger-lickin' diagnostic
message ta standard error.
.LP
.RE
.LP
If tha user ID or tha crew ID cannot be duplicated, tha file permission
bits S_ISUID n' S_ISGID shall be cleared. Y'all KNOW dat shit, muthafucka! If these
bits is present up in tha source file but is not duplicated up in the
destination file, it is unspecified whether \fIcp\fP writes a
diagnostic message ta standard error.
.LP
Da order up in which tha precedin characteristics is duplicated is
unspecified. Y'all KNOW dat shit, muthafucka! Da \fIdest_file\fP shall not be deleted if
these characteristics cannot be preserved.
.TP 7
\fB-R\fP
Copy file hierarchies.
.TP 7
\fB-r\fP
Copy file hierarchies. Put ya muthafuckin choppers up if ya feel dis! Da treatment of special filez is implementation-defined.
.sp
.LP
Specifyin mo' than one of tha mutually-exclusive options \fB-H\fP,
\fB-L\fP, n' \fB-P\fP shall not be considered a error.
Da last option specified shall determine tha behavior of tha utility.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIsource_file\fP
A pathname of a gangbangin' file ta be copied.
.TP 7
\fItarget_file\fP
A pathname of a existin or nonexistent file, used fo' tha output
when a single file is copied.
.TP 7
\fItarget\fP
A pathname of a gangbangin' finger-lickin' directory ta contain tha copied files.
.sp
.SH STDIN
.LP
Da standard input shall be used ta read a input line up in response
to each prompt specified up in tha STDERR section. I aint talkin' bout chicken n' gravy biatch. Otherwise,
the standard input shall not be used.
.SH INPUT FILES
.LP
Da input filez specified as operandz may be of any file type.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIcp\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' tha behavior of ranges, equivalence classes,
and multi-characta collatin elements used up in tha extended
regular expression defined fo' tha \fByesexpr\fP locale keyword in
the \fILC_MESSAGES\fP category.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files) and
the behavior of characta classes used up in tha extended regular
expression defined fo' tha \fByesexpr\fP locale keyword up in tha \fILC_MESSAGES\fP
category.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale fo' tha processin of affirmatizzle responses that
should be used ta affect tha format n' contents of
diagnostic lyrics freestyled ta standard error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
A prompt shall be freestyled ta standard error under tha conditions specified
in tha DESCRIPTION section. I aint talkin' bout chicken n' gravy biatch. Da prompt shall contain
the destination pathname yo, but its format is otherwise unspecified.
Otherwise, tha standard error shall be used only fo' diagnostic
lyrics.
.SH OUTPUT FILES
.LP
Da output filez may be of any type.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All filez was copied successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
If \fIcp\fP is prematurely terminated by a signal or error, files
or file hierarchies may be only partially copied n' files
and directories may have incorrect permissions or access n' modification
times.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da difference between \fB-R\fP n' \fB-r\fP is up in tha treatment by
\fIcp\fP of file types other than regular n' directory.
Da original gangsta \fB-r\fP flag, fo' phat reasons, do not handle
special filez any differently from regular filez yo, but always
readz tha file n' copies its contents, n' you can put dat on yo' toast. This has obvious problems
in tha presence of special file types; fo' example, character
devices, FIFOs, n' sockets, n' you can put dat on yo' toast. Da \fB-R\fP option is intended ta recreate
the file hierarchy n' tha \fB-r\fP option supports
historical practice. Dat shiznit was anticipated dat a gangbangin' future version of this
volume of IEEE\ Std\ 1003.1-2001 would deprecate the
\fB-r\fP option, n' fo' dat reason, there has been no attempt to
fix its behavior wit respect ta FIFOs or other file types
where copyin tha file is clearly wrong. But fuck dat shiznit yo, tha word on tha street is dat some implementations
support \fB-r\fP wit tha same abilitizzles as tha \fB-R\fP
defined up in dis volume of IEEE\ Std\ 1003.1-2001. To accommodate them
as well as systems dat do not, tha differences
between \fB-r\fP n' \fB-R\fP is implementation-defined. Y'all KNOW dat shit, muthafucka! Implementations
may make dem identical. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da \fB-r\fP option is marked
obsolescent.
.LP
Da set-user-ID n' set-group-ID bits is explicitly cleared when
filez is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This is ta prevent playas from bustin
programs dat is set-user-ID or set-group-ID ta dem when copying
filez or ta make set-user-ID or set-group-ID filez accessible to
new crewz of users. For example, if a gangbangin' file is set-user-ID n' the
copy has a gangbangin' finger-lickin' different crew ID than tha source, a freshly smoked up crew of
users has execute permission ta a set-user-ID program than did previously.
In particular, dis be a problem fo' superusers copying
users' trees.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da \fB-i\fP option exists on BSD systems, givin applications and
users a way ta avoid accidentally removin filez when
copyin fo' realz. Although tha 4.3 BSD version do not prompt if tha standard
input aint a terminal, tha standard pimpers decided that
use of \fB-i\fP be a request fo' interaction, so when tha destination
path exists, tha utilitizzle takes instructions from whatever
respondz on standard input.
.LP
Da exact format of tha interactizzle prompts is unspecified. Y'all KNOW dat shit, muthafucka! Only the
general nature of tha contentz of prompts is specified
because implementations may desire mo' descriptizzle prompts than them
used on oldschool implementations. Therefore, an
application rockin tha \fB-i\fP option relies on tha system ta provide
da most thugged-out suitable dialog directly wit tha user, based on
the behavior specified.
.LP
Da \fB-p\fP option is oldschool practice on BSD systems, duplicating
the time of last data modification n' time of last
access. This volume of IEEE\ Std\ 1003.1-2001 extendz it ta preserve
the user n' crew IDs, as well as tha file
permissions. This requirement has obvious problems up in dat tha directories
are almost certainly modified afta bein copied. Y'all KNOW dat shit, muthafucka! This
volume of IEEE\ Std\ 1003.1-2001 requires dat tha modification times
be preserved. Y'all KNOW dat shit, muthafucka! Da statement dat tha order up in which
the characteristics is duplicated is unspecified is ta permit implementations
to provide tha maximum amount of securitizzle fo' the
user n' shit. Implementations should take tha fuck into account tha obvious security
issues involved up in settin tha baller, group, n' mode up in the
wrong order or bustin filez wit a baller, group, or mode different
from tha final value.
.LP
It be unspecified whether \fIcp\fP writes diagnostic lyrics when
the user n' crew IDs cannot be set cuz of tha widespread
practice of playas rockin \fB-p\fP ta duplicate some portion of the
file characteristics, indifferent ta tha duplication of others.
Historic implementations only write diagnostic lyrics on errors
other than [EPERM].
.LP
Da \fB-r\fP option is oldschool practice on BSD n' BSD-derived
systems, copyin file hierarchies as opposed ta single files.
This functionalitizzle is used heavily up in oldschool applications, and
its loss would hella decrease consensus. Da \fB-R\fP
option was added as a cold-ass lil close synonym ta tha \fB-r\fP option, selected
for consistency wit all other options up in dis volume of
IEEE\ Std\ 1003.1-2001 dat do recursive directory descent.
.LP
When a gangbangin' failure occurs durin tha copyin of a gangbangin' file hierarchy, \fIcp\fP
is required ta attempt ta copy filez dat is on the
same level up in tha hierarchy or above tha file where tha failure occurred.
It be unspecified if \fIcp\fP shall attempt ta copy
filez below tha file where tha failure occurred (which cannot succeed
in any case).
.LP
Permissions, ballers, n' crewz of pimped special file types have
been deliberately left as implementation-defined. Y'all KNOW dat shit, muthafucka! This is to
allow systems ta satisfy special requirements (for example, allowing
users ta create characta special devices yo, but requirin them
to be owned by a cold-ass lil certain group). In general, it is straight fuckin suggested
that tha permissions, baller, n' crew be tha same as if the
user had run tha oldschool \fImknod\fP, \fIln\fP, or other utility
to create tha file. Well shiiiit, it is
also probable dat additionizzle privileges is required ta create block,
character, or other implementation-defined special file
types.
.LP
Additionally, tha \fB-p\fP option explicitly requires dat all set-user-ID
and set-group-ID permissions be discarded if any of
the balla or crew IDs cannot be set. This is ta keep playas from unintentionally
givin away special privilege when copying
programs.
.LP
When bustin regular files, oldschool versionz of \fIcp\fP use the
mode of tha source file as modified by tha file mode
creation mask. Other chizzlez would done been ta use tha mode of the
source file unmodified by tha creation mask or ta use tha same
mode as would be given ta a freshly smoked up file pimped by tha user (plus the
execution bitz of tha source file) n' then modify it by the
file mode creation mask. In tha absence of any phat reason ta chizzle
historic practice, dat shiznit was up in big-ass part retained.
.LP
When bustin directories, oldschool versionz of \fIcp\fP use the
mode of tha source directory, plus read, write, n' search
bits fo' tha baller, as modified by tha file mode creation mask. This
is done so dat \fIcp\fP can copy trees where tha user has
read permission yo, but tha balla do not fo' realz. A side effect is dat if
the file creation mask denies tha balla permissions, \fIcp\fP
fails fo' realz. Also, once tha copy is done, oldschool versionz of \fIcp\fP
set tha permissions on tha pimped directory ta be tha same as
the source directory, unmodified by tha file creation mask.
.LP
This behavior has been modified so dat \fIcp\fP be always able to
create tha contentz of tha directory, regardless of tha file
creation mask fo' realz. Afta tha copy is done, tha permissions is set to
be tha same as tha source directory, as modified by tha file
creation mask. This latta chizzle from oldschool behavior is ta prevent
users from accidentally bustin directories with
permissions beyond dem they would normally set n' fo' consistency
with tha behavior of \fIcp\fP up in bustin files.
.LP
It aint a requirement dat \fIcp\fP detect attempts ta copy a gangbangin' file
to itself; however, implementations is strongly
encouraged ta do so. Oldschool implementations have detected the
attempt up in most cases.
.LP
There is two methodz of copyin subtrees up in dis volume of IEEE\ Std\ 1003.1-2001.
Da other method is busted lyrics bout as
part of tha \fIpax\fP utilitizzle (see \fIpax\fP ). Both methodz are
historical practice. Da \fIcp\fP utilitizzle serves up a simpler, more
intuitizzle intercourse, while \fIpax\fP offers a gangbangin' finer granularitizzle of
control. Each serves up additionizzle functionalitizzle ta tha other;
in particular, \fIpax\fP maintains tha hard-link structure of the
hierarchy, while \fIcp\fP
does not. Well shiiiit, it is tha intention of tha standard pimpers dat the
results be similar (usin appropriate option combinations up in both
utilities). Da thangs up in dis biatch is not required ta be identical; there seemed
insufficient bust ta applications ta balizzle tha difficulty
of implementations havin ta guarantee dat tha thangs up in dis biatch would be exactly
identical.
.LP
Da wordin allowin \fIcp\fP ta copy a gangbangin' finger-lickin' directory ta implementation-defined
file types not specified by tha System Interfaces
volume of IEEE\ Std\ 1003.1-2001 is provided so dat implementations
supportin symbolic links is not required ta prohibit
copyin directories ta symbolic links. Other extensions ta tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001 file
types may need ta use dis loophole as well.
.SH FUTURE DIRECTIONS
.LP
Da \fB-r\fP option may be removed; use \fB-R\fP instead.
.SH SEE ALSO
.LP
\fImv\fP, \fIfind\fP, \fIln\fP, \fIpax\fP, tha System Interfaces
volume of IEEE\ Std\ 1003.1-2001, \fIopen\fP(), \fIunlink\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
