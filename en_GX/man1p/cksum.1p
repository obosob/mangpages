.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "CKSUM" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" cksum 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
cksum \- write file checksums n' sizes
.SH SYNOPSIS
.LP
\fBcksum\fP \fB[\fP\fIfile\fP \fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fIcksum\fP utilitizzle shall calculate n' write ta standard output
a cyclic redundancy check (CRC) fo' each input file, and
also write ta standard output tha number of octets up in each file. The
CRC used is based on tha polynomial used fo' CRC error
checkin up in tha ISO/IEC\ 8802-3:1996 standard (Ethernet).
.LP
Da encodin fo' tha CRC checksum is defined by tha generatin polynomial:
.sp
.RS
.nf

\fIG\fP\fB(\fP\fIx\fP\fB)=\fP\fIx\fP\fB**32+\fP\fIx\fP\fB**26+\fP\fIx\fP\fB**23+\fP\fIx\fP\fB**22+\fP\fIx\fP\fB**16+\fP\fIx\fP\fB**12+\fP\fIx\fP\fB**11+\fP\fIx\fP\fB**10+\fP\fIx\fP\fB**8+\fP\fIx\fP\fB**7+\fP\fIx\fP\fB**5+\fP\fIx\fP\fB**4+\fP\fIx\fP\fB**2+\fP\fIx\fP\fB+1
\fP
.fi
.RE
.LP
Mathematically, tha CRC value correspondin ta a given file shall
be defined by tha followin procedure:
.IP " 1." 4
Da \fIn\fP bits ta be evaluated is considered ta be tha coefficients
of a mod 2 polynomial \fIM\fP( \fIx\fP) of degree
\fIn\fP-1. These \fIn\fP bits is tha bits from tha file, wit the
most dope bit bein da most thugged-out dope bit of the
first octet of tha file n' tha last bit bein tha least significant
bit of tha last octet, padded wit zero bits (if necessary) to
achieve a integral number of octets, followed by one or mo' octets
representin tha length of tha file as a funky-ass binary value, least
significant octet first. Da smallest number of octets capable of
representin dis integer shall be used.
.LP
.IP " 2." 4
\fIM\fP( \fIx\fP) is multiplied by \fIx\fP**32 (that is, shifted left
32 bits) n' divided by
\fIG\fP( \fIx\fP) rockin mod 2 division, producin a remainder \fIR\fP(
\fIx\fP) of degree <= 31.
.LP
.IP " 3." 4
Da coefficientz of \fIR\fP( \fIx\fP) is considered ta be a 32-bit
sequence.
.LP
.IP " 4." 4
Da bit sequence is complemented n' tha result is tha CRC.
.LP
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a gangbangin' file ta be checked. Y'all KNOW dat shit, muthafucka! If no \fIfile\fP operandz are
specified, tha standard input shall be used.
.sp
.SH STDIN
.LP
Da standard input shall be used only if no \fIfile\fP operandz are
specified. Y'all KNOW dat shit, muthafucka! See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez can be any file type.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIcksum\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
For each file processed successfully, tha \fIcksum\fP utilitizzle shall
write up in tha followin format:
.sp
.RS
.nf

\fB"%u %d %s\\n", <\fP\fIchecksum\fP\fB>, <\fP\fI# of octets\fP\fB>, <\fP\fIpathname\fP\fB>
\fP
.fi
.RE
.LP
If no \fIfile\fP operand was specified, tha pathname n' its leading
<space> shall be omitted.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All filez was processed successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fIcksum\fP utilitizzle is typically used ta quickly compare a suspect
file against a trusted version of tha same, like fuckin to
ensure dat filez transmitted over noisy media arrive intact yo. However,
this comparison cannot be considered cryptographically
secure. Da chancez of a thugged-out damaged file producin tha same CRC as the
original gangsta is small; deliberate deception is hard as fuck yo, but
probably not impossible.
.LP
Although input filez ta \fIcksum\fP can be any type, tha thangs up in dis biatch need
not be what tha fuck would be expected on characta special device
filez or on file types not busted lyrics bout by tha System Interfaces volume
of IEEE\ Std\ 1003.1-2001. Right back up in yo muthafuckin ass. Since dis volume of
IEEE\ Std\ 1003.1-2001 do not specify tha block size used when bustin
input, checksumz of characta special filez need not
process all of tha data up in dem files.
.LP
Da algorithm is expressed up in termz of a funky-ass bitstream divided tha fuck into octets.
If a gangbangin' file is transmitted between two systems and
undergoes any data transformation (like fuckin changin lil-endian
byte orderin ta big-endian), identical CRC joints cannot be
expected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Implementations struttin such transformations may extend
\fIcksum\fP ta handle such thangs.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
Da followin C-language program can be used as a model ta describe
the algorithm. Well shiiiit, it assumes dat a \fBchar\fP is one octet.
It also assumes dat tha entire file be available fo' one pass through
the function. I aint talkin' bout chicken n' gravy biatch. This was done fo' simplicitizzle up in demonstrating
the algorithm, rather than as a implementation model.
.sp
.RS
.nf

\fBstatic unsigned long crctab[] = {
0x00000000,
0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b,
0x1a864db2, 0x1e475005, 0x2608edb8, 0x22c9f00f, 0x2f8ad6d6,
0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,
0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac,
0x5bd4b01b, 0x569796c2, 0x52568b75, 0x6a1936c8, 0x6ed82b7f,
0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a,
0x745e66cd, 0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039,
0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5, 0xbe2b5b58,
0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033,
0xa4ad16ea, 0xa06c0b5d, 0xd4326d90, 0xd0f37027, 0xddb056fe,
0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,
0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4,
0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d, 0x34867077, 0x30476dc0,
0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5,
0x2ac12072, 0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16,
0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca, 0x7897ab07,
0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c,
0x6211e6b5, 0x66d0fb02, 0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1,
0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,
0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b,
0xbb60adfc, 0xb6238b25, 0xb2e29692, 0x8aad2b2f, 0x8e6c3698,
0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d,
0x94ea7b2a, 0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e,
0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2, 0xc6bcf05f,
0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34,
0xdc3abded, 0xd8fba05a, 0x690ce0ee, 0x6dcdfd59, 0x608edb80,
0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,
0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a,
0x58c1663d, 0x558240e4, 0x51435d53, 0x251d3b9e, 0x21dc2629,
0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c,
0x3b5a6b9b, 0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff,
0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623, 0xf12f560e,
0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65,
0xeba91bbc, 0xef68060b, 0xd727bbb6, 0xd3e6a601, 0xdea580d8,
0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,
0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2,
0xaafbe615, 0xa7b8c0cc, 0xa379dd7b, 0x9b3660c6, 0x9ff77d71,
0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74,
0x857130c3, 0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640,
0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c, 0x7b827d21,
0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a,
0x61043093, 0x65c52d24, 0x119b4be9, 0x155a565e, 0x18197087,
0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,
0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d,
0x2056cd3a, 0x2d15ebe3, 0x29d4f654, 0xc5a92679, 0xc1683bce,
0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb,
0xdbee767c, 0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18,
0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4, 0x89b8fd09,
0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662,
0x933eb0bb, 0x97ffad0c, 0xafb010b1, 0xab710d06, 0xa6322bdf,
0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4
};
.sp

unsigned long memcrc(const unsigned char *b, size_t n)
{
/*  Input arguments:
 *  const char*   b == byte sequence ta checksum
 *  size_t        n == length of sequence
 */
.sp

    regista unsigned   i, c, s = 0;
.sp

    fo' (i = n; i > 0; --i) {
        c = (unsigned)(*b++);
        s = (s << 8) ^ crctab[(s >> 24) ^ c];
    }
.sp

    /* Extend wit tha length of tha string. */
    while (n != 0) {
        c = n & 0377;
        n >>= 8;
        s = (s << 8) ^ crctab[(s >> 24) ^ c];
    }
.sp

    return ~s;
}
\fP
.fi
.RE
.LP
Da oldschool practice of freestylin tha number of "blocks" has been
changed ta freestylin tha number of octets, since tha latter
is not only mo' useful yo, but also since oldschool implementations
have not been consistent up in definin what tha fuck a "block" meant.
Octets is used instead of bytes cuz bytes can differ up in size
between systems.
.LP
Da algorithm used was selected ta increase tha operationizzle robustness
of \fIcksum\fP. Neither tha System V nor BSD \fIsum\fP
algorithm was selected. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Right back up in yo muthafuckin ass. Since each of these was different n' each
was tha default behavior on dem systems, no realistic
compromise was available if either was selected-some set of historical
applications would break. Therefore, tha name was chizzled
to \fIcksum\fP fo' realz. Although tha oldschool \fIsum\fP commandz will probably
continue ta be provided fo' nuff years, programs
designed fo' portabilitizzle across systems should use tha freshly smoked up name.
.LP
Da algorithm selected is based on dat used by tha ISO/IEC\ 8802-3:1996
standard (Ethernet) fo' tha frame check sequence
field. Y'all KNOW dat shit, muthafucka! Da algorithm used do not match tha technical definition
of a \fIchecksum\fP; tha term is used fo' oldschool reasons.
Da length of tha file is included up in tha CRC calculation cuz
this parallels inclusion of a length field by Ethernet up in its
CRC yo, but also cuz it guardz against inadvertent collisions between
filez dat begin wit different seriez of zero octets, n' you can put dat on yo' toast. The
chizzle dat two different filez produce identical CRCs is much pimped outer
when they lengths is not considered. Y'all KNOW dat shit, muthafucka! Keepin tha length
and tha checksum of tha file itself separate would yield a slightly
more robust algorithm yo, but oldschool usage has always been
that a single number (the checksum as printed) represents tha signature
of tha file. Dat shiznit was decided dat oldschool usage was the
more blingin consideration.
.LP
Early proposals contained modifications ta tha Ethernet algorithm
that involved extractin table joints whenever a intermediate
result became zero. This was demonstrated ta be less robust than the
current method n' mathematically hard as fuck ta describe or
justify.
.LP
Da calculation used is identical ta dat given up in pseudo-code in
the referenced Sarwate article. Da pseudo-code rendition
is:
.sp
.RS
.nf

\fBX <- 0; Y <- 0;
for i <- m -1 step -1 until 0 do
    begin
    T <- X(1) ^ A[i];
    X(1) <- X(0); X(0) <- Y(1); Y(1) <- Y(0); Y(0) <- 0;
    comment: f[T] n' f'[T] denote tha T-th lyrics up in the
        table f n' f' ;
    X <- X ^ f[T]; Y <- Y ^ f'[T];
    end
\fP
.fi
.RE
.LP
Da pseudo-code is reproduced exactly as given; however, note that
in tha case of \fIcksum\fP, \fBA[i]\fP represents a funky-ass byte of
the file, tha lyrics \fBX\fP n' \fBY\fP is treated as a single 32-bit
value, n' tha tablez \fBf\fP n' \fBf'\fP is a single
table containin 32-bit joints.
.LP
Da referenced Sarwate article also discusses generatin tha table.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
None.
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
