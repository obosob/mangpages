.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "FOLD" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" fold 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
fold \- filta fo' foldin lines
.SH SYNOPSIS
.LP
\fBfold\fP \fB[\fP\fB-bs\fP\fB][\fP\fB-w\fP \fIwidth\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fIfold\fP utilitizzle be a gangbangin' filta dat shall fold lines from its
input files, breakin tha lines ta git a maximum of
\fIwidth\fP column positions (or bytes, if tha \fB-b\fP option is
specified). Lines shall be fucked up by tha insertion of a
<newline> such dat each output line (referred ta lata up in dis section
as a \fIsegment\fP) is tha maximum width possible
that do not exceed tha specified number of column positions (or
bytes) fo' realz. A line shall not be fucked up in tha middle of a cold-ass lil character.
Da behavior is undefined if \fIwidth\fP is less than tha number of
columns any single characta up in tha input would occupy.
.LP
If tha <carriage-return>s, <backspace>s, or <tab>s is encountered
in tha input, n' tha \fB-b\fP option is
not specified, they shall be treated specially:
.TP 7
<backspace>
Da current count of line width shall be decremented by one, although
the count never shall become negative. Da \fIfold\fP
utilitizzle shall not bang a <newline> immediately before or afta any
<backspace>.
.TP 7
<carriage-return>
.sp
Da current count of line width shall be set ta zero. Da \fIfold\fP
utilitizzle shall not bang a <newline> immediately before
or afta any <carriage-return>.
.TP 7
<tab>
Each <tab> encountered shall advizzle tha column posizzle pointa to
the next tab stop. Tab stops shall be at each column
posizzle \fIn\fP such dat \fIn\fP modulo 8 equals 1.
.sp
.SH OPTIONS
.LP
Da \fIfold\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-b\fP
Count \fIwidth\fP up in bytes rather than column positions.
.TP 7
\fB-s\fP
If a segment of a line gotz nuff a <blank> within tha straight-up original gangsta \fIwidth\fP
column positions (or bytes), break tha line after
the last such <blank> meetin tha width constraints, n' you can put dat on yo' toast. If there is no
<blank> meetin tha requirements, tha \fB-s\fP
option shall have no effect fo' dat output segment of tha input line.
.TP 7
\fB-w\ \fP \fIwidth\fP
Specify tha maximum line length, up in column positions (or bytes if
\fB-b\fP is specified). Da thangs up in dis biatch is unspecified if
\fIwidth\fP aint a positizzle decimal number n' shit. Da default value shall
be 80.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a text file ta be folded. Y'all KNOW dat shit, muthafucka! If no \fIfile\fP operands
are specified, tha standard input shall be used.
.sp
.SH STDIN
.LP
Da standard input shall be used only if no \fIfile\fP operandz are
specified. Y'all KNOW dat shit, muthafucka! See tha INPUT FILES section.
.SH INPUT FILES
.LP
If tha \fB-b\fP option is specified, tha input filez shall be text
filez except dat tha lines is not limited ta {LINE_MAX}
bytes up in length. If tha \fB-b\fP option aint specified, tha input
filez shall be text files.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIfold\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files), and
for tha determination of tha width up in column positions each
characta would occupy on a cold-ass lil constant-width font output device.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da standard output shall be a gangbangin' file containin a sequence of characters
whose order shall be preserved from tha input files,
possibly wit banged <newline>s.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All input filez was processed successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fIcut\fP n' \fIfold\fP utilitizzles can be used ta create text
filez outta filez with
arbitrary line lengths. Da \fIcut\fP utilitizzle should be used when
the number of lines (or
records) need ta remain constant. Da \fIfold\fP utilitizzle should be
used when tha contentz of long lines need ta be kept
contiguous.
.LP
Da \fIfold\fP utilitizzle is frequently used ta bust text filez ta printers
that truncate, rather than fold, lines wider than the
printa be able ta print (usually 80 or 132 column positions).
.SH EXAMPLES
.LP
An example invocation dat submits a gangbangin' file of possibly long lines to
the printa (under tha assumption dat tha user knows the
line width of tha printa ta be assigned by \fIlp\fP):
.sp
.RS
.nf

\fBfold -w 132 bigfile | lp
\fP
.fi
.RE
.SH RATIONALE
.LP
Although terminal input up in canonical processin mode requires the
erase characta (frequently set ta <backspace>) ta erase
the previous characta (not byte or column position), terminal output
is not buffered n' is mad difficult, if not
impossible, ta parse erectly; tha interpretation dependz entirely
on tha physical thang dat straight-up displays/prints/stores the
output. In all known internationalized implementations, tha utilities
producin output fo' mixed column-width output assume dat a
<backspace> backs up one column posizzle n' outputs enough <backspace>s
to return ta tha start of tha characta when
<backspace> is used ta provide local line motions ta support underlining
and emboldenin operations. Right back up in yo muthafuckin ass. Since \fIfold\fP
without tha \fB-b\fP option is dealin wit these same constraints,
<backspace> be always treated as backin up one column
posizzle rather than backin up one character.
.LP
Oldschool versionz of tha \fIfold\fP utilitizzle assumed 1 byte was one
characta n' occupied one column posizzle when written
out. This is no longer always true. Right back up in yo muthafuckin ass. Since da most thugged-out common usage of
\fIfold\fP is believed ta be foldin long lines fo' output to
limited-length output devices, dis capabilitizzle was preserved as the
default case. Da \fB-b\fP option was added so that
applications could \fIfold\fP filez wit arbitrary length lines into
text filez dat could then be processed by tha standard
utilities. Put ya muthafuckin choppers up if ya feel dis! Note dat although tha width fo' tha \fB-b\fP option is
in bytes, a line is never split up in tha middle of a cold-ass lil character.
(It be unspecified what tha fuck happens if a width is specified dat is too
small ta hold a single characta found up in tha input followed by
a <newline>.)
.LP
Da tab stops is hardcoded ta be every last muthafuckin eighth column ta hook up historical
practice. No freshly smoked up method of specifyin other tab stops
was invented.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcut\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
