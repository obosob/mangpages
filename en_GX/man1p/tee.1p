.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "TEE" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" tee 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
tee \- duplicate standard input
.SH SYNOPSIS
.LP
\fBtee\fP \fB[\fP\fB-ai\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fItee\fP utilitizzle shall copy standard input ta standard output,
makin a cold-ass lil copy up in zero or mo' files. Da \fItee\fP utility
shall not buffer output.
.LP
If tha \fB-a\fP option aint specified, output filez shall be written
(see \fIFile
Read, Write, n' Creation\fP .
.SH OPTIONS
.LP
Da \fItee\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-a\fP
Append tha output ta tha files.
.TP 7
\fB-i\fP
Ignore tha SIGINT signal.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIfile\fP
A pathname of a output file. Processin of at least 13 \fIfile\fP
operandz shall be supported.
.sp
.SH STDIN
.LP
Da standard input can be of any type.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fItee\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default, except dat if tha \fB-i\fP option was specified, SIGINT
shall be ignored.
.SH STDOUT
.LP
Da standard output shall be a cold-ass lil copy of tha standard input.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
If any \fIfile\fP operandz is specified, tha standard input shall
be copied ta each named file.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Da standard input was successfully copied ta all output files.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
If a write ta any successfully opened \fIfile\fP operand fails, writes
to other successfully opened \fIfile\fP operandz and
standard output shall continue yo, but tha exit status shall be non-zero.
Otherwise, tha default actions specified up in \fIUtilitizzle Description
Defaults\fP apply.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fItee\fP utilitizzle is probably used up in a pipeline, ta cook up a cold-ass lil copy
of tha output of some utility.
.LP
Da \fIfile\fP operand is technologically optionizzle yo, but \fItee\fP is no
more useful than \fIcat\fP when none is specified.
.SH EXAMPLES
.LP
Save a unsorted intermediate form of tha data up in a pipeline:
.sp
.RS
.nf

\fB\&... | tee unsorted | sort > sorted
\fP
.fi
.RE
.SH RATIONALE
.LP
Da bufferin requirement means dat \fItee\fP aint allowed ta use
ISO\ C standard straight-up buffered or line-buffered
writes. Well shiiiit, it do not mean dat \fItee\fP has ta do 1-byte readz followed
by 1-byte writes.
.LP
It should be noted dat early versionz of BSD ignore any invalid options
and accept a single \fB'-'\fP as a alternatizzle to
\fB-i\fP. They also print a message if unable ta open a gangbangin' file:
.sp
.RS
.nf

\fB"tee: cannot access %s\\n", <\fP\fIpathname\fP\fB>
\fP
.fi
.RE
.LP
Oldschool implementations ignore write errors. This is explicitly
not permitted by dis volume of
IEEE\ Std\ 1003.1-2001.
.LP
Some oldschool implementations use O_APPEND when providin append
mode; others use tha \fIlseek\fP() function ta seek ta tha end-of-file
afta openin tha file without O_APPEND. This
volume of IEEE\ Std\ 1003.1-2001 requires functionalitizzle equivalent
to rockin O_APPEND; peep \fIFile Read, Write, n' Creation\fP .
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIIntroduction\fP, \fIcat\fP, tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001, \fIlseek\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
