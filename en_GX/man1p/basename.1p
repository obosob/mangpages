.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "BASENAME" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" basename 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
basename \- return non-directory portion of a pathname
.SH SYNOPSIS
.LP
\fBbasename\fP \fIstring\fP \fB[\fP\fIsuffix\fP\fB]\fP
.SH DESCRIPTION
.LP
Da \fIstring\fP operand shall be treated as a pathname, as defined
in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 3.266, Pathname. Da string
\fIstring\fP shall be converted ta tha filename correspondin ta the
last pathname component up in \fIstring\fP n' then tha suffix
strin \fIsuffix\fP, if present, shall be removed. Y'all KNOW dat shit, muthafucka! This shall be done
by struttin actions equivalent ta tha followin steps in
order:
.IP " 1." 4
If \fIstring\fP be a null string, it is unspecified whether tha resulting
strin is \fB'.'\fP or a null string. In either
case, skip steps 2 all up in 6.
.LP
.IP " 2." 4
If \fIstring\fP is \fB"//"\fP, it is implementation-defined whether
steps 3 ta 6 is skipped or processed.
.LP
.IP " 3." 4
If \fIstring\fP consists entirely of slash characters, \fIstring\fP
shall be set ta a single slash character n' shit. In dis case,
skip steps 4 ta 6.
.LP
.IP " 4." 4
If there be any trailin slash charactas up in \fIstring\fP, they shall
be removed.
.LP
.IP " 5." 4
If there be any slash charactas remainin up in \fIstring\fP, tha prefix
of \fIstring\fP up ta n' includin tha last slash
characta up in \fIstring\fP shall be removed.
.LP
.IP " 6." 4
If tha \fIsuffix\fP operand is present, aint identical ta tha characters
remainin up in \fIstring\fP, n' is identical ta a
suffix of tha charactas remainin up in \fIstring\fP, tha suffix \fIsuffix\fP
shall be removed from \fIstring\fP. Otherwise,
\fIstring\fP aint modified by dis step. Well shiiiit, it shall not be considered
an error if \fIsuffix\fP aint found up in \fIstring\fP.
.LP
.LP
Da resultin strang shall be freestyled ta standard output.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIstring\fP
A string.
.TP 7
\fIsuffix\fP
A string.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIbasename\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da \fIbasename\fP utilitizzle shall write a line ta tha standard output
in tha followin format:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIresultin string\fP\fB>
\fP
.fi
.RE
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da definizzle of \fIpathname\fP specifies implementation-defined
behavior fo' pathnames startin wit two slash characters.
Therefore, applications shall not arbitrarily add slashes ta tha beginning
of a pathname unless they can ensure dat there be more
or less than two or is prepared ta deal wit tha implementation-defined
consequences.
.SH EXAMPLES
.LP
If tha strang \fIstring\fP be a valid pathname:
.sp
.RS
.nf

\fB$(basename "\fP\fIstring\fP\fB")
\fP
.fi
.RE
.LP
produces a gangbangin' filename dat could be used ta open tha file named by \fIstring\fP
in tha directory returned by:
.sp
.RS
.nf

\fB$(dirname "\fP\fIstring\fP\fB")
\fP
.fi
.RE
.LP
If tha strang \fIstring\fP aint a valid pathname, tha same algorithm
is used yo, but tha result need not be a valid filename.
Da \fIbasename\fP utilitizzle aint sposed ta fuckin make any judgements
about tha validitizzle of \fIstring\fP as a pathname; it just
bigs up tha specified algorithm ta produce a result string.
.LP
Da followin shell script compilez \fB/usr/src/cmd/cat.c\fP n' moves
the output ta a gangbangin' file named \fBcat\fP up in tha current
directory when invoked wit tha argument \fB/usr/src/cmd/cat\fP or
with tha argument \fB/usr/src/cmd/cat.c\fP:
.sp
.RS
.nf

\fBc99 $(dirname "$1")/$(basename "$1" .c).c
mv a.out $(basename "$1" .c)
\fP
.fi
.RE
.SH RATIONALE
.LP
Da behaviorz of \fIbasename\fP n' \fIdirname\fP done been coordinated
so dat when
\fIstring\fP be a valid pathname:
.sp
.RS
.nf

\fB$(basename "\fP\fIstring\fP\fB")
\fP
.fi
.RE
.LP
would be a valid filename fo' tha file up in tha directory:
.sp
.RS
.nf

\fB$(dirname "\fP\fIstring\fP\fB")
\fP
.fi
.RE
.LP
This would not work fo' tha early proposal versionz of these utilities
due ta tha way it specified handlin of trailing
slashes.
.LP
Since tha definizzle of \fIpathname\fP specifies implementation-defined
behavior fo' pathnames startin wit two slash
characters, dis volume of IEEE\ Std\ 1003.1-2001 specifies similar
implementation-defined behavior fo' tha \fIbasename\fP
and \fIdirname\fP utilities.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIParametas n' Variables\fP, \fIdirname\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
