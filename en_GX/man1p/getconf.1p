.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GETCONF" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" getconf 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
getconf \- git configuration joints
.SH SYNOPSIS
.LP
\fBgetconf\fP \fB[\fP \fB-v justification\fP \fB]\fP \fIsystem_var\fP\fB
.br
.sp
getconf\fP \fB[\fP \fB-v justification\fP \fB]\fP \fIpath_var pathname\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
In tha straight-up original gangsta synopsis form, tha \fIgetconf\fP utilitizzle shall write
to tha standard output tha value of tha variable specified by
the \fIsystem_var\fP operand.
.LP
In tha second synopsis form, tha \fIgetconf\fP utilitizzle shall write
to tha standard output tha value of tha variable specified
by tha \fIpath_var\fP operand fo' tha path specified by tha \fIpathname\fP
operand.
.LP
Da value of each configuration variable shall be determined as if
it was obtained by callin tha function from which it is
defined ta be available by dis volume of IEEE\ Std\ 1003.1-2001 or
by tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001 (see tha OPERANDS section). Da value shall
reflect conditions up in tha current operating
environment.
.SH OPTIONS
.LP
Da \fIgetconf\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin option shall be supported:
.TP 7
\fB-v\ \fP \fIspecification\fP
.sp
Indicate a specific justification n' version fo' which configuration
variablez shall be determined. Y'all KNOW dat shit, muthafucka! If dis option is not
specified, tha joints returned correspond ta a implementation default
conformin compilation environment. 
.LP
If tha command:
.sp
.RS
.nf

\fBgetconf _POSIX_V6_ILP32_OFF32
\fP
.fi
.RE
.LP
does not write \fB"-1\\n"\fP or \fB"undefined\\n"\fP ta standard output,
then commandz of tha form:
.sp
.RS
.nf

\fBgetconf -v POSIX_V6_ILP32_OFF32 ...
\fP
.fi
.RE
.LP
determine joints fo' configuration variablez correspondin ta the
POSIX_V6_ILP32_OFF32 compilation environment specified up in \fIc99\fP,
the EXTENDED DESCRIPTION.
.LP
If tha command:
.sp
.RS
.nf

\fBgetconf _POSIX_V6_ILP32_OFSTDG
\fP
.fi
.RE
.LP
does not write \fB"-1\\n"\fP or \fB"undefined\\n"\fP ta standard output,
then commandz of tha form:
.sp
.RS
.nf

\fBgetconf -v POSIX_V6_ILP32_OFSTDG ...
\fP
.fi
.RE
.LP
determine joints fo' configuration variablez correspondin ta the
POSIX_V6_ILP32_OFSTDG compilation environment specified up in \fIc99\fP,
the EXTENDED DESCRIPTION.
.LP
If tha command:
.sp
.RS
.nf

\fBgetconf _POSIX_V6_LP64_OFF64
\fP
.fi
.RE
.LP
does not write \fB"-1\\n"\fP or \fB"undefined\\n"\fP ta standard output,
then commandz of tha form:
.sp
.RS
.nf

\fBgetconf -v POSIX_V6_LP64_OFF64 ...
\fP
.fi
.RE
.LP
determine joints fo' configuration variablez correspondin ta the
POSIX_V6_LP64_OFF64 compilation environment specified up in \fIc99\fP,
the EXTENDED DESCRIPTION.
.LP
If tha command:
.sp
.RS
.nf

\fBgetconf _POSIX_V6_LPBIG_OFSTDG
\fP
.fi
.RE
.LP
does not write \fB"-1\\n"\fP or \fB"undefined\\n"\fP ta standard output,
then commandz of tha form:
.sp
.RS
.nf

\fBgetconf -v POSIX_V6_LPBIG_OFSTDG ...
\fP
.fi
.RE
.LP
determine joints fo' configuration variablez correspondin ta the
POSIX_V6_LPBIG_OFSTDG compilation environment specified up in \fIc99\fP,
the EXTENDED DESCRIPTION.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIpath_var\fP
A name of a cold-ass lil configuration variable fo' realz. All of tha variablez up in tha Variable
column of tha table up in tha DESCRIPTION of tha \fIfpathconf\fP() function
defined up in tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001, without tha enclosin braces, shall be supported.
Da implementation may add other local
variables.
.TP 7
\fIpathname\fP
A pathname fo' which tha variable specified by \fIpath_var\fP is to
be determined.
.TP 7
\fIsystem_var\fP
A name of a cold-ass lil configuration variable fo' realz. All of tha followin variables
shall be supported: 
.RS
.IP " *" 3
Da names up in tha Variable column of tha table up in tha DESCRIPTION of
the \fIsysconf\fP()
function up in tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
except fo' tha entries correspondin ta _SC_CLK_TCK,
_SC_GETGR_R_SIZE_MAX, n' _SC_GETPW_R_SIZE_MAX, without tha enclosing
braces.
.LP
For compatibilitizzle wit earlier versions, tha followin variable names
shall also be supported:
.sp
.RS
.nf

POSIX2_C_BIND
POSIX2_C_DEV
POSIX2_CHAR_TERM
POSIX2_FORT_DEV
POSIX2_FORT_RUN
POSIX2_LOCALEDEF
POSIX2_SW_DEV
POSIX2_UPE
POSIX2_VERSION
.fi
.RE
.LP
and shall be equivalent ta tha same name prefixed wit a underscore.
This requirement may be removed up in a gangbangin' future version.
.LP
.IP " *" 3
Da namez of tha symbolic constants used as tha \fIname\fP argument
of tha \fIconfstr\fP() function up in tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001,
without tha _CS_ prefix.
.LP
.IP " *" 3
Da namez of tha symbolic constants listed under tha headings ``Maximum
Values'' n' ``Minimum Values'' up in tha description of
the \fI<limits.h>\fP header up in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, without tha enclosin braces.
.LP
For compatibilitizzle wit earlier versions, tha followin variable names
shall also be supported:
.sp
.RS
.nf

POSIX2_BC_BASE_MAX
POSIX2_BC_DIM_MAX
POSIX2_BC_SCALE_MAX
POSIX2_BC_STRING_MAX
POSIX2_COLL_WEIGHTS_MAX
POSIX2_EXPR_NEST_MAX
POSIX2_LINE_MAX
POSIX2_RE_DUP_MAX
.fi
.RE
.LP
and shall be equivalent ta tha same name prefixed wit a underscore.
This requirement may be removed up in a gangbangin' future version.
.LP
.RE
.LP
Da implementation may add other local joints.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIgetconf\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
If tha specified variable is defined on tha system n' its value is
busted lyrics bout ta be available from tha \fIconfstr\fP() function defined
in tha System Interfaces volume of
IEEE\ Std\ 1003.1-2001, its value shall be freestyled up in tha following
format:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIvalue\fP\fB>
\fP
.fi
.RE
.LP
Otherwise, if tha specified variable is defined on tha system, its
value shall be freestyled up in tha followin format:
.sp
.RS
.nf

\fB"%d\\n", <\fP\fIvalue\fP\fB>
\fP
.fi
.RE
.LP
If tha specified variable is valid yo, but is undefined on tha system,
\fIgetconf\fP shall write rockin tha followin format:
.sp
.RS
.nf

\fB"undefined\\n"
\fP
.fi
.RE
.LP
If tha variable name is invalid or a error occurs, not a god damn thang shall
be freestyled ta standard output.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Da specified variable is valid n' shiznit bout its current
state was freestyled successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.LP
Da followin example illustrates tha value of {NGROUPS_MAX}:
.sp
.RS
.nf

\fBgetconf NGROUPS_MAX
\fP
.fi
.RE
.LP
Da followin example illustrates tha value of {NAME_MAX} fo' a specific
directory:
.sp
.RS
.nf

\fBgetconf NAME_MAX /usr
\fP
.fi
.RE
.LP
Da followin example shows how tha fuck ta deal mo' carefully wit thangs up in dis biatch
that might be unspecified:
.sp
.RS
.nf

\fBif value=$(getconf PATH_MAX /usr); then
    if [ "$value" = "undefined" ]; then
        echo PATH_MAX up in /usr is infinite.
    else
        echo PATH_MAX up in /usr is $value.
    fi
else
    echo Error up in getconf.
fi
\fP
.fi
.RE
.LP
Note that:
.sp
.RS
.nf

\fBsysconf(_SC_POSIX_C_BIND);
\fP
.fi
.RE
.LP
and:
.sp
.RS
.nf

\fBsystem("getconf POSIX2_C_BIND");
\fP
.fi
.RE
.LP
in a C program could give different lyrics. Da \fIsysconf\fP() call
supplies a value
that correspondz ta tha conditions when tha program was either compiled
or executed, dependin on tha implementation; tha \fIsystem\fP() call
to \fIgetconf\fP always supplies a value correspondin ta conditions
when the
program is executed.
.SH RATIONALE
.LP
Da original gangsta need fo' dis utility, n' fo' tha \fIconfstr\fP() function,
was to
provide a way of findin tha configuration-defined default value for
the \fIPATH\fP environment variable. Right back up in yo muthafuckin ass. Since \fIPATH\fP can be
modified by tha user ta include directories dat could contain utilities
replacin tha standard utilities, shell scripts need a way
to determine tha system-supplied \fIPATH\fP environment variable value
that gotz nuff tha erect search path fo' tha standard
utilities. Put ya muthafuckin choppers up if ya feel dis! Dat shiznit was lata suggested dat access ta tha other variables
busted lyrics bout up in dis volume of IEEE\ Std\ 1003.1-2001
could also be useful ta applications.
.LP
This functionalitizzle of \fIgetconf\fP would not be adequately subsumed
by another command such as:
.sp
.RS
.nf

\fBgrep\fP \fIvar\fP \fB/etc/conf
\fP
.fi
.RE
.LP
because such a game would provide erect joints fo' neither them
variablez dat can vary at runtime, nor dem dat can
vary dependin on tha path.
.LP
Early proposal versionz of \fIgetconf\fP specified exit status 1 when
the specified variable was valid yo, but not defined on the
system. Da output strang \fB"undefined"\fP is now used ta specify
this case wit exit code 0 cuz all kindsa muthafuckin thangs depend on
an exit code of zero when a invoked utilitizzle is successful.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIc99\fP, tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<limits.h>\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIconfstr\fP(), \fIpathconf\fP(), \fIsysconf\fP(), \fIsystem\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
