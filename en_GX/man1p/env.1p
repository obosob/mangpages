.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "ENV" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" env 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
env \- set tha environment fo' command invocation
.SH SYNOPSIS
.LP
\fBenv\fP \fB[\fP\fB-i\fP\fB][\fP\fIname\fP\fB=\fP\fIvalue\fP\fB]\fP\fB...\fP
\fB[\fP\fIutility\fP
\fB[\fP\fIargument\fP\fB...\fP\fB]]\fP
.SH DESCRIPTION
.LP
Da \fIenv\fP utilitizzle shall obtain tha current environment, modify
it accordin ta its arguments, then invoke tha utilitizzle named
by tha \fIutility\fP operand wit tha modified environment.
.LP
Optionizzle arguments shall be passed ta \fIutility\fP.
.LP
If no \fIutility\fP operand is specified, tha resultin environment
shall be freestyled ta tha standard output, wit one
\fIname\fP= \fIvalue\fP pair per line.
.SH OPTIONS
.LP
Da \fIenv\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-i\fP
Invoke \fIutility\fP wit exactly tha environment specified by the
arguments; tha inherited environment shall be ignored
completely.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIname\fP=\fIvalue\fP
Argumentz of tha form \fIname\fP= \fIvalue\fP shall modify tha execution
environment, n' shall be placed tha fuck into tha inherited
environment before tha \fIutility\fP is invoked.
.TP 7
\fIutility\fP
Da name of tha utilitizzle ta be invoked. Y'all KNOW dat shit, muthafucka! If tha \fIutility\fP operand
names any of tha special built-in utilitizzles up in \fISpecial Built-In
Utilities\fP, tha thangs up in dis biatch is undefined.
.TP 7
\fIargument\fP
A strang ta pass as a argument fo' tha invoked utility.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIenv\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fIPATH\fP
Determine tha location of tha \fIutility\fP, as busted lyrics bout up in tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Chapta 8, Environment
Variables. If \fIPATH\fP is specified as a \fIname\fP= \fIvalue\fP
operand ta \fIenv\fP, tha \fIvalue\fP given shall be used up in tha search
for \fIutility\fP.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
If no \fIutility\fP operand is specified, each \fIname\fP= \fIvalue\fP
pair up in tha resultin environment shall be freestyled in
the form:
.sp
.RS
.nf

\fB"%s=%s\\n", <\fP\fIname\fP\fB>, <\fP\fIvalue\fP\fB>
\fP
.fi
.RE
.LP
If tha \fIutility\fP operand is specified, tha \fIenv\fP utilitizzle shall
not write ta standard output.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
If \fIutility\fP is invoked, tha exit statuz of \fIenv\fP shall be
the exit statuz of \fIutility\fP; otherwise, the
\fIenv\fP utilitizzle shall exit wit one of tha followin joints:
.TP 7
\ \ \ \ 0
Da \fIenv\fP utilitizzle completed successfully.
.TP 7
1-125
An error occurred up in tha \fIenv\fP utility.
.TP 7
\ \ 126
Da utilitizzle specified by \fIutility\fP was found but could not be
invoked.
.TP 7
\ \ 127
Da utilitizzle specified by \fIutility\fP could not be found.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fIcommand\fP, \fIenv\fP, \fInice\fP, \fInohup\fP, \fItime\fP,
and \fIxargs\fP utilitizzles done been specified ta use exit code 127
if a error occurs so that
applications can distinguish "failure ta find a utility" from "invoked
utilitizzle exited wit a error indication". Da value 127
was chosen cuz it aint commonly used fo' other meanings; most
utilitizzles use lil' small-ass joints fo' "normal error conditions" and
the joints above 128 can be trippin wit termination cuz of receipt
of a signal. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. Da value 126 was chosen up in a similar manner to
indicate dat tha utilitizzle could be found yo, but not invoked. Y'all KNOW dat shit, muthafucka! Some scripts
produce meaningful error lyrics differentiatin tha 126
and 127 cases. Da distinction between exit codes 126 n' 127 is based
on KornShell practice dat uses 127 when all attempts to
\fIexec\fP tha utilitizzle fail wit [ENOENT], n' uses 126 when any attempt
to \fIexec\fP tha utilitizzle fails fo' any other
reason.
.LP
Oldschool implementationz of tha \fIenv\fP utilitizzle use tha \fIexecvp\fP()
or \fIexeclp\fP() functions defined up in tha System Interfaces volume
of IEEE\ Std\ 1003.1-2001
to invoke tha specified utility; dis serves up betta performance
and keeps playas from havin ta escape charactas wit special
meanin ta tha shell. Therefore, shell functions, special built-ins,
and built-ins dat is only provided by tha shell is not
found.
.SH EXAMPLES
.LP
Da followin command:
.sp
.RS
.nf

\fBenv -i PATH=/mybin mygrep xyz myfile
\fP
.fi
.RE
.LP
invokes tha command \fImygrep\fP wit a freshly smoked up \fIPATH\fP value as the
only entry up in its environment. In dis case, \fIPATH\fP
is used ta locate \fImygrep\fP, which then must reside up in \fB/mybin\fP.
.SH RATIONALE
.LP
As wit all other utilitizzles dat invoke other utilities, dis volume
of IEEE\ Std\ 1003.1-2001 only specifies what
\fIenv\fP do wit standard input, standard output, standard error,
input files, n' output files. If a utilitizzle is executed, it
is not constrained by tha justification of input n' output by \fIenv\fP.
.LP
Da \fB-i\fP option was added ta allow tha functionalitizzle of tha withdrawn
\fB-\fP option up in a manner compatible wit the
Utilitizzle Syntax Guidelines.
.LP
Some have suggested dat \fIenv\fP is redundant since tha same effect
is  bigged up  by:
.sp
.RS
.nf

\fBname=value ... utility\fP \fB[\fP \fBargument ...\fP \fB]\fP
.fi
.RE
.LP
Da example is equivalent ta \fIenv\fP when a environment variable
is bein added ta tha environment of tha command yo, but not
when tha environment is bein set ta tha given value. Da \fIenv\fP
utilitizzle also writes up tha current environment if invoked
without arguments, n' you can put dat on yo' toast. There is sufficient functionalitizzle beyond what tha fuck the
example serves up ta justify inclusion of \fIenv\fP.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIParametas n' Variables\fP, \fISpecial
Built-In Utilities\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
