.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "SLEEP" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" sleep 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
sleep \- suspend execution fo' a interval
.SH SYNOPSIS
.LP
\fBsleep\fP \fItime\fP
.SH DESCRIPTION
.LP
Da \fIsleep\fP utilitizzle shall suspend execution fo' at least tha integral
number of secondz specified by tha \fItime\fP
operand.
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fItime\fP
A non-negatizzle decimal integer specifyin tha number of secondz for
which ta suspend execution.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIsleep\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
If tha \fIsleep\fP utilitizzle receives a SIGALRM signal, one of tha following
actions shall be taken:
.IP " 1." 4
Terminizzle normally wit a zero exit status.
.LP
.IP " 2." 4
Effectively ignore tha signal.
.LP
.IP " 3." 4
Provide tha default behavior fo' signals busted lyrics bout up in tha ASYNCHRONOUS
EVENTS section of \fIUtilitizzle Description Defaults\fP . This could
include terminatin wit a non-zero exit
status.
.LP
.LP
Da \fIsleep\fP utilitizzle shall take tha standard action fo' all other
signals.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Da execution was successfully suspended fo' at least \fItime\fP seconds,
or a SIGALRM signal was received. Y'all KNOW dat shit, muthafucka! See the
ASYNCHRONOUS EVENTS section.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH EXAMPLES
.LP
Da \fIsleep\fP utilitizzle can be used ta execute a cold-ass lil command afta a cold-ass lil certain
amount of time, as in:
.sp
.RS
.nf

\fB(sleep 105;\fP \fIcommand\fP\fB) &
\fP
.fi
.RE
.LP
or ta execute a cold-ass lil command every last muthafuckin so often, as in:
.sp
.RS
.nf

\fBwhile true
do
   \fP \fIcommand\fP \fB   sleep 37
done
\fP
.fi
.RE
.SH RATIONALE
.LP
Da exit status be allowed ta be zero when \fIsleep\fP is interrupted
by tha SIGALRM signal cuz most implementations of
this utilitizzle rely on tha arrival of dat signal ta notify dem that
the axed finishin time has been successfully attained.
Such implementations thus do not distinguish dis thang from the
successful completion case. Other implementations is allowed
to catch tha signal n' go back ta chill until tha axed time
expires or ta provide tha aiiight signal termination
procedures.
.LP
As wit all other utilitizzles dat take integral operandz n' do not
specify subrangez of allowed joints, \fIsleep\fP is required
by dis volume of IEEE\ Std\ 1003.1-2001 ta deal wit \fItime\fP requests
of up ta 2147483647 seconds. This may mean that
some implementations gotta make multiple calls ta tha delay mechanism
of tha underlyin operatin system if its argument range is
less than all dis bullshit.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIwait\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIalarm\fP(), \fIsleep\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
