.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "GREP" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" grep 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
grep \- search a gangbangin' file fo' a pattern
.SH SYNOPSIS
.LP
\fBgrep\fP \fB[\fP\fB-E| -F\fP\fB][\fP\fB-c| -l| -q\fP\fB][\fP\fB-insvx\fP\fB]\fP
\fB-e\fP
\fIpattern_list...
.br
\fP \fB\ \ \ \ \ \ \fP \fI\fP\fB[\fP\fB-f\fP
\fIpattern_file\fP\fB]\fP\fB...\fP\fB[\fP\fIfile\fP\fB...\fP\fB]\fP\fB
.br
.sp
grep\fP \fB[\fP\fB-E| -F\fP\fB][\fP\fB-c| -l| -q\fP\fB][\fP\fB-insvx\fP\fB][\fP\fB-e\fP
\fIpattern_list\fP\fB]...
.br
\fP \fB\ \ \ \ \ \ \fP \fB\fP\fB-f\fP
\fIpattern_file\fP\fB...\fP\fB[\fP\fIfile\fP\fB...\fP\fB]\fP\fB
.br
.sp
grep\fP \fB[\fP\fB-E| -F\fP\fB][\fP\fB-c| -l| -q\fP\fB][\fP\fB-insvx\fP\fB]\fP
\fIpattern_list\fP\fB[\fP\fIfile\fP\fB...\fP\fB]\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIgrep\fP utilitizzle shall search tha input files, selectin lines
matchin one or mo' patterns; tha typez of patterns are
controlled by tha options specified. Y'all KNOW dat shit, muthafucka! Da patterns is specified by
the \fB-e\fP option, \fB-f\fP option, or the
\fIpattern_list\fP operand. Y'all KNOW dat shit, muthafucka! Da \fIpattern_list\fPz value shall consist
of one or mo' patterns separated by <newline>s;
the \fIpattern_file\fPz contents shall consist of one or mo' patterns
terminated by <newline>. By default, a input line
shall be selected if any pattern, treated as a entire basic regular
expression (BRE) as busted lyrics bout up in tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 9.3, Basic Regular Expressions,
matches any part of tha line excludin tha terminatin <newline>;
a null BRE shall match every last muthafuckin line. By default, each
selected input line shall be freestyled ta tha standard output.
.LP
Regular expression matchin shall be based on text lines. Right back up in yo muthafuckin ass. Since a
<newline> separates or terminates patterns (see the
\fB-e\fP n' \fB-f\fP options below), regular expressions cannot contain
a <newline>. Right back up in yo muthafuckin ass. Similarly, since patterns is matched
against individual lines (excludin tha terminatin <newline>s) of
the input, there is no way fo' a pattern ta match a
<newline> found up in tha input.
.SH OPTIONS
.LP
Da \fIgrep\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-E\fP
Match rockin extended regular expressions. Treat each pattern specified
as a ERE, as busted lyrics bout up in tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 9.4, Extended Regular Expressions.
If any entire ERE pattern matches some part of a input line excluding
the terminatin <newline>, tha line shall be matched.
A null ERE shall match every last muthafuckin line.
.TP 7
\fB-F\fP
Match rockin fixed strings. Treat each pattern specified as a string
instead of a regular expression. I aint talkin' bout chicken n' gravy biatch. If a input line gotz nuff
any of tha patterns as a cold-ass lil contiguous sequence of bytes, tha line shall
be matched. Y'all KNOW dat shit, muthafucka! A null strang shall match every last muthafuckin line.
.TP 7
\fB-c\fP
Write only a cold-ass lil count of selected lines ta standard output.
.TP 7
\fB-e\ \fP \fIpattern_list\fP
.sp
Specify one or mo' patterns ta be used durin tha search fo' input.
Da application shall ensure dat patterns in
\fIpattern_list\fP is separated by a <newline> fo' realz. A null pattern can
be specified by two adjacent <newline>s in
\fIpattern_list\fP. Unless tha \fB-E\fP or \fB-F\fP option be also
specified, each pattern shall be treated as a BRE, as
busted lyrics bout up in tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section
9.3, Basic Regular Expressions. Multiple \fB-e\fP n' \fB-f\fP options
shall be accepted by tha \fIgrep\fP utilitizzle fo' realz. All of
the specified patterns shall be used when matchin lines yo, but the
order of evaluation is unspecified.
.TP 7
\fB-f\ \fP \fIpattern_file\fP
.sp
Read one or mo' patterns from tha file named by tha pathname \fIpattern_file\fP.
Patterns up in \fIpattern_file\fP shall be
terminated by a <newline> fo' realz. A null pattern can be specified by a empty
line up in \fIpattern_file\fP. Unless tha \fB-E\fP or
\fB-F\fP option be also specified, each pattern shall be treated as
a BRE, as busted lyrics bout up in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 9.3, Basic Regular Expressions.
.TP 7
\fB-i\fP
Perform pattern matchin up in searches without regard ta case; peep the
Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 9.2, Regular Expression General Requirements.
.TP 7
\fB-l\fP
(Da letta ell.) Write only tha namez of filez containin selected
lines ta standard output. Pathnames shall be freestyled once
per file searched. Y'all KNOW dat shit, muthafucka! If tha standard input is searched, a pathname of
\fB"(standard input)"\fP shall be written, up in tha POSIX
locale. In other locales, \fB"standard input"\fP may be replaced by
suttin' mo' appropriate up in dem locales.
.TP 7
\fB-n\fP
Precede each output line by its relatizzle line number up in tha file,
each file startin at line 1. Da line number counta shall
be reset fo' each file processed.
.TP 7
\fB-q\fP
Quiet. Nothang shall be freestyled ta tha standard output, regardless
of matchin lines. Exit wit zero status if a input line is
selected.
.TP 7
\fB-s\fP
Suppress tha error lyrics ordinarily freestyled fo' nonexistent or
unreadable files. Other error lyrics shall not be
suppressed.
.TP 7
\fB-v\fP
Select lines not matchin any of tha specified patterns. If tha \fB-v\fP
option aint specified, selected lines shall be
those dat match any of tha specified patterns.
.TP 7
\fB-x\fP
Consider only input lines dat use all charactas up in tha line excluding
the terminatin <newline> ta match a entire
fixed strang or regular expression ta be matchin lines.
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIpattern_list\fP
Specify one or mo' patterns ta be used durin tha search fo' input.
This operand shall be treated as if it was specified as
\fB-e\fP \fIpattern_list\fP.
.TP 7
\fIfile\fP
A pathname of a gangbangin' file ta be searched fo' tha patterns. If no \fIfile\fP
operandz is specified, tha standard input shall be
used.
.sp
.SH STDIN
.LP
Da standard input shall be used only if no \fIfile\fP operandz are
specified. Y'all KNOW dat shit, muthafucka! See tha INPUT FILES section.
.SH INPUT FILES
.LP
Da input filez shall be text files.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIgrep\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' tha behavior of ranges, equivalence classes,
and multi-characta collatin elements within regular
expressions.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files) and
the behavior of characta classes within regular
expressions.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
If tha \fB-l\fP option is up in effect, n' tha \fB-q\fP option is not,
the followin shall be freestyled fo' each file containing
at least one selected input line:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIfile\fP\fB>
\fP
.fi
.RE
.LP
Otherwise, if mo' than one \fIfile\fP argument appears, n' \fB-q\fP
is not specified, tha \fIgrep\fP utilitizzle shall prefix
each output line by:
.sp
.RS
.nf

\fB"%s:", <\fP\fIfile\fP\fB>
\fP
.fi
.RE
.LP
Da remainder of each output line shall depend on tha other options
specified:
.IP " *" 3
If tha \fB-c\fP option is up in effect, tha remainder of each output
line shall contain:
.sp
.RS
.nf

\fB"%d\\n", <\fP\fIcount\fP\fB>
\fP
.fi
.RE
.LP
.IP " *" 3
Otherwise, if \fB-c\fP aint up in effect n' tha \fB-n\fP option is
in effect, tha followin shall be freestyled ta standard
output:
.sp
.RS
.nf

\fB"%d:", <\fP\fIline number\fP\fB>
\fP
.fi
.RE
.LP
.IP " *" 3
Finally, tha followin shall be freestyled ta standard output:
.sp
.RS
.nf

\fB"%s", <\fP\fIselected-line contents\fP\fB>
\fP
.fi
.RE
.LP
.SH STDERR
.LP
Da standard error shall be used only fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
One or mo' lines was selected.
.TP 7
\ 1
No lines was selected.
.TP 7
>1
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
If tha \fB-q\fP option is specified, tha exit status shall be zero
if a input line is selected, even if a error was detected.
Otherwise, default actions shall be performed.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Care should be taken when rockin charactas up in \fIpattern_list\fP that
may also be meaningful ta tha command interpreter n' shit. Well shiiiit, it is
safest ta enclose tha entire \fIpattern_list\fP argument up in single
quotes:
.sp
.RS
.nf

\fB'...'
\fP
.fi
.RE
.LP
Da \fB-e\fP \fIpattern_list\fP option has tha same ol' dirty effect as the
\fIpattern_list\fP operand yo, but is useful when
\fIpattern_list\fP begins wit tha hyphen delimiter n' shit. Well shiiiit, it be also useful
when it is mo' convenient ta provide multiple patterns as
separate arguments.
.LP
Multiple \fB-e\fP n' \fB-f\fP options is accepted n' \fIgrep\fP
uses all of tha patterns it is given while matchin input
text lines. (Note dat tha order of evaluation aint specified. Y'all KNOW dat shit, muthafucka! If
an implementation findz a null strang as a pattern, it is
allowed ta use dat pattern first, matchin every last muthafuckin line, n' effectively
ignore any other patterns.)
.LP
Da \fB-q\fP option serves up a meanz of easily determinin whether
or not a pattern (or string) exists up in a crew of files.
When searchin nuff muthafuckin files, it serves up a performizzle improvement
(because it can quit as soon as it findz tha straight-up original gangsta match) and
requires less care by tha user up in choosin tha set of filez ta supply
as arguments (because it exits zero if it findz a match even
if \fIgrep\fP detected a access or read error on earlier \fIfile\fP
operands).
.SH EXAMPLES
.IP " 1." 4
To find all usez of tha word \fB"Posix"\fP (in any case) up in file \fBtext.mm\fP
and write wit line numbers:
.sp
.RS
.nf

\fBgrep -i -n posix text.mm
\fP
.fi
.RE
.LP
.IP " 2." 4
To find all empty lines up in tha standard input:
.sp
.RS
.nf

\fBgrep ^$
\fP
.fi
.RE
.LP
or:
.sp
.RS
.nf

\fBgrep -v .
\fP
.fi
.RE
.LP
.IP " 3." 4
Both of tha followin commandz print all lines containin strings
\fB"abc"\fP or \fB"def"\fP or both:
.sp
.RS
.nf

\fBgrep -E 'abc|def'
.sp

grep -F 'abc
def'
\fP
.fi
.RE
.LP
.IP " 4." 4
Both of tha followin commandz print all lines matchin exactly \fB"abc"\fP
or \fB"def"\fP :
.sp
.RS
.nf

\fBgrep -E '^abc$|^def$'
.sp

grep -F -x 'abc
def'
\fP
.fi
.RE
.LP
.SH RATIONALE
.LP
This \fIgrep\fP has been enhanced up in a upwards-compatible way to
provide tha exact functionalitizzle of tha historical
\fIegrep\fP n' \fIfgrep\fP commandz as well. Dat shiznit was tha clear intention
of tha standard pimpers ta consolidate tha three
\fIgrep\fPs tha fuck into a single command.
.LP
Da oldschool \fIegrep\fP n' \fIfgrep\fP commandz is likely ta be supported
for nuff muthafuckin years ta come as implementation extensions,
allowin oldschool applications ta operate unmodified.
.LP
Oldschool implementations probably silently ignored all but one of
multiply-specified \fB-e\fP n' \fB-f\fP options yo, but were
not consistent as ta which justification was straight-up used.
.LP
Da \fB-b\fP option was omitted from tha OPTIONS section cuz block
numbers is implementation-defined.
.LP
Da System V restriction on rockin \fB-\fP ta mean standard input was
omitted.
.LP
A definizzle of action taken when given a null BRE or ERE is specified.
This be a error condizzle up in some historical
implementations.
.LP
Da \fB-l\fP option previously indicated dat its use was undefined
when no filez was explicitly named. Y'all KNOW dat shit, muthafucka! This behavior was
historical n' placed a unnecessary restriction on future implementations.
It has been removed.
.LP
Da oldschool BSD \fIgrep\fP \fB-s\fP option practice is easily duplicated
by redirectin standard output to
\fB/dev/null\fP. Da \fB-s\fP option required here is from System
V.
.LP
Da \fB-x\fP option, historically available only wit \fIfgrep\fP,
is available here fo' all of tha non-obsolescent
versions.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsed\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
