.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "RM" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" rm 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
rm \- remove directory entries
.SH SYNOPSIS
.LP
\fBrm\fP \fB[\fP\fB-fiRr\fP\fB]\fP \fIfile\fP\fB...\fP
.SH DESCRIPTION
.LP
Da \fIrm\fP utilitizzle shall remove tha directory entry specified by
each \fIfile\fP argument.
.LP
If either of tha filez dot or dot-dot is specified as tha basename
portion of a operand (that is, tha final pathname
component), \fIrm\fP shall write a gangbangin' finger-lickin' diagnostic message ta standard
error n' do not a god damn thang mo' wit such operands.
.LP
For each \fIfile\fP tha followin steps shall be taken:
.IP " 1." 4
If tha \fIfile\fP do not exist:
.RS
.IP " a." 4
If tha \fB-f\fP option aint specified, \fIrm\fP shall write a gangbangin' finger-lickin' diagnostic
message ta standard error.
.LP
.IP " b." 4
Go on ta any remainin \fIfiles\fP.
.LP
.RE
.LP
.IP " 2." 4
If \fIfile\fP iz of type directory, tha followin steps shall be taken:
.RS
.IP " a." 4
If neither tha \fB-R\fP option nor tha \fB-r\fP option is specified,
\fIrm\fP shall write a gangbangin' finger-lickin' diagnostic message ta standard
error, do not a god damn thang mo' wit \fIfile\fP, n' go on ta any remaining
files.
.LP
.IP " b." 4
If tha \fB-f\fP option aint specified, n' either tha permissions
of \fIfile\fP do not permit freestylin n' tha standard input
is a terminal or tha \fB-i\fP option is specified, \fIrm\fP shall
write a prompt ta standard error n' read a line from the
standard input. If tha response aint affirmative, \fIrm\fP shall
do not a god damn thang mo' wit tha current file n' go on ta any
remainin files.
.LP
.IP " c." 4
For each entry contained up in \fIfile\fP, other than dot or dot-dot,
the four steps listed here (1 ta 4) shall be taken wit the
entry as if it was a \fIfile\fP operand. Y'all KNOW dat shit, muthafucka! Da \fIrm\fP utilitizzle shall
not traverse directories by followin symbolic links into
other partz of tha hierarchy yo, but shall remove tha links theyselves.
.LP
.IP " d." 4
If tha \fB-i\fP option is specified, \fIrm\fP shall write a prompt
to standard error n' read a line from tha standard input.
If tha response aint affirmative, \fIrm\fP shall do not a god damn thang more
with tha current file, n' go on ta any remainin files.
.LP
.RE
.LP
.IP " 3." 4
If \fIfile\fP aint of type directory, tha \fB-f\fP option is not
specified, n' either tha permissionz of \fIfile\fP do not
permit freestylin n' tha standard input be a terminal or tha \fB-i\fP
option is specified, \fIrm\fP shall write a prompt ta the
standard error n' read a line from tha standard input. If tha response
is not affirmative, \fIrm\fP shall do not a god damn thang mo' with
the current file n' go on ta any remainin files.
.LP
.IP " 4." 4
If tha current file be a gangbangin' finger-lickin' directory, \fIrm\fP shall big-ass up actions
equivalent ta tha \fIrmdir\fP() function defined up in tha System Interfaces
volume of IEEE\ Std\ 1003.1-2001
called wit a pathname of tha current file used as tha \fIpath\fP
argument. If tha current file aint a gangbangin' finger-lickin' directory, \fIrm\fP
shall big-ass up actions equivalent ta tha \fIunlink\fP() function defined
in tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001 called wit a pathname
of tha current file used as tha \fIpath\fP
argument.
.LP
If dis fails fo' any reason, \fIrm\fP shall write a gangbangin' finger-lickin' diagnostic message
to standard error, do not a god damn thang mo' wit tha current
file, n' go on ta any remainin files.
.LP
.LP
Da \fIrm\fP utilitizzle shall be able ta descend ta arbitrary depths
in a gangbangin' file hierarchy, n' shall not fail cuz of path length
limitations (unless a operand specified by tha user exceedz system
limitations).
.SH OPTIONS
.LP
Da \fIrm\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines.
.LP
Da followin options shall be supported:
.TP 7
\fB-f\fP
Do not prompt fo' confirmation. I aint talkin' bout chicken n' gravy biatch. Do not write diagnostic lyrics or
modify tha exit status up in tha case of nonexistent operands.
Any previous occurrencez of tha \fB-i\fP option shall be ignored.
.TP 7
\fB-i\fP
Prompt fo' confirmation as busted lyrics bout previously fo' realz. Any previous occurrences
of tha \fB-f\fP option shall be ignored.
.TP 7
\fB-R\fP
Remove file hierarchies. Put ya muthafuckin choppers up if ya feel dis! Right back up in yo muthafuckin ass. See tha DESCRIPTION.
.TP 7
\fB-r\fP
Equivalent ta \fB-R\fP.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a gangbangin' finger-lickin' directory entry ta be removed.
.sp
.SH STDIN
.LP
Da standard input shall be used ta read a input line up in response
to each prompt specified up in tha STDOUT section. I aint talkin' bout chicken n' gravy biatch. Otherwise,
the standard input shall not be used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIrm\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' tha behavior of ranges, equivalence classes,
and multi-characta collatin elements used up in tha extended
regular expression defined fo' tha \fByesexpr\fP locale keyword in
the \fILC_MESSAGES\fP category.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments) n' tha behavior of
characta classes within regular expressions used up in the
extended regular expression defined fo' tha \fByesexpr\fP locale keyword
in tha \fILC_MESSAGES\fP category.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale fo' tha processin of affirmatizzle responses that
should be used ta affect tha format n' contents of
diagnostic lyrics freestyled ta standard error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Not used.
.SH STDERR
.LP
Prompts shall be freestyled ta standard error under tha conditions specified
in tha DESCRIPTION n' OPTIONS sections. Da prompts
shall contain tha \fIfile\fP pathname yo, but they format is otherwise
unspecified. Y'all KNOW dat shit, muthafucka! Da standard error also shall be used for
diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All of tha named directory entries fo' which \fIrm\fP performed actions
equivalent ta tha \fIrmdir\fP() or \fIunlink\fP() functions was removed.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fIrm\fP utilitizzle is forbidden ta remove tha names dot n' dot-dot
in order ta avoid tha consequencez of inadvertently bustin
suttin' like:
.sp
.RS
.nf

\fBrm -r .*
\fP
.fi
.RE
.LP
Some implementations do not permit tha removal of tha last link to
an executable binary file dat is bein executed; peep the
[EBUSY] error up in tha \fIunlink\fP() function defined up in tha System
Interfaces volume of
IEEE\ Std\ 1003.1-2001. Thus, tha \fIrm\fP utilitizzle can fail ta remove
such files.
.LP
Da \fB-i\fP option causes \fIrm\fP ta prompt n' read tha standard
input even if tha standard input aint a terminal yo, but in
the absence of \fB-i\fP tha mode promptin aint done when tha standard
input aint a terminal.
.SH EXAMPLES
.IP " 1." 4
Da followin command:
.sp
.RS
.nf

\fBrm a.out core
\fP
.fi
.RE
.LP
removes tha directory entries: \fBa.out\fP n' \fBcore\fP.
.LP
.IP " 2." 4
Da followin command:
.sp
.RS
.nf

\fBrm -Rf junk
\fP
.fi
.RE
.LP
removes tha directory \fBjunk\fP n' all its contents, without prompting.
.LP
.SH RATIONALE
.LP
For absolute clarity, paragraphs (2b) n' (3) up in tha DESCRIPTION of
\fIrm\fP describin tha behavior when promptin for
confirmation, should be interpreted up in tha followin manner:
.sp
.RS
.nf

\fBif ((NOT f_option) AND
    ((not_writable AND input_is_terminal) OR i_option))
\fP
.fi
.RE
.LP
Da exact format of tha interactizzle prompts is unspecified. Y'all KNOW dat shit, muthafucka! Only the
general nature of tha contentz of prompts is specified
because implementations may desire mo' descriptizzle prompts than them
used on oldschool implementations. Therefore, an
application not rockin tha \fB-f\fP option, or rockin tha \fB-i\fP option,
relies on tha system ta provide da most thugged-out suitable dialog
directly wit tha user, based on tha behavior specified.
.LP
Da \fB-r\fP option is oldschool practice on all known systems. The
synonym \fB-R\fP option is provided fo' consistency with
the other utilitizzles up in dis volume of IEEE\ Std\ 1003.1-2001 that
provide options requestin recursive descent all up in the
file hierarchy.
.LP
Da behavior of tha \fB-f\fP option up in oldschool versionz of \fIrm\fP
is inconsistent. In general, along wit "forcing" the
unlink without promptin fo' permission, it always causes diagnostic
lyrics ta be suppressed n' tha exit status ta be unmodified
for nonexistent operandz n' filez dat cannot be unlinked. Y'all KNOW dat shit, muthafucka! In some
versions, however, tha \fB-f\fP option suppresses usage
lyrics n' system errors as well. Right back up in yo muthafuckin ass. Suppressin such lyrics is not
a steez ta either shell scripts or users.
.LP
It be less clear dat error lyrics regardin filez dat cannot be
unlinked (removed) should be suppressed. Y'all KNOW dat shit, muthafucka! Although dis is
historical practice, dis volume of IEEE\ Std\ 1003.1-2001 do not
permit tha \fB-f\fP option ta suppress such
lyrics.
.LP
When given tha \fB-r\fP n' \fB-i\fP options, oldschool versions
of \fIrm\fP prompt tha user twice fo' each directory, once
before removin its contents n' once before straight-up attemptin to
delete tha directory entry dat names dat shit. This allows tha user
to "prune" tha file hierarchy strutt. Oldschool versionz of \fIrm\fP
were inconsistent up in dat some did not do tha forma prompt
for directories named on tha command line n' others had obscure prompting
behavior when tha \fB-i\fP option was specified n' the
permissionz of tha file did not permit writing. Da POSIX Shell and
Utilitizzles \fIrm\fP differs lil from phat practice yo, but
does require dat prompts be consistent. Oldschool versionz of \fIrm\fP
were also inconsistent up in dat prompts was done ta both
standard output n' standard error. Shiiit, dis aint no joke. This volume of IEEE\ Std\ 1003.1-2001
requires dat prompts be done ta standard error,
for consistency wit \fIcp\fP n' \fImv\fP, n' ta allow
historical extensions ta \fIrm\fP dat provide a option ta list deleted
filez on standard output.
.LP
Da \fIrm\fP utilitizzle is required ta descend ta arbitrary depths so
that any file hierarchy may be deleted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. This means, for
example, dat tha \fIrm\fP utilitizzle cannot run outta file descriptors
durin its descent (that is, if tha number of file
descriptors is limited, \fIrm\fP cannot be implemented up in tha historical
fashizzle where one file descriptor is used per directory
level) fo' realz. Also, \fIrm\fP aint permitted ta fail cuz of path length
restrictions, unless a operand specified by tha user is
longer than {PATH_MAX}.
.LP
Da \fIrm\fP utilitizzle removes symbolic links theyselves, not tha files
they refer to, as a cold-ass lil consequence of tha dependence on the
\fIunlink\fP() functionality, per tha DESCRIPTION. When removin hierarchies
with \fB-r\fP
or \fB-R\fP, tha prohibizzle on followin symbolic links has ta be
made explicit.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIrmdir\fP(), tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIremove\fP(), \fIrmdir\fP(), \fIunlink\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
