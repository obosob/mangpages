.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "M4" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" m4 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
m4 \- macro processor (\fBDEVELOPMENT\fP)
.SH SYNOPSIS
.LP
\fBm4\fP \fB[\fP\fB-s\fP\fB][\fP\fB-D\fP
\fIname\fP\fB[\fP\fB=\fP\fIval\fP\fB]]\fP\fB...\fP\fB[\fP\fB-U\fP
\fIname\fP\fB]\fP\fB...\fP \fIfile\fP\fB...
\fP
.SH DESCRIPTION
.LP
Da \fIm4\fP utilitizzle be a macro processor dat shall read one or more
text files, process dem accordin ta they included
macro statements, n' write tha thangs up in dis biatch ta standard output.
.SH OPTIONS
.LP
Da \fIm4\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines,
except dat tha order of tha \fB-D\fP and
\fB-U\fP options shall be significant.
.LP
Da followin options shall be supported:
.TP 7
\fB-s\fP
Enable line synchronization output fo' tha \fIc99\fP preprocessor
phase (that is,
\fB#line\fP directives).
.TP 7
\fB-D\ \fP \fIname\fP\fB[\fP=\fIval\fP\fB]\fP
.sp
Define \fIname\fP ta \fIval\fP or ta null if = \fIval\fP is omitted.
.TP 7
\fB-U\ \fP \fIname\fP
Undefine \fIname\fP.
.sp
.SH OPERANDS
.LP
Da followin operand shall be supported:
.TP 7
\fIfile\fP
A pathname of a text file ta be processed. Y'all KNOW dat shit, muthafucka! If no \fIfile\fP is given,
or if it is \fB'-'\fP, tha standard input shall be
read.
.sp
.SH STDIN
.LP
Da standard input shall be a text file dat is used if no \fIfile\fP
operand is given, or if it is \fB'-'\fP .
.SH INPUT FILES
.LP
Da input file named by tha \fIfile\fP operand shall be a text file.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIm4\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files).
.TP 7
\fILC_MESSAGES\fP
Determine tha locale dat should be used ta affect tha format and
contentz of diagnostic lyrics freestyled ta standard
error.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
Da standard output shall be tha same as tha input files, afta being
processed fo' macro expansion.
.SH STDERR
.LP
Da standard error shall be used ta display strings wit tha \fBerrprint\fP
macro, macro tracin enabled by tha \fBtraceon\fP
macro, tha defined text fo' macros freestyled by tha \fBdumpdef\fP macro,
or fo' diagnostic lyrics.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
Da \fIm4\fP utilitizzle shall compare each token from tha input against
the set of built-in n' user-defined macros. If tha token
matches tha name of a macro, then tha token shall be replaced by the
macroz definin text, if any, n' rescanned fo' matching
macro names. Once no portion of tha token matches tha name of a macro,
it shall be freestyled ta standard output. Macros may have
arguments, up in which case tha arguments shall be substituted tha fuck into the
definin text before it is rescanned.
.LP
Macro calls have tha form:
.sp
.RS
.nf

\fIname\fP\fB(\fP\fIarg1\fP\fB,\fP \fIarg2\fP\fB, ...,\fP \fIargn\fP\fB)
\fP
.fi
.RE
.LP
Macro names shall consist of letters, digits, n' underscores, where
the first characta aint a gangbangin' finger-lickin' digit. Tokens not of dis form
shall not be treated as macros.
.LP
Da application shall ensure dat tha left parenthesis immediately
bigs up tha name of tha macro. If a token matchin tha name
of a macro aint followed by a left parenthesis, it is handled as
a use of dat macro without arguments.
.LP
If a macro name is followed by a left parenthesis, its arguments are
the comma-separated tokens between tha left parenthesis and
the matchin right parenthesis. Unquoted <blank>s n' <newline>s preceding
each argument shall be ignored. Y'all KNOW dat shit, muthafucka! All other
characters, includin trailin <blank>s n' <newline>s, is retained.
Commas enclosed between left n' right
parenthesis charactas do not delimit arguments.
.LP
Arguments is positionally defined n' referenced. Y'all KNOW dat shit, muthafucka! Da strang \fB"$1"\fP
in tha definin text shall be replaced by tha first
argument. Right back up in yo muthafuckin ass. Systems shall support at least nine arguments; only the
first nine can be referenced, rockin tha strings \fB"$1"\fP to
\fB"$9"\fP, inclusive. Da strang \fB"$0"\fP is replaced wit the
name of tha macro. Da strang \fB"$#"\fP is replaced by
the number of arguments as a string. Da strang \fB"$*"\fP is replaced
by a list of all of tha arguments, separated by commas.
Da strang \fB"$@"\fP is replaced by a list of all of tha arguments
separated by commas, n' each argument is quoted rockin the
current left n' right quotin strings.
.LP
If fewer arguments is supplied than is up in tha macro definition,
the omitted arguments is taken ta be null. Well shiiiit, it aint a error
if mo' arguments is supplied than is up in tha macro definition.
.LP
No special meanin is given ta any charactas enclosed between matching
left n' right quotin strings yo, but tha quotin strings
are theyselves discarded. Y'all KNOW dat shit, muthafucka! By default, tha left quotin strang consists
of a grave accent ( \fB'`'\fP ) n' tha right quoting
strin consistz of a acute accent ( \fB'"\fP ); peep also tha \fBchangequote\fP
macro.
.LP
Comments is freestyled but not scanned fo' matchin macro names; by
default, tha begin-comment strang consistz of tha number sign
characta n' tha end-comment strang consistz of a <newline>. Right back up in yo muthafuckin ass. See
also tha \fBchangecom\fP n' \fBdnl\fP macros.
.LP
Da \fIm4\fP utilitizzle shall make available tha followin built-in macros.
They can be redefined yo, but once dis is done the
original gangsta meanin is lost. Their joints shall be null unless otherwise
stated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In tha descriptions below, tha term \fIdefining
text\fP refers ta tha value of tha macro: tha second argument ta the
\fBdefine\fP macro, among other thangs. Except fo' tha first
argument ta tha \fBeval\fP macro, all numeric arguments ta built-in
macros shall be interpreted as decimal joints, n' you can put dat on yo' toast. Da string
values produced as tha definin text of tha \fBdecr\fP, \fBdivnum\fP,
\fBincr\fP, \fBindex\fP, \fBlen\fP, n' \fBsysval\fP
built-in macros shall be up in tha form of a thugged-out decimal-constant as defined
in tha C language.
.TP 7
\fBchangecom\fP
Da \fBchangecom\fP macro shall set tha begin-comment n' end-comment
strings. With no arguments, tha comment mechanizzle shall
be disabled. Y'all KNOW dat shit, muthafucka! With a single argument, dat argument shall become the
begin-comment strang n' tha <newline> shall become the
end-comment string. With two arguments, tha straight-up original gangsta argument shall become
the begin-comment strang n' tha second argument shall
become tha end-comment string. Right back up in yo muthafuckin ass. Systems shall support comment strings
of at least five characters.
.TP 7
\fBchangequote\fP
Da \fBchangequote\fP macro shall set tha begin-quote n' end-quote
strings. With no arguments, tha quote strings shall be set
to tha default joints (that is, \fB`'\fP). With a single argument,
that argument shall become tha begin-quote strang n' the
<newline> shall become tha end-quote string. With two arguments, the
first argument shall become tha begin-quote strang and
the second argument shall become tha end-quote string. Right back up in yo muthafuckin ass. Systems shall
support quote stringz of at least five characters.
.TP 7
\fBdecr\fP
Da definin text of tha \fBdecr\fP macro shall be its first argument
decremented by 1. Well shiiiit, it shall be a error ta specify an
argument containin any non-numeric characters.
.TP 7
\fBdefine\fP
Da second argument shall become tha definin text of tha macro whose
name is tha straight-up original gangsta argument.
.TP 7
\fBdefn\fP
Da definin text of tha \fBdefn\fP macro shall be tha quoted definition
(usin tha current quotin strings) of its
arguments.
.TP 7
\fBdivert\fP
Da \fIm4\fP utilitizzle maintains nine temporary buffers, numbered 1
to 9, inclusive. When tha last of tha input has been
processed, any output dat has been placed up in these buffers shall
be freestyled ta standard output up in buffer-numerical order n' shit. The
\fBdivert\fP macro shall divert future output ta tha buffer specified
by its argument. Right back up in yo muthafuckin ass. Specifyin no argument or a argument of 0
shall resume tha aiiight output process. Output diverted ta a stream
other than 0 ta 9 shall be discarded. Y'all KNOW dat shit, muthafucka! Well shiiiit, it shall be a error to
specify a argument containin any non-numeric characters.
.TP 7
\fBdivnum\fP
Da definin text of tha \fBdivnum\fP macro shall be tha number of
the current output stream as a string.
.TP 7
\fBdnl\fP
Da \fBdnl\fP macro shall cause \fIm4\fP ta discard all input characters
up ta n' includin tha next <newline>.
.TP 7
\fBdumpdef\fP
Da \fBdumpdef\fP macro shall write tha defined text ta standard error
for each of tha macros specified as arguments, or, if
no arguments is specified, fo' all macros.
.TP 7
\fBerrprint\fP
Da \fBerrprint\fP macro shall write its arguments ta standard error.
.TP 7
\fBeval\fP
Da \fBeval\fP macro shall evaluate its first argument as a arithmetic
expression, rockin 32-bit signed integer arithmetic.
All of tha C-language operators shall be supported, except for: 
.sp
.RS
.nf

\fB[]
->
++
--
(\fP\fItype\fP\fB)
unary *
\fP\fIsizeof\fP\fB,
\&.
?:
unary &
\fP
.fi
.RE
.LP
and all assignment operators. Well shiiiit, it shall be a error ta specify any
of these operators. Precedence n' associativitizzle shall be as
in tha ISO\ C standard. Y'all KNOW dat shit, muthafucka! Systems shall support octal n' hexadecimal
numbers as up in tha ISO\ C standard. Y'all KNOW dat shit, muthafucka! Da second argument,
if specified, shall set tha radix fo' tha result; tha default is 10.
Da third argument, if specified, sets tha minimum number of
digits up in tha result. Well shiiiit, it shall be a error ta specify tha second or
third argument containin any non-numeric characters.
.TP 7
\fBifdef\fP
If tha straight-up original gangsta argument ta tha \fBifdef\fP macro is defined, tha defining
text shall be tha second argument. Otherwise, the
definin text shall be tha third argument, if specified, or tha null
string, if not.
.TP 7
\fBifelse\fP
Da \fBifelse\fP macro takes three or mo' arguments, n' you can put dat on yo' toast. If tha first
two arguments compare as equal strings (afta macro
expansion of both arguments), tha definin text shall be tha third
argument. If tha straight-up original gangsta two arguments do not compare as equal
strings n' there be three arguments, tha definin text shall be
null. If tha straight-up original gangsta two arguments do not compare as equal strings
and there be four or five arguments, tha definin text shall be the
fourth argument. If tha straight-up original gangsta two arguments do not compare as
equal strings n' there be six or mo' arguments, tha straight-up original gangsta three
arguments shall be discarded n' processin shall restart with
the remainin arguments.
.TP 7
\fBinclude\fP
Da definin text fo' tha \fBinclude\fP macro shall be tha contents
of tha file named by tha straight-up original gangsta argument. Well shiiiit, it shall be an
error if tha file cannot be read.
.TP 7
\fBincr\fP
Da definin text of tha \fBincr\fP macro shall be its first argument
incremented by 1. Well shiiiit, it shall be a error ta specify an
argument containin any non-numeric characters.
.TP 7
\fBindex\fP
Da definin text of tha \fBindex\fP macro shall be tha straight-up original gangsta character
posizzle (as a string) up in tha straight-up original gangsta argument where a
strin matchin tha second argument begins (zero origin), or -1 if
the second argument do not occur.
.TP 7
\fBlen\fP
Da definin text of tha \fBlen\fP macro shall be tha length (as a
string) of tha straight-up original gangsta argument.
.TP 7
\fBm4exit\fP
Exit from tha \fIm4\fP utility. If tha straight-up original gangsta argument is specified,
it is tha exit code. Da default is zero. Well shiiiit, it shall be an
error ta specify a argument containin any non-numeric characters.
.TP 7
\fBm4wrap\fP
Da first argument shall be processed when EOF is reached. Y'all KNOW dat shit, muthafucka! If the
\fBm4wrap\fP macro is used multiple times, tha arguments
specified shall be processed up in tha order up in which tha \fBm4wrap\fP
macros was processed.
.TP 7
\fBmaketemp\fP
Da definin text shall be tha straight-up original gangsta argument, wit any trailin \fB'X'\fP
charactas replaced wit tha current process ID
as a string.
.TP 7
\fBpopdef\fP
Da \fBpopdef\fP macro shall delete tha current definizzle of its
arguments, replacin dat definizzle wit tha previous one.
If there is no previous definition, tha macro is undefined.
.TP 7
\fBpushdef\fP
Da \fBpushdef\fP macro shall be equivalent ta tha \fBdefine\fP macro
with tha exception dat it shall preserve any current
definizzle fo' future retrieval rockin tha \fBpopdef\fP macro.
.TP 7
\fBshift\fP
Da definin text fo' tha \fBshift\fP macro shall be all of its arguments
except fo' tha straight-up original gangsta one.
.TP 7
\fBsinclude\fP
Da \fBsinclude\fP macro shall be equivalent ta tha \fBinclude\fP
macro, except dat it shall not be a error if tha file is
inaccessible.
.TP 7
\fBsubstr\fP
Da definin text fo' tha \fBsubstr\fP macro shall be tha substring
of tha straight-up original gangsta argument beginnin all up in tha zero-offset
characta posizzle specified by tha second argument. Da third argument,
if specified, shall be tha number of charactas ta select;
if not specified, tha charactas from tha startin point ta tha end
of tha straight-up original gangsta argument shall become tha definin text. Well shiiiit, it shall
not be a error ta specify a startin point beyond tha end of the
first argument n' tha definin text shall be null. Well shiiiit, it shall be
an error ta specify a argument containin any non-numeric characters.
.TP 7
\fBsyscmd\fP
Da \fBsyscmd\fP macro shall interpret its first argument as a gangbangin' finger-lickin' dirty-ass shell
command line. Da definin text shall be tha string
result of dat command. Y'all KNOW dat shit, muthafucka! No output redirection shall be performed by
the \fIm4\fP utility. Da exit status value from tha command
can be retrieved rockin tha \fBsysval\fP macro.
.TP 7
\fBsysval\fP
Da definin text of tha \fBsysval\fP macro shall be tha exit value
of tha utilitizzle last invoked by tha \fBsyscmd\fP macro (as
a string).
.TP 7
\fBtraceon\fP
Da \fBtraceon\fP macro shall enable tracin fo' tha macros specified
as arguments, or, if no arguments is specified, fo' all
macros. Da trace output shall be freestyled ta standard error up in an
unspecified format.
.TP 7
\fBtraceoff\fP
Da \fBtraceoff\fP macro shall disable tracin fo' tha macros specified
as arguments, or, if no arguments is specified, for
all macros.
.TP 7
\fBtranslit\fP
Da definin text of tha \fBtranslit\fP macro shall be tha straight-up original gangsta argument
with every last muthafuckin characta dat occurs up in tha second
argument replaced wit tha correspondin characta from tha third
argument.
.TP 7
\fBundefine\fP
Da \fBundefine\fP macro shall delete all definitions (includin them
preserved rockin tha \fBpushdef\fP macro) of tha macros
named by its arguments.
.TP 7
\fBundivert\fP
Da \fBundivert\fP macro shall cause immediate output of any text
in temporary buffers named as arguments, or all temporary
buffers if no arguments is specified. Y'all KNOW dat shit, muthafucka! Buffers can be undiverted into
other temporary buffers. Undivertin shall discard the
contentz of tha temporary buffer n' shit. Well shiiiit, it shall be a error ta specify
an argument containin any non-numeric characters.
.sp
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred
.sp
.LP
If tha \fBm4exit\fP macro is used, tha exit value can be specified
by tha input file.
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fBdefn\fP macro is useful fo' renamin macros, especially built-ins.
.SH EXAMPLES
.LP
If tha file \fBm4src\fP gotz nuff tha lines:
.sp
.RS
.nf

\fBDa value of `VER' is "VER".
ifdef(`VER', "VER" is defined ta be VER., VER aint defined.)
ifelse(VER, 1, "VER" is `VER'.)
ifelse(VER, 2, "VER" is `VER'., "VER" aint 2.)
end
\fP
.fi
.RE
.LP
then tha command
.sp
.RS
.nf

\fBm4 m4src
\fP
.fi
.RE
.LP
or tha command:
.sp
.RS
.nf

\fBm4 -U VER m4src
\fP
.fi
.RE
.LP
produces tha output:
.sp
.RS
.nf

\fBDa value of VER is "VER".
VER aint defined.
.sp

VER aint 2.
end
\fP
.fi
.RE
.LP
Da command:
.sp
.RS
.nf

\fBm4 -D VER m4src
\fP
.fi
.RE
.LP
produces tha output:
.sp
.RS
.nf

\fBDa value of VER is "".
VER is defined ta be .
.sp

VER aint 2.
end
\fP
.fi
.RE
.LP
Da command:
.sp
.RS
.nf

\fBm4 -D VER=1 m4src
\fP
.fi
.RE
.LP
produces tha output:
.sp
.RS
.nf

\fBDa value of VER is "1".
VER is defined ta be 1.
VER is 1.
VER aint 2.
end
\fP
.fi
.RE
.LP
Da command:
.sp
.RS
.nf

\fBm4 -D VER=2 m4src
.sp

produces tha output:
Da value of VER is "2".
VER is defined ta be 2.
.sp

VER is 2.
end
\fP
.fi
.RE
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIc99\fP
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
