.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "PAX" 1P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" pax 
.SH PROLOG
This manual page is part of tha POSIX Programmerz Manual.
Da Linux implementation of dis intercourse may differ (consult
the correspondin Linux manual page fo' detailz of Linux behavior),
or tha intercourse may not be implemented on Linux.
.SH NAME
pax \- portable archive interchange
.SH SYNOPSIS
.LP
\fBpax\fP \fB[\fP\fB-cdnv\fP\fB][\fP\fB-H|-L\fP\fB][\fP\fB-f\fP \fIarchive\fP\fB][\fP\fB-s\fP
\fIreplstr\fP\fB]\fP\fB...\fP\fB[\fP\fIpattern\fP\fB...\fP\fB]\fP\fB
.br
.sp
pax -r\fP\fB[\fP\fB-cdiknuv\fP\fB][\fP\fB-H|-L\fP\fB][\fP\fB-f\fP
\fIarchive\fP\fB][\fP\fB-o\fP
\fIoptions\fP\fB]\fP\fB...\fP\fB[\fP\fB-p\fP \fIstring\fP\fB]\fP\fB...
.br
\ \ \ \ \ \ \fP \fB[\fP\fB-s\fP
\fIreplstr\fP\fB]\fP\fB...\fP\fB[\fP\fIpattern\fP\fB...\fP\fB]\fP\fB
.br
.sp
pax -w\fP\fB[\fP\fB-dituvX\fP\fB][\fP\fB-H|-L\fP\fB][\fP\fB-b\fP
\fIblocksize\fP\fB][[\fP\fB-a\fP\fB][\fP\fB-f\fP \fIarchive\fP\fB][\fP\fB-o\fP
\fIoptions\fP\fB]\fP\fB...
.br
\ \ \ \ \ \ \fP \fB[\fP\fB-s\fP \fIreplstr\fP\fB]\fP\fB...\fP\fB[\fP\fB-x\fP
\fIformat\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP\fB
.br
.sp
pax -r -w\fP\fB[\fP\fB-diklntuvX\fP\fB][\fP\fB-H|-L\fP\fB][\fP\fB-p\fP
\fIstring\fP\fB]\fP\fB...\fP\fB[\fP\fB-s\fP \fIreplstr\fP\fB]\fP\fB...
.br
\ \ \ \ \ \ \fP \fB[\fP\fIfile\fP\fB...\fP\fB]\fP \fIdirectory\fP\fB
.br
\fP
.SH DESCRIPTION
.LP
Da \fIpax\fP utilitizzle shall read, write, n' write listz of tha members
of archive filez n' copy directory hierarchies fo' realz. A
variety of archive formats shall be supported; peep tha \fB-x\fP \fIformat\fP
option.
.LP
Da action ta be taken dependz on tha presence of tha \fB-r\fP and
\fB-w\fP options. Da four combinationz of \fB-r\fP and
\fB-w\fP is referred ta as tha four modez of operation: \fBlist\fP,
\fBread\fP, \fBwrite\fP, n' \fBcopy\fP modes,
correspondin respectively ta tha four forms shown up in tha SYNOPSIS
section.
.TP 7
\fBlist\fP
In \fBlist\fP mode (when neither \fB-r\fP nor \fB-w\fP is specified),
\fIpax\fP shall write tha namez of tha thugz of
the archive file read from tha standard input, wit pathnames matching
the specified patterns, ta standard output. If a named file
iz of type directory, tha file hierarchy rooted at dat file shall
be listed as well.
.TP 7
\fBread\fP
In \fBread\fP mode (when \fB-r\fP is specified yo, but \fB-w\fP is not),
\fIpax\fP shall extract tha thugz of tha archive
file read from tha standard input, wit pathnames matchin tha specified
patterns. If a extracted file iz of type directory, the
file hierarchy rooted at dat file shall be extracted as well. The
extracted filez shall be pimped struttin pathname resolution
with tha directory up in which \fIpax\fP was invoked as tha current working
directory. 
.LP
If a attempt is made ta extract a gangbangin' finger-lickin' directory when tha directory already
exists, dis shall not be considered a error. Shiiit, dis aint no joke. If an
attempt is made ta extract a FIFO when tha FIFO already exists, this
shall not be considered a error.
.LP
Da ballership, access, n' modification times, n' file mode of the
restored filez is discussed under tha \fB-p\fP option.
.TP 7
\fBwrite\fP
In \fBwrite\fP mode (when \fB-w\fP is specified yo, but \fB-r\fP is not),
\fIpax\fP shall write tha contentz of the
\fIfile\fP operandz ta tha standard output up in a archive format. If
no \fIfile\fP operandz is specified, a list of filez to
copy, one per line, shall be read from tha standard input fo' realz. A file
of type directory shall include all of tha filez up in tha file
hierarchy rooted all up in tha file.
.TP 7
\fBcopy\fP
In \fBcopy\fP mode (when both \fB-r\fP n' \fB-w\fP is specified),
\fIpax\fP shall copy tha \fIfile\fP operandz ta the
destination directory. 
.LP
If no \fIfile\fP operandz is specified, a list of filez ta copy,
one per line, shall be read from tha standard input fo' realz. A file
of type directory shall include all of tha filez up in tha file hierarchy
rooted all up in tha file.
.LP
Da effect of tha \fBcopy\fP shall be as if tha copied filez were
written ta a archive file n' then subsequently extracted,
except dat there may be hard links between tha original gangsta n' tha copied
files. If tha destination directory be a subdirectory of
one of tha filez ta be copied, tha thangs up in dis biatch is unspecified. Y'all KNOW dat shit, muthafucka! If the
destination directory be a gangbangin' file of a type not defined by the
System Interfaces volume of IEEE\ Std\ 1003.1-2001, tha thangs up in dis biatch are
implementation-defined; otherwise, it shall be a error
for tha file named by tha \fIdirectory\fP operand not ta exist, not
be writable by tha user, or not be a gangbangin' file of type
directory.
.sp
.LP
In \fBread\fP or \fBcopy\fP modes, if intermediate directories are
necessary ta extract a archive member, \fIpax\fP shall
perform actions equivalent ta tha \fImkdir\fP() function defined in
the System Interfaces
volume of IEEE\ Std\ 1003.1-2001, called wit tha followin arguments:
.IP " *" 3
Da intermediate directory used as tha \fIpath\fP argument
.LP
.IP " *" 3
Da value of tha bitwise-inclusive OR of S_IRWXU, S_IRWXG, n' S_IRWXO
as tha \fImode\fP argument
.LP
.LP
If any specified \fIpattern\fP or \fIfile\fP operandz is not matched
by at least one file or archive member, \fIpax\fP shall
write a gangbangin' finger-lickin' diagnostic message ta standard error fo' each one dat did
not match n' exit wit a non-zero exit status.
.LP
Da archive formats busted lyrics bout up in tha EXTENDED DESCRIPTION section
shall be automatically detected on input. Da default output
archive format shall be implementation-defined.
.LP
A single archive can span multiple files. Da \fIpax\fP utilitizzle shall
determine, up in a implementation-defined manner, what tha fuck file
to read or write as tha next file.
.LP
If tha selected archive format supports tha justification of linked
files, it shall be a error if these filez cannot be linked
when tha archive is extracted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. For archive formats dat do not store
file contents wit each name dat causes a hard link, if the
file dat gotz nuff tha data aint extracted durin dis \fIpax\fP
session, either tha data shall be restored from tha original
file, or a gangbangin' finger-lickin' diagnostic message shall be displayed wit tha name of
a file dat can be used ta extract tha data. In traversing
directories, \fIpax\fP shall detect infinite loops; dat is, entering
a previously hit up directory dat be a ancestor of the
last file hit up. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. When it detects a infinite loop, \fIpax\fP shall
write a gangbangin' finger-lickin' diagnostic message ta standard error n' shall
terminate.
.SH OPTIONS
.LP
Da \fIpax\fP utilitizzle shall conform ta tha Base Definitions volume
of IEEE\ Std\ 1003.1-2001, Section 12.2, Utilitizzle Syntax Guidelines,
except dat tha order of presentation of the
\fB-o\fP, \fB-p\fP, n' \fB-s\fP options is significant.
.LP
Da followin options shall be supported:
.TP 7
\fB-r\fP
Read a archive file from standard input.
.TP 7
\fB-w\fP
Write filez ta tha standard output up in tha specified archive format.
.TP 7
\fB-a\fP
Append filez ta tha end of tha archive. Well shiiiit, it is implementation-defined
which devices on tha system support appendin fo' realz. Additional
file formats unspecified by dis volume of IEEE\ Std\ 1003.1-2001
may impose restrictions on appending.
.TP 7
\fB-b\ \fP \fIblocksize\fP
Block tha output at a positizzle decimal integer number of bytes per
write ta tha archive file. Devices n' archive formats may
impose restrictions on blocking. Blockin shall be automatically determined
on input. Conformin applications shall not specify a
\fIblocksize\fP value larger than 32256. Default blockin when bustin
archives dependz on tha archive format. (See tha \fB-x\fP
option below.)
.TP 7
\fB-c\fP
Match all file or archive thugz except dem specified by tha \fIpattern\fP
or \fIfile\fP operands.
.TP 7
\fB-d\fP
Cause filez of type directory bein copied or archived or archive
thugz of type directory bein extracted or listed ta match
only tha file or archive member itself n' not tha file hierarchy
rooted all up in tha file.
.TP 7
\fB-f\ \fP \fIarchive\fP
Specify tha pathname of tha input or output archive, overridin the
default standard input (in \fBlist\fP or \fBread\fP
modes) or standard output ( \fBwrite\fP mode).
.TP 7
\fB-H\fP
If a symbolic link referencin a gangbangin' file of type directory is specified
on tha command line, \fIpax\fP shall archive tha file
hierarchy rooted up in tha file referenced by tha link, rockin tha name
of tha link as tha root of tha file hierarchy. Otherwise, if a
symbolic link referencin a gangbangin' file of any other file type which \fIpax\fP
can normally archive is specified on tha command line,
then \fIpax\fP shall archive tha file referenced by tha link, using
the name of tha link. Da default behavior shall be ta archive
the symbolic link itself.
.TP 7
\fB-i\fP
Interactively rename filez or archive members. For each archive member
matchin a \fIpattern\fP operand or file matchin a
\fIfile\fP operand, a prompt shall be freestyled ta tha file \fB/dev/tty\fP.
Da prompt shall contain tha name of tha file or
archive member yo, but tha format is otherwise unspecified. Y'all KNOW dat shit, muthafucka! A line shall
then be read from \fB/dev/tty\fP. If dis line is blank, the
file or archive member shall be skipped. Y'all KNOW dat shit, muthafucka! If dis line consists of
a single period, tha file or archive member shall be processed
with no modification ta its name. Otherwise, its name shall be replaced
with tha contentz of tha line. Da \fIpax\fP utilitizzle shall
immediately exit wit a non-zero exit status if end-of-file is encountered
when readin a response or if \fB/dev/tty\fP cannot be
opened fo' readin n' writing. 
.LP
Da thangs up in dis biatch of extractin a hard link ta a gangbangin' file dat has been renamed
durin extraction is unspecified.
.TP 7
\fB-k\fP
Prevent tha overwritin of existin files.
.TP 7
\fB-l\fP
(Da letta ell.) In \fBcopy\fP mode, hard links shall be made between
the source n' destination file hierarchies whenever
possible. If specified up in conjunction wit \fB-H\fP or \fB-L\fP, when
a symbolic link is encountered, tha hard link pimped in
the destination file hierarchy shall be ta tha file referenced by
the symbolic link. If specified when neither \fB-H\fP nor
\fB-L\fP is specified, when a symbolic link is encountered, tha implementation
shall create a hard link ta tha symbolic link in
the source file hierarchy or copy tha symbolic link ta tha destination.
.TP 7
\fB-L\fP
If a symbolic link referencin a gangbangin' file of type directory is specified
on tha command line or encountered durin tha traversal of
a file hierarchy, \fIpax\fP shall archive tha file hierarchy rooted
in tha file referenced by tha link, rockin tha name of tha link
as tha root of tha file hierarchy. Otherwise, if a symbolic link referencing
a file of any other file type which \fIpax\fP can
normally archive is specified on tha command line or encountered during
the traversal of a gangbangin' file hierarchy, \fIpax\fP shall archive
the file referenced by tha link, rockin tha name of tha link. Da default
behavior shall be ta archive tha symbolic link
itself.
.TP 7
\fB-n\fP
Select tha straight-up original gangsta archive member dat matches each \fIpattern\fP operand.
No mo' than one archive member shall be matched for
each pattern (although thugz of type directory shall still match
the file hierarchy rooted at dat file).
.TP 7
\fB-o\ \fP \fIoptions\fP
Provide shiznit ta tha implementation ta modify tha algorithm
for extractin or freestylin files. Da value of \fIoptions\fP
shall consist of one or mo' comma-separated keywordz of tha form:
.sp
.RS
.nf

\fIkeyword\fP\fB[[\fP\fB:\fP\fB]\fP\fB=\fP\fIvalue\fP\fB][\fP\fB,\fP\fIkeyword\fP\fB[[\fP\fB:\fP\fB]\fP\fB=\fP\fIvalue\fP\fB]\fP\fB, ...\fP\fB]\fP
.fi
.RE
.LP
Some keywordz apply only ta certain file formats, as indicated with
each description. I aint talkin' bout chicken n' gravy biatch. Use of keywordz dat is inapplicable to
the file format bein processed produces undefined thangs up in dis biatch.
.LP
Keywordz up in tha \fIoptions\fP argument shall be a strang dat would
be a valid portable filename as busted lyrics bout up in tha Base
Definitions volume of IEEE\ Std\ 1003.1-2001, Section 3.276, Portable
Filename Characta Set. 
.TP 7
\fBNote:\fP
.RS
Keywordz is not sposed ta fuckin be filenames, merely ta follow tha same
characta composizzle rulez as portable filenames.
.RE
.sp
.LP
Keywordz can be preceded wit white space. Da \fIvalue\fP field shall
consist of zero or mo' characters; within \fIvalue\fP,
the application shall precede any literal comma wit a funky-ass backslash,
which shall be ignored yo, but preserves tha comma as part of
\fIvalue\fP fo' realz. A comma as tha final character, or a cold-ass lil comma followed solely
by white space as tha final characters, up in \fIoptions\fP
shall be ignored. Y'all KNOW dat shit, muthafucka! Multiple \fB-o\fP options can be specified; if keywords
given ta these multiple \fB-o\fP options conflict, the
keywordz n' joints appearin lata up in command line sequence shall
take precedence n' tha earlier shall be silently ignored. Y'all KNOW dat shit, muthafucka! The
followin keyword jointz of \fIoptions\fP shall be supported fo' the
file formats as indicated:
.TP 7
\fBdelete\fP=\fIpattern\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fBpax\fP format.) When used up in \fBwrite\fP
or \fBcopy\fP mode, \fIpax\fP shall omit from
extended header recordz dat it produces any keywordz matchin the
strin pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. When used up in \fBread\fP or \fBlist\fP mode,
\fIpax\fP shall ignore any keywordz matchin tha strang pattern in
the extended header records. In both cases, matchin shall be
performed rockin tha pattern matchin notation busted lyrics bout up in \fIPatterns
Matchin a Single
Character\fP n' \fIPatterns Matchin Multiple Characters\fP . For
example: 
.sp
.RS
.nf

\fB-o\fP \fBdelete\fP\fB=\fP\fIsecurity\fP\fB.*
\fP
.fi
.RE
.LP
would suppress security-related shiznit. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. See pax Extended Header
for extended header record
keyword usage.
.RE
.TP 7
\fBexthdr.name\fP=\fIstring\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fBpax\fP format.) This keyword allows
user control over tha name dat is freestyled tha fuck into the
\fBustar\fP header blocks fo' tha extended header produced under the
circumstances busted lyrics bout up in pax
Header Block . Da name shall be tha contentz of \fIstring\fP, after
the followin characta substitutions done been made: 
.TS C
center; l lw(40).
\fB\fIstring\fP\fP	T{
.na
\fB\ \fP
.ad
T}
\fBIncludes:\fP	T{
.na
\fBReplaced By:\fP
.ad
T}
%d	T{
.na
Da directory name of tha file, equivalent ta tha result of tha \fIdirname\fP utilitizzle on tha translated pathname.
.ad
T}
%f	T{
.na
Da filename of tha file, equivalent ta tha result of tha \fIbasename\fP utilitizzle on tha translated pathname.
.ad
T}
%p	T{
.na
Da process ID of tha \fIpax\fP process.
.ad
T}
%%	T{
.na
A \fB'%'\fP character.
.ad
T}
.TE
.LP
Any other \fB'%'\fP charactas up in \fIstring\fP produce undefined thangs up in dis biatch.
.LP
If no \fB-o\fP \fBexthdr.name=\fP \fIstring\fP is specified, \fIpax\fP
shall use tha followin default value:
.sp
.RS
.nf

\fB%d/PaxHeaders.%p/%f
\fP
.fi
.RE
.RE
.TP 7
\fBglobexthdr.name\fP=\fIstring\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fBpax\fP format.) When used up in \fBwrite\fP
or \fBcopy\fP mode wit tha appropriate options,
\fIpax\fP shall create global extended header recordz wit \fBustar\fP
header blocks dat is ghon be treated as regular filez by
previous versionz of \fIpax\fP. This keyword allows user control over
the name dat is freestyled tha fuck into tha \fBustar\fP header blocks
for global extended header records. Da name shall be tha contents
of string, afta tha followin characta substitutions have been
made: 
.TS C
center; l lw(40).
\fB\fIstring\fP\fP	T{
.na
\fB\ \fP
.ad
T}
\fBIncludes:\fP	T{
.na
\fBReplaced By:\fP
.ad
T}
%n	T{
.na
An integer dat represents tha sequence number of tha global extended header record up in tha archive, startin at 1.
.ad
T}
%p	T{
.na
Da process ID of tha \fIpax\fP process.
.ad
T}
%%	T{
.na
A \fB'%'\fP character.
.ad
T}
.TE
.LP
Any other \fB'%'\fP charactas up in \fIstring\fP produce undefined thangs up in dis biatch.
.LP
If no \fB-o\fP \fBglobexthdr.name=\fP \fIstring\fP is specified, \fIpax\fP
shall use tha followin default value:
.sp
.RS
.nf

\fB$TMPDIR/GlobalHead.%p.%n
\fP
.fi
.RE
.LP
where $ \fITMPDIR\fP represents tha value of tha \fITMPDIR\fP environment
variable. If \fITMPDIR\fP aint set, \fIpax\fP
shall use \fB/tmp\fP.
.RE
.TP 7
\fBinvalid\fP=\fIaction\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fBpax\fP format.) This keyword allows
user control over tha action \fIpax\fP takes upon
encounterin joints up in a extended header record that, up in \fBread\fP
or \fBcopy\fP mode, is invalid up in tha destination hierarchy
or, up in \fBlist\fP mode, cannot be freestyled up in tha codeset n' current
locale of tha implementation. I aint talkin' bout chicken n' gravy biatch. Da followin is invalid
values dat shall be recognized by \fIpax\fP: 
.RS
.IP " *" 3
In \fBread\fP or \fBcopy\fP mode, a gangbangin' filename or link name dat gotz nuff
characta encodings invalid up in tha destination
hierarchy. (For example, tha name may contain embedded NULs.)
.LP
.IP " *" 3
In \fBread\fP or \fBcopy\fP mode, a gangbangin' filename or link name dat is
longer than tha maximum allowed up in tha destination hierarchy
(for either a pathname component or tha entire pathname).
.LP
.IP " *" 3
In \fBlist\fP mode, any characta strang value (filename, link name,
user name, n' so on) dat cannot be freestyled up in the
codeset n' current locale of tha implementation.
.LP
.RE
.LP
Da followin mutually-exclusive jointz of tha \fIaction\fP argument
are supported:
.TP 7
\fBbypass\fP
.RS
In \fBread\fP or \fBcopy\fP mode, \fIpax\fP shall bypass tha file,
causin no chizzle ta tha destination hierarchy. In
\fBlist\fP mode, \fIpax\fP shall write all axed valid joints
for tha file yo, but its method fo' freestylin invalid joints is
unspecified.
.RE
.TP 7
\fBrename\fP
.RS
In \fBread\fP or \fBcopy\fP mode, \fIpax\fP shall act as if tha \fB-i\fP
option was up in effect fo' each file wit invalid
filename or link name joints, allowin tha user ta provide a replacement
name interactively. In \fBlist\fP mode, \fIpax\fP shall
behave identically ta tha \fBbypass\fP action.
.RE
.TP 7
\fBUTF-8\fP
.RS
When used up in \fBread\fP, \fBcopy\fP, or \fBlist\fP mode n' a gangbangin' filename,
link name, balla name, or any other field up in an
extended header record cannot be translated from tha \fBpax\fP UTF-8
codeset format ta tha codeset n' current locale of the
implementation, \fIpax\fP shall use tha actual UTF-8 encodin for
the name.
.RE
.TP 7
\fBwrite\fP
.RS
In \fBread\fP or \fBcopy\fP mode, \fIpax\fP shall write tha file,
translatin or truncatin tha name, regardless of whether
this may overwrite a existin file wit a valid name. In \fBlist\fP
mode, \fIpax\fP shall behave identically ta the
\fBbypass\fP action.
.RE
.sp
.LP
If no \fB-o\fP \fBinvalid=\fP option is specified, \fIpax\fP shall
act as if \fB-o\fP \fBinvalid=\fP \fBbypass\fP were
specified. Y'all KNOW dat shit, muthafucka! Any overwritin of existin filez dat may be allowed by
the \fB-o\fP \fBinvalid=\fP actions shall be subject to
permission ( \fB-p\fP) n' modification time ( \fB-u\fP) restrictions,
and shall be suppressed if tha \fB-k\fP option be also
specified.
.RE
.TP 7
\fBlinkdata\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fBpax\fP format.) In \fBwrite\fP
mode, \fIpax\fP shall write tha contentz of a gangbangin' file ta the
archive even when dat file is merely a hard link ta a gangbangin' file whose
contents have already been freestyled ta tha archive.
.RE
.TP 7
\fBlistopt\fP=\fIformat\fP
.RS
.sp
This keyword specifies tha output format of tha table of contents
produced when tha \fB-v\fP option is specified up in \fBlist\fP
mode. Right back up in yo muthafuckin ass. See List Mode Format Justifications . To avoid ambiguity, the
\fBlistopt=\fP \fIformat\fP
shall be tha only or final \fBkeyword=\fP \fIvalue\fP pair up in a \fB-o\fP
option-argument; all charactas up in tha remainder of the
option-argument shall be considered part of tha format string. When
multiple \fB-o\fP \fBlistopt=\fP \fIformat\fP options are
specified, tha format strings shall be considered a single, concatenated
string, evaluated up in command line order.
.RE
.TP 7
\fBtimes\fP
.RS
.sp
(Applicable only ta tha \fB-x\fP \fIpax\fP format.) When used up in \fBwrite\fP
or \fBcopy\fP mode, \fIpax\fP shall include
\fBatime\fP, \fBctime\fP, n' \fBmtime\fP extended header records
for each file. Right back up in yo muthafuckin ass. See pax Extended
Header File Times .
.RE
.sp
.LP
In addizzle ta these keywords, if tha \fB-x\fP \fIpax\fP format is
specified, any of tha keywordz n' joints defined up in pax Extended
Header, includin implementation extensions, can be used up in \fB-o\fP
option-arguments,
in either of two modes:
.TP 7
\fBkeyword\fP=\fIvalue\fP
.RS
.sp
When used up in \fBwrite\fP or \fBcopy\fP mode, these keyword/value pairs
shall be included all up in tha beginnin of tha archive as
\fBtypeflag\fP \fBg\fP global extended header records. When used in
\fBread\fP or \fBlist\fP mode, these keyword/value pairs
shall act as if they had been all up in tha beginnin of tha archive as \fBtypeflag\fP
\fBg\fP global extended header records.
.RE
.TP 7
\fBkeyword\fP:=\fIvalue\fP
.RS
.sp
When used up in \fBwrite\fP or \fBcopy\fP mode, these keyword/value pairs
shall be included as recordz all up in tha beginnin of a
\fBtypeflag\fP \fBx\fP extended header fo' each file. (This shall
be equivalent ta tha equal-sign form except dat it creates no
\fBtypeflag\fP \fBg\fP global extended header records.) When used
in \fBread\fP or \fBlist\fP mode, these keyword/value pairs
shall act as if they was included as recordz all up in tha end of each extended
header; thus, they shall override any global or
file-specific extended header record keywordz of tha same names. For
example, up in tha command: 
.sp
.RS
.nf

\fBpax -r -o "
gname:=mygroup,
" <archive
\fP
.fi
.RE
.LP
the crew name is ghon be forced ta a freshly smoked up value fo' all filez read from
the archive.
.RE
.sp
.LP
Da precedence of \fB-o\fP keywordz over various fieldz up in tha archive
is busted lyrics bout up in pax Extended
Header Keyword Precedence .
.TP 7
\fB-p\ \fP \fIstring\fP
Specify one or mo' file characteristic options (privileges). The
\fIstring\fP option-argument shall be a strang specifying
file characteristics ta be retained or discarded on extraction. I aint talkin' bout chicken n' gravy biatch. The
strin shall consist of tha justification charactas \fBa\fP,
\fBe\fP, \fBm\fP, \fBo\fP, n' \fBp\fP . Other implementation-defined
charactas can be included. Y'all KNOW dat shit, muthafucka! Multiple
characteristics can be concatenated within tha same strang n' multiple
\fB-p\fP options can be specified. Y'all KNOW dat shit, muthafucka! Da meanin of the
specification charactas is as bigs up: 
.TP 7
\fBa\fP
.RS
Do not preserve file access times.
.RE
.TP 7
\fBe\fP
.RS
Preserve tha user ID, crew ID, file mode bits (see tha Base Definitions
volume of IEEE\ Std\ 1003.1-2001, Section 3.168, File Mode Bits),
access time, modification time, n' any other
implementation-defined file characteristics.
.RE
.TP 7
\fBm\fP
.RS
Do not preserve file modification times.
.RE
.TP 7
\fBo\fP
.RS
Preserve tha user ID n' crew ID.
.RE
.TP 7
\fBp\fP
.RS
Preserve tha file mode bits, n' you can put dat on yo' toast. Other implementation-defined file mode
attributes may be preserved.
.RE
.sp
.LP
In tha precedin list, "preserve" indicates dat a attribute stored
in tha archive shall be given ta tha extracted file,
subject ta tha permissionz of tha invokin process. Da access and
modification timez of tha file shall be preserved unless
otherwise specified wit tha \fB-p\fP option or not stored up in the
archive fo' realz. All attributes dat is not preserved shall be
determined as part of tha aiiight file creation action (see \fIFile
Read, Write, and
Creation\fP ).
.LP
If neither tha \fBe\fP nor tha \fBo\fP justification characta is
specified, or tha user ID n' crew ID is not preserved
for any reason, \fIpax\fP shall not set tha S_ISUID n' S_ISGID bits
of tha file mode.
.LP
If tha preservation of any of these shit fails fo' any reason, \fIpax\fP
shall write a gangbangin' finger-lickin' diagnostic message ta standard error.
Failure ta preserve these shit shall affect tha final exit status,
but shall not cause tha extracted file ta be deleted.
.LP
If file characteristic lettas up in any of tha \fIstring\fP option-arguments
are duplicated or conflict wit each other, tha ones
given last shall take precedence. For example, if \fB-p\fP \fBeme\fP
is specified, file modification times is preserved.
.TP 7
\fB-s\ \fP \fIreplstr\fP
Modify file or archive member names named by \fIpattern\fP or \fIfile\fP
operandz accordin ta tha substitution expression
\fIreplstr\fP, rockin tha syntax of tha \fIed\fP utility. Da concepts
of "address" and
"line" is meaningless up in tha context of tha \fIpax\fP utility, and
shall not be supplied. Y'all KNOW dat shit, muthafucka! Da format shall be: 
.sp
.RS
.nf

\fB-s /\fP\fIold\fP\fB/\fP\fInew\fP\fB/\fP\fB[\fP\fBgp\fP\fB]\fP
.fi
.RE
.LP
where as up in \fIed\fP, \fIold\fP be a funky-ass basic regular expression and
\fInew\fP can contain an
ampersand, \fB'\\n'\fP (where \fIn\fP be a gangbangin' finger-lickin' digit) backreferences,
or subexpression matching. Da \fIold\fP strang shall also be
permitted ta contain <newline>s.
.LP
Any non-null characta can be used as a thugged-out delimita ( \fB'/'\fP shown
here). Multiple \fB-s\fP expressions can be specified;
the expressions shall be applied up in tha order specified, terminating
with tha straight-up original gangsta successful substitution. I aint talkin' bout chicken n' gravy biatch. Da optionizzle trailing
\fB'g'\fP be as defined up in tha \fIed\fP utility. Da optionizzle trailing
\fB'p'\fP shall
cause successful substitutions ta be freestyled ta standard error. Shiiit, dis aint no joke. File
or archive member names dat substitute ta tha empty string
shall be ignored when readin n' freestylin archives.
.TP 7
\fB-t\fP
When readin filez from tha file system, n' if tha user has tha permissions
required by \fIutime\fP() ta do so, set tha access time of each file
read ta tha access time dat it had before
bein read by \fIpax\fP.
.TP 7
\fB-u\fP
Ignore filez dat is olda (havin a less recent file modification
time) than a pre-existin file or archive member wit the
same name. In \fBread\fP mode, a archive member wit tha same name
as a gangbangin' file up in tha file system shall be extracted if tha archive
member is newer than tha file. In \fBwrite\fP mode, a archive file
member wit tha same name as a gangbangin' file up in tha file system shall
be superseded if tha file is newer than tha archive member n' shit. If \fB-a\fP
is also specified, dis be accomplished by appendin to
the archive; otherwise, it is unspecified whether dis be accomplished
by actual replacement up in tha archive or by appendin ta the
archive. In \fBcopy\fP mode, tha file up in tha destination hierarchy
shall be replaced by tha file up in tha source hierarchy or by a
link ta tha file up in tha source hierarchy if tha file up in tha source
hierarchy is newer.
.TP 7
\fB-v\fP
In \fBlist\fP mode, produce a verbose table of contents (see tha STDOUT
section). Otherwise, write archive member pathnames to
standard error (see tha STDERR section).
.TP 7
\fB-x\ \fP \fIformat\fP
Specify tha output archive format. Da \fIpax\fP utilitizzle shall support
the followin formats: 
.TP 7
\fBcpio\fP
.RS
Da \fBcpio\fP interchange format; peep tha EXTENDED DESCRIPTION section.
Da default \fIblocksize\fP fo' dis format for
characta special archive filez shall be 5120. Implementations shall
support all \fIblocksize\fP joints less than or equal to
32256 dat is multiplez of 512.
.RE
.TP 7
\fBpax\fP
.RS
Da \fBpax\fP interchange format; peep tha EXTENDED DESCRIPTION section.
Da default \fIblocksize\fP fo' dis format for
characta special archive filez shall be 5120. Implementations shall
support all \fIblocksize\fP joints less than or equal to
32256 dat is multiplez of 512.
.RE
.TP 7
\fBustar\fP
.RS
Da \fBtar\fP interchange format; peep tha EXTENDED DESCRIPTION section.
Da default \fIblocksize\fP fo' dis format for
characta special archive filez shall be 10240. Implementations shall
support all \fIblocksize\fP joints less than or equal to
32256 dat is multiplez of 512.
.RE
.sp
.LP
Implementation-defined formats shall specify a thugged-out default block size
as well as any other block sizes supported fo' character
special archive files.
.LP
Any attempt ta append ta a archive file up in a gangbangin' format different from
the existin archive format shall cause \fIpax\fP ta exit
immediately wit a non-zero exit status.
.LP
In \fBcopy\fP mode, if no \fB-x\fP format is specified, \fIpax\fP
shall behave as if \fB-x\fP \fIpax\fP was specified.
.TP 7
\fB-X\fP
When traversin tha file hierarchy specified by a pathname, \fIpax\fP
shall not descend tha fuck into directories dat gotz a gangbangin' finger-lickin' different
device ID ( \fIst_dev\fP; peep tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIstat\fP()).
.sp
.LP
Da options dat operate on tha namez of filez or archive members
( \fB-c\fP, \fB-i\fP, \fB-n\fP, \fB-s\fP, \fB-u\fP, and
\fB-v\fP) shall interact as bigs up. In \fBread\fP mode, tha archive
thugz shall be selected based on tha user-specified
\fIpattern\fP operandz as modified by tha \fB-c\fP, \fB-n\fP, and
\fB-u\fP options. Then, any \fB-s\fP n' \fB-i\fP options
shall modify, up in dat order, tha namez of tha selected files. The
\fB-v\fP option shall write names resultin from these
modifications.
.LP
In \fBwrite\fP mode, tha filez shall be selected based on tha user-specified
pathnames as modified by tha \fB-n\fP and
\fB-u\fP options. Then, any \fB-s\fP n' \fB-i\fP options shall modify,
in dat order, tha namez of these selected files. The
\fB-v\fP option shall write names resultin from these modifications.
.LP
If both tha \fB-u\fP n' \fB-n\fP options is specified, \fIpax\fP
shall not consider a gangbangin' file selected unless it is newer than
the file ta which it is compared.
.SS List Mode Format Justifications
.LP
In \fBlist\fP mode wit tha \fB-o\fP \fBlistopt=\fP \fIformat\fP option,
the \fIformat\fP argument shall be applied for
each selected file. Da \fIpax\fP utilitizzle shall append a <newline>
to tha \fBlistopt\fP output fo' each selected file. The
\fIformat\fP argument shall be used as tha \fIformat\fP strang busted lyrics about
in tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Chapta 5, File Format Notation, wit the
exceptions 1.
all up in 5. defined up in tha EXTENDED DESCRIPTION section of \fIprintf\fP,
plus tha following
exceptions:
.TP 7
6.
Da sequence ( \fIkeyword\fP) can occur before a gangbangin' format conversion
specifier n' shit. Da conversion argument is defined by tha value
of \fIkeyword\fP. Da implementation shall support tha followin keywords:
.RS
.IP " *" 3
Any of tha Field Name entries up in ustar Header Block n' Octet-Oriented
cpio
Archive Entry . Da implementation may support tha \fIcpio\fP keywords
without tha leadin \fBc_\fP up in addizzle ta tha form
required by Values fo' cpio c_mode Field .
.LP
.IP " *" 3
Any keyword defined fo' tha extended header up in pax Extended Header
\&.
.LP
.IP " *" 3
Any keyword provided as a implementation-defined extension within
the extended header defined up in pax Extended Header .
.LP
.RE
.LP
For example, tha sequence \fB"%(charset)s"\fP is tha strang value
of tha name of tha characta set up in tha extended
header.
.LP
Da result of tha keyword conversion argument shall be tha value from
the applicable header field or extended header, without
any trailin NULs.
.LP
All keyword joints used as conversion arguments shall be translated
from tha UTF-8 encodin ta tha characta set appropriate for
the local file system, user database, n' so on, as applicable.
.TP 7
7.
An additionizzle conversion specifier character, \fBT\fP, shall be used
to specify time formats, n' you can put dat on yo' toast. Da \fBT\fP conversion
specifier characta can be preceded by tha sequence ( \fIkeyword=\fP
\fIsubformat\fP), where \fIsubformat\fP be a thugged-out date format as
defined by \fIdate\fP operands. Da default \fIkeyword\fP shall be
\fBmtime\fP n' the
default subformat shall be: 
.sp
.RS
.nf

\fB%b %e %H:%M %Y
\fP
.fi
.RE
.TP 7
8.
An additionizzle conversion specifier character, \fBM\fP, shall be used
to specify tha file mode strang as defined up in \fIls\fP Standard Output.
If ( \fIkeyword\fP) is omitted, tha \fBmode\fP keyword shall be used.
For
example, \fB%.1M\fP writes tha single characta correspondin ta the
<\fIentry\ type\fP> field of tha \fIls\fP \fB-l\fP command.
.TP 7
9.
An additionizzle conversion specifier character, \fBD\fP, shall be used
to specify tha thang fo' block or special files, if
applicable, up in a implementation-defined format. If not applicable,
and ( \fIkeyword\fP) is specified, then dis conversion shall
be equivalent ta \fB%(\fP\fIkeyword\fP\fB)u\fP. If not applicable,
and ( \fIkeyword\fP) is omitted, then dis conversion
shall be equivalent ta <space>.
.TP 7
10.
An additionizzle conversion specifier character, \fBF\fP, shall be used
to specify a pathname. Da \fBF\fP conversion
characta can be preceded by a sequence of comma-separated keywords:
.sp
.RS
.nf

\fB(\fP\fIkeyword\fP\fB[\fP\fB,\fP\fIkeyword\fP\fB]\fP \fB... )
\fP
.fi
.RE
.LP
Da joints fo' all tha keywordz dat is non-null shall be concatenated
together, each separated by a \fB'/'\fP . Da default
shall be ( \fBpath\fP) if tha keyword \fBpath\fP is defined; otherwise,
the default shall be ( \fBprefix\fP, \fBname\fP).
.TP 7
11.
An additionizzle conversion specifier character, \fBL\fP, shall be used
to specify a symbolic line expansion. I aint talkin' bout chicken n' gravy biatch. If tha current
file be a symbolic link, then \fB%L\fP shall expand to: 
.sp
.RS
.nf

\fB"%s -> %s", <\fP\fIvalue of keyword\fP\fB>, <\fP\fIcontentz of link\fP\fB>
\fP
.fi
.RE
.LP
Otherwise, tha \fB%L\fP conversion justification shall be tha equivalent
of \fB%F\fP .
.sp
.SH OPERANDS
.LP
Da followin operandz shall be supported:
.TP 7
\fIdirectory\fP
Da destination directory pathname fo' \fBcopy\fP mode.
.TP 7
\fIfile\fP
A pathname of a gangbangin' file ta be copied or archived.
.TP 7
\fIpattern\fP
A pattern matchin one or mo' pathnamez of archive thugz fo' realz. A pattern
must be given up in tha name-generatin notation of the
pattern matchin notation up in \fIPattern Matchin Notation\fP, including
the filename
expansion rulez up in \fIPatterns Used fo' Filename Expansion\fP . The
default, if no
\fIpattern\fP is specified, is ta select all thugz up in tha archive.
.sp
.SH STDIN
.LP
In \fBwrite\fP mode, tha standard input shall be used only if no \fIfile\fP
operandz is specified. Y'all KNOW dat shit, muthafucka! Well shiiiit, it shall be a text file
containin a list of pathnames, one per line, without leadin or trailing
<blank>s.
.LP
In \fBlist\fP n' \fBread\fP modes, if \fB-f\fP aint specified,
the standard input shall be a archive file.
.LP
Otherwise, tha standard input shall not be used.
.SH INPUT FILES
.LP
Da input file named by tha \fIarchive\fP option-argument, or standard
input when tha archive is read from there, shall be a
file formatted accordin ta one of tha justifications up in tha EXTENDED
DESCRIPTION section or some other implementation-defined
format.
.LP
Da file \fB/dev/tty\fP shall be used ta write prompts n' read responses.
.SH ENVIRONMENT VARIABLES
.LP
Da followin environment variablez shall affect tha execution of
\fIpax\fP:
.TP 7
\fILANG\fP
Provide a thugged-out default value fo' tha internationalization variablez that
are unset or null. (See tha Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variablez used ta determine
the jointz of locale categories.)
.TP 7
\fILC_ALL\fP
If set ta a non-empty strang value, override tha jointz of all the
other internationalization variables.
.TP 7
\fILC_COLLATE\fP
.sp
Determine tha locale fo' tha behavior of ranges, equivalence classes,
and multi-characta collatin elements used up in tha pattern
matchin expressions fo' tha \fIpattern\fP operand, tha basic regular
expression fo' tha \fB-s\fP option, n' tha extended
regular expression defined fo' tha \fByesexpr\fP locale keyword in
the \fILC_MESSAGES\fP category.
.TP 7
\fILC_CTYPE\fP
Determine tha locale fo' tha interpretation of sequencez of bytes
of text data as charactas (for example, single-byte as
opposed ta multi-byte charactas up in arguments n' input files), the
behavior of characta classes used up in tha extended regular
expression defined fo' tha \fByesexpr\fP locale keyword up in tha \fILC_MESSAGES\fP
category, n' pattern matching.
.TP 7
\fILC_MESSAGES\fP
Determine tha locale fo' tha processin of affirmatizzle responses that
should be used ta affect tha format n' contents of
diagnostic lyrics freestyled ta standard error.
.TP 7
\fILC_TIME\fP
Determine tha format n' contentz of date n' time strings when the
\fB-v\fP option is specified.
.TP 7
\fINLSPATH\fP
Determine tha location of message catalogs fo' tha processin of \fILC_MESSAGES
\&.\fP 
.TP 7
\fITMPDIR\fP
Determine tha pathname dat serves up part of tha default global extended
header record file, as busted lyrics bout fo' tha \fB-o\fP
\fBglobexthdr=\fP keyword up in tha OPTIONS section.
.TP 7
\fITZ\fP
Determine tha timezone used ta calculate date n' time strings when
the \fB-v\fP option is specified. Y'all KNOW dat shit, muthafucka! If \fITZ\fP is unset or
null, a unspecified default timezone shall be used.
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
In \fBwrite\fP mode, if \fB-f\fP aint specified, tha standard output
shall be tha archive formatted accordin ta one of the
specifications up in tha EXTENDED DESCRIPTION section, or some other
implementation-defined format (see \fB-x\fP \fIformat\fP).
.LP
In \fBlist\fP mode, when tha \fB-o\fP \fBlistopt\fP= \fIformat\fP
has been specified, tha selected archive thugz shall be
written ta standard output rockin tha format busted lyrics bout under List Mode
Format Justifications . In
\fBlist\fP mode without tha \fB-o\fP \fBlistopt\fP= \fIformat\fP option,
the table of contentz of tha selected archive members
shall be freestyled ta standard output rockin tha followin format:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIpathname\fP\fB>
\fP
.fi
.RE
.LP
If tha \fB-v\fP option is specified up in \fBlist\fP mode, tha table
of contentz of tha selected archive thugz shall be written
to standard output rockin tha followin formats.
.LP
For pathnames representin hard links ta previous thugz of tha archive:
.sp
.RS
.nf

\fB"%s == %s\\n", <\fP\fIls\fP \fB-l\fP \fIlisting\fP\fB>, <\fP\fIlinkname\fP\fB>
\fP
.fi
.RE
.LP
For all other pathnames:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIls\fP \fB-l\fP \fIlisting\fP\fB>
\fP
.fi
.RE
.LP
where <\fIls\ \fP -l\ \fIlisting\fP> shall be tha format specified
by tha \fIls\fP utilitizzle wit tha \fB-l\fP option. I aint talkin' bout chicken n' gravy biatch. When freestylin pathnames
in dis format, it is unspecified
what is freestyled fo' fieldz fo' which tha underlyin archive format
does not have tha erect shiznit, although tha erect
number of <blank>-separated fieldz shall be written.
.LP
In \fBlist\fP mode, standard output shall not be buffered mo' than
a line at a time.
.SH STDERR
.LP
If \fB-v\fP is specified up in \fBread\fP, \fBwrite\fP, or \fBcopy\fP
modes, \fIpax\fP shall write tha pathnames it processes
to tha standard error output rockin tha followin format:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIpathname\fP\fB>
\fP
.fi
.RE
.LP
These pathnames shall be freestyled as soon as processin is begun on
the file or archive member, n' shall be flushed ta standard
error. Shiiit, dis aint no joke. Da trailin <newline>, which shall not be buffered, is written
when tha file has been read or written.
.LP
If tha \fB-s\fP option is specified, n' tha replacement strang has
a trailin \fB'p'\fP, substitutions shall be freestyled to
standard error up in tha followin format:
.sp
.RS
.nf

\fB"%s >> %s\\n", <\fP\fIoriginal gangsta pathname\fP\fB>, <\fP\fInew pathname\fP\fB>
\fP
.fi
.RE
.LP
In all operatin modez of \fIpax\fP, optionizzle lyrics of unspecified
format concernin tha input archive format n' volume
number, tha number of files, blocks, volumes, n' media parts as well
as other diagnostic lyrics may be freestyled ta standard
error.
.LP
In all formats, fo' both standard output n' standard error, it is
unspecified how tha fuck non-printable charactas up in pathnames or link
names is written.
.LP
When \fIpax\fP is up in \fBread\fP mode or \fBlist\fP mode, rockin the
\fB-x\fP \fBpax\fP archive format, n' a gangbangin' filename, link
name, balla name, or any other field up in a extended header record
cannot be translated from tha \fBpax\fP UTF-8 codeset format to
the codeset n' current locale of tha implementation, \fIpax\fP shall
write a gangbangin' finger-lickin' diagnostic message ta standard error, shall process
the file as busted lyrics bout fo' tha \fB-o\fP \fBinvalid=\fP option, and
then shall process tha next file up in tha archive.
.SH OUTPUT FILES
.LP
In \fBread\fP mode, tha extracted output filez shall be of tha archived
file type. In \fBcopy\fP mode, tha copied output files
shall be tha type of tha file bein copied. Y'all KNOW dat shit, muthafucka! In either mode, existing
filez up in tha destination hierarchy shall be overwritten only
when all permission ( \fB-p\fP), modification time ( \fB-u\fP), and
invalid-value ( \fB-o\fP \fBinvalid\fP=) tests allow
it.
.LP
In \fBwrite\fP mode, tha output file named by tha \fB-f\fP option-argument
shall be a gangbangin' file formatted accordin ta one of the
specifications up in tha EXTENDED DESCRIPTION section, or some other
implementation-defined format.
.SH EXTENDED DESCRIPTION
.SS pax Interchange Format
.LP
A \fIpax\fP archive tape or file produced up in tha \fB-x\fP \fBpax\fP
format shall contain a seriez of blocks. Da physical
layout of tha archive shall be identical ta tha \fBustar\fP format
busted lyrics bout up in ustar Interchange
Format . Each file archived shall be represented by tha following
sequence:
.IP " *" 3
An optionizzle header block wit extended header records. This header
block iz of tha form busted lyrics bout up in pax Header Block, wit a \fItypeflag\fP
value of \fBx\fP or \fBg\fP. Da extended header records,
busted lyrics bout up in pax Extended Header, shall be included as tha data for
this header block.
.LP
.IP " *" 3
A header block dat raps bout tha file fo' realz. Any fieldz up in tha preceding
optionizzle extended header shall override tha associated
fieldz up in dis header block fo' dis file.
.LP
.IP " *" 3
Zero or mo' blocks dat contain tha contentz of tha file.
.LP
.LP
At tha end of tha archive file there shall be two 512-byte blocks
filled wit binary zeros, interpreted as a end-of-archive
indicator.
.LP
A schematic of a example archive wit global extended header records
and two actual filez is shown up in pax
Format Archive Example . In tha example, tha second file up in tha archive
has no extended header precedin it, presumably cuz
it has no need fo' extended attributes.
.TP 7
.sp
.sp
.ce 1
\fBFigure: pax Format Archive Example\fP
.SS pax Header Block
.LP
Da \fBpax\fP header block shall be identical ta tha \fBustar\fP header
block busted lyrics bout up in ustar
Interchange Format, except dat two additionizzle \fItypeflag\fP joints
are defined:
.TP 7
\fBx\fP
Represents extended header recordz fo' tha followin file up in tha archive
(which shall have its own \fBustar\fP header block).
Da format of these extended header recordz shall be as busted lyrics about
in pax Extended Header .
.TP 7
\fBg\fP
Represents global extended header recordz fo' tha followin files
in tha archive. Da format of these extended header records
shall be as busted lyrics bout up in pax Extended Header . Each value shall affect
all subsequent filez dat do
not override dat value up in they own extended header record n' until
another global extended header record is reached that
provides another value fo' tha same field. Y'all KNOW dat shit, muthafucka! Da \fItypeflag\fP \fBg\fP
global headaz should not be used wit interchange media
that could suffer partial data loss up in transportin tha archive.
.sp
.LP
For both of these types, tha \fIsize\fP field shall be tha size of
the extended header recordz up in octets, n' you can put dat on yo' toast. Da other fieldz in
the header block is not meaningful ta dis version of tha \fIpax\fP
utility. But fuck dat shiznit yo, tha word on tha street is dat if dis archive is read by a \fIpax\fP
utilitizzle conformin ta tha ISO\ POSIX-2:1993 standard, tha header block
fieldz is used ta create a regular file dat gotz nuff
the extended header recordz as data. Therefore, header block field
values should be selected ta provide reasonable file access to
this regular file.
.LP
A further difference from tha \fBustar\fP header block is dat data
blocks fo' filez of \fItypeflag\fP 1 (the digit one) (hard
link) may be included, which means dat tha size field may be pimped outer
than zero fo' realz. Archives pimped by \fIpax\fP \fB-o\fP
\fBlinkdata\fP shall include these data blocks wit tha hard links.
.SS pax Extended Header
.LP
A \fBpax\fP extended header gotz nuff joints dat is inappropriate
for tha \fBustar\fP header block cuz of limitations in
that format: fieldz requirin a cold-ass lil characta encodin other than that
busted lyrics bout up in tha ISO/IEC\ 646:1991 standard, fields
representin file attributes not busted lyrics bout up in tha \fBustar\fP header,
and fieldz whose format or length do not fit the
requirementz of tha \fBustar\fP header n' shit. Da joints up in a extended
header add attributes ta tha followin file (or files; peep the
description of tha \fItypeflag\fP \fBg\fP header block) or override
values up in tha followin header block(s), as indicated up in the
followin list of keywords.
.LP
An extended header shall consist of one or mo' records, each constructed
as bigs up:
.sp
.RS
.nf

\fB"%d %s=%s\\n", <\fP\fIlength\fP\fB>, <\fP\fIkeyword\fP\fB>, <\fP\fIvalue\fP\fB>
\fP
.fi
.RE
.LP
Da extended header recordz shall be encoded accordin ta tha ISO/IEC\ 10646-1:2000
standard (UTF-8). The
<\fIlength\fP> field, <blank>, equals sign, n' <newline> shown shall
be limited ta tha portable characta set,
as encoded up in UTF-8. Da <\fIkeyword\fP> n' <\fIvalue\fP> fields
can be any UTF-8 characters. The
<\fIlength\fP> field shall be tha decimal length of tha extended header
record up in octets, includin tha trailing
<newline>.
.LP
Da <\fIkeyword\fP> field shall be one of tha entries from tha following
list or a keyword provided as a implementation
extension. I aint talkin' bout chicken n' gravy biatch. Keywordz consistin entirely of lowercase letters, digits,
and periodz is reserved fo' future standardization. I aint talkin' bout chicken n' gravy biatch fo' realz. A
keyword shall not include a equals sign. I aint talkin' bout chicken n' gravy biatch. (In tha followin list,
the notations "file(s)" or "block(s)" is used ta acknowledge
that a keyword affects tha followin single file afta a \fItypeflag\fP
\fBx\fP extended header yo, but possibly multiple files
afta \fItypeflag\fP \fBg\fP fo' realz. Any requirements up in tha list fo' \fIpax\fP
to include a record when up in \fBwrite\fP or \fBcopy\fP
mode shall apply only when such a record has not already been provided
all up in tha use of tha \fB-o\fP option. I aint talkin' bout chicken n' gravy biatch. When used in
\fBcopy\fP mode, \fIpax\fP shall behave as if a archive had been
created wit applicable extended header recordz n' then
extracted.)
.TP 7
\fBatime\fP
Da file access time fo' tha followin file(s), equivalent ta the
value of tha \fIst_atime\fP gangmember of tha \fBstat\fP
structure fo' a gangbangin' file, as busted lyrics bout by tha \fIstat\fP() function. I aint talkin' bout chicken n' gravy biatch. The
access time shall be
restored if tha process has tha appropriate privilege required to
do so. Da format of tha <\fIvalue\fP> shall be as
busted lyrics bout up in pax Extended Header File Times .
.TP 7
\fBcharset\fP
Da name of tha characta set used ta encode tha data up in tha following
file(s). Da entries up in tha followin table is defined
to refer ta known standards; additionizzle names may be agreed on between
the originator n' recipient. 
.TS C
center; l2 l.
\fB<value>\fP	\fBFormal Standard\fP
ISO-IR 646 1990	ISO/IEC 646:1990
ISO-IR 8859 1 1998	ISO/IEC 8859-1:1998
ISO-IR 8859 2 1999	ISO/IEC 8859-2:1999
ISO-IR 8859 3 1999	ISO/IEC 8859-3:1999
ISO-IR 8859 4 1998	ISO/IEC 8859-4:1998
ISO-IR 8859 5 1999	ISO/IEC 8859-5:1999
ISO-IR 8859 6 1999	ISO/IEC 8859-6:1999
ISO-IR 8859 7 1987	ISO/IEC 8859-7:1987
ISO-IR 8859 8 1999	ISO/IEC 8859-8:1999
ISO-IR 8859 9 1999	ISO/IEC 8859-9:1999
ISO-IR 8859 10 1998	ISO/IEC 8859-10:1998
ISO-IR 8859 13 1998	ISO/IEC 8859-13:1998
ISO-IR 8859 14 1998	ISO/IEC 8859-14:1998
ISO-IR 8859 15 1999	ISO/IEC 8859-15:1999
ISO-IR 10646 2000	ISO/IEC 10646:2000
ISO-IR 10646 2000 UTF-8	ISO/IEC 10646, UTF-8 encoding
BINARY	None.
.TE
.LP
Da encodin is included up in a extended header fo' shiznit only;
when \fIpax\fP is used as busted lyrics bout in
IEEE\ Std\ 1003.1-2001, it shall not translate tha file data into
any other encoding. Da \fBBINARY\fP entry indicates
unencoded binary data.
.LP
When used up in \fBwrite\fP or \fBcopy\fP mode, it is implementation-defined
whether \fIpax\fP includes a \fBcharset\fP
extended header record fo' a gangbangin' file.
.TP 7
\fBcomment\fP
A seriez of charactas used as a cold-ass lil comment fo' realz. All charactas up in tha <\fIvalue\fP>
field shall be ignored by \fIpax\fP.
.TP 7
\fBctime\fP
Da file creation time fo' tha followin file(s), equivalent ta the
value of tha \fIst_ctime\fP gangmember of tha \fBstat\fP
structure fo' a gangbangin' file, as busted lyrics bout by tha \fIstat\fP() function. I aint talkin' bout chicken n' gravy biatch. The
creation time shall be
restored if tha process has tha appropriate privilege required to
do so. Da format of tha <\fIvalue\fP> shall be as
busted lyrics bout up in pax Extended Header File Times .
.TP 7
\fBgid\fP
Da crew ID of tha crew dat owns tha file, expressed as a thugged-out decimal
number rockin digits from tha ISO/IEC\ 646:1991
standard. Y'all KNOW dat shit, muthafucka! This record shall override tha \fIgid\fP field up in tha following
header block(s). When used up in \fBwrite\fP or
\fBcopy\fP mode, \fIpax\fP shall include a \fIgid\fP extended header
record fo' each file whose crew ID is pimped outa than 2097151
(octal 7777777).
.TP 7
\fBgname\fP
Da crew of tha file(s), formatted as a crew name up in tha crew database.
This record shall override tha \fIgid\fP and
\fIgname\fP fieldz up in tha followin header block(s), n' any \fIgid\fP
extended header record. Y'all KNOW dat shit, muthafucka! When used up in \fBread\fP,
\fBcopy\fP, or \fBlist\fP mode, \fIpax\fP shall translate tha name
from tha UTF-8 encodin up in tha header record ta tha character
set appropriate fo' tha crew database on tha receivin system. If
any of tha UTF-8 charactas cannot be translated, n' if the
\fB-o\fP \fBinvalid=\fP UTF-8 option aint specified, tha thangs up in dis biatch
are implementation-defined. Y'all KNOW dat shit, muthafucka! When used up in \fBwrite\fP or
\fBcopy\fP mode, \fIpax\fP shall include a \fBgname\fP extended header
record fo' each file whose crew name cannot be
represented entirely wit tha lettas n' digitz of tha portable character
set.
.TP 7
\fBlinkpath\fP
Da pathname of a link bein pimped ta another file, of any type,
previously archived. Y'all KNOW dat shit, muthafucka! This record shall override the
\fIlinkname\fP field up in tha followin \fBustar\fP header block(s).
Da followin \fBustar\fP header block shall determine the
type of link pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If \fItypeflag\fP of tha followin header block
is 1, it shall be a hard link. If \fItypeflag\fP is 2, it
shall be a symbolic link n' tha \fBlinkpath\fP value shall be the
contentz of tha symbolic link. Da \fIpax\fP utilitizzle shall
translate tha name of tha link (contentz of tha symbolic link) from
the UTF-8 encodin ta tha characta set appropriate fo' the
local file system. When used up in \fBwrite\fP or \fBcopy\fP mode, \fIpax\fP
shall include a \fBlinkpath\fP extended header record
for each link whose pathname cannot be represented entirely wit the
thugz of tha portable characta set other than NUL.
.TP 7
\fBmtime\fP
Da file modification time of tha followin file(s), equivalent to
the value of tha \fIst_mtime\fP gangmember of tha \fBstat\fP
structure fo' a gangbangin' file, as busted lyrics bout up in tha \fIstat\fP() function. I aint talkin' bout chicken n' gravy biatch. This
record shall override
the \fImtime\fP field up in tha followin header block(s). Da modification
time shall be restored if tha process has tha appropriate
privilege required ta do so. Da format of tha <\fIvalue\fP> shall
be as busted lyrics bout up in pax
Extended Header File Times .
.TP 7
\fBpath\fP
Da pathname of tha followin file(s). This record shall override
the \fIname\fP n' \fIprefix\fP fieldz up in tha following
header block(s). Da \fIpax\fP utilitizzle shall translate tha pathname
of tha file from tha UTF-8 encodin ta tha characta set
appropriate fo' tha local file system. 
.LP
When used up in \fBwrite\fP or \fBcopy\fP mode, \fIpax\fP shall include
a \fIpath\fP extended header record fo' each file whose
pathname cannot be represented entirely wit tha thugz of tha portable
characta set other than NUL.
.TP 7
\fBrealtime.\fP\fIany\fP
Da keywordz prefixed by "realtime." is reserved fo' future standardization.
.TP 7
\fBsecurity.\fP\fIany\fP
Da keywordz prefixed by "security." is reserved fo' future standardization.
.TP 7
\fBsize\fP
Da size of tha file up in octets, expressed as a thugged-out decimal number using
digits from tha ISO/IEC\ 646:1991 standard. Y'all KNOW dat shit, muthafucka! This record
shall override tha \fIsize\fP field up in tha followin header block(s).
When used up in \fBwrite\fP or \fBcopy\fP mode, \fIpax\fP
shall include a \fIsize\fP extended header record fo' each file with
a size value pimped outa than 8589934591 (octal
77777777777).
.TP 7
\fBuid\fP
Da user ID of tha file baller, expressed as a thugged-out decimal number using
digits from tha ISO/IEC\ 646:1991 standard. Y'all KNOW dat shit, muthafucka! This record
shall override tha \fIuid\fP field up in tha followin header block(s).
When used up in \fBwrite\fP or \fBcopy\fP mode, \fIpax\fP
shall include a \fIuid\fP extended header record fo' each file whose
balla ID is pimped outa than 2097151 (octal 7777777).
.TP 7
\fBuname\fP
Da balla of tha followin file(s), formatted as a user name up in the
user database. This record shall override tha \fIuid\fP
and \fIuname\fP fieldz up in tha followin header block(s), n' any \fIuid\fP
extended header record. Y'all KNOW dat shit, muthafucka! When used up in \fBread\fP,
\fBcopy\fP, or \fBlist\fP mode, \fIpax\fP shall translate tha name
from tha UTF-8 encodin up in tha header record ta tha character
set appropriate fo' tha user database on tha receivin system. If
any of tha UTF-8 charactas cannot be translated, n' if the
\fB-o\fP \fBinvalid=\fP UTF-8 option aint specified, tha thangs up in dis biatch
are implementation-defined. Y'all KNOW dat shit, muthafucka! When used up in \fBwrite\fP or
\fBcopy\fP mode, \fIpax\fP shall include a \fBuname\fP extended header
record fo' each file whose user name cannot be
represented entirely wit tha lettas n' digitz of tha portable character
set.
.sp
.LP
If tha <\fIvalue\fP> field is zero length, it shall delete any header
block field, previously entered extended header
value, or global extended header value of tha same name.
.LP
If a keyword up in a extended header record (or up in a \fB-o\fP option-argument)
overrides or deletes a cold-ass lil correspondin field up in the
\fBustar\fP header block, \fIpax\fP shall ignore tha contentz of that
header block field.
.LP
Unlike tha \fBustar\fP header block fields, NULs shall not delimit
<\fIvalue\fP>s; all charactas within the
<\fIvalue\fP> field shall be considered data fo' tha field. Y'all KNOW dat shit, muthafucka! None of
the length limitationz of tha \fBustar\fP header block
fieldz up in ustar Header Block shall apply ta tha extended header records.
.SS pax Extended Header Keyword Precedence
.LP
This section raps bout tha precedence up in which tha various header
recordz n' fieldz n' command line options is selected to
apply ta a gangbangin' file up in tha archive. When \fIpax\fP is used up in \fBread\fP
or \fBlist\fP modes, it shall determine a gangbangin' file attribute in
the followin sequence:
.IP " 1." 4
If \fB-o\fP \fBdelete=\fP \fIkeyword-prefix\fP is used, tha affected
attributes shall be determined from step 7., if
applicable, or ignored otherwise.
.LP
.IP " 2." 4
If \fB-o\fP \fIkeyword\fP:= is used, tha affected attributes shall
be ignored.
.LP
.IP " 3." 4
If \fB-o\fP \fIkeyword\fP \fB:=\fP \fIvalue\fP is used, tha affected
attribute shall be assigned tha value.
.LP
.IP " 4." 4
If there be a \fItypeflag\fP \fBx\fP extended header record, tha affected
attribute shall be assigned the
<\fIvalue\fP>. When extended header recordz conflict, tha last one
given up in tha header shall take precedence.
.LP
.IP " 5." 4
If \fB-o\fP \fIkeyword\fP \fB=\fP \fIvalue\fP is used, tha affected
attribute shall be assigned tha value.
.LP
.IP " 6." 4
If there be a \fItypeflag\fP \fBg\fP global extended header record,
the affected attribute shall be assigned the
<\fIvalue\fP>. When global extended header recordz conflict, tha last
one given up in tha global header shall take
precedence.
.LP
.IP " 7." 4
Otherwise, tha attribute shall be determined from tha \fBustar\fP
header block.
.LP
.SS pax Extended Header File Times
.LP
Da \fIpax\fP utilitizzle shall write a \fBmtime\fP record fo' each file
in \fBwrite\fP or \fBcopy\fP modes if tha file's
modification time cannot be represented exactly up in tha \fBustar\fP
header logical record busted lyrics bout up in ustar Interchange Format . This
can occur if tha time is outta \fBustar\fP range, or if tha file
system
of tha underlyin implementation supports non-integer time granularities
and tha time aint a integer n' shiznit fo' realz. All of these time records
shall be formatted as a thugged-out decimal representation of tha time up in seconds
since tha Epoch. If a period ( \fB'.'\fP ) decimal point
characta is present, tha digits ta tha right of tha point shall represent
the unitz of a subsecond timin granularity, where the
first digit is tenthz of a second n' each subsequent digit be a tenth
of tha previous digit. In \fBread\fP or \fBcopy\fP mode,
the \fIpax\fP utilitizzle shall truncate tha time of a gangbangin' file ta tha top billin
value dat aint pimped outa than tha input header file time.
In \fBwrite\fP or \fBcopy\fP mode, tha \fIpax\fP utilitizzle shall output
a time exactly if it can be represented exactly as a
decimal number, n' otherwise shall generate only enough digits so
that tha same time shall be recovered if tha file is extracted
on a system whose underlyin implementation supports tha same ol' dirty time
granularity.
.SS ustar Interchange Format
.LP
A \fBustar\fP archive tape or file shall contain a seriez of logical
records. Each logical record shall be a gangbangin' fixed-size logical
record of 512 octets (see below) fo' realz. Although dis format may be thought
of as bein stored on 9-track industry-standard 12.7 mm (0.5
in) magnetic tape, other typez of transportable media is not excluded.
Each file archived shall be represented by a header logical
record dat raps bout tha file, followed by zero or mo' logical records
that give tha contentz of tha file fo' realz. At tha end of the
archive file there shall be two 512-octet logical recordz filled with
binary zeros, interpreted as a end-of-archive indicator.
.LP
Da logical recordz may be grouped fo' physical I/O operations, as
busted lyrics bout under tha \fB-b\fP \fIblocksize\fP n' \fB-x\fP
\fBustar\fP options. Each crew of logical recordz may be written
with a single operation equivalent ta tha \fIwrite\fP() function.
On magnetic tape, tha result of dis write shall be a single tape
physical
block. Da last physical block shall always be tha full size, so logical
recordz afta tha two zero logical recordz may contain
undefined data.
.LP
Da header logical record shall be structured as shown up in tha following
table fo' realz. All lengths n' offsets is up in decimal.
.br
.sp
.ce 1
\fBTable: ustar Header Block\fP
.TS C
center; l l l.
\fBField Name\fP	\fBOctet Offset\fP	\fBLength (in Octets)\fP
\fIname\fP	0	100
\fImode\fP	100	8
\fIuid\fP	108	8
\fIgid\fP	116	8
\fIsize\fP	124	12
\fImtime\fP	136	12
\fIchksum\fP	148	8
\fItypeflag\fP	156	1
\fIlinkname\fP	157	100
\fImagic\fP	257	6
\fIversion\fP	263	2
\fIuname\fP	265	32
\fIgname\fP	297	32
\fIdevmajor\fP	329	8
\fIdevminor\fP	337	8
\fIprefix\fP	345	155
.TE
.LP
All charactas up in tha header logical record shall be represented in
the coded characta set of tha ISO/IEC\ 646:1991
standard. Y'all KNOW dat shit, muthafucka! For maximum portabilitizzle between implementations, names should
be selected from charactas represented by tha portable
filename characta set as octets wit da most thugged-out dope bit zero.
If a implementation supports tha use of charactas outside of
slash n' tha portable filename characta set up in names fo' files,
users, n' groups, one or mo' implementation-defined encodings
of these charactas shall be provided fo' interchange purposes.
.LP
But fuck dat shiznit yo, tha word on tha street is dat tha \fIpax\fP utilitizzle shall never create filenames on the
local system dat cannot be accessed via tha procedures
busted lyrics bout up in IEEE\ Std\ 1003.1-2001. If a gangbangin' filename is found on the
medium dat would create a invalid filename, it is
implementation-defined whether tha data from tha file is stored on
the file hierarchy n' under what tha fuck name it is stored. Y'all KNOW dat shit, muthafucka! The
\fIpax\fP utilitizzle may chizzle ta ignore these filez as long as it produces
an error indicatin dat tha file is bein ignored.
.LP
Each field within tha header logical record is contiguous; dat is,
there is no paddin used. Y'all KNOW dat shit, muthafucka! Each characta on tha archive
medium shall be stored contiguously.
.LP
Da fieldz \fImagic\fP, \fIuname\fP, n' \fIgname\fP is character
strings each terminated by a NUL character n' shit. Da fields
\fIname\fP, \fIlinkname\fP, n' \fIprefix\fP is NUL-terminated character
strings except when all charactas up in tha array
contain non-NUL charactas includin tha last character n' shit. Da \fIversion\fP
field is two octets containin tha characters
\fB"00"\fP (zero-zero). Da \fItypeflag\fP gotz nuff a single character.
All other fieldz is leadin zero-filled octal numbers
usin digits from tha ISO/IEC\ 646:1991 standard IRV. Each numeric
field is terminated by one or mo' <space> or NUL
characters.
.LP
Da \fIname\fP n' tha \fIprefix\fP fieldz shall produce tha pathname
of tha file fo' realz. A freshly smoked up pathname shall be formed, if
\fIprefix\fP aint a empty strang (its first characta aint NUL),
by concatenatin \fIprefix\fP (up ta tha straight-up original gangsta NUL
character), a slash character, n' \fIname\fP; otherwise, \fIname\fP
is used ridin' solo. In either case, \fIname\fP is terminated at
the first NUL character n' shit. If \fIprefix\fP begins wit a NUL character,
it shall be ignored. Y'all KNOW dat shit, muthafucka! In dis manner, pathnamez of at most
256 charactas can be supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If a pathname do not fit up in the
space provided, \fIpax\fP shall notify tha user of tha error,
and shall not store any part of tha file-header or data-on tha medium.
.LP
Da \fIlinkname\fP field, busted lyrics bout below, shall not use tha \fIprefix\fP
to produce a pathname fo' realz. As such, a \fIlinkname\fP is
limited ta 100 characters. If tha name do not fit up in tha space provided,
\fIpax\fP shall notify tha user of tha error, n' shall
not attempt ta store tha link on tha medium.
.LP
Da \fImode\fP field serves up 12 bits encoded up in tha ISO/IEC\ 646:1991
standard octal digit representation. I aint talkin' bout chicken n' gravy biatch. Da encoded
bits shall represent tha followin joints:
.br
.sp
.ce 1
\fBTable: ustar \fImode\fP Field\fP
.TS C
center; l1 l1 lw(37).
\fBBit Value\fP	\fBIEEE\ Std\ 1003.1-2001 Bit\fP	T{
.na
\fBDescription\fP
.ad
T}
04000	S_ISUID	T{
.na
Set UID on execution.
.ad
T}
02000	S_ISGID	T{
.na
Set GID on execution.
.ad
T}
01000	<reserved>	T{
.na
Reserved fo' future standardization.
.ad
T}
00400	S_IRUSR	T{
.na
Read permission fo' file balla class.
.ad
T}
00200	S_IWUSR	T{
.na
Write permission fo' file balla class.
.ad
T}
00100	S_IXUSR	T{
.na
Execute/search permission fo' file balla class.
.ad
T}
00040	S_IRGRP	T{
.na
Read permission fo' file crew class.
.ad
T}
00020	S_IWGRP	T{
.na
Write permission fo' file crew class.
.ad
T}
00010	S_IXGRP	T{
.na
Execute/search permission fo' file crew class.
.ad
T}
00004	S_IROTH	T{
.na
Read permission fo' file other class.
.ad
T}
00002	S_IWOTH	T{
.na
Write permission fo' file other class.
.ad
T}
00001	S_IXOTH	T{
.na
Execute/search permission fo' file other class.
.ad
T}
.TE
.LP
When appropriate privilege is required ta set one of these mode bits,
and tha user restorin tha filez from tha archive do not
have tha appropriate privilege, tha mode bits fo' which tha user do
not have appropriate privilege shall be ignored. Y'all KNOW dat shit, muthafucka! Some of the
mode bits up in tha archive format is not mentioned elsewhere up in this
volume of IEEE\ Std\ 1003.1-2001. If tha implementation
does not support dem bits, they may be ignored.
.LP
Da \fIuid\fP n' \fIgid\fP fieldz is tha user n' crew ID of the
balla n' crew of tha file, respectively.
.LP
Da \fIsize\fP field is tha size of tha file up in octets, n' you can put dat on yo' toast. If tha \fItypeflag\fP
field is set ta specify a gangbangin' file ta be of type 1
(a link) or 2 (a symbolic link), tha \fIsize\fP field shall be specified
as zero. If tha \fItypeflag\fP field is set ta specify a
file of type 5 (directory), tha \fIsize\fP field shall be interpreted
as busted lyrics bout under tha definizzle of dat record type. No
data logical recordz is stored fo' types 1, 2, or 5. If tha \fItypeflag\fP
field is set ta 3 (characta special file), 4 (block
special file), or 6 (FIFO), tha meanin of tha \fIsize\fP field is
unspecified by dis volume of IEEE\ Std\ 1003.1-2001,
and no data logical recordz shall be stored on tha medium fo' realz. Additionally,
for type 6, tha \fIsize\fP field shall be ignored when
reading. If tha \fItypeflag\fP field is set ta any other value, the
number of logical recordz freestyled followin tha header shall
be ( \fIsize\fP+511)/512, ignorin any fraction up in tha result of the
division.
.LP
Da \fImtime\fP field shall be tha modification time of tha file at
the time dat shiznit was archived. Y'all KNOW dat shit, muthafucka! Well shiiiit, it is tha ISO/IEC\ 646:1991
standard representation of tha octal value of tha modification time
obtained from tha \fIstat\fP() function.
.LP
Da \fIchksum\fP field shall be tha ISO/IEC\ 646:1991 standard IRV
representation of tha octal value of tha simple sum of
all octets up in tha header logical record. Y'all KNOW dat shit, muthafucka! Each octet up in tha header
shall be treated as a unsigned value. These joints shall be
added ta a unsigned integer, initialized ta zero, tha precision of
which aint less than 17 bits, n' you can put dat on yo' toast. When calculatin tha checksum,
the \fIchksum\fP field is treated as if it was all spaces.
.LP
Da \fItypeflag\fP field specifies tha type of file archived. Y'all KNOW dat shit, muthafucka! If a
particular implementation do not recognize tha type, or
the user aint gots appropriate privilege ta create dat type,
the file shall be extracted as if it was a regular file if the
file type is defined ta git a meanin fo' tha \fIsize\fP field that
could cause data logical recordz ta be freestyled on tha medium
(see tha previous description fo' \fIsize\fP). If conversion ta a
regular file occurs, tha \fIpax\fP utilitizzle shall produce an
error indicatin dat tha conversion took place fo' realz. All of tha \fItypeflag\fP
fieldz shall be coded up in tha ISO/IEC\ 646:1991
standard IRV:
.TP 7
\fB0\fP
Represents a regular file. For backwards-compatibility, a \fItypeflag\fP
value of binary zero ( \fB'\\0'\fP ) should be
recognized as meanin a regular file when extractin filez from the
archive fo' realz. Archives freestyled wit dis version of tha archive file
format create regular filez wit a \fItypeflag\fP value of tha ISO/IEC\ 646:1991
standard IRV \fB'0'\fP .
.TP 7
\fB1\fP
Represents a gangbangin' file linked ta another file, of any type, previously
archived. Y'all KNOW dat shit, muthafucka! Such filez is identified by each file havin the
same thang n' file serial number n' shit. Da linked-to name is specified
in tha \fIlinkname\fP field wit a NUL-characta terminator if
it is less than 100 octets up in length.
.TP 7
\fB2\fP
Represents a symbolic link. Da contentz of tha symbolic link shall
be stored up in tha \fIlinkname\fP field.
.TP 7
\fB3,4\fP
Represent characta special filez n' block special filez respectively.
In dis case tha \fIdevmajor\fP n' \fIdevminor\fP
fieldz shall contain shiznit definin tha device, tha format of
which is unspecified by dis volume of
IEEE\ Std\ 1003.1-2001. Implementations may map tha thang justifications
to they own local justification or may ignore
the entry.
.TP 7
\fB5\fP
Specifies a gangbangin' finger-lickin' directory or subdirectory. On systems where disk allocation
is performed on a gangbangin' finger-lickin' directory basis, tha \fIsize\fP
field shall contain tha maximum number of octets (which may be rounded
to tha nearest disk block allocation unit) dat the
directory may hold. Y'all KNOW dat shit, muthafucka! A \fIsize\fP field of zero indicates no such limiting.
Systems dat do not support limitin up in dis manner
should ignore tha \fIsize\fP field.
.TP 7
\fB6\fP
Specifies a FIFO special file. Note dat tha archivin of a FIFO file
archives tha existence of dis file n' not its
contents.
.TP 7
\fB7\fP
Reserved ta represent a gangbangin' file ta which a implementation has associated
some high-performizzle attribute. Implementations without
such extensions should treat dis file as a regular file (type 0).
.TP 7
\fBA-Z\fP
Da lettas \fB'A'\fP ta \fB'Z'\fP, inclusive, is reserved fo' custom
implementations fo' realz. All other joints is reserved
for future versionz of IEEE\ Std\ 1003.1-2001.
.sp
.LP
Attempts ta archive a socket rockin \fBustar\fP interchange format
shall produce a gangbangin' finger-lickin' diagnostic message yo. Handlin of other file
types is implementation-defined.
.LP
Da \fImagic\fP field is tha justification dat dis archive was output
in dis archive format. If dis field gotz nuff
\fBustar\fP (the five charactas from tha ISO/IEC\ 646:1991 standard
IRV shown followed by NUL), tha \fIuname\fP and
\fIgname\fP fieldz shall contain tha ISO/IEC\ 646:1991 standard IRV
representation of tha balla n' crew of tha file,
respectively (truncated ta fit, if necessary). When tha file is restored
by a privileged, protection-preservin version of the
utility, tha user n' crew databases shall be scanned fo' these names.
If found, tha user n' crew IDs contained within these
filez shall be used rather than tha joints contained within tha \fIuid\fP
and \fIgid\fP fields.
.SS cpio Interchange Format
.LP
Da octet-oriented \fBcpio\fP archive format shall be a series of
entries, each comprisin a header dat raps bout tha file,
the name of tha file, n' then tha contentz of tha file.
.LP
An archive may be recorded as a seriez of fixed-size blockz of octets.
This blockin shall be used only ta make physical I/O
more efficient. Da last crew of blocks shall always be all up in tha full
size.
.LP
For tha octet-oriented \fBcpio\fP archive format, tha individual entry
information shall be up in tha order indicated and
busted lyrics bout by tha followin table; peep also tha \fI<cpio.h>\fP header.
.br
.sp
.ce 1
\fBTable: Octet-Oriented cpio Archive Entry\fP
.TS C
center; l2 l2 l.
\fBHeader Field Name\fP	\fBLength (in Octets)\fP	\fBInterpreted as\fP
\fIc_magic\fP	6	Octal number
\fIc_dev\fP	6	Octal number
\fIc_ino\fP	6	Octal number
\fIc_mode\fP	6	Octal number
\fIc_uid\fP	6	Octal number
\fIc_gid\fP	6	Octal number
\fIc_nlink\fP	6	Octal number
\fIc_rdev\fP	6	Octal number
\fIc_mtime\fP	11	Octal number
\fIc_namesize\fP	6	Octal number
\fIc_filesize\fP	11	Octal number
\fBFilename Field Name\fP	\fBLength\fP	\fBInterpreted as\fP
\fIc_name\fP	\fIc_namesize\fP	Pathname string
\fBFile Data Field Name\fP	\fBLength\fP	\fBInterpreted as\fP
\fIc_filedata\fP	\fIc_filesize\fP	Data
.TE
.SS cpio Header
.LP
For each file up in tha archive, a header as defined previously shall
be written. I aint talkin' bout chicken n' gravy biatch. Da shiznit up in tha header fieldz is written
as streamz of tha ISO/IEC\ 646:1991 standard charactas interpreted
as octal numbers. Da octal numbers shall be extended to
the necessary length by appendin tha ISO/IEC\ 646:1991 standard IRV
zeros at da most thugged-out-significant-digit end of tha number; the
result is freestyled ta da most thugged-out-significant digit of tha stream of octets
first. Da fieldz shall be interpreted as bigs up:
.TP 7
\fIc_magic\fP
Identify tha archive as bein a transportable archive by containing
the identifyin value \fB"070707"\fP .
.TP 7
\fIc_dev\fP,\ \fIc_ino\fP
Gotz Nuff joints dat uniquely identify tha file within tha archive
(that is, no filez contain tha same pair of \fIc_dev\fP and
\fIc_ino\fP joints unless they is links ta tha same file). Da joints
shall be determined up in a unspecified manner.
.TP 7
\fIc_mode\fP
Gotz Nuff tha file type n' access permissions as defined up in tha following
table.
.br
.sp
.ce 1
\fBTable: Values fo' cpio c_mode Field\fP
.TS C
center; l2 l2 l.
\fBFile Permissions Name\fP	\fBValue\fP	\fBIndicates\fP
C_IRUSR	000400	Read by baller
C_IWUSR	000200	Write by baller
C_IXUSR	000100	Execute by baller
C_IRGRP	000040	Read by group
C_IWGRP	000020	Write by group
C_IXGRP	000010	Execute by group
C_IROTH	000004	Read by others
C_IWOTH	000002	Write by others
C_IXOTH	000001	Execute by others
C_ISUID	004000	Set \fIuid\fP
C_ISGID	002000	Set \fIgid\fP
C_ISVTX	001000	Reserved
\fBFile Type Name\fP	\fBValue\fP	\fBIndicates\fP
C_ISDIR	040000	Directory
C_ISFIFO	010000	FIFO
C_ISREG	0100000	Regular file
C_ISLNK	0120000	Symbolic link
C_ISBLK	060000	Block special file
C_ISCHR	020000	Characta special file
C_ISSOCK	0140000	Socket
C_ISCTG	0110000	Reserved
.TE
.LP
Directories, FIFOs, symbolic links, n' regular filez shall be supported
on a system conformin ta dis volume of
IEEE\ Std\ 1003.1-2001; additionizzle joints defined previously is reserved
for compatibilitizzle wit existin systems.
Additionizzle file types may be supported; however, such filez should
not be freestyled ta archives intended ta be transported ta other
systems.
.TP 7
\fIc_uid\fP
Gotz Nuff tha user ID of tha baller.
.TP 7
\fIc_gid\fP
Gotz Nuff tha crew ID of tha group.
.TP 7
\fIc_nlink\fP
Gotz Nuff tha number of links referencin tha file all up in tha time the
archive was pimped.
.TP 7
\fIc_rdev\fP
Gotz Nuff implementation-defined shiznit fo' characta or block
special files.
.TP 7
\fIc_mtime\fP
Gotz Nuff tha sickest fuckin time of modification of tha file all up in tha time the
archive was pimped.
.TP 7
\fIc_namesize\fP
Gotz Nuff tha length of tha pathname, includin tha terminatin NUL
character.
.TP 7
\fIc_filesize\fP
Gotz Nuff tha length of tha file up in octets, n' you can put dat on yo' toast. This shall be tha length
of tha data section followin tha header structure.
.sp
.SS cpio Filename
.LP
Da \fIc_name\fP field shall contain tha pathname of tha file. The
length of dis field up in octets is tha value of
\fIc_namesize\fP.
.LP
If a gangbangin' filename is found on tha medium dat would create a invalid
pathname, it is implementation-defined whether tha data from
the file is stored on tha file hierarchy n' under what tha fuck name it is
stored.
.LP
All charactas shall be represented up in tha ISO/IEC\ 646:1991 standard
IRV. For maximum portabilitizzle between implementations,
names should be selected from charactas represented by tha portable
filename characta set as octets wit da most thugged-out dope bit
zero. If a implementation supports tha use of charactas outside
the portable filename characta set up in names fo' files, users,
and groups, one or mo' implementation-defined encodingz of these
charactas shall be provided fo' interchange purposes yo. However,
the \fIpax\fP utilitizzle shall never create filenames on tha local system
that cannot be accessed via tha procedures busted lyrics about
previously up in dis volume of IEEE\ Std\ 1003.1-2001. If a gangbangin' filename
is found on tha medium dat would create a invalid
filename, it is implementation-defined whether tha data from tha file
is stored on tha local file system n' under what tha fuck name it is
stored. Y'all KNOW dat shit, muthafucka! Da \fIpax\fP utilitizzle may chizzle ta ignore these filez as
long as it produces a error indicatin dat tha file is being
ignored.
.SS cpio File Data
.LP
Peepin \fIc_name\fP, there shall be \fIc_filesize\fP octets of
data. Interpretation of such data occurs up in a manner
dependent on tha file. If \fIc_filesize\fP is zero, no data shall
be contained up in \fIc_filedata\fP.
.LP
When restorin from a archive:
.IP " *" 3
If tha user aint gots tha appropriate privilege ta create a gangbangin' file
of tha specified type, \fIpax\fP shall ignore tha entry
and write a error message ta standard error.
.LP
.IP " *" 3
Only regular filez have data ta be restored. Y'all KNOW dat shit, muthafucka! Presumin a regular file
meets any selection criteria dat might be imposed on the
format-readin utilitizzle by tha user, such data shall be restored.
.LP
.IP " *" 3
If a user aint gots appropriate privilege ta set a particular
mode flag, tha flag shall be ignored. Y'all KNOW dat shit, muthafucka! Some of tha mode flags
in tha archive format is not mentioned elsewhere up in dis volume of
IEEE\ Std\ 1003.1-2001. If tha implementation do not
support dem flags, they may be ignored.
.LP
.SS cpio Special Entries
.LP
FIFO special files, directories, n' tha traila shall be recorded
with \fIc_filesize\fP equal ta zero. For other special
files, \fIc_filesize\fP is unspecified by dis volume of IEEE\ Std\ 1003.1-2001.
Da header fo' tha next file entry up in the
archive shall be freestyled directly afta tha last octet of tha file
entry precedin it fo' realz. A header denotin tha filename
\fBTRAILER!!!\fP shall indicate tha end of tha archive; tha contents
of octets up in tha last block of tha archive followin such a
header is undefined.
.SH EXIT STATUS
.LP
Da followin exit joints shall be returned:
.TP 7
\ 0
All filez was processed successfully.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
If \fIpax\fP cannot create a gangbangin' file or a link when readin a archive
or cannot find a gangbangin' file when freestylin a archive, or cannot
preserve tha user ID, crew ID, or file mode when tha \fB-p\fP option
is specified, a gangbangin' finger-lickin' diagnostic message shall be freestyled to
standard error n' a non-zero exit status shall be returned yo, but processing
shall continue. In tha case where \fIpax\fP cannot
create a link ta a gangbangin' file, \fIpax\fP shall not, by default, create a
second copy of tha file.
.LP
If tha extraction of a gangbangin' file from a archive is prematurely terminated
by a signal or error, \fIpax\fP may have only partially
extracted tha file or (if tha \fB-n\fP option was not specified) may
have extracted a gangbangin' file of tha same name as dat specified by
the user yo, but which aint tha file tha user wanted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. Additionally,
the file modez of extracted directories may have additionizzle bits
from tha S_IRWXU mask set as well as incorrect modification n' access
times.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
Da \fB-p\fP (privileges) option was invented ta reconcile differences
between oldschool \fItar\fP n' \fIcpio\fP
implementations. In particular, tha two utilitizzles use \fB-m\fP in
diametrically opposed ways. Da \fB-p\fP option also serves up a
consistent meanz of extendin tha ways up in which future file attributes
can be addressed, like fuckin fo' enhanced securitizzle systems or
high-performizzle filez fo' realz. Although it may seem complex, there be straight-up
two modes dat is most commonly used:
.TP 7
\fB-p\ e\fP
``Preserve every last muthafuckin thang". This would be used by tha oldschool superuser,
someone wit all tha appropriate privileges, to
preserve all aspectz of tha filez as they is recorded up in tha archive.
Da \fBe\fP flag is tha sum of \fBo\fP n' \fBp\fP, and
other implementation-defined attributes.
.TP 7
\fB-p\ p\fP
``Preserve" tha file mode bits, n' you can put dat on yo' toast. This would be used by tha user with
regular privileges whoz ass wished ta preserve aspectz of the
file other than tha ballership. Da file times is preserved by default,
but two other flags is offered ta disable these n' use
the time of extraction.
.sp
.LP
Da one pathname per line format of standard input precludes pathnames
containin <newline>s fo' realz. Although such pathnames
violate tha portable filename guidelines, they may exist n' their
presence may inhibit usage of \fIpax\fP within shell scripts.
This problem is inherited from oldschool archive programs. Da problem
can be avoided by listin filename arguments on tha command
line instead of on standard input.
.LP
It be almost certain dat appropriate privileges is required for
\fIpax\fP ta accomplish partz of dis volume of
IEEE\ Std\ 1003.1-2001. Right back up in yo muthafuckin ass. Specifically, bustin filez of type block
special or characta special, restorin file access
times unless tha filez is owned by tha user (the \fB-t\fP option),
or preservin file baller, group, n' mode (the \fB-p\fP
option) all probably require appropriate privileges.
.LP
In \fBread\fP mode, implementations is permitted ta overwrite files
when tha archive has multiple thugz wit tha same name.
This may fail if permissions on tha straight-up original gangsta version of tha file do not
permit it ta be overwritten.
.LP
Da \fBcpio\fP n' \fBustar\fP formats can only support filez up to
8589934592 bytes (8 * 2^30) up in size.
.SH EXAMPLES
.LP
Da followin command:
.sp
.RS
.nf

\fBpax -w -f /dev/rmt/1m .
\fP
.fi
.RE
.LP
copies tha contentz of tha current directory ta tape drive 1, medium
densitizzle (assumin oldschool System V thang naming
procedures-the oldschool BSD thang name would be \fB/dev/rmt9\fP).
.LP
Da followin commands:
.sp
.RS
.nf

\fBmkdir\fP \fInewdir\fP\fBpax -rw\fP \fIolddir newdir\fP
.fi
.RE
.LP
copy tha \fIolddir\fP directory hierarchy ta \fInewdir\fP.
.sp
.RS
.nf

\fBpax -r -s ',^//*usr//*,,' -f a.pax
\fP
.fi
.RE
.LP
readz tha archive \fBa.pax\fP, wit all filez rooted up in \fB/usr\fP
in tha archive extracted relatizzle ta tha current
directory.
.LP
Usin tha option:
.sp
.RS
.nf

\fB-o listopt="%M %(atime)T %(size)D %(name)s"
\fP
.fi
.RE
.LP
overrides tha default output description up in Standard Output n' instead
writes:
.sp
.RS
.nf

\fB-rw-rw--- Jan 12 15:53 1492 /usr/foo/bar
\fP
.fi
.RE
.LP
Usin tha options:
.sp
.RS
.nf

\fB-o listopt='%L\\t%(size)D\\n%.7' \\
-o listopt='(name)s\\n%(ctime)T\\n%T'
\fP
.fi
.RE
.LP
overrides tha default output description up in Standard Output n' instead
writes:
.sp
.RS
.nf

\fB/usr/foo/bar -> /tmp   1492
/usr/fo
Jan 12 1991
Jan 31 15:53
\fP
.fi
.RE
.SH RATIONALE
.LP
Da \fIpax\fP utilitizzle was freshly smoked up fo' tha ISO\ POSIX-2:1993 standard.
It represents a laid back compromise between advocates of
the oldschool \fItar\fP n' \fIcpio\fP utilities.
.LP
A fundamenstrual difference between \fIcpio\fP n' \fItar\fP was up in the
way directories was treated. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da \fIcpio\fP utilitizzle did
not treat directories differently from other files, n' ta select
a directory n' its contents required dat each file up in the
hierarchy be explicitly specified. Y'all KNOW dat shit, muthafucka! For \fItar\fP, a gangbangin' finger-lickin' directory matched
every file up in tha file hierarchy it rooted.
.LP
Da \fIpax\fP utilitizzle offers both intercourses; by default, directories
map tha fuck into tha file hierarchy they root. Da \fB-d\fP
option causes \fIpax\fP ta skip any file not explicitly referenced,
as \fIcpio\fP historically done did. Y'all KNOW dat shit, muthafucka! Da \fItar\fP \fB-\fP
\fIstyle\fP behavior was chosen as tha default cuz dat shiznit was believed
that dis was tha mo' common usage n' cuz \fItar\fP
is tha mo' commonly available intercourse, as dat shiznit was historically provided
on both System V n' BSD implementations.
.LP
Da data interchange format justification up in dis volume of IEEE\ Std\ 1003.1-2001
requires dat processes with
"appropriate privileges" shall always restore tha ballershizzle n' permissions
of extracted filez exactly as archived. Y'all KNOW dat shit, muthafucka! If viewed
from tha phat equivalence between superuser n' "appropriate privileges",
there is two problems wit dis requirement.
First, playas hustlin as superusers may unknowingly set fucked up permissions
on extracted files. Right back up in yo muthafuckin ass. Second, it is needlessly limiting,
in dat superusers cannot extract filez n' own dem as superuser
unless tha archive was pimped by tha superuser n' shit. (It should be
noted dat restoration of ballerships n' permissions fo' tha superuser,
by default, is oldschool practice up in \fIcpio\fP yo, but not
in \fItar\fP.) In order ta avoid these two problems, tha \fIpax\fP
specification has a additionizzle "privilege" mechanism, the
\fB-p\fP option. I aint talkin' bout chicken n' gravy biatch. Only a \fIpax\fP invocation wit tha privileges needed,
and which has tha \fB-p\fP option set rockin the
\fBe\fP justification character, has tha "appropriate privilege" to
restore full ballershizzle n' permission shiznit.
.LP
Note also dat dis volume of IEEE\ Std\ 1003.1-2001 requires that
the file ballershizzle n' access permissions shall be
set, on extraction, up in tha same fashizzle as tha \fIcreat\fP() function
when provided wit the
mode stored up in tha archive. This means dat tha file creation mask
of tha user be applied ta tha file permissions.
.LP
Users should note dat directories may be pimped by \fIpax\fP while
extractin filez wit permissions dat is different from
those dat existed all up in tha time tha archive was pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. When extracting
sensitizzle shiznit tha fuck into a gangbangin' finger-lickin' directory hierarchy dat no
longer exists, playas is encouraged ta set they file creation mask
appropriately ta protect these filez durin extraction.
.LP
Da table of contents output is freestyled ta standard output ta facilitate
pipeline processing.
.LP
An early proposal had hard links displayin fo' all pathnames. This
was removed cuz it complicates tha output of tha case
where \fB-v\fP aint specified n' do not match oldschool \fIcpio\fP
usage. Da hard-link shiznit be available up in the
\fB-v\fP display.
.LP
Da description of tha \fB-l\fP option allows implementations ta make
hard links ta symbolic links.
IEEE\ Std\ 1003.1-2001 do not specify any way ta create a hard link
to a symbolic link yo, but nuff implementations provide
this capabilitizzle as a extension. I aint talkin' bout chicken n' gravy biatch. If there be hard links ta symbolic
links when a archive is pimped, tha implementation is
required ta archive tha hard link up in tha archive (unless \fB-H\fP
or \fB-L\fP is specified). When up in \fBread\fP mode n' in
\fBcopy\fP mode, implementations supportin hard links ta symbolic
links should use dem when appropriate.
.LP
Da archive formats inherited from tha POSIX.1-1990 standard have
certain restrictions dat done been brought along from
historical usage. For example, there be restrictions on tha length
of pathnames stored up in tha archive. When \fIpax\fP is used in
\fBcopy\fP( \fB-rw\fP) mode (copyin directory hierarchies), tha ability
to use extensions from tha \fB-x\fP \fBpax\fP format
overcomes these restrictions.
.LP
Da default \fIblocksize\fP value of 5120 bytes fo' \fIcpio\fP was
selected cuz it is one of tha standard block-size
values fo' \fIcpio\fP, set when tha \fB-B\fP option is specified.
(Da other default block-size value fo' \fIcpio\fP is 512
bytes, n' dis was considered ta be too small.) Da default block
value of 10240 bytes fo' \fItar\fP was selected cuz dat is
the standard block-size value fo' BSD \fItar\fP. Da maximum block
size of 32256 bytes (2**15-512 bytes)
is tha phattest multiple of 512 bytes dat fits tha fuck into a signed 16-bit
tape controlla transfer regista n' shit. There is known limitations
in some oldschool systems dat would prevent larger blocks from being
accepted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Oldschool joints was chosen ta improve
compatibilitizzle wit oldschool scripts rockin \fIdd\fP or similar utilities
to manipulate
archives fo' realz. Also, default block sizes fo' any file type other than character
special file has been deleted from dis volume of
IEEE\ Std\ 1003.1-2001 as unimportant n' not likely ta affect the
structure of tha resultin archive.
.LP
Implementations is permitted ta modify tha block-size value based
on tha archive format or tha thang ta which tha archive is
bein written. I aint talkin' bout chicken n' gravy biatch. This is ta provide implementations wit tha opportunity
to take advantage of special typez of devices, n' it should
not be used without a pimped out deal of consideration as it almost certainly
decreases archive portability.
.LP
Da intended use of tha \fB-n\fP option was ta permit extraction of
one or mo' filez from tha archive without processin the
entire archive. This was viewed by tha standard pimpers as offering
significant performizzle advantages over historical
implementations. Da \fB-n\fP option up in early proposals had three
effects; tha straight-up original gangsta was ta cause special charactas up in patterns
to not be treated specially. Da second was ta cause only tha first
file dat matched a pattern ta be extracted. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Da third was to
cause \fIpax\fP ta write a gangbangin' finger-lickin' diagnostic message ta standard error when
no file was found matchin a specified pattern, so check it before ya wreck it. I aint talkin' bout chicken n' gravy biatch. Only the
second behavior is retained by dis volume of IEEE\ Std\ 1003.1-2001,
for nuff reasons. First, it is up in general not
acceptable fo' a single option ta have multiple effects, n' you can put dat on yo' toast. Right back up in yo muthafuckin ass. Second, the
abilitizzle ta make pattern matchin charactas act as normal
charactas is useful fo' partz of \fIpax\fP other than file extraction.
Third, a gangbangin' finer degree of control over tha special
charactas is useful cuz playas may wish ta normalize only a single
special characta up in a single filename. Fourth, given a more
general escape mechanism, tha previous behavior of tha \fB-n\fP option
can be easily obtained rockin tha \fB-s\fP option or a \fIsed\fP script.
Finally, freestylin a gangbangin' finger-lickin' diagnostic message when a pattern specified by
the user is
unmatched by any file is useful behavior up in all cases.
.LP
In dis version, tha \fB-n\fP was removed from tha \fBcopy\fP mode
synopsiz of \fIpax\fP; it is inapplicable cuz there
are no pattern operandz specified up in dis mode.
.LP
There be another method than \fIpax\fP fo' copyin subtrees up in IEEE\ Std\ 1003.1-2001
busted lyrics bout as part of tha \fIcp\fP utility. Both methodz is historical
practice: \fIcp\fP
provides a simpler, mo' intuitizzle intercourse, while \fIpax\fP offers
a finer granularitizzle of control. Each serves up additional
functionalitizzle ta tha other; up in particular, \fIpax\fP maintains the
hard-link structure of tha hierarchy while \fIcp\fP do not. Well shiiiit, it is
the intention of tha standard pimpers dat tha thangs up in dis biatch be similar
(using
appropriate option combinations up in both utilities). Da thangs up in dis biatch are
not required ta be identical; there seemed insufficient bust to
applications ta balizzle tha hang-up of implementations havin to
guarantee dat tha thangs up in dis biatch would be exactly identical.
.LP
A single archive may span mo' than one file. Well shiiiit, it is suggested that
implementations provide informatizzle lyrics ta tha user on
standard error whenever tha archive file is chizzled.
.LP
Da \fB-d\fP option (do not create intermediate directories not listed
in tha archive) found up in early proposals was originally
provided as a cold-ass lil complement ta tha phat \fB-d\fP option of \fIcpio\fP.
It has been deleted.
.LP
Da \fB-s\fP option up in early proposals specified a subset of tha substitution
command from tha \fIed\fP utilitizzle fo' realz. As there was no reason fo' only
a subset ta be supported, tha \fB-s\fP option is now
compatible wit tha current \fIed\fP justification. I aint talkin' bout chicken n' gravy biatch. Right back up in yo muthafuckin ass. Since tha delimiter
can be any non-null
character, tha followin usage wit single spaces is valid:
.sp
.RS
.nf

\fBpax -s " foo bar " ...
\fP
.fi
.RE
.LP
Da \fB-t\fP description is worded so as ta note dat dis may cause
the access time update caused by some other activity
(which occurs while tha file is bein read) ta be overwritten.
.LP
Da default behavior of \fIpax\fP wit regard ta file modification
times is tha same ol' dirty as oldschool implementations of
\fItar\fP. Well shiiiit, it aint tha oldschool behavior of \fIcpio\fP.
.LP
Because tha \fB-i\fP option uses \fB/dev/tty\fP, utilitizzles without
a controllin terminal is not able ta use dis option.
.LP
Da \fB-y\fP option, found up in early proposals, has been deleted cuz
a line containin a single period fo' tha \fB-i\fP
option has equivalent functionality. Da special lines fo' tha \fB-i\fP
option (a single period n' tha empty line) is historical
practice up in \fIcpio\fP.
.LP
In early drafts, a \fB-e\fP \fIcharmap\fP option was included ta increase
portabilitizzle of filez between systems rockin different
coded characta sets, n' you can put dat on yo' toast. This option was omitted cuz dat shiznit was apparent
that consensus could not be formed fo' dat shit. In dis version,
the use of UTF-8 should be a adequate substitute.
.LP
Da \fB-k\fP option was added ta address internationistic concerns about
the dangers involved up in tha characta set transformations
of \fB-e\fP (if tha target characta set was different from tha source,
the filenames might be transformed tha fuck into names matching
existin files) n' also was made mo' general ta protect filez transferred
between file systems wit different {NAME_MAX} joints
(truncatin a gangbangin' filename on a smalla system might also inadvertently
overwrite existin files) fo' realz. As stated, it prevents any
overwriting, even if tha target file is olda than tha source. This
version addz mo' granularitizzle of options ta solve dis problem
by introducin tha \fB-o\fP \fBinvalid=\fP option-specifically the
UTF-8 action. I aint talkin' bout chicken n' gravy biatch. (Note dat a existin file dat is named wit a
UTF-8 encodin is still subject ta overwritin up in dis case. Da \fB-k\fP
option closes dat loophole.)
.LP
Some of tha file characteristics referenced up in dis volume of IEEE\ Std\ 1003.1-2001
might not be supported by some
archive formats, n' you can put dat on yo' toast. For example, neither tha \fBtar\fP nor \fBcpio\fP
formats contain tha file access time. For dis reason, the
\fBe\fP justification characta has been provided, intended ta cause
all file characteristics specified up in tha archive ta be
retained.
.LP
It be required dat extracted directories, by default, have their
access n' modification times n' permissions set ta the
values specified up in tha archive. This has obvious problems up in that
the directories is almost certainly modified afta being
extracted n' dat directory permissions may not permit file creation.
One possible solution is ta create directories wit tha mode
specified up in tha archive, as modified by tha \fIumask\fP of tha user,
with sufficient
permissions ta allow file creation. I aint talkin' bout chicken n' gravy biatch fo' realz. Afta all filez done been extracted,
\fIpax\fP would then reset tha access n' modification
times n' permissions as necessary.
.LP
Da list-mode formattin description borrows heavily from tha one
defined by tha \fIprintf\fP utility. But fuck dat shiznit yo, tha word on tha street is dat since there is no separate
operand list ta git conversion arguments,
the format was extended ta allow specifyin tha name of tha conversion
argument as part of tha conversion justification.
.LP
Da \fBT\fP conversion specifier allows time fieldz ta be displayed
in any of tha date formats, n' you can put dat on yo' toast. Unlike tha \fIls\fP utility, \fIpax\fP
does not adjust tha format when tha date is less than six months in
the
past. This make parsin tha output mo' predictable.
.LP
Da \fBD\fP conversion specifier handlez tha mobilitizzle ta display the
major/minor or file size, as wit \fIls\fP, by rockin \fB%-8(\fP\fIsize\fP\fB)D\fP.
.LP
Da \fBL\fP conversion specifier handlez tha \fIls\fP display for
symbolic links.
.LP
Conversion specifiers was added ta generate existin known types
used fo' \fIls\fP.
.SS pax Interchange Format
.LP
Da freshly smoked up POSIX data interchange format was pimped primarily ta satisfy
internationistic concerns dat tha \fBustar\fP and
\fBcpio\fP formats did not provide fo' file, user, n' crew names
encoded up in charactas outside a subset of the
ISO/IEC\ 646:1991 standard. Y'all KNOW dat shit, muthafucka! Da standard pimpers realized that
this freshly smoked up POSIX data interchange format should be hella
extensible cuz there was other requirements they foresaw up in the
near future:
.IP " *" 3
Support internationistic characta encodings n' locale shiznit
.LP
.IP " *" 3
Support securitizzle shiznit (ACLs, n' so on)
.LP
.IP " *" 3
Support future file types, like fuckin realtime or contiguous files
.LP
.IP " *" 3
Include data areas fo' implementation use
.LP
.IP " *" 3
Support systems wit lyrics larger than 32 bits n' timers wit subsecond
granularity
.LP
.LP
Da followin was not goals fo' dis format cuz these is better
handled by separate utilitizzles or is inappropriate fo' a
portable format:
.IP " *" 3
Encryption
.LP
.IP " *" 3
Compression
.LP
.IP " *" 3
Data translation between localez n' codesets
.LP
.IP " *" 3
\fIinode\fP storage
.LP
.LP
Da format chosen ta support tha goals be a extension of tha \fBustar\fP
format. Of tha two formats previously available, only
the \fBustar\fP format was selected fo' extensions cuz:
.IP " *" 3
Dat shiznit was easier ta extend up in a upwards-compatible way. Well shiiiit, it offered version
flags n' header block type fieldz wit room fo' future
standardization. I aint talkin' bout chicken n' gravy biatch. Da \fBcpio\fP format, while possessin a mo' flexible
file namin methodology, could not be extended without
breakin some theoretical implementation or rockin a thugged-out dummy filename
that could be a legitimate filename.
.LP
.IP " *" 3
Industry experience since tha original gangsta " \fItar\fP wars" fought in
developin tha ISO\ POSIX-1 standard has clearly been
in favor of tha \fBustar\fP format, which is generally tha default
output format selected fo' \fIpax\fP implementations on new
systems.
.LP
.LP
Da freshly smoked up format was designed wit one additionizzle goal up in mind: reasonable
behavior when a olda \fItar\fP or \fIpax\fP utility
happened ta read a archive. Right back up in yo muthafuckin ass. Since tha POSIX.1-1990 standard mandated
that a "format-readin utility" had ta treat unrecognized
\fItypeflag\fP joints as regular files, dis allowed tha format to
include all tha extended shiznit up in a pseudo-regular file
that preceded each real file fo' realz. An option is given dat allows tha archive
creator ta set up reasonable names fo' these filez on the
olda systems fo' realz. Also, tha normatizzle text suggests dat reasonable file
access joints be used fo' dis \fBustar\fP header block.
Makin these header filez inaccessible fo' convenient readin and
deletin would not be reasonable. File permissionz of 600 or 700
are suggested.
.LP
Da \fBustar\fP \fItypeflag\fP field was used ta accommodate tha additional
functionalitizzle of tha freshly smoked up format rather than magic
or version cuz tha POSIX.1-1990 standard (and, by reference, the
previous version of \fIpax\fP), mandated tha behavior of the
format-readin utilitizzle when it encountered a unknown \fItypeflag\fP,
but was silent bout tha other two fields.
.LP
Early proposalz of tha straight-up original gangsta revision ta IEEE\ Std\ 1003.1-2001 contained
a proposed archive format dat was based on
compatibilitizzle wit tha standard fo' tape filez (ISO\ 1001, similar
to tha format used historically on nuff mainframes and
minicomputers). This format was overly complex n' required considerable
overhead up in volume n' header records. Furthermore, the
standard pimpers felt dat it would not be aaight ta tha hood
of POSIX pimpers, so dat shiznit was lata chizzled ta be a
format mo' closely related ta oldschool practice on POSIX systems.
.LP
Da prefix n' name split of pathnames up in \fBustar\fP was replaced
by tha single path extended header record for
simplicity.
.LP
Da concept of a global extended header ( \fItypeflag\fP \fBg\fP)
was controversial. It aint nuthin but tha nick nack patty wack, I still gots tha bigger sack. If dis was applied ta a archive being
recorded on magnetic tape, all dem unreadable blocks all up in tha beginning
of tha tape could be a straight-up problem; a utilitizzle attemptin to
extract as nuff filez as possible from a thugged-out damaged archive could lose
a big-ass cementage of file header shiznit up in dis case.
But fuck dat shiznit yo, tha word on tha street is dat if tha archive was on a reliable medium, like fuckin a CD-ROM,
the global extended header offers considerable potential size
reductions by eliminatin redundant shiznit. I aint talkin' bout chicken n' gravy biatch. Thus, tha text warns
against rockin tha global method fo' unreliable media and
provides a method fo' implantin global shiznit up in tha extended
header fo' each file, rather than up in tha \fItypeflag\fP
\fBg\fP records.
.LP
No facilitizzle fo' data translation or filterin on a per-file basis
is included cuz tha standard pimpers could not invent
an intercourse dat would allow dis up in a efficient manner n' shit. If a gangbangin' filter,
like fuckin encryption or compression, is ta be applied ta all
the files, it is mo' efficient ta apply tha filta ta tha entire
archive as a single file. Da standard pimpers considered
interfaces dat would invoke a gangbangin' finger-lickin' dirty-ass shell script fo' each file goin into
or outta tha archive yo, but tha system overhead up in this
approach was considered ta be too high.
.LP
One such approach would be ta have \fBfilter=\fP recordz dat give
a pathname fo' a executable. When tha program is invoked,
the file n' archive would be open fo' standard input/output n' all
the header fieldz would be available as environment variables
or command-line arguments, n' you can put dat on yo' toast. Da standard pimpers did say shit bout such
schemes yo, but they was omitted from
IEEE\ Std\ 1003.1-2001 cuz of concerns bout excessive overhead. Y'all KNOW dat shit, muthafucka! Also,
the program itself would need ta be up in tha archive
if it was ta be used portably.
.LP
There is currently no portable meanz of identifyin tha character
set(s) used fo' a gangbangin' file up in tha file system. Therefore,
\fIpax\fP has not been given a mechanizzle ta generate charset records
automatically. Da only portable meanz of bustin dis is for
the user ta write tha archive rockin tha \fB-o\fP \fBcharset=\fP \fIstring\fP
command line option. I aint talkin' bout chicken n' gravy biatch. This assumes dat all of the
filez up in tha archive use tha same encoding. Da "implementation-defined"
text is included ta allow fo' a system dat can identify
the encodings used fo' each of its files.
.LP
Da table of standardz dat accompanies tha charset record description
is bigged up ta be straight-up limited. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. Only a limited number
of characta set standardz is reasonable fo' maximal interchange.
Any characta set is, of course, possible by prior agreement. It
was suggested dat EBCDIC be listed yo, but dat shiznit was omitted cuz it
is not defined by a gangbangin' formal standard. Y'all KNOW dat shit, muthafucka! Formal standards, n' then
only dem wit reasonably big-ass followings, can be included here,
simply as a matta of practicality. Da <\fIvalue\fP>s
represent namez of officially registered characta sets up in tha format
required by tha ISO\ 2375:1985 standard.
.LP
Da aiiight comma or <blank>-separated list rulez is not followed
in tha case of keyword options ta allow ease of argument
parsin fo' \fIgetopts\fP.
.LP
Further shiznit on characta encodings is up in pax Archive Character
Set Encoding/Decoding
\&.
.LP
Da standard pimpers have reserved keyword name space fo' vendor
extensions. Well shiiiit, it is suggested dat tha format ta be used
is:
.sp
.RS
.nf

\fIVENDOR.keyword\fP
.fi
.RE
.LP
where \fIVENDOR\fP is tha name of tha vendor or organization up in all
uppercase letters. Well shiiiit, it is further suggested dat tha keyword
followin tha period be named differently than any of tha standard
keywordz so dat it could be used fo' future standardization, if
appropriate, by omittin tha \fIVENDOR\fP prefix.
.LP
Da <\fIlength\fP> field up in tha extended header record was included
to make it simpla ta step all up in tha records, even
if a record gotz nuff a unknown format (to a particular \fIpax\fP)
with complex interactionz of special characters. Well shiiiit, it also
provides a minor integritizzle checkpoint within tha recordz ta aid a
program attemptin ta recover filez from a thugged-out damaged archive.
.LP
There is no extended header versionz of tha \fIdevmajor\fP n' \fIdevminor\fP
fieldz cuz tha unspecified format
\fBustar\fP header field should be sufficient. If they is not, vendor-specific
extended keywordz (like fuckin \fIVENDOR.devmajor\fP)
should be used.
.LP
Device n' \fIi\fP-number labelin of filez was not adopted from \fIcpio\fP;
filez is interchanged strictly on a symbolic
name basis, as up in \fBustar\fP.
.LP
Just as wit tha \fBustar\fP format descriptions, tha freshly smoked up format makes
no special arrangements fo' multi-volume archives. Each
of tha \fIpax\fP archive types be assumed ta be inside a single POSIX
file n' splittin dat file over multiple volumes
(diskettes, tape cartridges, n' so on), processin they labels,
and mountin each up in tha proper sequence is considered ta be
implementation details dat cannot be busted lyrics bout portably.
.LP
Da \fBpax\fP format is intended fo' interchange, not only fo' backup
on a single (family of) systems. Well shiiiit, it aint as densely
packed as might be possible fo' backup:
.IP " *" 3
It gotz nuff shiznit as coded charactas dat could be coded in
binary.
.LP
.IP " *" 3
It identifies extended recordz wit name fieldz dat could be omitted
in favor of a gangbangin' fixed-field layout.
.LP
.IP " *" 3
It translates names tha fuck into a portable characta set n' identifies locale-related
information, both of which is probably
unnecessary fo' backup.
.LP
.LP
Da requirements on restorin from a archive is slightly different
from tha oldschool wording, allowin fo' non-monolithic
privilege ta brang forward as much as possible. In particular, attributes
like fuckin "high performizzle file" might be broadly but
not universally granted while set-user-ID or \fIchown\fP() might be
much mo' restricted.
There is no implication up in IEEE\ Std\ 1003.1-2001 dat tha security
information be honored afta it is restored ta tha file
hierarchy, up in spite of what tha fuck might be improperly inferred by tha silence
on dat topic. That be a topic fo' another standard.
.LP
Links is recorded up in tha fashizzle busted lyrics bout here cuz a link can
be ta any file type. Well shiiiit, it is desirable up in general ta be able
to restore part of a archive selectively n' restore all of them
filez straight-up. If tha data aint associated wit each link,
it aint possible ta do all dis bullshit. But fuck dat shiznit yo, tha word on tha street is dat tha data associated wit a
file can be large, n' when selectizzle restoration aint needed,
this can be a thugged-out dope burden. I aint talkin' bout chicken n' gravy biatch. Da archive is structured so that
filez dat have no associated data can always be restored by
the name of any link name of any link, n' tha user may chizzle whether
data is recorded wit each instizzle of a gangbangin' file dat gotz nuff
data. Da format permits mixin of both typez of links up in a single
archive; dis can be done fo' special needs, n' \fIpax\fP is
sposed ta fuckin interpret such archives on input properly, despite the
fact dat there is no \fIpax\fP option dat would force this
mixed case on output. (When \fB-o\fP \fBlinkdata\fP is used, tha output
must contain tha duplicate data yo, but tha implementation
is free ta include it or omit it when \fB-o\fP \fBlinkdata\fP is not
used.)
.LP
Da time joints is included as extended header recordz fo' them
implementations needin mo' than tha eleven octal digits
allowed by tha \fBustar\fP format. Portable file timestamps cannot
be negative. If \fIpax\fP encountas a gangbangin' file wit a negative
timestamp up in \fBcopy\fP or \fBwrite\fP mode, it can reject tha file,
substitute a non-negatizzle timestamp, or generate a
non-portable timestamp wit a leadin \fB'-'\fP . Even though some
implementations can support finer file-time granularities
than seconds, tha normatizzle text requires support only fo' seconds
since tha Epoch cuz tha ISO\ POSIX-1 standard states
them dat way. Da \fBustar\fP format includes only \fImtime\fP; the
new format addz \fIatime\fP n' \fIctime\fP fo' symmetry.
Da \fIatime\fP access time restored ta tha file system is ghon be affected
by tha \fB-p\fP \fBa\fP n' \fB-p\fP \fBe\fP options.
Da \fIctime\fP creation time (actually \fIinode\fP modification time)
is busted lyrics bout wit "appropriate privilege" so dat it can
be ignored when freestylin ta tha file system. POSIX do not provide
a portable means ta chizzle file creation time. Nothang is
intended ta prevent a non-portable implementation of \fIpax\fP from
restorin tha value.
.LP
Da \fIgid\fP, \fIsize\fP, n' \fIuid\fP extended header recordz were
included ta allow expansion beyond tha sizes specified
in tha regular \fItar\fP header n' shit. New file system architectures are
emergin dat will exhaust tha 12-digit size field. Y'all KNOW dat shit, muthafucka! There are
probably not nuff systems requirin mo' than 8 digits fo' user and
group IDs yo, but tha extended header joints was included for
completeness, allowin overrides fo' all of tha decimal joints in
the \fItar\fP header.
.LP
Da standard pimpers intended ta describe tha effectizzle thangs up in dis biatch
of \fIpax\fP wit regard ta file ballerships n' permissions;
implementations is not restricted up in timin or sequencin tha restoration
of such, provided tha thangs up in dis biatch is as specified.
.LP
Much of tha text describin tha extended headaz refers ta use in
" \fBwrite\fP or \fBcopy\fP modes". Da \fBcopy\fP mode
references is cuz of tha normatizzle text: "Da effect of tha copy
shall be as if tha copied filez was freestyled ta a archive file
and then subsequently extracted ...". There is certainly no way to
test whether \fIpax\fP is straight-up generatin tha extended
headaz up in \fBcopy\fP mode yo, but tha effects must be as if it had.
.SS pax Archive Characta Set Encoding/Decoding
.LP
There be a need ta exchange archivez of filez between systemz of different
natizzle codesets, n' you can put dat on yo' toast. Filenames, crew names, n' user
names must be preserved ta tha fullest extent possible when a archive
is read on tha receivin platform. Translation of the
contentz of filez aint within tha scope of tha \fIpax\fP utility.
.LP
There will also be tha need ta represent charactas dat is not available
on tha receivin platform. These unsupported
charactas cannot be automatically folded ta tha local set of characters
due ta tha chizzle of collisions. This could result in
overwritin previous extracted filez from tha archive or pre-existing
filez on tha system.
.LP
For these reasons, tha codeset used ta represent charactas within
the extended header recordz of tha \fIpax\fP archive must be
sufficiently rich ta handle all commonly used characta sets, n' you can put dat on yo' toast. The
fieldz requirin translation include, at a minimum, filenames,
user names, crew names, n' link pathnames. Implementations may wish
to have localized extended keywordz dat use non-portable
characters.
.LP
Da standard pimpers considered tha followin options:
.IP " *" 3
Da archive creator specifies tha well-defined name of tha source
codeset. Da receiver must then recognize tha codeset name and
perform tha appropriate translations ta tha destination codeset.
.LP
.IP " *" 3
Da archive creator includes within tha archive tha characta mapping
table fo' tha source codeset used ta encode extended
header records. Da receiver must then read tha characta mapping
table n' big-ass up tha appropriate translations ta tha destination
codeset.
.LP
.IP " *" 3
Da archive creator translates tha extended header recordz up in the
source codeset tha fuck into a cold-ass lil canonical form. Da receiver must then
perform tha appropriate translations ta tha destination codeset.
.LP
.LP
Da approach dat incorporates tha name of tha source codeset poses
the problem of codeset name registration, n' make the
archive useless ta \fIpax\fP archive decodaz dat do not recognize
that codeset.
.LP
Because partz of a archive may be corrupted, tha standard pimpers
felt dat includin tha characta map of tha source
codeset was too fragile. Da loss of dis one key component could
result up in makin tha entire archive useless. (Da difference
between dis n' tha global extended header decision was dat the
latta has a workaround-duplicatin extended header recordz on
unreliable media-but dis would be too burdensome fo' big-ass character
set maps.)
.LP
Both of tha above approaches also put a undue burden on tha \fIpax\fP
archive receiver ta handle tha cross-thang of all
source n' destination codesets.
.LP
To simplify tha translation from tha source codeset ta tha canonical
form n' from tha canonical form ta tha destination
codeset, tha standard pimpers decided dat tha internal representation
should be a stateless encodin fo' realz. A stateless encodin is
one where each codepoint has tha same ol' dirty meaning, without regard ta the
decoder bein up in a specific state fo' realz. An example of a stateful
encodin would be tha Japanese Shift-JIS; a example of a stateless
encodin would be tha ISO/IEC\ 646:1991 standard
(equivalent ta 7-bit ASCII).
.LP
For these reasons, tha standard pimpers decided ta adopt a cold-ass lil canonical
format fo' tha representation of file shiznit
strings. Da obvious, well-endorsed muthafucka is tha ISO/IEC\ 10646-1:2000
standard (based up in part on Unicode), which can be
used ta represent tha charactaz of virtually all standardized character
sets, n' you can put dat on yo' toast. Da standard pimpers initially agreed upon using
UCS2 (16-bit Unicode) as tha internal representation. I aint talkin' bout chicken n' gravy biatch. This repertoire
of charactas serves up a sufficiently rich set ta represent
all commonly-used codesets.
.LP
But fuck dat shiznit yo, tha word on tha street is dat tha standard pimpers found dat tha 16-bit Unicode representation
had some problems. Well shiiiit, it forced tha issue of
standardizin byte ordering. Da 2-byte length of each characta made
the extended header recordz twice as long fo' tha case of
strings coded entirely from oldschool 7-bit ASCII. For these reasons,
the standard pimpers chose tha UTF-8 defined up in the
ISO/IEC\ 10646-1:2000 standard. Y'all KNOW dat shit, muthafucka! This multi-byte representation encodes
UCS2 or UCS4 charactas reliably n' deterministically,
eliminatin tha need fo' a cold-ass lil canonical byte ordering. In addition, NUL
octets n' other charactas possibly confusin ta POSIX file
systems do not appear, except ta represent theyselves. Dat shiznit was realized
that certain nationistic codesets take up mo' space afta the
encoding, cuz of they placement within tha UCS range; dat shiznit was felt
that tha usefulnizz of tha encodin of tha names outweighs the
disadvantage of size increase fo' file, user, n' crew names.
.LP
Da encodin of UTF-8 be as bigs up:
.sp
.RS
.nf

\fBUCS4 Hex Encodin  UTF-8 Binary Encoding
.sp

00000000-0000007F  0xxxxxxx
00000080-000007FF  110xxxxx 10xxxxxx
00000800-0000FFFF  1110xxxx 10xxxxxx 10xxxxxx
00010000-001FFFFF  11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
00200000-03FFFFFF  111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx
04000000-7FFFFFFF  1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx
\fP
.fi
.RE
.LP
where each \fB'x'\fP represents a lil' bit value from tha characta being
translated.
.SS ustar Interchange Format
.LP
Da description of tha \fBustar\fP format reflects a shitload of enhancements
over pre-1988 versionz of tha oldschool \fItar\fP
utility. Da goal of these chizzlez was not only ta provide tha functional
enhancements desired yo, but also ta retain compatibility
between freshly smoked up n' oldschool versions. This compatibilitizzle has been retained.
Archives freestyled rockin tha oldschool archive format is compatible
with tha freshly smoked up format.
.LP
Implementors should be aware dat tha previous file format did not
include a mechanizzle ta archive directory type files. For this
reason, tha convention of rockin a gangbangin' filename endin wit slash was adopted
to specify a gangbangin' finger-lickin' directory on tha archive.
.LP
Da total size of tha \fIname\fP n' \fIprefix\fP fieldz have been
set ta hook up tha minimum requirements fo' {PATH_MAX}. If a
pathname will fit within tha \fIname\fP field, it is recommended that
the pathname be stored there without tha use of the
\fIprefix\fP field. Y'all KNOW dat shit, muthafucka! Although tha name field is known ta be too small
to contain {PATH_MAX} characters, tha value was not chizzled
in dis version of tha archive file format ta retain backwards-compatibility,
and instead tha prefix was introduced. Y'all KNOW dat shit, muthafucka! Also, cuz
of tha earlier version of tha format, there is no way ta remove the
restriction on tha \fIlinkname\fP field bein limited up in size
to just dat of tha \fIname\fP field.
.LP
Da \fIsize\fP field is required ta be meaningful up in all implementation
extensions, although it could be zero. This is required
so dat tha data blocks can always be properly counted.
.LP
It be suggested dat if thang special filez need ta be represented
that cannot be represented up in tha standard format, dat one
of tha extension types ( \fBA\fP- \fBZ\fP) be used, n' dat tha additional
information fo' tha special file be represented as
data n' be reflected up in tha \fIsize\fP field.
.LP
Attemptin ta restore a special file type, where it is converted to
ordinary data n' conflicts wit a existin filename, need
not be specially detected by tha utility. If run as a ordinary user,
\fIpax\fP should not be able ta overwrite tha entries in,
for example, \fB/dev\fP up in any case (whether tha file is converted
to another type or not). If run as a privileged user, it should
be able ta do so, n' it would be considered a funky-ass bug if it did not.
Da same is legit of ordinary data filez n' similarly named
special files; it is impossible ta anticipate tha needz of tha user
(who could straight-up intend ta overwrite tha file), so the
behavior should be predictable (and thus regular) n' rely on the
protection system as required.
.LP
Da value 7 up in tha \fItypeflag\fP field is intended ta define how
contiguous filez can be stored up in a \fBustar\fP archive.
IEEE\ Std\ 1003.1-2001 do not require tha contiguous file extension,
but do define a standard way of archivin such
filez so dat all conformin systems can interpret these file types
in a meaningful n' consistent manner n' shit. On a system dat do
not support extended file types, tha \fIpax\fP utilitizzle should do the
best it can wit tha file n' go on ta tha next.
.LP
Da file protection modes is dem conventionally used by tha \fIls\fP
utility. This is
extended beyond tha usage up in tha ISO\ POSIX-2 standard ta support
the "shared text" or "sticky" bit. Well shiiiit, it is intended that
the conformizzle document should not document anythang beyond tha existence
of n' support of such a mode. Further extensions are
sposed ta fuckin these bits, particularly wit overloadin tha set-user-ID
and set-group-ID flags.
.SS cpio Interchange Format
.LP
Da reference ta appropriate privilege up in tha \fBcpio\fP format refers
to a error on standard output; tha \fBustar\fP format
does not make comparable statements.
.LP
Da model fo' dis format was tha oldschool System V \fIcpio\fP \fB-c\fP
data interchange format. This model documents the
portable version of tha \fBcpio\fP format n' not tha binary version.
It has tha flexibilitizzle ta transfer data of any type
busted lyrics bout within IEEE\ Std\ 1003.1-2001, yet is extensible ta transfer
data types specific ta extensions beyond
IEEE\ Std\ 1003.1-2001 (for example, contiguous files). Because it
raps bout existin practice, there is no question of
maintainin upwards-compatibility.
.SS cpio Header
.LP
There has been some concern dat tha size of tha \fIc_ino\fP field
of tha header is too lil' small-ass ta handle dem systems dat have
very big-ass \fIinode\fP numbers. But fuck dat shiznit yo, tha word on tha street is dat tha \fIc_ino\fP field in
the header is used strictly as a hard-link resolution mechanism
for archives. Well shiiiit, it aint necessarily tha same value as tha \fIinode\fP
number of tha file up in tha location from which dat file is
extracted.
.LP
Da name \fIc_magic\fP is based on oldschool usage.
.SS cpio Filename
.LP
For most oldschool implementationz of tha \fIcpio\fP utility, {PATH_MAX}
octets can be used ta describe tha pathname without
the addizzle of any other header fieldz (the NUL characta would be
included up in dis count). {PATH_MAX} is tha minimum value for
pathname size, documented as 256 bytes. But fuck dat shiznit yo, tha word on tha street is dat a implementation
may use \fIc_namesize\fP ta determine tha exact length of the
pathname. With tha current description of tha \fI<cpio.h>\fP header,
this pathname
size can be as big-ass as a number dat is busted lyrics bout up in six octal digits.
.LP
Two joints is documented under tha \fIc_mode\fP field joints ta provide
for extensibilitizzle fo' known file types:
.TP 7
\fB0110\ 000\fP
Reserved fo' contiguous files. Da implementation may treat tha rest
of tha shiznit fo' dis archive like a regular file.
If dis file type is undefined, tha implementation may create the
file as a regular file.
.sp
.LP
This serves up fo' extensibilitizzle of tha \fBcpio\fP format while allowing
for tha mobilitizzle ta read oldschool archives. Filez of an
unknown type may be read as "regular files" on some implementations.
On a system dat do not support extended file types, the
\fIpax\fP utilitizzle should do tha dopest it can wit tha file n' go on
to tha next.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIShell Command Language\fP, \fIcp\fP, \fIed\fP, \fIgetopts\fP,
\fIls\fP, \fIprintf\fP(), tha Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<cpio.h>\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIchown\fP(), \fIcreat\fP(), \fImkdir\fP(), \fImkfifo\fP(), \fIstat\fP(),
\fIutime\fP(), \fIwrite\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
