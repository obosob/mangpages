.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "<dirent.h>" 0P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" <dirent.h> 
.SH NAME
dirent.h \- format of directory entries
.SH SYNOPSIS
.LP
\fB#include <dirent.h>\fP
.SH DESCRIPTION
.LP
Da internal format of directories is unspecified.
.LP
Da \fI<dirent.h>\fP header shall define tha followin type:
.TP 7
\fBDIR\fP
A type representin a gangbangin' finger-lickin' directory stream.
.sp
.LP
It shall also define tha structure \fBdirent\fP which shall include
the followin members:
.sp
.RS
.nf

\fB
ino_t  d_ino      \fP File serial number n' shit. \fB

char   d_name[]   \fP Name of entry. \fB
\fP
.fi
.RE
.LP
Da type \fBino_t\fP shall be defined as busted lyrics bout up in \fI<sys/types.h>\fP
\&. 
.LP
Da characta array \fId_name\fP iz of unspecified size yo, but tha number
of bytes precedin tha terminatin null byte shall not
exceed {NAME_MAX}.
.LP
Da followin shall be declared as functions n' may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fBint            closedir(DIR *);
DIR           *opendir(const char *);
struct dirent *readdir(DIR *);

int            readdir_r(DIR *restrict, struct dirent *restrict,
                   struct dirent **restrict);

void           rewinddir(DIR *);

void           seekdir(DIR *, long);
long           telldir(DIR *);

\fP
.fi
.RE
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
Hype similar ta dat up in tha \fI<dirent.h>\fP header is contained
in a gangbangin' file \fI<sys/dir.h>\fP up in 4.2 BSD and
4.3 BSD. Da equivalent up in these implementationz of \fBstruct dirent\fP
from dis volume of IEEE\ Std\ 1003.1-2001 is
\fBstruct direct\fP. Da filename was chizzled cuz tha name \fI<sys/dir.h>\fP
was also used up in earlier implementations
to refer ta definitions related ta tha olda access method; dis produced
name conflicts, n' you can put dat on yo' toast. Da name of tha structure was chizzled
because dis volume of IEEE\ Std\ 1003.1-2001 do not straight-up
define what tha fuck is up in tha structure, so it could be different
on some implementations from \fBstruct direct\fP.
.LP
Da name of a array of \fBchar\fP of a unspecified size should not
be used as a lvalue. Use of:
.sp
.RS
.nf

\fBsizeof(d_name)
\fP
.fi
.RE
.LP
is incorrect; use:
.sp
.RS
.nf

\fBstrlen(d_name)
\fP
.fi
.RE
.LP
instead.
.LP
Da array of \fBchar\fP \fId_name\fP aint a gangbangin' fixed size. Implementations
may need ta declare \fBstruct dirent\fP wit an
array size fo' \fId_name\fP of 1 yo, but tha actual number of characters
provided matches (or only slightly exceeds) tha length of
the filename.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<sys/types.h>\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIclosedir\fP(), \fIopendir\fP(), \fIreaddir\fP(), \fIreaddir_r\fP(),
\fIrewinddir\fP(), \fIseekdir\fP(), \fItelldir\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
