.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "<unistd.h>" 0P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" <unistd.h> 
.SH NAME
unistd.h \- standard symbolic constants n' types
.SH SYNOPSIS
.LP
\fB#include <unistd.h>\fP
.SH DESCRIPTION
.LP
Da \fI<unistd.h>\fP header defines miscellaneous symbolic constants
and types, n' declares miscellaneous functions. The
actual jointz of tha constants is unspecified except as shown. I aint talkin' bout chicken n' gravy biatch. The
contentz of dis header is shown below.
.SS Version Test Macros
.LP
Da followin symbolic constants shall be defined:
.TP 7
_POSIX_VERSION
Integer value indicatin version of IEEE\ Std\ 1003.1 (C-language
binding) ta which tha implementation conforms. For
implementations conformin ta IEEE\ Std\ 1003.1-2001, tha value shall
be 200112L.
.TP 7
_POSIX2_VERSION
Integer value indicatin version of tha Shell n' Utilitizzles volume
of IEEE\ Std\ 1003.1 ta which tha implementation
conforms. For implementations conformin ta IEEE\ Std\ 1003.1-2001,
the value shall be 200112L.
.sp
.LP
Da followin symbolic constant shall be defined only if tha implementation
supports tha XSI option; peep \fIXSI Conformance\fP .
.TP 7
_XOPEN_VERSION
.sp
Integer value indicatin version of tha X/Open Portabilitizzle Guide to
which tha implementation conforms. Da value shall be 600. 
.sp
.SS Constants fo' Options n' Option Groups
.LP
Da followin symbolic constants, if defined up in \fI<unistd.h>\fP,
shall gotz a value of -1, 0, or pimped outer, unless
otherwise specified below. If these is undefined, tha \fIfpathconf\fP(),
\fIpathconf\fP(), or \fIsysconf\fP() functions can be
used ta determine whether tha option is provided fo' a particular
invocation of tha application.
.LP
If a symbolic constant is defined wit tha value -1, tha option is
not supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time yo. Headers, data types, n' function intercourses
required only fo' tha option need not be supplied. Y'all KNOW dat shit, muthafucka! An application
that attempts ta use anythang associated only wit tha option is
considered ta be requirin a extension.
.LP
If a symbolic constant is defined wit a value pimped outa than zero,
the option shall always be supported when tha application is
executed. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. All headers, data types, n' functions shall be present
and shall operate as specified.
.LP
If a symbolic constant is defined wit tha value zero, all headers,
data types, n' functions shall be present. Da application
can check at runtime ta peep whether tha option is supported by calling
\fIfpathconf\fP(), \fIpathconf\fP(), or \fIsysconf\fP() wit tha indicated
\fIname\fP parameter.
.LP
Unless explicitly specified otherwise, tha behavior of functions associated
with a unsupported option is unspecified, n' an
application dat uses such functions without first checkin \fIfpathconf\fP(),
\fIpathconf\fP(), or \fIsysconf\fP() is considered ta be
requirin a extension.
.LP
For conformizzle requirements, refer ta \fIConformance\fP .
.TP 7
_POSIX_ADVISORY_INFO
.sp
Da implementation supports tha Advisory Hype option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_ASYNCHRONOUS_IO
.sp
Da implementation supports tha Asynchronous Input n' Output option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_BARRIERS
.sp
Da implementation supports tha Barriers option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has
a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_CHOWN_RESTRICTED
Da use of \fIchown\fP() n' \fIfchown\fP() is
restricted ta a process wit appropriate privileges, n' ta changing
the crew ID of a gangbangin' file only ta tha effectizzle crew ID of the
process or ta one of its supplementary crew IDs. This symbol shall
always be set ta a value other than -1.
.TP 7
_POSIX_CLOCK_SELECTION
.sp
Da implementation supports tha Clock Selection option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_CPUTIME
.sp
Da implementation supports tha Process CPU-Time Clocks option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_FSYNC
.sp
Da implementation supports tha File Synchronization option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_IPV6
Da implementation supports tha IPv6 option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has a
value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_JOB_CONTROL
Da implementation supports thang control. This symbol shall always
be set ta a value pimped outa than zero.
.TP 7
_POSIX_MAPPED_FILES
.sp
Da implementation supports tha Memory Mapped Filez option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_MEMLOCK
.sp
Da implementation supports tha Process Memory Lockin option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_MEMLOCK_RANGE
.sp
Da implementation supports tha Range Memory Lockin option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_MEMORY_PROTECTION
.sp
Da implementation supports tha Memory Protection option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_MESSAGE_PASSING
.sp
Da implementation supports tha Message Passin option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_MONOTONIC_CLOCK
.sp
Da implementation supports tha Monotonic Clock option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_NO_TRUNC
Pathname components longer than {NAME_MAX} generate a error. Shiiit, dis aint no joke. This
symbol shall always be set ta a value other than -1.
.TP 7
_POSIX_PRIORITIZED_IO
.sp
Da implementation supports tha Prioritized Input n' Output option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_PRIORITY_SCHEDULING
.sp
Da implementation supports tha Process Schedulin option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_RAW_SOCKETS
.sp
Da implementation supports tha Raw Sockets option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_READER_WRITER_LOCKS
.sp
Da implementation supports tha Read-Write Locks option. I aint talkin' bout chicken n' gravy biatch. This be always
set ta a value pimped outa than zero if tha Threadz option is
supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. If dis symbol has a value other than -1 or 0, it shall
have tha value 200112L. 
.TP 7
_POSIX_REALTIME_SIGNALS
.sp
Da implementation supports tha Realtime Signals Extension option.
If dis symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_REGEXP
Da implementation supports tha Regular Expression Handlin option.
This symbol shall always be set ta a value pimped outa than
zero.
.TP 7
_POSIX_SAVED_IDS
Each process has a saved set-user-ID n' a saved set-group-ID. This
symbol shall always be set ta a value pimped outa than zero.
.TP 7
_POSIX_SEMAPHORES
.sp
Da implementation supports tha Semaphores option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_SHARED_MEMORY_OBJECTS
.sp
Da implementation supports tha Shared Memory Objects option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_SHELL
Da implementation supports tha POSIX shell. This symbol shall always
be set ta a value pimped outa than zero.
.TP 7
_POSIX_SPAWN
.sp
Da implementation supports tha Spawn option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has a
value other than -1 or 0, it shall have tha value 200112L. 
.TP 7
_POSIX_SPIN_LOCKS
.sp
Da implementation supports tha Spin Locks option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_SPORADIC_SERVER
.sp
Da implementation supports tha Process Sporadic Server option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_SYNCHRONIZED_IO
.sp
Da implementation supports tha Synchronized Input n' Output option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_THREAD_ATTR_STACKADDR
.sp
Da implementation supports tha Thread Stack Address Attribute option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_THREAD_ATTR_STACKSIZE
.sp
Da implementation supports tha Thread Stack Size Attribute option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_THREAD_CPUTIME
.sp
Da implementation supports tha Thread CPU-Time Clocks option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_THREAD_PRIO_INHERIT
.sp
Da implementation supports tha Thread Prioritizzle Inheritizzle option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_THREAD_PRIO_PROTECT
.sp
Da implementation supports tha Thread Prioritizzle Protection option.
If dis symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_THREAD_PRIORITY_SCHEDULING
.sp
Da implementation supports tha Thread Execution Schedulin option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX_THREAD_PROCESS_SHARED
.sp
Da implementation supports tha Thread Process-Shared Synchronization
option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has a value other than -1 or 0, it
shall have tha value 200112L. 
.TP 7
_POSIX_THREAD_SAFE_FUNCTIONS
.sp
Da implementation supports tha Thread-Safe Functions option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_THREAD_SPORADIC_SERVER
.sp
Da implementation supports tha Thread Sporadic Server option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX_THREADS
.sp
Da implementation supports tha Threadz option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has
a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_TIMEOUTS
.sp
Da implementation supports tha Timeouts option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has
a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_TIMERS
.sp
Da implementation supports tha Timers option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has
a value other than -1 or 0, it shall have tha value 200112L. 
.TP 7
_POSIX_TRACE
.sp
Da implementation supports tha Trace option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has a
value other than -1 or 0, it shall have tha value 200112L. 
.TP 7
_POSIX_TRACE_EVENT_FILTER
.sp
Da implementation supports tha Trace Event Filta option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_TRACE_INHERIT
.sp
Da implementation supports tha Trace Inherit option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_TRACE_LOG
.sp
Da implementation supports tha Trace Log option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has
a value other than -1 or 0, it shall have tha value 200112L.
.TP 7
_POSIX_TYPED_MEMORY_OBJECTS
.sp
Da implementation supports tha Typed Memory Objects option. I aint talkin' bout chicken n' gravy biatch. If this
symbol has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX_VDISABLE
This symbol shall be defined ta be tha value of a cold-ass lil characta dat shall
disable terminal special characta handlin as busted lyrics bout in
\fI<termios.h>\fP . This symbol shall always be set ta a value other
than -1.
.TP 7
_POSIX2_C_BIND
Da implementation supports tha C-Language Bindin option. I aint talkin' bout chicken n' gravy biatch. This symbol
shall always have tha value 200112L.
.TP 7
_POSIX2_C_DEV
.sp
Da implementation supports tha C-Language Development Utilitizzles option.
If dis symbol has a value other than -1 or 0, it shall
have tha value 200112L. 
.TP 7
_POSIX2_CHAR_TERM
Da implementation supports at least one terminal type.
.TP 7
_POSIX2_FORT_DEV
.sp
Da implementation supports tha FORTRAN Development Utilitizzles option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX2_FORT_RUN
.sp
Da implementation supports tha FORTRAN Runtime Utilitizzles option.
If dis symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX2_LOCALEDEF
Da implementation supports tha creation of localez by tha \fIlocaledef\fP
utility. If
this symbol has a value other than -1 or 0, it shall have tha value
200112L.
.TP 7
_POSIX2_PBS
.sp
Da implementation supports tha Batch Environment Skillz n' Utilities
option. I aint talkin' bout chicken n' gravy biatch. If dis symbol has a value other than -1 or 0, it
shall have tha value 200112L. 
.TP 7
_POSIX2_PBS_ACCOUNTING
.sp
Da implementation supports tha Batch Accountin option. I aint talkin' bout chicken n' gravy biatch. If dis symbol
has a value other than -1 or 0, it shall have tha value
200112L. 
.TP 7
_POSIX2_PBS_CHECKPOINT
.sp
Da implementation supports tha Batch Checkpoint/Restart option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX2_PBS_LOCATE
.sp
Da implementation supports tha Locate Batch Thang Request option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX2_PBS_MESSAGE
.sp
Da implementation supports tha Batch Thang Message Request option.
If dis symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX2_PBS_TRACK
.sp
Da implementation supports tha Track Batch Thang Request option. I aint talkin' bout chicken n' gravy biatch. If
this symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_POSIX2_SW_DEV
.sp
Da implementation supports tha Software Development Utilitizzles option.
If dis symbol has a value other than -1 or 0, it shall have
the value 200112L. 
.TP 7
_POSIX2_UPE
.sp
Da implementation supports tha User Portabilitizzle Utilitizzles option.
If dis symbol has a value other than -1 or 0, it shall have the
value 200112L. 
.TP 7
_V6_ILP32_OFF32
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP, \fBlong\fP, \fBpointer\fP, and
\fBoff_t\fP types.
.TP 7
_V6_ILP32_OFSTDG
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP, \fBlong\fP, n' \fBpointer\fP types and
an \fBoff_t\fP type rockin at least 64 bits.
.TP 7
_V6_LP64_OFF64
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP n' 64-bit \fBlong\fP, \fBpointer\fP, and
\fBoff_t\fP types.
.TP 7
_V6_LPBIG_OFSTDG
Da implementation serves up a C-language compilation environment with
an \fBint\fP type rockin at least 32 bits n' \fBlong\fP,
\fBpointer\fP, n' \fBoff_t\fP types rockin at least 64 bits.
.TP 7
_XBS5_ILP32_OFF32 (\fBLEGACY\fP)
.sp
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP, \fBlong\fP, \fBpointer\fP, and
\fBoff_t\fP types. 
.TP 7
_XBS5_ILP32_OFSTDG (\fBLEGACY\fP)
.sp
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP, \fBlong\fP, n' \fBpointer\fP types and
an \fBoff_t\fP type rockin at least 64 bits, n' you can put dat on yo' toast. 
.TP 7
_XBS5_LP64_OFF64 (\fBLEGACY\fP)
.sp
Da implementation serves up a C-language compilation environment with
32-bit \fBint\fP n' 64-bit \fBlong\fP, \fBpointer\fP, and
\fBoff_t\fP types. 
.TP 7
_XBS5_LPBIG_OFSTDG (\fBLEGACY\fP)
.sp
Da implementation serves up a C-language compilation environment with
an \fBint\fP type rockin at least 32 bits n' \fBlong\fP,
\fBpointer\fP, n' \fBoff_t\fP types rockin at least 64 bits, n' you can put dat on yo' toast. 
.TP 7
_XOPEN_CRYPT
.sp
Da implementation supports tha X/Open Encryption Option Group.
.TP 7
_XOPEN_ENH_I18N
Da implementation supports tha Issue 4, Version 2 Enhanced Internationalization
Option Group. This symbol shall always be set ta a
value other than -1.
.TP 7
_XOPEN_LEGACY
Da implementation supports tha Legacy Option Group.
.TP 7
_XOPEN_REALTIME
Da implementation supports tha X/Open Realtime Option Group.
.TP 7
_XOPEN_REALTIME_THREADS
Da implementation supports tha X/Open Realtime Threadz Option Group.
.TP 7
_XOPEN_SHM
Da implementation supports tha Issue 4, Version 2 Shared Memory Option
Group. This symbol shall always be set ta a value other
than -1.
.TP 7
_XOPEN_STREAMS
Da implementation supports tha XSI STREAMS Option Group. 
.TP 7
_XOPEN_UNIX
.sp
Da implementation supports tha XSI extension. I aint talkin' bout chicken n' gravy biatch. 
.sp
.SS Execution-Time Symbolic Constants
.LP
If any of tha followin constants is not defined up in tha \fI<unistd.h>\fP
header, tha value shall vary dependin on the
file ta which it be applied.
.LP
If any of tha followin constants is defined ta have value -1 in
the \fI<unistd.h>\fP header, tha implementation shall
not provide tha option on any file; if any is defined ta git a value
other than -1 up in tha \fI<unistd.h>\fP header, the
implementation shall provide tha option on all applicable files.
.LP
All of tha followin constants, whether defined up in \fI<unistd.h>\fP
or not, may be queried wit respect ta a specific
file rockin tha \fIpathconf\fP() or \fIfpathconf\fP() functions:
.TP 7
_POSIX_ASYNC_IO
Asynchronous input or output operations may be performed fo' tha associated
file.
.TP 7
_POSIX_PRIO_IO
Prioritized input or output operations may be performed fo' tha associated
file.
.TP 7
_POSIX_SYNC_IO
Synchronized input or output operations may be performed fo' tha associated
file.
.sp
.SS Constants fo' Functions
.LP
Da followin symbolic constant shall be defined:
.TP 7
NULL
Null pointer
.sp
.LP
Da followin symbolic constants shall be defined fo' tha \fIaccess\fP()
function:
.TP 7
F_OK
Test fo' existence of file.
.TP 7
R_OK
Test fo' read permission.
.TP 7
W_OK
Test fo' write permission.
.TP 7
X_OK
Test fo' execute (search) permission.
.sp
.LP
Da constants F_OK, R_OK, W_OK, n' X_OK n' tha expressions \fIR_OK\fP|\fIW_OK\fP,
\fIR_OK\fP|\fIX_OK\fP, and
\fIR_OK\fP|\fIW_OK\fP|\fIX_OK\fP shall all have distinct joints.
.LP
Da followin symbolic constants shall be defined fo' tha \fIconfstr\fP()
function:
.TP 7
_CS_PATH
This is tha value fo' tha \fIPATH\fP environment variable dat finds
all standard utilities.
.TP 7
_CS_POSIX_V6_ILP32_OFF32_CFLAGS
If \fIsysconf\fP(_SC_V6_ILP32_OFF32) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
initial options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a
programmin model wit 32-bit \fBint\fP, \fBlong\fP, \fBpointer\fP,
and \fBoff_t\fP types.
.TP 7
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
If \fIsysconf\fP(_SC_V6_ILP32_OFF32) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
final options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP, \fBlong\fP, \fBpointer\fP, n' \fBoff_t\fP
types.
.TP 7
_CS_POSIX_V6_ILP32_OFF32_LIBS
If \fIsysconf\fP(_SC_V6_ILP32_OFF32) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
libraries ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP, \fBlong\fP, \fBpointer\fP, n' \fBoff_t\fP
types.
.TP 7
_CS_POSIX_V6_ILP32_OFSTDG_CFLAGS
If \fIsysconf\fP(_SC_V6_ILP32_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
initial options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a
programmin model wit 32-bit \fBint\fP, \fBlong\fP, n' \fBpointer\fP
types, n' a \fBoff_t\fP type rockin at least 64
bits.
.TP 7
_CS_POSIX_V6_ILP32_OFSTDG_LDFLAGS
If \fIsysconf\fP(_SC_V6_ILP32_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
final options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP, \fBlong\fP, n' \fBpointer\fP types,
and a \fBoff_t\fP type rockin at least 64 bits.
.TP 7
_CS_POSIX_V6_ILP32_OFSTDG_LIBS
If \fIsysconf\fP(_SC_V6_ILP32_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
libraries ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP, \fBlong\fP, n' \fBpointer\fP types,
and a \fBoff_t\fP type rockin at least 64 bits.
.TP 7
_CS_POSIX_V6_LP64_OFF64_CFLAGS
If \fIsysconf\fP(_SC_V6_LP64_OFF64) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
initial options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a
programmin model wit 32-bit \fBint\fP n' 64-bit \fBlong\fP, \fBpointer\fP,
and \fBoff_t\fP types.
.TP 7
_CS_POSIX_V6_LP64_OFF64_LDFLAGS
If \fIsysconf\fP(_SC_V6_LP64_OFF64) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
final options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP n' 64-bit \fBlong\fP, \fBpointer\fP,
and \fBoff_t\fP types.
.TP 7
_CS_POSIX_V6_LP64_OFF64_LIBS
If \fIsysconf\fP(_SC_V6_LP64_OFF64) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
libraries ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit 32-bit \fBint\fP n' 64-bit \fBlong\fP, \fBpointer\fP,
and \fBoff_t\fP types.
.TP 7
_CS_POSIX_V6_LPBIG_OFSTDG_CFLAGS
If \fIsysconf\fP(_SC_V6_LPBIG_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
initial options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a
programmin model wit a \fBint\fP type rockin at least 32 bits and
\fBlong\fP, \fBpointer\fP, n' \fBoff_t\fP types rockin at
least 64 bits.
.TP 7
_CS_POSIX_V6_LPBIG_OFSTDG_LDFLAGS
If \fIsysconf\fP(_SC_V6_LPBIG_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
final options ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit a \fBint\fP type rockin at least 32 bits n' \fBlong\fP,
\fBpointer\fP, n' \fBoff_t\fP types rockin at least 64
bits.
.TP 7
_CS_POSIX_V6_LPBIG_OFSTDG_LIBS
If \fIsysconf\fP(_SC_V6_LPBIG_OFSTDG) returns -1, tha meanin of this
value is unspecified. Y'all KNOW dat shit, muthafucka! Otherwise, dis value is tha set of
libraries ta be given ta tha \fIc99\fP utilitizzle ta build a application
usin a programming
model wit a \fBint\fP type rockin at least 32 bits n' \fBlong\fP,
\fBpointer\fP, n' \fBoff_t\fP types rockin at least 64
bits.
.TP 7
_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
This value be a <newline>-separated list of namez of programmin environments
supported by tha implementation up in which the
widthz of tha \fBblksize_t\fP, \fBcc_t\fP, \fBmode_t\fP, \fBnfds_t\fP,
\fBpid_t\fP, \fBptrdiff_t\fP, \fBsize_t\fP,
\fBspeed_t\fP, \fBssize_t\fP, \fBsuseconds_t\fP, \fBtcflag_t\fP, \fBuseconds_t\fP,
\fBwchar_t\fP, n' \fBwint_t\fP types are
no pimped outa than tha width of type \fBlong\fP.
.sp
.LP
Da followin symbolic constants is reserved fo' compatibilitizzle with
Issue 5:
.LP
.sp
_CS_XBS5_ILP32_OFF32_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFF32_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_ILP32_OFSTDG_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_LP64_OFF64_LINTFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_CFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LDFLAGS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LIBS (\fBLEGACY\fP)
.br
_CS_XBS5_LPBIG_OFSTDG_LINTFLAGS (\fBLEGACY\fP)
.br
.sp
.LP
Da followin symbolic constants shall be defined fo' tha \fIlseek\fP()
and \fIfcntl\fP() functions n' shall have distinct joints:
.TP 7
SEEK_CUR
Set file offset ta current plus \fIoffset\fP.
.TP 7
SEEK_END
Set file offset ta EOF plus \fIoffset\fP.
.TP 7
SEEK_SET
Set file offset ta \fIoffset\fP.
.sp
.LP
Da followin symbolic constants shall be defined as possible joints
for tha \fIfunction\fP argument ta tha \fIlockf\fP() function:
.TP 7
F_LOCK
Lock a section fo' exclusive use.
.TP 7
F_TEST
Test section fo' locks by other processes.
.TP 7
F_TLOCK
Test n' lock a section fo' exclusive use.
.TP 7
F_ULOCK
Unlock locked sections.
.sp
.LP
Da followin symbolic constants shall be defined fo' \fIpathconf\fP():
.LP
.sp
_PC_ALLOC_SIZE_MIN
.br
_PC_ASYNC_IO
.br
_PC_CHOWN_RESTRICTED
.br
_PC_FILESIZEBITS
.br
_PC_LINK_MAX
.br
_PC_MAX_CANON
.br
_PC_MAX_INPUT
.br
_PC_NAME_MAX
.br
_PC_NO_TRUNC
.br
_PC_PATH_MAX
.br
_PC_PIPE_BUF
.br
_PC_PRIO_IO
.br
_PC_REC_INCR_XFER_SIZE
.br
_PC_REC_MIN_XFER_SIZE
.br
_PC_REC_XFER_ALIGN
.br
_PC_SYMLINK_MAX
.br
_PC_SYNC_IO
.br
_PC_VDISABLE
.br
.LP
Da followin symbolic constants shall be defined fo' \fIsysconf\fP():
.LP
.sp
_SC_2_C_BIND
.br
_SC_2_C_DEV
.br
_SC_2_C_VERSION
.br
_SC_2_CHAR_TERM
.br
_SC_2_FORT_DEV
.br
_SC_2_FORT_RUN
.br
_SC_2_LOCALEDEF
.br
_SC_2_PBS
.br
_SC_2_PBS_ACCOUNTING
.br
_SC_2_PBS_CHECKPOINT
.br
_SC_2_PBS_LOCATE
.br
_SC_2_PBS_MESSAGE
.br
_SC_2_PBS_TRACK
.br
_SC_2_SW_DEV
.br
_SC_2_UPE
.br
_SC_2_VERSION
.br
_SC_ADVISORY_INFO
.br
_SC_ARG_MAX
.br
_SC_AIO_LISTIO_MAX
.br
_SC_AIO_MAX
.br
_SC_AIO_PRIO_DELTA_MAX
.br
_SC_ASYNCHRONOUS_IO
.br
_SC_ATEXIT_MAX
.br
_SC_BARRIERS
.br
_SC_BC_BASE_MAX
.br
_SC_BC_DIM_MAX
.br
_SC_BC_SCALE_MAX
.br
_SC_BC_STRING_MAX
.br
_SC_CHILD_MAX
.br
_SC_CLK_TCK
.br
_SC_CLOCK_SELECTION
.br
_SC_COLL_WEIGHTS_MAX
.br
_SC_CPUTIME
.br
_SC_DELAYTIMER_MAX
.br
_SC_EXPR_NEST_MAX
.br
_SC_FILE_LOCKING
.br
_SC_FSYNC
.br
_SC_GETGR_R_SIZE_MAX
.br
_SC_GETPW_R_SIZE_MAX
.br
_SC_HOST_NAME_MAX
.br
_SC_IOV_MAX
.br
_SC_IPV6
.br
_SC_JOB_CONTROL
.br
_SC_LINE_MAX
.br
_SC_LOGIN_NAME_MAX
.br
_SC_MAPPED_FILES
.br
_SC_MEMLOCK
.br
_SC_MEMLOCK_RANGE
.br
_SC_MEMORY_PROTECTION
.br
_SC_MESSAGE_PASSING
.br
_SC_MONOTONIC_CLOCK
.br
_SC_MQ_OPEN_MAX
.br
_SC_MQ_PRIO_MAX
.br
_SC_NGROUPS_MAX
.br
_SC_OPEN_MAX
.br
_SC_PAGE_SIZE
.br
_SC_PAGESIZE
.br
_SC_PRIORITIZED_IO
.br
_SC_PRIORITY_SCHEDULING
.br
_SC_RAW_SOCKETS
.br
_SC_RE_DUP_MAX
.br
_SC_READER_WRITER_LOCKS
.br
_SC_REALTIME_SIGNALS
.br
_SC_REGEXP
.br
_SC_RTSIG_MAX
.br
_SC_SAVED_IDS
.br
_SC_SEMAPHORES
.br
_SC_SEM_NSEMS_MAX
.br
_SC_SEM_VALUE_MAX
.br
_SC_SHARED_MEMORY_OBJECTS
.br
_SC_SHELL
.br
_SC_SIGQUEUE_MAX
.br
_SC_SPAWN
.br
_SC_SPIN_LOCKS
.br
_SC_SPORADIC_SERVER
.br
_SC_STREAM_MAX
.br
_SC_SYMLOOP_MAX
.br
_SC_SYNCHRONIZED_IO
.br
_SC_THREAD_ATTR_STACKADDR
.br
_SC_THREAD_ATTR_STACKSIZE
.br
_SC_THREAD_CPUTIME
.br
_SC_THREAD_DESTRUCTOR_ITERATIONS
.br
_SC_THREAD_KEYS_MAX
.br
_SC_THREAD_PRIO_INHERIT
.br
_SC_THREAD_PRIO_PROTECT
.br
_SC_THREAD_PRIORITY_SCHEDULING
.br
_SC_THREAD_PROCESS_SHARED
.br
_SC_THREAD_SAFE_FUNCTIONS
.br
_SC_THREAD_SPORADIC_SERVER
.br
_SC_THREAD_STACK_MIN
.br
_SC_THREAD_THREADS_MAX
.br
_SC_TIMEOUTS
.br
_SC_THREADS
.br
_SC_TIMER_MAX
.br
_SC_TIMERS
.br
_SC_TRACE
.br
_SC_TRACE_EVENT_FILTER
.br
_SC_TRACE_INHERIT
.br
_SC_TRACE_LOG
.br
_SC_TTY_NAME_MAX
.br
_SC_TYPED_MEMORY_OBJECTS
.br
_SC_TZNAME_MAX
.br
_SC_V6_ILP32_OFF32
.br
_SC_V6_ILP32_OFSTDG
.br
_SC_V6_LP64_OFF64
.br
_SC_V6_LPBIG_OFSTDG
.br
_SC_VERSION
.br
_SC_XBS5_ILP32_OFF32 (\fBLEGACY\fP)
.br
_SC_XBS5_ILP32_OFSTDG (\fBLEGACY\fP)
.br
_SC_XBS5_LP64_OFF64 (\fBLEGACY\fP)
.br
_SC_XBS5_LPBIG_OFSTDG (\fBLEGACY\fP)
.br
_SC_XOPEN_CRYPT
.br
_SC_XOPEN_ENH_I18N
.br
_SC_XOPEN_LEGACY
.br
_SC_XOPEN_REALTIME
.br
_SC_XOPEN_REALTIME_THREADS
.br
_SC_XOPEN_SHM
.br
_SC_XOPEN_STREAMS
.br
_SC_XOPEN_UNIX
.br
_SC_XOPEN_VERSION
.br
_SC_XOPEN_XCU_VERSION
.br
.LP
Da two constants _SC_PAGESIZE n' _SC_PAGE_SIZE may be defined to
have tha same value.
.LP
Da followin symbolic constants shall be defined fo' file streams:
.TP 7
STDERR_FILENO
File number of \fIstderr\fP; 2.
.TP 7
STDIN_FILENO
File number of \fIstdin\fP; 0.
.TP 7
STDOUT_FILENO
File number of \fIstdout\fP; 1.
.sp
.SS Type Definitions
.LP
Da \fBsize_t\fP, \fBssize_t\fP, \fBuid_t\fP, \fBgid_t\fP, \fBoff_t\fP,
\fBpid_t\fP, n' \fBuseconds_t\fP types shall be
defined as busted lyrics bout up in \fI<sys/types.h>\fP.
.LP
Da \fBintptr_t\fP type shall be defined as busted lyrics bout up in \fI<inttypes.h>\fP.
.SS Declarations
.LP
Da followin shall be declared as functions n' may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fBint          access(const char *, int);
unsigned     alarm(unsigned);
int          chdir(const char *);
int          chown(const char *, uid_t, gid_t);
int          close(int);
size_t       confstr(int, char *, size_t);
.sp


char        *crypt(const char *, const char *);
char        *ctermid(char *);

int          dup(int);
.sp

int          dup2(int, int);

void         encrypt(char[64], int);

int          execl(const char *, const char *, ...);
int          execle(const char *, const char *, ...);
int          execlp(const char *, const char *, ...);
int          execv(const char *, char *const []);
int          execve(const char *, char *const [], char *const []);
int          execvp(const char *, char *const []);
void        _exit(int);
int          fchown(int, uid_t, gid_t);

int          fchdir(int);


int          fdatasync(int);

pid_t        fork(void);
long         fpathconf(int, int);

int          fsync(int);

int          ftruncate(int, off_t);
char        *getcwd(char *, size_t);
gid_t        getegid(void);
uid_t        geteuid(void);
gid_t        getgid(void);
int          getgroups(int, gid_t []);

long         gethostid(void);

int          gethostname(char *, size_t);
char        *getlogin(void);
int          getlogin_r(char *, size_t);
int          getopt(int, char * const [], const char *);

pid_t        getpgid(pid_t);

pid_t        getpgrp(void);
pid_t        getpid(void);
pid_t        getppid(void);

pid_t        getsid(pid_t);

uid_t        getuid(void);

char        *getwd(char *); (\fP\fBLEGACY\fP \fB)

int          isatty(int);

int          lchown(const char *, uid_t, gid_t);

int          link(const char *, const char *);

int          lockf(int, int, off_t);

off_t        lseek(int, off_t, int);

int          nice(int);

long         pathconf(const char *, int);
int          pause(void);
int          pipe(int [2]);

ssize_t      pread(int, void *, size_t, off_t);
ssize_t      pwrite(int, const void *, size_t, off_t);

ssize_t      read(int, void *, size_t);
ssize_t      readlink(const char *restrict, char *restrict, size_t);
int          rmdir(const char *);
int          setegid(gid_t);
int          seteuid(uid_t);
int          setgid(gid_t);
.sp

int          setpgid(pid_t, pid_t);

pid_t        setpgrp(void);
int          setregid(gid_t, gid_t);
int          setreuid(uid_t, uid_t);

pid_t        setsid(void);
int          setuid(uid_t);
unsigned     chill(unsigned);

void         swab(const void *restrict, void *restrict, ssize_t);
int          symlink(const char *, const char *);
void         sync(void);

long         sysconf(int);
pid_t        tcgetpgrp(int);
int          tcsetpgrp(int, pid_t);

int          truncate(const char *, off_t);

char        *ttyname(int);
int          ttyname_r(int, char *, size_t);

useconds_t   ualarm(useconds_t, useconds_t);

int          unlink(const char *);

int          usleep(useconds_t);
pid_t        vfork(void);

ssize_t      write(int, const void *, size_t);
\fP
.fi
.RE
.LP
Implementations may also include tha \fIpthread_atfork\fP() prototype
as defined
in \fI<pthread.h>\fP .
.LP
Da followin external variablez shall be declared:
.sp
.RS
.nf

\fBextern char  *optarg;
extern int    optind, opterr, optopt;
\fP
.fi
.RE
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
IEEE\ Std\ 1003.1-2001 only raps bout tha behavior of systems that
claim conformizzle ta dat shit. But fuck dat shiznit yo, tha word on tha street is dat application
developers whoz ass wanna write applications dat adapt ta other versions
of IEEE\ Std\ 1003.1 (or ta systems dat do not
conform ta any POSIX standard) may find it useful ta code dem so
as ta conditionally compile different code dependin on tha value
of _POSIX_VERSION, fo' example:
.sp
.RS
.nf

\fB#if _POSIX_VERSION >= 200112L
/* Use tha newer function dat copes wit big-ass files. */
off_t pos=ftello(fp);
#else
/* Either dis be a oldschool version of POSIX, or _POSIX_VERSION is
   not even defined, so use tha traditionizzle function. I aint talkin' bout chicken n' gravy biatch. */
long pos=ftell(fp);
#endif
\fP
.fi
.RE
.LP
Earlier versionz of IEEE\ Std\ 1003.1 n' of tha Single UNIX Justification
can be identified by tha following
macros:
.TP 7
POSIX.1-1988 standard
_POSIX_VERSION==198808L
.TP 7
POSIX.1-1990 standard
_POSIX_VERSION==199009L
.TP 7
ISO\ POSIX-1:1996 standard
_POSIX_VERSION==199506L
.TP 7
Single UNIX Justification, Version 1
_XOPEN_UNIX n' _XOPEN_VERSION==4
.TP 7
Single UNIX Justification, Version 2
_XOPEN_UNIX n' _XOPEN_VERSION==500
.sp
.LP
IEEE\ Std\ 1003.1-2001 do not make any attempt ta define application
binary interaction wit tha underlyin operating
system. But fuck dat shiznit yo, tha word on tha street is dat application pimpers may find it useful ta query
_SC_VERSION at runtime via \fIsysconf\fP() ta determine whether the
current version of tha operatin system supports the
necessary functionalitizzle as up in tha followin program fragment:
.sp
.RS
.nf

\fBif (sysconf(_SC_VERSION) < 200112L) {
    fprintf(stderr, "POSIX.1-2001 system required, terminatin \\n");
    exit(1);
}
\fP
.fi
.RE
.LP
New applications should not use _XOPEN_SHM or _XOPEN_ENH_I18N.
.SH RATIONALE
.LP
As IEEE\ Std\ 1003.1-2001 evolved, certain options became sufficiently
standardized dat dat shiznit was concluded dat simply
requirin one of tha option chizzlez was simpla than retainin the
option. I aint talkin' bout chicken n' gravy biatch. But fuck dat shiznit yo, tha word on tha street is dat fo' backwards-compatibility, tha option flags
(with required constant joints) is retained.
.SS Version Test Macros
.LP
Da standard pimpers considered alterin tha definizzle of _POSIX_VERSION
and removin _SC_VERSION from tha justification of
\fIsysconf\fP() since tha utilitizzle ta a application was deemed by
some ta be minimal, and
since tha implementation of tha functionalitizzle is potentially problematic.
But fuck dat shiznit yo, tha word on tha street is dat they recognized dat support fo' existing
application binaries be a cold-ass lil concern ta manufacturers, application pimpers,
and tha playaz of implementations conformin to
IEEE\ Std\ 1003.1-2001.
.LP
While tha example rockin _SC_VERSION up in tha APPLICATION USAGE section
does not provide tha top billin degree of imaginable utility
to tha application pimper or user, it be arguably betta than a
\fBcore\fP file or some other equally obscure result. (It is
also possible fo' implementations ta encode n' recognize application
binaries compiled up in various POSIX.1-conformin environments,
and modify tha semantics of tha underlyin system ta conform ta the
expectationz of tha application.) For tha reasons outlined in
the precedin paragraphs n' up in tha APPLICATION USAGE section, the
standard pimpers erected ta retain tha _POSIX_VERSION and
_SC_VERSION functionality.
.SS Compile-Time Symbolic Constants fo' System-Wide Options
.LP
IEEE\ Std\ 1003.1-2001 now includes support up in certain areas fo' the
newly adopted policy governin options and
stubs.
.LP
This policy serves up flexibilitizzle fo' implementations up in how tha fuck they support
options. Well shiiiit, it also specifies how tha fuck conformin applications
can adapt ta different implementations dat support different sets
of options. Well shiiiit, it allows tha following:
.IP " 1." 4
If a implementation has no interest up in supportin a option, it do
not gotta provide anythang associated wit dat option
beyond tha announcement dat it do not support dat shit.
.LP
.IP " 2." 4
An implementation can support a partial or incompatible version of
an option (as a non-standard extension) as long as it do
not claim ta support tha option.
.LP
.IP " 3." 4
An application can determine whether tha option is supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. A strictly
conformin application must check dis announcement
mechanizzle before first rockin anythang associated wit tha option.
.LP
.LP
There be a blingin implication of dis policy. IEEE\ Std\ 1003.1-2001
cannot dictate tha behavior of intercourses
associated wit a option when tha implementation do not claim to
support tha option. I aint talkin' bout chicken n' gravy biatch. In particular, it cannot require dat a
function associated wit a unsupported option will fail if it do
not big-ass up as specified. Y'all KNOW dat shit, muthafucka! But fuck dat shiznit yo, tha word on tha street is dat dis policy do not prevent
a standard from requirin certain functions ta always be present,
but dat they shall always fail on some implementations. Da \fIsetpgid\fP()
function up in tha POSIX.1-1990 standard, fo' example, is considered
appropriate.
.LP
Da POSIX standardz include various options, n' tha C-language binding
support fo' a option implies dat tha implementation
must supply data types n' function intercourses fo' realz. An application must
be able ta discover whether tha implementation supports each
option.
.LP
Any application must consider tha followin three cases fo' each option:
.IP " 1." 4
Option never supported.
.LP
Da implementation advertises at compile time dat tha option will
never be supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In dis case, it aint necessary fo' the
implementation ta supply any of tha data types or function intercourses
that is provided only as part of tha option. I aint talkin' bout chicken n' gravy biatch. The
implementation might provide data types n' functions dat is similar
to dem defined by IEEE\ Std\ 1003.1-2001 yo, but
there is no guarantee fo' any particular behavior.
.LP
.IP " 2." 4
Option always supported.
.LP
Da implementation advertises at compile time dat tha option will
always be supported. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time. In dis case, all data types and
function intercourses shall be available n' shall operate as specified.
.LP
.IP " 3." 4
Option might or might not be supported.
.LP
Some implementations might not provide a mechanizzle ta specify support
of options at compile time. In addition, the
implementation might be unable or unwillin ta specify support or
non-support at compile time. In either case, any application that
might use tha option at runtime must be able ta compile n' execute.
Da implementation must provide, at compile time, all data
types n' function intercourses dat is necessary ta allow all dis bullshit. In
this thang, there must be a mechanizzle dat allows the
application ta query, at runtime, whether tha option is supported.
If tha application attempts ta use tha option when it is not
supported, tha result is unspecified unless explicitly specified otherwise
in IEEE\ Std\ 1003.1-2001.
.LP
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<inttypes.h>\fP, \fI<limits.h>\fP, \fI<sys/socket.h>\fP, \fI<sys/types.h>\fP,
\fI<termios.h>\fP, \fI<wctype.h>\fP, tha System Interfaces volume
of IEEE\ Std\ 1003.1-2001, \fIaccess\fP(), \fIalarm\fP(), \fIchdir\fP(),
\fIchown\fP(), \fIclose\fP(), \fIcrypt\fP(), \fIctermid\fP(), \fIdup\fP(),
\fIencrypt\fP(), \fIenviron\fP, \fIexec\fP, \fIexit\fP(), \fIfchdir\fP(),
\fIfchown\fP(), \fIfcntl\fP(), \fIfork\fP(), \fIfpathconf\fP(), \fIfsync\fP(),
\fIftruncate\fP(), \fIgetcwd\fP(), \fIgetegid\fP(), \fIgeteuid\fP(),
\fIgetgid\fP(), \fIgetgroups\fP(), \fIgethostid\fP(), \fIgethostname\fP(),
\fIgetlogin\fP(), \fIgetpgid\fP(), \fIgetpgrp\fP(), \fIgetpid\fP(),
\fIgetppid\fP(), \fIgetsid\fP(), \fIgetuid\fP(), \fIisatty\fP(), \fIlchown\fP(),
\fIlink\fP(), \fIlockf\fP(), \fIlseek\fP(), \fInice\fP(), \fIpathconf\fP(),
\fIpause\fP(), \fIpipe\fP(), \fIread\fP(), \fIreadlink\fP(), \fIrmdir\fP(),
\fIsetgid\fP(), \fIsetpgid\fP(), \fIsetpgrp\fP(), \fIsetregid\fP(),
\fIsetreuid\fP(), \fIsetsid\fP(), \fIsetuid\fP(), \fIsleep\fP(), \fIswab\fP(),
\fIsymlink\fP(), \fIsync\fP(), \fIsysconf\fP(), \fItcgetpgrp\fP(),
\fItcsetpgrp\fP(), \fItruncate\fP(), \fIttyname\fP(), \fIualarm\fP(),
\fIunlink\fP(), \fIusleep\fP(), \fIvfork\fP(), \fIwrite\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
