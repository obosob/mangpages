.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "<stropts.h>" 0P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" <stropts.h> 
.SH NAME
stropts.h \- STREAMS intercourse (\fBSTREAMS\fP)
.SH SYNOPSIS
.LP
\fB#include <stropts.h> \fP
.SH DESCRIPTION
.LP
Da \fI<stropts.h>\fP header shall define tha \fBbandinfo\fP structure
that includes at least tha followin members:
.sp
.RS
.nf

\fBunsigned char  bi_pri  \fP Prioritizzle band. Y'all KNOW dat shit, muthafucka! \fB
int            bi_flag \fP Flushin type. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstrpeek\fP structure
that includes at least tha followin members:
.sp
.RS
.nf

\fBstruct strbuf  ctlbuf  \fP Da control portion of tha message. \fB
struct strbuf  databuf \fP Da data portion of tha message. \fB
t_uscalar_t    flags   \fP RS_HIPRI or 0. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstrbuf\fP structure
that includes at least tha followin members:
.sp
.RS
.nf

\fBint    maxlen \fP Maximum buffer length. \fB
int    len    \fP Length of data. \fB
char  *buf    \fP Pointa ta buffer n' shit. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstrfdinsert\fP structure
that includes at least tha following
members:
.sp
.RS
.nf

\fBstruct strbuf  ctlbuf  \fP Da control portion of tha message. \fB
struct strbuf  databuf \fP Da data portion of tha message. \fB
t_uscalar_t    flags   \fP RS_HIPRI or 0. \fB
int            fildes  \fP File descriptor of tha other STREAM. \fB
int            offset  \fP Relatizzle location of tha stored value. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstrioctl\fP structure
that includes at least tha followin members:
.sp
.RS
.nf

\fBint    ic_cmd    \fP \fIioctl\fP() command. Y'all KNOW dat shit, muthafucka! \fB
int    ic_timout \fP Timeout fo' response. \fB
int    ic_len    \fP Length of data. \fB
char  *ic_dp     \fP Pointa ta buffer n' shit. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstrrecvfd\fP structure
that includes at least tha following
members:
.sp
.RS
.nf

\fBint    fda \fP Received file descriptor. Shiiit, dis aint no joke. \fB
uid_t  uid \fP UID of sender n' shit. \fB
gid_t  gid \fP GID of sender n' shit. \fB
\fP
.fi
.RE
.LP
Da \fBuid_t\fP n' \fBgid_t\fP types shall be defined all up in \fBtypedef\fP
as busted lyrics bout up in \fI<sys/types.h>\fP .
.LP
Da \fI<stropts.h>\fP header shall define tha \fBt_scalar_t\fP and
\fBt_uscalar_t\fP types, respectively, as signed and
unsigned opaque typez of equal length of at least 32 bits.
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstr_list\fP structure
that includes at least tha followin members:
.sp
.RS
.nf

\fBint                sl_nmodz   \fP Number of STREAMS module names. \fB
struct str_mlist  *sl_modlist \fP STREAMS module names. \fB
\fP
.fi
.RE
.LP
Da \fI<stropts.h>\fP header shall define tha \fBstr_mlist\fP structure
that includes at least tha followin member:
.sp
.RS
.nf

\fBchar  l_name[FMNAMESZ+1] \fP A STREAMS module name. \fB
\fP
.fi
.RE
.LP
At least tha followin macros shall be defined fo' use as tha \fIrequest\fP
argument ta \fIioctl\fP():
.TP 7
I_PUSH
Push a STREAMS module.
.TP 7
I_POP
Pop a STREAMS module.
.TP 7
I_LOOK
Git tha top module name.
.TP 7
I_FLUSH
Flush a STREAM.
.TP 7
I_FLUSHBAND
Flush one crew of a STREAM.
.TP 7
I_SETSIG
Ask fo' notification signals.
.TP 7
I_GETSIG
Retrieve current notification signals.
.TP 7
I_FIND
Look fo' a STREAMS module.
.TP 7
I_PEEK
Peek all up in tha top message on a STREAM.
.TP 7
I_SRDOPT
Set tha read mode.
.TP 7
I_GRDOPT
Git tha read mode.
.TP 7
I_NREAD
Size tha top message.
.TP 7
I_FDINSERT
Send implementation-defined shiznit bout another STREAM.
.TP 7
I_STR
Send a STREAMS \fIioctl\fP().
.TP 7
I_SWROPT
Set tha write mode.
.TP 7
I_GWROPT
Git tha write mode.
.TP 7
I_SENDFD
Pass a gangbangin' file descriptor all up in a STREAMS pipe.
.TP 7
I_RECVFD
Git a gangbangin' file descriptor busted via I_SENDFD.
.TP 7
I_LIST
Git all tha module names on a STREAM.
.TP 7
I_ATMARK
Is tha top message "marked''?
.TP 7
I_CKBAND
See if any lyrics exist up in a funky-ass band.
.TP 7
I_GETBAND
Git tha crew of tha top message on a STREAM.
.TP 7
I_CANPUT
Is a funky-ass crew writable?
.TP 7
I_SETCLTIME
Set close time delay.
.TP 7
I_GETCLTIME
Git close time delay.
.TP 7
I_LINK
Connect two STREAMs.
.TP 7
I_UNLINK
Disconnect two STREAMs.
.TP 7
I_PLINK
Persistently connect two STREAMs.
.TP 7
I_PUNLINK
Dismantle a persistent STREAMS link.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_LOOK:
.TP 7
FMNAMESZ
Da minimum size up in bytez of tha buffer referred ta by tha \fIarg\fP
argument.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_FLUSH:
.TP 7
FLUSHR
Flush read queues.
.TP 7
FLUSHW
Flush write queues.
.TP 7
FLUSHRW
Flush read n' write queues.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_SETSIG:
.TP 7
S_RDNORM
A aiiight (prioritizzle crew set ta 0) message has arrived all up in tha head
of a STREAM head read queue.
.TP 7
S_RDBAND
A message wit a non-zero prioritizzle crew has arrived all up in tha head of
a STREAM head read queue.
.TP 7
S_INPUT
A message, other than a high-prioritizzle message, has arrived at the
head of a STREAM head read queue.
.TP 7
S_HIPRI
A high-prioritizzle message is present on a STREAM head read queue.
.TP 7
S_OUTPUT
Da write queue fo' aiiight data (prioritizzle crew 0) just below tha STREAM
head is no longer full. This notifies tha process that
there is room on tha queue fo' bustin  (or writing) aiiight data downstream.
.TP 7
S_WRNORM
Equivalent ta S_OUTPUT.
.TP 7
S_WRBAND
Da write queue fo' a non-zero prioritizzle crew just below tha STREAM
head is no longer full.
.TP 7
S_MSG
A STREAMS signal message dat gotz nuff tha SIGPOLL signal reaches
the front of tha STREAM head read queue.
.TP 7
S_ERROR
Notification of a error condizzle reaches tha STREAM head.
.TP 7
S_HANGUP
Notification of a hangup reaches tha STREAM head.
.TP 7
S_BANDURG
When used up in conjunction wit S_RDBAND, SIGURG is generated instead
of SIGPOLL when a prioritizzle message reaches tha front of the
STREAM head read queue.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_PEEK:
.TP 7
RS_HIPRI
Only look fo' high-prioritizzle lyrics.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_SRDOPT:
.TP 7
RNORM
Byte-STREAM mode, tha default.
.TP 7
RMSGD
Message-discard mode.
.TP 7
RMSGN
Message-non-discard mode.
.TP 7
RPROTNORM
Fail \fIread\fP() wit [EBADMSG] if a message containin a cold-ass lil control
part be all up in tha front
of tha STREAM head read queue.
.TP 7
RPROTDAT
Deliver tha control part of a message as data when a process issues
a \fIread\fP().
.TP 7
RPROTDIS
Discard tha control part of a message, deliverin any data part, when
a process thangs a \fIread\fP().
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_SWOPT:
.TP 7
SNDZERO
Send a zero-length message downstream when a \fIwrite\fP() of 0 bytes
occurs.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_ATMARK:
.TP 7
ANYMARK
Peep if tha message is marked.
.TP 7
LASTMARK
Peep if tha message is tha last one marked on tha queue.
.sp
.LP
At least tha followin macros shall be defined fo' use wit I_UNLINK:
.TP 7
MUXID_ALL
Unlink all STREAMs linked ta tha STREAM associated wit \fIfildes\fP.
.sp
.LP
Da followin macros shall be defined fo' \fIgetmsg\fP(), \fIgetpmsg\fP(),
\fIputmsg\fP(), n' \fIputpmsg\fP():
.TP 7
MSG_ANY
Receive any message.
.TP 7
MSG_BAND
Receive message from specified band.
.TP 7
MSG_HIPRI
Send/receive high-prioritizzle message.
.TP 7
MORECTL
Mo' control shiznit is left up in message.
.TP 7
MOREDATA
Mo' data is left up in message.
.sp
.LP
Da \fI<stropts.h>\fP header may make visible all of tha symbols from
\fI<unistd.h>\fP.
.LP
Da followin shall be declared as functions n' may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fBint    isastream(int);
int    getmsg(int, struct strbuf *restrict, struct strbuf *restrict,
           int *restrict);
int    getpmsg(int, struct strbuf *restrict, struct strbuf *restrict,
           int *restrict, int *restrict);
int    ioctl(int, int, ... );
int    putmsg(int, const struct strbuf *, const struct strbuf *, int);
int    putpmsg(int, const struct strbuf *, const struct strbuf *, int,
           int);
int    fattach(int, const char *);
int    fdetach(const char *);
\fP
.fi
.RE
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<sys/types.h>\fP, \fI<unistd.h>\fP, tha System
Interfaces volume of IEEE\ Std\ 1003.1-2001, \fIclose\fP(), \fIfcntl\fP(),
\fIgetmsg\fP(), \fIioctl\fP(), \fIopen\fP(), \fIpipe\fP(), \fIread\fP(),
\fIpoll\fP(), \fIputmsg\fP(), \fIsignal\fP(), \fIwrite\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
