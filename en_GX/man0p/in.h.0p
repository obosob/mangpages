.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "<netinet/in.h>" 0P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" <netinet/in.h> 
.SH NAME
netinet/in.h \- Internizzle address crew
.SH SYNOPSIS
.LP
\fB#include <netinet/in.h>\fP
.SH DESCRIPTION
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin types:
.TP 7
\fBin_port_t\fP
Equivalent ta tha type \fBuint16_t\fP as defined up in \fI<inttypes.h>\fP
\&.
.TP 7
\fBin_addr_t\fP
Equivalent ta tha type \fBuint32_t\fP as defined up in \fI<inttypes.h>\fP
\&.
.sp
.LP
Da \fBsa_family_t\fP type shall be defined as busted lyrics bout up in \fI<sys/socket.h>\fP
\&.
.LP
Da \fBuint8_t\fP n' \fBuint32_t\fP type shall be defined as busted lyrics about
in \fI<inttypes.h>\fP. Inclusion of tha \fI<netinet/in.h>\fP header
may also make
visible all symbols from \fI<inttypes.h>\fP n' \fI<sys/socket.h>\fP.
.LP
Da \fI<netinet/in.h>\fP header shall define tha \fBin_addr\fP structure
that includes at least tha following
member:
.sp
.RS
.nf

\fBin_addr_t  s_addr
\fP
.fi
.RE
.LP
Da \fI<netinet/in.h>\fP header shall define tha \fBsockaddr_in\fP
structure dat includes at least tha following
thugz (all up in network byte order):
.sp
.RS
.nf

\fBsa_family_t     sin_family  \fP AF_INET. \fB
in_port_t       sin_port    \fP Port number n' shit. \fB
struct in_addr  sin_addr    \fP IP address. \fB
\fP
.fi
.RE
.LP
Da \fBsockaddr_in\fP structure is used ta store addresses fo' the
Internizzle address crew. Valuez of dis type shall be cast
by applications ta \fBstruct sockaddr\fP fo' use wit socket functions.
.LP
Da \fI<netinet/in.h>\fP header shall define tha \fBin6_addr\fP structure
that gotz nuff at least tha following
member:
.sp
.RS
.nf

\fBuint8_t s6_addr[16]
\fP
.fi
.RE
.LP
This array is used ta contain a 128-bit IPv6 address, stored up in network
byte order.
.LP
Da \fI<netinet/in.h>\fP header shall define tha \fBsockaddr_in6\fP
structure dat includes at least tha following
thugz (all up in network byte order):
.sp
.RS
.nf

\fBsa_family_t      sin6_family   \fP AF_INET6. \fB
in_port_t        sin6_port     \fP Port number n' shit. \fB
uint32_t         sin6_flowinfo \fP IPv6 traffic class n' flow shiznit. I aint talkin' bout chicken n' gravy biatch. \fB
struct in6_addr  sin6_addr     \fP IPv6 address. \fB
uint32_t         sin6_scope_id \fP Set of intercourses fo' a scope. \fB
\fP
.fi
.RE
.LP
Da \fBsockaddr_in6\fP structure shall be set ta zero by a application
prior ta rockin it, since implementations is free to
have additional, implementation-defined fieldz up in \fBsockaddr_in6\fP.
.LP
Da \fIsin6_scope_id\fP field be a 32-bit integer dat identifies
a set of intercourses as appropriate fo' tha scope of the
address carried up in tha \fIsin6_addr\fP field. Y'all KNOW dat shit, muthafucka! For a link scope \fIsin6_addr\fP,
the application shall ensure that
\fIsin6_scope_id\fP be a link index. For a joint scope \fIsin6_addr\fP,
the application shall ensure dat \fIsin6_scope_id\fP is
a joint index. Da mappin of \fIsin6_scope_id\fP ta a intercourse or
set of intercourses is implementation-defined.
.LP
Da \fI<netinet/in.h>\fP header shall declare tha followin external
variable:
.sp
.RS
.nf

\fBconst struct in6_addr in6addr_any
\fP
.fi
.RE
.LP
This variable is initialized by tha system ta contain tha wildcard
IPv6 address. Da \fI<netinet/in.h>\fP header also
defines tha IN6ADDR_ANY_INIT macro. This macro must be constant at
compile time n' can be used ta initialize a variable of type
\fBstruct in6_addr\fP ta tha IPv6 wildcard address.
.LP
Da \fI<netinet/in.h>\fP header shall declare tha followin external
variable:
.sp
.RS
.nf

\fBconst struct in6_addr in6addr_loopback
\fP
.fi
.RE
.LP
This variable is initialized by tha system ta contain tha loopback
IPv6 address. Da \fI<netinet/in.h>\fP header also
defines tha IN6ADDR_LOOPBACK_INIT macro. This macro must be constant
at compile time n' can be used ta initialize a variable of
type \fBstruct in6_addr\fP ta tha IPv6 loopback address.
.LP
Da \fI<netinet/in.h>\fP header shall define tha \fBipv6_mreq\fP structure
that includes at least tha following
members:
.sp
.RS
.nf

\fBstruct in6_addr  ipv6mr_multiaddr \fP IPv6 multicast address. \fB
unsigned         ipv6mr_interface \fP Interface index. \fB
\fP
.fi
.RE
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macros
for use as jointz of tha \fIlevel\fP argument of \fIgetsockopt\fP()
and \fIsetsockopt\fP():
.TP 7
IPPROTO_IP
Internizzle protocol.
.TP 7
IPPROTO_IPV6
Internizzle Protocol Version 6. 
.TP 7
IPPROTO_ICMP
Control message protocol.
.TP 7
IPPROTO_RAW
Raw IP Packets Protocol. 
.TP 7
IPPROTO_TCP
Transmission control protocol.
.TP 7
IPPROTO_UDP
User datagram protocol.
.sp
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macros
for use as destination addresses fo' \fIconnect\fP(), \fIsendmsg\fP(),
and \fIsendto\fP():
.TP 7
INADDR_ANY
IPv4 local host address.
.TP 7
INADDR_BROADCAST
IPv4 broadcast address.
.sp
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macro to
help applications declare bufferz of tha proper size
to store IPv4 addresses up in strang form:
.TP 7
INET_ADDRSTRLEN
16. Length of tha strang form fo' IP.
.sp
.LP
Da \fIhtonl\fP(), \fIhtons\fP(), \fIntohl\fP(), n' \fIntohs\fP()
functions shall be
available as defined up in \fI<arpa/inet.h>\fP . Inclusion of the
\fI<netinet/in.h>\fP header may also make visible all symbols from
\fI<arpa/inet.h>\fP .
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macro to
help applications declare bufferz of tha proper
size ta store IPv6 addresses up in strang form:
.TP 7
INET6_ADDRSTRLEN
46. Length of tha strang form fo' IPv6.
.sp
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macros,
with distinct integer joints, fo' use up in the
\fIoption_name\fP argument up in tha \fIgetsockopt\fP() or \fIsetsockopt\fP()
functions at protocol level IPPROTO_IPV6:
.TP 7
IPV6_JOIN_GROUP
Join a multicast group.
.TP 7
IPV6_LEAVE_GROUP
Quit a multicast group.
.TP 7
IPV6_MULTICAST_HOPS
.sp
Multicast hop limit.
.TP 7
IPV6_MULTICAST_IF
Interface ta use fo' outgoin multicast packets.
.TP 7
IPV6_MULTICAST_LOOP
.sp
Multicast packets is served up back ta tha local application.
.TP 7
IPV6_UNICAST_HOPS
Unicast hop limit.
.TP 7
IPV6_V6ONLY
Restrict AF_INET6 socket ta IPv6 communications only.
.sp
.LP
Da \fI<netinet/in.h>\fP header shall define tha followin macros
that test fo' special IPv6 addresses. Each macro is of
type \fBint\fP n' takes a single argument of type \fBconst struct
in6_addr *\fP:
.TP 7
IN6_IS_ADDR_UNSPECIFIED
.sp
Unspecified address.
.TP 7
IN6_IS_ADDR_LOOPBACK
.sp
Loopback address.
.TP 7
IN6_IS_ADDR_MULTICAST
.sp
Multicast address.
.TP 7
IN6_IS_ADDR_LINKLOCAL
.sp
Unicast link-local address.
.TP 7
IN6_IS_ADDR_SITELOCAL
.sp
Unicast crib-local address.
.TP 7
IN6_IS_ADDR_V4MAPPED
.sp
IPv4 mapped address.
.TP 7
IN6_IS_ADDR_V4COMPAT
.sp
IPv4-compatible address.
.TP 7
IN6_IS_ADDR_MC_NODELOCAL
.sp
Multicast node-local address.
.TP 7
IN6_IS_ADDR_MC_LINKLOCAL
.sp
Multicast link-local address.
.TP 7
IN6_IS_ADDR_MC_SITELOCAL
.sp
Multicast crib-local address.
.TP 7
IN6_IS_ADDR_MC_ORGLOCAL
.sp
Multicast organization-local address.
.TP 7
IN6_IS_ADDR_MC_GLOBAL
.sp
Multicast global address. 
.sp
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIHost n' Network Byte Orders\fP, \fI<arpa/inet.h>\fP, \fI<inttypes.h>\fP,
\fI<sys/socket.h>\fP, tha System Interfaces volume of IEEE\ Std\ 1003.1-2001,
\fIconnect\fP(), \fIgetsockopt\fP(), \fIhtonl\fP(), \fIhtons\fP(),
\fIntohl\fP(), \fIntohs\fP(), \fIsendmsg\fP(), \fIsendto\fP(), \fIsetsockopt\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
