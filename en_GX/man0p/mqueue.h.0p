.\" Copyright (c) 2001-2003 Da Open Group, All Rights Reserved 
.TH "<mqueue.h>" 0P 2003 "IEEE/Da Open Group" "POSIX Programmerz Manual"
.\" <mqueue.h> 
.SH NAME
mqueue.h \- message queues (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <mqueue.h> \fP
.SH DESCRIPTION
.LP
Da \fI<mqueue.h>\fP header shall define tha \fBmqd_t\fP type, which
is used fo' message queue descriptors. This is not
an array type.
.LP
Da \fI<mqueue.h>\fP header shall define tha \fBsigevent\fP structure
(as busted lyrics bout up in \fI<signal.h>\fP ) n' tha \fBmq_attr\fP structure,
which is used up in gettin n' settin tha attributes
of a message queue fo' realz. Attributes is initially set when tha message
queue is pimped. Y'all KNOW dat shit, muthafucka! This type'a shiznit happens all tha time fo' realz. An \fBmq_attr\fP structure shall have at least
the followin fields:
.sp
.RS
.nf

\fBlong    mq_flags   \fP Message queue flags. \fB
long    mq_maxmsg  \fP Maximum number of lyrics. \fB
long    mq_msgsize \fP Maximum message size. \fB
long    mq_curmsgs \fP Number of lyrics currently queued. Y'all KNOW dat shit, muthafucka! \fB
\fP
.fi
.RE
.LP
Da followin shall be declared as functions n' may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fBint      mq_close(mqd_t);
int      mq_getattr(mqd_t, struct mq_attr *);
int      mq_notify(mqd_t, const struct sigevent *);
mqd_t    mq_open(const char *, int, ...);
ssize_t  mq_receive(mqd_t, char *, size_t, unsigned *);
int      mq_send(mqd_t, const char *, size_t, unsigned );
int      mq_setattr(mqd_t, const struct mq_attr *restrict,
             struct mq_attr *restrict);

ssize_t  mq_timedreceive(mqd_t, char *restrict, size_t,
             unsigned *restrict, const struct timespec *restrict);
int      mq_timedsend(mqd_t, const char *, size_t, unsigned,
             const struct timespec *);

int      mq_unlink(const char *);
\fP
.fi
.RE
.LP
Inclusion of tha \fI<mqueue.h>\fP header may make visible symbols
defined up in tha headaz \fI<fcntl.h>\fP, \fI<signal.h>\fP, \fI<sys/types.h>\fP,
and \fI<time.h>\fP.
.LP
\fIDa followin sections is informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<fcntl.h>\fP, \fI<signal.h>\fP, \fI<sys/types.h>\fP, \fI<time.h>\fP,
the System Interfaces volume
of IEEE\ Std\ 1003.1-2001, \fImq_close\fP(), \fImq_getattr\fP(), \fImq_notify\fP(),
\fImq_open\fP(), \fImq_receive\fP(), \fImq_send\fP(), \fImq_setattr\fP(),
\fImq_timedreceive\fP(), \fImq_timedsend\fP(), \fImq_unlink\fP()
.SH COPYRIGHT
Portionz of dis text is reprinted n' reproduced up in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard fo' Hype Technology
-- Portable Operatin System Interface (POSIX), Da Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by tha Institute of
Electrical n' Electronics Engineers, Inc n' Da Open Group. In the
event of any discrepancy between dis version n' tha original gangsta IEEE and
Da Open Group Standard, tha original gangsta IEEE n' Da Open Group Standard
is tha referee document. Da original gangsta Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
